; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
?list_empty@@3QBUCX_DESC@@B DQ 0000000000000000H	; list_empty
	DD	00H
	ORG $+4
$SG115615 DB	'trace', 00H
?piecewise_construct@std@@3Upiecewise_construct_t@1@B	ORG $+1 ; std::piecewise_construct
	ORG $+1
$SG115616 DB	'debug', 00H
	ORG $+2
$SG115617 DB	'more', 00H
	ORG $+3
$SG115618 DB	'info', 00H
	ORG $+3
$SG115619 DB	'warn', 00H
	ORG $+3
$SG115620 DB	'error', 00H
	ORG $+2
$SG115622 DB	'cfr', 00H
$SG115623 DB	'vfr', 00H
$SG115624 DB	'forcecfr', 00H
	ORG $+3
$SG115626 DB	'swr', 00H
$SG115627 DB	'soxr', 00H
	ORG $+3
?HW_DECODE_LIST@@3QBUCodecMap@@B DD 01bH		; HW_DECODE_LIST
	DD	01H
	DD	0adH
	DD	02H
	DD	02H
	DD	04H
	DD	08bH
	DD	06H
	DD	0a7H
	DD	07H
	DD	046H
	DD	08H
$SG123972 DB	'auto', 00H
	ORG $+3
$SG123974 DB	'copy', 00H
	ORG $+3
$SG124099 DB	'.', 0aH, 00H
	ORG $+1
$SG124100 DB	' for ', 00H
	ORG $+2
$SG124227 DB	'srt', 00H
$SG124103 DB	'avcodec-58.dll', 00H
	ORG $+1
$SG124104 DB	'avformat-58.dll', 00H
$SG124105 DB	'avutil-56.dll', 00H
	ORG $+2
$SG124106 DB	'avfilter-7.dll', 00H
	ORG $+1
$SG124107 DB	'swresample-3.dll', 00H
	ORG $+3
$SG124228 DB	'ass', 00H
$SG124226 DB	'invalid', 00H
$SG124235 DB	'invalid', 00H
$SG124236 DB	'kigou', 00H
	ORG $+2
$SG124237 DB	'box', 00H
$SG124238 DB	'draw', 00H
	ORG $+3
$SG116320 DB	'all', 00H
$SG116321 DB	'cpu', 00H
$SG116331 DB	'mem', 00H
$SG116322 DB	'cpu_total', 00H
	ORG $+2
$SG116326 DB	'cpu_in', 00H
	ORG $+1
$SG116334 DB	'io', 00H
	ORG $+1
$SG116323 DB	'cpu_kernel', 00H
	ORG $+1
$SG116337 DB	'fps', 00H
$SG116324 DB	'cpu_main', 00H
	ORG $+3
$SG116342 DB	'gpu', 00H
$SG116325 DB	'cpu_enc', 00H
$SG116327 DB	'cpu_aud', 00H
$SG116328 DB	'cpu_aud_proc', 00H
	ORG $+3
$SG116329 DB	'cpu_aud_enc', 00H
$SG149329 DB	'%s', 00H
	ORG $+1
$SG116330 DB	'cpu_out', 00H
$SG116332 DB	'mem_private', 00H
$SG133593 DB	'Ip ', 00H
$SG116333 DB	'mem_virtual', 00H
$SG133596 DB	'It ', 00H
$SG116335 DB	'io_read', 00H
$SG116336 DB	'io_write', 00H
	ORG $+3
$SG116349 DB	'queue', 00H
	ORG $+2
$SG133598 DB	'Ib ', 00H
$SG116338 DB	'fps_avg', 00H
$SG116339 DB	'bitrate', 00H
$SG116340 DB	'bitrate_avg', 00H
$SG134733 DB	'-', 00H
	ORG $+2
$SG116341 DB	'frame_out', 00H
	ORG $+2
$SG134735 DB	'wb+', 00H
$SG116343 DB	'gpu_load', 00H
	ORG $+3
$SG134763 DB	'%d/%d', 00H
	ORG $+2
$SG135198 DB	'-', 00H
	ORG $+2
$SG116344 DB	'gpu_clock', 00H
	ORG $+2
$SG135200 DB	'wb', 00H
	ORG $+1
$SG116345 DB	'vee_load', 00H
	ORG $+3
$SG135436 DB	'FRAME', 0aH, 00H
	ORG $+1
$SG128426 DB	'vp8', 00H
$SG116346 DB	'ved_load', 00H
	ORG $+3
$SG135437 DB	'FRAME', 0aH, 00H
	ORG $+1
$SG128427 DB	'raw', 00H
$SG116347 DB	'pcie_load', 00H
	ORG $+2
$SG135438 DB	'FRAME', 0aH, 00H
	ORG $+1
$SG128429 DB	'CBR', 00H
$SG116348 DB	've_clock', 00H
	ORG $+3
$SG128424 DB	'mpeg2', 00H
	ORG $+2
$SG128430 DB	'VBR', 00H
$SG149328 DB	'invalid argument', 00H
	ORG $+7
$SG149333 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG149330 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xmemory', 00H
$SG133592 DB	'F%d:%d ', 00H
$SG149331 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H
	DB	'1', 00H, '0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H
$SG149332 DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+2
$SG149585 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xlocale', 00H
$SG133590 DB	'YUV4MPEG2 ', 00H
	ORG $+1
$SG128431 DB	'CQP', 00H
$SG133591 DB	'W%d H%d ', 00H
	ORG $+3
$SG128433 DB	'LA', 00H
	ORG $+1
$SG133599 DB	'A%d:%d ', 00H
$SG133600 DB	'C420mpeg2', 0aH, 00H
	ORG $+1
$SG128437 DB	'ICQ', 00H
$SG133601 DB	'C420mpeg2', 0aH, 00H
	ORG $+1
$SG128439 DB	'VCM', 00H
$SG133720 DB	'Closing...', 0aH, 00H
$SG128464 DB	'0', 00H
	ORG $+2
$SG133722 DB	'Closed file pointer.', 0aH, 00H
	ORG $+2
$SG133723 DB	'Closed.', 0aH, 00H
	ORG $+3
$SG128434 DB	'LA-EXT', 00H
	ORG $+1
$SG128465 DB	'1', 00H
	ORG $+2
$SG133764 DB	'bitstream', 00H
	ORG $+2
$SG128435 DB	'LA-HRD', 00H
	ORG $+1
$SG128466 DB	'2', 00H
	ORG $+2
$SG134727 DB	'output filename not set.', 0aH, 00H
	ORG $+2
$SG128436 DB	'LA-ICQ', 00H
	ORG $+1
$SG128467 DB	'3', 00H
	ORG $+2
$SG134730 DB	'no output for benchmark mode.', 0aH, 00H
	ORG $+1
$SG134734 DB	'using stdout', 0aH, 00H
	ORG $+2
$SG134738 DB	'failed to open output file "%s": %s', 0aH, 00H
	ORG $+3
$SG134739 DB	'Opened file "%s"', 0aH, 00H
	ORG $+2
$SG128448 DB	'main10', 00H
	ORG $+1
$SG128470 DB	'0', 00H
	ORG $+2
$SG134742 DB	'Added %d MB output buffer.', 0aH, 00H
$SG128471 DB	'1', 00H
	ORG $+2
$SG134746 DB	'h264_metadata', 00H
	ORG $+2
$SG134748 DB	'hevc_metadata', 00H
	ORG $+2
$SG134751 DB	'invalid codec to set metadata filter.', 0aH, 00H
	ORG $+1
$SG134752 DB	'start initialize %s filter...', 0aH, 00H
	ORG $+1
$SG134754 DB	'failed to find %s.', 0aH, 00H
$SG128472 DB	'2', 00H
	ORG $+2
$SG134757 DB	'failed to allocate memory for %s: %s.', 0aH, 00H
	ORG $+1
$SG134760 DB	'failed to copy parameter for %s: %s.', 0aH, 00H
	ORG $+2
$SG134764 DB	'sample_aspect_ratio', 00H
$SG128473 DB	'3', 00H
	ORG $+2
$SG134765 DB	'set sar %d:%d by %s filter', 0aH, 00H
$SG128475 DB	'8', 00H
	ORG $+2
$SG134768 DB	'video_format', 00H
	ORG $+3
$SG134769 DB	'set video_format %d by %s filter', 0aH, 00H
	ORG $+2
$SG128454 DB	'Simple', 00H
	ORG $+1
$SG128476 DB	'10', 00H
	ORG $+1
$SG134771 DB	'colour_primaries', 00H
	ORG $+3
$SG128459 DB	'Simple', 00H
	ORG $+1
$SG128484 DB	'it', 00H
	ORG $+1
$SG134772 DB	'set colorprim %d by %s filter', 0aH, 00H
	ORG $+1
$SG134774 DB	'transfer_characteristics', 00H
	ORG $+3
$SG128483 DB	'normal', 00H
	ORG $+1
$SG128485 DB	'bob', 00H
$SG134775 DB	'set transfer %d by %s filter', 0aH, 00H
	ORG $+2
$SG134777 DB	'matrix_coefficients', 00H
$SG128487 DB	'32', 00H
	ORG $+1
$SG134778 DB	'set matrix %d by %s filter', 0aH, 00H
$SG128490 DB	'41', 00H
	ORG $+1
$SG134780 DB	'chroma_sample_loc_type', 00H
	ORG $+1
$SG134781 DB	'set chromaloc %d by %s filter', 0aH, 00H
	ORG $+1
$SG134783 DB	'failed to set parameters for %s: %s.', 0aH, 00H
	ORG $+2
$SG134786 DB	'failed to init %s: %s.', 0aH, 00H
$SG134788 DB	'initialized %s filter', 0aH, 00H
	ORG $+1
$SG135140 DB	'Invalid call: WriteNextFrame', 0aH, 00H
	ORG $+2
$SG135149 DB	'failed to send packet to %s bitstream filter: %s.', 0aH, 00H
	ORG $+1
$SG128493 DB	'1', 00H
	ORG $+2
$SG135157 DB	'failed to run %s bitstream filter: %s.', 0aH, 00H
$SG135167 DB	'Unexpected HEVC header.', 0aH, 00H
	ORG $+3
$SG128489 DB	'repeat', 00H
	ORG $+1
$SG128494 DB	'1b', 00H
	ORG $+1
$SG135170 DB	'Error writing file.', 0aH, 'Not enough disk space!', 0aH
	DB	00H
$SG128495 DB	'1.1', 00H
$SG135178 DB	'yuv writer', 00H
	ORG $+1
$SG128496 DB	'1.2', 00H
$SG135199 DB	'using stdout', 0aH, 00H
	ORG $+2
$SG135203 DB	'failed to open file "%s": %s', 0aH, 00H
	ORG $+2
$SG135439 DB	'Error writing file.', 0aH, 'Not enough disk space!', 0aH
	DB	00H
$SG128497 DB	'1.3', 00H
$SG135445 DB	'Error writing file.', 0aH, 'Not enough disk space!', 0aH
	DB	00H
$SG128498 DB	'2', 00H
	ORG $+2
$SG135447 DB	'Error writing file.', 0aH, 'Not enough disk space!', 0aH
	DB	00H
$SG128499 DB	'2.1', 00H
$SG135451 DB	'Error writing file.', 0aH, 'Not enough disk space!', 0aH
	DB	00H
$SG128500 DB	'2.2', 00H
$SG135453 DB	'Error writing file.', 0aH, 'Not enough disk space!', 0aH
	DB	00H
$SG128501 DB	'3', 00H
	ORG $+2
$SG135460 DB	'Error writing file.', 0aH, 'Not enough disk space!', 0aH
	DB	00H
$SG128502 DB	'3.1', 00H
$SG135462 DB	'Error writing file.', 0aH, 'Not enough disk space!', 0aH
	DB	00H
$SG128503 DB	'3.2', 00H
$SG135466 DB	'Error writing file.', 0aH, 'Not enough disk space!', 0aH
	DB	00H
$SG128504 DB	'4', 00H
	ORG $+2
$SG135471 DB	'Error writing file.', 0aH, 'Not enough disk space!', 0aH
	DB	00H
$SG128422 DB	'h264', 00H
	ORG $+3
$SG128423 DB	'hevc', 00H
	ORG $+3
$SG128425 DB	'vc-1', 00H
	ORG $+3
$SG128432 DB	'AVBR', 00H
	ORG $+3
$SG128438 DB	'QVBR', 00H
	ORG $+7
?list_avc_profile@@3QBUCX_DESC@@B DQ FLAT:$SG128441	; list_avc_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG128442
	DD	042H
	ORG $+4
	DQ	FLAT:$SG128443
	DD	04dH
	ORG $+4
	DQ	FLAT:$SG128444
	DD	064H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG128441 DB	'auto', 00H
	ORG $+3
$SG128442 DB	'Baseline', 00H
	ORG $+3
$SG128443 DB	'Main', 00H
	ORG $+3
$SG128444 DB	'High', 00H
	ORG $+3
$SG128446 DB	'auto', 00H
	ORG $+7
?list_hevc_profile@@3QBUCX_DESC@@B DQ FLAT:$SG128446	; list_hevc_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG128447
	DD	01H
	ORG $+4
	DQ	FLAT:$SG128448
	DD	02H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG128447 DB	'main', 00H
	ORG $+3
$SG128450 DB	'main', 00H
	ORG $+3
$SG128451 DB	'high', 00H
	ORG $+3
$SG128453 DB	'auto', 00H
	ORG $+3
?list_mpeg2_profile@@3QBUCX_DESC@@B DQ FLAT:$SG128453	; list_mpeg2_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG128454
	DD	050H
	ORG $+4
	DQ	FLAT:$SG128455
	DD	040H
	ORG $+4
	DQ	FLAT:$SG128456
	DD	010H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG128455 DB	'Main', 00H
	ORG $+3
$SG128456 DB	'High', 00H
	ORG $+3
?list_vc1_profile@@3QBUCX_DESC@@B DQ FLAT:$SG128458	; list_vc1_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG128459
	DD	01H
	ORG $+4
	DQ	FLAT:$SG128460
	DD	05H
	ORG $+4
	DQ	FLAT:$SG128461
	DD	0dH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG128458 DB	'auto', 00H
	ORG $+3
$SG128460 DB	'Main', 00H
	ORG $+3
$SG128461 DB	'Advanced', 00H
	ORG $+7
?list_vp8_profile@@3QBUCX_DESC@@B DQ FLAT:$SG128463	; list_vp8_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG128464
	DD	01H
	ORG $+4
	DQ	FLAT:$SG128465
	DD	02H
	ORG $+4
	DQ	FLAT:$SG128466
	DD	03H
	ORG $+4
	DQ	FLAT:$SG128467
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG128463 DB	'auto', 00H
	ORG $+3
$SG128469 DB	'auto', 00H
	ORG $+3
?list_vp9_profile@@3QBUCX_DESC@@B DQ FLAT:$SG128469	; list_vp9_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG128470
	DD	01H
	ORG $+4
	DQ	FLAT:$SG128471
	DD	02H
	ORG $+4
	DQ	FLAT:$SG128472
	DD	03H
	ORG $+4
	DQ	FLAT:$SG128473
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG128478 DB	'progressive', 00H
$SG128505 DB	'4.1', 00H
$SG128479 DB	'interlaced(tff)', 00H
$SG128480 DB	'interlaced(bff)', 00H
$SG128482 DB	'none', 00H
	ORG $+3
$SG128488 DB	'2332', 00H
	ORG $+3
?list_avc_level@@3QBUCX_DESC@@B DQ FLAT:$SG128492	; list_avc_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG128493
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG128494
	DD	09H
	ORG $+4
	DQ	FLAT:$SG128495
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG128496
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG128497
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG128498
	DD	014H
	ORG $+4
	DQ	FLAT:$SG128499
	DD	015H
	ORG $+4
	DQ	FLAT:$SG128500
	DD	016H
	ORG $+4
	DQ	FLAT:$SG128501
	DD	01eH
	ORG $+4
	DQ	FLAT:$SG128502
	DD	01fH
	ORG $+4
	DQ	FLAT:$SG128503
	DD	020H
	ORG $+4
	DQ	FLAT:$SG128504
	DD	028H
	ORG $+4
	DQ	FLAT:$SG128505
	DD	029H
	ORG $+4
	DQ	FLAT:$SG128506
	DD	02aH
	ORG $+4
	DQ	FLAT:$SG128507
	DD	032H
	ORG $+4
	DQ	FLAT:$SG128508
	DD	033H
	ORG $+4
	DQ	FLAT:$SG128509
	DD	034H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG128492 DB	'auto', 00H
	ORG $+3
$SG128506 DB	'4.2', 00H
$SG128507 DB	'5', 00H
	ORG $+2
$SG128508 DB	'5.1', 00H
$SG128509 DB	'5.2', 00H
$SG128511 DB	'auto', 00H
	ORG $+3
?list_hevc_level@@3QBUCX_DESC@@B DQ FLAT:$SG128511	; list_hevc_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG128512
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG128513
	DD	014H
	ORG $+4
	DQ	FLAT:$SG128514
	DD	015H
	ORG $+4
	DQ	FLAT:$SG128515
	DD	01eH
	ORG $+4
	DQ	FLAT:$SG128516
	DD	01fH
	ORG $+4
	DQ	FLAT:$SG128517
	DD	028H
	ORG $+4
	DQ	FLAT:$SG128518
	DD	029H
	ORG $+4
	DQ	FLAT:$SG128519
	DD	032H
	ORG $+4
	DQ	FLAT:$SG128520
	DD	033H
	ORG $+4
	DQ	FLAT:$SG128521
	DD	034H
	ORG $+4
	DQ	FLAT:$SG128522
	DD	03cH
	ORG $+4
	DQ	FLAT:$SG128523
	DD	03dH
	ORG $+4
	DQ	FLAT:$SG128524
	DD	03eH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG128512 DB	'1', 00H
	ORG $+2
$SG128513 DB	'2', 00H
	ORG $+2
$SG128514 DB	'2.1', 00H
$SG128515 DB	'3', 00H
	ORG $+2
$SG128516 DB	'3.1', 00H
$SG128517 DB	'4', 00H
	ORG $+2
$SG128518 DB	'4.1', 00H
$SG128519 DB	'5', 00H
	ORG $+2
$SG128520 DB	'5.1', 00H
$SG128521 DB	'5.2', 00H
$SG128522 DB	'6', 00H
	ORG $+2
$SG128523 DB	'6.1', 00H
$SG128524 DB	'6.2', 00H
$SG128526 DB	'auto', 00H
	ORG $+7
?list_mpeg2_level@@3QBUCX_DESC@@B DQ FLAT:$SG128526	; list_mpeg2_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG128527
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG128528
	DD	08H
	ORG $+4
	DQ	FLAT:$SG128529
	DD	04H
	ORG $+4
	DQ	FLAT:$SG128530
	DD	06H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG128527 DB	'low', 00H
$SG128528 DB	'main', 00H
	ORG $+3
$SG128529 DB	'high', 00H
	ORG $+3
$SG128533 DB	'low', 00H
$SG128530 DB	'high1440', 00H
	ORG $+3
$SG128532 DB	'auto', 00H
	ORG $+7
?list_vc1_level@@3QBUCX_DESC@@B DQ FLAT:$SG128532	; list_vc1_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG128533
	DD	01H
	ORG $+4
	DQ	FLAT:$SG128534
	DD	03H
	ORG $+4
	DQ	FLAT:$SG128535
	DD	05H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG128534 DB	'median', 00H
	ORG $+1
$SG128535 DB	'high', 00H
	ORG $+3
$SG128537 DB	'auto', 00H
	ORG $+3
$SG128538 DB	'0', 00H
	ORG $+2
$SG128539 DB	'1', 00H
	ORG $+2
$SG128540 DB	'2', 00H
	ORG $+2
$SG128541 DB	'3', 00H
	ORG $+2
$SG128542 DB	'4', 00H
	ORG $+2
$SG128549 DB	'off', 00H
?list_vp8_level@@3QBUCX_DESC@@B DQ FLAT:$SG128544	; list_vp8_level
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG128544 DB	'auto', 00H
	ORG $+3
?list_vp9_level@@3QBUCX_DESC@@B DQ FLAT:$SG128546	; list_vp9_level
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG128546 DB	'auto', 00H
	ORG $+3
$SG128548 DB	'Auto', 00H
	ORG $+3
$SG128550 DB	'for I frames', 00H
	ORG $+3
$SG128551 DB	'for I,P frames', 00H
	ORG $+1
$SG128552 DB	'for All frames', 00H
	ORG $+1
$SG128554 DB	'auto', 00H
	ORG $+3
$SG128555 DB	'off', 00H
$SG128556 DB	'i', 00H
	ORG $+2
$SG128557 DB	'ip', 00H
	ORG $+1
$SG128558 DB	'all', 00H
$SG128559 DB	'ipb', 00H
$SG128560 DB	'ib', 00H
	ORG $+1
$SG128561 DB	'p', 00H
	ORG $+2
$SG128562 DB	'pb', 00H
	ORG $+1
$SG128563 DB	'b', 00H
	ORG $+2
$SG128565 DB	'auto', 00H
	ORG $+3
$SG128566 DB	'slow', 00H
	ORG $+3
$SG128567 DB	'medium', 00H
	ORG $+1
$SG128568 DB	'fast', 00H
	ORG $+3
$SG128571 DB	'0', 00H
	ORG $+2
$SG128570 DB	'default', 00H
$SG128572 DB	'1', 00H
	ORG $+2
$SG128573 DB	'2', 00H
	ORG $+2
$SG128574 DB	'3', 00H
	ORG $+2
$SG128575 DB	'4', 00H
	ORG $+2
$SG128577 DB	'low', 00H
$SG128578 DB	'normal', 00H
	ORG $+1
$SG128579 DB	'high', 00H
	ORG $+3
$SG128591 DB	'none', 00H
	ORG $+3
$SG128592 DB	'copy', 00H
	ORG $+3
$SG128593 DB	'aac', 00H
$SG128594 DB	'libmp3lame', 00H
	ORG $+1
$SG128599 DB	'ac3', 00H
$SG128595 DB	'libtwolame', 00H
	ORG $+1
$SG128630 DB	'tff', 00H
$SG128596 DB	'libvorbis', 00H
	ORG $+2
$SG128631 DB	'bff', 00H
$SG128597 DB	'pcm_s16le', 00H
	ORG $+2
$SG128642 DB	'higher', 00H
	ORG $+1
$SG128656 DB	'8x8', 00H
$SG128598 DB	'libopus', 00H
$SG128629 DB	'none', 00H
	ORG $+3
$SG128633 DB	' 1 - best quality', 00H
	ORG $+2
$SG128646 DB	'faster', 00H
	ORG $+1
$SG128657 DB	'4x4', 00H
$SG128634 DB	' 2 - higher', 00H
$SG128660 DB	'16', 00H
	ORG $+1
$SG128635 DB	' 3 - high quality', 00H
	ORG $+2
$SG128661 DB	'32', 00H
	ORG $+1
$SG128636 DB	' 4 - balanced', 00H
	ORG $+2
$SG128637 DB	' 5 - fast', 00H
	ORG $+2
$SG128662 DB	'64', 00H
	ORG $+1
$SG128638 DB	' 6 - faster', 00H
$SG128670 DB	'all', 00H
$SG128639 DB	' 7 - fastest', 00H
	ORG $+3
$SG128641 DB	'best', 00H
	ORG $+3
$SG128643 DB	'high', 00H
	ORG $+3
$SG128644 DB	'balanced', 00H
	ORG $+3
$SG128645 DB	'fast', 00H
	ORG $+3
$SG128652 DB	'Q-pel', 00H
	ORG $+2
$SG128669 DB	'chroma', 00H
	ORG $+1
$SG128674 DB	'box', 00H
$SG128647 DB	'fastest', 00H
$SG128649 DB	'Auto', 00H
	ORG $+3
$SG128650 DB	'full-pel', 00H
	ORG $+3
$SG128655 DB	'16x16', 00H
	ORG $+2
$SG128676 DB	'off', 00H
$SG128651 DB	'half-pel', 00H
	ORG $+3
$SG128654 DB	'Auto', 00H
	ORG $+3
$SG128659 DB	'auto', 00H
	ORG $+3
$SG128666 DB	'auto', 00H
	ORG $+3
$SG128667 DB	'none', 00H
	ORG $+3
$SG128668 DB	'luma', 00H
	ORG $+3
$SG128672 DB	'none', 00H
	ORG $+3
$SG128677 DB	'x2', 00H
	ORG $+1
$SG128673 DB	'upscale', 00H
$SG128678 DB	'x2.5', 00H
	ORG $+3
$SG128680 DB	'simple', 00H
	ORG $+1
$SG128681 DB	'complex', 00H
$SG128683 DB	'0', 00H
	ORG $+2
$SG128684 DB	'90', 00H
	ORG $+1
$SG128685 DB	'180', 00H
$SG128686 DB	'270', 00H
$SG128688 DB	'n', 00H
	ORG $+2
$SG128689 DB	'h', 00H
	ORG $+2
$SG128690 DB	'v', 00H
	ORG $+2
$SG128692 DB	'auto', 00H
	ORG $+3
$SG128693 DB	'simple', 00H
	ORG $+1
$SG128694 DB	'fine', 00H
	ORG $+3
$SG128696 DB	'auto', 00H
	ORG $+3
$SG128697 DB	'none', 00H
	ORG $+3
$SG128698 DB	'sse2', 00H
	ORG $+3
$SG128699 DB	'sse3', 00H
	ORG $+3
$SG128700 DB	'ssse3', 00H
	ORG $+2
$SG128701 DB	'sse41', 00H
	ORG $+2
$SG128702 DB	'avx', 00H
$SG128703 DB	'avx2', 00H
	ORG $+3
$SG112610 DB	'Invalid', 00H
$SG112611 DB	'nv12', 00H
	ORG $+3
$SG112612 DB	'yv12', 00H
	ORG $+3
$SG112613 DB	'yuy2', 00H
	ORG $+3
$SG112614 DB	'yuv422', 00H
	ORG $+1
$SG112615 DB	'nv16', 00H
	ORG $+3
$SG112616 DB	'yuv444', 00H
	ORG $+1
$SG112617 DB	'yv12(9bit)', 00H
	ORG $+1
$SG112642 DB	'rgb', 00H
$SG112618 DB	'yv12(10bit)', 00H
$SG112644 DB	'gbr', 00H
$SG112619 DB	'yv12(12bit)', 00H
$SG112647 DB	'y8', 00H
	ORG $+1
$SG112620 DB	'yv12(14bit)', 00H
$SG129095 DB	'%s', 00H
	ORG $+1
$SG112621 DB	'yv12(16bit)', 00H
$SG112622 DB	'p010', 00H
	ORG $+3
$SG112636 DB	'rgb24r', 00H
	ORG $+1
$SG113592 DB	'VP8', 00H
$SG112623 DB	'yuv422(9bit)', 00H
	ORG $+3
$SG112624 DB	'yuv422(10bit)', 00H
	ORG $+2
$SG112625 DB	'yuv422(12bit)', 00H
	ORG $+2
$SG112626 DB	'yuv422(14bit)', 00H
	ORG $+2
$SG112627 DB	'yuv422(16bit)', 00H
	ORG $+2
$SG112628 DB	'p210', 00H
	ORG $+3
$SG112629 DB	'yuv444(9bit)', 00H
	ORG $+3
$SG112630 DB	'yuv444(10bit)', 00H
	ORG $+2
$SG112631 DB	'yuv444(12bit)', 00H
	ORG $+2
$SG112632 DB	'yuv444(14bit)', 00H
	ORG $+2
$SG112633 DB	'yuv444(16bit)', 00H
	ORG $+2
$SG112634 DB	'yuva444', 00H
$SG112635 DB	'yuva444(16bit)', 00H
	ORG $+1
$SG112637 DB	'rgb32r', 00H
	ORG $+1
$SG112638 DB	'rgb24', 00H
	ORG $+2
$SG112639 DB	'rgb32', 00H
	ORG $+2
$SG112640 DB	'bgr24', 00H
	ORG $+2
$SG112641 DB	'bgr32', 00H
	ORG $+2
$SG112643 DB	'rgba', 00H
	ORG $+3
$SG112645 DB	'gbra', 00H
	ORG $+3
$SG112646 DB	'yc48', 00H
	ORG $+3
$SG112648 DB	'yc16', 00H
	ORG $+3
$SG113580 DB	'H.264/AVC', 00H
	ORG $+2
$SG113594 DB	'VP9', 00H
$SG113582 DB	'H.265/HEVC', 00H
	ORG $+1
$SG113584 DB	'MPEG2', 00H
	ORG $+2
$SG113586 DB	'MPEG1', 00H
	ORG $+2
$SG113588 DB	'VC-1', 00H
	ORG $+3
$SG113590 DB	'MPEG4', 00H
	ORG $+2
$SG114205 DB	'fcc', 00H
$SG113596 DB	'unknown', 00H
$SG113703 DB	'unknown', 00H
$SG114198 DB	'undef', 00H
	ORG $+2
?list_colormatrix@@3QBUCX_DESC@@B DQ FLAT:$SG114198	; list_colormatrix
	DD	02H
	ORG $+4
	DQ	FLAT:$SG114199
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG114200
	DD	01H
	ORG $+4
	DQ	FLAT:$SG114201
	DD	06H
	ORG $+4
	DQ	FLAT:$SG114202
	DD	05H
	ORG $+4
	DQ	FLAT:$SG114203
	DD	07H
	ORG $+4
	DQ	FLAT:$SG114204
	DD	08H
	ORG $+4
	DQ	FLAT:$SG114205
	DD	04H
	ORG $+4
	DQ	FLAT:$SG114206
	DD	00H
	ORG $+4
	DQ	FLAT:$SG114207
	DD	09H
	ORG $+4
	DQ	FLAT:$SG114208
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG114209
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG114210
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG114211
	DD	0eH
	ORG $+4
	DQ	FLAT:$SG114212
	DD	0fH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG114199 DB	'auto', 00H
	ORG $+3
$SG114200 DB	'bt709', 00H
	ORG $+2
$SG114201 DB	'smpte170m', 00H
	ORG $+2
$SG114206 DB	'GBR', 00H
$SG114202 DB	'bt470bg', 00H
$SG114203 DB	'smpte240m', 00H
	ORG $+2
$SG114204 DB	'YCgCo', 00H
	ORG $+2
$SG114357 DB	'bt470m', 00H
	ORG $+1
$SG114519 DB	'pal', 00H
$SG114207 DB	'bt2020nc', 00H
	ORG $+3
$SG114211 DB	'ictco', 00H
	ORG $+2
$SG114360 DB	'linear', 00H
	ORG $+1
$SG114521 DB	'mac', 00H
$SG114208 DB	'bt2020c', 00H
$SG114209 DB	'derived-ncl', 00H
$SG114523 DB	'0', 00H
	ORG $+2
$SG114210 DB	'derived-cl', 00H
	ORG $+1
$SG114524 DB	'1', 00H
	ORG $+2
$SG114212 DB	'2100-lms', 00H
	ORG $+7
?list_transfer@@3QBUCX_DESC@@B DQ FLAT:$SG114353	; list_transfer
	DD	02H
	ORG $+4
	DQ	FLAT:$SG114354
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG114355
	DD	01H
	ORG $+4
	DQ	FLAT:$SG114356
	DD	06H
	ORG $+4
	DQ	FLAT:$SG114357
	DD	04H
	ORG $+4
	DQ	FLAT:$SG114358
	DD	05H
	ORG $+4
	DQ	FLAT:$SG114359
	DD	07H
	ORG $+4
	DQ	FLAT:$SG114360
	DD	08H
	ORG $+4
	DQ	FLAT:$SG114361
	DD	09H
	ORG $+4
	DQ	FLAT:$SG114362
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG114363
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG114364
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG114365
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG114366
	DD	0eH
	ORG $+4
	DQ	FLAT:$SG114367
	DD	0fH
	ORG $+4
	DQ	FLAT:$SG114368
	DD	010H
	ORG $+4
	DQ	FLAT:$SG114369
	DD	011H
	ORG $+4
	DQ	FLAT:$SG114370
	DD	012H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG114353 DB	'undef', 00H
	ORG $+2
$SG114354 DB	'auto', 00H
	ORG $+3
$SG114355 DB	'bt709', 00H
	ORG $+2
$SG114356 DB	'smpte170m', 00H
	ORG $+2
$SG114361 DB	'log100', 00H
	ORG $+1
$SG114525 DB	'2', 00H
	ORG $+2
$SG114358 DB	'bt470bg', 00H
$SG114359 DB	'smpte240m', 00H
	ORG $+2
$SG114362 DB	'log316', 00H
	ORG $+1
$SG114526 DB	'3', 00H
	ORG $+2
$SG114363 DB	'iec61966-2-4', 00H
	ORG $+3
$SG114364 DB	'bt1361e', 00H
$SG114365 DB	'iec61966-2-1', 00H
	ORG $+3
$SG114366 DB	'bt2020-10', 00H
	ORG $+2
$SG114506 DB	'bt470m', 00H
	ORG $+1
$SG114527 DB	'4', 00H
	ORG $+2
$SG114367 DB	'bt2020-12', 00H
	ORG $+2
$SG114510 DB	'bt2020', 00H
	ORG $+1
$SG114528 DB	'5', 00H
	ORG $+2
$SG114368 DB	'smpte2084', 00H
	ORG $+2
$SG114532 DB	'tv', 00H
	ORG $+1
$SG114369 DB	'smpte428', 00H
	ORG $+3
$SG114502 DB	'undef', 00H
	ORG $+2
$SG114533 DB	'pc', 00H
	ORG $+1
$SG114370 DB	'arib-srd-b67', 00H
	ORG $+3
?list_colorprim@@3QBUCX_DESC@@B DQ FLAT:$SG114502	; list_colorprim
	DD	02H
	ORG $+4
	DQ	FLAT:$SG114503
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG114504
	DD	01H
	ORG $+4
	DQ	FLAT:$SG114505
	DD	06H
	ORG $+4
	DQ	FLAT:$SG114506
	DD	04H
	ORG $+4
	DQ	FLAT:$SG114507
	DD	05H
	ORG $+4
	DQ	FLAT:$SG114508
	DD	07H
	ORG $+4
	DQ	FLAT:$SG114509
	DD	08H
	ORG $+4
	DQ	FLAT:$SG114510
	DD	09H
	ORG $+4
	DQ	FLAT:$SG114511
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG114512
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG114513
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG114514
	DD	0dH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG114503 DB	'auto', 00H
	ORG $+3
$SG114504 DB	'bt709', 00H
	ORG $+2
$SG114505 DB	'smpte170m', 00H
	ORG $+6
$SG114507 DB	'bt470bg', 00H
$SG114508 DB	'smpte240m', 00H
	ORG $+2
$SG114509 DB	'film', 00H
	ORG $+3
$SG114511 DB	'st428', 00H
	ORG $+6
$SG114512 DB	'st431-2', 00H
$SG114513 DB	'st432-1', 00H
$SG114514 DB	'ebu3213-e', 00H
	ORG $+2
$SG114516 DB	'undef', 00H
	ORG $+6
?list_videoformat@@3QBUCX_DESC@@B DQ FLAT:$SG114516	; list_videoformat
	DD	05H
	ORG $+4
	DQ	FLAT:$SG114517
	DD	02H
	ORG $+4
	DQ	FLAT:$SG114518
	DD	00H
	ORG $+4
	DQ	FLAT:$SG114519
	DD	01H
	ORG $+4
	DQ	FLAT:$SG114520
	DD	03H
	ORG $+4
	DQ	FLAT:$SG114521
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG114517 DB	'ntsc', 00H
	ORG $+3
$SG114518 DB	'component', 00H
	ORG $+2
$SG114520 DB	'secam', 00H
	ORG $+6
$SG114530 DB	'limited', 00H
$SG114531 DB	'full', 00H
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	__local_stdio_printf_options
PUBLIC	_vsprintf_s_l
PUBLIC	vsprintf_s
PUBLIC	_vscprintf_l
PUBLIC	_vscprintf
PUBLIC	sprintf_s
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??$_Convert_size@_K@std@@YA_K_K@Z		; std::_Convert_size<unsigned __int64>
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators
PUBLIC	??0_Iterator_base12@std@@QEAA@XZ		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QEAA@AEBU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??1_Iterator_base12@std@@QEAA@XZ		; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QEAAXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	?_Decref@_Ref_count_base@std@@QEAAXXZ		; std::_Ref_count_base::_Decref
PUBLIC	?_Decwref@_Ref_count_base@std@@QEAAXXZ		; std::_Ref_count_base::_Decwref
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
PUBLIC	?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy
PUBLIC	?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	??0?$allocator@D@std@@QEAA@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z	; std::allocator<char>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
PUBLIC	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
PUBLIC	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
PUBLIC	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Become_small
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	_tcscmp
PUBLIC	??Raligned_malloc_deleter@@QEBAXPEAX@Z		; aligned_malloc_deleter::operator()
PUBLIC	??Rmalloc_deleter@@QEBAXPEAX@Z			; malloc_deleter::operator()
PUBLIC	??Rfp_deleter@@QEBAXPEAU_iobuf@@@Z		; fp_deleter::operator()
PUBLIC	??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
PUBLIC	??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
PUBLIC	??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
PUBLIC	??0VideoVUIInfo@@QEAA@XZ			; VideoVUIInfo::VideoVUIInfo
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0VideoInfo@@QEAA@XZ				; VideoInfo::VideoInfo
PUBLIC	??$min@_K@std@@YAAEB_KAEB_K0@Z			; std::min<unsigned __int64>
PUBLIC	?getLogLevel@RGYLog@@QEAAHXZ			; RGYLog::getLogLevel
PUBLIC	?get@?$_Ptr_base@VEncodeStatus@@@std@@IEBAPEAVEncodeStatus@@XZ ; std::_Ptr_base<EncodeStatus>::get
PUBLIC	??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ	; std::_Ptr_base<EncodeStatus>::_Ptr_base<EncodeStatus>
PUBLIC	?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ ; std::_Ptr_base<EncodeStatus>::_Decref
PUBLIC	?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z ; std::_Ptr_base<EncodeStatus>::_Swap
PUBLIC	??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ	; std::shared_ptr<EncodeStatus>::shared_ptr<EncodeStatus>
PUBLIC	??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ	; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
PUBLIC	?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z ; std::shared_ptr<EncodeStatus>::swap
PUBLIC	?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ ; std::shared_ptr<EncodeStatus>::reset
PUBLIC	??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ ; std::unique_ptr<_iobuf,fp_deleter>::~unique_ptr<_iobuf,fp_deleter>
PUBLIC	?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ ; std::unique_ptr<_iobuf,fp_deleter>::get
PUBLIC	??B?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBA_NXZ ; std::unique_ptr<_iobuf,fp_deleter>::operator bool
PUBLIC	?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z ; std::unique_ptr<_iobuf,fp_deleter>::reset
PUBLIC	?_Get_first@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAAAEAUfp_deleter@@XZ ; std::_Compressed_pair<fp_deleter,_iobuf *,1>::_Get_first
PUBLIC	?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ ; std::_Ptr_base<RGYLog>::get
PUBLIC	??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ		; std::_Ptr_base<RGYLog>::_Ptr_base<RGYLog>
PUBLIC	?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ	; std::_Ptr_base<RGYLog>::_Decref
PUBLIC	?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z ; std::_Ptr_base<RGYLog>::_Swap
PUBLIC	??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ		; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>
PUBLIC	??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ		; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
PUBLIC	?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z ; std::shared_ptr<RGYLog>::swap
PUBLIC	?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ	; std::shared_ptr<RGYLog>::reset
PUBLIC	?SetOutputData@EncodeStatus@@QEAAXW4RGY_FRAMETYPE@@_KI@Z ; EncodeStatus::SetOutputData
PUBLIC	??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
PUBLIC	?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
PUBLIC	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?_Unchecked_begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unchecked_end
PUBLIC	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
PUBLIC	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
PUBLIC	?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first
PUBLIC	?data@RGYBitstream@@QEBAPEAEXZ			; RGYBitstream::data
PUBLIC	?frametype@RGYBitstream@@QEBA?AW4RGY_FRAMETYPE@@XZ ; RGYBitstream::frametype
PUBLIC	?size@RGYBitstream@@QEBA_KXZ			; RGYBitstream::size
PUBLIC	?setSize@RGYBitstream@@QEAAX_K@Z		; RGYBitstream::setSize
PUBLIC	?bufsize@RGYBitstream@@QEBA_KXZ			; RGYBitstream::bufsize
PUBLIC	?clear@RGYBitstream@@QEAAXXZ			; RGYBitstream::clear
PUBLIC	?trim@RGYBitstream@@QEAAXXZ			; RGYBitstream::trim
PUBLIC	?changeSize@RGYBitstream@@QEAA?AW4RGY_ERR@@_K@Z	; RGYBitstream::changeSize
PUBLIC	?ptrY@RGYFrame@@QEAAPEAEXZ			; RGYFrame::ptrY
PUBLIC	?ptrUV@RGYFrame@@QEAAPEAEXZ			; RGYFrame::ptrUV
PUBLIC	?ptrU@RGYFrame@@QEAAPEAEXZ			; RGYFrame::ptrU
PUBLIC	?ptrV@RGYFrame@@QEAAPEAEXZ			; RGYFrame::ptrV
PUBLIC	?ptrRGB@RGYFrame@@QEAAPEAEXZ			; RGYFrame::ptrRGB
PUBLIC	?pitch@RGYFrame@@QEAAIXZ			; RGYFrame::pitch
PUBLIC	?width@RGYFrame@@QEAAIXZ			; RGYFrame::width
PUBLIC	?height@RGYFrame@@QEAAIXZ			; RGYFrame::height
PUBLIC	?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ		; RGYFrame::crop
PUBLIC	?csp@RGYFrame@@QEAA?AW4RGY_CSP@@XZ		; RGYFrame::csp
PUBLIC	??$min@PEAE@std@@YAAEBQEAEAEBQEAE0@Z		; std::min<unsigned char *>
PUBLIC	??0RGYOutput@@QEAA@XZ				; RGYOutput::RGYOutput
PUBLIC	??1RGYOutput@@UEAA@XZ				; RGYOutput::~RGYOutput
PUBLIC	?Close@RGYOutput@@UEAAXXZ			; RGYOutput::Close
PUBLIC	?outputStdout@RGYOutput@@UEAA_NXZ		; RGYOutput::outputStdout
PUBLIC	?getOutType@RGYOutput@@UEAA?AW4OutputType@@XZ	; RGYOutput::getOutType
PUBLIC	?WaitFin@RGYOutput@@UEAAXXZ			; RGYOutput::WaitFin
PUBLIC	?AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; RGYOutput::AddMessage
PUBLIC	?AddMessage@RGYOutput@@QEAAXHPEBDZZ		; RGYOutput::AddMessage
PUBLIC	??1?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ	; std::unique_ptr<char,malloc_deleter>::~unique_ptr<char,malloc_deleter>
PUBLIC	?get@?$unique_ptr@DUmalloc_deleter@@@std@@QEBAPEADXZ ; std::unique_ptr<char,malloc_deleter>::get
PUBLIC	?reset@?$unique_ptr@DUmalloc_deleter@@@std@@QEAAXPEAD@Z ; std::unique_ptr<char,malloc_deleter>::reset
PUBLIC	?_Get_first@?$_Compressed_pair@Umalloc_deleter@@PEAD$00@std@@QEAAAEAUmalloc_deleter@@XZ ; std::_Compressed_pair<malloc_deleter,char *,1>::_Get_first
PUBLIC	??1?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::~unique_ptr<unsigned char,aligned_malloc_deleter>
PUBLIC	?get@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEBAPEAEXZ ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::get
PUBLIC	?reset@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAAXPEAE@Z ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::reset
PUBLIC	?_Get_first@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAAAEAUaligned_malloc_deleter@@XZ ; std::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1>::_Get_first
PUBLIC	??_GRGYOutput@@UEAAPEAXI@Z			; RGYOutput::`scalar deleting destructor'
PUBLIC	??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z ; std::operator==<RGYLog>
PUBLIC	??0?$allocator@E@std@@QEAA@XZ			; std::allocator<unsigned char>::allocator<unsigned char>
PUBLIC	?deallocate@?$allocator@E@std@@QEAAXQEAE_K@Z	; std::allocator<unsigned char>::deallocate
PUBLIC	?allocate@?$allocator@E@std@@QEAAPEAE_K@Z	; std::allocator<unsigned char>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@E@std@@@std@@SA_KAEBV?$allocator@E@2@@Z ; std::_Default_allocator_traits<std::allocator<unsigned char> >::max_size
PUBLIC	??0?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ	; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >
PUBLIC	??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ	; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
PUBLIC	?_Copy_assign@?$vector@EV?$allocator@E@std@@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Copy_assign
PUBLIC	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@AEBV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
PUBLIC	?_Clear_and_reserve_geometric@?$vector@EV?$allocator@E@std@@@std@@AEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Clear_and_reserve_geometric
PUBLIC	?clear@?$vector@EV?$allocator@E@std@@@std@@QEAAXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::clear
PUBLIC	?data@?$vector@EV?$allocator@E@std@@@std@@QEAAPEAEXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::data
PUBLIC	?size@?$vector@EV?$allocator@E@std@@@std@@QEBA_KXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::size
PUBLIC	?max_size@?$vector@EV?$allocator@E@std@@@std@@QEBA_KXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::max_size
PUBLIC	?capacity@?$vector@EV?$allocator@E@std@@@std@@QEBA_KXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::capacity
PUBLIC	?_Destroy@?$vector@EV?$allocator@E@std@@@std@@AEAAXPEAE0@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@EV?$allocator@E@std@@@std@@AEBA_K_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Calculate_growth
PUBLIC	?_Buy_raw@?$vector@EV?$allocator@E@std@@@std@@AEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Buy_raw
PUBLIC	?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy
PUBLIC	?_Xlength@?$vector@EV?$allocator@E@std@@@std@@CAXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Xlength
PUBLIC	?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEAAAEAV?$allocator@E@2@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Getal
PUBLIC	?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEBAAEBV?$allocator@E@2@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@E@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<unsigned char> >::_Vector_val<std::_Simple_types<unsigned char> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEAAAEAV?$allocator@E@2@XZ ; std::_Compressed_pair<std::allocator<unsigned char>,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEBAAEBV?$allocator@E@2@XZ ; std::_Compressed_pair<std::allocator<unsigned char>,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_first
PUBLIC	??0RGYOutputRaw@@QEAA@XZ			; RGYOutputRaw::RGYOutputRaw
PUBLIC	??1RGYOutputRaw@@UEAA@XZ			; RGYOutputRaw::~RGYOutputRaw
PUBLIC	?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z ; RGYOutputRaw::WriteNextFrame
PUBLIC	?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z ; RGYOutputRaw::WriteNextFrame
PUBLIC	?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z ; RGYOutputRaw::Init
PUBLIC	??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ	; RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>
PUBLIC	??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z ; RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>
PUBLIC	??R?$RGYAVDeleter@UAVBSFContext@@@@QEAAXPEAUAVBSFContext@@@Z ; RGYAVDeleter<AVBSFContext>::operator()
PUBLIC	??0?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ ; std::_Func_class<void,AVBSFContext * *>::_Func_class<void,AVBSFContext * *>
PUBLIC	??R?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEBAXPEAPEAUAVBSFContext@@@Z ; std::_Func_class<void,AVBSFContext * *>::operator()
PUBLIC	??1?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ ; std::_Func_class<void,AVBSFContext * *>::~_Func_class<void,AVBSFContext * *>
PUBLIC	?_Empty@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEBA_NXZ ; std::_Func_class<void,AVBSFContext * *>::_Empty
PUBLIC	?_Reset_copy@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAXAEBV12@@Z ; std::_Func_class<void,AVBSFContext * *>::_Reset_copy
PUBLIC	?_Reset_move@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAX$$QEAV12@@Z ; std::_Func_class<void,AVBSFContext * *>::_Reset_move
PUBLIC	?_Tidy@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAXXZ ; std::_Func_class<void,AVBSFContext * *>::_Tidy
PUBLIC	?_Local@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEBA_NXZ ; std::_Func_class<void,AVBSFContext * *>::_Local
PUBLIC	?_Getimpl@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@XZ ; std::_Func_class<void,AVBSFContext * *>::_Getimpl
PUBLIC	?_Set@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@@Z ; std::_Func_class<void,AVBSFContext * *>::_Set
PUBLIC	??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$T@Z ; std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)>
PUBLIC	??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@AEBV01@@Z ; std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)>
PUBLIC	??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$QEAV01@@Z ; std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)>
PUBLIC	??4?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAAAEAV01@$$QEAV01@@Z ; std::function<void __cdecl(AVBSFContext * *)>::operator=
PUBLIC	??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ ; std::function<void __cdecl(AVBSFContext * *)>::~function<void __cdecl(AVBSFContext * *)>
PUBLIC	??1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ	; RGYAVDeleter<AVBSFContext>::~RGYAVDeleter<AVBSFContext>
PUBLIC	??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@$$QEAU0@@Z ; RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>
PUBLIC	??4?$RGYAVDeleter@UAVBSFContext@@@@QEAAAEAU0@$$QEAU0@@Z ; RGYAVDeleter<AVBSFContext>::operator=
PUBLIC	??4?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::operator=
PUBLIC	??1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::~unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >
PUBLIC	??C?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBAPEAUAVBSFContext@@XZ ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::operator->
PUBLIC	?get@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBAPEAUAVBSFContext@@XZ ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::get
PUBLIC	??B?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBA_NXZ ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::operator bool
PUBLIC	?release@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAPEAUAVBSFContext@@XZ ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::release
PUBLIC	?reset@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAXPEAUAVBSFContext@@@Z ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::reset
PUBLIC	?_Get_first@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAAAEAU?$RGYAVDeleter@UAVBSFContext@@@@XZ ; std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::_Get_first
PUBLIC	??1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ ; std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::~_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>
PUBLIC	??_GRGYOutputRaw@@UEAAPEAXI@Z			; RGYOutputRaw::`scalar deleting destructor'
PUBLIC	??0CQSVOutFrame@@QEAA@XZ			; CQSVOutFrame::CQSVOutFrame
PUBLIC	??1CQSVOutFrame@@UEAA@XZ			; CQSVOutFrame::~CQSVOutFrame
PUBLIC	?WriteNextFrame@CQSVOutFrame@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z ; CQSVOutFrame::WriteNextFrame
PUBLIC	?WriteNextFrame@CQSVOutFrame@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z ; CQSVOutFrame::WriteNextFrame
PUBLIC	?Init@CQSVOutFrame@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z ; CQSVOutFrame::Init
PUBLIC	??_GCQSVOutFrame@@UEAAPEAXI@Z			; CQSVOutFrame::`scalar deleting destructor'
PUBLIC	??0?$allocator@Unal_info@@@std@@QEAA@XZ		; std::allocator<nal_info>::allocator<nal_info>
PUBLIC	?deallocate@?$allocator@Unal_info@@@std@@QEAAXQEAUnal_info@@_K@Z ; std::allocator<nal_info>::deallocate
PUBLIC	?allocate@?$allocator@Unal_info@@@std@@QEAAPEAUnal_info@@_K@Z ; std::allocator<nal_info>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@Unal_info@@@std@@@std@@SA_KAEBV?$allocator@Unal_info@@@2@@Z ; std::_Default_allocator_traits<std::allocator<nal_info> >::max_size
PUBLIC	??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::vector<nal_info,std::allocator<nal_info> >
PUBLIC	?_Move_construct@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<nal_info,std::allocator<nal_info> >::_Move_construct
PUBLIC	??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::vector<nal_info,std::allocator<nal_info> >::vector<nal_info,std::allocator<nal_info> >
PUBLIC	?_Move_assign@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ; std::vector<nal_info,std::allocator<nal_info> >::_Move_assign
PUBLIC	??4?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<nal_info,std::allocator<nal_info> >::operator=
PUBLIC	??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
PUBLIC	?push_back@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAXAEBUnal_info@@@Z ; std::vector<nal_info,std::allocator<nal_info> >::push_back
PUBLIC	?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::begin
PUBLIC	?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::begin
PUBLIC	?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::end
PUBLIC	?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::end
PUBLIC	?_Unchecked_begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBAPEBUnal_info@@XZ ; std::vector<nal_info,std::allocator<nal_info> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBAPEBUnal_info@@XZ ; std::vector<nal_info,std::allocator<nal_info> >::_Unchecked_end
PUBLIC	?size@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA_KXZ ; std::vector<nal_info,std::allocator<nal_info> >::size
PUBLIC	?max_size@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA_KXZ ; std::vector<nal_info,std::allocator<nal_info> >::max_size
PUBLIC	?capacity@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA_KXZ ; std::vector<nal_info,std::allocator<nal_info> >::capacity
PUBLIC	?_Umove@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAPEAUnal_info@@PEAU3@00@Z ; std::vector<nal_info,std::allocator<nal_info> >::_Umove
PUBLIC	?_Umove_if_noexcept1@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@00U?$integral_constant@_N$00@2@@Z ; std::vector<nal_info,std::allocator<nal_info> >::_Umove_if_noexcept1
PUBLIC	?_Umove_if_noexcept@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@00@Z ; std::vector<nal_info,std::allocator<nal_info> >::_Umove_if_noexcept
PUBLIC	?_Destroy@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@0@Z ; std::vector<nal_info,std::allocator<nal_info> >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBA_K_K@Z ; std::vector<nal_info,std::allocator<nal_info> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXQEAUnal_info@@_K1@Z ; std::vector<nal_info,std::allocator<nal_info> >::_Change_array
PUBLIC	?_Tidy@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXXZ ; std::vector<nal_info,std::allocator<nal_info> >::_Tidy
PUBLIC	?_Xlength@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@CAXXZ ; std::vector<nal_info,std::allocator<nal_info> >::_Xlength
PUBLIC	?_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z ; std::vector<nal_info,std::allocator<nal_info> >::_Orphan_range
PUBLIC	?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAAEAV?$allocator@Unal_info@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::_Getal
PUBLIC	?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAAEBV?$allocator@Unal_info@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<nal_info> >::_Vector_val<std::_Simple_types<nal_info> >
PUBLIC	?_Take_contents@?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@QEAAXAEAV12@@Z ; std::_Vector_val<std::_Simple_types<nal_info> >::_Take_contents
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Unal_info@@@2@XZ ; std::_Compressed_pair<std::allocator<nal_info>,std::_Vector_val<std::_Simple_types<nal_info> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Unal_info@@@2@XZ ; std::_Compressed_pair<std::allocator<nal_info>,std::_Vector_val<std::_Simple_types<nal_info> >,1>::_Get_first
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >
PUBLIC	??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEBUnal_info@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator->
PUBLIC	?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAX_J@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Verify_offset
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator+=
PUBLIC	??Z?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator-=
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator!=
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAXAEBV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Compat
PUBLIC	?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@1@0@Z ; std::_Verify_range
PUBLIC	?_Unwrapped@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEBUnal_info@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Unwrapped
PUBLIC	?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAXPEBUnal_info@@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Seek_to
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >
PUBLIC	??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEAUnal_info@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator->
PUBLIC	??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator-=
PUBLIC	??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator-
PUBLIC	?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEAUnal_info@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Unwrapped
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >
PUBLIC	??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ ; std::unique_ptr<_iobuf,fp_deleter>::unique_ptr<_iobuf,fp_deleter><fp_deleter,0>
PUBLIC	??$?0Umalloc_deleter@@$0A@@?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ ; std::unique_ptr<char,malloc_deleter>::unique_ptr<char,malloc_deleter><malloc_deleter,0>
PUBLIC	??$?0Ualigned_malloc_deleter@@$0A@@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::unique_ptr<unsigned char,aligned_malloc_deleter><aligned_malloc_deleter,0>
PUBLIC	??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> ><RGYAVDeleter<AVBSFContext>,0>
PUBLIC	??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ ; std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z ; RGYAVDeleter<AVCodecParameters>::RGYAVDeleter<AVCodecParameters>
PUBLIC	??R?$RGYAVDeleter@UAVCodecParameters@@@@QEAAXPEAUAVCodecParameters@@@Z ; RGYAVDeleter<AVCodecParameters>::operator()
PUBLIC	??0?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ ; std::_Func_class<void,AVCodecParameters * *>::_Func_class<void,AVCodecParameters * *>
PUBLIC	??R?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEBAXPEAPEAUAVCodecParameters@@@Z ; std::_Func_class<void,AVCodecParameters * *>::operator()
PUBLIC	??1?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ ; std::_Func_class<void,AVCodecParameters * *>::~_Func_class<void,AVCodecParameters * *>
PUBLIC	?_Empty@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEBA_NXZ ; std::_Func_class<void,AVCodecParameters * *>::_Empty
PUBLIC	?_Reset_copy@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAXAEBV12@@Z ; std::_Func_class<void,AVCodecParameters * *>::_Reset_copy
PUBLIC	?_Reset_move@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAX$$QEAV12@@Z ; std::_Func_class<void,AVCodecParameters * *>::_Reset_move
PUBLIC	?_Tidy@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAXXZ ; std::_Func_class<void,AVCodecParameters * *>::_Tidy
PUBLIC	?_Local@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEBA_NXZ ; std::_Func_class<void,AVCodecParameters * *>::_Local
PUBLIC	?_Getimpl@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@XZ ; std::_Func_class<void,AVCodecParameters * *>::_Getimpl
PUBLIC	?_Set@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@@Z ; std::_Func_class<void,AVCodecParameters * *>::_Set
PUBLIC	??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@AEBV01@@Z ; std::function<void __cdecl(AVCodecParameters * *)>::function<void __cdecl(AVCodecParameters * *)>
PUBLIC	??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@$$QEAV01@@Z ; std::function<void __cdecl(AVCodecParameters * *)>::function<void __cdecl(AVCodecParameters * *)>
PUBLIC	??1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ ; std::function<void __cdecl(AVCodecParameters * *)>::~function<void __cdecl(AVCodecParameters * *)>
PUBLIC	??1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ	; RGYAVDeleter<AVCodecParameters>::~RGYAVDeleter<AVCodecParameters>
PUBLIC	??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@$$QEAU0@@Z ; RGYAVDeleter<AVCodecParameters>::RGYAVDeleter<AVCodecParameters>
PUBLIC	??$forward@AEAP6AXPEAPEAUAVCodecParameters@@@Z@std@@YAAEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z ; std::forward<void (__cdecl*&)(AVCodecParameters * *)>
PUBLIC	??$forward@PEAPEAUAVCodecParameters@@@std@@YA$$QEAPEAPEAUAVCodecParameters@@AEAPEAPEAU1@@Z ; std::forward<AVCodecParameters * *>
PUBLIC	??$_Call@AEAP6AXPEAPEAUAVCodecParameters@@@ZPEAPEAU1@@_Invoker_functor@std@@SAXAEAP6AXPEAPEAUAVCodecParameters@@@Z$$QEAPEAPEAU2@@Z ; std::_Invoker_functor::_Call<void (__cdecl*&)(AVCodecParameters * *),AVCodecParameters * *>
PUBLIC	??$invoke@AEAP6AXPEAPEAUAVCodecParameters@@@ZPEAPEAU1@@std@@YAXAEAP6AXPEAPEAUAVCodecParameters@@@Z$$QEAPEAPEAU1@@Z ; std::invoke<void (__cdecl*&)(AVCodecParameters * *),AVCodecParameters * *>
PUBLIC	??$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@P6AXPEAPEAUAVCodecParameters@@@Z@Z ; std::function<void __cdecl(AVCodecParameters * *)>::function<void __cdecl(AVCodecParameters * *)><void (__cdecl*)(AVCodecParameters * *),void>
PUBLIC	??1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::~unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >
PUBLIC	??C?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::operator->
PUBLIC	?get@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::get
PUBLIC	?_Get_first@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAAAEAU?$RGYAVDeleter@UAVCodecParameters@@@@XZ ; std::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0>::_Get_first
PUBLIC	??1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ ; std::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0>::~_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0>
PUBLIC	??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@$0A@@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@PEAUAVCodecParameters@@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@@Z ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> ><RGYAVDeleter<AVCodecParameters>,0>
PUBLIC	??$forward@AEAP6AXPEAPEAUAVBSFContext@@@Z@std@@YAAEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z ; std::forward<void (__cdecl*&)(AVBSFContext * *)>
PUBLIC	??$forward@PEAPEAUAVBSFContext@@@std@@YA$$QEAPEAPEAUAVBSFContext@@AEAPEAPEAU1@@Z ; std::forward<AVBSFContext * *>
PUBLIC	??$_Call@AEAP6AXPEAPEAUAVBSFContext@@@ZPEAPEAU1@@_Invoker_functor@std@@SAXAEAP6AXPEAPEAUAVBSFContext@@@Z$$QEAPEAPEAU2@@Z ; std::_Invoker_functor::_Call<void (__cdecl*&)(AVBSFContext * *),AVBSFContext * *>
PUBLIC	??$invoke@AEAP6AXPEAPEAUAVBSFContext@@@ZPEAPEAU1@@std@@YAXAEAP6AXPEAPEAUAVBSFContext@@@Z$$QEAPEAPEAU1@@Z ; std::invoke<void (__cdecl*&)(AVBSFContext * *),AVBSFContext * *>
PUBLIC	??$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@P6AXPEAPEAUAVBSFContext@@@Z@Z ; std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)><void (__cdecl*)(AVBSFContext * *),void>
PUBLIC	??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@PEAUAVBSFContext@@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@@Z ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> ><RGYAVDeleter<AVBSFContext>,0>
PUBLIC	??$sprintf_s@$0IA@@@YAHAEAY0IA@DPEBDZZ		; sprintf_s<128>
PUBLIC	??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ ; std::shared_ptr<EncodeStatus>::operator-><EncodeStatus,0>
PUBLIC	??$_Const_cast@$$CBUnal_info@@@std@@YAPEAUnal_info@@PEBU1@@Z ; std::_Const_cast<nal_info const >
PUBLIC	??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@0@AEBV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<nal_info> > const >
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<nal_info> > >
PUBLIC	??$emplace_back@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAXAEBUnal_info@@@Z ; std::vector<nal_info,std::allocator<nal_info> >::emplace_back<nal_info const &>
PUBLIC	??$forward@AEBUnal_info@@@std@@YAAEBUnal_info@@AEBU1@@Z ; std::forward<nal_info const &>
PUBLIC	??$_Emplace_back_with_unused_capacity@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXAEBUnal_info@@@Z ; std::vector<nal_info,std::allocator<nal_info> >::_Emplace_back_with_unused_capacity<nal_info const &>
PUBLIC	??$_Unfancy@Unal_info@@@std@@YAPEAUnal_info@@PEAU1@@Z ; std::_Unfancy<nal_info>
PUBLIC	??$construct@Unal_info@@AEBU1@@?$_Default_allocator_traits@V?$allocator@Unal_info@@@std@@@std@@SAXAEAV?$allocator@Unal_info@@@1@QEAUnal_info@@AEBU3@@Z ; std::_Default_allocator_traits<std::allocator<nal_info> >::construct<nal_info,nal_info const &>
PUBLIC	??$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z ; std::vector<nal_info,std::allocator<nal_info> >::_Emplace_reallocate<nal_info const &>
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0Unal_info@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Unal_info@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><nal_info>
PUBLIC	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$addressof@V?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@@std@@YAPEAV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@0@AEAV10@@Z ; std::addressof<std::vector<nal_info,std::allocator<nal_info> > >
PUBLIC	??$move@AEAV?$allocator@Unal_info@@@std@@@std@@YA$$QEAV?$allocator@Unal_info@@@0@AEAV10@@Z ; std::move<std::allocator<nal_info> &>
PUBLIC	??$?0V?$allocator@Unal_info@@@std@@$$V@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Unal_info@@@1@@Z ; std::_Compressed_pair<std::allocator<nal_info>,std::_Vector_val<std::_Simple_types<nal_info> >,1>::_Compressed_pair<std::allocator<nal_info>,std::_Vector_val<std::_Simple_types<nal_info> >,1><std::allocator<nal_info> >
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<nal_info>,std::_Vector_val<std::_Simple_types<nal_info> >,1>::_Compressed_pair<std::allocator<nal_info>,std::_Vector_val<std::_Simple_types<nal_info> >,1><>
PUBLIC	??$exchange@PEAUAVBSFContext@@AEAPEAU1@@std@@YAPEAUAVBSFContext@@AEAPEAU1@0@Z ; std::exchange<AVBSFContext *,AVBSFContext * &>
PUBLIC	??$addressof@V?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@@std@@YAPEAV?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@0@AEAV10@@Z ; std::addressof<std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> > >
PUBLIC	??$forward@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAU1@@Z ; std::forward<RGYAVDeleter<AVBSFContext> >
PUBLIC	??$_Unfancy_maybe_null@E@std@@YAPEAEPEAE@Z	; std::_Unfancy_maybe_null<unsigned char>
PUBLIC	??$addressof@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@YAPEBV?$vector@EV?$allocator@E@std@@@0@AEBV10@@Z ; std::addressof<std::vector<unsigned char,std::allocator<unsigned char> > const >
PUBLIC	??$?0E@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@E@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned char>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<unsigned char>,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Compressed_pair<std::allocator<unsigned char>,std::_Vector_val<std::_Simple_types<unsigned char> >,1><>
PUBLIC	??$exchange@PEAEAEAPEAE@std@@YAPEAEAEAPEAE0@Z	; std::exchange<unsigned char *,unsigned char * &>
PUBLIC	??$exchange@PEADAEAPEAD@std@@YAPEADAEAPEAD0@Z	; std::exchange<char *,char * &>
PUBLIC	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$exchange@PEAU_iobuf@@AEAPEAU1@@std@@YAPEAU_iobuf@@AEAPEAU1@0@Z ; std::exchange<_iobuf *,_iobuf * &>
PUBLIC	??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Min_value<unsigned __int64>
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Unfancy@D@std@@YAPEADPEAD@Z			; std::_Unfancy<char>
PUBLIC	??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>
PUBLIC	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??0?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ ; std::_Func_base<void,AVCodecParameters * *>::_Func_base<void,AVCodecParameters * *>
PUBLIC	??$_Pocma@V?$allocator@Unal_info@@@std@@@std@@YAXAEAV?$allocator@Unal_info@@@0@0@Z ; std::_Pocma<std::allocator<nal_info> >
PUBLIC	??$exchange@PEAUAVBSFContext@@PEAU1@@std@@YAPEAUAVBSFContext@@AEAPEAU1@$$QEAPEAU1@@Z ; std::exchange<AVBSFContext *,AVBSFContext *>
PUBLIC	??$addressof@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@std@@YAPEAV?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@0@AEAV10@@Z ; std::addressof<std::function<void __cdecl(AVBSFContext * *)> >
PUBLIC	??$move@AEAV?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@0@AEAV10@@Z ; std::move<std::function<void __cdecl(AVBSFContext * *)> &>
PUBLIC	??0?$_Func_base@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ ; std::_Func_base<void,AVBSFContext * *>::_Func_base<void,AVBSFContext * *>
PUBLIC	??$_Destroy_range@V?$allocator@E@std@@@std@@YAXPEAEQEAEAEAV?$allocator@E@0@@Z ; std::_Destroy_range<std::allocator<unsigned char> >
PUBLIC	??$_Pocca@V?$allocator@E@std@@@std@@YAXAEAV?$allocator@E@0@AEBV10@@Z ; std::_Pocca<std::allocator<unsigned char> >
PUBLIC	??$assign@PEAEX@?$vector@EV?$allocator@E@std@@@std@@QEAAXPEAE0@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::assign<unsigned char *,void>
PUBLIC	??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Max_value<unsigned __int64>
PUBLIC	??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
PUBLIC	??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()
PUBLIC	??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
PUBLIC	??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z ; <lambda_e1befb086ad3257e3f042a63030725f7>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>
PUBLIC	??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ; <lambda_65e615be2a453ca0576c979606f46740>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
PUBLIC	??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Get_size_of_n@$00@std@@YA_K_K@Z		; std::_Get_size_of_n<1>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$_Destroy_range@V?$allocator@Unal_info@@@std@@@std@@YAXPEAUnal_info@@QEAU1@AEAV?$allocator@Unal_info@@@0@@Z ; std::_Destroy_range<std::allocator<nal_info> >
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z ; std::swap<std::_Ref_count_base *,void>
PUBLIC	??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z ; std::swap<RGYLog *,void>
PUBLIC	??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z ; std::swap<EncodeStatus *,void>
PUBLIC	??$?0$$V@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<fp_deleter,_iobuf *,1>::_Compressed_pair<fp_deleter,_iobuf *,1><>
PUBLIC	??$?0$$V@?$_Compressed_pair@Umalloc_deleter@@PEAD$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<malloc_deleter,char *,1>::_Compressed_pair<malloc_deleter,char *,1><>
PUBLIC	??$?0$$V@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1>::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1><>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0><>
PUBLIC	??$move@AEAP6AXPEAPEAUAVCodecParameters@@@Z@std@@YA$$QEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z ; std::move<void (__cdecl*&)(AVCodecParameters * *)>
PUBLIC	??$_Reset@P6AXPEAPEAUAVCodecParameters@@@Z@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAX$$QEAP6AXPEAPEAUAVCodecParameters@@@Z@Z ; std::_Func_class<void,AVCodecParameters * *>::_Reset<void (__cdecl*)(AVCodecParameters * *)>
PUBLIC	??$move@AEAU?$RGYAVDeleter@UAVCodecParameters@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAU1@@Z ; std::move<RGYAVDeleter<AVCodecParameters> &>
PUBLIC	??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@Z ; std::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0>::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0><RGYAVDeleter<AVCodecParameters>,AVCodecParameters * &>
PUBLIC	??$move@AEAP6AXPEAPEAUAVBSFContext@@@Z@std@@YA$$QEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z ; std::move<void (__cdecl*&)(AVBSFContext * *)>
PUBLIC	??$_Reset@P6AXPEAPEAUAVBSFContext@@@Z@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAX$$QEAP6AXPEAPEAUAVBSFContext@@@Z@Z ; std::_Func_class<void,AVBSFContext * *>::_Reset<void (__cdecl*)(AVBSFContext * *)>
PUBLIC	??$move@AEAU?$RGYAVDeleter@UAVBSFContext@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAU1@@Z ; std::move<RGYAVDeleter<AVBSFContext> &>
PUBLIC	??$?0U?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@Z ; std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0><RGYAVDeleter<AVBSFContext>,AVBSFContext * &>
PUBLIC	??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > > >
PUBLIC	??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@$0A@@std@@YAPEAUnal_info@@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,0>
PUBLIC	??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@PEAUnal_info@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@AEBQEAUnal_info@@@Z ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,nal_info *>
PUBLIC	??$_Adl_verify_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > > >
PUBLIC	??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@$0A@@std@@YAPEBUnal_info@@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,0>
PUBLIC	??$_Seek_wrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@PEBUnal_info@@@std@@YAXAEAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@AEBQEBUnal_info@@@Z ; std::_Seek_wrapped<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,nal_info const *>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$forward@V?$allocator@Unal_info@@@std@@@std@@YA$$QEAV?$allocator@Unal_info@@@0@AEAV10@@Z ; std::forward<std::allocator<nal_info> >
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> >
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$_Adl_verify_range@PEAEPEAE@std@@YAXAEBQEAE0@Z ; std::_Adl_verify_range<unsigned char *,unsigned char *>
PUBLIC	??$_Get_unwrapped@E@std@@YAPEAEQEAE@Z		; std::_Get_unwrapped<unsigned char>
PUBLIC	??$_Assign_range@PEAE@?$vector@EV?$allocator@E@std@@@std@@AEAAXPEAE0Uforward_iterator_tag@1@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Assign_range<unsigned char *>
PUBLIC	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z	; std::addressof<char *>
PUBLIC	??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z	; std::forward<char * const &>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
PUBLIC	??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z ; std::move<RGYLog * &>
PUBLIC	??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z ; std::move<EncodeStatus * &>
PUBLIC	??$_Uninitialized_move@PEAUnal_info@@V?$allocator@Unal_info@@@std@@@std@@YAPEAUnal_info@@QEAU1@0PEAU1@AEAV?$allocator@Unal_info@@@0@@Z ; std::_Uninitialized_move<nal_info *,std::allocator<nal_info> >
PUBLIC	??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z		; std::_Get_size_of_n<24>
PUBLIC	??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z ; <lambda_9013ee9e23efe4882b67eff5b0ecf103>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >
PUBLIC	??$_Test_callable@P6AXPEAPEAUAVCodecParameters@@@Z@std@@YA_NAEBQ6AXPEAPEAUAVCodecParameters@@@Z@Z ; std::_Test_callable<void (__cdecl*)(AVCodecParameters * *)>
PUBLIC	?_Copy@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEBAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@PEAX@Z ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Copy
PUBLIC	?_Move@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@PEAX@Z ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Move
PUBLIC	?_Do_call@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAX$$QEAPEAPEAUAVCodecParameters@@@Z ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Do_call
PUBLIC	?_Target_type@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEBAAEBVtype_info@@XZ ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Target_type
PUBLIC	?_Get@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEBAPEBXXZ ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Get
PUBLIC	?_Delete_this@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAX_N@Z ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Delete_this
PUBLIC	??$forward@P6AXPEAPEAUAVCodecParameters@@@Z@std@@YA$$QEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z ; std::forward<void (__cdecl*)(AVCodecParameters * *)>
PUBLIC	??$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@QEAA@$$QEAP6AXPEAPEAUAVCodecParameters@@@Z@Z ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *><void (__cdecl*)(AVCodecParameters * *),void>
PUBLIC	??$forward@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAU1@@Z ; std::forward<RGYAVDeleter<AVCodecParameters> >
PUBLIC	??$forward@AEAPEAUAVCodecParameters@@@std@@YAAEAPEAUAVCodecParameters@@AEAPEAU1@@Z ; std::forward<AVCodecParameters * &>
PUBLIC	??$_Test_callable@P6AXPEAPEAUAVBSFContext@@@Z@std@@YA_NAEBQ6AXPEAPEAUAVBSFContext@@@Z@Z ; std::_Test_callable<void (__cdecl*)(AVBSFContext * *)>
PUBLIC	?_Copy@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEBAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@PEAX@Z ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Copy
PUBLIC	?_Move@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@PEAX@Z ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Move
PUBLIC	?_Do_call@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAX$$QEAPEAPEAUAVBSFContext@@@Z ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Do_call
PUBLIC	?_Target_type@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEBAAEBVtype_info@@XZ ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Target_type
PUBLIC	?_Get@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEBAPEBXXZ ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Get
PUBLIC	?_Delete_this@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAX_N@Z ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Delete_this
PUBLIC	??$forward@P6AXPEAPEAUAVBSFContext@@@Z@std@@YA$$QEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z ; std::forward<void (__cdecl*)(AVBSFContext * *)>
PUBLIC	??$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@QEAA@$$QEAP6AXPEAPEAUAVBSFContext@@@Z@Z ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *><void (__cdecl*)(AVBSFContext * *),void>
PUBLIC	??$forward@AEAPEAUAVBSFContext@@@std@@YAAEAPEAUAVBSFContext@@AEAPEAU1@@Z ; std::forward<AVBSFContext * &>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$_Verify_range@E@std@@YAXQEBE0@Z		; std::_Verify_range<unsigned char>
PUBLIC	??$distance@PEAE@std@@YA_JPEAE0@Z		; std::distance<unsigned char *>
PUBLIC	??$_Unfancy@E@std@@YAPEAEPEAE@Z			; std::_Unfancy<unsigned char>
PUBLIC	??$_Copy_memmove@PEAEPEAE@std@@YAPEAEPEAE00@Z	; std::_Copy_memmove<unsigned char *,unsigned char *>
PUBLIC	??$_Refancy@PEAE$0A@@std@@YAPEAEPEAE@Z		; std::_Refancy<unsigned char *,0>
PUBLIC	??$_Get_unwrapped@Unal_info@@@std@@YAPEAUnal_info@@QEAU1@@Z ; std::_Get_unwrapped<nal_info>
PUBLIC	??$_Copy_memmove@PEAUnal_info@@PEAU1@@std@@YAPEAUnal_info@@PEAU1@00@Z ; std::_Copy_memmove<nal_info *,nal_info *>
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z		; std::_Deallocate<8,0>
PUBLIC	??$addressof@Q6AXPEAPEAUAVBSFContext@@@Z@std@@YAPEBQ6AXPEAPEAUAVBSFContext@@@ZAEBQ6AX0@Z@Z ; std::addressof<void (__cdecl*const)(AVBSFContext * *)>
PUBLIC	??$_Call@AEAP6AXPEAPEAUAVBSFContext@@@ZPEAPEAU1@@?$_Invoker_ret@X$00@std@@SAXAEAP6AXPEAPEAUAVBSFContext@@@Z$$QEAPEAPEAU2@@Z ; std::_Invoker_ret<void,1>::_Call<void (__cdecl*&)(AVBSFContext * *),AVBSFContext * *>
PUBLIC	??$?0AEBQ6AXPEAPEAUAVBSFContext@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@QEAA@AEBQ6AXPEAPEAUAVBSFContext@@@Z@Z ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *><void (__cdecl*const &)(AVBSFContext * *),void>
PUBLIC	??$addressof@Q6AXPEAPEAUAVCodecParameters@@@Z@std@@YAPEBQ6AXPEAPEAUAVCodecParameters@@@ZAEBQ6AX0@Z@Z ; std::addressof<void (__cdecl*const)(AVCodecParameters * *)>
PUBLIC	??$_Call@AEAP6AXPEAPEAUAVCodecParameters@@@ZPEAPEAU1@@?$_Invoker_ret@X$00@std@@SAXAEAP6AXPEAPEAUAVCodecParameters@@@Z$$QEAPEAPEAU2@@Z ; std::_Invoker_ret<void,1>::_Call<void (__cdecl*&)(AVCodecParameters * *),AVCodecParameters * *>
PUBLIC	??$?0AEBQ6AXPEAPEAUAVCodecParameters@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@QEAA@AEBQ6AXPEAPEAUAVCodecParameters@@@Z@Z ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *><void (__cdecl*const &)(AVCodecParameters * *),void>
PUBLIC	??$move@AEAV?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@0@AEAV10@@Z ; std::move<std::function<void __cdecl(AVCodecParameters * *)> &>
PUBLIC	??$_Refancy@PEAUnal_info@@$0A@@std@@YAPEAUnal_info@@PEAU1@@Z ; std::_Refancy<nal_info *,0>
PUBLIC	??$forward@AEBQ6AXPEAPEAUAVBSFContext@@@Z@std@@YAAEBQ6AXPEAPEAUAVBSFContext@@@ZAEBQ6AX0@Z@Z ; std::forward<void (__cdecl*const &)(AVBSFContext * *)>
PUBLIC	??$forward@AEBQ6AXPEAPEAUAVCodecParameters@@@Z@std@@YAAEBQ6AXPEAPEAUAVCodecParameters@@@ZAEBQ6AX0@Z@Z ; std::forward<void (__cdecl*const &)(AVCodecParameters * *)>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ ; `string'
PUBLIC	??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@ ; `string'
PUBLIC	??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ ; `string'
PUBLIC	??_C@_02LMMGGCAJ@?3?5@				; `string'
PUBLIC	??_C@_05PKCPKOLM@undef@				; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_7RGYOutput@@6B@				; RGYOutput::`vftable'
PUBLIC	??_7RGYOutputRaw@@6B@				; RGYOutputRaw::`vftable'
PUBLIC	??_7CQSVOutFrame@@6B@				; CQSVOutFrame::`vftable'
PUBLIC	??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@ ; `string'
PUBLIC	??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1NO@DHAACCAA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@ ; `string'
PUBLIC	??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ ; `string'
PUBLIC	??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@ ; `string'
PUBLIC	??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ ; `string'
PUBLIC	??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_0BO@LFGPDMIB@string?5subscript?5out?5of?5range@ ; `string'
PUBLIC	??_C@_0GI@KAEHDKAJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@MNJEKPBN@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EA@OADAPGGK@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ ; `string'
PUBLIC	??_C@_1LO@NPPEKPAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@ ; `string'
PUBLIC	??_C@_0BO@CAOBBIOC@vector?5iterators?5incompatible@ ; `string'
PUBLIC	??_C@_1NG@BALHEPOA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@ ; `string'
PUBLIC	??_C@_1EA@DJDGNIII@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ ; `string'
PUBLIC	??_C@_0CO@LHPFLLJB@cannot?5seek?5value?9initialized?5v@ ; `string'
PUBLIC	??_C@_1OE@PHFHONJN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@ ; `string'
PUBLIC	??_C@_1GA@EIHBFEJD@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAa@ ; `string'
PUBLIC	??_C@_0CJ@DIFMEJBE@cannot?5seek?5vector?5iterator?5bef@ ; `string'
PUBLIC	??_C@_1FG@JCGKNFIB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@ ; `string'
PUBLIC	??_C@_0CG@JDIOCKHH@cannot?5seek?5vector?5iterator?5aft@ ; `string'
PUBLIC	??_C@_1FA@LCODAPOP@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@ ; `string'
PUBLIC	??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@	; `string'
PUBLIC	??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@ ; `string'
PUBLIC	??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@ ; `string'
PUBLIC	??_7?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@6B@ ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::`vftable'
PUBLIC	??_7?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@6B@ ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::`vftable'
PUBLIC	??_R0P6AXPEAPEAUAVBSFContext@@@Z@8		; void (__cdecl*)(AVBSFContext * *) `RTTI Type Descriptor'
PUBLIC	??_R0P6AXPEAPEAUAVCodecParameters@@@Z@8		; void (__cdecl*)(AVCodecParameters * *) `RTTI Type Descriptor'
PUBLIC	??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@ ; `string'
PUBLIC	??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ ; `string'
PUBLIC	??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@ ; `string'
PUBLIC	??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RGYOutput@@6B@				; RGYOutput::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRGYOutput@@@8				; RGYOutput `RTTI Type Descriptor'
PUBLIC	??_R3RGYOutput@@8				; RGYOutput::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RGYOutput@@8				; RGYOutput::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RGYOutput@@8			; RGYOutput::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RGYOutputRaw@@6B@				; RGYOutputRaw::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRGYOutputRaw@@@8			; RGYOutputRaw `RTTI Type Descriptor'
PUBLIC	??_R3RGYOutputRaw@@8				; RGYOutputRaw::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RGYOutputRaw@@8				; RGYOutputRaw::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RGYOutputRaw@@8			; RGYOutputRaw::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$_Func_base@XPEAPEAUAVBSFContext@@@std@@@8 ; std::_Func_base<void,AVBSFContext * *> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Func_base@XPEAPEAUAVBSFContext@@@std@@8	; std::_Func_base<void,AVBSFContext * *>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Func_base@XPEAPEAUAVBSFContext@@@std@@8	; std::_Func_base<void,AVBSFContext * *>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Func_base@XPEAPEAUAVBSFContext@@@std@@8 ; std::_Func_base<void,AVBSFContext * *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CQSVOutFrame@@6B@				; CQSVOutFrame::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCQSVOutFrame@@@8			; CQSVOutFrame `RTTI Type Descriptor'
PUBLIC	??_R3CQSVOutFrame@@8				; CQSVOutFrame::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CQSVOutFrame@@8				; CQSVOutFrame::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CQSVOutFrame@@8			; CQSVOutFrame::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@@8 ; std::_Func_base<void,AVCodecParameters * *> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@8 ; std::_Func_base<void,AVCodecParameters * *>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@8 ; std::_Func_base<void,AVCodecParameters * *>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@8 ; std::_Func_base<void,AVCodecParameters * *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@6B@ ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@@8 ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@8 ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@8 ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@8 ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@6B@ ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@@8 ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@8 ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@8 ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@8 ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	_purecall:PROC
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	__imp_free:PROC
EXTRN	__imp__aligned_free:PROC
EXTRN	__imp__aligned_malloc:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	__imp___acrt_iob_func:PROC
EXTRN	__imp_fopen_s:PROC
EXTRN	__imp_fclose:PROC
EXTRN	__imp_fflush:PROC
EXTRN	__imp_fwrite:PROC
EXTRN	__imp_setvbuf:PROC
EXTRN	__imp__fwrite_nolock:PROC
EXTRN	__imp___stdio_common_vsprintf:PROC
EXTRN	__imp___stdio_common_vsprintf_s:PROC
EXTRN	memcpy:PROC
EXTRN	memmove:PROC
EXTRN	memset:PROC
EXTRN	__imp_strcpy_s:PROC
EXTRN	__imp_strerror:PROC
EXTRN	strlen:PROC
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	__imp__mbscmp:PROC
EXTRN	?_Xbad_function_call@std@@YAXXZ:PROC		; std::_Xbad_function_call
EXTRN	?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z:PROC ; char_to_tstring
EXTRN	?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z:PROC ; split
EXTRN	?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z:PROC ; PathRemoveFileSpecFixed
EXTRN	?CreateDirectoryRecursive@@YA_NPEBD@Z:PROC	; CreateDirectoryRecursive
EXTRN	?malloc_degeneracy@@YA_KPEAPEAX_K1@Z:PROC	; malloc_degeneracy
EXTRN	av_dict_set:PROC
EXTRN	av_dict_set_int:PROC
EXTRN	av_opt_set_dict2:PROC
EXTRN	avcodec_parameters_alloc:PROC
EXTRN	avcodec_parameters_free:PROC
EXTRN	avcodec_parameters_copy:PROC
EXTRN	av_init_packet:PROC
EXTRN	av_new_packet:PROC
EXTRN	av_packet_unref:PROC
EXTRN	av_bsf_get_by_name:PROC
EXTRN	av_bsf_alloc:PROC
EXTRN	av_bsf_init:PROC
EXTRN	av_bsf_send_packet:PROC
EXTRN	av_bsf_receive_packet:PROC
EXTRN	av_bsf_free:PROC
EXTRN	?picstrcut_rgy_to_avfieldorder@@YA?AW4AVFieldOrder@@W4RGY_PICSTRUCT@@@Z:PROC ; picstrcut_rgy_to_avfieldorder
EXTRN	?qsv_av_err2str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z:PROC ; qsv_av_err2str
EXTRN	?check_avcodec_dll@@YA_NXZ:PROC			; check_avcodec_dll
EXTRN	?error_mes_avcodec_dll_not_found@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:PROC ; error_mes_avcodec_dll_not_found
EXTRN	?csp_rgy_to_avpixfmt@@YA?AW4AVPixelFormat@@W4RGY_CSP@@@Z:PROC ; csp_rgy_to_avpixfmt
EXTRN	?csp_enc_to_rgy@@YA?AW4RGY_CSP@@I@Z:PROC	; csp_enc_to_rgy
EXTRN	??_ERGYOutput@@UEAAPEAXI@Z:PROC			; RGYOutput::`vector deleting destructor'
EXTRN	??_ERGYOutputRaw@@UEAAPEAXI@Z:PROC		; RGYOutputRaw::`vector deleting destructor'
EXTRN	??_ECQSVOutFrame@@UEAAPEAXI@Z:PROC		; CQSVOutFrame::`vector deleting destructor'
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__security_cookie:QWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?CspMatrixList@@3V?$array@W4CspMatrix@@$0O@@std@@B DB 038H DUP (?) ; CspMatrixList
?CspTransferList@@3V?$array@W4CspTransfer@@$0P@@std@@B DB 03cH DUP (?) ; CspTransferList
?CspColorprimList@@3V?$array@W4CspColorprim@@$0M@@std@@B DB 030H DUP (?) ; CspColorprimList
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+83
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA DD imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$__local_stdio_printf_options DD imagerel $LN3
	DD	imagerel $LN3+11
	DD	imagerel $unwind$__local_stdio_printf_options
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsprintf_s_l DD imagerel $LN5
	DD	imagerel $LN5+133
	DD	imagerel $unwind$_vsprintf_s_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$vsprintf_s DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$vsprintf_s
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vscprintf_l DD imagerel $LN5
	DD	imagerel $LN5+130
	DD	imagerel $unwind$_vscprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vscprintf DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$_vscprintf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$sprintf_s DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$sprintf_s
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+14
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+424
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Convert_size@_K@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Convert_size@_K@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN8
	DD	imagerel $LN8+175
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DD imagerel $LN6
	DD	imagerel $LN6+182
	DD	imagerel $unwind$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA DD imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Iterator_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0_Iterator_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Iterator_base12@std@@QEAA@AEBU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$??0_Iterator_base12@std@@QEAA@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DD imagerel $LN7
	DD	imagerel $LN7+161
	DD	imagerel $unwind$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA DD imagerel ?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA
	DD	imagerel ?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Iterator_base12@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+92
	DD	imagerel $unwind$??1_Iterator_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD imagerel $LN8
	DD	imagerel $LN8+251
	DD	imagerel $unwind$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA DD imagerel ?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA DD imagerel ?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
	DD	imagerel ?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA+36
	DD	imagerel $unwind$?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+76
	DD	imagerel $unwind$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DD imagerel $LN15
	DD	imagerel $LN15+270
	DD	imagerel $unwind$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decref@_Ref_count_base@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+87
	DD	imagerel $unwind$?_Decref@_Ref_count_base@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decwref@_Ref_count_base@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$?_Decwref@_Ref_count_base@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@D@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@D@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+15
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+95
	DD	imagerel $unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+68
	DD	imagerel $unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+54
	DD	imagerel $unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD imagerel $LN5
	DD	imagerel $LN5+220
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+163
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD imagerel $LN5
	DD	imagerel $LN5+126
	DD	imagerel $unwind$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+153
	DD	imagerel $unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+270
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD imagerel $LN4
	DD	imagerel $LN4+270
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+198
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z DD imagerel $LN12
	DD	imagerel $LN12+197
	DD	imagerel $unwind$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z DD imagerel $LN12
	DD	imagerel $LN12+197
	DD	imagerel $unwind$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+153
	DD	imagerel $unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z DD imagerel $LN5
	DD	imagerel $LN5+125
	DD	imagerel $unwind$?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z DD imagerel $LN7
	DD	imagerel $LN7+219
	DD	imagerel $unwind$?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD imagerel $LN5
	DD	imagerel $LN5+189
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+190
	DD	imagerel $unwind$?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+214
	DD	imagerel $unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+50
	DD	imagerel $unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_tcscmp DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$_tcscmp
pdata	ENDS
pdata	SEGMENT
$pdata$??I@YA?AW4RGY_PICSTRUCT@@W40@0@Z DD imagerel ??I@YA?AW4RGY_PICSTRUCT@@W40@0@Z
	DD	imagerel ??I@YA?AW4RGY_PICSTRUCT@@W40@0@Z+23
	DD	imagerel $unwind$??I@YA?AW4RGY_PICSTRUCT@@W40@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Raligned_malloc_deleter@@QEBAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??Raligned_malloc_deleter@@QEBAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Rmalloc_deleter@@QEBAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??Rmalloc_deleter@@QEBAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Rfp_deleter@@QEBAXPEAU_iobuf@@@Z DD imagerel $LN4
	DD	imagerel $LN4+71
	DD	imagerel $unwind$??Rfp_deleter@@QEBAXPEAU_iobuf@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$??U@YA?AW4RGY_FRAMETYPE@@W40@0@Z DD imagerel ??U@YA?AW4RGY_FRAMETYPE@@W40@0@Z
	DD	imagerel ??U@YA?AW4RGY_FRAMETYPE@@W40@0@Z+23
	DD	imagerel $unwind$??U@YA?AW4RGY_FRAMETYPE@@W40@0@Z
$pdata$??_5@YA?AW4RGY_FRAMETYPE@@AEAW40@W40@@Z DD imagerel ??_5@YA?AW4RGY_FRAMETYPE@@AEAW40@W40@@Z
	DD	imagerel ??_5@YA?AW4RGY_FRAMETYPE@@AEAW40@W40@@Z+70
	DD	imagerel $unwind$??_5@YA?AW4RGY_FRAMETYPE@@AEAW40@W40@@Z
$pdata$??I@YA?AW4RGY_FRAMETYPE@@W40@0@Z DD imagerel ??I@YA?AW4RGY_FRAMETYPE@@W40@0@Z
	DD	imagerel ??I@YA?AW4RGY_FRAMETYPE@@W40@0@Z+23
	DD	imagerel $unwind$??I@YA?AW4RGY_FRAMETYPE@@W40@0@Z
$pdata$?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z DD imagerel ?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z
	DD	imagerel ?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z+138
	DD	imagerel $unwind$?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+297
	DD	imagerel $unwind$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspMatrixList@@YAXXZ DD imagerel ??__ECspMatrixList@@YAXXZ
	DD	imagerel ??__ECspMatrixList@@YAXXZ+452
	DD	imagerel $unwind$??__ECspMatrixList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+311
	DD	imagerel $unwind$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspTransferList@@YAXXZ DD imagerel ??__ECspTransferList@@YAXXZ
	DD	imagerel ??__ECspTransferList@@YAXXZ+476
	DD	imagerel $unwind$??__ECspTransferList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+263
	DD	imagerel $unwind$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspColorprimList@@YAXXZ DD imagerel ??__ECspColorprimList@@YAXXZ
	DD	imagerel ??__ECspColorprimList@@YAXXZ+398
	DD	imagerel $unwind$??__ECspColorprimList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0VideoVUIInfo@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+184
	DD	imagerel $unwind$??0VideoVUIInfo@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+270
	DD	imagerel $unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA DD imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA DD imagerel ?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA
	DD	imagerel ?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA+52
	DD	imagerel $unwind$?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA DD imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA+49
	DD	imagerel $unwind$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA DD imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA+49
	DD	imagerel $unwind$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0VideoInfo@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??0VideoInfo@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$min@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN13
	DD	imagerel $LN13+214
	DD	imagerel $unwind$??$min@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getLogLevel@RGYLog@@QEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?getLogLevel@RGYLog@@QEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$_Ptr_base@VEncodeStatus@@@std@@IEBAPEAVEncodeStatus@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?get@?$_Ptr_base@VEncodeStatus@@@std@@IEBAPEAVEncodeStatus@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+61
	DD	imagerel $unwind$??B?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAAAEAUfp_deleter@@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAAAEAUfp_deleter@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetOutputData@EncodeStatus@@QEAAXW4RGY_FRAMETYPE@@_KI@Z DD imagerel $LN3
	DD	imagerel $LN3+608
	DD	imagerel $unwind$?SetOutputData@EncodeStatus@@QEAAXW4RGY_FRAMETYPE@@_KI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?getAVCodecId@@YA?BW4AVCodecID@@W4RGY_CODEC@@@Z DD imagerel ?getAVCodecId@@YA?BW4AVCodecID@@W4RGY_CODEC@@@Z
	DD	imagerel ?getAVCodecId@@YA?BW4AVCodecID@@W4RGY_CODEC@@@Z+102
	DD	imagerel $unwind$?getAVCodecId@@YA?BW4AVCodecID@@W4RGY_CODEC@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?_Unchecked_end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+247
	DD	imagerel $unwind$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$??U@YA?AW4MemType@@W40@0@Z DD imagerel ??U@YA?AW4MemType@@W40@0@Z
	DD	imagerel ??U@YA?AW4MemType@@W40@0@Z+23
	DD	imagerel $unwind$??U@YA?AW4MemType@@W40@0@Z
$pdata$??I@YA?AW4MemType@@W40@0@Z DD imagerel ??I@YA?AW4MemType@@W40@0@Z
	DD	imagerel ??I@YA?AW4MemType@@W40@0@Z+23
	DD	imagerel $unwind$??I@YA?AW4MemType@@W40@0@Z
$pdata$?frametype_enc_to_rgy@@YA?AW4RGY_FRAMETYPE@@I@Z DD imagerel ?frametype_enc_to_rgy@@YA?AW4RGY_FRAMETYPE@@I@Z
	DD	imagerel ?frametype_enc_to_rgy@@YA?AW4RGY_FRAMETYPE@@I@Z+419
	DD	imagerel $unwind$?frametype_enc_to_rgy@@YA?AW4RGY_FRAMETYPE@@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?data@RGYBitstream@@QEBAPEAEXZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$?data@RGYBitstream@@QEBAPEAEXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?frametype@RGYBitstream@@QEBA?AW4RGY_FRAMETYPE@@XZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?frametype@RGYBitstream@@QEBA?AW4RGY_FRAMETYPE@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@RGYBitstream@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?size@RGYBitstream@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?setSize@RGYBitstream@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$?setSize@RGYBitstream@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?bufsize@RGYBitstream@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?bufsize@RGYBitstream@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@RGYBitstream@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$?clear@RGYBitstream@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?trim@RGYBitstream@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+115
	DD	imagerel $unwind$?trim@RGYBitstream@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?changeSize@RGYBitstream@@QEAA?AW4RGY_ERR@@_K@Z DD imagerel $LN5
	DD	imagerel $LN5+235
	DD	imagerel $unwind$?changeSize@RGYBitstream@@QEAA?AW4RGY_ERR@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ptrY@RGYFrame@@QEAAPEAEXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?ptrY@RGYFrame@@QEAAPEAEXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ptrUV@RGYFrame@@QEAAPEAEXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?ptrUV@RGYFrame@@QEAAPEAEXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ptrU@RGYFrame@@QEAAPEAEXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?ptrU@RGYFrame@@QEAAPEAEXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ptrV@RGYFrame@@QEAAPEAEXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?ptrV@RGYFrame@@QEAAPEAEXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ptrRGB@RGYFrame@@QEAAPEAEXZ DD imagerel $LN3
	DD	imagerel $LN3+113
	DD	imagerel $unwind$?ptrRGB@RGYFrame@@QEAAPEAEXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pitch@RGYFrame@@QEAAIXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?pitch@RGYFrame@@QEAAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?width@RGYFrame@@QEAAIXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?width@RGYFrame@@QEAAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?height@RGYFrame@@QEAAIXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?height@RGYFrame@@QEAAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ DD imagerel $LN3
	DD	imagerel $LN3+246
	DD	imagerel $unwind$?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?csp@RGYFrame@@QEAA?AW4RGY_CSP@@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?csp@RGYFrame@@QEAA?AW4RGY_CSP@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$min@PEAE@std@@YAAEBQEAEAEBQEAE0@Z DD imagerel $LN13
	DD	imagerel $LN13+214
	DD	imagerel $unwind$??$min@PEAE@std@@YAAEBQEAEAEBQEAE0@Z
pdata	ENDS
pdata	SEGMENT
$pdata$??0RGYOutput@@QEAA@XZ DD imagerel $LN11
	DD	imagerel $LN11+335
	DD	imagerel $unwind$??0RGYOutput@@QEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???0RGYOutput@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0RGYOutput@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0RGYOutput@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0RGYOutput@@QEAA@XZ@4HA
$pdata$?dtor$1@?0???0RGYOutput@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0RGYOutput@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0RGYOutput@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???0RGYOutput@@QEAA@XZ@4HA
$pdata$?dtor$2@?0???0RGYOutput@@QEAA@XZ@4HA DD imagerel ?dtor$2@?0???0RGYOutput@@QEAA@XZ@4HA
	DD	imagerel ?dtor$2@?0???0RGYOutput@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$2@?0???0RGYOutput@@QEAA@XZ@4HA
$pdata$?dtor$3@?0???0RGYOutput@@QEAA@XZ@4HA DD imagerel ?dtor$3@?0???0RGYOutput@@QEAA@XZ@4HA
	DD	imagerel ?dtor$3@?0???0RGYOutput@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$3@?0???0RGYOutput@@QEAA@XZ@4HA
$pdata$?dtor$4@?0???0RGYOutput@@QEAA@XZ@4HA DD imagerel ?dtor$4@?0???0RGYOutput@@QEAA@XZ@4HA
	DD	imagerel ?dtor$4@?0???0RGYOutput@@QEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$4@?0???0RGYOutput@@QEAA@XZ@4HA
$pdata$?dtor$5@?0???0RGYOutput@@QEAA@XZ@4HA DD imagerel ?dtor$5@?0???0RGYOutput@@QEAA@XZ@4HA
	DD	imagerel ?dtor$5@?0???0RGYOutput@@QEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$5@?0???0RGYOutput@@QEAA@XZ@4HA
$pdata$?dtor$6@?0???0RGYOutput@@QEAA@XZ@4HA DD imagerel ?dtor$6@?0???0RGYOutput@@QEAA@XZ@4HA
	DD	imagerel ?dtor$6@?0???0RGYOutput@@QEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$6@?0???0RGYOutput@@QEAA@XZ@4HA
$pdata$?dtor$7@?0???0RGYOutput@@QEAA@XZ@4HA DD imagerel ?dtor$7@?0???0RGYOutput@@QEAA@XZ@4HA
	DD	imagerel ?dtor$7@?0???0RGYOutput@@QEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$7@?0???0RGYOutput@@QEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$??1RGYOutput@@UEAA@XZ DD imagerel $LN11
	DD	imagerel $LN11+252
	DD	imagerel $unwind$??1RGYOutput@@UEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???1RGYOutput@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1RGYOutput@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1RGYOutput@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1RGYOutput@@UEAA@XZ@4HA
$pdata$?dtor$1@?0???1RGYOutput@@UEAA@XZ@4HA DD imagerel ?dtor$1@?0???1RGYOutput@@UEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???1RGYOutput@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???1RGYOutput@@UEAA@XZ@4HA
$pdata$?dtor$2@?0???1RGYOutput@@UEAA@XZ@4HA DD imagerel ?dtor$2@?0???1RGYOutput@@UEAA@XZ@4HA
	DD	imagerel ?dtor$2@?0???1RGYOutput@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$2@?0???1RGYOutput@@UEAA@XZ@4HA
$pdata$?dtor$3@?0???1RGYOutput@@UEAA@XZ@4HA DD imagerel ?dtor$3@?0???1RGYOutput@@UEAA@XZ@4HA
	DD	imagerel ?dtor$3@?0???1RGYOutput@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$3@?0???1RGYOutput@@UEAA@XZ@4HA
$pdata$?dtor$4@?0???1RGYOutput@@UEAA@XZ@4HA DD imagerel ?dtor$4@?0???1RGYOutput@@UEAA@XZ@4HA
	DD	imagerel ?dtor$4@?0???1RGYOutput@@UEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$4@?0???1RGYOutput@@UEAA@XZ@4HA
$pdata$?dtor$5@?0???1RGYOutput@@UEAA@XZ@4HA DD imagerel ?dtor$5@?0???1RGYOutput@@UEAA@XZ@4HA
	DD	imagerel ?dtor$5@?0???1RGYOutput@@UEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$5@?0???1RGYOutput@@UEAA@XZ@4HA
$pdata$?dtor$6@?0???1RGYOutput@@UEAA@XZ@4HA DD imagerel ?dtor$6@?0???1RGYOutput@@UEAA@XZ@4HA
	DD	imagerel ?dtor$6@?0???1RGYOutput@@UEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$6@?0???1RGYOutput@@UEAA@XZ@4HA
$pdata$?dtor$7@?0???1RGYOutput@@UEAA@XZ@4HA DD imagerel ?dtor$7@?0???1RGYOutput@@UEAA@XZ@4HA
	DD	imagerel ?dtor$7@?0???1RGYOutput@@UEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$7@?0???1RGYOutput@@UEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?Close@RGYOutput@@UEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+280
	DD	imagerel $unwind$?Close@RGYOutput@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?outputStdout@RGYOutput@@UEAA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?outputStdout@RGYOutput@@UEAA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getOutType@RGYOutput@@UEAA?AW4OutputType@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?getOutType@RGYOutput@@UEAA?AW4OutputType@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WaitFin@RGYOutput@@UEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$?WaitFin@RGYOutput@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN14
	DD	imagerel $LN14+686
	DD	imagerel $unwind$?AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$0@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$1@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$2@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$2@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$3@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$3@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$4@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$4@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddMessage@RGYOutput@@QEAAXHPEBDZZ DD imagerel $LN6
	DD	imagerel $LN6+354
	DD	imagerel $unwind$?AddMessage@RGYOutput@@QEAAXHPEBDZZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??AddMessage@RGYOutput@@QEAAXHPEBDZZ@4HA DD imagerel ?dtor$0@?0??AddMessage@RGYOutput@@QEAAXHPEBDZZ@4HA
	DD	imagerel ?dtor$0@?0??AddMessage@RGYOutput@@QEAAXHPEBDZZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??AddMessage@RGYOutput@@QEAAXHPEBDZZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$??1?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$unique_ptr@DUmalloc_deleter@@@std@@QEBAPEADXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?get@?$unique_ptr@DUmalloc_deleter@@@std@@QEBAPEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$unique_ptr@DUmalloc_deleter@@@std@@QEAAXPEAD@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$?reset@?$unique_ptr@DUmalloc_deleter@@@std@@QEAAXPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@Umalloc_deleter@@PEAD$00@std@@QEAAAEAUmalloc_deleter@@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@Umalloc_deleter@@PEAD$00@std@@QEAAAEAUmalloc_deleter@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$??1?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEBAPEAEXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?get@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEBAPEAEXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAAXPEAE@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$?reset@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAAXPEAE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAAAEAUaligned_malloc_deleter@@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAAAEAUaligned_malloc_deleter@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GRGYOutput@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_GRGYOutput@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z DD imagerel $LN5
	DD	imagerel $LN5+79
	DD	imagerel $unwind$??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@E@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@E@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@E@std@@QEAAXQEAE_K@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$?deallocate@?$allocator@E@std@@QEAAXQEAE_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@E@std@@QEAAPEAE_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@E@std@@QEAAPEAE_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@E@std@@@std@@SA_KAEBV?$allocator@E@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+15
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@E@std@@@std@@SA_KAEBV?$allocator@E@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Copy_assign@?$vector@EV?$allocator@E@std@@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+125
	DD	imagerel $unwind$?_Copy_assign@?$vector@EV?$allocator@E@std@@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Clear_and_reserve_geometric@?$vector@EV?$allocator@E@std@@@std@@AEAAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+281
	DD	imagerel $unwind$?_Clear_and_reserve_geometric@?$vector@EV?$allocator@E@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$vector@EV?$allocator@E@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+128
	DD	imagerel $unwind$?clear@?$vector@EV?$allocator@E@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?data@?$vector@EV?$allocator@E@std@@@std@@QEAAPEAEXZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?data@?$vector@EV?$allocator@E@std@@@std@@QEAAPEAEXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@EV?$allocator@E@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?size@?$vector@EV?$allocator@E@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@EV?$allocator@E@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?max_size@?$vector@EV?$allocator@E@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@EV?$allocator@E@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?capacity@?$vector@EV?$allocator@E@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@EV?$allocator@E@std@@@std@@AEAAXPEAE0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@EV?$allocator@E@std@@@std@@AEAAXPEAE0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@EV?$allocator@E@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+166
	DD	imagerel $unwind$?_Calculate_growth@?$vector@EV?$allocator@E@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@EV?$allocator@E@std@@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+171
	DD	imagerel $unwind$?_Buy_raw@?$vector@EV?$allocator@E@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+233
	DD	imagerel $unwind$?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@EV?$allocator@E@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlength@?$vector@EV?$allocator@E@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEAAAEAV?$allocator@E@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEAAAEAV?$allocator@E@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEBAAEBV?$allocator@E@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEBAAEBV?$allocator@E@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@E@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@E@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEAAAEAV?$allocator@E@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEAAAEAV?$allocator@E@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEBAAEBV?$allocator@E@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEBAAEBV?$allocator@E@2@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$??0RGYOutputRaw@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+143
	DD	imagerel $unwind$??0RGYOutputRaw@@QEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???0RGYOutputRaw@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0RGYOutputRaw@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0RGYOutputRaw@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0RGYOutputRaw@@QEAA@XZ@4HA
$pdata$?dtor$1@?0???0RGYOutputRaw@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0RGYOutputRaw@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0RGYOutputRaw@@QEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$1@?0???0RGYOutputRaw@@QEAA@XZ@4HA
$pdata$?dtor$2@?0???0RGYOutputRaw@@QEAA@XZ@4HA DD imagerel ?dtor$2@?0???0RGYOutputRaw@@QEAA@XZ@4HA
	DD	imagerel ?dtor$2@?0???0RGYOutputRaw@@QEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$2@?0???0RGYOutputRaw@@QEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$??1RGYOutputRaw@@UEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+124
	DD	imagerel $unwind$??1RGYOutputRaw@@UEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???1RGYOutputRaw@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1RGYOutputRaw@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1RGYOutputRaw@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1RGYOutputRaw@@UEAA@XZ@4HA
$pdata$?dtor$1@?0???1RGYOutputRaw@@UEAA@XZ@4HA DD imagerel ?dtor$1@?0???1RGYOutputRaw@@UEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???1RGYOutputRaw@@UEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$1@?0???1RGYOutputRaw@@UEAA@XZ@4HA
$pdata$?dtor$2@?0???1RGYOutputRaw@@UEAA@XZ@4HA DD imagerel ?dtor$2@?0???1RGYOutputRaw@@UEAA@XZ@4HA
	DD	imagerel ?dtor$2@?0???1RGYOutputRaw@@UEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$2@?0???1RGYOutputRaw@@UEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z DD imagerel $LN60
	DD	imagerel $LN60+4413
	DD	imagerel $unwind$?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD imagerel ?dtor$0@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DD	imagerel ?dtor$0@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
$pdata$?dtor$1@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD imagerel ?dtor$1@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DD	imagerel ?dtor$1@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
$pdata$?dtor$2@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD imagerel ?dtor$2@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DD	imagerel ?dtor$2@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
$pdata$?dtor$3@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD imagerel ?dtor$3@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DD	imagerel ?dtor$3@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
$pdata$?dtor$4@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD imagerel ?dtor$4@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DD	imagerel ?dtor$4@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
$pdata$?dtor$5@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD imagerel ?dtor$5@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DD	imagerel ?dtor$5@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$5@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
$pdata$?dtor$6@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD imagerel ?dtor$6@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DD	imagerel ?dtor$6@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$6@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
$pdata$?dtor$7@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD imagerel ?dtor$7@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DD	imagerel ?dtor$7@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$7@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
$pdata$?dtor$8@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD imagerel ?dtor$8@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DD	imagerel ?dtor$8@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$8@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
$pdata$?dtor$9@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD imagerel ?dtor$9@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DD	imagerel ?dtor$9@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$9@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
$pdata$?dtor$10@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD imagerel ?dtor$10@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DD	imagerel ?dtor$10@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$10@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
$pdata$?dtor$11@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD imagerel ?dtor$11@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DD	imagerel ?dtor$11@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$11@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
$pdata$?dtor$12@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD imagerel ?dtor$12@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DD	imagerel ?dtor$12@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$12@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
$pdata$?dtor$13@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD imagerel ?dtor$13@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DD	imagerel ?dtor$13@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$13@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
$pdata$?dtor$14@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD imagerel ?dtor$14@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DD	imagerel ?dtor$14@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$14@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
$pdata$?dtor$15@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD imagerel ?dtor$15@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DD	imagerel ?dtor$15@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$15@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
$pdata$?dtor$16@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD imagerel ?dtor$16@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DD	imagerel ?dtor$16@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$16@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
$pdata$?dtor$17@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD imagerel ?dtor$17@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DD	imagerel ?dtor$17@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$17@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
$pdata$?dtor$18@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD imagerel ?dtor$18@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DD	imagerel ?dtor$18@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$18@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
$pdata$?dtor$19@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD imagerel ?dtor$19@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DD	imagerel ?dtor$19@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$19@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
$pdata$?dtor$20@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD imagerel ?dtor$20@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DD	imagerel ?dtor$20@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$20@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
$pdata$?dtor$21@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD imagerel ?dtor$21@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DD	imagerel ?dtor$21@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA+58
	DD	imagerel $unwind$?dtor$21@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
$pdata$?dtor$22@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD imagerel ?dtor$22@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DD	imagerel ?dtor$22@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA+58
	DD	imagerel $unwind$?dtor$22@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
$pdata$?dtor$23@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD imagerel ?dtor$23@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DD	imagerel ?dtor$23@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA+58
	DD	imagerel $unwind$?dtor$23@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z
$pdata$?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z DD imagerel $LN53
	DD	imagerel $LN53+3944
	DD	imagerel $unwind$?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA DD imagerel ?dtor$0@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
	DD	imagerel ?dtor$0@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
$pdata$?dtor$1@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA DD imagerel ?dtor$1@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
	DD	imagerel ?dtor$1@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
$pdata$?dtor$2@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA DD imagerel ?dtor$2@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
	DD	imagerel ?dtor$2@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
$pdata$?dtor$3@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA DD imagerel ?dtor$3@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
	DD	imagerel ?dtor$3@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
$pdata$?dtor$4@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA DD imagerel ?dtor$4@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
	DD	imagerel ?dtor$4@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
$pdata$?dtor$5@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA DD imagerel ?dtor$5@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
	DD	imagerel ?dtor$5@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA+38
	DD	imagerel $unwind$?dtor$5@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
$pdata$?dtor$6@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA DD imagerel ?dtor$6@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
	DD	imagerel ?dtor$6@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA+38
	DD	imagerel $unwind$?dtor$6@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
$pdata$?dtor$7@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA DD imagerel ?dtor$7@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
	DD	imagerel ?dtor$7@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA+38
	DD	imagerel $unwind$?dtor$7@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
$pdata$?dtor$8@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA DD imagerel ?dtor$8@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
	DD	imagerel ?dtor$8@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA+38
	DD	imagerel $unwind$?dtor$8@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
$pdata$?dtor$9@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA DD imagerel ?dtor$9@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
	DD	imagerel ?dtor$9@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA+38
	DD	imagerel $unwind$?dtor$9@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
$pdata$?dtor$10@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA DD imagerel ?dtor$10@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
	DD	imagerel ?dtor$10@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA+38
	DD	imagerel $unwind$?dtor$10@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
$pdata$?dtor$11@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA DD imagerel ?dtor$11@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
	DD	imagerel ?dtor$11@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA+38
	DD	imagerel $unwind$?dtor$11@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
$pdata$?dtor$12@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA DD imagerel ?dtor$12@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
	DD	imagerel ?dtor$12@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA+38
	DD	imagerel $unwind$?dtor$12@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+57
	DD	imagerel $unwind$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z DD imagerel $LN5
	DD	imagerel $LN5+75
	DD	imagerel $unwind$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z@4HA DD imagerel ?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z@4HA DD imagerel ?dtor$1@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$RGYAVDeleter@UAVBSFContext@@@@QEAAXPEAUAVBSFContext@@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??R?$RGYAVDeleter@UAVBSFContext@@@@QEAAXPEAUAVBSFContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??0?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEBAXPEAPEAUAVBSFContext@@@Z DD imagerel $LN4
	DD	imagerel $LN4+117
	DD	imagerel $unwind$??R?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEBAXPEAPEAUAVBSFContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Empty@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$?_Empty@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Reset_copy@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAXAEBV12@@Z DD imagerel $LN4
	DD	imagerel $LN4+119
	DD	imagerel $unwind$?_Reset_copy@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Reset_move@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAX$$QEAV12@@Z DD imagerel $LN6
	DD	imagerel $LN6+184
	DD	imagerel $unwind$?_Reset_move@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAX$$QEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+130
	DD	imagerel $unwind$?_Tidy@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Local@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+79
	DD	imagerel $unwind$?_Local@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getimpl@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$?_Getimpl@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Set@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$?_Set@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$T@Z DD imagerel $LN4
	DD	imagerel $LN4+57
	DD	imagerel $unwind$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$T@Z@4HA DD imagerel ?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$T@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$T@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$T@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$QEAV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$QEAV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$QEAV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$QEAV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+96
	DD	imagerel $unwind$??4?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+50
	DD	imagerel $unwind$??1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@$$QEAU0@@Z DD imagerel $LN4
	DD	imagerel $LN4+65
	DD	imagerel $unwind$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@$$QEAU0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@$$QEAU0@@Z@4HA DD imagerel ?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@$$QEAU0@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@$$QEAU0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@$$QEAU0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$RGYAVDeleter@UAVBSFContext@@@@QEAAAEAU0@$$QEAU0@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??4?$RGYAVDeleter@UAVBSFContext@@@@QEAAAEAU0@$$QEAU0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+138
	DD	imagerel $unwind$??4?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBAPEAUAVBSFContext@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??C?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBAPEAUAVBSFContext@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBAPEAUAVBSFContext@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?get@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBAPEAUAVBSFContext@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+62
	DD	imagerel $unwind$??B?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?release@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAPEAUAVBSFContext@@XZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?release@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAPEAUAVBSFContext@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAXPEAUAVBSFContext@@@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$?reset@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAXPEAUAVBSFContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAAAEAU?$RGYAVDeleter@UAVBSFContext@@@@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAAAEAU?$RGYAVDeleter@UAVBSFContext@@@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+50
	DD	imagerel $unwind$??1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GRGYOutputRaw@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_GRGYOutputRaw@@UEAAPEAXI@Z
pdata	ENDS
pdata	SEGMENT
$pdata$??0CQSVOutFrame@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+115
	DD	imagerel $unwind$??0CQSVOutFrame@@QEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???0CQSVOutFrame@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0CQSVOutFrame@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0CQSVOutFrame@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0CQSVOutFrame@@QEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$??1CQSVOutFrame@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??1CQSVOutFrame@@UEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???1CQSVOutFrame@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1CQSVOutFrame@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1CQSVOutFrame@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1CQSVOutFrame@@UEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?WriteNextFrame@CQSVOutFrame@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?WriteNextFrame@CQSVOutFrame@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z
$pdata$?WriteNextFrame@CQSVOutFrame@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z DD imagerel $LN59
	DD	imagerel $LN59+4717
	DD	imagerel $unwind$?WriteNextFrame@CQSVOutFrame@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z
$pdata$?Init@CQSVOutFrame@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z DD imagerel $LN9
	DD	imagerel $LN9+387
	DD	imagerel $unwind$?Init@CQSVOutFrame@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GCQSVOutFrame@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_GCQSVOutFrame@@UEAAPEAXI@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z DD imagerel ?parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z
	DD	imagerel ?parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z+781
	DD	imagerel $unwind$?parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA DD imagerel ?dtor$0@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA
	DD	imagerel ?dtor$0@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA
$pdata$?dtor$1@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA DD imagerel ?dtor$1@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA
	DD	imagerel ?dtor$1@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA
$pdata$?dtor$2@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA DD imagerel ?dtor$2@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA
	DD	imagerel ?dtor$2@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA
$pdata$?dtor$3@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA DD imagerel ?dtor$3@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA
	DD	imagerel ?dtor$3@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA+58
	DD	imagerel $unwind$?dtor$3@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@Unal_info@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@Unal_info@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@Unal_info@@@std@@QEAAXQEAUnal_info@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$allocator@Unal_info@@@std@@QEAAXQEAUnal_info@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@Unal_info@@@std@@QEAAPEAUnal_info@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@Unal_info@@@std@@QEAAPEAUnal_info@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@Unal_info@@@std@@@std@@SA_KAEBV?$allocator@Unal_info@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@Unal_info@@@std@@@std@@SA_KAEBV?$allocator@Unal_info@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Move_construct@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?_Move_construct@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+163
	DD	imagerel $unwind$??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Move_assign@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+115
	DD	imagerel $unwind$?_Move_assign@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$??4?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAXAEBUnal_info@@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?push_back@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAXAEBUnal_info@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+110
	DD	imagerel $unwind$?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA DD imagerel ?dtor$0@?0??begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA
	DD	imagerel ?dtor$0@?0??begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA+49
	DD	imagerel $unwind$?dtor$0@?0??begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+110
	DD	imagerel $unwind$?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA DD imagerel ?dtor$0@?0??begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA
	DD	imagerel ?dtor$0@?0??begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA+49
	DD	imagerel $unwind$?dtor$0@?0??begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+110
	DD	imagerel $unwind$?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA DD imagerel ?dtor$0@?0??end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA
	DD	imagerel ?dtor$0@?0??end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA+49
	DD	imagerel $unwind$?dtor$0@?0??end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+110
	DD	imagerel $unwind$?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA DD imagerel ?dtor$0@?0??end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA
	DD	imagerel ?dtor$0@?0??end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA+49
	DD	imagerel $unwind$?dtor$0@?0??end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBAPEBUnal_info@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBAPEBUnal_info@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBAPEBUnal_info@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?_Unchecked_end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBAPEBUnal_info@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?size@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?max_size@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?capacity@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAPEAUnal_info@@PEAU3@00@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Umove@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAPEAUnal_info@@PEAU3@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept1@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@00U?$integral_constant@_N$00@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Umove_if_noexcept1@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@00U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@00@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?_Umove_if_noexcept@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+166
	DD	imagerel $unwind$?_Calculate_growth@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXQEAUnal_info@@_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+281
	DD	imagerel $unwind$?_Change_array@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXQEAUnal_info@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+247
	DD	imagerel $unwind$?_Tidy@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlength@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z DD imagerel $LN9
	DD	imagerel $LN9+214
	DD	imagerel $unwind$?_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAAEAV?$allocator@Unal_info@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAAEAV?$allocator@Unal_info@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAAEBV?$allocator@Unal_info@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAAEBV?$allocator@Unal_info@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Take_contents@?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@QEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+149
	DD	imagerel $unwind$?_Take_contents@?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@QEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Unal_info@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Unal_info@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Unal_info@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Unal_info@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+92
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEBUnal_info@@XZ DD imagerel $LN21
	DD	imagerel $LN21+346
	DD	imagerel $unwind$??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEBUnal_info@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAX_J@Z DD imagerel $LN33
	DD	imagerel $LN33+533
	DD	imagerel $unwind$?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAX_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAAEAV01@_J@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAAEAV01@_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Z?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAAEAV01@_J@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??Z?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAAEAV01@_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA_NAEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+99
	DD	imagerel $unwind$??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA_NAEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+86
	DD	imagerel $unwind$??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAXAEBV12@@Z DD imagerel $LN12
	DD	imagerel $LN12+195
	DD	imagerel $unwind$?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@1@0@Z DD imagerel $LN21
	DD	imagerel $LN21+334
	DD	imagerel $unwind$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unwrapped@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEBUnal_info@@XZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?_Unwrapped@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEBUnal_info@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAXPEBUnal_info@@@Z DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAXPEBUnal_info@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+80
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+80
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEAUnal_info@@XZ DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEAUnal_info@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAAEAV01@_J@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAAEAV01@_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z DD imagerel $LN6
	DD	imagerel $LN6+146
	DD	imagerel $unwind$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z@4HA DD imagerel ?dtor$0@?0???G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z@4HA
	DD	imagerel ?dtor$0@?0???G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z@4HA DD imagerel ?dtor$1@?0???G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z@4HA
	DD	imagerel ?dtor$1@?0???G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z@4HA+49
	DD	imagerel $unwind$?dtor$1@?0???G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEAUnal_info@@XZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEAUnal_info@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z DD imagerel ?parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z
	DD	imagerel ?parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z+783
	DD	imagerel $unwind$?parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA DD imagerel ?dtor$0@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA
	DD	imagerel ?dtor$0@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA
$pdata$?dtor$1@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA DD imagerel ?dtor$1@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA
	DD	imagerel ?dtor$1@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA
$pdata$?dtor$2@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA DD imagerel ?dtor$2@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA
	DD	imagerel ?dtor$2@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA
$pdata$?dtor$3@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA DD imagerel ?dtor$3@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA
	DD	imagerel ?dtor$3@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA+58
	DD	imagerel $unwind$?dtor$3@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?WriteY4MHeader@@YA?AW4RGY_ERR@@PEAU_iobuf@@PEBUVideoInfo@@@Z DD imagerel ?WriteY4MHeader@@YA?AW4RGY_ERR@@PEAU_iobuf@@PEBUVideoInfo@@@Z
	DD	imagerel ?WriteY4MHeader@@YA?AW4RGY_ERR@@PEAU_iobuf@@PEBUVideoInfo@@@Z+853
	DD	imagerel $unwind$?WriteY4MHeader@@YA?AW4RGY_ERR@@PEAU_iobuf@@PEBUVideoInfo@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0Umalloc_deleter@@$0A@@?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??$?0Umalloc_deleter@@$0A@@?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0Ualigned_malloc_deleter@@$0A@@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??$?0Ualigned_malloc_deleter@@$0A@@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+60
	DD	imagerel $unwind$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+54
	DD	imagerel $unwind$??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z DD imagerel $LN5
	DD	imagerel $LN5+75
	DD	imagerel $unwind$??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z@4HA DD imagerel ?dtor$0@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z@4HA DD imagerel ?dtor$1@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$RGYAVDeleter@UAVCodecParameters@@@@QEAAXPEAUAVCodecParameters@@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??R?$RGYAVDeleter@UAVCodecParameters@@@@QEAAXPEAUAVCodecParameters@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??0?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEBAXPEAPEAUAVCodecParameters@@@Z DD imagerel $LN4
	DD	imagerel $LN4+117
	DD	imagerel $unwind$??R?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEBAXPEAPEAUAVCodecParameters@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Empty@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$?_Empty@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Reset_copy@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAXAEBV12@@Z DD imagerel $LN4
	DD	imagerel $LN4+119
	DD	imagerel $unwind$?_Reset_copy@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Reset_move@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAX$$QEAV12@@Z DD imagerel $LN6
	DD	imagerel $LN6+184
	DD	imagerel $unwind$?_Reset_move@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAX$$QEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+130
	DD	imagerel $unwind$?_Tidy@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Local@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+79
	DD	imagerel $unwind$?_Local@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getimpl@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$?_Getimpl@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Set@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$?_Set@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@$$QEAV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@$$QEAV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@$$QEAV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@$$QEAV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+50
	DD	imagerel $unwind$??1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@$$QEAU0@@Z DD imagerel $LN4
	DD	imagerel $LN4+65
	DD	imagerel $unwind$??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@$$QEAU0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@$$QEAU0@@Z@4HA DD imagerel ?dtor$0@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@$$QEAU0@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@$$QEAU0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@$$QEAU0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAP6AXPEAPEAUAVCodecParameters@@@Z@std@@YAAEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAP6AXPEAPEAUAVCodecParameters@@@Z@std@@YAAEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAPEAUAVCodecParameters@@@std@@YA$$QEAPEAPEAUAVCodecParameters@@AEAPEAPEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAPEAUAVCodecParameters@@@std@@YA$$QEAPEAPEAUAVCodecParameters@@AEAPEAPEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Call@AEAP6AXPEAPEAUAVCodecParameters@@@ZPEAPEAU1@@_Invoker_functor@std@@SAXAEAP6AXPEAPEAUAVCodecParameters@@@Z$$QEAPEAPEAU2@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$_Call@AEAP6AXPEAPEAUAVCodecParameters@@@ZPEAPEAU1@@_Invoker_functor@std@@SAXAEAP6AXPEAPEAUAVCodecParameters@@@Z$$QEAPEAPEAU2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$invoke@AEAP6AXPEAPEAUAVCodecParameters@@@ZPEAPEAU1@@std@@YAXAEAP6AXPEAPEAUAVCodecParameters@@@Z$$QEAPEAPEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??$invoke@AEAP6AXPEAPEAUAVCodecParameters@@@ZPEAPEAU1@@std@@YAXAEAP6AXPEAPEAUAVCodecParameters@@@Z$$QEAPEAPEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@P6AXPEAPEAUAVCodecParameters@@@Z@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@P6AXPEAPEAUAVCodecParameters@@@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@P6AXPEAPEAUAVCodecParameters@@@Z@Z@4HA DD imagerel ?dtor$0@?0???$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@P6AXPEAPEAUAVCodecParameters@@@Z@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@P6AXPEAPEAUAVCodecParameters@@@Z@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@P6AXPEAPEAUAVCodecParameters@@@Z@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??C?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?get@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAAAEAU?$RGYAVDeleter@UAVCodecParameters@@@@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAAAEAU?$RGYAVDeleter@UAVCodecParameters@@@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+50
	DD	imagerel $unwind$??1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@$0A@@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@PEAUAVCodecParameters@@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@@Z DD imagerel $LN4
	DD	imagerel $LN4+86
	DD	imagerel $unwind$??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@$0A@@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@PEAUAVCodecParameters@@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0U?$RGYAVDeleter@UAVCodecParameters@@@@$0A@@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@PEAUAVCodecParameters@@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@@Z@4HA DD imagerel ?dtor$0@?0???$?0U?$RGYAVDeleter@UAVCodecParameters@@@@$0A@@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@PEAUAVCodecParameters@@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0U?$RGYAVDeleter@UAVCodecParameters@@@@$0A@@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@PEAUAVCodecParameters@@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0U?$RGYAVDeleter@UAVCodecParameters@@@@$0A@@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@PEAUAVCodecParameters@@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAP6AXPEAPEAUAVBSFContext@@@Z@std@@YAAEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAP6AXPEAPEAUAVBSFContext@@@Z@std@@YAAEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAPEAUAVBSFContext@@@std@@YA$$QEAPEAPEAUAVBSFContext@@AEAPEAPEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAPEAUAVBSFContext@@@std@@YA$$QEAPEAPEAUAVBSFContext@@AEAPEAPEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Call@AEAP6AXPEAPEAUAVBSFContext@@@ZPEAPEAU1@@_Invoker_functor@std@@SAXAEAP6AXPEAPEAUAVBSFContext@@@Z$$QEAPEAPEAU2@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$_Call@AEAP6AXPEAPEAUAVBSFContext@@@ZPEAPEAU1@@_Invoker_functor@std@@SAXAEAP6AXPEAPEAUAVBSFContext@@@Z$$QEAPEAPEAU2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$invoke@AEAP6AXPEAPEAUAVBSFContext@@@ZPEAPEAU1@@std@@YAXAEAP6AXPEAPEAUAVBSFContext@@@Z$$QEAPEAPEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??$invoke@AEAP6AXPEAPEAUAVBSFContext@@@ZPEAPEAU1@@std@@YAXAEAP6AXPEAPEAUAVBSFContext@@@Z$$QEAPEAPEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@P6AXPEAPEAUAVBSFContext@@@Z@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@P6AXPEAPEAUAVBSFContext@@@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@P6AXPEAPEAUAVBSFContext@@@Z@Z@4HA DD imagerel ?dtor$0@?0???$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@P6AXPEAPEAUAVBSFContext@@@Z@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@P6AXPEAPEAUAVBSFContext@@@Z@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@P6AXPEAPEAUAVBSFContext@@@Z@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@PEAUAVBSFContext@@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@@Z DD imagerel $LN4
	DD	imagerel $LN4+86
	DD	imagerel $unwind$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@PEAUAVBSFContext@@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@PEAUAVBSFContext@@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@@Z@4HA DD imagerel ?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@PEAUAVBSFContext@@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@PEAUAVBSFContext@@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@PEAUAVBSFContext@@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$sprintf_s@$0IA@@@YAHAEAY0IA@DPEBDZZ DD imagerel $LN3
	DD	imagerel $LN3+107
	DD	imagerel $unwind$??$sprintf_s@$0IA@@@YAHAEAY0IA@DPEBDZZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@QEBA_NUnal_info@@@Z DD imagerel ??R<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@QEBA_NUnal_info@@@Z
	DD	imagerel ??R<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@QEBA_NUnal_info@@@Z+75
	DD	imagerel $unwind$??R<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@QEBA_NUnal_info@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z DD imagerel ??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z
	DD	imagerel ??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z+305
	DD	imagerel $unwind$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA DD imagerel ?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA DD imagerel ?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA
	DD	imagerel ?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA DD imagerel ?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA
	DD	imagerel ?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA+52
	DD	imagerel $unwind$?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@QEBA_NUnal_info@@@Z DD imagerel ??R<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@QEBA_NUnal_info@@@Z
	DD	imagerel ??R<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@QEBA_NUnal_info@@@Z+75
	DD	imagerel $unwind$??R<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@QEBA_NUnal_info@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z DD imagerel ??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z
	DD	imagerel ??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z+305
	DD	imagerel $unwind$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA DD imagerel ?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA DD imagerel ?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA
	DD	imagerel ?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA DD imagerel ?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA
	DD	imagerel ?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA+52
	DD	imagerel $unwind$?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_eaa0021af3d5bbad03ad875501c252dc>@@QEBA_NUnal_info@@@Z DD imagerel ??R<lambda_eaa0021af3d5bbad03ad875501c252dc>@@QEBA_NUnal_info@@@Z
	DD	imagerel ??R<lambda_eaa0021af3d5bbad03ad875501c252dc>@@QEBA_NUnal_info@@@Z+75
	DD	imagerel $unwind$??R<lambda_eaa0021af3d5bbad03ad875501c252dc>@@QEBA_NUnal_info@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z DD imagerel ??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z
	DD	imagerel ??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z+305
	DD	imagerel $unwind$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA DD imagerel ?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA DD imagerel ?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA
	DD	imagerel ?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA DD imagerel ?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA
	DD	imagerel ?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA+52
	DD	imagerel $unwind$?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@QEBA_NUnal_info@@@Z DD imagerel ??R<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@QEBA_NUnal_info@@@Z
	DD	imagerel ??R<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@QEBA_NUnal_info@@@Z+75
	DD	imagerel $unwind$??R<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@QEBA_NUnal_info@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z DD imagerel ??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z
	DD	imagerel ??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z+305
	DD	imagerel $unwind$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA DD imagerel ?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA DD imagerel ?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA
	DD	imagerel ?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA DD imagerel ?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA
	DD	imagerel ?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA+52
	DD	imagerel $unwind$?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_f79789dc0fd7cea8a85e7512acf0222d>@@QEBAXPEAE0H@Z DD imagerel ??R<lambda_f79789dc0fd7cea8a85e7512acf0222d>@@QEBAXPEAE0H@Z
	DD	imagerel ??R<lambda_f79789dc0fd7cea8a85e7512acf0222d>@@QEBAXPEAE0H@Z+647
	DD	imagerel $unwind$??R<lambda_f79789dc0fd7cea8a85e7512acf0222d>@@QEBAXPEAE0H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Const_cast@$$CBUnal_info@@@std@@YAPEAUnal_info@@PEBU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Const_cast@$$CBUnal_info@@@std@@YAPEAUnal_info@@PEBU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAXAEBUnal_info@@@Z DD imagerel $LN4
	DD	imagerel $LN4+145
	DD	imagerel $unwind$??$emplace_back@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAXAEBUnal_info@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBUnal_info@@@std@@YAAEBUnal_info@@AEBU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBUnal_info@@@std@@YAAEBUnal_info@@AEBU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXAEBUnal_info@@@Z DD imagerel $LN3
	DD	imagerel $LN3+191
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXAEBUnal_info@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@Unal_info@@@std@@YAPEAUnal_info@@PEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@Unal_info@@@std@@YAPEAUnal_info@@PEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@Unal_info@@AEBU1@@?$_Default_allocator_traits@V?$allocator@Unal_info@@@std@@@std@@SAXAEAV?$allocator@Unal_info@@@1@QEAUnal_info@@AEBU3@@Z DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$??$construct@Unal_info@@AEBU1@@?$_Default_allocator_traits@V?$allocator@Unal_info@@@std@@@std@@SAXAEAV?$allocator@Unal_info@@@1@QEAUnal_info@@AEBU3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z DD imagerel $LN13
	DD	imagerel $LN13+574
	DD	imagerel $unwind$??$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z@4HA+81
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0Unal_info@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Unal_info@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0Unal_info@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Unal_info@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@@std@@YAPEAV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@@std@@YAPEAV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$allocator@Unal_info@@@std@@@std@@YA$$QEAV?$allocator@Unal_info@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$allocator@Unal_info@@@std@@@std@@YA$$QEAV?$allocator@Unal_info@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@Unal_info@@@std@@$$V@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Unal_info@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$?0V?$allocator@Unal_info@@@std@@$$V@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Unal_info@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAUAVBSFContext@@AEAPEAU1@@std@@YAPEAUAVBSFContext@@AEAPEAU1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAUAVBSFContext@@AEAPEAU1@@std@@YAPEAUAVBSFContext@@AEAPEAU1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@@std@@YAPEAV?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@@std@@YAPEAV?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy_maybe_null@E@std@@YAPEAEPEAE@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy_maybe_null@E@std@@YAPEAEPEAE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@YAPEBV?$vector@EV?$allocator@E@std@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@YAPEBV?$vector@EV?$allocator@E@std@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0E@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@E@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0E@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@E@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAEAEAPEAE@std@@YAPEAEAEAPEAE0@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAEAEAPEAE@std@@YAPEAEAEAPEAE0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEADAEAPEAD@std@@YAPEADAEAPEAD0@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEADAEAPEAD@std@@YAPEADAEAPEAD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_iobuf@@AEAPEAU1@@std@@YAPEAU_iobuf@@AEAPEAU1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAU_iobuf@@AEAPEAU1@@std@@YAPEAU_iobuf@@AEAPEAU1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+145
	DD	imagerel $unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@D@std@@YAPEADPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Pocma@V?$allocator@Unal_info@@@std@@@std@@YAXAEAV?$allocator@Unal_info@@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$_Pocma@V?$allocator@Unal_info@@@std@@@std@@YAXAEAV?$allocator@Unal_info@@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAUAVBSFContext@@PEAU1@@std@@YAPEAUAVBSFContext@@AEAPEAU1@$$QEAPEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAUAVBSFContext@@PEAU1@@std@@YAPEAUAVBSFContext@@AEAPEAU1@$$QEAPEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@std@@YAPEAV?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@std@@YAPEAV?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Func_base@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$_Func_base@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@E@std@@@std@@YAXPEAEQEAEAEAV?$allocator@E@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@E@std@@@std@@YAXPEAEQEAEAEAV?$allocator@E@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Pocca@V?$allocator@E@std@@@std@@YAXAEAV?$allocator@E@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Pocca@V?$allocator@E@std@@@std@@YAXAEAV?$allocator@E@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$assign@PEAEX@?$vector@EV?$allocator@E@std@@@std@@QEAAXPEAE0@Z DD imagerel $LN3
	DD	imagerel $LN3+113
	DD	imagerel $unwind$??$assign@PEAEX@?$vector@EV?$allocator@E@std@@@std@@QEAAXPEAE0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+330
	DD	imagerel $unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z DD imagerel $LN3
	DD	imagerel $LN3+151
	DD	imagerel $unwind$??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z DD imagerel $LN6
	DD	imagerel $LN6+523
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z DD imagerel $LN3
	DD	imagerel $LN3+150
	DD	imagerel $unwind$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z DD imagerel $LN6
	DD	imagerel $LN6+525
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+81
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@Unal_info@@@std@@@std@@YAXPEAUnal_info@@QEAU1@AEAV?$allocator@Unal_info@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@Unal_info@@@std@@@std@@YAXPEAUnal_info@@QEAU1@AEAV?$allocator@Unal_info@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+101
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@Umalloc_deleter@@PEAD$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@Umalloc_deleter@@PEAD$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAP6AXPEAPEAUAVCodecParameters@@@Z@std@@YA$$QEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAP6AXPEAPEAUAVCodecParameters@@@Z@std@@YA$$QEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reset@P6AXPEAPEAUAVCodecParameters@@@Z@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAX$$QEAP6AXPEAPEAUAVCodecParameters@@@Z@Z DD imagerel $LN4
	DD	imagerel $LN4+119
	DD	imagerel $unwind$??$_Reset@P6AXPEAPEAUAVCodecParameters@@@Z@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAX$$QEAP6AXPEAPEAUAVCodecParameters@@@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAU?$RGYAVDeleter@UAVCodecParameters@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAU?$RGYAVDeleter@UAVCodecParameters@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0U?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@Z@4HA DD imagerel ?dtor$0@?0???$?0U?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0U?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0U?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAP6AXPEAPEAUAVBSFContext@@@Z@std@@YA$$QEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAP6AXPEAPEAUAVBSFContext@@@Z@std@@YA$$QEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reset@P6AXPEAPEAUAVBSFContext@@@Z@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAX$$QEAP6AXPEAPEAUAVBSFContext@@@Z@Z DD imagerel $LN4
	DD	imagerel $LN4+119
	DD	imagerel $unwind$??$_Reset@P6AXPEAPEAUAVBSFContext@@@Z@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAX$$QEAP6AXPEAPEAUAVBSFContext@@@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAU?$RGYAVDeleter@UAVBSFContext@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAU?$RGYAVDeleter@UAVBSFContext@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@Z@4HA DD imagerel ?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@$0A@@std@@YAPEAUnal_info@@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@$0A@@std@@YAPEAUnal_info@@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@PEAUnal_info@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@AEBQEAUnal_info@@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@PEAUnal_info@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@AEBQEAUnal_info@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Adl_verify_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Adl_verify_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@$0A@@std@@YAPEBUnal_info@@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@$0A@@std@@YAPEBUnal_info@@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Seek_wrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@PEBUnal_info@@@std@@YAXAEAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@AEBQEBUnal_info@@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??$_Seek_wrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@PEBUnal_info@@@std@@YAXAEAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@AEBQEBUnal_info@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$allocator@Unal_info@@@std@@@std@@YA$$QEAV?$allocator@Unal_info@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@V?$allocator@Unal_info@@@std@@@std@@YA$$QEAV?$allocator@Unal_info@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Adl_verify_range@PEAEPEAE@std@@YAXAEBQEAE0@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??$_Adl_verify_range@PEAEPEAE@std@@YAXAEBQEAE0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@E@std@@YAPEAEQEAE@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Get_unwrapped@E@std@@YAPEAEQEAE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Assign_range@PEAE@?$vector@EV?$allocator@E@std@@@std@@AEAAXPEAE0Uforward_iterator_tag@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+239
	DD	imagerel $unwind$??$_Assign_range@PEAE@?$vector@EV?$allocator@E@std@@@std@@AEAAXPEAE0Uforward_iterator_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+279
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAUnal_info@@V?$allocator@Unal_info@@@std@@@std@@YAPEAUnal_info@@QEAU1@0PEAU1@AEAV?$allocator@Unal_info@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+150
	DD	imagerel $unwind$??$_Uninitialized_move@PEAUnal_info@@V?$allocator@Unal_info@@@std@@@std@@YAPEAUnal_info@@QEAU1@0PEAU1@AEAV?$allocator@Unal_info@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z DD imagerel $LN6
	DD	imagerel $LN6+459
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Test_callable@P6AXPEAPEAUAVCodecParameters@@@Z@std@@YA_NAEBQ6AXPEAPEAUAVCodecParameters@@@Z@Z DD imagerel $LN5
	DD	imagerel $LN5+67
	DD	imagerel $unwind$??$_Test_callable@P6AXPEAPEAUAVCodecParameters@@@Z@std@@YA_NAEBQ6AXPEAPEAUAVCodecParameters@@@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Copy@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEBAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@PEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$?_Copy@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEBAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@PEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Move@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@PEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+94
	DD	imagerel $unwind$?_Move@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@PEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Do_call@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAX$$QEAPEAPEAUAVCodecParameters@@@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?_Do_call@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAX$$QEAPEAPEAUAVCodecParameters@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Target_type@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEBAAEBVtype_info@@XZ DD imagerel $LN3
	DD	imagerel $LN3+15
	DD	imagerel $unwind$?_Target_type@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEBAAEBVtype_info@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEBAPEBXXZ DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$?_Get@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEBAPEBXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Delete_this@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAX_N@Z DD imagerel $LN4
	DD	imagerel $LN4+64
	DD	imagerel $unwind$?_Delete_this@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAX_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@P6AXPEAPEAUAVCodecParameters@@@Z@std@@YA$$QEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@P6AXPEAPEAUAVCodecParameters@@@Z@std@@YA$$QEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@QEAA@$$QEAP6AXPEAPEAUAVCodecParameters@@@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$??$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@QEAA@$$QEAP6AXPEAPEAUAVCodecParameters@@@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEAUAVCodecParameters@@@std@@YAAEAPEAUAVCodecParameters@@AEAPEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAPEAUAVCodecParameters@@@std@@YAAEAPEAUAVCodecParameters@@AEAPEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Test_callable@P6AXPEAPEAUAVBSFContext@@@Z@std@@YA_NAEBQ6AXPEAPEAUAVBSFContext@@@Z@Z DD imagerel $LN5
	DD	imagerel $LN5+67
	DD	imagerel $unwind$??$_Test_callable@P6AXPEAPEAUAVBSFContext@@@Z@std@@YA_NAEBQ6AXPEAPEAUAVBSFContext@@@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Copy@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEBAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@PEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$?_Copy@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEBAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@PEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Move@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@PEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+94
	DD	imagerel $unwind$?_Move@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@PEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Do_call@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAX$$QEAPEAPEAUAVBSFContext@@@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?_Do_call@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAX$$QEAPEAPEAUAVBSFContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Target_type@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEBAAEBVtype_info@@XZ DD imagerel $LN3
	DD	imagerel $LN3+15
	DD	imagerel $unwind$?_Target_type@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEBAAEBVtype_info@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEBAPEBXXZ DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$?_Get@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEBAPEBXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Delete_this@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAX_N@Z DD imagerel $LN4
	DD	imagerel $LN4+64
	DD	imagerel $unwind$?_Delete_this@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAX_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@P6AXPEAPEAUAVBSFContext@@@Z@std@@YA$$QEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@P6AXPEAPEAUAVBSFContext@@@Z@std@@YA$$QEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@QEAA@$$QEAP6AXPEAPEAUAVBSFContext@@@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$??$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@QEAA@$$QEAP6AXPEAPEAUAVBSFContext@@@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEAUAVBSFContext@@@std@@YAAEAPEAUAVBSFContext@@AEAPEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAPEAUAVBSFContext@@@std@@YAAEAPEAUAVBSFContext@@AEAPEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Verify_range@E@std@@YAXQEBE0@Z DD imagerel $LN12
	DD	imagerel $LN12+174
	DD	imagerel $unwind$??$_Verify_range@E@std@@YAXQEBE0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$distance@PEAE@std@@YA_JPEAE0@Z DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??$distance@PEAE@std@@YA_JPEAE0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@E@std@@YAPEAEPEAE@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@E@std@@YAPEAEPEAE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAEPEAE@std@@YAPEAEPEAE00@Z DD imagerel $LN3
	DD	imagerel $LN3+133
	DD	imagerel $unwind$??$_Copy_memmove@PEAEPEAE@std@@YAPEAEPEAE00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Refancy@PEAE$0A@@std@@YAPEAEPEAE@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Refancy@PEAE$0A@@std@@YAPEAEPEAE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@Unal_info@@@std@@YAPEAUnal_info@@QEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Get_unwrapped@Unal_info@@@std@@YAPEAUnal_info@@QEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAUnal_info@@PEAU1@@std@@YAPEAUnal_info@@PEAU1@00@Z DD imagerel $LN3
	DD	imagerel $LN3+133
	DD	imagerel $unwind$??$_Copy_memmove@PEAUnal_info@@PEAU1@@std@@YAPEAUnal_info@@PEAU1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@Q6AXPEAPEAUAVBSFContext@@@Z@std@@YAPEBQ6AXPEAPEAUAVBSFContext@@@ZAEBQ6AX0@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@Q6AXPEAPEAUAVBSFContext@@@Z@std@@YAPEBQ6AXPEAPEAUAVBSFContext@@@ZAEBQ6AX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Call@AEAP6AXPEAPEAUAVBSFContext@@@ZPEAPEAU1@@?$_Invoker_ret@X$00@std@@SAXAEAP6AXPEAPEAUAVBSFContext@@@Z$$QEAPEAPEAU2@@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??$_Call@AEAP6AXPEAPEAUAVBSFContext@@@ZPEAPEAU1@@?$_Invoker_ret@X$00@std@@SAXAEAP6AXPEAPEAUAVBSFContext@@@Z$$QEAPEAPEAU2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBQ6AXPEAPEAUAVBSFContext@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@QEAA@AEBQ6AXPEAPEAUAVBSFContext@@@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$??$?0AEBQ6AXPEAPEAUAVBSFContext@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@QEAA@AEBQ6AXPEAPEAUAVBSFContext@@@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@Q6AXPEAPEAUAVCodecParameters@@@Z@std@@YAPEBQ6AXPEAPEAUAVCodecParameters@@@ZAEBQ6AX0@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@Q6AXPEAPEAUAVCodecParameters@@@Z@std@@YAPEBQ6AXPEAPEAUAVCodecParameters@@@ZAEBQ6AX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Call@AEAP6AXPEAPEAUAVCodecParameters@@@ZPEAPEAU1@@?$_Invoker_ret@X$00@std@@SAXAEAP6AXPEAPEAUAVCodecParameters@@@Z$$QEAPEAPEAU2@@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??$_Call@AEAP6AXPEAPEAUAVCodecParameters@@@ZPEAPEAU1@@?$_Invoker_ret@X$00@std@@SAXAEAP6AXPEAPEAUAVCodecParameters@@@Z$$QEAPEAPEAU2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBQ6AXPEAPEAUAVCodecParameters@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@QEAA@AEBQ6AXPEAPEAUAVCodecParameters@@@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$??$?0AEBQ6AXPEAPEAUAVCodecParameters@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@QEAA@AEBQ6AXPEAPEAUAVCodecParameters@@@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Refancy@PEAUnal_info@@$0A@@std@@YAPEAUnal_info@@PEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Refancy@PEAUnal_info@@$0A@@std@@YAPEAUnal_info@@PEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBQ6AXPEAPEAUAVBSFContext@@@Z@std@@YAAEBQ6AXPEAPEAUAVBSFContext@@@ZAEBQ6AX0@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBQ6AXPEAPEAUAVBSFContext@@@Z@std@@YAAEBQ6AXPEAPEAUAVBSFContext@@@ZAEBQ6AX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBQ6AXPEAPEAUAVCodecParameters@@@Z@std@@YAAEBQ6AXPEAPEAUAVCodecParameters@@@ZAEBQ6AX0@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBQ6AXPEAPEAUAVCodecParameters@@@Z@std@@YAAEBQ6AXPEAPEAUAVCodecParameters@@@ZAEBQ6AX0@Z@Z
pdata	ENDS
CRT$XCU	SEGMENT
?CspMatrixList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspMatrixList@@YAXXZ ; CspMatrixList$initializer$
CRT$XCU	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@8 DD imagerel ??_R0?AV?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@@8 ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@8
rdata$r	SEGMENT
??_R2?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@8 DD imagerel ??_R1A@?0A@EA@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@8 ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$_Func_base@XPEAPEAUAVBSFContext@@@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@8
rdata$r	SEGMENT
??_R3?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@8 DD 00H ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@@8
data$r	SEGMENT
??_R0?AV?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPE'
	DB	'APEAU1@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@6B@
rdata$r	SEGMENT
??_R4?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@6B@ DD 01H ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@@8
	DD	imagerel ??_R3?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@8
	DD	imagerel ??_R4?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@8 DD imagerel ??_R0?AV?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@@8 ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@8
rdata$r	SEGMENT
??_R2?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@8 DD imagerel ??_R1A@?0A@EA@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@8 ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@8
rdata$r	SEGMENT
??_R3?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@8 DD 00H ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@@8
data$r	SEGMENT
??_R0?AV?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@'
	DB	'@ZXPEAPEAU1@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@6B@
rdata$r	SEGMENT
??_R4?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@6B@ DD 01H ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@@8
	DD	imagerel ??_R3?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@8
	DD	imagerel ??_R4?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@8 DD imagerel ??_R0?AV?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@@8 ; std::_Func_base<void,AVCodecParameters * *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@8
rdata$r	SEGMENT
??_R2?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@8 ; std::_Func_base<void,AVCodecParameters * *>::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@8
rdata$r	SEGMENT
??_R3?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@8 DD 00H ; std::_Func_base<void,AVCodecParameters * *>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@@8
data$r	SEGMENT
??_R0?AV?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Func_base<void,AVCodecParameters * *> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CQSVOutFrame@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CQSVOutFrame@@8 DD imagerel ??_R0?AVCQSVOutFrame@@@8 ; CQSVOutFrame::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CQSVOutFrame@@8
rdata$r	ENDS
;	COMDAT ??_R2CQSVOutFrame@@8
rdata$r	SEGMENT
??_R2CQSVOutFrame@@8 DD imagerel ??_R1A@?0A@EA@CQSVOutFrame@@8 ; CQSVOutFrame::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@RGYOutput@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CQSVOutFrame@@8
rdata$r	SEGMENT
??_R3CQSVOutFrame@@8 DD 00H				; CQSVOutFrame::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2CQSVOutFrame@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCQSVOutFrame@@@8
data$r	SEGMENT
??_R0?AVCQSVOutFrame@@@8 DQ FLAT:??_7type_info@@6B@	; CQSVOutFrame `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCQSVOutFrame@@', 00H
data$r	ENDS
;	COMDAT ??_R4CQSVOutFrame@@6B@
rdata$r	SEGMENT
??_R4CQSVOutFrame@@6B@ DD 01H				; CQSVOutFrame::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVCQSVOutFrame@@@8
	DD	imagerel ??_R3CQSVOutFrame@@8
	DD	imagerel ??_R4CQSVOutFrame@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_base@XPEAPEAUAVBSFContext@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_base@XPEAPEAUAVBSFContext@@@std@@8 DD imagerel ??_R0?AV?$_Func_base@XPEAPEAUAVBSFContext@@@std@@@8 ; std::_Func_base<void,AVBSFContext * *>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$_Func_base@XPEAPEAUAVBSFContext@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Func_base@XPEAPEAUAVBSFContext@@@std@@8
rdata$r	SEGMENT
??_R2?$_Func_base@XPEAPEAUAVBSFContext@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$_Func_base@XPEAPEAUAVBSFContext@@@std@@8 ; std::_Func_base<void,AVBSFContext * *>::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$_Func_base@XPEAPEAUAVBSFContext@@@std@@8
rdata$r	SEGMENT
??_R3?$_Func_base@XPEAPEAUAVBSFContext@@@std@@8 DD 00H	; std::_Func_base<void,AVBSFContext * *>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2?$_Func_base@XPEAPEAUAVBSFContext@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Func_base@XPEAPEAUAVBSFContext@@@std@@@8
data$r	SEGMENT
??_R0?AV?$_Func_base@XPEAPEAUAVBSFContext@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Func_base<void,AVBSFContext * *> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$_Func_base@XPEAPEAUAVBSFContext@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RGYOutputRaw@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RGYOutputRaw@@8 DD imagerel ??_R0?AVRGYOutputRaw@@@8 ; RGYOutputRaw::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3RGYOutputRaw@@8
rdata$r	ENDS
;	COMDAT ??_R2RGYOutputRaw@@8
rdata$r	SEGMENT
??_R2RGYOutputRaw@@8 DD imagerel ??_R1A@?0A@EA@RGYOutputRaw@@8 ; RGYOutputRaw::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@RGYOutput@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3RGYOutputRaw@@8
rdata$r	SEGMENT
??_R3RGYOutputRaw@@8 DD 00H				; RGYOutputRaw::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2RGYOutputRaw@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRGYOutputRaw@@@8
data$r	SEGMENT
??_R0?AVRGYOutputRaw@@@8 DQ FLAT:??_7type_info@@6B@	; RGYOutputRaw `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVRGYOutputRaw@@', 00H
data$r	ENDS
;	COMDAT ??_R4RGYOutputRaw@@6B@
rdata$r	SEGMENT
??_R4RGYOutputRaw@@6B@ DD 01H				; RGYOutputRaw::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVRGYOutputRaw@@@8
	DD	imagerel ??_R3RGYOutputRaw@@8
	DD	imagerel ??_R4RGYOutputRaw@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RGYOutput@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RGYOutput@@8 DD imagerel ??_R0?AVRGYOutput@@@8 ; RGYOutput::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3RGYOutput@@8
rdata$r	ENDS
;	COMDAT ??_R2RGYOutput@@8
rdata$r	SEGMENT
??_R2RGYOutput@@8 DD imagerel ??_R1A@?0A@EA@RGYOutput@@8 ; RGYOutput::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3RGYOutput@@8
rdata$r	SEGMENT
??_R3RGYOutput@@8 DD 00H				; RGYOutput::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2RGYOutput@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRGYOutput@@@8
data$r	SEGMENT
??_R0?AVRGYOutput@@@8 DQ FLAT:??_7type_info@@6B@	; RGYOutput `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVRGYOutput@@', 00H
data$r	ENDS
;	COMDAT ??_R4RGYOutput@@6B@
rdata$r	SEGMENT
??_R4RGYOutput@@6B@ DD 01H				; RGYOutput::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVRGYOutput@@@8
	DD	imagerel ??_R3RGYOutput@@8
	DD	imagerel ??_R4RGYOutput@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
CONST	SEGMENT
??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, ' ', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 's', 00H, 'p', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'd', 00H
	DB	'"', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@
CONST	SEGMENT
??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@ DB 'vector iterato'
	DB	'r range transposed', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
CONST	SEGMENT
??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, ' '
	DB	00H, 'a', 00H, 'r', 00H, 'e', 00H, ' ', 00H, 'f', 00H, 'r', 00H
	DB	'o', 00H, 'm', 00H, ' ', 00H, 'd', 00H, 'i', 00H, 'f', 00H, 'f'
	DB	00H, 'e', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n'
	DB	00H, 'e', 00H, 'r', 00H, 's', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@
CONST	SEGMENT
??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@ DB 'vector itera'
	DB	'tors in range are from different containers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_R0P6AXPEAPEAUAVCodecParameters@@@Z@8
data$r	SEGMENT
??_R0P6AXPEAPEAUAVCodecParameters@@@Z@8 DQ FLAT:??_7type_info@@6B@ ; void (__cdecl*)(AVCodecParameters * *) `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.P6AXPEAPEAUAVCodecParameters@@@Z', 00H
data$r	ENDS
;	COMDAT ??_R0P6AXPEAPEAUAVBSFContext@@@Z@8
data$r	SEGMENT
??_R0P6AXPEAPEAUAVBSFContext@@@Z@8 DQ FLAT:??_7type_info@@6B@ ; void (__cdecl*)(AVBSFContext * *) `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.P6AXPEAPEAUAVBSFContext@@@Z', 00H
data$r	ENDS
;	COMDAT ??_7?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@6B@
CONST	SEGMENT
??_7?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@6B@ DQ FLAT:??_R4?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@6B@ ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::`vftable'
	DQ	FLAT:?_Copy@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEBAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@PEAX@Z
	DQ	FLAT:?_Move@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@PEAX@Z
	DQ	FLAT:?_Do_call@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAX$$QEAPEAPEAUAVBSFContext@@@Z
	DQ	FLAT:?_Target_type@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEBAAEBVtype_info@@XZ
	DQ	FLAT:?_Delete_this@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAX_N@Z
	DQ	FLAT:?_Get@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEBAPEBXXZ
CONST	ENDS
;	COMDAT ??_7?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@6B@
CONST	SEGMENT
??_7?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@6B@ DQ FLAT:??_R4?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@6B@ ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::`vftable'
	DQ	FLAT:?_Copy@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEBAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@PEAX@Z
	DQ	FLAT:?_Move@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@PEAX@Z
	DQ	FLAT:?_Do_call@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAX$$QEAPEAPEAUAVCodecParameters@@@Z
	DQ	FLAT:?_Target_type@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEBAAEBVtype_info@@XZ
	DQ	FLAT:?_Delete_this@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAX_N@Z
	DQ	FLAT:?_Get@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEBAPEBXXZ
CONST	ENDS
;	COMDAT ??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@
CONST	SEGMENT
??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@ DB '"'
	DB	00H, 't', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's', 00H, 'p', 00H
	DB	'o', 00H, 's', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'p', 00H, 'o'
	DB	00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
CONST	SEGMENT
??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'r', 00H, 'i', 00H, 'f', 00H, 'y', 00H, '_', 00H, 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@
CONST	SEGMENT
??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@ DB 'transposed pointer ran'
	DB	'ge', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@ DB 'vector<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H
	DB	't', 00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1FA@LCODAPOP@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@
CONST	SEGMENT
??_C@_1FA@LCODAPOP@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 's', 00H, 'e', 00H, 'e', 00H, 'k', 00H, ' ', 00H, 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'a', 00H, 'f', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, ' ', 00H, 'e', 00H, 'n', 00H, 'd', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@JDIOCKHH@cannot?5seek?5vector?5iterator?5aft@
CONST	SEGMENT
??_C@_0CG@JDIOCKHH@cannot?5seek?5vector?5iterator?5aft@ DB 'cannot seek v'
	DB	'ector iterator after end', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@JCGKNFIB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@
CONST	SEGMENT
??_C@_1FG@JCGKNFIB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 's', 00H, 'e', 00H, 'e', 00H, 'k', 00H, ' ', 00H, 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'b', 00H, 'e', 00H, 'f', 00H, 'o', 00H
	DB	'r', 00H, 'e', 00H, ' ', 00H, 'b', 00H, 'e', 00H, 'g', 00H, 'i'
	DB	00H, 'n', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@DIFMEJBE@cannot?5seek?5vector?5iterator?5bef@
CONST	SEGMENT
??_C@_0CJ@DIFMEJBE@cannot?5seek?5vector?5iterator?5bef@ DB 'cannot seek v'
	DB	'ector iterator before begin', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1GA@EIHBFEJD@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAa@
CONST	SEGMENT
??_C@_1GA@EIHBFEJD@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAa@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 's', 00H, 'e', 00H, 'e', 00H, 'k', 00H, ' ', 00H, 'v'
	DB	00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, '-', 00H, 'i', 00H
	DB	'n', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'"', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1OE@PHFHONJN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
CONST	SEGMENT
??_C@_1OE@PHFHONJN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '_', 00H, 'i', 00H, 'n', 00H, 'f', 00H, 'o'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, '_', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 'i', 00H, 'f'
	DB	00H, 'y', 00H, '_', 00H, 'o', 00H, 'f', 00H, 'f', 00H, 's', 00H
	DB	'e', 00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@LHPFLLJB@cannot?5seek?5value?9initialized?5v@
CONST	SEGMENT
??_C@_0CO@LHPFLLJB@cannot?5seek?5value?9initialized?5v@ DB 'cannot seek v'
	DB	'alue-initialized vector iterator', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@DJDGNIII@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
CONST	SEGMENT
??_C@_1EA@DJDGNIII@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i'
	DB	00H, 'b', 00H, 'l', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NG@BALHEPOA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
CONST	SEGMENT
??_C@_1NG@BALHEPOA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '_', 00H, 'i', 00H, 'n', 00H, 'f', 00H, 'o'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, '_', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@CAOBBIOC@vector?5iterators?5incompatible@
CONST	SEGMENT
??_C@_0BO@CAOBBIOC@vector?5iterators?5incompatible@ DB 'vector iterators '
	DB	'incompatible', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1LO@NPPEKPAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@
CONST	SEGMENT
??_C@_1LO@NPPEKPAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'b', 00H, 'a', 00H
	DB	's', 00H, 'i', 00H, 'c', 00H, '_', 00H, 's', 00H, 't', 00H, 'r'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, '<', 00H, 'c', 00H, 'h', 00H
	DB	'a', 00H, 'r', 00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u'
	DB	00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_'
	DB	00H, 't', 00H, 'r', 00H, 'a', 00H, 'i', 00H, 't', 00H, 's', 00H
	DB	'<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '>', 00H, ','
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, '[', 00H, ']', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@OADAPGGK@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
CONST	SEGMENT
??_C@_1EA@OADAPGGK@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ DB '"'
	DB	00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	' ', 00H, 's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r'
	DB	00H, 'i', 00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H
	DB	't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a'
	DB	00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@MNJEKPBN@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@MNJEKPBN@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@KAEHDKAJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@KAEHDKAJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xstring', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@LFGPDMIB@string?5subscript?5out?5of?5range@
CONST	SEGMENT
??_C@_0BO@LFGPDMIB@string?5subscript?5out?5of?5range@ DB 'string subscrip'
	DB	't out of range', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xutility', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
CONST	SEGMENT
??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'o', 00H
	DB	'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, ' ', 00H, 'v', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'i'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '"', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@
CONST	SEGMENT
??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@ DB 'can''t dere'
	DB	'ference out of range vector iterator', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
CONST	SEGMENT
??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'v', 00H
	DB	'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, '-', 00H, 'i', 00H, 'n'
	DB	00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NO@DHAACCAA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
CONST	SEGMENT
??_C@_1NO@DHAACCAA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'n', 00H
	DB	'a', 00H, 'l', 00H, '_', 00H, 'i', 00H, 'n', 00H, 'f', 00H, 'o'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, '-', 00H, '>', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Prog'
	DB	'ram Files (x86)\Microsoft Visual Studio\2019\Community\VC\Too'
	DB	'ls\MSVC\14.23.28105\include\vector', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@
CONST	SEGMENT
??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@ DB 'can''t derefe'
	DB	'rence value-initialized vector iterator', 00H ; `string'
CONST	ENDS
;	COMDAT ?MASK_LOW8@?DM@??WriteNextFrame@CQSVOutFrame@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z@4QBGB
CONST	SEGMENT
?MASK_LOW8@?DM@??WriteNextFrame@CQSVOutFrame@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z@4QBGB DW 0ffH ; `CQSVOutFrame::WriteNextFrame'::`60'::MASK_LOW8
	DW	0ffH
	DW	0ffH
	DW	0ffH
	DW	0ffH
	DW	0ffH
	DW	0ffH
	DW	0ffH
CONST	ENDS
;	COMDAT ??_7CQSVOutFrame@@6B@
CONST	SEGMENT
??_7CQSVOutFrame@@6B@ DQ FLAT:??_R4CQSVOutFrame@@6B@	; CQSVOutFrame::`vftable'
	DQ	FLAT:??_ECQSVOutFrame@@UEAAPEAXI@Z
	DQ	FLAT:?Init@CQSVOutFrame@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z
	DQ	FLAT:?WriteNextFrame@CQSVOutFrame@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z
	DQ	FLAT:?WriteNextFrame@CQSVOutFrame@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z
	DQ	FLAT:?Close@RGYOutput@@UEAAXXZ
	DQ	FLAT:?outputStdout@RGYOutput@@UEAA_NXZ
	DQ	FLAT:?getOutType@RGYOutput@@UEAA?AW4OutputType@@XZ
	DQ	FLAT:?WaitFin@RGYOutput@@UEAAXXZ
CONST	ENDS
;	COMDAT ??_7RGYOutputRaw@@6B@
CONST	SEGMENT
??_7RGYOutputRaw@@6B@ DQ FLAT:??_R4RGYOutputRaw@@6B@	; RGYOutputRaw::`vftable'
	DQ	FLAT:??_ERGYOutputRaw@@UEAAPEAXI@Z
	DQ	FLAT:?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z
	DQ	FLAT:?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z
	DQ	FLAT:?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z
	DQ	FLAT:?Close@RGYOutput@@UEAAXXZ
	DQ	FLAT:?outputStdout@RGYOutput@@UEAA_NXZ
	DQ	FLAT:?getOutType@RGYOutput@@UEAA?AW4OutputType@@XZ
	DQ	FLAT:?WaitFin@RGYOutput@@UEAAXXZ
CONST	ENDS
;	COMDAT ??_7RGYOutput@@6B@
CONST	SEGMENT
??_7RGYOutput@@6B@ DQ FLAT:??_R4RGYOutput@@6B@		; RGYOutput::`vftable'
	DQ	FLAT:??_ERGYOutput@@UEAAPEAXI@Z
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:?Close@RGYOutput@@UEAAXXZ
	DQ	FLAT:?outputStdout@RGYOutput@@UEAA_NXZ
	DQ	FLAT:?getOutType@RGYOutput@@UEAA?AW4OutputType@@XZ
	DQ	FLAT:?WaitFin@RGYOutput@@UEAAXXZ
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05PKCPKOLM@undef@
CONST	SEGMENT
??_C@_05PKCPKOLM@undef@ DB 'undef', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02LMMGGCAJ@?3?5@
CONST	SEGMENT
??_C@_02LMMGGCAJ@?3?5@ DB ': ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
CONST	SEGMENT
??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ DB '"'
	DB	00H, 'I', 00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H
	DB	'O', 00H, 'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T'
	DB	00H, ' ', 00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H
	DB	'P', 00H, 'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@
CONST	SEGMENT
??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'I', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '_', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '1', 00H
	DB	'2', 00H, ':', 00H, ':', 00H, '_', 00H, 'O', 00H, 'r', 00H, 'p'
	DB	00H, 'h', 00H, 'a', 00H, 'n', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
CONST	SEGMENT
??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ DB 'ITERATOR LIST CORRU'
	DB	'PTED!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xmemory', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBQ6AXPEAPEAUAVCodecParameters@@@Z@std@@YAAEBQ6AXPEAPEAUAVCodecParameters@@@ZAEBQ6AX0@Z@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBQ6AXPEAPEAUAVBSFContext@@@Z@std@@YAAEBQ6AXPEAPEAUAVBSFContext@@@ZAEBQ6AX0@Z@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Refancy@PEAUnal_info@@$0A@@std@@YAPEAUnal_info@@PEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBQ6AXPEAPEAUAVCodecParameters@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@QEAA@AEBQ6AXPEAPEAUAVCodecParameters@@@Z@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Call@AEAP6AXPEAPEAUAVCodecParameters@@@ZPEAPEAU1@@?$_Invoker_ret@X$00@std@@SAXAEAP6AXPEAPEAUAVCodecParameters@@@Z$$QEAPEAPEAU2@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@Q6AXPEAPEAUAVCodecParameters@@@Z@std@@YAPEBQ6AXPEAPEAUAVCodecParameters@@@ZAEBQ6AX0@Z@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBQ6AXPEAPEAUAVBSFContext@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@QEAA@AEBQ6AXPEAPEAUAVBSFContext@@@Z@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Call@AEAP6AXPEAPEAUAVBSFContext@@@ZPEAPEAU1@@?$_Invoker_ret@X$00@std@@SAXAEAP6AXPEAPEAUAVBSFContext@@@Z$$QEAPEAPEAU2@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@Q6AXPEAPEAUAVBSFContext@@@Z@std@@YAPEBQ6AXPEAPEAUAVBSFContext@@@ZAEBQ6AX0@Z@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAUnal_info@@PEAU1@@std@@YAPEAUnal_info@@PEAU1@00@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@Unal_info@@@std@@YAPEAUnal_info@@QEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Refancy@PEAE$0A@@std@@YAPEAEPEAE@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAEPEAE@std@@YAPEAEPEAE00@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@E@std@@YAPEAEPEAE@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$distance@PEAE@std@@YA_JPEAE0@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Verify_range@E@std@@YAXQEBE0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Verify_range@E@std@@YAXQEBE0@Z DB 040H
	DD	imagerel $ip2state$??$_Verify_range@E@std@@YAXQEBE0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Verify_range@E@std@@YAXQEBE0@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Verify_range@E@std@@YAXQEBE0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEAUAVBSFContext@@@std@@YAAEAPEAUAVBSFContext@@AEAPEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@QEAA@$$QEAP6AXPEAPEAUAVBSFContext@@@Z@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@P6AXPEAPEAUAVBSFContext@@@Z@std@@YA$$QEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Delete_this@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAX_N@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEBAPEBXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Target_type@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEBAAEBVtype_info@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Do_call@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAX$$QEAPEAPEAUAVBSFContext@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Move@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@PEAX@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Move@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@PEAX@Z DB 040H
	DD	imagerel $ip2state$?_Move@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@PEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Move@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@PEAX@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Move@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@PEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Copy@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEBAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@PEAX@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Test_callable@P6AXPEAPEAUAVBSFContext@@@Z@std@@YA_NAEBQ6AXPEAPEAUAVBSFContext@@@Z@Z DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEAUAVCodecParameters@@@std@@YAAEAPEAUAVCodecParameters@@AEAPEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@QEAA@$$QEAP6AXPEAPEAUAVCodecParameters@@@Z@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@P6AXPEAPEAUAVCodecParameters@@@Z@std@@YA$$QEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Delete_this@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAX_N@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEBAPEBXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Target_type@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEBAAEBVtype_info@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Do_call@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAX$$QEAPEAPEAUAVCodecParameters@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Move@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@PEAX@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Move@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@PEAX@Z DB 040H
	DD	imagerel $ip2state$?_Move@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@PEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Move@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@PEAX@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Move@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@PEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Copy@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEBAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@PEAX@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Test_callable@P6AXPEAPEAUAVCodecParameters@@@Z@std@@YA_NAEBQ6AXPEAPEAUAVCodecParameters@@@Z@Z DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z DD 022e01H
	DD	07010f217H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z$rtcVarDesc DD 058H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >
	DD	08H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z$rtcName$0
	ORG $+48
??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >
	DD	00H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAUnal_info@@V?$allocator@Unal_info@@@std@@@std@@YAPEAUnal_info@@QEAU1@0PEAU1@AEAV?$allocator@Unal_info@@@0@@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 021e01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Assign_range@PEAE@?$vector@EV?$allocator@E@std@@@std@@AEAAXPEAE0Uforward_iterator_tag@1@@Z DD 022d01H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@E@std@@YAPEAEQEAE@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Adl_verify_range@PEAEPEAE@std@@YAXAEBQEAE0@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$allocator@Unal_info@@@std@@@std@@YA$$QEAV?$allocator@Unal_info@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Seek_wrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@PEBUnal_info@@@std@@YAXAEAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@AEBQEBUnal_info@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@$0A@@std@@YAPEBUnal_info@@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Adl_verify_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@0@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@PEAUnal_info@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@AEBQEAUnal_info@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@$0A@@std@@YAPEAUnal_info@@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@0@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@Z DB 06H
	DB	00H
	DB	00H
	DB	088H
	DB	02H
	DB	','
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@Z
	DD	imagerel $ip2state$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@Z DD 022c11H
	DD	070143218H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAU?$RGYAVDeleter@UAVBSFContext@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reset@P6AXPEAPEAUAVBSFContext@@@Z@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAX$$QEAP6AXPEAPEAUAVBSFContext@@@Z@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAP6AXPEAPEAUAVBSFContext@@@Z@std@@YA$$QEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0U?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@Z DB 06H
	DB	00H
	DB	00H
	DB	088H
	DB	02H
	DB	','
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0U?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@Z
	DD	imagerel $ip2state$??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@Z DD 022c11H
	DD	070143218H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAU?$RGYAVDeleter@UAVCodecParameters@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reset@P6AXPEAPEAUAVCodecParameters@@@Z@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAX$$QEAP6AXPEAPEAUAVCodecParameters@@@Z@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAP6AXPEAPEAUAVCodecParameters@@@Z@std@@YA$$QEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0$$V@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'`'
	DB	02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0$$V@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0$$V@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0$$V@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	imagerel $ip2state$??$?0$$V@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022211H
	DD	0700a320eH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0$$V@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@Umalloc_deleter@@PEAD$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z$rtcName$0 DB 05fH ; std::swap<EncodeStatus *,void>
	DB	054H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+11
??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z$rtcVarDesc DD 028H ; std::swap<EncodeStatus *,void>
	DD	08H
	DQ	FLAT:??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z$rtcName$0
	ORG $+48
??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z$rtcFrameData DD 01H ; std::swap<EncodeStatus *,void>
	DD	00H
	DQ	FLAT:??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z$rtcName$0 DB 05fH ; std::swap<RGYLog *,void>
	DB	054H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+11
??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z$rtcVarDesc DD 028H ; std::swap<RGYLog *,void>
	DD	08H
	DQ	FLAT:??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z$rtcName$0
	ORG $+48
??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z$rtcFrameData DD 01H ; std::swap<RGYLog *,void>
	DD	00H
	DQ	FLAT:??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcName$0 DB 05fH ; std::swap<std::_Ref_count_base *,void>
	DB	054H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+11
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcVarDesc DD 028H ; std::swap<std::_Ref_count_base *,void>
	DD	08H
	DQ	FLAT:??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcName$0
	ORG $+48
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcFrameData DD 01H ; std::swap<std::_Ref_count_base *,void>
	DD	00H
	DQ	FLAT:??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@Unal_info@@@std@@@std@@YAXPEAUnal_info@@QEAU1@AEAV?$allocator@Unal_info@@@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z DD 033301H
	DD	012011cH
	DD	07015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcVarDesc DD 068H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
	DD	08H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcName$0
	ORG $+48
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
	DD	00H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z DD 033301H
	DD	012011cH
	DD	07015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z$rtcVarDesc DD 068H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>
	DD	08H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z$rtcName$0
	ORG $+48
??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>
	DD	00H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD 022d01H
	DD	07015b219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcVarDesc DD 048H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DD	08H
	DQ	FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcName$0
	ORG $+48
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DD	00H
	DQ	FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$assign@PEAEX@?$vector@EV?$allocator@E@std@@@std@@QEAAXPEAE0@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Pocca@V?$allocator@E@std@@@std@@YAXAEAV?$allocator@E@0@AEBV10@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@E@std@@@std@@YAXPEAEQEAEAEAV?$allocator@E@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Func_base@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@std@@YAPEAV?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAUAVBSFContext@@PEAU1@@std@@YAPEAUAVBSFContext@@AEAPEAU1@$$QEAPEAU1@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Pocma@V?$allocator@Unal_info@@@std@@@std@@YAXAEAV?$allocator@Unal_info@@@0@0@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	imagerel $ip2state$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022211H
	DD	0700a320eH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
	DD	imagerel $ip2state$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DD 022711H
	DD	0700f3213H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_iobuf@@AEAPEAU1@@std@@YAPEAU_iobuf@@AEAPEAU1@0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEADAEAPEAD@std@@YAPEADAEAPEAD0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAEAEAPEAE@std@@YAPEAEAEAPEAE0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0E@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@E@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@YAPEBV?$vector@EV?$allocator@E@std@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy_maybe_null@E@std@@YAPEAEPEAE@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@@std@@YAPEAV?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAUAVBSFContext@@AEAPEAU1@@std@@YAPEAUAVBSFContext@@AEAPEAU1@0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@Unal_info@@@std@@$$V@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Unal_info@@@1@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$allocator@Unal_info@@@std@@@std@@YA$$QEAV?$allocator@Unal_info@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@@std@@YAPEAV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0Unal_info@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Unal_info@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z DB 06H
	DB	00H
	DB	00H
	DB	081H, 04H
	DB	02H
	DB	099H, 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z DB 02H
	DB	00H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z DB 018H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z DD 022e19H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@Unal_info@@AEBU1@@?$_Default_allocator_traits@V?$allocator@Unal_info@@@std@@@std@@SAXAEAV?$allocator@Unal_info@@@1@QEAUnal_info@@AEBU3@@Z DD 032901H
	DD	070116215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@Unal_info@@@std@@YAPEAUnal_info@@PEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXAEBUnal_info@@@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBUnal_info@@@std@@YAAEBUnal_info@@AEBU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAXAEBUnal_info@@@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Const_cast@$$CBUnal_info@@@std@@YAPEAUnal_info@@PEBU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_f79789dc0fd7cea8a85e7512acf0222d>@@QEBAXPEAE0H@Z DD 033301H
	DD	022011cH
	DD	07015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z DB 08H
	DB	00H
	DB	00H
	DB	'r'
	DB	06H
	DB	0e1H, 02H
	DB	04H
	DB	01cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z
	DD	imagerel $ip2state$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z DD 033111H
	DD	07016e21aH
	DD	06015H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z$rtcName$0 DB 05fH ; std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6> >
	DB	055H
	DB	046H
	DB	069H
	DB	072H
	DB	073H
	DB	074H
	DB	00H
	ORG $+8
??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z$rtcVarDesc DD 028H ; std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6> >
	DD	08H
	DQ	FLAT:??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z$rtcName$0
	ORG $+48
??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z$rtcFrameData DD 01H ; std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6> >
	DD	00H
	DQ	FLAT:??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@QEBA_NUnal_info@@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z DB 08H
	DB	00H
	DB	00H
	DB	'r'
	DB	06H
	DB	0e1H, 02H
	DB	04H
	DB	01cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z
	DD	imagerel $ip2state$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z DD 033111H
	DD	07016e21aH
	DD	06015H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z$rtcName$0 DB 05fH ; std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_eaa0021af3d5bbad03ad875501c252dc> >
	DB	055H
	DB	046H
	DB	069H
	DB	072H
	DB	073H
	DB	074H
	DB	00H
	ORG $+8
??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z$rtcVarDesc DD 028H ; std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_eaa0021af3d5bbad03ad875501c252dc> >
	DD	08H
	DQ	FLAT:??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z$rtcName$0
	ORG $+48
??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z$rtcFrameData DD 01H ; std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_eaa0021af3d5bbad03ad875501c252dc> >
	DD	00H
	DQ	FLAT:??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_eaa0021af3d5bbad03ad875501c252dc>@@QEBA_NUnal_info@@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z DB 08H
	DB	00H
	DB	00H
	DB	'r'
	DB	06H
	DB	0e1H, 02H
	DB	04H
	DB	01cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z
	DD	imagerel $ip2state$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z DD 033111H
	DD	07016e21aH
	DD	06015H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z$rtcName$0 DB 05fH ; std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_f0f721445d981f5d1c40edf2de63bc8d> >
	DB	055H
	DB	046H
	DB	069H
	DB	072H
	DB	073H
	DB	074H
	DB	00H
	ORG $+8
??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z$rtcVarDesc DD 028H ; std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_f0f721445d981f5d1c40edf2de63bc8d> >
	DD	08H
	DQ	FLAT:??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z$rtcName$0
	ORG $+48
??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z$rtcFrameData DD 01H ; std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_f0f721445d981f5d1c40edf2de63bc8d> >
	DD	00H
	DQ	FLAT:??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@QEBA_NUnal_info@@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z DB 08H
	DB	00H
	DB	00H
	DB	'r'
	DB	06H
	DB	0e1H, 02H
	DB	04H
	DB	01cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z
	DD	imagerel $ip2state$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z DD 033111H
	DD	07016e21aH
	DD	06015H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z$rtcName$0 DB 05fH ; std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_c9b8cf6142d60d923da63780b9f1f11d> >
	DB	055H
	DB	046H
	DB	069H
	DB	072H
	DB	073H
	DB	074H
	DB	00H
	ORG $+8
??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z$rtcVarDesc DD 028H ; std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_c9b8cf6142d60d923da63780b9f1f11d> >
	DD	08H
	DQ	FLAT:??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z$rtcName$0
	ORG $+48
??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z$rtcFrameData DD 01H ; std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_c9b8cf6142d60d923da63780b9f1f11d> >
	DD	00H
	DQ	FLAT:??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@QEBA_NUnal_info@@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$sprintf_s@$0IA@@@YAHAEAY0IA@DPEBDZZ DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$sprintf_s@$0IA@@@YAHAEAY0IA@DPEBDZZ$rtcName$0 DB 05fH ; sprintf_s<128>
	DB	041H
	DB	072H
	DB	067H
	DB	04cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+7
??$sprintf_s@$0IA@@@YAHAEAY0IA@DPEBDZZ$rtcVarDesc DD 028H ; sprintf_s<128>
	DD	08H
	DQ	FLAT:??$sprintf_s@$0IA@@@YAHAEAY0IA@DPEBDZZ$rtcName$0
	ORG $+48
??$sprintf_s@$0IA@@@YAHAEAY0IA@DPEBDZZ$rtcFrameData DD 01H ; sprintf_s<128>
	DD	00H
	DQ	FLAT:??$sprintf_s@$0IA@@@YAHAEAY0IA@DPEBDZZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@PEAUAVBSFContext@@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@PEAUAVBSFContext@@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@PEAUAVBSFContext@@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@PEAUAVBSFContext@@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@PEAUAVBSFContext@@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@@Z DB 048H
	DD	imagerel $stateUnwindMap$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@PEAUAVBSFContext@@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@@Z
	DD	imagerel $ip2state$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@PEAUAVBSFContext@@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@PEAUAVBSFContext@@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@@Z DD 022819H
	DD	070105214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@PEAUAVBSFContext@@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@P6AXPEAPEAUAVBSFContext@@@Z@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@P6AXPEAPEAUAVBSFContext@@@Z@Z DB 06H
	DB	00H
	DB	00H
	DB	'\'
	DB	02H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@P6AXPEAPEAUAVBSFContext@@@Z@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@P6AXPEAPEAUAVBSFContext@@@Z@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@P6AXPEAPEAUAVBSFContext@@@Z@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@P6AXPEAPEAUAVBSFContext@@@Z@Z
	DD	imagerel $ip2state$??$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@P6AXPEAPEAUAVBSFContext@@@Z@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@P6AXPEAPEAUAVBSFContext@@@Z@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@P6AXPEAPEAUAVBSFContext@@@Z@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$invoke@AEAP6AXPEAPEAUAVBSFContext@@@ZPEAPEAU1@@std@@YAXAEAP6AXPEAPEAUAVBSFContext@@@Z$$QEAPEAPEAU1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Call@AEAP6AXPEAPEAUAVBSFContext@@@ZPEAPEAU1@@_Invoker_functor@std@@SAXAEAP6AXPEAPEAUAVBSFContext@@@Z$$QEAPEAPEAU2@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAPEAUAVBSFContext@@@std@@YA$$QEAPEAPEAUAVBSFContext@@AEAPEAPEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAP6AXPEAPEAUAVBSFContext@@@Z@std@@YAAEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0U?$RGYAVDeleter@UAVCodecParameters@@@@$0A@@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@PEAUAVCodecParameters@@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@$0A@@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@PEAUAVCodecParameters@@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@$0A@@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@PEAUAVCodecParameters@@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0U?$RGYAVDeleter@UAVCodecParameters@@@@$0A@@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@PEAUAVCodecParameters@@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@$0A@@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@PEAUAVCodecParameters@@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@@Z DB 048H
	DD	imagerel $stateUnwindMap$??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@$0A@@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@PEAUAVCodecParameters@@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@@Z
	DD	imagerel $ip2state$??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@$0A@@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@PEAUAVCodecParameters@@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@$0A@@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@PEAUAVCodecParameters@@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@@Z DD 022819H
	DD	070105214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@$0A@@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@PEAUAVCodecParameters@@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAAAEAU?$RGYAVDeleter@UAVCodecParameters@@@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'<'
	DB	02H
	DB	'X'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@P6AXPEAPEAUAVCodecParameters@@@Z@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@P6AXPEAPEAUAVCodecParameters@@@Z@Z DB 06H
	DB	00H
	DB	00H
	DB	'\'
	DB	02H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@P6AXPEAPEAUAVCodecParameters@@@Z@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@P6AXPEAPEAUAVCodecParameters@@@Z@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@P6AXPEAPEAUAVCodecParameters@@@Z@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@P6AXPEAPEAUAVCodecParameters@@@Z@Z
	DD	imagerel $ip2state$??$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@P6AXPEAPEAUAVCodecParameters@@@Z@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@P6AXPEAPEAUAVCodecParameters@@@Z@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@P6AXPEAPEAUAVCodecParameters@@@Z@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$invoke@AEAP6AXPEAPEAUAVCodecParameters@@@ZPEAPEAU1@@std@@YAXAEAP6AXPEAPEAUAVCodecParameters@@@Z$$QEAPEAPEAU1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Call@AEAP6AXPEAPEAUAVCodecParameters@@@ZPEAPEAU1@@_Invoker_functor@std@@SAXAEAP6AXPEAPEAUAVCodecParameters@@@Z$$QEAPEAPEAU2@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAPEAUAVCodecParameters@@@std@@YA$$QEAPEAPEAUAVCodecParameters@@AEAPEAPEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAP6AXPEAPEAUAVCodecParameters@@@Z@std@@YAAEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@$$QEAU0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@$$QEAU0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@$$QEAU0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@$$QEAU0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@$$QEAU0@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@$$QEAU0@@Z
	DD	imagerel $ip2state$??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@$$QEAU0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@$$QEAU0@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@$$QEAU0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ
	DD	imagerel $ip2state$??1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@$$QEAV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@$$QEAV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'\'
	DB	02H
	DB	'2'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@$$QEAV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@$$QEAV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@$$QEAV01@@Z
	DD	imagerel $ip2state$??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@$$QEAV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'\'
	DB	02H
	DB	' '
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@AEBV01@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Set@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getimpl@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Local@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEBA_NXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAXXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reset_move@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAX$$QEAV12@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reset_copy@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAXAEBV12@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Empty@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEBA_NXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEBAXPEAPEAUAVCodecParameters@@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$RGYAVDeleter@UAVCodecParameters@@@@QEAAXPEAUAVCodecParameters@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z DB 06H
	DB	00H
	DB	00H
	DB	'F'
	DB	02H
	DB	'&'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z
	DD	imagerel $ip2state$??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0Ualigned_malloc_deleter@@$0A@@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0Ualigned_malloc_deleter@@$0A@@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??$?0Ualigned_malloc_deleter@@$0A@@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0Ualigned_malloc_deleter@@$0A@@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0Ualigned_malloc_deleter@@$0A@@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0Umalloc_deleter@@$0A@@?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0Umalloc_deleter@@$0A@@?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??$?0Umalloc_deleter@@$0A@@?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0Umalloc_deleter@@$0A@@?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0Umalloc_deleter@@$0A@@?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
	DD	imagerel $ip2state$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEAUnal_info@@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z DB 06H
	DB	00H
	DB	00H
	DB	080H
	DB	04H
	DB	'N'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0???G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0???G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z DB 08H
	DD	imagerel $stateUnwindMap$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z
	DD	imagerel $ip2state$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z DD 022811H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z$rtcName$0 DB 05fH ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator-
	DB	054H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+11
??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z$rtcVarDesc DD 028H ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator-
	DD	018H
	DQ	FLAT:??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z$rtcName$0
	ORG $+48
??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z$rtcFrameData DD 01H ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator-
	DD	00H
	DQ	FLAT:??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAAEAV01@_J@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEAUnal_info@@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z
	DD	imagerel $ip2state$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z DD 022811H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
	DD	imagerel $ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAXPEBUnal_info@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unwrapped@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEBUnal_info@@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@1@0@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAXAEBV12@@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA_NAEBV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA_NAEBV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Z?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAAEAV01@_J@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAAEAV01@_J@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAX_J@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEBUnal_info@@XZ DD 021e01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	'<'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z
	DD	imagerel $ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z DD 022811H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Unal_info@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Unal_info@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Take_contents@?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@QEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAAEBV?$allocator@Unal_info@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAAEAV?$allocator@Unal_info@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	0faH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z DB 08H
	DD	imagerel $stateUnwindMap$?_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z
	DD	imagerel $ip2state$?_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z DD 022811H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z$rtcName$0 DB 05fH ; std::vector<nal_info,std::allocator<nal_info> >::_Orphan_range
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z$rtcVarDesc DD 024H ; std::vector<nal_info,std::allocator<nal_info> >::_Orphan_range
	DD	04H
	DQ	FLAT:?_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z$rtcName$0
	ORG $+48
?_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z$rtcFrameData DD 01H ; std::vector<nal_info,std::allocator<nal_info> >::_Orphan_range
	DD	00H
	DQ	FLAT:?_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXQEAUnal_info@@_K1@Z DD 022d01H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBA_K_K@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@00@Z DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept1@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@00U?$integral_constant@_N$00@2@@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAPEAUnal_info@@PEAU3@00@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBAPEBUnal_info@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBAPEBUnal_info@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ DB 04H
	DB	00H
	DB	00H
	DB	0aeH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ DB 048H
	DD	imagerel $stateUnwindMap$?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ
	DD	imagerel $ip2state$?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ DB 04H
	DB	00H
	DB	00H
	DB	0aeH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ DB 048H
	DD	imagerel $stateUnwindMap$?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ
	DD	imagerel $ip2state$?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ DB 04H
	DB	00H
	DB	00H
	DB	0aeH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ DB 048H
	DD	imagerel $stateUnwindMap$?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ
	DD	imagerel $ip2state$?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ DB 04H
	DB	00H
	DB	00H
	DB	0aeH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ DB 048H
	DD	imagerel $stateUnwindMap$?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ
	DD	imagerel $ip2state$?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAXAEBUnal_info@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
	DB	053H
	DB	031H
	DB	00H
	ORG $+12
??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
	DD	01H
	DQ	FLAT:??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
	DD	00H
	DQ	FLAT:??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Move_assign@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@$$QEAV01@@Z DB 040H
	DD	imagerel $ip2state$??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@$$QEAV01@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Move_construct@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@Unal_info@@@std@@@std@@SA_KAEBV?$allocator@Unal_info@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@Unal_info@@@std@@QEAAPEAUnal_info@@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@Unal_info@@@std@@QEAAXQEAUnal_info@@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@Unal_info@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GCQSVOutFrame@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GRGYOutputRaw@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAAAEAU?$RGYAVDeleter@UAVBSFContext@@@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reset@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAXPEAUAVBSFContext@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?reset@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAXPEAUAVBSFContext@@@Z DB 040H
	DD	imagerel $ip2state$?reset@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAXPEAUAVBSFContext@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAXPEAUAVBSFContext@@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?reset@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAXPEAUAVBSFContext@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?release@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAPEAUAVBSFContext@@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?release@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAPEAUAVBSFContext@@XZ DB 040H
	DD	imagerel $ip2state$?release@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAPEAUAVBSFContext@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?release@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAPEAUAVBSFContext@@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?release@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAPEAUAVBSFContext@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBA_NXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBAPEAUAVBSFContext@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBAPEAUAVBSFContext@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'<'
	DB	02H
	DB	'X'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAAEAV01@$$QEAV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$RGYAVDeleter@UAVBSFContext@@@@QEAAAEAU0@$$QEAU0@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@$$QEAU0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@$$QEAU0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@$$QEAU0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@$$QEAU0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@$$QEAU0@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@$$QEAU0@@Z
	DD	imagerel $ip2state$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@$$QEAU0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@$$QEAU0@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@$$QEAU0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ
	DD	imagerel $ip2state$??1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAAAEAV01@$$QEAV01@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$QEAV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$QEAV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'\'
	DB	02H
	DB	'2'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$QEAV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$QEAV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$QEAV01@@Z
	DD	imagerel $ip2state$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$QEAV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'\'
	DB	02H
	DB	' '
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@AEBV01@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$T@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$T@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$T@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$T@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$T@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$T@Z
	DD	imagerel $ip2state$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$T@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$T@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$T@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Set@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getimpl@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Local@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEBA_NXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAXXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reset_move@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAX$$QEAV12@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reset_copy@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAXAEBV12@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Empty@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEBA_NXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEBAXPEAPEAUAVBSFContext@@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$RGYAVDeleter@UAVBSFContext@@@@QEAAXPEAUAVBSFContext@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z DB 06H
	DB	00H
	DB	00H
	DB	'F'
	DB	02H
	DB	'&'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z
	DD	imagerel $ip2state$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ
	DD	imagerel $ip2state$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEBAAEBV?$allocator@E@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEAAAEAV?$allocator@E@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@E@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEBAAEBV?$allocator@E@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEAAAEAV?$allocator@E@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@EV?$allocator@E@std@@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@EV?$allocator@E@std@@@std@@AEAAX_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@EV?$allocator@E@std@@@std@@AEBA_K_K@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@EV?$allocator@E@std@@@std@@AEAAXPEAE0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@EV?$allocator@E@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@EV?$allocator@E@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@EV?$allocator@E@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?data@?$vector@EV?$allocator@E@std@@@std@@QEAAPEAEXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?data@?$vector@EV?$allocator@E@std@@@std@@QEAAPEAEXZ DB 040H
	DD	imagerel $ip2state$?data@?$vector@EV?$allocator@E@std@@@std@@QEAAPEAEXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?data@?$vector@EV?$allocator@E@std@@@std@@QEAAPEAEXZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?data@?$vector@EV?$allocator@E@std@@@std@@QEAAPEAEXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?clear@?$vector@EV?$allocator@E@std@@@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?clear@?$vector@EV?$allocator@E@std@@@std@@QEAAXXZ DB 040H
	DD	imagerel $ip2state$?clear@?$vector@EV?$allocator@E@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$vector@EV?$allocator@E@std@@@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?clear@?$vector@EV?$allocator@E@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Clear_and_reserve_geometric@?$vector@EV?$allocator@E@std@@@std@@AEAAX_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@AEBV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Copy_assign@?$vector@EV?$allocator@E@std@@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
	DB	053H
	DB	032H
	DB	00H
	ORG $+12
??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
	DD	01H
	DQ	FLAT:??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
	DD	00H
	DQ	FLAT:??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??0?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@E@std@@@std@@SA_KAEBV?$allocator@E@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@E@std@@QEAAPEAE_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@E@std@@QEAAXQEAE_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@E@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GRGYOutput@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAAAEAUaligned_malloc_deleter@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reset@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAAXPEAE@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?reset@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAAXPEAE@Z DB 040H
	DD	imagerel $ip2state$?reset@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAAXPEAE@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAAXPEAE@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?reset@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAAXPEAE@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEBAPEAEXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@Umalloc_deleter@@PEAD$00@std@@QEAAAEAUmalloc_deleter@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reset@?$unique_ptr@DUmalloc_deleter@@@std@@QEAAXPEAD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?reset@?$unique_ptr@DUmalloc_deleter@@@std@@QEAAXPEAD@Z DB 040H
	DD	imagerel $ip2state$?reset@?$unique_ptr@DUmalloc_deleter@@@std@@QEAAXPEAD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$unique_ptr@DUmalloc_deleter@@@std@@QEAAXPEAD@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?reset@?$unique_ptr@DUmalloc_deleter@@@std@@QEAAXPEAD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$unique_ptr@DUmalloc_deleter@@@std@@QEBAPEADXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??AddMessage@RGYOutput@@QEAAXHPEBDZZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?AddMessage@RGYOutput@@QEAAXHPEBDZZ DB 06H
	DB	00H
	DB	00H
	DB	0fdH, 02H
	DB	02H
	DB	0e2H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?AddMessage@RGYOutput@@QEAAXHPEBDZZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??AddMessage@RGYOutput@@QEAAXHPEBDZZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?AddMessage@RGYOutput@@QEAAXHPEBDZZ DB 08H
	DD	imagerel $stateUnwindMap$?AddMessage@RGYOutput@@QEAAXHPEBDZZ
	DD	imagerel $ip2state$?AddMessage@RGYOutput@@QEAAXHPEBDZZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddMessage@RGYOutput@@QEAAXHPEBDZZ DD 034419H
	DD	014011bH
	DD	07014H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?AddMessage@RGYOutput@@QEAAXHPEBDZZ
	DD	092H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?AddMessage@RGYOutput@@QEAAXHPEBDZZ$rtcName$0 DB 061H	; RGYOutput::AddMessage
	DB	072H
	DB	067H
	DB	073H
	DB	00H
	ORG $+3
?AddMessage@RGYOutput@@QEAAXHPEBDZZ$rtcName$1 DB 062H	; RGYOutput::AddMessage
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
?AddMessage@RGYOutput@@QEAAXHPEBDZZ$rtcVarDesc DD 048H	; RGYOutput::AddMessage
	DD	028H
	DQ	FLAT:?AddMessage@RGYOutput@@QEAAXHPEBDZZ$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:?AddMessage@RGYOutput@@QEAAXHPEBDZZ$rtcName$0
	ORG $+96
?AddMessage@RGYOutput@@QEAAXHPEBDZZ$rtcFrameData DD 02H	; RGYOutput::AddMessage
	DD	00H
	DQ	FLAT:?AddMessage@RGYOutput@@QEAAXHPEBDZZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 014H
	DB	00H
	DB	00H
	DB	'q', 02H
	DB	02H
	DB	'6'
	DB	06H
	DB	0c1H, 03H
	DB	08H
	DB	'j'
	DB	0aH
	DB	'h'
	DB	0cH
	DB	'|'
	DB	0aH
	DB	01cH
	DB	08H
	DB	01cH
	DB	06H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 0cH
	DB	0eH
	DD	imagerel ?dtor$0@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	05eH
	DD	imagerel ?dtor$1@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 08H
	DD	imagerel $stateUnwindMap$?AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$?AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 033f19H
	DD	02e0116H
	DD	0700fH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	0162H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$rtcName$0 DB 06cH ; RGYOutput::AddMessage
	DB	069H
	DB	06eH
	DB	065H
	DB	073H
	DB	00H
	ORG $+10
?AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$rtcVarDesc DD 028H ; RGYOutput::AddMessage
	DD	020H
	DQ	FLAT:?AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$rtcName$0
	ORG $+48
?AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$rtcFrameData DD 01H ; RGYOutput::AddMessage
	DD	00H
	DQ	FLAT:?AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WaitFin@RGYOutput@@UEAAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getOutType@RGYOutput@@UEAA?AW4OutputType@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?outputStdout@RGYOutput@@UEAA_NXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$min@PEAE@std@@YAAEBQEAEAEBQEAE0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$min@PEAE@std@@YAAEBQEAEAEBQEAE0@Z DB 040H
	DD	imagerel $ip2state$??$min@PEAE@std@@YAAEBQEAEAEBQEAE0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$min@PEAE@std@@YAAEBQEAEAEBQEAE0@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$min@PEAE@std@@YAAEBQEAEAEBQEAE0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?csp@RGYFrame@@QEAA?AW4RGY_CSP@@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ DD 033619H
	DD	0700cc210H
	DD	0600bH
	DD	imagerel __GSHandlerCheck
	DD	050H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ$rtcName$0 DB 063H	; RGYFrame::crop
	DB	072H
	DB	00H
	ORG $+13
?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ$rtcVarDesc DD 028H ; RGYFrame::crop
	DD	010H
	DQ	FLAT:?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ$rtcName$0
	ORG $+48
?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ$rtcFrameData DD 01H ; RGYFrame::crop
	DD	00H
	DQ	FLAT:?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?height@RGYFrame@@QEAAIXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?width@RGYFrame@@QEAAIXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pitch@RGYFrame@@QEAAIXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ptrRGB@RGYFrame@@QEAAPEAEXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ptrV@RGYFrame@@QEAAPEAEXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ptrU@RGYFrame@@QEAAPEAEXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ptrUV@RGYFrame@@QEAAPEAEXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ptrY@RGYFrame@@QEAAPEAEXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?changeSize@RGYBitstream@@QEAA?AW4RGY_ERR@@_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?changeSize@RGYBitstream@@QEAA?AW4RGY_ERR@@_K@Z$rtcName$0 DB 06eH ; RGYBitstream::changeSize
	DB	044H
	DB	061H
	DB	074H
	DB	061H
	DB	04cH
	DB	065H
	DB	06eH
	DB	00H
	ORG $+7
?changeSize@RGYBitstream@@QEAA?AW4RGY_ERR@@_K@Z$rtcVarDesc DD 038H ; RGYBitstream::changeSize
	DD	08H
	DQ	FLAT:?changeSize@RGYBitstream@@QEAA?AW4RGY_ERR@@_K@Z$rtcName$0
	ORG $+48
?changeSize@RGYBitstream@@QEAA?AW4RGY_ERR@@_K@Z$rtcFrameData DD 01H ; RGYBitstream::changeSize
	DD	00H
	DQ	FLAT:?changeSize@RGYBitstream@@QEAA?AW4RGY_ERR@@_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?trim@RGYBitstream@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@RGYBitstream@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?bufsize@RGYBitstream@@QEBA_KXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?setSize@RGYBitstream@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@RGYBitstream@@QEBA_KXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?frametype@RGYBitstream@@QEBA?AW4RGY_FRAMETYPE@@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?data@RGYBitstream@@QEBAPEAEXZ DD 010601H
	DD	07006H
xdata	ENDS
CONST	SEGMENT
	ORG $+3
?frametype_enc_to_rgy@@YA?AW4RGY_FRAMETYPE@@I@Z$rtcName$0 DB 074H ; frametype_enc_to_rgy
	DB	079H
	DB	070H
	DB	065H
	DB	00H
	ORG $+3
?frametype_enc_to_rgy@@YA?AW4RGY_FRAMETYPE@@I@Z$rtcFrameData DD 01H ; frametype_enc_to_rgy
	DD	00H
	DQ	FLAT:?frametype_enc_to_rgy@@YA?AW4RGY_FRAMETYPE@@I@Z$rtcVarDesc
?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z$rtcName$1 DB 073H ; RGYOutputRaw::WriteNextFrame
	DB	070H
	DB	073H
	DB	05fH
	DB	06eH
	DB	061H
	DB	06cH
	DB	00H
?frametype_enc_to_rgy@@YA?AW4RGY_FRAMETYPE@@I@Z$rtcVarDesc DD 024H ; frametype_enc_to_rgy
	DD	04H
	DQ	FLAT:?frametype_enc_to_rgy@@YA?AW4RGY_FRAMETYPE@@I@Z$rtcName$0
	ORG $+48
?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z$rtcName$0 DB 06eH ; RGYOutputRaw::WriteNextFrame
	DB	061H
	DB	06cH
	DB	05fH
	DB	06cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+3
?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z$rtcName$2 DB 070H ; RGYOutputRaw::WriteNextFrame
	DB	06bH
	DB	074H
	DB	00H
?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z$rtcName$3 DB 06eH ; RGYOutputRaw::WriteNextFrame
	DB	061H
	DB	06cH
	DB	05fH
	DB	06cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+3
?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z$rtcName$0 DB 066H ; RGYOutputRaw::Init
	DB	070H
	DB	00H
	ORG $+1
?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z$rtcName$4 DB 068H ; RGYOutputRaw::WriteNextFrame
	DB	065H
	DB	076H
	DB	063H
	DB	05fH
	DB	076H
	DB	070H
	DB	073H
	DB	05fH
	DB	06eH
	DB	061H
	DB	06cH
	DB	00H
	ORG $+3
?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z$rtcName$5 DB 068H ; RGYOutputRaw::WriteNextFrame
	DB	065H
	DB	076H
	DB	063H
	DB	05fH
	DB	073H
	DB	070H
	DB	073H
	DB	05fH
	DB	06eH
	DB	061H
	DB	06cH
	DB	00H
	ORG $+3
?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z$rtcName$6 DB 068H ; RGYOutputRaw::WriteNextFrame
	DB	065H
	DB	076H
	DB	063H
	DB	05fH
	DB	070H
	DB	070H
	DB	073H
	DB	05fH
	DB	06eH
	DB	061H
	DB	06cH
	DB	00H
	ORG $+3
?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z$rtcVarDesc DD 0298H ; RGYOutputRaw::WriteNextFrame
	DD	018H
	DQ	FLAT:?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z$rtcName$6
	DD	0268H
	DD	018H
	DQ	FLAT:?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z$rtcName$5
	DD	0238H
	DD	018H
	DQ	FLAT:?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z$rtcName$4
	DD	01f8H
	DD	020H
	DQ	FLAT:?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z$rtcName$3
	DD	0c0H
	DD	058H
	DQ	FLAT:?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z$rtcName$2
	DD	088H
	DD	018H
	DQ	FLAT:?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z$rtcName$1
	DD	048H
	DD	020H
	DQ	FLAT:?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z$rtcName$0
	ORG $+336
?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z$rtcFrameData DD 07H ; RGYOutputRaw::WriteNextFrame
	DD	00H
	DQ	FLAT:?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z$rtcVarDesc
?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z$rtcName$1 DB 070H ; RGYOutputRaw::Init
	DB	074H
	DB	072H
	DB	00H
?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z$rtcName$5 DB 073H ; RGYOutputRaw::Init
	DB	061H
	DB	072H
	DB	00H
?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z$rtcName$2 DB 063H ; RGYOutputRaw::Init
	DB	06fH
	DB	064H
	DB	065H
	DB	063H
	DB	070H
	DB	061H
	DB	072H
	DB	00H
	ORG $+3
?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z$rtcName$3 DB 062H ; RGYOutputRaw::Init
	DB	073H
	DB	066H
	DB	063H
	DB	00H
	ORG $+3
?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z$rtcName$4 DB 062H ; RGYOutputRaw::Init
	DB	073H
	DB	066H
	DB	050H
	DB	072H
	DB	06dH
	DB	00H
	ORG $+5
?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z$rtcFrameData DD 06H ; RGYOutputRaw::Init
	DD	00H
	DQ	FLAT:?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z$rtcVarDesc
?WriteNextFrame@CQSVOutFrame@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z$rtcName$0 DB 06cH ; CQSVOutFrame::WriteNextFrame
	DB	06fH
	DB	061H
	DB	064H
	DB	04cH
	DB	069H
	DB	06eH
	DB	065H
	DB	054H
	DB	06fH
	DB	042H
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+7
?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z$rtcVarDesc DD 02e0H ; RGYOutputRaw::Init
	DD	080H
	DQ	FLAT:?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z$rtcName$5
	DD	02b8H
	DD	08H
	DQ	FLAT:?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z$rtcName$4
	DD	01b8H
	DD	08H
	DQ	FLAT:?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z$rtcName$3
	DD	0150H
	DD	048H
	DQ	FLAT:?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z$rtcName$2
	DD	0b8H
	DD	08H
	DQ	FLAT:?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z$rtcName$1
	DD	098H
	DD	08H
	DQ	FLAT:?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z$rtcName$0
	ORG $+288
?WriteNextFrame@CQSVOutFrame@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z$rtcVarDesc DD 024H ; CQSVOutFrame::WriteNextFrame
	DD	01H
	DQ	FLAT:?WriteNextFrame@CQSVOutFrame@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z$rtcName$0
	ORG $+48
?WriteNextFrame@CQSVOutFrame@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z$rtcFrameData DD 01H ; CQSVOutFrame::WriteNextFrame
	DD	00H
	DQ	FLAT:?WriteNextFrame@CQSVOutFrame@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z$rtcVarDesc
?Init@CQSVOutFrame@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z$rtcName$0 DB 066H ; CQSVOutFrame::Init
	DB	070H
	DB	00H
	ORG $+5
?Init@CQSVOutFrame@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z$rtcFrameData DD 01H ; CQSVOutFrame::Init
	DD	00H
	DQ	FLAT:?Init@CQSVOutFrame@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z$rtcVarDesc
?parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z$rtcName$2 DB 070H ; parse_nal_unit_h264
	DB	072H
	DB	065H
	DB	076H
	DB	00H
	ORG $+3
?Init@CQSVOutFrame@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z$rtcVarDesc DD 038H ; CQSVOutFrame::Init
	DD	08H
	DQ	FLAT:?Init@CQSVOutFrame@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z$rtcName$0
	ORG $+48
?parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z$rtcName$0 DB 06eH ; parse_nal_unit_h264
	DB	061H
	DB	06cH
	DB	05fH
	DB	06cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+3
?WriteY4MHeader@@YA?AW4RGY_ERR@@PEAU_iobuf@@PEBUVideoInfo@@@Z$rtcName$0 DB 062H ; WriteY4MHeader
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+5
?parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z$rtcName$1 DB 06eH ; parse_nal_unit_h264
	DB	061H
	DB	06cH
	DB	05fH
	DB	073H
	DB	074H
	DB	061H
	DB	072H
	DB	074H
	DB	00H
	ORG $+6
?parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z$rtcFrameData DD 03H ; parse_nal_unit_h264
	DD	00H
	DQ	FLAT:?parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z$rtcVarDesc
?parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z$rtcName$2 DB 070H ; parse_nal_unit_hevc
	DB	072H
	DB	065H
	DB	076H
	DB	00H
	ORG $+3
?parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z$rtcVarDesc DD 0a8H ; parse_nal_unit_h264
	DD	018H
	DQ	FLAT:?parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z$rtcName$2
	DD	068H
	DD	018H
	DQ	FLAT:?parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z$rtcName$1
	DD	028H
	DD	020H
	DQ	FLAT:?parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z$rtcName$0
	ORG $+144
?parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z$rtcName$0 DB 06eH ; parse_nal_unit_hevc
	DB	061H
	DB	06cH
	DB	05fH
	DB	06cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+7
?parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z$rtcName$1 DB 06eH ; parse_nal_unit_hevc
	DB	061H
	DB	06cH
	DB	05fH
	DB	073H
	DB	074H
	DB	061H
	DB	072H
	DB	074H
	DB	00H
	ORG $+6
?parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z$rtcVarDesc DD 0a8H ; parse_nal_unit_hevc
	DD	018H
	DQ	FLAT:?parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z$rtcName$2
	DD	068H
	DD	018H
	DQ	FLAT:?parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z$rtcName$1
	DD	028H
	DD	020H
	DQ	FLAT:?parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z$rtcName$0
	ORG $+144
?parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z$rtcFrameData DD 03H ; parse_nal_unit_hevc
	DD	00H
	DQ	FLAT:?parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z$rtcVarDesc
?WriteY4MHeader@@YA?AW4RGY_ERR@@PEAU_iobuf@@PEBUVideoInfo@@@Z$rtcVarDesc DD 040H ; WriteY4MHeader
	DD	0100H
	DQ	FLAT:?WriteY4MHeader@@YA?AW4RGY_ERR@@PEAU_iobuf@@PEBUVideoInfo@@@Z$rtcName$0
	ORG $+48
?WriteY4MHeader@@YA?AW4RGY_ERR@@PEAU_iobuf@@PEBUVideoInfo@@@Z$rtcFrameData DD 01H ; WriteY4MHeader
	DD	00H
	DQ	FLAT:?WriteY4MHeader@@YA?AW4RGY_ERR@@PEAU_iobuf@@PEBUVideoInfo@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	DB	053H
	DB	035H
	DB	00H
	ORG $+12
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	DD	01H
	DQ	FLAT:??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	DD	00H
	DQ	FLAT:??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetOutputData@EncodeStatus@@QEAAXW4RGY_FRAMETYPE@@_KI@Z DD 022c01H
	DD	070143218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	'p'
	DB	02H
	DB	' '
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ DB 048H
	DD	imagerel $stateUnwindMap$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ
	DD	imagerel $ip2state$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ DD 021e11H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAAAEAUfp_deleter@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z DB 040H
	DD	imagerel $ip2state$?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBA_NXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	'p'
	DB	02H
	DB	' '
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ DB 048H
	DD	imagerel $stateUnwindMap$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ
	DD	imagerel $ip2state$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ DD 021e11H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$_Ptr_base@VEncodeStatus@@@std@@IEBAPEAVEncodeStatus@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getLogLevel@RGYLog@@QEAAHXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$min@_K@std@@YAAEB_KAEB_K0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$min@_K@std@@YAAEB_KAEB_K0@Z DB 040H
	DD	imagerel $ip2state$??$min@_K@std@@YAAEB_KAEB_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$min@_K@std@@YAAEB_KAEB_K0@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$min@_K@std@@YAAEB_KAEB_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0VideoInfo@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z DB 04H
	DB	00H
	DB	00H
	DB	0aaH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z
	DD	imagerel $ip2state$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z DD 022811H
	DD	070105214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z DB 04H
	DB	00H
	DB	00H
	DB	0aaH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z
	DD	imagerel $ip2state$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z DD 022811H
	DD	070105214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	0a0H
	DB	04H
	DB	01H, 02H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z
	DD	imagerel $ip2state$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z DD 023d19H
	DD	07010f217H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z
	DD	072H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z$rtcName$0 DB 05fH ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	DB	041H
	DB	06eH
	DB	073H
	DB	00H
	ORG $+11
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z$rtcVarDesc DD 028H ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	DD	028H
	DQ	FLAT:??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z$rtcName$0
	ORG $+48
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z$rtcFrameData DD 01H ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0VideoVUIInfo@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspColorprimList@@YAXXZ DD 042b19H
	DD	023010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0108H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z DD 033d19H
	DD	07016821aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspTransferList@@YAXXZ DD 042b19H
	DD	02b010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0148H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z DD 033d19H
	DD	07016a21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspMatrixList@@YAXXZ DD 042b19H
	DD	029010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0130H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z DD 033d19H
	DD	07016a21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Rfp_deleter@@QEBAXPEAU_iobuf@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Rmalloc_deleter@@QEBAXPEAX@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Raligned_malloc_deleter@@QEBAXPEAX@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
xdata	SEGMENT
$unwind$??I@YA?AW4RGY_PICSTRUCT@@W40@0@Z DD 010901H
	DD	07009H
$unwind$??U@YA?AW4RGY_FRAMETYPE@@W40@0@Z DD 010901H
	DD	07009H
$unwind$??_5@YA?AW4RGY_FRAMETYPE@@AEAW40@W40@@Z DD 022201H
	DD	0700a320eH
$unwind$??I@YA?AW4RGY_FRAMETYPE@@W40@0@Z DD 010901H
	DD	07009H
$unwind$?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z DD 022301H
	DD	0700b520fH
$unwind$?getAVCodecId@@YA?BW4AVCodecID@@W4RGY_CODEC@@@Z DD 021c01H
	DD	070051209H
$unwind$??U@YA?AW4MemType@@W40@0@Z DD 010901H
	DD	07009H
$unwind$??I@YA?AW4MemType@@W40@0@Z DD 010901H
	DD	07009H
$unwind$?frametype_enc_to_rgy@@YA?AW4RGY_FRAMETYPE@@I@Z DD 021c01H
	DD	07005b209H
$unwind$??0RGYOutput@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0RGYOutput@@QEAA@XZ
$cppxdata$??0RGYOutput@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0RGYOutput@@QEAA@XZ
	DD	imagerel $ip2state$??0RGYOutput@@QEAA@XZ
$stateUnwindMap$??0RGYOutput@@QEAA@XZ DB 010H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0RGYOutput@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0RGYOutput@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0RGYOutput@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???0RGYOutput@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???0RGYOutput@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???0RGYOutput@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0???0RGYOutput@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$7@?0???0RGYOutput@@QEAA@XZ@4HA
$ip2state$??0RGYOutput@@QEAA@XZ DB 014H
	DB	00H
	DB	00H
	DB	'~'
	DB	02H
	DB	'$'
	DB	04H
	DB	096H
	DB	06H
	DB	'$'
	DB	08H
	DB	'|'
	DB	0aH
	DB	'('
	DB	0cH
	DB	'('
	DB	0eH
	DB	'('
	DB	010H
	DB	'8'
	DB	00H
$cppxdata$??1RGYOutput@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1RGYOutput@@UEAA@XZ
	DD	imagerel $ip2state$??1RGYOutput@@UEAA@XZ
$unwind$?dtor$0@?0???0RGYOutput@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0???0RGYOutput@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0???0RGYOutput@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0???0RGYOutput@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0???0RGYOutput@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$5@?0???0RGYOutput@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$6@?0???0RGYOutput@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$7@?0???0RGYOutput@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$??1RGYOutput@@UEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1RGYOutput@@UEAA@XZ
$stateUnwindMap$??1RGYOutput@@UEAA@XZ DB 010H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1RGYOutput@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???1RGYOutput@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???1RGYOutput@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???1RGYOutput@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???1RGYOutput@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???1RGYOutput@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0???1RGYOutput@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$7@?0???1RGYOutput@@UEAA@XZ@4HA
$ip2state$??1RGYOutput@@UEAA@XZ DB 014H
	DB	00H
	DB	00H
	DB	'Z'
	DB	010H
	DB	'b'
	DB	0eH
	DB	'('
	DB	0cH
	DB	'('
	DB	0aH
	DB	'('
	DB	08H
	DB	'('
	DB	06H
	DB	'$'
	DB	04H
	DB	'$'
	DB	02H
	DB	'$'
	DB	00H
$cppxdata$??0RGYOutputRaw@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0RGYOutputRaw@@QEAA@XZ
	DD	imagerel $ip2state$??0RGYOutputRaw@@QEAA@XZ
$cppxdata$??1RGYOutputRaw@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1RGYOutputRaw@@UEAA@XZ
	DD	imagerel $ip2state$??1RGYOutputRaw@@UEAA@XZ
$unwind$?dtor$0@?0???1RGYOutput@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0???1RGYOutput@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0???1RGYOutput@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0???1RGYOutput@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0???1RGYOutput@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$5@?0???1RGYOutput@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$6@?0???1RGYOutput@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$7@?0???1RGYOutput@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?Close@RGYOutput@@UEAAXXZ DD 021e01H
	DD	07006320aH
$unwind$??0RGYOutputRaw@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0RGYOutputRaw@@QEAA@XZ
$stateUnwindMap$??0RGYOutputRaw@@QEAA@XZ DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0RGYOutputRaw@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0RGYOutputRaw@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0RGYOutputRaw@@QEAA@XZ@4HA
$ip2state$??0RGYOutputRaw@@QEAA@XZ DB 0aH
	DB	00H
	DB	00H
	DB	'R'
	DB	02H
	DB	'F'
	DB	04H
	DB	'('
	DB	06H
	DB	'H'
	DB	00H
$cppxdata$?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z DB 08H
	DD	imagerel $stateUnwindMap$?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z
	DD	imagerel $ip2state$?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z
$unwind$?dtor$0@?0???0RGYOutputRaw@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0???0RGYOutputRaw@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0???0RGYOutputRaw@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$??1RGYOutputRaw@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1RGYOutputRaw@@UEAA@XZ
$stateUnwindMap$??1RGYOutputRaw@@UEAA@XZ DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1RGYOutputRaw@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???1RGYOutputRaw@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???1RGYOutputRaw@@UEAA@XZ@4HA
$ip2state$??1RGYOutputRaw@@UEAA@XZ DB 0aH
	DB	00H
	DB	00H
	DB	'Z'
	DB	06H
	DB	','
	DB	04H
	DB	'('
	DB	02H
	DB	'('
	DB	00H
$cppxdata$?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z DB 08H
	DD	imagerel $stateUnwindMap$?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z
	DD	imagerel $ip2state$?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z
$unwind$?dtor$0@?0???1RGYOutputRaw@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0???1RGYOutputRaw@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0???1RGYOutputRaw@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z DD 033b19H
	DD	0d40112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z
	DD	069aH
$stateUnwindMap$?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z DB 030H
	DB	0eH
	DD	imagerel ?dtor$0@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DB	056H
	DD	imagerel ?dtor$2@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DB	07eH
	DD	imagerel ?dtor$3@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DB	0ceH
	DD	imagerel ?dtor$5@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DB	056H
	DD	imagerel ?dtor$7@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$8@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DB	0a6H
	DD	imagerel ?dtor$9@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$10@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DB	08dH
	DB	03H
	DD	imagerel ?dtor$11@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DB	036H
	DD	imagerel ?dtor$12@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$13@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DB	086H
	DD	imagerel ?dtor$14@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$15@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$16@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DB	07eH
	DD	imagerel ?dtor$17@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$18@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$19@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DB	07eH
	DD	imagerel ?dtor$20@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$21@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$22@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$23@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA
$ip2state$?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z DB 'n'
	DB	00H
	DB	00H
	DB	09H, 03H
	DB	02H
	DB	0d6H
	DB	04H
	DB	'&'
	DB	02H
	DB	0faH
	DB	06H
	DB	'&'
	DB	02H
	DB	0d6H
	DB	08H
	DB	'T'
	DB	02H
	DB	'N'
	DB	0cH
	DB	'T'
	DB	0eH
	DB	'8'
	DB	0cH
	DB	'a', 04H
	DB	010H
	DB	0b6H
	DB	012H
	DB	'n'
	DB	010H
	DB	01cH
	DB	0cH
	DB	'0'
	DB	02H
	DB	01cH
	DB	00H
	DB	','
	DB	0cH
	DB	084H
	DB	02H
	DB	01cH
	DB	00H
	DB	'6'
	DB	0cH
	DB	0a2H
	DB	014H
	DB	0b6H
	DB	016H
	DB	'n'
	DB	014H
	DB	01cH
	DB	0cH
	DB	'0'
	DB	02H
	DB	01cH
	DB	00H
	DB	','
	DB	0cH
	DB	0a5H, 07H
	DB	02H
	DB	01cH
	DB	00H
	DB	0ceH
	DB	018H
	DB	0c2H
	DB	01aH
	DB	'Z'
	DB	018H
	DB	'N'
	DB	01eH
	DB	0c2H
	DB	' '
	DB	'Z'
	DB	01eH
	DB	'N'
	DB	'$'
	DB	0c2H
	DB	'&'
	DB	'Z'
	DB	'$'
	DB	'N'
	DB	'*'
	DB	'Z'
	DB	','
	DB	0bcH
	DB	'.'
	DB	0b4H
	DB	'0'
	DB	09cH
	DB	'.'
	DB	'H'
	DB	','
	DB	'H'
	DB	'*'
	DB	'y', 0cH
	DB	'$'
	DB	01cH
	DB	01eH
	DB	01cH
	DB	018H
	DB	01cH
	DB	00H
	DB	'2'
	DB	'*'
	DB	'.'
	DB	'$'
	DB	01cH
	DB	01eH
	DB	01cH
	DB	018H
	DB	01cH
	DB	00H
$ip2state$?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z DB '<'
	DB	00H
	DB	00H
	DB	0f5H, 04H
	DB	02H
	DB	'N'
	DB	04H
	DB	':'
	DB	02H
	DB	016H
	DB	00H
	DB	095H, 09H
	DB	06H
	DB	'6'
	DB	00H
	DB	0b9H, 05H
	DB	0aH
	DB	'<'
	DB	0eH
	DB	0fdH, 0aH
	DB	010H
	DB	'h'
	DB	0eH
	DB	'0'
	DB	00H
	DB	'2'
	DB	0eH
	DB	0c4H
	DB	012H
	DB	'h'
	DB	0eH
	DB	'0'
	DB	00H
	DB	'2'
	DB	0eH
	DB	0d2H
	DB	016H
	DB	'j'
	DB	018H
	DB	'>'
	DB	016H
	DB	01cH
	DB	0eH
	DB	'y', 0dH
	DB	01aH
	DB	'h'
	DB	0eH
	DB	'0'
	DB	00H
	DB	'2'
	DB	0eH
	DB	0beH
	DB	01cH
	DB	'h'
	DB	0eH
	DB	'0'
	DB	00H
	DB	','
	DB	0eH
	DB	'D'
	DB	00H
$cppxdata$??0CQSVOutFrame@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0CQSVOutFrame@@QEAA@XZ
	DD	imagerel $ip2state$??0CQSVOutFrame@@QEAA@XZ
$unwind$?dtor$0@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$5@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$6@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$7@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$8@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$9@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$10@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$11@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$12@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$13@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$14@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$15@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$16@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$17@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$18@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$19@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$20@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$21@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$22@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$23@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z DD 010b01H
	DD	0700bH
$unwind$?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z DD 034519H
	DD	0ac011cH
	DD	07015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z
	DD	0552H
$stateUnwindMap$?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z DB 01cH
	DB	0eH
	DD	imagerel ?dtor$0@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
	DB	05eH
	DD	imagerel ?dtor$2@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
	DB	086H
	DD	imagerel ?dtor$3@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
	DB	0aeH
	DD	imagerel ?dtor$4@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
	DB	0feH
	DD	imagerel ?dtor$5@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
	DB	056H
	DD	imagerel ?dtor$7@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
	DB	07eH
	DD	imagerel ?dtor$8@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
	DB	0a6H
	DD	imagerel ?dtor$9@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$10@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
	DB	0f6H
	DD	imagerel ?dtor$11@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
	DB	03dH
	DB	02H
	DD	imagerel ?dtor$12@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA
$unwind$?dtor$0@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$5@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$6@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$7@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$8@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$9@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$10@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$11@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$12@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$??0CQSVOutFrame@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0CQSVOutFrame@@QEAA@XZ
$stateUnwindMap$??0CQSVOutFrame@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0CQSVOutFrame@@QEAA@XZ@4HA
$ip2state$??0CQSVOutFrame@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'R'
	DB	02H
	DB	'~'
	DB	00H
$cppxdata$??1CQSVOutFrame@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1CQSVOutFrame@@UEAA@XZ
	DD	imagerel $ip2state$??1CQSVOutFrame@@UEAA@XZ
$stateUnwindMap$??1CQSVOutFrame@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1CQSVOutFrame@@UEAA@XZ@4HA
$unwind$?dtor$0@?0???0CQSVOutFrame@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$??1CQSVOutFrame@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1CQSVOutFrame@@UEAA@XZ
$ip2state$??1CQSVOutFrame@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
$cppxdata$?parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z DB 08H
	DD	imagerel $stateUnwindMap$?parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z
	DD	imagerel $ip2state$?parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z
$unwind$?dtor$0@?0???1CQSVOutFrame@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?WriteNextFrame@CQSVOutFrame@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z DD 010b01H
	DD	0700bH
$unwind$?WriteNextFrame@CQSVOutFrame@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z DD 033b19H
	DD	0800112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck
	DD	03f0H
$unwind$?Init@CQSVOutFrame@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z DD 022d01H
	DD	07015b219H
$unwind$?parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z DD 032e11H
	DD	0200117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z
$stateUnwindMap$?parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z DB 0aH
	DB	0eH
	DD	imagerel ?dtor$3@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA
	DB	07eH
	DD	imagerel ?dtor$2@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA
$ip2state$?parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z DB 0cH
	DB	00H
	DB	00H
	DB	088H
	DB	04H
	DB	'M', 07H
	DB	06H
	DB	'8'
	DB	0aH
	DB	092H
	DB	04H
	DB	0c0H
	DB	02H
$unwind$?dtor$0@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z DD 032e11H
	DD	0200117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z
$cppxdata$?parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z DB 08H
	DD	imagerel $stateUnwindMap$?parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z
	DD	imagerel $ip2state$?parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z
$stateUnwindMap$?parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z DB 0aH
	DB	0eH
	DD	imagerel ?dtor$3@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA
	DB	07eH
	DD	imagerel ?dtor$2@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA
$ip2state$?parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z DB 0cH
	DB	00H
	DB	00H
	DB	088H
	DB	04H
	DB	'U', 07H
	DB	06H
	DB	'8'
	DB	0aH
	DB	092H
	DB	04H
	DB	0c0H
	DB	02H
	ORG $+3
$unwind$?dtor$0@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?WriteY4MHeader@@YA?AW4RGY_ERR@@PEAU_iobuf@@PEBUVideoInfo@@@Z DD 033b19H
	DD	0300112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck
	DD	0178H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_tcscmp DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 021e01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DB	04dH
	DB	061H
	DB	073H
	DB	06bH
	DB	065H
	DB	064H
	DB	00H
	ORG $+8
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcVarDesc DD 028H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DD	08H
	DQ	FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcName$0
	ORG $+48
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DD	00H
	DQ	FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006b20aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DB	041H
	DB	06cH
	DB	06cH
	DB	06fH
	DB	063H
	DB	05fH
	DB	06dH
	DB	061H
	DB	078H
	DB	00H
	ORG $+5
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcVarDesc DD 028H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DD	08H
	DQ	FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcName$0
	ORG $+48
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DD	00H
	DQ	FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DB 040H
	DD	imagerel $ip2state$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z DB 040H
	DD	imagerel $ip2state$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z DB 040H
	DD	imagerel $ip2state$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD 022801H
	DD	070109214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 022801H
	DD	070109214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'<'
	DB	02H
	DB	0aeH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 021e11H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	031H
	DB	034H
	DB	00H
	ORG $+11
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	01H
	DQ	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DB 040H
	DD	imagerel $ip2state$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DB 040H
	DD	imagerel $ip2state$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	094H
	DB	02H
	DB	09cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 0aH
	DB	00H
	DB	00H
	DB	'~'
	DB	02H
	DB	'~'
	DB	04H
	DB	'Z'
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD 022911H
	DD	0700bf212H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	031H
	DB	036H
	DB	00H
	ORG $+3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$1 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcVarDesc DD 058H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	010H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$0
	ORG $+96
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcFrameData DD 02H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'b'
	DB	02H
	DB	'd'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	't'
	DB	02H
	DB	'4'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@D@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z DB 040H
	DD	imagerel $ip2state$?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 040H
	DD	imagerel $ip2state$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 040H
	DD	imagerel $ip2state$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DB 040H
	DD	imagerel $ip2state$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decwref@_Ref_count_base@std@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decref@_Ref_count_base@std@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DB 0aH
	DB	00H
	DB	00H
	DB	0d0H
	DB	02H
	DB	088H
	DB	00H
	DB	'>'
	DB	04H
	DB	01cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
	DB	036H
	DD	imagerel ?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DB 048H
	DD	imagerel $stateUnwindMap$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
	DD	imagerel $ip2state$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD 022619H
	DD	0700bd20fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$0 DB 05fH ; std::_Iterator_base12::_Adopt
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+2
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$1 DB 05fH ; std::_Iterator_base12::_Adopt
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+2
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcVarDesc DD 054H ; std::_Iterator_base12::_Adopt
	DD	04H
	DQ	FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$1
	DD	034H
	DD	04H
	DQ	FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$0
	ORG $+96
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcFrameData DD 02H ; std::_Iterator_base12::_Adopt
	DD	00H
	DQ	FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Iterator_base12@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'^'
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1_Iterator_base12@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Iterator_base12@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1_Iterator_base12@std@@QEAA@XZ
	DD	imagerel $ip2state$??1_Iterator_base12@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Iterator_base12@std@@QEAA@XZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Iterator_base12@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1_Iterator_base12@std@@QEAA@XZ$rtcName$0 DB 05fH	; std::_Iterator_base12::~_Iterator_base12
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
??1_Iterator_base12@std@@QEAA@XZ$rtcVarDesc DD 024H	; std::_Iterator_base12::~_Iterator_base12
	DD	04H
	DQ	FLAT:??1_Iterator_base12@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1_Iterator_base12@std@@QEAA@XZ$rtcFrameData DD 01H	; std::_Iterator_base12::~_Iterator_base12
	DD	00H
	DQ	FLAT:??1_Iterator_base12@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DB 06H
	DB	00H
	DB	00H
	DB	0d2H
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
	DD	imagerel $ip2state$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DD 022319H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcName$0 DB 05fH ; std::_Iterator_base12::operator=
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcVarDesc DD 024H ; std::_Iterator_base12::operator=
	DD	04H
	DQ	FLAT:??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcName$0
	ORG $+48
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcFrameData DD 01H ; std::_Iterator_base12::operator=
	DD	00H
	DQ	FLAT:??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Iterator_base12@std@@QEAA@AEBU01@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Iterator_base12@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 06H
	DB	00H
	DB	00H
	DB	'h'
	DB	02H
	DB	0c0H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 048H
	DD	imagerel $stateUnwindMap$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
	DD	imagerel $ip2state$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DD 022319H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcName$0 DB 05fH ; std::_Container_base12::_Swap_proxy_and_iterators
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcVarDesc DD 024H ; std::_Container_base12::_Swap_proxy_and_iterators
	DD	04H
	DQ	FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcName$0
	ORG $+48
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcFrameData DD 01H ; std::_Container_base12::_Swap_proxy_and_iterators
	DD	00H
	DQ	FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	't'
	DB	02H
	DB	0a6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 048H
	DD	imagerel $stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	imagerel $ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all
	DD	04H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all
	DD	00H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Convert_size@_K@std@@YA_K_K@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sprintf_s DD 022d01H
	DD	07015b219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
sprintf_s$rtcName$0 DB 05fH
	DB	041H
	DB	072H
	DB	067H
	DB	04cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+7
sprintf_s$rtcVarDesc DD 048H
	DD	08H
	DQ	FLAT:sprintf_s$rtcName$0
	ORG $+48
sprintf_s$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:sprintf_s$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vscprintf DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vscprintf_l DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$vsprintf_s DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsprintf_s_l DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__local_stdio_printf_options DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 021501H
	DD	070027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_array_new_length@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'`'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_alloc@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_alloc@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@AEAA@QEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DB 040H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception@std@@QEAA@AEBV01@@Z DB 040H
	DD	imagerel $ip2state$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 010601H
	DD	07006H
xdata	ENDS
CRT$XCU	SEGMENT
?CspTransferList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspTransferList@@YAXXZ ; CspTransferList$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?CspColorprimList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspColorprimList@@YAXXZ ; CspColorprimList$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBQ6AXPEAPEAUAVCodecParameters@@@Z@std@@YAAEBQ6AXPEAPEAUAVCodecParameters@@@ZAEBQ6AX0@Z@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBQ6AXPEAPEAUAVCodecParameters@@@Z@std@@YAAEBQ6AXPEAPEAUAVCodecParameters@@@ZAEBQ6AX0@Z@Z PROC ; std::forward<void (__cdecl*const &)(AVCodecParameters * *)>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBQ6AXPEAPEAUAVCodecParameters@@@Z@std@@YAAEBQ6AXPEAPEAUAVCodecParameters@@@ZAEBQ6AX0@Z@Z ENDP ; std::forward<void (__cdecl*const &)(AVCodecParameters * *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBQ6AXPEAPEAUAVBSFContext@@@Z@std@@YAAEBQ6AXPEAPEAUAVBSFContext@@@ZAEBQ6AX0@Z@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBQ6AXPEAPEAUAVBSFContext@@@Z@std@@YAAEBQ6AXPEAPEAUAVBSFContext@@@ZAEBQ6AX0@Z@Z PROC ; std::forward<void (__cdecl*const &)(AVBSFContext * *)>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBQ6AXPEAPEAUAVBSFContext@@@Z@std@@YAAEBQ6AXPEAPEAUAVBSFContext@@@ZAEBQ6AX0@Z@Z ENDP ; std::forward<void (__cdecl*const &)(AVBSFContext * *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Refancy@PEAUnal_info@@$0A@@std@@YAPEAUnal_info@@PEAU1@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Refancy@PEAUnal_info@@$0A@@std@@YAPEAUnal_info@@PEAU1@@Z PROC ; std::_Refancy<nal_info *,0>, COMDAT

; 315  : _Pointer _Refancy(_Pointer _Ptr) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 316  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 317  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Refancy@PEAUnal_info@@$0A@@std@@YAPEAUnal_info@@PEAU1@@Z ENDP ; std::_Refancy<nal_info *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@0@AEAV10@@Z PROC ; std::move<std::function<void __cdecl(AVCodecParameters * *)> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@0@AEAV10@@Z ENDP ; std::move<std::function<void __cdecl(AVCodecParameters * *)> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$?0AEBQ6AXPEAPEAUAVCodecParameters@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@QEAA@AEBQ6AXPEAPEAUAVCodecParameters@@@Z@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
??$?0AEBQ6AXPEAPEAUAVCodecParameters@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@QEAA@AEBQ6AXPEAPEAUAVCodecParameters@@@Z@Z PROC ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *><void (__cdecl*const &)(AVCodecParameters * *),void>, COMDAT

; 936  :     explicit _Func_impl_no_alloc(_Other&& _Val) : _Callee(_STD forward<_Other>(_Val)) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ??0?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ ; std::_Func_base<void,AVCodecParameters * *>::_Func_base<void,AVCodecParameters * *>
  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@6B@
  00039	48 89 08	 mov	 QWORD PTR [rax], rcx
  0003c	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val$[rsp]
  00041	e8 00 00 00 00	 call	 ??$forward@AEBQ6AXPEAPEAUAVCodecParameters@@@Z@std@@YAAEBQ6AXPEAPEAUAVCodecParameters@@@ZAEBQ6AX0@Z@Z ; std::forward<void (__cdecl*const &)(AVCodecParameters * *)>
  00046	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004e	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00052	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00057	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005b	5f		 pop	 rdi
  0005c	c3		 ret	 0
??$?0AEBQ6AXPEAPEAUAVCodecParameters@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@QEAA@AEBQ6AXPEAPEAUAVCodecParameters@@@Z@Z ENDP ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *><void (__cdecl*const &)(AVCodecParameters * *),void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$_Call@AEAP6AXPEAPEAUAVCodecParameters@@@ZPEAPEAU1@@?$_Invoker_ret@X$00@std@@SAXAEAP6AXPEAPEAUAVCodecParameters@@@Z$$QEAPEAPEAU2@@Z
_TEXT	SEGMENT
tv64 = 32
<_Vals_0>$ = 64
<_Vals_1>$ = 72
??$_Call@AEAP6AXPEAPEAUAVCodecParameters@@@ZPEAPEAU1@@?$_Invoker_ret@X$00@std@@SAXAEAP6AXPEAPEAUAVCodecParameters@@@Z$$QEAPEAPEAU2@@Z PROC ; std::_Invoker_ret<void,1>::_Call<void (__cdecl*&)(AVCodecParameters * *),AVCodecParameters * *>, COMDAT

; 1588 :     static void _Call(_Valtys&&... _Vals) { // INVOKE, "implicitly" converted to void

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1589 :         _STD invoke(_STD forward<_Valtys>(_Vals)...);

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Vals_1>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@PEAPEAUAVCodecParameters@@@std@@YA$$QEAPEAPEAUAVCodecParameters@@AEAPEAPEAU1@@Z ; std::forward<AVCodecParameters * *>
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv64[rsp], rax
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR <_Vals_0>$[rsp]
  00037	e8 00 00 00 00	 call	 ??$forward@AEAP6AXPEAPEAUAVCodecParameters@@@Z@std@@YAAEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z ; std::forward<void (__cdecl*&)(AVCodecParameters * *)>
  0003c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv64[rsp]
  00041	48 8b d1	 mov	 rdx, rcx
  00044	48 8b c8	 mov	 rcx, rax
  00047	e8 00 00 00 00	 call	 ??$invoke@AEAP6AXPEAPEAUAVCodecParameters@@@ZPEAPEAU1@@std@@YAXAEAP6AXPEAPEAUAVCodecParameters@@@Z$$QEAPEAPEAU1@@Z ; std::invoke<void (__cdecl*&)(AVCodecParameters * *),AVCodecParameters * *>

; 1590 :     }

  0004c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00050	5f		 pop	 rdi
  00051	c3		 ret	 0
??$_Call@AEAP6AXPEAPEAUAVCodecParameters@@@ZPEAPEAU1@@?$_Invoker_ret@X$00@std@@SAXAEAP6AXPEAPEAUAVCodecParameters@@@Z$$QEAPEAPEAU2@@Z ENDP ; std::_Invoker_ret<void,1>::_Call<void (__cdecl*&)(AVCodecParameters * *),AVCodecParameters * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@Q6AXPEAPEAUAVCodecParameters@@@Z@std@@YAPEBQ6AXPEAPEAUAVCodecParameters@@@ZAEBQ6AX0@Z@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@Q6AXPEAPEAUAVCodecParameters@@@Z@std@@YAPEBQ6AXPEAPEAUAVCodecParameters@@@ZAEBQ6AX0@Z@Z PROC ; std::addressof<void (__cdecl*const)(AVCodecParameters * *)>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@Q6AXPEAPEAUAVCodecParameters@@@Z@std@@YAPEBQ6AXPEAPEAUAVCodecParameters@@@ZAEBQ6AX0@Z@Z ENDP ; std::addressof<void (__cdecl*const)(AVCodecParameters * *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$?0AEBQ6AXPEAPEAUAVBSFContext@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@QEAA@AEBQ6AXPEAPEAUAVBSFContext@@@Z@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
??$?0AEBQ6AXPEAPEAUAVBSFContext@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@QEAA@AEBQ6AXPEAPEAUAVBSFContext@@@Z@Z PROC ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *><void (__cdecl*const &)(AVBSFContext * *),void>, COMDAT

; 936  :     explicit _Func_impl_no_alloc(_Other&& _Val) : _Callee(_STD forward<_Other>(_Val)) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ??0?$_Func_base@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ ; std::_Func_base<void,AVBSFContext * *>::_Func_base<void,AVBSFContext * *>
  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@6B@
  00039	48 89 08	 mov	 QWORD PTR [rax], rcx
  0003c	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val$[rsp]
  00041	e8 00 00 00 00	 call	 ??$forward@AEBQ6AXPEAPEAUAVBSFContext@@@Z@std@@YAAEBQ6AXPEAPEAUAVBSFContext@@@ZAEBQ6AX0@Z@Z ; std::forward<void (__cdecl*const &)(AVBSFContext * *)>
  00046	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004e	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00052	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00057	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005b	5f		 pop	 rdi
  0005c	c3		 ret	 0
??$?0AEBQ6AXPEAPEAUAVBSFContext@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@QEAA@AEBQ6AXPEAPEAUAVBSFContext@@@Z@Z ENDP ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *><void (__cdecl*const &)(AVBSFContext * *),void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$_Call@AEAP6AXPEAPEAUAVBSFContext@@@ZPEAPEAU1@@?$_Invoker_ret@X$00@std@@SAXAEAP6AXPEAPEAUAVBSFContext@@@Z$$QEAPEAPEAU2@@Z
_TEXT	SEGMENT
tv64 = 32
<_Vals_0>$ = 64
<_Vals_1>$ = 72
??$_Call@AEAP6AXPEAPEAUAVBSFContext@@@ZPEAPEAU1@@?$_Invoker_ret@X$00@std@@SAXAEAP6AXPEAPEAUAVBSFContext@@@Z$$QEAPEAPEAU2@@Z PROC ; std::_Invoker_ret<void,1>::_Call<void (__cdecl*&)(AVBSFContext * *),AVBSFContext * *>, COMDAT

; 1588 :     static void _Call(_Valtys&&... _Vals) { // INVOKE, "implicitly" converted to void

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1589 :         _STD invoke(_STD forward<_Valtys>(_Vals)...);

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Vals_1>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@PEAPEAUAVBSFContext@@@std@@YA$$QEAPEAPEAUAVBSFContext@@AEAPEAPEAU1@@Z ; std::forward<AVBSFContext * *>
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv64[rsp], rax
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR <_Vals_0>$[rsp]
  00037	e8 00 00 00 00	 call	 ??$forward@AEAP6AXPEAPEAUAVBSFContext@@@Z@std@@YAAEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z ; std::forward<void (__cdecl*&)(AVBSFContext * *)>
  0003c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv64[rsp]
  00041	48 8b d1	 mov	 rdx, rcx
  00044	48 8b c8	 mov	 rcx, rax
  00047	e8 00 00 00 00	 call	 ??$invoke@AEAP6AXPEAPEAUAVBSFContext@@@ZPEAPEAU1@@std@@YAXAEAP6AXPEAPEAUAVBSFContext@@@Z$$QEAPEAPEAU1@@Z ; std::invoke<void (__cdecl*&)(AVBSFContext * *),AVBSFContext * *>

; 1590 :     }

  0004c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00050	5f		 pop	 rdi
  00051	c3		 ret	 0
??$_Call@AEAP6AXPEAPEAUAVBSFContext@@@ZPEAPEAU1@@?$_Invoker_ret@X$00@std@@SAXAEAP6AXPEAPEAUAVBSFContext@@@Z$$QEAPEAPEAU2@@Z ENDP ; std::_Invoker_ret<void,1>::_Call<void (__cdecl*&)(AVBSFContext * *),AVBSFContext * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@Q6AXPEAPEAUAVBSFContext@@@Z@std@@YAPEBQ6AXPEAPEAUAVBSFContext@@@ZAEBQ6AX0@Z@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@Q6AXPEAPEAUAVBSFContext@@@Z@std@@YAPEBQ6AXPEAPEAUAVBSFContext@@@ZAEBQ6AX0@Z@Z PROC ; std::addressof<void (__cdecl*const)(AVBSFContext * *)>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@Q6AXPEAPEAUAVBSFContext@@@Z@std@@YAPEBQ6AXPEAPEAUAVBSFContext@@@ZAEBQ6AX0@Z@Z ENDP ; std::addressof<void (__cdecl*const)(AVBSFContext * *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Bytes$ = 56
??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 183  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 184  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 185  : #if defined(_M_IX86) || defined(_M_X64)
; 186  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00023	48 81 7c 24 38
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  0002c	72 10		 jb	 SHORT $LN2@Deallocate

; 187  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  0002e	48 8d 54 24 38	 lea	 rdx, QWORD PTR _Bytes$[rsp]
  00033	48 8d 4c 24 30	 lea	 rcx, QWORD PTR _Ptr$[rsp]
  00038	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
  0003d	90		 npad	 1
$LN2@Deallocate:

; 188  :     }
; 189  : #endif // defined(_M_IX86) || defined(_M_X64)
; 190  : 
; 191  :     ::operator delete(_Ptr, _Bytes);

  0003e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Bytes$[rsp]
  00043	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00048	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0004d	90		 npad	 1

; 192  : }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Copy_memmove@PEAUnal_info@@PEAU1@@std@@YAPEAUnal_info@@PEAU1@00@Z
_TEXT	SEGMENT
_First_ch$ = 32
_Last_ch$ = 40
_Dest_ch$ = 48
_Count$ = 56
_First$ = 80
_Last$ = 88
_Dest$ = 96
??$_Copy_memmove@PEAUnal_info@@PEAU1@@std@@YAPEAUnal_info@@PEAU1@00@Z PROC ; std::_Copy_memmove<nal_info *,nal_info *>, COMDAT

; 1739 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) { // implement copy-like function as memmove

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1740 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));

  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR _First$[rsp]
  0002d	48 89 44 24 20	 mov	 QWORD PTR _First_ch$[rsp], rax

; 1741 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));

  00032	48 8b 44 24 58	 mov	 rax, QWORD PTR _Last$[rsp]
  00037	48 89 44 24 28	 mov	 QWORD PTR _Last_ch$[rsp], rax

; 1742 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));

  0003c	48 8b 44 24 60	 mov	 rax, QWORD PTR _Dest$[rsp]
  00041	48 89 44 24 30	 mov	 QWORD PTR _Dest_ch$[rsp], rax

; 1743 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00046	48 8b 44 24 20	 mov	 rax, QWORD PTR _First_ch$[rsp]
  0004b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Last_ch$[rsp]
  00050	48 2b c8	 sub	 rcx, rax
  00053	48 8b c1	 mov	 rax, rcx
  00056	48 89 44 24 38	 mov	 QWORD PTR _Count$[rsp], rax

; 1744 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  0005b	4c 8b 44 24 38	 mov	 r8, QWORD PTR _Count$[rsp]
  00060	48 8b 54 24 20	 mov	 rdx, QWORD PTR _First_ch$[rsp]
  00065	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Dest_ch$[rsp]
  0006a	e8 00 00 00 00	 call	 memmove

; 1745 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0006f	48 8b 44 24 38	 mov	 rax, QWORD PTR _Count$[rsp]
  00074	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Dest_ch$[rsp]
  00079	48 03 c8	 add	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx

; 1746 : }

  0007f	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
??$_Copy_memmove@PEAUnal_info@@PEAU1@@std@@YAPEAUnal_info@@PEAU1@00@Z ENDP ; std::_Copy_memmove<nal_info *,nal_info *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@Unal_info@@@std@@YAPEAUnal_info@@QEAU1@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Get_unwrapped@Unal_info@@@std@@YAPEAUnal_info@@QEAU1@@Z PROC ; std::_Get_unwrapped<nal_info>, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 276  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 277  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Get_unwrapped@Unal_info@@@std@@YAPEAUnal_info@@QEAU1@@Z ENDP ; std::_Get_unwrapped<nal_info>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Refancy@PEAE$0A@@std@@YAPEAEPEAE@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Refancy@PEAE$0A@@std@@YAPEAEPEAE@Z PROC		; std::_Refancy<unsigned char *,0>, COMDAT

; 315  : _Pointer _Refancy(_Pointer _Ptr) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 316  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 317  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Refancy@PEAE$0A@@std@@YAPEAEPEAE@Z ENDP		; std::_Refancy<unsigned char *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Copy_memmove@PEAEPEAE@std@@YAPEAEPEAE00@Z
_TEXT	SEGMENT
_First_ch$ = 32
_Last_ch$ = 40
_Dest_ch$ = 48
_Count$ = 56
_First$ = 80
_Last$ = 88
_Dest$ = 96
??$_Copy_memmove@PEAEPEAE@std@@YAPEAEPEAE00@Z PROC	; std::_Copy_memmove<unsigned char *,unsigned char *>, COMDAT

; 1739 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) { // implement copy-like function as memmove

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1740 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));

  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR _First$[rsp]
  0002d	48 89 44 24 20	 mov	 QWORD PTR _First_ch$[rsp], rax

; 1741 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));

  00032	48 8b 44 24 58	 mov	 rax, QWORD PTR _Last$[rsp]
  00037	48 89 44 24 28	 mov	 QWORD PTR _Last_ch$[rsp], rax

; 1742 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));

  0003c	48 8b 44 24 60	 mov	 rax, QWORD PTR _Dest$[rsp]
  00041	48 89 44 24 30	 mov	 QWORD PTR _Dest_ch$[rsp], rax

; 1743 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00046	48 8b 44 24 20	 mov	 rax, QWORD PTR _First_ch$[rsp]
  0004b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Last_ch$[rsp]
  00050	48 2b c8	 sub	 rcx, rax
  00053	48 8b c1	 mov	 rax, rcx
  00056	48 89 44 24 38	 mov	 QWORD PTR _Count$[rsp], rax

; 1744 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  0005b	4c 8b 44 24 38	 mov	 r8, QWORD PTR _Count$[rsp]
  00060	48 8b 54 24 20	 mov	 rdx, QWORD PTR _First_ch$[rsp]
  00065	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Dest_ch$[rsp]
  0006a	e8 00 00 00 00	 call	 memmove

; 1745 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0006f	48 8b 44 24 38	 mov	 rax, QWORD PTR _Count$[rsp]
  00074	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Dest_ch$[rsp]
  00079	48 03 c8	 add	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx

; 1746 : }

  0007f	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
??$_Copy_memmove@PEAEPEAE@std@@YAPEAEPEAE00@Z ENDP	; std::_Copy_memmove<unsigned char *,unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@E@std@@YAPEAEPEAE@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@E@std@@YAPEAEPEAE@Z PROC			; std::_Unfancy<unsigned char>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@E@std@@YAPEAEPEAE@Z ENDP			; std::_Unfancy<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$distance@PEAE@std@@YA_JPEAE0@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
??$distance@PEAE@std@@YA_JPEAE0@Z PROC			; std::distance<unsigned char *>, COMDAT

; 781  : _NODISCARD _CONSTEXPR17 _Iter_diff_t<_InIt> distance(_InIt _First, _InIt _Last) { // return distance between iterators

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 782  :     if constexpr (_Is_random_iter_v<_InIt>) {
; 783  :         return _Last - _First; // assume the iterator will do debug checking

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR _First$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Last$[rsp]
  00015	48 2b c8	 sub	 rcx, rax
  00018	48 8b c1	 mov	 rax, rcx

; 784  :     } else {
; 785  :         _Adl_verify_range(_First, _Last);
; 786  :         auto _UFirst             = _Get_unwrapped(_First);
; 787  :         const auto _ULast        = _Get_unwrapped(_Last);
; 788  :         _Iter_diff_t<_InIt> _Off = 0;
; 789  :         for (; _UFirst != _ULast; ++_UFirst) {
; 790  :             ++_Off;
; 791  :         }
; 792  : 
; 793  :         return _Off;
; 794  :     }
; 795  : }

  0001b	5f		 pop	 rdi
  0001c	c3		 ret	 0
??$distance@PEAE@std@@YA_JPEAE0@Z ENDP			; std::distance<unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Verify_range@E@std@@YAXQEBE0@Z
_TEXT	SEGMENT
_First$ = 64
_Last$ = 72
??$_Verify_range@E@std@@YAXQEBE0@Z PROC			; std::_Verify_range<unsigned char>, COMDAT

; 191  :     const _Ty* const _First, const _Ty* const _Last) noexcept { // special case range verification for pointers

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN4@Verify_ran:

; 192  :     _STL_VERIFY(_First <= _Last, "transposed pointer range");

  00023	48 8b 44 24 48	 mov	 rax, QWORD PTR _Last$[rsp]
  00028	48 39 44 24 40	 cmp	 QWORD PTR _First$[rsp], rax
  0002d	77 02		 ja	 SHORT $LN7@Verify_ran
  0002f	eb 6d		 jmp	 SHORT $LN9@Verify_ran
$LN7@Verify_ran:
  00031	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@
  00038	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0003d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00044	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00049	45 33 c9	 xor	 r9d, r9d
  0004c	41 b8 c0 00 00
	00		 mov	 r8d, 192		; 000000c0H
  00052	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00059	b9 02 00 00 00	 mov	 ecx, 2
  0005e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00064	90		 npad	 1
  00065	83 f8 01	 cmp	 eax, 1
  00068	75 03		 jne	 SHORT $LN11@Verify_ran
  0006a	cc		 int	 3
  0006b	33 c0		 xor	 eax, eax
$LN11@Verify_ran:
  0006d	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00076	41 b9 c0 00 00
	00		 mov	 r9d, 192		; 000000c0H
  0007c	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00083	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
  0008a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@
  00091	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00097	90		 npad	 1
  00098	33 c0		 xor	 eax, eax
  0009a	85 c0		 test	 eax, eax
  0009c	75 93		 jne	 SHORT $LN7@Verify_ran
$LN9@Verify_ran:
  0009e	33 c0		 xor	 eax, eax
  000a0	85 c0		 test	 eax, eax
  000a2	0f 85 7b ff ff
	ff		 jne	 $LN4@Verify_ran

; 193  : }

  000a8	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000ac	5f		 pop	 rdi
  000ad	c3		 ret	 0
??$_Verify_range@E@std@@YAXQEBE0@Z ENDP			; std::_Verify_range<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 751  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 752  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 753  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00028	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 754  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAPEAUAVBSFContext@@@std@@YAAEAPEAUAVBSFContext@@AEAPEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAPEAUAVBSFContext@@@std@@YAAEAPEAUAVBSFContext@@AEAPEAU1@@Z PROC ; std::forward<AVBSFContext * &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAPEAUAVBSFContext@@@std@@YAAEAPEAUAVBSFContext@@AEAPEAU1@@Z ENDP ; std::forward<AVBSFContext * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@QEAA@$$QEAP6AXPEAPEAUAVBSFContext@@@Z@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
??$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@QEAA@$$QEAP6AXPEAPEAUAVBSFContext@@@Z@Z PROC ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *><void (__cdecl*)(AVBSFContext * *),void>, COMDAT

; 936  :     explicit _Func_impl_no_alloc(_Other&& _Val) : _Callee(_STD forward<_Other>(_Val)) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ??0?$_Func_base@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ ; std::_Func_base<void,AVBSFContext * *>::_Func_base<void,AVBSFContext * *>
  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@6B@
  00039	48 89 08	 mov	 QWORD PTR [rax], rcx
  0003c	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val$[rsp]
  00041	e8 00 00 00 00	 call	 ??$forward@P6AXPEAPEAUAVBSFContext@@@Z@std@@YA$$QEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z ; std::forward<void (__cdecl*)(AVBSFContext * *)>
  00046	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004e	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00052	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00057	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005b	5f		 pop	 rdi
  0005c	c3		 ret	 0
??$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@QEAA@$$QEAP6AXPEAPEAUAVBSFContext@@@Z@Z ENDP ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *><void (__cdecl*)(AVBSFContext * *),void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@P6AXPEAPEAUAVBSFContext@@@Z@std@@YA$$QEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@P6AXPEAPEAUAVBSFContext@@@Z@std@@YA$$QEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z PROC ; std::forward<void (__cdecl*)(AVBSFContext * *)>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@P6AXPEAPEAUAVBSFContext@@@Z@std@@YA$$QEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z ENDP ; std::forward<void (__cdecl*)(AVBSFContext * *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Delete_this@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAX_N@Z
_TEXT	SEGMENT
this$ = 48
_Dealloc$ = 56
?_Delete_this@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAX_N@Z PROC ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Delete_this, COMDAT

; 979  :     virtual void _Delete_this(bool _Dealloc) noexcept override { // destroy self

$LN4:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 980  :         this->~_Func_impl_no_alloc();
; 981  :         if (_Dealloc) {

  00022	0f b6 44 24 38	 movzx	 eax, BYTE PTR _Dealloc$[rsp]
  00027	85 c0		 test	 eax, eax
  00029	74 0f		 je	 SHORT $LN2@Delete_thi

; 982  :             _Deallocate<alignof(_Func_impl_no_alloc)>(this, sizeof(_Func_impl_no_alloc));

  0002b	ba 10 00 00 00	 mov	 edx, 16
  00030	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00035	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<8,0>
$LN2@Delete_thi:

; 983  :         }
; 984  :     }

  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?_Delete_this@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAX_N@Z ENDP ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Get@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEBAPEBXXZ
_TEXT	SEGMENT
this$ = 48
?_Get@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEBAPEBXXZ PROC ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Get, COMDAT

; 975  :     virtual const void* _Get() const noexcept override { // return address of stored object

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 976  :         return _STD addressof(_Callee);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??$addressof@Q6AXPEAPEAUAVBSFContext@@@Z@std@@YAPEBQ6AXPEAPEAUAVBSFContext@@@ZAEBQ6AX0@Z@Z ; std::addressof<void (__cdecl*const)(AVBSFContext * *)>

; 977  :     }

  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
?_Get@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEBAPEBXXZ ENDP ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Target_type@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEBAAEBVtype_info@@XZ
_TEXT	SEGMENT
this$ = 16
?_Target_type@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEBAAEBVtype_info@@XZ PROC ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Target_type, COMDAT

; 967  :     virtual const type_info& _Target_type() const noexcept override { // return type information for stored object

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 968  : #if _HAS_STATIC_RTTI
; 969  :         return typeid(_Callable);

  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_R0P6AXPEAPEAUAVBSFContext@@@Z@8

; 970  : #else // _HAS_STATIC_RTTI
; 971  :         return typeid(void);
; 972  : #endif // _HAS_STATIC_RTTI
; 973  :     }

  0000d	5f		 pop	 rdi
  0000e	c3		 ret	 0
?_Target_type@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEBAAEBVtype_info@@XZ ENDP ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Target_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Do_call@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAX$$QEAPEAPEAUAVBSFContext@@@Z
_TEXT	SEGMENT
this$ = 48
<_Args_0>$ = 56
?_Do_call@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAX$$QEAPEAPEAUAVBSFContext@@@Z PROC ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Do_call, COMDAT

; 963  :     virtual _Rx _Do_call(_Types&&... _Args) override { // call wrapped function

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 964  :         return _Invoker_ret<_Rx>::_Call(_Callee, _STD forward<_Types>(_Args)...);

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@PEAPEAUAVBSFContext@@@std@@YA$$QEAPEAPEAUAVBSFContext@@AEAPEAPEAU1@@Z ; std::forward<AVBSFContext * *>
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	48 83 c1 08	 add	 rcx, 8
  00036	48 8b d0	 mov	 rdx, rax
  00039	e8 00 00 00 00	 call	 ??$_Call@AEAP6AXPEAPEAUAVBSFContext@@@ZPEAPEAU1@@?$_Invoker_ret@X$00@std@@SAXAEAP6AXPEAPEAUAVBSFContext@@@Z$$QEAPEAPEAU2@@Z ; std::_Invoker_ret<void,1>::_Call<void (__cdecl*&)(AVBSFContext * *),AVBSFContext * *>

; 965  :     }

  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?_Do_call@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAX$$QEAPEAPEAUAVBSFContext@@@Z ENDP ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Do_call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Move@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@PEAX@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Where$ = 72
?_Move@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@PEAX@Z PROC ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Move, COMDAT

; 952  :     virtual _Mybase* _Move(void* _Where) noexcept override {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 953  :         if
; 954  :             _CONSTEXPR_IF(_Is_large<_Func_impl_no_alloc>) {
; 955  :                 (void) _Where;
; 956  :                 return nullptr;
; 957  :             }
; 958  :         else {
; 959  :             return ::new (_Where) _Func_impl_no_alloc(_STD move(_Callee));

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Where$[rsp]
  00028	b9 10 00 00 00	 mov	 ecx, 16
  0002d	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00032	90		 npad	 1
  00033	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00038	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 83 c0 08	 add	 rax, 8
  00041	48 8b c8	 mov	 rcx, rax
  00044	e8 00 00 00 00	 call	 ??$move@AEAP6AXPEAPEAUAVBSFContext@@@Z@std@@YA$$QEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z ; std::move<void (__cdecl*&)(AVBSFContext * *)>
  00049	90		 npad	 1
  0004a	48 8b d0	 mov	 rdx, rax
  0004d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00052	e8 00 00 00 00	 call	 ??$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@QEAA@$$QEAP6AXPEAPEAUAVBSFContext@@@Z@Z ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *><void (__cdecl*)(AVBSFContext * *),void>
  00057	90		 npad	 1

; 960  :         }
; 961  :     }

  00058	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
?_Move@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEAAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@PEAX@Z ENDP ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Copy@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEBAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@PEAX@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Where$ = 72
?_Copy@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEBAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@PEAX@Z PROC ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Copy, COMDAT

; 941  :     virtual _Mybase* _Copy(void* _Where) const override { // return clone of *this

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 942  :         if
; 943  :             _CONSTEXPR_IF(_Is_large<_Func_impl_no_alloc>) {
; 944  :                 (void) _Where;
; 945  :                 return _Global_new<_Func_impl_no_alloc>(_Callee);
; 946  :             }
; 947  :         else {
; 948  :             return ::new (_Where) _Func_impl_no_alloc(_Callee);

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Where$[rsp]
  00028	b9 10 00 00 00	 mov	 ecx, 16
  0002d	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00032	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00037	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003c	48 83 c0 08	 add	 rax, 8
  00040	48 8b d0	 mov	 rdx, rax
  00043	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00048	e8 00 00 00 00	 call	 ??$?0AEBQ6AXPEAPEAUAVBSFContext@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@QEAA@AEBQ6AXPEAPEAUAVBSFContext@@@Z@Z ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *><void (__cdecl*const &)(AVBSFContext * *),void>

; 949  :         }
; 950  :     }

  0004d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00051	5f		 pop	 rdi
  00052	c3		 ret	 0
?_Copy@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@EEBAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@PEAX@Z ENDP ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$_Test_callable@P6AXPEAPEAUAVBSFContext@@@Z@std@@YA_NAEBQ6AXPEAPEAUAVBSFContext@@@Z@Z
_TEXT	SEGMENT
tv65 = 0
_Arg$ = 32
??$_Test_callable@P6AXPEAPEAUAVBSFContext@@@Z@std@@YA_NAEBQ6AXPEAPEAUAVBSFContext@@@Z@Z PROC ; std::_Test_callable<void (__cdecl*)(AVBSFContext * *)>, COMDAT

; 787  : bool _Test_callable(const _Ty& _Arg) noexcept { // determine whether std::function must store _Arg

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 788  :     if constexpr (_Testable_callable_v<_Ty>) {
; 789  :         return !!_Arg;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR _Arg$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 09		 je	 SHORT $LN3@Test_calla
  00029	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv65[rsp], 1
  00030	eb 07		 jmp	 SHORT $LN4@Test_calla
$LN3@Test_calla:
  00032	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv65[rsp], 0
$LN4@Test_calla:
  00039	0f b6 04 24	 movzx	 eax, BYTE PTR tv65[rsp]

; 790  :     } else {
; 791  :         (void) _Arg;
; 792  :         return true;
; 793  :     }
; 794  : }

  0003d	48 83 c4 10	 add	 rsp, 16
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
??$_Test_callable@P6AXPEAPEAUAVBSFContext@@@Z@std@@YA_NAEBQ6AXPEAPEAUAVBSFContext@@@Z@Z ENDP ; std::_Test_callable<void (__cdecl*)(AVBSFContext * *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAPEAUAVCodecParameters@@@std@@YAAEAPEAUAVCodecParameters@@AEAPEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAPEAUAVCodecParameters@@@std@@YAAEAPEAUAVCodecParameters@@AEAPEAU1@@Z PROC ; std::forward<AVCodecParameters * &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAPEAUAVCodecParameters@@@std@@YAAEAPEAUAVCodecParameters@@AEAPEAU1@@Z ENDP ; std::forward<AVCodecParameters * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAU1@@Z PROC ; std::forward<RGYAVDeleter<AVCodecParameters> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAU1@@Z ENDP ; std::forward<RGYAVDeleter<AVCodecParameters> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@QEAA@$$QEAP6AXPEAPEAUAVCodecParameters@@@Z@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
??$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@QEAA@$$QEAP6AXPEAPEAUAVCodecParameters@@@Z@Z PROC ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *><void (__cdecl*)(AVCodecParameters * *),void>, COMDAT

; 936  :     explicit _Func_impl_no_alloc(_Other&& _Val) : _Callee(_STD forward<_Other>(_Val)) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ??0?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ ; std::_Func_base<void,AVCodecParameters * *>::_Func_base<void,AVCodecParameters * *>
  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@6B@
  00039	48 89 08	 mov	 QWORD PTR [rax], rcx
  0003c	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val$[rsp]
  00041	e8 00 00 00 00	 call	 ??$forward@P6AXPEAPEAUAVCodecParameters@@@Z@std@@YA$$QEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z ; std::forward<void (__cdecl*)(AVCodecParameters * *)>
  00046	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004e	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00052	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00057	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005b	5f		 pop	 rdi
  0005c	c3		 ret	 0
??$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@QEAA@$$QEAP6AXPEAPEAUAVCodecParameters@@@Z@Z ENDP ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *><void (__cdecl*)(AVCodecParameters * *),void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@P6AXPEAPEAUAVCodecParameters@@@Z@std@@YA$$QEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@P6AXPEAPEAUAVCodecParameters@@@Z@std@@YA$$QEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z PROC ; std::forward<void (__cdecl*)(AVCodecParameters * *)>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@P6AXPEAPEAUAVCodecParameters@@@Z@std@@YA$$QEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z ENDP ; std::forward<void (__cdecl*)(AVCodecParameters * *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Delete_this@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAX_N@Z
_TEXT	SEGMENT
this$ = 48
_Dealloc$ = 56
?_Delete_this@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAX_N@Z PROC ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Delete_this, COMDAT

; 979  :     virtual void _Delete_this(bool _Dealloc) noexcept override { // destroy self

$LN4:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 980  :         this->~_Func_impl_no_alloc();
; 981  :         if (_Dealloc) {

  00022	0f b6 44 24 38	 movzx	 eax, BYTE PTR _Dealloc$[rsp]
  00027	85 c0		 test	 eax, eax
  00029	74 0f		 je	 SHORT $LN2@Delete_thi

; 982  :             _Deallocate<alignof(_Func_impl_no_alloc)>(this, sizeof(_Func_impl_no_alloc));

  0002b	ba 10 00 00 00	 mov	 edx, 16
  00030	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00035	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<8,0>
$LN2@Delete_thi:

; 983  :         }
; 984  :     }

  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?_Delete_this@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAX_N@Z ENDP ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Get@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEBAPEBXXZ
_TEXT	SEGMENT
this$ = 48
?_Get@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEBAPEBXXZ PROC ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Get, COMDAT

; 975  :     virtual const void* _Get() const noexcept override { // return address of stored object

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 976  :         return _STD addressof(_Callee);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??$addressof@Q6AXPEAPEAUAVCodecParameters@@@Z@std@@YAPEBQ6AXPEAPEAUAVCodecParameters@@@ZAEBQ6AX0@Z@Z ; std::addressof<void (__cdecl*const)(AVCodecParameters * *)>

; 977  :     }

  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
?_Get@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEBAPEBXXZ ENDP ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Target_type@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEBAAEBVtype_info@@XZ
_TEXT	SEGMENT
this$ = 16
?_Target_type@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEBAAEBVtype_info@@XZ PROC ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Target_type, COMDAT

; 967  :     virtual const type_info& _Target_type() const noexcept override { // return type information for stored object

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 968  : #if _HAS_STATIC_RTTI
; 969  :         return typeid(_Callable);

  00006	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_R0P6AXPEAPEAUAVCodecParameters@@@Z@8

; 970  : #else // _HAS_STATIC_RTTI
; 971  :         return typeid(void);
; 972  : #endif // _HAS_STATIC_RTTI
; 973  :     }

  0000d	5f		 pop	 rdi
  0000e	c3		 ret	 0
?_Target_type@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEBAAEBVtype_info@@XZ ENDP ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Target_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Do_call@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAX$$QEAPEAPEAUAVCodecParameters@@@Z
_TEXT	SEGMENT
this$ = 48
<_Args_0>$ = 56
?_Do_call@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAX$$QEAPEAPEAUAVCodecParameters@@@Z PROC ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Do_call, COMDAT

; 963  :     virtual _Rx _Do_call(_Types&&... _Args) override { // call wrapped function

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 964  :         return _Invoker_ret<_Rx>::_Call(_Callee, _STD forward<_Types>(_Args)...);

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@PEAPEAUAVCodecParameters@@@std@@YA$$QEAPEAPEAUAVCodecParameters@@AEAPEAPEAU1@@Z ; std::forward<AVCodecParameters * *>
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	48 83 c1 08	 add	 rcx, 8
  00036	48 8b d0	 mov	 rdx, rax
  00039	e8 00 00 00 00	 call	 ??$_Call@AEAP6AXPEAPEAUAVCodecParameters@@@ZPEAPEAU1@@?$_Invoker_ret@X$00@std@@SAXAEAP6AXPEAPEAUAVCodecParameters@@@Z$$QEAPEAPEAU2@@Z ; std::_Invoker_ret<void,1>::_Call<void (__cdecl*&)(AVCodecParameters * *),AVCodecParameters * *>

; 965  :     }

  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?_Do_call@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAX$$QEAPEAPEAUAVCodecParameters@@@Z ENDP ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Do_call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Move@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@PEAX@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Where$ = 72
?_Move@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@PEAX@Z PROC ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Move, COMDAT

; 952  :     virtual _Mybase* _Move(void* _Where) noexcept override {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 953  :         if
; 954  :             _CONSTEXPR_IF(_Is_large<_Func_impl_no_alloc>) {
; 955  :                 (void) _Where;
; 956  :                 return nullptr;
; 957  :             }
; 958  :         else {
; 959  :             return ::new (_Where) _Func_impl_no_alloc(_STD move(_Callee));

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Where$[rsp]
  00028	b9 10 00 00 00	 mov	 ecx, 16
  0002d	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00032	90		 npad	 1
  00033	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00038	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 83 c0 08	 add	 rax, 8
  00041	48 8b c8	 mov	 rcx, rax
  00044	e8 00 00 00 00	 call	 ??$move@AEAP6AXPEAPEAUAVCodecParameters@@@Z@std@@YA$$QEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z ; std::move<void (__cdecl*&)(AVCodecParameters * *)>
  00049	90		 npad	 1
  0004a	48 8b d0	 mov	 rdx, rax
  0004d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00052	e8 00 00 00 00	 call	 ??$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@QEAA@$$QEAP6AXPEAPEAUAVCodecParameters@@@Z@Z ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *><void (__cdecl*)(AVCodecParameters * *),void>
  00057	90		 npad	 1

; 960  :         }
; 961  :     }

  00058	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
?_Move@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEAAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@PEAX@Z ENDP ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Copy@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEBAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@PEAX@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Where$ = 72
?_Copy@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEBAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@PEAX@Z PROC ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Copy, COMDAT

; 941  :     virtual _Mybase* _Copy(void* _Where) const override { // return clone of *this

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 942  :         if
; 943  :             _CONSTEXPR_IF(_Is_large<_Func_impl_no_alloc>) {
; 944  :                 (void) _Where;
; 945  :                 return _Global_new<_Func_impl_no_alloc>(_Callee);
; 946  :             }
; 947  :         else {
; 948  :             return ::new (_Where) _Func_impl_no_alloc(_Callee);

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Where$[rsp]
  00028	b9 10 00 00 00	 mov	 ecx, 16
  0002d	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00032	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00037	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003c	48 83 c0 08	 add	 rax, 8
  00040	48 8b d0	 mov	 rdx, rax
  00043	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00048	e8 00 00 00 00	 call	 ??$?0AEBQ6AXPEAPEAUAVCodecParameters@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@QEAA@AEBQ6AXPEAPEAUAVCodecParameters@@@Z@Z ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *><void (__cdecl*const &)(AVCodecParameters * *),void>

; 949  :         }
; 950  :     }

  0004d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00051	5f		 pop	 rdi
  00052	c3		 ret	 0
?_Copy@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@EEBAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@PEAX@Z ENDP ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$_Test_callable@P6AXPEAPEAUAVCodecParameters@@@Z@std@@YA_NAEBQ6AXPEAPEAUAVCodecParameters@@@Z@Z
_TEXT	SEGMENT
tv65 = 0
_Arg$ = 32
??$_Test_callable@P6AXPEAPEAUAVCodecParameters@@@Z@std@@YA_NAEBQ6AXPEAPEAUAVCodecParameters@@@Z@Z PROC ; std::_Test_callable<void (__cdecl*)(AVCodecParameters * *)>, COMDAT

; 787  : bool _Test_callable(const _Ty& _Arg) noexcept { // determine whether std::function must store _Arg

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 788  :     if constexpr (_Testable_callable_v<_Ty>) {
; 789  :         return !!_Arg;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR _Arg$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 09		 je	 SHORT $LN3@Test_calla
  00029	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv65[rsp], 1
  00030	eb 07		 jmp	 SHORT $LN4@Test_calla
$LN3@Test_calla:
  00032	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv65[rsp], 0
$LN4@Test_calla:
  00039	0f b6 04 24	 movzx	 eax, BYTE PTR tv65[rsp]

; 790  :     } else {
; 791  :         (void) _Arg;
; 792  :         return true;
; 793  :     }
; 794  : }

  0003d	48 83 c4 10	 add	 rsp, 16
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
??$_Test_callable@P6AXPEAPEAUAVCodecParameters@@@Z@std@@YA_NAEBQ6AXPEAPEAUAVCodecParameters@@@Z@Z ENDP ; std::_Test_callable<void (__cdecl*)(AVCodecParameters * *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Old_size$ = 40
_New_size$ = 48
_Old_capacity$ = 56
_New_capacity$ = 64
_Al$ = 72
_New_ptr$ = 88
_Raw_new$ = 104
_Old_ptr$4 = 112
this$ = 144
_Size_increase$ = 152
_Fn$ = 160
??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >, COMDAT

; 4108 :     basic_string& _Reallocate_grow_by(const size_type _Size_increase, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 4109 :         // reallocate to increase size by _Size_increase elements, new buffer prepared by
; 4110 :         // _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 4111 :         auto& _My_data            = _Mypair._Myval2;

  0002e	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 4112 :         const size_type _Old_size = _My_data._Mysize;

  0003b	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00040	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00044	48 89 44 24 28	 mov	 QWORD PTR _Old_size$[rsp], rax

; 4113 :         if (max_size() - _Old_size < _Size_increase) {

  00049	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00051	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00056	48 2b 44 24 28	 sub	 rax, QWORD PTR _Old_size$[rsp]
  0005b	48 3b 84 24 98
	00 00 00	 cmp	 rax, QWORD PTR _Size_increase$[rsp]
  00063	73 05		 jae	 SHORT $LN2@Reallocate

; 4114 :             _Xlen(); // result too long

  00065	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4115 :         }
; 4116 : 
; 4117 :         const size_type _New_size     = _Old_size + _Size_increase;

  0006a	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR _Size_increase$[rsp]
  00072	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00077	48 03 c8	 add	 rcx, rax
  0007a	48 8b c1	 mov	 rax, rcx
  0007d	48 89 44 24 30	 mov	 QWORD PTR _New_size$[rsp], rax

; 4118 :         const size_type _Old_capacity = _My_data._Myres;

  00082	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00087	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0008b	48 89 44 24 38	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4119 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00090	48 8b 54 24 30	 mov	 rdx, QWORD PTR _New_size$[rsp]
  00095	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0009d	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  000a2	48 89 44 24 40	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4120 :         auto& _Al                     = _Getal();

  000a7	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000af	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000b4	48 89 44 24 48	 mov	 QWORD PTR _Al$[rsp], rax

; 4121 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000b9	48 8b 44 24 40	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  000be	48 ff c0	 inc	 rax
  000c1	48 8b d0	 mov	 rdx, rax
  000c4	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al$[rsp]
  000c9	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  000ce	48 89 44 24 58	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4122 :         _My_data._Orphan_all();

  000d3	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000d8	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4123 :         _My_data._Mysize      = _New_size;

  000dd	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  000e2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000e7	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4124 :         _My_data._Myres       = _New_capacity;

  000eb	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  000f0	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000f5	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4125 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

  000f9	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  000fe	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00103	48 89 44 24 68	 mov	 QWORD PTR _Raw_new$[rsp], rax

; 4126 :         if (_BUF_SIZE <= _Old_capacity) {

  00108	48 83 7c 24 38
	10		 cmp	 QWORD PTR _Old_capacity$[rsp], 16
  0010e	72 5c		 jb	 SHORT $LN3@Reallocate

; 4127 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00110	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00115	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00119	48 89 44 24 70	 mov	 QWORD PTR _Old_ptr$4[rsp], rax

; 4128 :             _Fn(_Raw_new, _Unfancy(_Old_ptr), _Old_size, _Args...);

  0011e	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Old_ptr$4[rsp]
  00123	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00128	4c 8b 4c 24 28	 mov	 r9, QWORD PTR _Old_size$[rsp]
  0012d	4c 8b c0	 mov	 r8, rax
  00130	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  00135	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  0013d	e8 00 00 00 00	 call	 ??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z ; <lambda_9013ee9e23efe4882b67eff5b0ecf103>::operator()

; 4129 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  00142	48 8b 44 24 38	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  00147	48 ff c0	 inc	 rax
  0014a	4c 8b c0	 mov	 r8, rax
  0014d	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Old_ptr$4[rsp]
  00152	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al$[rsp]
  00157	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4130 :             _My_data._Bx._Ptr = _New_ptr;

  0015c	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00161	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00166	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4131 :         } else {

  0016a	eb 39		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4132 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);

  0016c	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00171	48 83 c0 08	 add	 rax, 8
  00175	4c 8b 4c 24 28	 mov	 r9, QWORD PTR _Old_size$[rsp]
  0017a	4c 8b c0	 mov	 r8, rax
  0017d	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  00182	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  0018a	e8 00 00 00 00	 call	 ??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z ; <lambda_9013ee9e23efe4882b67eff5b0ecf103>::operator()

; 4133 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  0018f	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00194	48 83 c0 08	 add	 rax, 8
  00198	48 8d 54 24 58	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  0019d	48 8b c8	 mov	 rcx, rax
  001a0	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4134 :         }
; 4135 : 
; 4136 :         return *this;

  001a5	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4137 :     }

  001ad	48 8b f8	 mov	 rdi, rax
  001b0	48 8b cc	 mov	 rcx, rsp
  001b3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z$rtcFrameData
  001ba	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001bf	48 8b c7	 mov	 rax, rdi
  001c2	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  001c9	5f		 pop	 rdi
  001ca	c3		 ret	 0
??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z
_TEXT	SEGMENT
this$ = 48
_New_ptr$ = 56
_Old_ptr$ = 64
_Old_size$ = 72
??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z PROC ; <lambda_9013ee9e23efe4882b67eff5b0ecf103>::operator(), COMDAT

; 3605 :                 _Newcap - _Old_size, [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3606 :                     _Traits::copy(_New_ptr, _Old_ptr, _Old_size + 1);

  0002d	48 8b 44 24 48	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00032	48 ff c0	 inc	 rax
  00035	4c 8b c0	 mov	 r8, rax
  00038	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Old_ptr$[rsp]
  0003d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00042	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 3607 :                 });

  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z ENDP ; <lambda_9013ee9e23efe4882b67eff5b0ecf103>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<24>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 aa aa aa
	aa aa aa aa 0a	 mov	 rax, 768614336404564650	; 0aaaaaaaaaaaaaaaH
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 aa aa aa
	aa aa aa aa 0a	 mov	 rax, 768614336404564650	; 0aaaaaaaaaaaaaaaH
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 6b 44 24 40
	18		 imul	 rax, QWORD PTR _Count$[rsp], 24
$LN3@Get_size_o:

; 36   : }

  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<24>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAUnal_info@@V?$allocator@Unal_info@@@std@@@std@@YAPEAUnal_info@@QEAU1@0PEAU1@AEAV?$allocator@Unal_info@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Al$ = 88
??$_Uninitialized_move@PEAUnal_info@@V?$allocator@Unal_info@@@std@@@std@@YAPEAUnal_info@@QEAU1@0PEAU1@AEAV?$allocator@Unal_info@@@0@@Z PROC ; std::_Uninitialized_move<nal_info *,std::allocator<nal_info> >, COMDAT

; 1729 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1730 :     // move [_First, _Last) to raw _Dest, using _Al
; 1731 :     // note: only called internally from elsewhere in the STL
; 1732 :     using _Ptrval     = typename _Alloc::value_type*;
; 1733 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _First$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Get_unwrapped@Unal_info@@@std@@YAPEAUnal_info@@QEAU1@@Z ; std::_Get_unwrapped<nal_info>
  00037	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax

; 1734 :     const auto _ULast = _Get_unwrapped(_Last);

  0003c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Last$[rsp]
  00041	e8 00 00 00 00	 call	 ??$_Get_unwrapped@Unal_info@@@std@@YAPEAUnal_info@@QEAU1@@Z ; std::_Get_unwrapped<nal_info>
  00046	48 89 44 24 28	 mov	 QWORD PTR _ULast$[rsp], rax

; 1735 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1736 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1737 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  0004b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00050	e8 00 00 00 00	 call	 ??$_Unfancy@Unal_info@@@std@@YAPEAUnal_info@@PEAU1@@Z ; std::_Unfancy<nal_info>
  00055	4c 8b c0	 mov	 r8, rax
  00058	48 8b 54 24 28	 mov	 rdx, QWORD PTR _ULast$[rsp]
  0005d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _UFirst$[rsp]
  00062	e8 00 00 00 00	 call	 ??$_Copy_memmove@PEAUnal_info@@PEAU1@@std@@YAPEAUnal_info@@PEAU1@00@Z ; std::_Copy_memmove<nal_info *,nal_info *>

; 1738 :         return _Dest + (_ULast - _UFirst);

  00067	48 8b 44 24 20	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0006c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _ULast$[rsp]
  00071	48 2b c8	 sub	 rcx, rax
  00074	48 8b c1	 mov	 rax, rcx
  00077	48 99		 cdq
  00079	b9 18 00 00 00	 mov	 ecx, 24
  0007e	48 f7 f9	 idiv	 rcx
  00081	48 6b c0 18	 imul	 rax, rax, 24
  00085	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dest$[rsp]
  0008a	48 03 c8	 add	 rcx, rax
  0008d	48 8b c1	 mov	 rax, rcx

; 1739 :         (void) _Al;
; 1740 :     } else {
; 1741 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1742 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1743 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1744 :         }
; 1745 : 
; 1746 :         return _Backout._Release();
; 1747 :     }
; 1748 : }

  00090	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00094	5f		 pop	 rdi
  00095	c3		 ret	 0
??$_Uninitialized_move@PEAUnal_info@@V?$allocator@Unal_info@@@std@@@std@@YAPEAUnal_info@@QEAU1@0PEAU1@AEAV?$allocator@Unal_info@@@0@@Z ENDP ; std::_Uninitialized_move<nal_info *,std::allocator<nal_info> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z PROC ; std::move<EncodeStatus * &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z ENDP ; std::move<EncodeStatus * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z PROC ; std::move<RGYLog * &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z ENDP ; std::move<RGYLog * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z PROC ; std::move<std::_Ref_count_base * &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ENDP ; std::move<std::_Ref_count_base * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 762  :     static void destroy(_Alloc&, _Uty* const _Ptr) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 763  :         _Ptr->~_Uty();

  00023	33 d2		 xor	 edx, edx
  00025	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0002a	e8 00 00 00 00	 call	 ??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z

; 764  :     }

  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z PROC ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z ENDP ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 48
_Ptr_container$ = 56
_Ptr$ = 64
_Bytes$ = 96
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 83   : _DECLSPEC_ALLOCATOR void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 84   :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 85   :     const size_t _Block_size = _Non_user_size + _Bytes;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00023	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  00027	48 89 44 24 30	 mov	 QWORD PTR _Block_size$[rsp], rax

; 86   :     if (_Block_size <= _Bytes) {

  0002c	48 8b 44 24 60	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00031	48 39 44 24 30	 cmp	 QWORD PTR _Block_size$[rsp], rax
  00036	77 05		 ja	 SHORT $LN8@Allocate_m

; 87   :         _Throw_bad_array_new_length(); // add overflow

  00038	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 88   :     }
; 89   : 
; 90   :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Block_size$[rsp]
  00042	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00047	48 89 44 24 38	 mov	 QWORD PTR _Ptr_container$[rsp], rax
$LN4@Allocate_m:

; 91   :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0004c	48 83 7c 24 38
	00		 cmp	 QWORD PTR _Ptr_container$[rsp], 0
  00052	74 02		 je	 SHORT $LN9@Allocate_m
  00054	eb 6b		 jmp	 SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
  00056	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG149328
  0005d	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00062	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG149329
  00069	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0006e	45 33 c9	 xor	 r9d, r9d
  00071	41 b8 5b 00 00
	00		 mov	 r8d, 91			; 0000005bH
  00077	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG149330
  0007e	b9 02 00 00 00	 mov	 ecx, 2
  00083	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 03		 jne	 SHORT $LN12@Allocate_m
  0008e	cc		 int	 3
  0008f	33 c0		 xor	 eax, eax
$LN12@Allocate_m:
  00091	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0009a	41 b9 5b 00 00
	00		 mov	 r9d, 91			; 0000005bH
  000a0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG149331
  000a7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG149332
  000ae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG149333
  000b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000bb	33 c0		 xor	 eax, eax
  000bd	85 c0		 test	 eax, eax
  000bf	75 95		 jne	 SHORT $LN7@Allocate_m
$LN10@Allocate_m:
  000c1	33 c0		 xor	 eax, eax
  000c3	85 c0		 test	 eax, eax
  000c5	75 85		 jne	 SHORT $LN4@Allocate_m

; 92   :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  000c7	48 8b 44 24 38	 mov	 rax, QWORD PTR _Ptr_container$[rsp]
  000cc	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  000d0	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H
  000d4	48 89 44 24 40	 mov	 QWORD PTR _Ptr$[rsp], rax

; 93   :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  000d9	b8 08 00 00 00	 mov	 eax, 8
  000de	48 6b c0 ff	 imul	 rax, rax, -1
  000e2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000e7	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr_container$[rsp]
  000ec	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 94   : 
; 95   : #ifdef _DEBUG
; 96   :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

  000f0	b8 08 00 00 00	 mov	 eax, 8
  000f5	48 6b c0 fe	 imul	 rax, rax, -2
  000f9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000fe	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  00108	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 97   : #endif // _DEBUG
; 98   :     return _Ptr;

  0010c	48 8b 44 24 40	 mov	 rax, QWORD PTR _Ptr$[rsp]
$LN11@Allocate_m:

; 99   : }

  00111	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00115	5f		 pop	 rdi
  00116	c3		 ret	 0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z PROC		; std::forward<char * const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ENDP		; std::forward<char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z PROC		; std::addressof<char *>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Assign_range@PEAE@?$vector@EV?$allocator@E@std@@@std@@AEAAXPEAE0Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
_Newsize$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Myend$ = 64
_Oldcapacity$1 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
??$_Assign_range@PEAE@?$vector@EV?$allocator@E@std@@@std@@AEAAXPEAE0Uforward_iterator_tag@1@@Z PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::_Assign_range<unsigned char *>, COMDAT

; 1045 :     void _Assign_range(_Iter _First, _Iter _Last, forward_iterator_tag) { // assign forward range [_First, _Last)

$LN4:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1046 :         const auto _Newsize = _Convert_size<size_type>(static_cast<size_t>(_STD distance(_First, _Last)));

  0002d	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Last$[rsp]
  00032	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  00037	e8 00 00 00 00	 call	 ??$distance@PEAE@std@@YA_JPEAE0@Z ; std::distance<unsigned char *>
  0003c	48 8b c8	 mov	 rcx, rax
  0003f	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00044	48 89 44 24 20	 mov	 QWORD PTR _Newsize$[rsp], rax

; 1047 :         auto& _My_data      = _Mypair._Myval2;

  00049	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0004e	48 89 44 24 28	 mov	 QWORD PTR _My_data$[rsp], rax

; 1048 :         pointer& _Myfirst   = _My_data._Myfirst;

  00053	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00058	48 83 c0 08	 add	 rax, 8
  0005c	48 89 44 24 30	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1049 :         pointer& _Mylast    = _My_data._Mylast;

  00061	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00066	48 83 c0 10	 add	 rax, 16
  0006a	48 89 44 24 38	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1050 :         pointer& _Myend     = _My_data._Myend;

  0006f	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00074	48 83 c0 18	 add	 rax, 24
  00078	48 89 44 24 40	 mov	 QWORD PTR _Myend$[rsp], rax

; 1051 : 
; 1052 :         _My_data._Orphan_all();

  0007d	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00082	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1053 : 
; 1054 : #if _HAS_IF_CONSTEXPR
; 1055 :         if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<_Iter, _Ty*>::_Trivially_copyable>,
; 1056 :                           _Uses_default_construct<_Alty, _Ty*, decltype(*_First)>,
; 1057 :                           _Uses_default_destroy<_Alty, _Ty*>>) {
; 1058 :             const auto _Oldcapacity = static_cast<size_type>(_Myend - _Myfirst);

  00087	48 8b 44 24 40	 mov	 rax, QWORD PTR _Myend$[rsp]
  0008c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00091	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00094	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00097	48 2b c1	 sub	 rax, rcx
  0009a	48 89 44 24 48	 mov	 QWORD PTR _Oldcapacity$1[rsp], rax

; 1059 :             if (_Newsize > _Oldcapacity) {

  0009f	48 8b 44 24 48	 mov	 rax, QWORD PTR _Oldcapacity$1[rsp]
  000a4	48 39 44 24 20	 cmp	 QWORD PTR _Newsize$[rsp], rax
  000a9	76 0f		 jbe	 SHORT $LN2@Assign_ran

; 1060 :                 _Clear_and_reserve_geometric(_Newsize);

  000ab	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  000b0	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000b5	e8 00 00 00 00	 call	 ?_Clear_and_reserve_geometric@?$vector@EV?$allocator@E@std@@@std@@AEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Clear_and_reserve_geometric
$LN2@Assign_ran:

; 1061 :             }
; 1062 : 
; 1063 :             _Mylast = _Refancy<pointer>(_Copy_memmove(_First, _Last, _Unfancy(_Myfirst)));

  000ba	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000bf	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  000c2	e8 00 00 00 00	 call	 ??$_Unfancy@E@std@@YAPEAEPEAE@Z ; std::_Unfancy<unsigned char>
  000c7	4c 8b c0	 mov	 r8, rax
  000ca	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Last$[rsp]
  000cf	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  000d4	e8 00 00 00 00	 call	 ??$_Copy_memmove@PEAEPEAE@std@@YAPEAEPEAE00@Z ; std::_Copy_memmove<unsigned char *,unsigned char *>
  000d9	48 8b c8	 mov	 rcx, rax
  000dc	e8 00 00 00 00	 call	 ??$_Refancy@PEAE$0A@@std@@YAPEAEPEAE@Z ; std::_Refancy<unsigned char *,0>
  000e1	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000e6	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1064 :         } else
; 1065 : #endif // _HAS_IF_CONSTEXPR
; 1066 :         {
; 1067 :             auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);
; 1068 : 
; 1069 :             if (_Newsize > _Oldsize) {
; 1070 :                 const auto _Oldcapacity = static_cast<size_type>(_Myend - _Myfirst);
; 1071 :                 if (_Newsize > _Oldcapacity) { // reallocate
; 1072 :                     _Clear_and_reserve_geometric(_Newsize);
; 1073 :                     _Oldsize = 0;
; 1074 :                 }
; 1075 : 
; 1076 :                 // performance note: traversing [_First, _Mid) twice
; 1077 :                 const _Iter _Mid = _STD next(_First, static_cast<difference_type>(_Oldsize));
; 1078 :                 _Copy_unchecked(_First, _Mid, _Myfirst);
; 1079 :                 _Mylast = _Ucopy(_Mid, _Last, _Mylast);
; 1080 :             } else {
; 1081 :                 const pointer _Newlast = _Myfirst + _Newsize;
; 1082 :                 _Copy_unchecked(_First, _Last, _Myfirst);
; 1083 :                 _Destroy(_Newlast, _Mylast);
; 1084 :                 _Mylast = _Newlast;
; 1085 :             }
; 1086 :         }
; 1087 :     }

  000e9	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000ed	5f		 pop	 rdi
  000ee	c3		 ret	 0
??$_Assign_range@PEAE@?$vector@EV?$allocator@E@std@@@std@@AEAAXPEAE0Uforward_iterator_tag@1@@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::_Assign_range<unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@E@std@@YAPEAEQEAE@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Get_unwrapped@E@std@@YAPEAEQEAE@Z PROC		; std::_Get_unwrapped<unsigned char>, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 276  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 277  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Get_unwrapped@E@std@@YAPEAEQEAE@Z ENDP		; std::_Get_unwrapped<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Adl_verify_range@PEAEPEAE@std@@YAXAEBQEAE0@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
??$_Adl_verify_range@PEAEPEAE@std@@YAXAEBQEAE0@Z PROC	; std::_Adl_verify_range<unsigned char *,unsigned char *>, COMDAT

; 217  :     const _Iter& _First, const _Sentinel& _Last) { // check that [_First, _Last) forms an iterator range

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 218  :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 219  :         _Verify_range(_First, _Last);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Last$[rsp]
  00028	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0002b	48 8b 44 24 30	 mov	 rax, QWORD PTR _First$[rsp]
  00030	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00033	e8 00 00 00 00	 call	 ??$_Verify_range@E@std@@YAXQEBE0@Z ; std::_Verify_range<unsigned char>

; 220  :     } else {
; 221  :         (void) _First; // TRANSITION, VSO#486357
; 222  :         (void) _Last; // TRANSITION, VSO#486357
; 223  :     }
; 224  : }

  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
??$_Adl_verify_range@PEAEPEAE@std@@YAXAEBQEAE0@Z ENDP	; std::_Adl_verify_range<unsigned char *,unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::forward<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$allocator@Unal_info@@@std@@@std@@YA$$QEAV?$allocator@Unal_info@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@V?$allocator@Unal_info@@@std@@@std@@YA$$QEAV?$allocator@Unal_info@@@0@AEAV10@@Z PROC ; std::forward<std::allocator<nal_info> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@V?$allocator@Unal_info@@@std@@@std@@YA$$QEAV?$allocator@Unal_info@@@0@AEAV10@@Z ENDP ; std::forward<std::allocator<nal_info> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 1081 : void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1082 :     // deallocate a plain pointer using an allocator
; 1083 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1084 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1085 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

  00023	41 b8 01 00 00
	00		 mov	 r8d, 1
  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
  00038	90		 npad	 1

; 1086 :     } else {
; 1087 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1088 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1089 :     }
; 1090 : }

  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5f		 pop	 rdi
  0003e	c3		 ret	 0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Seek_wrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@PEBUnal_info@@@std@@YAXAEAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@AEBQEBUnal_info@@@Z
_TEXT	SEGMENT
_It$ = 48
_UIt$ = 56
??$_Seek_wrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@PEBUnal_info@@@std@@YAXAEAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@AEBQEBUnal_info@@@Z PROC ; std::_Seek_wrapped<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,nal_info const *>, COMDAT

; 415  : constexpr void _Seek_wrapped(_Iter& _It, const _UIter& _UIt) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 416  :     if constexpr (_Wrapped_seekable_v<_Iter, _UIter>) {
; 417  :         _It._Seek_to(_UIt);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _UIt$[rsp]
  00028	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0002b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _It$[rsp]
  00030	e8 00 00 00 00	 call	 ?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAXPEBUnal_info@@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Seek_to

; 418  :     } else {
; 419  :         _It = _UIt;
; 420  :     }
; 421  : }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
??$_Seek_wrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@PEBUnal_info@@@std@@YAXAEAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@AEBQEBUnal_info@@@Z ENDP ; std::_Seek_wrapped<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,nal_info const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@$0A@@std@@YAPEBUnal_info@@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
_It$ = 48
??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@$0A@@std@@YAPEBUnal_info@@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@@Z PROC ; std::_Get_unwrapped<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,0>, COMDAT

; 257  : _NODISCARD constexpr auto _Get_unwrapped(const _Iter& _It) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 258  :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 259  :     return _It._Unwrapped();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _It$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Unwrapped@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEBUnal_info@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Unwrapped

; 260  : }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@$0A@@std@@YAPEBUnal_info@@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@@Z ENDP ; std::_Get_unwrapped<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Adl_verify_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
??$_Adl_verify_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@0@Z PROC ; std::_Adl_verify_range<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > > >, COMDAT

; 217  :     const _Iter& _First, const _Sentinel& _Last) { // check that [_First, _Last) forms an iterator range

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 218  :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 219  :         _Verify_range(_First, _Last);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Last$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@1@0@Z ; std::_Verify_range

; 220  :     } else {
; 221  :         (void) _First; // TRANSITION, VSO#486357
; 222  :         (void) _Last; // TRANSITION, VSO#486357
; 223  :     }
; 224  : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Adl_verify_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@0@Z ENDP ; std::_Adl_verify_range<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@PEAUnal_info@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@AEBQEAUnal_info@@@Z
_TEXT	SEGMENT
_It$ = 48
_UIt$ = 56
??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@PEAUnal_info@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@AEBQEAUnal_info@@@Z PROC ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,nal_info *>, COMDAT

; 415  : constexpr void _Seek_wrapped(_Iter& _It, const _UIter& _UIt) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 416  :     if constexpr (_Wrapped_seekable_v<_Iter, _UIter>) {
; 417  :         _It._Seek_to(_UIt);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _UIt$[rsp]
  00028	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0002b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _It$[rsp]
  00030	e8 00 00 00 00	 call	 ?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAXPEBUnal_info@@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Seek_to

; 418  :     } else {
; 419  :         _It = _UIt;
; 420  :     }
; 421  : }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@PEAUnal_info@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@AEBQEAUnal_info@@@Z ENDP ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,nal_info *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@$0A@@std@@YAPEAUnal_info@@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
_It$ = 48
??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@$0A@@std@@YAPEAUnal_info@@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@@Z PROC ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,0>, COMDAT

; 257  : _NODISCARD constexpr auto _Get_unwrapped(const _Iter& _It) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 258  :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 259  :     return _It._Unwrapped();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _It$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEAUnal_info@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Unwrapped

; 260  : }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@$0A@@std@@YAPEAUnal_info@@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@@Z ENDP ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@0@Z PROC ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > > >, COMDAT

; 217  :     const _Iter& _First, const _Sentinel& _Last) { // check that [_First, _Last) forms an iterator range

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 218  :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 219  :         _Verify_range(_First, _Last);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Last$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@1@0@Z ; std::_Verify_range

; 220  :     } else {
; 221  :         (void) _First; // TRANSITION, VSO#486357
; 222  :         (void) _Last; // TRANSITION, VSO#486357
; 223  :     }
; 224  : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@0@Z ENDP ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0U?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
<_Val2_0>$ = 72
??$?0U?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@Z PROC ; std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0><RGYAVDeleter<AVBSFContext>,AVBSFContext * &>, COMDAT

; 1441 :         : _Myval1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 08 00 00 00	 mov	 ecx, 8
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  00031	e8 00 00 00 00	 call	 ??$forward@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAU1@@Z ; std::forward<RGYAVDeleter<AVBSFContext> >
  00036	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003b	48 8b d0	 mov	 rdx, rax
  0003e	e8 00 00 00 00	 call	 ??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@$$QEAU0@@Z
  00043	90		 npad	 1
  00044	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Val2_0>$[rsp]
  00049	e8 00 00 00 00	 call	 ??$forward@AEAPEAUAVBSFContext@@@std@@YAAEAPEAUAVBSFContext@@AEAPEAU1@@Z ; std::forward<AVBSFContext * &>
  0004e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00053	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00056	48 89 41 40	 mov	 QWORD PTR [rcx+64], rax
  0005a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??$?0U?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@Z ENDP ; std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0><RGYAVDeleter<AVBSFContext>,AVBSFContext * &>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
<_Val2_0>$ = 72
?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@Z@4HA PROC ; `std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0><RGYAVDeleter<AVBSFContext>,AVBSFContext * &>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@Z@4HA ENDP ; `std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0><RGYAVDeleter<AVBSFContext>,AVBSFContext * &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
<_Val2_0>$ = 72
?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@Z@4HA PROC ; `std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0><RGYAVDeleter<AVBSFContext>,AVBSFContext * &>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@Z@4HA ENDP ; `std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0><RGYAVDeleter<AVBSFContext>,AVBSFContext * &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAU?$RGYAVDeleter@UAVBSFContext@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAU?$RGYAVDeleter@UAVBSFContext@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAU1@@Z PROC ; std::move<RGYAVDeleter<AVBSFContext> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAU?$RGYAVDeleter@UAVBSFContext@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAU1@@Z ENDP ; std::move<RGYAVDeleter<AVBSFContext> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$_Reset@P6AXPEAPEAUAVBSFContext@@@Z@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAX$$QEAP6AXPEAPEAUAVBSFContext@@@Z@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Val$ = 72
??$_Reset@P6AXPEAPEAUAVBSFContext@@@Z@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAX$$QEAP6AXPEAPEAUAVBSFContext@@@Z@Z PROC ; std::_Func_class<void,AVBSFContext * *>::_Reset<void (__cdecl*)(AVBSFContext * *)>, COMDAT

; 1042 :     void _Reset(_Fx&& _Val) { // store copy of _Val

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1043 :         if (!_Test_callable(_Val)) { // null member pointer/function pointer/std::function

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Val$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Test_callable@P6AXPEAPEAUAVBSFContext@@@Z@std@@YA_NAEBQ6AXPEAPEAUAVBSFContext@@@Z@Z ; std::_Test_callable<void (__cdecl*)(AVBSFContext * *)>
  0002d	0f b6 c0	 movzx	 eax, al
  00030	85 c0		 test	 eax, eax
  00032	75 02		 jne	 SHORT $LN2@Reset

; 1044 :             return; // already empty

  00034	eb 3b		 jmp	 SHORT $LN1@Reset
$LN2@Reset:

; 1045 :         }
; 1046 : 
; 1047 :         using _Impl = _Func_impl_no_alloc<decay_t<_Fx>, _Ret, _Types...>;
; 1048 :         if
; 1049 :             _CONSTEXPR_IF(_Is_large<_Impl>) {
; 1050 :                 // dynamically allocate _Val
; 1051 :                 _Set(_Global_new<_Impl>(_STD forward<_Fx>(_Val)));
; 1052 :             }
; 1053 :         else {
; 1054 :             // store _Val in-situ
; 1055 :             _Set(::new (static_cast<void*>(&_Mystorage)) _Impl(_STD forward<_Fx>(_Val)));

  00036	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 8b d0	 mov	 rdx, rax
  0003e	b9 10 00 00 00	 mov	 ecx, 16
  00043	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00048	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0004d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Val$[rsp]
  00052	e8 00 00 00 00	 call	 ??$forward@P6AXPEAPEAUAVBSFContext@@@Z@std@@YA$$QEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z ; std::forward<void (__cdecl*)(AVBSFContext * *)>
  00057	48 8b d0	 mov	 rdx, rax
  0005a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0005f	e8 00 00 00 00	 call	 ??$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVBSFContext@@@ZXPEAPEAU1@@std@@QEAA@$$QEAP6AXPEAPEAUAVBSFContext@@@Z@Z ; std::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *>::_Func_impl_no_alloc<void (__cdecl*)(AVBSFContext * *),void,AVBSFContext * *><void (__cdecl*)(AVBSFContext * *),void>
  00064	48 8b d0	 mov	 rdx, rax
  00067	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006c	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@@Z ; std::_Func_class<void,AVBSFContext * *>::_Set
$LN1@Reset:

; 1056 :         }
; 1057 :     }

  00071	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00075	5f		 pop	 rdi
  00076	c3		 ret	 0
??$_Reset@P6AXPEAPEAUAVBSFContext@@@Z@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAX$$QEAP6AXPEAPEAUAVBSFContext@@@Z@Z ENDP ; std::_Func_class<void,AVBSFContext * *>::_Reset<void (__cdecl*)(AVBSFContext * *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAP6AXPEAPEAUAVBSFContext@@@Z@std@@YA$$QEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAP6AXPEAPEAUAVBSFContext@@@Z@std@@YA$$QEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z PROC ; std::move<void (__cdecl*&)(AVBSFContext * *)>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAP6AXPEAPEAUAVBSFContext@@@Z@std@@YA$$QEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z ENDP ; std::move<void (__cdecl*&)(AVBSFContext * *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
<_Val2_0>$ = 72
??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@Z PROC ; std::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0>::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0><RGYAVDeleter<AVCodecParameters>,AVCodecParameters * &>, COMDAT

; 1441 :         : _Myval1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 08 00 00 00	 mov	 ecx, 8
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  00031	e8 00 00 00 00	 call	 ??$forward@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAU1@@Z ; std::forward<RGYAVDeleter<AVCodecParameters> >
  00036	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003b	48 8b d0	 mov	 rdx, rax
  0003e	e8 00 00 00 00	 call	 ??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@$$QEAU0@@Z
  00043	90		 npad	 1
  00044	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Val2_0>$[rsp]
  00049	e8 00 00 00 00	 call	 ??$forward@AEAPEAUAVCodecParameters@@@std@@YAAEAPEAUAVCodecParameters@@AEAPEAU1@@Z ; std::forward<AVCodecParameters * &>
  0004e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00053	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00056	48 89 41 40	 mov	 QWORD PTR [rcx+64], rax
  0005a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@Z ENDP ; std::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0>::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0><RGYAVDeleter<AVCodecParameters>,AVCodecParameters * &>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
<_Val2_0>$ = 72
?dtor$0@?0???$?0U?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@Z@4HA PROC ; `std::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0>::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0><RGYAVDeleter<AVCodecParameters>,AVCodecParameters * &>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0U?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@Z@4HA ENDP ; `std::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0>::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0><RGYAVDeleter<AVCodecParameters>,AVCodecParameters * &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
<_Val2_0>$ = 72
?dtor$0@?0???$?0U?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@Z@4HA PROC ; `std::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0>::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0><RGYAVDeleter<AVCodecParameters>,AVCodecParameters * &>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0U?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@Z@4HA ENDP ; `std::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0>::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0><RGYAVDeleter<AVCodecParameters>,AVCodecParameters * &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAU?$RGYAVDeleter@UAVCodecParameters@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAU?$RGYAVDeleter@UAVCodecParameters@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAU1@@Z PROC ; std::move<RGYAVDeleter<AVCodecParameters> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAU?$RGYAVDeleter@UAVCodecParameters@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAU1@@Z ENDP ; std::move<RGYAVDeleter<AVCodecParameters> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$_Reset@P6AXPEAPEAUAVCodecParameters@@@Z@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAX$$QEAP6AXPEAPEAUAVCodecParameters@@@Z@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Val$ = 72
??$_Reset@P6AXPEAPEAUAVCodecParameters@@@Z@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAX$$QEAP6AXPEAPEAUAVCodecParameters@@@Z@Z PROC ; std::_Func_class<void,AVCodecParameters * *>::_Reset<void (__cdecl*)(AVCodecParameters * *)>, COMDAT

; 1042 :     void _Reset(_Fx&& _Val) { // store copy of _Val

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1043 :         if (!_Test_callable(_Val)) { // null member pointer/function pointer/std::function

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Val$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Test_callable@P6AXPEAPEAUAVCodecParameters@@@Z@std@@YA_NAEBQ6AXPEAPEAUAVCodecParameters@@@Z@Z ; std::_Test_callable<void (__cdecl*)(AVCodecParameters * *)>
  0002d	0f b6 c0	 movzx	 eax, al
  00030	85 c0		 test	 eax, eax
  00032	75 02		 jne	 SHORT $LN2@Reset

; 1044 :             return; // already empty

  00034	eb 3b		 jmp	 SHORT $LN1@Reset
$LN2@Reset:

; 1045 :         }
; 1046 : 
; 1047 :         using _Impl = _Func_impl_no_alloc<decay_t<_Fx>, _Ret, _Types...>;
; 1048 :         if
; 1049 :             _CONSTEXPR_IF(_Is_large<_Impl>) {
; 1050 :                 // dynamically allocate _Val
; 1051 :                 _Set(_Global_new<_Impl>(_STD forward<_Fx>(_Val)));
; 1052 :             }
; 1053 :         else {
; 1054 :             // store _Val in-situ
; 1055 :             _Set(::new (static_cast<void*>(&_Mystorage)) _Impl(_STD forward<_Fx>(_Val)));

  00036	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 8b d0	 mov	 rdx, rax
  0003e	b9 10 00 00 00	 mov	 ecx, 16
  00043	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00048	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0004d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Val$[rsp]
  00052	e8 00 00 00 00	 call	 ??$forward@P6AXPEAPEAUAVCodecParameters@@@Z@std@@YA$$QEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z ; std::forward<void (__cdecl*)(AVCodecParameters * *)>
  00057	48 8b d0	 mov	 rdx, rax
  0005a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0005f	e8 00 00 00 00	 call	 ??$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$_Func_impl_no_alloc@P6AXPEAPEAUAVCodecParameters@@@ZXPEAPEAU1@@std@@QEAA@$$QEAP6AXPEAPEAUAVCodecParameters@@@Z@Z ; std::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *>::_Func_impl_no_alloc<void (__cdecl*)(AVCodecParameters * *),void,AVCodecParameters * *><void (__cdecl*)(AVCodecParameters * *),void>
  00064	48 8b d0	 mov	 rdx, rax
  00067	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006c	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@@Z ; std::_Func_class<void,AVCodecParameters * *>::_Set
$LN1@Reset:

; 1056 :         }
; 1057 :     }

  00071	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00075	5f		 pop	 rdi
  00076	c3		 ret	 0
??$_Reset@P6AXPEAPEAUAVCodecParameters@@@Z@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAX$$QEAP6AXPEAPEAUAVCodecParameters@@@Z@Z ENDP ; std::_Func_class<void,AVCodecParameters * *>::_Reset<void (__cdecl*)(AVCodecParameters * *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAP6AXPEAPEAUAVCodecParameters@@@Z@std@@YA$$QEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAP6AXPEAPEAUAVCodecParameters@@@Z@std@@YA$$QEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z PROC ; std::move<void (__cdecl*&)(AVCodecParameters * *)>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAP6AXPEAPEAUAVCodecParameters@@@Z@std@@YA$$QEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z ENDP ; std::move<void (__cdecl*&)(AVCodecParameters * *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0><>, COMDAT

; 1437 :         : _Myval1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ ; RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>
  0002f	90		 npad	 1
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 c7 40 40 00
	00 00 00	 mov	 QWORD PTR [rax+64], 0
  0003d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00046	5f		 pop	 rdi
  00047	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0><>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0><>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0><>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0$$V@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1>::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00016	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001b	5f		 pop	 rdi
  0001c	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1>::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@Umalloc_deleter@@PEAD$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0$$V@?$_Compressed_pair@Umalloc_deleter@@PEAD$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<malloc_deleter,char *,1>::_Compressed_pair<malloc_deleter,char *,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00016	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001b	5f		 pop	 rdi
  0001c	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@Umalloc_deleter@@PEAD$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<malloc_deleter,char *,1>::_Compressed_pair<malloc_deleter,char *,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0$$V@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<fp_deleter,_iobuf *,1>::_Compressed_pair<fp_deleter,_iobuf *,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00016	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001b	5f		 pop	 rdi
  0001c	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<fp_deleter,_iobuf *,1>::_Compressed_pair<fp_deleter,_iobuf *,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z
_TEXT	SEGMENT
_Tmp$ = 40
_Left$ = 80
_Right$ = 88
??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z PROC ; std::swap<EncodeStatus *,void>, COMDAT

; 58   :         is_nothrow_move_assignable_v<_Ty>) { // exchange values stored at _Left and _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 59   :     _Ty _Tmp = _STD move(_Left);

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z ; std::move<EncodeStatus * &>
  0002d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00030	48 89 44 24 28	 mov	 QWORD PTR _Tmp$[rsp], rax

; 60   :     _Left    = _STD move(_Right);

  00035	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z ; std::move<EncodeStatus * &>
  0003f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00044	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00047	48 89 01	 mov	 QWORD PTR [rcx], rax

; 61   :     _Right   = _STD move(_Tmp);

  0004a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Tmp$[rsp]
  0004f	e8 00 00 00 00	 call	 ??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z ; std::move<EncodeStatus * &>
  00054	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00059	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 62   : }

  0005f	48 8b cc	 mov	 rcx, rsp
  00062	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z$rtcFrameData
  00069	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0006e	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00072	5f		 pop	 rdi
  00073	c3		 ret	 0
??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z ENDP ; std::swap<EncodeStatus *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z
_TEXT	SEGMENT
_Tmp$ = 40
_Left$ = 80
_Right$ = 88
??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z PROC	; std::swap<RGYLog *,void>, COMDAT

; 58   :         is_nothrow_move_assignable_v<_Ty>) { // exchange values stored at _Left and _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 59   :     _Ty _Tmp = _STD move(_Left);

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z ; std::move<RGYLog * &>
  0002d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00030	48 89 44 24 28	 mov	 QWORD PTR _Tmp$[rsp], rax

; 60   :     _Left    = _STD move(_Right);

  00035	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z ; std::move<RGYLog * &>
  0003f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00044	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00047	48 89 01	 mov	 QWORD PTR [rcx], rax

; 61   :     _Right   = _STD move(_Tmp);

  0004a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Tmp$[rsp]
  0004f	e8 00 00 00 00	 call	 ??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z ; std::move<RGYLog * &>
  00054	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00059	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 62   : }

  0005f	48 8b cc	 mov	 rcx, rsp
  00062	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z$rtcFrameData
  00069	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0006e	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00072	5f		 pop	 rdi
  00073	c3		 ret	 0
??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z ENDP	; std::swap<RGYLog *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z
_TEXT	SEGMENT
_Tmp$ = 40
_Left$ = 80
_Right$ = 88
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z PROC ; std::swap<std::_Ref_count_base *,void>, COMDAT

; 58   :         is_nothrow_move_assignable_v<_Ty>) { // exchange values stored at _Left and _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 59   :     _Ty _Tmp = _STD move(_Left);

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
  0002d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00030	48 89 44 24 28	 mov	 QWORD PTR _Tmp$[rsp], rax

; 60   :     _Left    = _STD move(_Right);

  00035	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
  0003f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00044	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00047	48 89 01	 mov	 QWORD PTR [rcx], rax

; 61   :     _Right   = _STD move(_Tmp);

  0004a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Tmp$[rsp]
  0004f	e8 00 00 00 00	 call	 ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
  00054	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00059	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 62   : }

  0005f	48 8b cc	 mov	 rcx, rsp
  00062	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcFrameData
  00069	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0006e	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00072	5f		 pop	 rdi
  00073	c3		 ret	 0
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z ENDP ; std::swap<std::_Ref_count_base *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$ = 64
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {

  00028	eb 0e		 jmp	 SHORT $LN4@Destroy_ra
$LN2@Destroy_ra:
  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR _First$[rsp]
  0002f	48 83 c0 28	 add	 rax, 40			; 00000028H
  00033	48 89 44 24 30	 mov	 QWORD PTR _First$[rsp], rax
$LN4@Destroy_ra:
  00038	48 8b 44 24 38	 mov	 rax, QWORD PTR _Last$[rsp]
  0003d	48 39 44 24 30	 cmp	 QWORD PTR _First$[rsp], rax
  00042	74 1b		 je	 SHORT $LN3@Destroy_ra

; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));

  00044	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0004e	90		 npad	 1
  0004f	48 8b d0	 mov	 rdx, rax
  00052	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Al$[rsp]
  00057	e8 00 00 00 00	 call	 ??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0005c	90		 npad	 1

; 1039 :         }

  0005d	eb cb		 jmp	 SHORT $LN2@Destroy_ra
$LN3@Destroy_ra:

; 1040 :     }
; 1041 : }

  0005f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@Unal_info@@@std@@@std@@YAXPEAUnal_info@@QEAU1@AEAV?$allocator@Unal_info@@@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@Unal_info@@@std@@@std@@YAXPEAUnal_info@@QEAU1@AEAV?$allocator@Unal_info@@@0@@Z PROC ; std::_Destroy_range<std::allocator<nal_info> >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {
; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1039 :         }
; 1040 :     }
; 1041 : }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$_Destroy_range@V?$allocator@Unal_info@@@std@@@std@@YAXPEAUnal_info@@QEAU1@AEAV?$allocator@Unal_info@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<nal_info> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
$LN3@Get_size_o:

; 36   : }

  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Bytes$ = 56
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 183  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 184  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 185  : #if defined(_M_IX86) || defined(_M_X64)
; 186  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00023	48 81 7c 24 38
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  0002c	72 10		 jb	 SHORT $LN2@Deallocate

; 187  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  0002e	48 8d 54 24 38	 lea	 rdx, QWORD PTR _Bytes$[rsp]
  00033	48 8d 4c 24 30	 lea	 rcx, QWORD PTR _Ptr$[rsp]
  00038	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
  0003d	90		 npad	 1
$LN2@Deallocate:

; 188  :     }
; 189  : #endif // defined(_M_IX86) || defined(_M_X64)
; 190  : 
; 191  :     ::operator delete(_Ptr, _Bytes);

  0003e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Bytes$[rsp]
  00043	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00048	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0004d	90		 npad	 1

; 192  : }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 167  : _DECLSPEC_ALLOCATOR void* _Allocate(const size_t _Bytes) {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 168  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 169  : #if defined(_M_IX86) || defined(_M_X64)
; 170  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001e	48 81 7c 24 30
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  00027	72 0c		 jb	 SHORT $LN2@Allocate

; 171  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00029	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  0002e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00033	eb 16		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 172  :     }
; 173  : #endif // defined(_M_IX86) || defined(_M_X64)
; 174  : 
; 175  :     if (_Bytes != 0) {

  00035	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Bytes$[rsp], 0
  0003b	74 0c		 je	 SHORT $LN3@Allocate

; 176  :         return _Traits::_Allocate(_Bytes);

  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00042	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00047	eb 02		 jmp	 SHORT $LN1@Allocate
$LN3@Allocate:

; 177  :     }
; 178  : 
; 179  :     return nullptr;

  00049	33 c0		 xor	 eax, eax
$LN1@Allocate:

; 180  : }

  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$00@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 0
_Count$ = 32
??$_Get_size_of_n@$00@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<1>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 04 24 00	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 0

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 30   :             if (_Count > _Max_possible) {
; 31   :                 _Throw_bad_array_new_length(); // multiply overflow
; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00022	48 8b 44 24 20	 mov	 rax, QWORD PTR _Count$[rsp]

; 36   : }

  00027	48 83 c4 10	 add	 rsp, 16
  0002b	5f		 pop	 rdi
  0002c	c3		 ret	 0
??$_Get_size_of_n@$00@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ; std::addressof<char *>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	b9 08 00 00 00	 mov	 ecx, 8
  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0003a	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ; std::forward<char * const &>
  00049	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00051	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00054	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z
_TEXT	SEGMENT
_My_data$ = 48
_Old_size$ = 56
_New_size$ = 64
_Old_capacity$ = 72
_New_capacity$ = 80
_Al$ = 88
_New_ptr$ = 104
_Raw_new$ = 120
_Old_ptr$4 = 128
this$ = 160
_Size_increase$ = 168
_Fn$ = 176
<_Args_0>$ = 184
<_Args_1>$ = 192
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>, COMDAT

; 4108 :     basic_string& _Reallocate_grow_by(const size_type _Size_increase, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+160]

; 4109 :         // reallocate to increase size by _Size_increase elements, new buffer prepared by
; 4110 :         // _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 4111 :         auto& _My_data            = _Mypair._Myval2;

  00033	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 89 44 24 30	 mov	 QWORD PTR _My_data$[rsp], rax

; 4112 :         const size_type _Old_size = _My_data._Mysize;

  00040	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00045	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00049	48 89 44 24 38	 mov	 QWORD PTR _Old_size$[rsp], rax

; 4113 :         if (max_size() - _Old_size < _Size_increase) {

  0004e	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00056	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0005b	48 2b 44 24 38	 sub	 rax, QWORD PTR _Old_size$[rsp]
  00060	48 3b 84 24 a8
	00 00 00	 cmp	 rax, QWORD PTR _Size_increase$[rsp]
  00068	73 05		 jae	 SHORT $LN2@Reallocate

; 4114 :             _Xlen(); // result too long

  0006a	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4115 :         }
; 4116 : 
; 4117 :         const size_type _New_size     = _Old_size + _Size_increase;

  0006f	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR _Size_increase$[rsp]
  00077	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0007c	48 03 c8	 add	 rcx, rax
  0007f	48 8b c1	 mov	 rax, rcx
  00082	48 89 44 24 40	 mov	 QWORD PTR _New_size$[rsp], rax

; 4118 :         const size_type _Old_capacity = _My_data._Myres;

  00087	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0008c	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00090	48 89 44 24 48	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4119 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00095	48 8b 54 24 40	 mov	 rdx, QWORD PTR _New_size$[rsp]
  0009a	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000a2	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  000a7	48 89 44 24 50	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4120 :         auto& _Al                     = _Getal();

  000ac	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000b4	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000b9	48 89 44 24 58	 mov	 QWORD PTR _Al$[rsp], rax

; 4121 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000be	48 8b 44 24 50	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  000c3	48 ff c0	 inc	 rax
  000c6	48 8b d0	 mov	 rdx, rax
  000c9	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Al$[rsp]
  000ce	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  000d3	48 89 44 24 68	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4122 :         _My_data._Orphan_all();

  000d8	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000dd	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4123 :         _My_data._Mysize      = _New_size;

  000e2	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000e7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000ec	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4124 :         _My_data._Myres       = _New_capacity;

  000f0	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000f5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000fa	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4125 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

  000fe	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00103	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00108	48 89 44 24 78	 mov	 QWORD PTR _Raw_new$[rsp], rax

; 4126 :         if (_BUF_SIZE <= _Old_capacity) {

  0010d	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Old_capacity$[rsp], 16
  00113	72 7f		 jb	 SHORT $LN3@Reallocate

; 4127 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00115	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0011a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0011e	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR _Old_ptr$4[rsp], rax

; 4128 :             _Fn(_Raw_new, _Unfancy(_Old_ptr), _Old_size, _Args...);

  00126	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _Old_ptr$4[rsp]
  0012e	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00133	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR <_Args_1>$[rsp]
  0013b	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00140	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00148	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0014d	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _Old_size$[rsp]
  00152	4c 8b c0	 mov	 r8, rax
  00155	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  0015a	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  00162	e8 00 00 00 00	 call	 ??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ; <lambda_65e615be2a453ca0576c979606f46740>::operator()

; 4129 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  00167	48 8b 44 24 48	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  0016c	48 ff c0	 inc	 rax
  0016f	4c 8b c0	 mov	 r8, rax
  00172	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Old_ptr$4[rsp]
  0017a	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Al$[rsp]
  0017f	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4130 :             _My_data._Bx._Ptr = _New_ptr;

  00184	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00189	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0018e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4131 :         } else {

  00192	eb 53		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4132 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);

  00194	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00199	48 83 c0 08	 add	 rax, 8
  0019d	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR <_Args_1>$[rsp]
  001a5	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  001aa	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  001b2	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  001b7	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _Old_size$[rsp]
  001bc	4c 8b c0	 mov	 r8, rax
  001bf	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  001c4	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  001cc	e8 00 00 00 00	 call	 ??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ; <lambda_65e615be2a453ca0576c979606f46740>::operator()

; 4133 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  001d1	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  001d6	48 83 c0 08	 add	 rax, 8
  001da	48 8d 54 24 68	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  001df	48 8b c8	 mov	 rcx, rax
  001e2	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4134 :         }
; 4135 : 
; 4136 :         return *this;

  001e7	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4137 :     }

  001ef	48 8b f8	 mov	 rdi, rax
  001f2	48 8b cc	 mov	 rcx, rsp
  001f5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcFrameData
  001fc	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00201	48 8b c7	 mov	 rax, rdi
  00204	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  0020b	5f		 pop	 rdi
  0020c	c3		 ret	 0
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_New_ptr$ = 72
_Old_ptr$ = 80
_Old_size$ = 88
_Ptr$ = 96
_Count$ = 104
??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z PROC ; <lambda_65e615be2a453ca0576c979606f46740>::operator(), COMDAT

; 2748 :                 const size_type _Count) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2749 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);

  0002d	4c 8b 44 24 58	 mov	 r8, QWORD PTR _Old_size$[rsp]
  00032	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Old_ptr$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0003c	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2750 :                 _Traits::copy(_New_ptr + _Old_size, _Ptr, _Count);

  00041	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00046	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0004b	48 03 c8	 add	 rcx, rax
  0004e	48 8b c1	 mov	 rax, rcx
  00051	4c 8b 44 24 68	 mov	 r8, QWORD PTR _Count$[rsp]
  00056	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0005b	48 8b c8	 mov	 rcx, rax
  0005e	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2751 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  00063	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  00068	48 8b 44 24 68	 mov	 rax, QWORD PTR _Count$[rsp]
  0006d	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00072	48 03 c8	 add	 rcx, rax
  00075	48 8b c1	 mov	 rax, rcx
  00078	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0007d	48 03 c8	 add	 rcx, rax
  00080	48 8b c1	 mov	 rax, rcx
  00083	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00088	48 8b c8	 mov	 rcx, rax
  0008b	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2752 :             },

  00090	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00094	5f		 pop	 rdi
  00095	c3		 ret	 0
??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ENDP ; <lambda_65e615be2a453ca0576c979606f46740>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z
_TEXT	SEGMENT
_My_data$ = 48
_Old_size$ = 56
_New_size$ = 64
_Old_capacity$ = 72
_New_capacity$ = 80
_Al$ = 88
_New_ptr$ = 104
_Raw_new$ = 120
_Old_ptr$4 = 128
this$ = 160
_Size_increase$ = 168
_Fn$ = 176
<_Args_0>$ = 184
<_Args_1>$ = 192
??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>, COMDAT

; 4108 :     basic_string& _Reallocate_grow_by(const size_type _Size_increase, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+160]

; 4109 :         // reallocate to increase size by _Size_increase elements, new buffer prepared by
; 4110 :         // _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 4111 :         auto& _My_data            = _Mypair._Myval2;

  00033	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 89 44 24 30	 mov	 QWORD PTR _My_data$[rsp], rax

; 4112 :         const size_type _Old_size = _My_data._Mysize;

  00040	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00045	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00049	48 89 44 24 38	 mov	 QWORD PTR _Old_size$[rsp], rax

; 4113 :         if (max_size() - _Old_size < _Size_increase) {

  0004e	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00056	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0005b	48 2b 44 24 38	 sub	 rax, QWORD PTR _Old_size$[rsp]
  00060	48 3b 84 24 a8
	00 00 00	 cmp	 rax, QWORD PTR _Size_increase$[rsp]
  00068	73 05		 jae	 SHORT $LN2@Reallocate

; 4114 :             _Xlen(); // result too long

  0006a	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4115 :         }
; 4116 : 
; 4117 :         const size_type _New_size     = _Old_size + _Size_increase;

  0006f	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR _Size_increase$[rsp]
  00077	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0007c	48 03 c8	 add	 rcx, rax
  0007f	48 8b c1	 mov	 rax, rcx
  00082	48 89 44 24 40	 mov	 QWORD PTR _New_size$[rsp], rax

; 4118 :         const size_type _Old_capacity = _My_data._Myres;

  00087	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0008c	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00090	48 89 44 24 48	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4119 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00095	48 8b 54 24 40	 mov	 rdx, QWORD PTR _New_size$[rsp]
  0009a	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000a2	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  000a7	48 89 44 24 50	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4120 :         auto& _Al                     = _Getal();

  000ac	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000b4	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000b9	48 89 44 24 58	 mov	 QWORD PTR _Al$[rsp], rax

; 4121 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000be	48 8b 44 24 50	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  000c3	48 ff c0	 inc	 rax
  000c6	48 8b d0	 mov	 rdx, rax
  000c9	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Al$[rsp]
  000ce	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  000d3	48 89 44 24 68	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4122 :         _My_data._Orphan_all();

  000d8	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000dd	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4123 :         _My_data._Mysize      = _New_size;

  000e2	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000e7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000ec	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4124 :         _My_data._Myres       = _New_capacity;

  000f0	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000f5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000fa	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4125 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

  000fe	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00103	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00108	48 89 44 24 78	 mov	 QWORD PTR _Raw_new$[rsp], rax

; 4126 :         if (_BUF_SIZE <= _Old_capacity) {

  0010d	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Old_capacity$[rsp], 16
  00113	72 7e		 jb	 SHORT $LN3@Reallocate

; 4127 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00115	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0011a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0011e	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR _Old_ptr$4[rsp], rax

; 4128 :             _Fn(_Raw_new, _Unfancy(_Old_ptr), _Old_size, _Args...);

  00126	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _Old_ptr$4[rsp]
  0012e	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00133	0f b6 8c 24 c0
	00 00 00	 movzx	 ecx, BYTE PTR <_Args_1>$[rsp]
  0013b	88 4c 24 28	 mov	 BYTE PTR [rsp+40], cl
  0013f	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00147	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0014c	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _Old_size$[rsp]
  00151	4c 8b c0	 mov	 r8, rax
  00154	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  00159	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  00161	e8 00 00 00 00	 call	 ??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z ; <lambda_e1befb086ad3257e3f042a63030725f7>::operator()

; 4129 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  00166	48 8b 44 24 48	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  0016b	48 ff c0	 inc	 rax
  0016e	4c 8b c0	 mov	 r8, rax
  00171	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Old_ptr$4[rsp]
  00179	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Al$[rsp]
  0017e	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4130 :             _My_data._Bx._Ptr = _New_ptr;

  00183	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00188	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0018d	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4131 :         } else {

  00191	eb 52		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4132 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);

  00193	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00198	48 83 c0 08	 add	 rax, 8
  0019c	0f b6 8c 24 c0
	00 00 00	 movzx	 ecx, BYTE PTR <_Args_1>$[rsp]
  001a4	88 4c 24 28	 mov	 BYTE PTR [rsp+40], cl
  001a8	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  001b0	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  001b5	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _Old_size$[rsp]
  001ba	4c 8b c0	 mov	 r8, rax
  001bd	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  001c2	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  001ca	e8 00 00 00 00	 call	 ??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z ; <lambda_e1befb086ad3257e3f042a63030725f7>::operator()

; 4133 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  001cf	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  001d4	48 83 c0 08	 add	 rax, 8
  001d8	48 8d 54 24 68	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  001dd	48 8b c8	 mov	 rcx, rax
  001e0	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4134 :         }
; 4135 : 
; 4136 :         return *this;

  001e5	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4137 :     }

  001ed	48 8b f8	 mov	 rdi, rax
  001f0	48 8b cc	 mov	 rcx, rsp
  001f3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z$rtcFrameData
  001fa	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001ff	48 8b c7	 mov	 rax, rdi
  00202	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  00209	5f		 pop	 rdi
  0020a	c3		 ret	 0
??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_New_ptr$ = 72
_Old_ptr$ = 80
_Old_size$ = 88
_Count$ = 96
_Ch$ = 104
??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z PROC ; <lambda_e1befb086ad3257e3f042a63030725f7>::operator(), COMDAT

; 2773 :                 const _Elem _Ch) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2774 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);

  0002d	4c 8b 44 24 58	 mov	 r8, QWORD PTR _Old_size$[rsp]
  00032	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Old_ptr$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0003c	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2775 :                 _Traits::assign(_New_ptr + _Old_size, _Count, _Ch);

  00041	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00046	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0004b	48 03 c8	 add	 rcx, rax
  0004e	48 8b c1	 mov	 rax, rcx
  00051	44 0f b6 44 24
	68		 movzx	 r8d, BYTE PTR _Ch$[rsp]
  00057	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Count$[rsp]
  0005c	48 8b c8	 mov	 rcx, rax
  0005f	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2776 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  00064	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  00069	48 8b 44 24 60	 mov	 rax, QWORD PTR _Count$[rsp]
  0006e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00073	48 03 c8	 add	 rcx, rax
  00076	48 8b c1	 mov	 rax, rcx
  00079	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0007e	48 03 c8	 add	 rcx, rax
  00081	48 8b c1	 mov	 rax, rcx
  00084	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00089	48 8b c8	 mov	 rcx, rax
  0008c	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2777 :             },

  00091	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00095	5f		 pop	 rdi
  00096	c3		 ret	 0
??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z ENDP ; <lambda_e1befb086ad3257e3f042a63030725f7>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
_TEXT	SEGMENT
_Old_capacity$ = 32
_New_capacity$ = 40
_Al$ = 48
_New_ptr$ = 72
this$ = 112
_New_size$ = 120
_Fn$ = 128
<_Args_0>$ = 136
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>, COMDAT

; 4082 :     basic_string& _Reallocate_for(const size_type _New_size, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 4083 :         // reallocate to store exactly _New_size elements, new buffer prepared by
; 4084 :         // _Fn(_New_ptr, _New_size, _Args...)
; 4085 :         if (_New_size > max_size()) {

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00037	48 39 44 24 78	 cmp	 QWORD PTR _New_size$[rsp], rax
  0003c	76 05		 jbe	 SHORT $LN2@Reallocate

; 4086 :             _Xlen(); // result too long

  0003e	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4087 :         }
; 4088 : 
; 4089 :         const size_type _Old_capacity = _Mypair._Myval2._Myres;

  00043	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0004c	48 89 44 24 20	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4090 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00051	48 8b 54 24 78	 mov	 rdx, QWORD PTR _New_size$[rsp]
  00056	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  00060	48 89 44 24 28	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4091 :         auto& _Al                     = _Getal();

  00065	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0006a	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0006f	48 89 44 24 30	 mov	 QWORD PTR _Al$[rsp], rax

; 4092 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  00079	48 ff c0	 inc	 rax
  0007c	48 8b d0	 mov	 rdx, rax
  0007f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  00084	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  00089	48 89 44 24 48	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4093 :         _Mypair._Myval2._Orphan_all();

  0008e	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00093	48 8b c8	 mov	 rcx, rax
  00096	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4094 :         _Mypair._Myval2._Mysize = _New_size;

  0009b	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000a0	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000a5	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4095 :         _Mypair._Myval2._Myres  = _New_capacity;

  000a9	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000ae	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000b3	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4096 :         _Fn(_Unfancy(_New_ptr), _New_size, _Args...);

  000b7	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  000bc	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  000c1	4c 8b 8c 24 88
	00 00 00	 mov	 r9, QWORD PTR <_Args_0>$[rsp]
  000c9	4c 8b 44 24 78	 mov	 r8, QWORD PTR _New_size$[rsp]
  000ce	48 8b d0	 mov	 rdx, rax
  000d1	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  000d9	e8 00 00 00 00	 call	 ??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()

; 4097 :         if (_BUF_SIZE <= _Old_capacity) {

  000de	48 83 7c 24 20
	10		 cmp	 QWORD PTR _Old_capacity$[rsp], 16
  000e4	72 2e		 jb	 SHORT $LN3@Reallocate

; 4098 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000e6	48 8b 44 24 20	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  000eb	48 ff c0	 inc	 rax
  000ee	4c 8b c0	 mov	 r8, rax
  000f1	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000f6	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  000fa	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  000ff	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4099 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  00104	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00109	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0010e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4100 :         } else {

  00112	eb 16		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4101 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  00114	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00119	48 83 c0 08	 add	 rax, 8
  0011d	48 8d 54 24 48	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  00122	48 8b c8	 mov	 rcx, rax
  00125	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4102 :         }
; 4103 : 
; 4104 :         return *this;

  0012a	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4105 :     }

  0012f	48 8b f8	 mov	 rdi, rax
  00132	48 8b cc	 mov	 rcx, rsp
  00135	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcFrameData
  0013c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00141	48 8b c7	 mov	 rax, rdi
  00144	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00148	5f		 pop	 rdi
  00149	c3		 ret	 0
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_New_ptr$ = 72
_Count$ = 80
_Ptr$ = 88
??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z PROC ; <lambda_66f57f934f28d61049862f64df852ff0>::operator(), COMDAT

; 2853 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2854 :                 _Traits::copy(_New_ptr, _Ptr, _Count);

  0002d	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Count$[rsp]
  00032	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0003c	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2855 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00041	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  00046	48 8b 44 24 50	 mov	 rax, QWORD PTR _Count$[rsp]
  0004b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00050	48 03 c8	 add	 rcx, rax
  00053	48 8b c1	 mov	 rax, rcx
  00056	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  0005b	48 8b c8	 mov	 rcx, rax
  0005e	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2856 :             },

  00063	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00067	5f		 pop	 rdi
  00068	c3		 ret	 0
??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z ENDP ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > const >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Max_value<unsigned __int64>, COMDAT

; 32   :     _NOEXCEPT_COND(noexcept(_Left < _Right)) { // return larger of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 33   :     return _Left < _Right ? _Right : _Left;

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00028	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	73 0c		 jae	 SHORT $LN3@Max_value
  00035	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
  0003f	eb 0a		 jmp	 SHORT $LN4@Max_value
$LN3@Max_value:
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00046	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
$LN4@Max_value:
  0004b	48 8b 44 24 08	 mov	 rax, QWORD PTR tv65[rsp]
  00050	48 89 04 24	 mov	 QWORD PTR $T1[rsp], rax
  00054	48 8b 04 24	 mov	 rax, QWORD PTR $T1[rsp]

; 34   : }

  00058	48 83 c4 10	 add	 rsp, 16
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Max_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
_TEXT	SEGMENT
_Obj$ = 16
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z PROC	; std::_Destroy_in_place<char *>, COMDAT

; 321  : void _Destroy_in_place(_Ty& _Obj) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 322  :     _Obj.~_Ty();
; 323  : }

  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ENDP	; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$assign@PEAEX@?$vector@EV?$allocator@E@std@@@std@@QEAAXPEAE0@Z
_TEXT	SEGMENT
$T1 = 33
tv72 = 40
this$ = 64
_First$ = 72
_Last$ = 80
??$assign@PEAEX@?$vector@EV?$allocator@E@std@@@std@@QEAAXPEAE0@Z PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::assign<unsigned char *,void>, COMDAT

; 1091 :     void assign(_Iter _First, _Iter _Last) { // assign [_First, _Last)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1092 :         _Adl_verify_range(_First, _Last);

  00028	48 8d 54 24 50	 lea	 rdx, QWORD PTR _Last$[rsp]
  0002d	48 8d 4c 24 48	 lea	 rcx, QWORD PTR _First$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Adl_verify_range@PEAEPEAE@std@@YAXAEBQEAE0@Z ; std::_Adl_verify_range<unsigned char *,unsigned char *>

; 1093 :         _Assign_range(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>{});

  00037	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Last$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$_Get_unwrapped@E@std@@YAPEAEQEAE@Z ; std::_Get_unwrapped<unsigned char>
  00041	48 89 44 24 28	 mov	 QWORD PTR tv72[rsp], rax
  00046	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _First$[rsp]
  0004b	e8 00 00 00 00	 call	 ??$_Get_unwrapped@E@std@@YAPEAEQEAE@Z ; std::_Get_unwrapped<unsigned char>
  00050	44 0f b6 4c 24
	21		 movzx	 r9d, BYTE PTR $T1[rsp]
  00056	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv72[rsp]
  0005b	4c 8b c1	 mov	 r8, rcx
  0005e	48 8b d0	 mov	 rdx, rax
  00061	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00066	e8 00 00 00 00	 call	 ??$_Assign_range@PEAE@?$vector@EV?$allocator@E@std@@@std@@AEAAXPEAE0Uforward_iterator_tag@1@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Assign_range<unsigned char *>

; 1094 :     }

  0006b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006f	5f		 pop	 rdi
  00070	c3		 ret	 0
??$assign@PEAEX@?$vector@EV?$allocator@E@std@@@std@@QEAAXPEAE0@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::assign<unsigned char *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Pocca@V?$allocator@E@std@@@std@@YAXAEAV?$allocator@E@0@AEBV10@@Z
_TEXT	SEGMENT
_Left$ = 16
_Right$ = 24
??$_Pocca@V?$allocator@E@std@@@std@@YAXAEAV?$allocator@E@0@AEBV10@@Z PROC ; std::_Pocca<std::allocator<unsigned char> >, COMDAT

; 942  : void _Pocca(_Alloc& _Left, const _Alloc& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 943  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_copy_assignment::value) {
; 944  :         _Left = _Right;
; 945  :     } else {
; 946  :         (void) _Left; // TRANSITION, VSO#486357
; 947  :         (void) _Right; // TRANSITION, VSO#486357
; 948  :     }
; 949  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Pocca@V?$allocator@E@std@@@std@@YAXAEAV?$allocator@E@0@AEBV10@@Z ENDP ; std::_Pocca<std::allocator<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@E@std@@@std@@YAXPEAEQEAEAEAV?$allocator@E@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@E@std@@@std@@YAXPEAEQEAEAEAV?$allocator@E@0@@Z PROC ; std::_Destroy_range<std::allocator<unsigned char> >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {
; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1039 :         }
; 1040 :     }
; 1041 : }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$_Destroy_range@V?$allocator@E@std@@@std@@YAXPEAEQEAEAEAV?$allocator@E@0@@Z ENDP ; std::_Destroy_range<std::allocator<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
;	COMDAT ??0?$_Func_base@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$_Func_base@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ PROC ; std::_Func_base<void,AVBSFContext * *>::_Func_base<void,AVBSFContext * *>, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$_Func_base@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ ENDP ; std::_Func_base<void,AVBSFContext * *>::_Func_base<void,AVBSFContext * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@0@AEAV10@@Z PROC ; std::move<std::function<void __cdecl(AVBSFContext * *)> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@0@AEAV10@@Z ENDP ; std::move<std::function<void __cdecl(AVBSFContext * *)> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@std@@YAPEAV?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@std@@YAPEAV?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@0@AEAV10@@Z PROC ; std::addressof<std::function<void __cdecl(AVBSFContext * *)> >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@std@@YAPEAV?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@0@AEAV10@@Z ENDP ; std::addressof<std::function<void __cdecl(AVBSFContext * *)> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAUAVBSFContext@@PEAU1@@std@@YAPEAUAVBSFContext@@AEAPEAU1@$$QEAPEAU1@@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAUAVBSFContext@@PEAU1@@std@@YAPEAUAVBSFContext@@AEAPEAU1@$$QEAPEAU1@@Z PROC ; std::exchange<AVBSFContext *,AVBSFContext *>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAUAVBSFContext@@PEAU1@@std@@YAPEAUAVBSFContext@@AEAPEAU1@$$QEAPEAU1@@Z ENDP ; std::exchange<AVBSFContext *,AVBSFContext *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Pocma@V?$allocator@Unal_info@@@std@@@std@@YAXAEAV?$allocator@Unal_info@@@0@0@Z
_TEXT	SEGMENT
_Left$ = 48
_Right$ = 56
??$_Pocma@V?$allocator@Unal_info@@@std@@@std@@YAXAEAV?$allocator@Unal_info@@@0@0@Z PROC ; std::_Pocma<std::allocator<nal_info> >, COMDAT

; 968  : void _Pocma(_Alloc& _Left, _Alloc& _Right) noexcept { // (maybe) propagate on container move assignment

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 969  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_move_assignment::value) {
; 970  :         _Left = _STD move(_Right);

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAV?$allocator@Unal_info@@@std@@@std@@YA$$QEAV?$allocator@Unal_info@@@0@AEAV10@@Z ; std::move<std::allocator<nal_info> &>

; 971  :     } else {
; 972  :         (void) _Left; // TRANSITION, VSO#486357
; 973  :         (void) _Right; // TRANSITION, VSO#486357
; 974  :     }
; 975  : }

  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??$_Pocma@V?$allocator@Unal_info@@@std@@@std@@YAXAEAV?$allocator@Unal_info@@@0@0@Z ENDP ; std::_Pocma<std::allocator<nal_info> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
;	COMDAT ??0?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ PROC ; std::_Func_base<void,AVCodecParameters * *>::_Func_base<void,AVCodecParameters * *>, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$_Func_base@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ ENDP ; std::_Func_base<void,AVCodecParameters * *>::_Func_base<void,AVCodecParameters * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	b9 10 00 00 00	 mov	 ecx, 16
  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0003a	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
  00049	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0004c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00051	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00056	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@XZ ; std::allocator<char>::allocator<char>
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  00039	90		 npad	 1
  0003a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> >
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  0003e	90		 npad	 1
  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z PROC ; std::move<std::allocator<char> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::move<std::allocator<char> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@D@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@D@std@@YAPEADPEAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@D@std@@YAPEADPEAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1382 :     ~_Container_proxy_ptr12() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1383 :         if (_Ptr) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 16		 je	 SHORT $LN2@Container_

; 1384 :             _Delete_plain_internal(_Al, _Ptr);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0003a	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
$LN2@Container_:

; 1385 :         }
; 1386 :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Al_$ = 72
_Mycont$ = 80
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1368 :     _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1369 :         : _Al(_Al_) { // create a new _Container_proxy pointing at _Mycont

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00032	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1370 :         _Ptr = _Unfancy(_Al_.allocate(1));

  00036	ba 01 00 00 00	 mov	 edx, 1
  0003b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00040	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00045	48 8b c8	 mov	 rcx, rax
  00048	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0004d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00052	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1371 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

  00055	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Mycont$[rsp]
  0005a	e8 00 00 00 00	 call	 ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
  0005f	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00064	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00069	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0006e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00071	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1372 :         _Mycont._Myproxy = _Ptr;

  00076	48 8b 44 24 50	 mov	 rax, QWORD PTR _Mycont$[rsp]
  0007b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00080	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00083	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1373 :     }

  00086	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0008b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Min_value<unsigned __int64>, COMDAT

; 25   :     _NOEXCEPT_COND(noexcept(_Right < _Left)) { // return smaller of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 26   :     return _Right < _Left ? _Right : _Left;

  00023	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Left$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	73 0c		 jae	 SHORT $LN3@Min_value
  00035	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
  0003f	eb 0a		 jmp	 SHORT $LN4@Min_value
$LN3@Min_value:
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00046	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
$LN4@Min_value:
  0004b	48 8b 44 24 08	 mov	 rax, QWORD PTR tv65[rsp]
  00050	48 89 04 24	 mov	 QWORD PTR $T1[rsp], rax
  00054	48 8b 04 24	 mov	 rax, QWORD PTR $T1[rsp]

; 27   : }

  00058	48 83 c4 10	 add	 rsp, 16
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Min_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z PROC ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ENDP ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAU_iobuf@@AEAPEAU1@@std@@YAPEAU_iobuf@@AEAPEAU1@0@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAU_iobuf@@AEAPEAU1@@std@@YAPEAU_iobuf@@AEAPEAU1@0@Z PROC ; std::exchange<_iobuf *,_iobuf * &>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAU_iobuf@@AEAPEAU1@@std@@YAPEAU_iobuf@@AEAPEAU1@0@Z ENDP ; std::exchange<_iobuf *,_iobuf * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEADAEAPEAD@std@@YAPEADAEAPEAD0@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEADAEAPEAD@std@@YAPEADAEAPEAD0@Z PROC	; std::exchange<char *,char * &>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEADAEAPEAD@std@@YAPEADAEAPEAD0@Z ENDP	; std::exchange<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAEAEAPEAE@std@@YAPEAEAEAPEAE0@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAEAEAPEAE@std@@YAPEAEAEAPEAE0@Z PROC	; std::exchange<unsigned char *,unsigned char * &>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAEAEAPEAE@std@@YAPEAEAEAPEAE0@Z ENDP	; std::exchange<unsigned char *,unsigned char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<unsigned char>,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Compressed_pair<std::allocator<unsigned char>,std::_Vector_val<std::_Simple_types<unsigned char> >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@E@std@@QEAA@XZ ; std::allocator<unsigned char>::allocator<unsigned char>
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@E@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<unsigned char> >::_Vector_val<std::_Simple_types<unsigned char> >
  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<unsigned char>,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Compressed_pair<std::allocator<unsigned char>,std::_Vector_val<std::_Simple_types<unsigned char> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0E@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@E@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0E@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@E@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned char>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0E@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@E@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@YAPEBV?$vector@EV?$allocator@E@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@YAPEBV?$vector@EV?$allocator@E@std@@@0@AEBV10@@Z PROC ; std::addressof<std::vector<unsigned char,std::allocator<unsigned char> > const >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@YAPEBV?$vector@EV?$allocator@E@std@@@0@AEBV10@@Z ENDP ; std::addressof<std::vector<unsigned char,std::allocator<unsigned char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Unfancy_maybe_null@E@std@@YAPEAEPEAE@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy_maybe_null@E@std@@YAPEAEPEAE@Z PROC		; std::_Unfancy_maybe_null<unsigned char>, COMDAT

; 347  : _Ty* _Unfancy_maybe_null(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 348  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 349  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy_maybe_null@E@std@@YAPEAEPEAE@Z ENDP		; std::_Unfancy_maybe_null<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAU1@@Z PROC ; std::forward<RGYAVDeleter<AVBSFContext> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAU1@@Z ENDP ; std::forward<RGYAVDeleter<AVBSFContext> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@@std@@YAPEAV?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@@std@@YAPEAV?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@0@AEAV10@@Z PROC ; std::addressof<std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@@std@@YAPEAV?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@0@AEAV10@@Z ENDP ; std::addressof<std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAUAVBSFContext@@AEAPEAU1@@std@@YAPEAUAVBSFContext@@AEAPEAU1@0@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAUAVBSFContext@@AEAPEAU1@@std@@YAPEAUAVBSFContext@@AEAPEAU1@0@Z PROC ; std::exchange<AVBSFContext *,AVBSFContext * &>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAUAVBSFContext@@AEAPEAU1@@std@@YAPEAUAVBSFContext@@AEAPEAU1@0@Z ENDP ; std::exchange<AVBSFContext *,AVBSFContext * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<nal_info>,std::_Vector_val<std::_Simple_types<nal_info> >,1>::_Compressed_pair<std::allocator<nal_info>,std::_Vector_val<std::_Simple_types<nal_info> >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@Unal_info@@@std@@QEAA@XZ ; std::allocator<nal_info>::allocator<nal_info>
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<nal_info> >::_Vector_val<std::_Simple_types<nal_info> >
  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<nal_info>,std::_Vector_val<std::_Simple_types<nal_info> >,1>::_Compressed_pair<std::allocator<nal_info>,std::_Vector_val<std::_Simple_types<nal_info> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
_New_proxy$ = 32
$T1 = 40
this$ = 64
_Al$ = 72
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT

; 1184 :     void _Alloc_proxy(_Alloc&& _Al) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1185 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

  00023	ba 01 00 00 00	 mov	 edx, 1
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al$[rsp]
  0002d	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0003a	48 89 44 24 20	 mov	 QWORD PTR _New_proxy$[rsp], rax

; 1186 :         _Construct_in_place(*_New_proxy, this);

  0003f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 89 44 24 28	 mov	 QWORD PTR $T1[rsp], rax
  00049	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T1[rsp]
  0004e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _New_proxy$[rsp]
  00053	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1187 :         _Myproxy            = _New_proxy;

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _New_proxy$[rsp]
  00062	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1188 :         _New_proxy->_Mycont = this;

  00065	48 8b 44 24 20	 mov	 rax, QWORD PTR _New_proxy$[rsp]
  0006a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1189 :     }

  00072	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0V?$allocator@Unal_info@@@std@@$$V@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Unal_info@@@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0V?$allocator@Unal_info@@@std@@$$V@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Unal_info@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<nal_info>,std::_Vector_val<std::_Simple_types<nal_info> >,1>::_Compressed_pair<std::allocator<nal_info>,std::_Vector_val<std::_Simple_types<nal_info> >,1><std::allocator<nal_info> >, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@V?$allocator@Unal_info@@@std@@@std@@YA$$QEAV?$allocator@Unal_info@@@0@AEAV10@@Z ; std::forward<std::allocator<nal_info> >
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<nal_info> >::_Vector_val<std::_Simple_types<nal_info> >
  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$?0V?$allocator@Unal_info@@@std@@$$V@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Unal_info@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<nal_info>,std::_Vector_val<std::_Simple_types<nal_info> >,1>::_Compressed_pair<std::allocator<nal_info>,std::_Vector_val<std::_Simple_types<nal_info> >,1><std::allocator<nal_info> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$allocator@Unal_info@@@std@@@std@@YA$$QEAV?$allocator@Unal_info@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$allocator@Unal_info@@@std@@@std@@YA$$QEAV?$allocator@Unal_info@@@0@AEAV10@@Z PROC ; std::move<std::allocator<nal_info> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$allocator@Unal_info@@@std@@@std@@YA$$QEAV?$allocator@Unal_info@@@0@AEAV10@@Z ENDP ; std::move<std::allocator<nal_info> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@@std@@YAPEAV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@@std@@YAPEAV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::vector<nal_info,std::allocator<nal_info> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@@std@@YAPEAV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::vector<nal_info,std::allocator<nal_info> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1109 : void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1110 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1111 :     using _Ty = typename _Alloc::value_type;
; 1112 :     _Ptr->~_Ty();
; 1113 :     _Deallocate_plain(_Al, _Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >

; 1114 : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0Unal_info@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Unal_info@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0Unal_info@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Unal_info@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><nal_info>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0Unal_info@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Unal_info@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><nal_info>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ; std::_Get_size_of_n<16>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
??$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z PROC ; std::vector<nal_info,std::allocator<nal_info> >::_Emplace_reallocate<nal_info const &>, COMDAT

; 676  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 677  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 678  :         _Alty& _Al        = _Getal();

  0002e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAAEAV?$allocator@Unal_info@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::_Getal
  0003b	48 89 44 24 20	 mov	 QWORD PTR _Al$[rsp], rax

; 679  :         auto& _My_data    = _Mypair._Myval2;

  00040	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 89 44 24 28	 mov	 QWORD PTR _My_data$[rsp], rax

; 680  :         pointer& _Myfirst = _My_data._Myfirst;

  0004d	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00052	48 83 c0 08	 add	 rax, 8
  00056	48 89 44 24 30	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 681  :         pointer& _Mylast  = _My_data._Mylast;

  0005b	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00060	48 83 c0 10	 add	 rax, 16
  00064	48 89 44 24 38	 mov	 QWORD PTR _Mylast$[rsp], rax

; 682  : 
; 683  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 684  : 
; 685  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00069	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Whereptr$[rsp]
  00079	48 2b c8	 sub	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx
  0007f	48 99		 cdq
  00081	b9 18 00 00 00	 mov	 ecx, 24
  00086	48 f7 f9	 idiv	 rcx
  00089	48 89 44 24 40	 mov	 QWORD PTR _Whereoff$[rsp], rax

; 686  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  0008e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00093	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00098	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0009b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0009e	48 2b c1	 sub	 rax, rcx
  000a1	48 99		 cdq
  000a3	b9 18 00 00 00	 mov	 ecx, 24
  000a8	48 f7 f9	 idiv	 rcx
  000ab	48 89 44 24 48	 mov	 QWORD PTR _Oldsize$[rsp], rax

; 687  : 
; 688  :         if (_Oldsize == max_size()) {

  000b0	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000b8	e8 00 00 00 00	 call	 ?max_size@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA_KXZ ; std::vector<nal_info,std::allocator<nal_info> >::max_size
  000bd	48 39 44 24 48	 cmp	 QWORD PTR _Oldsize$[rsp], rax
  000c2	75 05		 jne	 SHORT $LN2@Emplace_re

; 689  :             _Xlength();

  000c4	e8 00 00 00 00	 call	 ?_Xlength@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@CAXXZ ; std::vector<nal_info,std::allocator<nal_info> >::_Xlength
$LN2@Emplace_re:

; 690  :         }
; 691  : 
; 692  :         const size_type _Newsize     = _Oldsize + 1;

  000c9	48 8b 44 24 48	 mov	 rax, QWORD PTR _Oldsize$[rsp]
  000ce	48 ff c0	 inc	 rax
  000d1	48 89 44 24 50	 mov	 QWORD PTR _Newsize$[rsp], rax

; 693  :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

  000d6	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  000db	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000e3	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBA_K_K@Z ; std::vector<nal_info,std::allocator<nal_info> >::_Calculate_growth
  000e8	48 89 44 24 58	 mov	 QWORD PTR _Newcapacity$[rsp], rax

; 694  : 
; 695  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

  000ed	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  000f2	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  000f7	e8 00 00 00 00	 call	 ?allocate@?$allocator@Unal_info@@@std@@QEAAPEAUnal_info@@_K@Z ; std::allocator<nal_info>::allocate
  000fc	48 89 44 24 60	 mov	 QWORD PTR _Newvec$[rsp], rax

; 696  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  00101	48 6b 44 24 40
	18		 imul	 rax, QWORD PTR _Whereoff$[rsp], 24
  00107	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0010c	48 8d 44 01 18	 lea	 rax, QWORD PTR [rcx+rax+24]
  00111	48 89 44 24 68	 mov	 QWORD PTR _Constructed_last$[rsp], rax

; 697  :         pointer _Constructed_first      = _Constructed_last;

  00116	48 8b 44 24 68	 mov	 rax, QWORD PTR _Constructed_last$[rsp]
  0011b	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 698  : 
; 699  :         _TRY_BEGIN
; 700  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00120	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00128	e8 00 00 00 00	 call	 ??$forward@AEBUnal_info@@@std@@YAAEBUnal_info@@AEBU1@@Z ; std::forward<nal_info const &>
  0012d	48 89 44 24 78	 mov	 QWORD PTR tv90[rsp], rax
  00132	48 6b 4c 24 40
	18		 imul	 rcx, QWORD PTR _Whereoff$[rsp], 24
  00138	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  0013d	48 03 d1	 add	 rdx, rcx
  00140	48 8b ca	 mov	 rcx, rdx
  00143	e8 00 00 00 00	 call	 ??$_Unfancy@Unal_info@@@std@@YAPEAUnal_info@@PEAU1@@Z ; std::_Unfancy<nal_info>
  00148	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv90[rsp]
  0014d	4c 8b c1	 mov	 r8, rcx
  00150	48 8b d0	 mov	 rdx, rax
  00153	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  00158	e8 00 00 00 00	 call	 ??$construct@Unal_info@@AEBU1@@?$_Default_allocator_traits@V?$allocator@Unal_info@@@std@@@std@@SAXAEAV?$allocator@Unal_info@@@1@QEAUnal_info@@AEBU3@@Z ; std::_Default_allocator_traits<std::allocator<nal_info> >::construct<nal_info,nal_info const &>

; 701  :         _Constructed_first = _Newvec + _Whereoff;

  0015d	48 6b 44 24 40
	18		 imul	 rax, QWORD PTR _Whereoff$[rsp], 24
  00163	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  00168	48 03 c8	 add	 rcx, rax
  0016b	48 8b c1	 mov	 rax, rcx
  0016e	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 702  : 
; 703  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00173	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00178	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0017b	48 39 84 24 98
	00 00 00	 cmp	 QWORD PTR _Whereptr$[rsp], rax
  00183	75 24		 jne	 SHORT $LN4@Emplace_re

; 704  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  00185	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  0018a	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0018f	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00192	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00197	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0019a	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001a2	e8 00 00 00 00	 call	 ?_Umove_if_noexcept@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@00@Z ; std::vector<nal_info,std::allocator<nal_info> >::_Umove_if_noexcept

; 705  :         } else { // provide basic guarantee

  001a7	eb 5d		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 706  :             _Umove(_Myfirst, _Whereptr, _Newvec);

  001a9	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  001ae	4c 8b 84 24 98
	00 00 00	 mov	 r8, QWORD PTR _Whereptr$[rsp]
  001b6	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  001bb	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001be	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001c6	e8 00 00 00 00	 call	 ?_Umove@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAPEAUnal_info@@PEAU3@00@Z ; std::vector<nal_info,std::allocator<nal_info> >::_Umove

; 707  :             _Constructed_first = _Newvec;

  001cb	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  001d0	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 708  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  001d5	48 6b 44 24 40
	18		 imul	 rax, QWORD PTR _Whereoff$[rsp], 24
  001db	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  001e0	48 8d 44 01 18	 lea	 rax, QWORD PTR [rcx+rax+24]
  001e5	4c 8b c8	 mov	 r9, rax
  001e8	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  001ed	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  001f0	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Whereptr$[rsp]
  001f8	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00200	e8 00 00 00 00	 call	 ?_Umove@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAPEAUnal_info@@PEAU3@00@Z ; std::vector<nal_info,std::allocator<nal_info> >::_Umove
  00205	90		 npad	 1
$LN5@Emplace_re:
  00206	eb 00		 jmp	 SHORT $LN9@Emplace_re
$LN10@Emplace_re:
$LN9@Emplace_re:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END
; 715  : 
; 716  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  00208	4c 8b 4c 24 58	 mov	 r9, QWORD PTR _Newcapacity$[rsp]
  0020d	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Newsize$[rsp]
  00212	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  00217	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0021f	e8 00 00 00 00	 call	 ?_Change_array@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXQEAUnal_info@@_K1@Z ; std::vector<nal_info,std::allocator<nal_info> >::_Change_array

; 717  :         return _Newvec + _Whereoff;

  00224	48 6b 44 24 40
	18		 imul	 rax, QWORD PTR _Whereoff$[rsp], 24
  0022a	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0022f	48 03 c8	 add	 rcx, rax
  00232	48 8b c1	 mov	 rax, rcx

; 718  :     }

  00235	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0023c	5f		 pop	 rdi
  0023d	c3		 ret	 0
$LN11@Emplace_re:
??$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z ENDP ; std::vector<nal_info,std::allocator<nal_info> >::_Emplace_reallocate<nal_info const &>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z@4HA PROC ; `std::vector<nal_info,std::allocator<nal_info> >::_Emplace_reallocate<nal_info const &>'::`1'::catch$0

; 709  :         }
; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z$0:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@0@Z ; std::vector<nal_info,std::allocator<nal_info> >::_Destroy

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@Unal_info@@@std@@QEAAXQEAUnal_info@@_K@Z ; std::allocator<nal_info>::deallocate

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z@4HA ENDP ; `std::vector<nal_info,std::allocator<nal_info> >::_Emplace_reallocate<nal_info const &>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z@4HA PROC ; `std::vector<nal_info,std::allocator<nal_info> >::_Emplace_reallocate<nal_info const &>'::`1'::catch$0

; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z$0:

; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@0@Z ; std::vector<nal_info,std::allocator<nal_info> >::_Destroy

; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@Unal_info@@@std@@QEAAXQEAUnal_info@@_K@Z ; std::allocator<nal_info>::deallocate

; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z@4HA ENDP ; `std::vector<nal_info,std::allocator<nal_info> >::_Emplace_reallocate<nal_info const &>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@Unal_info@@AEBU1@@?$_Default_allocator_traits@V?$allocator@Unal_info@@@std@@@std@@SAXAEAV?$allocator@Unal_info@@@1@QEAUnal_info@@AEBU3@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@Unal_info@@AEBU1@@?$_Default_allocator_traits@V?$allocator@Unal_info@@@std@@@std@@SAXAEAV?$allocator@Unal_info@@@1@QEAUnal_info@@AEBU3@@Z PROC ; std::_Default_allocator_traits<std::allocator<nal_info> >::construct<nal_info,nal_info const &>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00015	48 8b fc	 mov	 rdi, rsp
  00018	b9 0e 00 00 00	 mov	 ecx, 14
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00029	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002e	b9 18 00 00 00	 mov	 ecx, 24
  00033	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00038	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEBUnal_info@@@std@@YAAEBUnal_info@@AEBU1@@Z ; std::forward<nal_info const &>
  00047	48 8b 7c 24 20	 mov	 rdi, QWORD PTR $T1[rsp]
  0004c	48 8b f0	 mov	 rsi, rax
  0004f	b9 18 00 00 00	 mov	 ecx, 24
  00054	f3 a4		 rep movsb

; 759  :     }

  00056	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0005a	5f		 pop	 rdi
  0005b	5e		 pop	 rsi
  0005c	c3		 ret	 0
??$construct@Unal_info@@AEBU1@@?$_Default_allocator_traits@V?$allocator@Unal_info@@@std@@@std@@SAXAEAV?$allocator@Unal_info@@@1@QEAUnal_info@@AEBU3@@Z ENDP ; std::_Default_allocator_traits<std::allocator<nal_info> >::construct<nal_info,nal_info const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@Unal_info@@@std@@YAPEAUnal_info@@PEAU1@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@Unal_info@@@std@@YAPEAUnal_info@@PEAU1@@Z PROC ; std::_Unfancy<nal_info>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@Unal_info@@@std@@YAPEAUnal_info@@PEAU1@@Z ENDP ; std::_Unfancy<nal_info>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXAEBUnal_info@@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
tv67 = 56
tv70 = 64
this$ = 96
<_Val_0>$ = 104
??$_Emplace_back_with_unused_capacity@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXAEBUnal_info@@@Z PROC ; std::vector<nal_info,std::allocator<nal_info> >::_Emplace_back_with_unused_capacity<nal_info const &>, COMDAT

; 633  :     decltype(auto) _Emplace_back_with_unused_capacity(_Valty&&... _Val) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 634  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 635  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 636  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 637  :         _STL_INTERNAL_CHECK(_Mylast != _My_data._Myend); // check that we have unused capacity
; 638  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0003b	48 8b 4c 24 68	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@AEBUnal_info@@@std@@YAAEBUnal_info@@AEBU1@@Z ; std::forward<nal_info const &>
  00045	48 89 44 24 38	 mov	 QWORD PTR tv67[rsp], rax
  0004a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  0004f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00052	e8 00 00 00 00	 call	 ??$_Unfancy@Unal_info@@@std@@YAPEAUnal_info@@PEAU1@@Z ; std::_Unfancy<nal_info>
  00057	48 89 44 24 40	 mov	 QWORD PTR tv70[rsp], rax
  0005c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00061	e8 00 00 00 00	 call	 ?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAAEAV?$allocator@Unal_info@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::_Getal
  00066	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv67[rsp]
  0006b	4c 8b c1	 mov	 r8, rcx
  0006e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv70[rsp]
  00073	48 8b d1	 mov	 rdx, rcx
  00076	48 8b c8	 mov	 rcx, rax
  00079	e8 00 00 00 00	 call	 ??$construct@Unal_info@@AEBU1@@?$_Default_allocator_traits@V?$allocator@Unal_info@@@std@@@std@@SAXAEAV?$allocator@Unal_info@@@1@QEAUnal_info@@AEBU3@@Z ; std::_Default_allocator_traits<std::allocator<nal_info> >::construct<nal_info,nal_info const &>

; 639  :         _Orphan_range(_Mylast, _Mylast);

  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00083	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00086	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0008e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00093	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z ; std::vector<nal_info,std::allocator<nal_info> >::_Orphan_range

; 640  :         _Ty& _Result = *_Mylast;

  00098	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax

; 641  :         ++_Mylast;

  000a5	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000aa	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ad	48 83 c0 18	 add	 rax, 24
  000b1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000b6	48 89 01	 mov	 QWORD PTR [rcx], rax

; 642  : #if _HAS_CXX17
; 643  :         return _Result;
; 644  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 645  :         (void) _Result;
; 646  : #endif // _HAS_CXX17
; 647  :     }

  000b9	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000bd	5f		 pop	 rdi
  000be	c3		 ret	 0
??$_Emplace_back_with_unused_capacity@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXAEBUnal_info@@@Z ENDP ; std::vector<nal_info,std::allocator<nal_info> >::_Emplace_back_with_unused_capacity<nal_info const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBUnal_info@@@std@@YAAEBUnal_info@@AEBU1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBUnal_info@@@std@@YAAEBUnal_info@@AEBU1@@Z PROC ; std::forward<nal_info const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBUnal_info@@@std@@YAAEBUnal_info@@AEBU1@@Z ENDP ; std::forward<nal_info const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$emplace_back@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAXAEBUnal_info@@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
this$ = 80
<_Val_0>$ = 88
??$emplace_back@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAXAEBUnal_info@@@Z PROC ; std::vector<nal_info,std::allocator<nal_info> >::emplace_back<nal_info const &>, COMDAT

; 651  :     decltype(auto) emplace_back(_Valty&&... _Val) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 652  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 653  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 654  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 655  :         if (_Mylast != _My_data._Myend) {

  0003b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00045	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00049	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0004c	74 19		 je	 SHORT $LN2@emplace_ba

; 656  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0004e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00053	e8 00 00 00 00	 call	 ??$forward@AEBUnal_info@@@std@@YAAEBUnal_info@@AEBU1@@Z ; std::forward<nal_info const &>
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00060	e8 00 00 00 00	 call	 ??$_Emplace_back_with_unused_capacity@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXAEBUnal_info@@@Z ; std::vector<nal_info,std::allocator<nal_info> >::_Emplace_back_with_unused_capacity<nal_info const &>
  00065	eb 24		 jmp	 SHORT $LN1@emplace_ba
$LN2@emplace_ba:

; 657  :         }
; 658  : 
; 659  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00067	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0006c	e8 00 00 00 00	 call	 ??$forward@AEBUnal_info@@@std@@YAAEBUnal_info@@AEBU1@@Z ; std::forward<nal_info const &>
  00071	4c 8b c0	 mov	 r8, rax
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAPEAUnal_info@@QEAU2@AEBU2@@Z ; std::vector<nal_info,std::allocator<nal_info> >::_Emplace_reallocate<nal_info const &>
  00086	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax
$LN1@emplace_ba:

; 660  : #if _HAS_CXX17
; 661  :         return _Result;
; 662  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 663  :         (void) _Result;
; 664  : #endif // _HAS_CXX17
; 665  :     }

  0008b	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??$emplace_back@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAXAEBUnal_info@@@Z ENDP ; std::vector<nal_info,std::allocator<nal_info> >::emplace_back<nal_info const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<nal_info> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<nal_info> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@0@AEBV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<nal_info> > const >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@0@AEBV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<nal_info> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Const_cast@$$CBUnal_info@@@std@@YAPEAUnal_info@@PEBU1@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Const_cast@$$CBUnal_info@@@std@@YAPEAUnal_info@@PEBU1@@Z PROC ; std::_Const_cast<nal_info const >, COMDAT

; 336  : auto _Const_cast(_Ty* _Ptr) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 337  :     return const_cast<remove_const_t<_Ty>*>(_Ptr);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 338  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Const_cast@$$CBUnal_info@@@std@@YAPEAUnal_info@@PEBU1@@Z ENDP ; std::_Const_cast<nal_info const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
;	COMDAT ??R<lambda_f79789dc0fd7cea8a85e7512acf0222d>@@QEBAXPEAE0H@Z
_TEXT	SEGMENT
i$1 = 0
x0$2 = 16
$T3 = 32
x1$4 = 48
$T5 = 64
x2$6 = 80
$T7 = 96
x3$8 = 112
$T9 = 128
x4$10 = 144
$T11 = 160
x5$12 = 176
$T13 = 192
x6$14 = 208
$T15 = 224
x7$16 = 240
$T17 = 256
this$ = 288
ptrBuf$ = 296
ptrSrc$ = 304
pitch$ = 312
??R<lambda_f79789dc0fd7cea8a85e7512acf0222d>@@QEBAXPEAE0H@Z PROC ; <lambda_f79789dc0fd7cea8a85e7512acf0222d>::operator(), COMDAT

; 423  :     auto loadLineToBuffer = [](uint8_t *ptrBuf, uint8_t *ptrSrc, int pitch) {

  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 10 01
	00 00		 sub	 rsp, 272		; 00000110H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 44 00 00 00	 mov	 ecx, 68			; 00000044H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 20
	01 00 00	 mov	 rcx, QWORD PTR [rsp+288]

; 424  :         for (int i = 0; i < pitch; i += 128, ptrSrc += 128, ptrBuf += 128) {

  00033	c7 04 24 00 00
	00 00		 mov	 DWORD PTR i$1[rsp], 0
  0003a	eb 37		 jmp	 SHORT $LN4@operator
$LN2@operator:
  0003c	8b 04 24	 mov	 eax, DWORD PTR i$1[rsp]
  0003f	05 80 00 00 00	 add	 eax, 128		; 00000080H
  00044	89 04 24	 mov	 DWORD PTR i$1[rsp], eax
  00047	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR ptrSrc$[rsp]
  0004f	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  00055	48 89 84 24 30
	01 00 00	 mov	 QWORD PTR ptrSrc$[rsp], rax
  0005d	48 8b 84 24 28
	01 00 00	 mov	 rax, QWORD PTR ptrBuf$[rsp]
  00065	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  0006b	48 89 84 24 28
	01 00 00	 mov	 QWORD PTR ptrBuf$[rsp], rax
$LN4@operator:
  00073	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR pitch$[rsp]
  0007a	39 04 24	 cmp	 DWORD PTR i$1[rsp], eax
  0007d	0f 8d fb 01 00
	00		 jge	 $LN3@operator

; 425  :             __m128i x0 = _mm_stream_load_si128((__m128i *)(ptrSrc +   0));

  00083	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR ptrSrc$[rsp]
  0008b	66 0f 38 2a 00	 movntdqa xmm0, XMMWORD PTR [rax]
  00090	66 0f 7f 44 24
	20		 movdqa	 XMMWORD PTR $T3[rsp], xmm0
  00096	66 0f 6f 44 24
	20		 movdqa	 xmm0, XMMWORD PTR $T3[rsp]
  0009c	66 0f 7f 44 24
	10		 movdqa	 XMMWORD PTR x0$2[rsp], xmm0

; 426  :             __m128i x1 = _mm_stream_load_si128((__m128i *)(ptrSrc +  16));

  000a2	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR ptrSrc$[rsp]
  000aa	48 83 c0 10	 add	 rax, 16
  000ae	66 0f 38 2a 00	 movntdqa xmm0, XMMWORD PTR [rax]
  000b3	66 0f 7f 44 24
	40		 movdqa	 XMMWORD PTR $T5[rsp], xmm0
  000b9	66 0f 6f 44 24
	40		 movdqa	 xmm0, XMMWORD PTR $T5[rsp]
  000bf	66 0f 7f 44 24
	30		 movdqa	 XMMWORD PTR x1$4[rsp], xmm0

; 427  :             __m128i x2 = _mm_stream_load_si128((__m128i *)(ptrSrc +  32));

  000c5	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR ptrSrc$[rsp]
  000cd	48 83 c0 20	 add	 rax, 32			; 00000020H
  000d1	66 0f 38 2a 00	 movntdqa xmm0, XMMWORD PTR [rax]
  000d6	66 0f 7f 44 24
	60		 movdqa	 XMMWORD PTR $T7[rsp], xmm0
  000dc	66 0f 6f 44 24
	60		 movdqa	 xmm0, XMMWORD PTR $T7[rsp]
  000e2	66 0f 7f 44 24
	50		 movdqa	 XMMWORD PTR x2$6[rsp], xmm0

; 428  :             __m128i x3 = _mm_stream_load_si128((__m128i *)(ptrSrc +  48));

  000e8	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR ptrSrc$[rsp]
  000f0	48 83 c0 30	 add	 rax, 48			; 00000030H
  000f4	66 0f 38 2a 00	 movntdqa xmm0, XMMWORD PTR [rax]
  000f9	66 0f 7f 84 24
	80 00 00 00	 movdqa	 XMMWORD PTR $T9[rsp], xmm0
  00102	66 0f 6f 84 24
	80 00 00 00	 movdqa	 xmm0, XMMWORD PTR $T9[rsp]
  0010b	66 0f 7f 44 24
	70		 movdqa	 XMMWORD PTR x3$8[rsp], xmm0

; 429  :             __m128i x4 = _mm_stream_load_si128((__m128i *)(ptrSrc +  64));

  00111	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR ptrSrc$[rsp]
  00119	48 83 c0 40	 add	 rax, 64			; 00000040H
  0011d	66 0f 38 2a 00	 movntdqa xmm0, XMMWORD PTR [rax]
  00122	66 0f 7f 84 24
	a0 00 00 00	 movdqa	 XMMWORD PTR $T11[rsp], xmm0
  0012b	66 0f 6f 84 24
	a0 00 00 00	 movdqa	 xmm0, XMMWORD PTR $T11[rsp]
  00134	66 0f 7f 84 24
	90 00 00 00	 movdqa	 XMMWORD PTR x4$10[rsp], xmm0

; 430  :             __m128i x5 = _mm_stream_load_si128((__m128i *)(ptrSrc +  80));

  0013d	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR ptrSrc$[rsp]
  00145	48 83 c0 50	 add	 rax, 80			; 00000050H
  00149	66 0f 38 2a 00	 movntdqa xmm0, XMMWORD PTR [rax]
  0014e	66 0f 7f 84 24
	c0 00 00 00	 movdqa	 XMMWORD PTR $T13[rsp], xmm0
  00157	66 0f 6f 84 24
	c0 00 00 00	 movdqa	 xmm0, XMMWORD PTR $T13[rsp]
  00160	66 0f 7f 84 24
	b0 00 00 00	 movdqa	 XMMWORD PTR x5$12[rsp], xmm0

; 431  :             __m128i x6 = _mm_stream_load_si128((__m128i *)(ptrSrc +  96));

  00169	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR ptrSrc$[rsp]
  00171	48 83 c0 60	 add	 rax, 96			; 00000060H
  00175	66 0f 38 2a 00	 movntdqa xmm0, XMMWORD PTR [rax]
  0017a	66 0f 7f 84 24
	e0 00 00 00	 movdqa	 XMMWORD PTR $T15[rsp], xmm0
  00183	66 0f 6f 84 24
	e0 00 00 00	 movdqa	 xmm0, XMMWORD PTR $T15[rsp]
  0018c	66 0f 7f 84 24
	d0 00 00 00	 movdqa	 XMMWORD PTR x6$14[rsp], xmm0

; 432  :             __m128i x7 = _mm_stream_load_si128((__m128i *)(ptrSrc + 112));

  00195	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR ptrSrc$[rsp]
  0019d	48 83 c0 70	 add	 rax, 112		; 00000070H
  001a1	66 0f 38 2a 00	 movntdqa xmm0, XMMWORD PTR [rax]
  001a6	66 0f 7f 84 24
	00 01 00 00	 movdqa	 XMMWORD PTR $T17[rsp], xmm0
  001af	66 0f 6f 84 24
	00 01 00 00	 movdqa	 xmm0, XMMWORD PTR $T17[rsp]
  001b8	66 0f 7f 84 24
	f0 00 00 00	 movdqa	 XMMWORD PTR x7$16[rsp], xmm0

; 433  :             _mm_store_si128((__m128i *)(ptrBuf +   0), x0);

  001c1	48 8b 84 24 28
	01 00 00	 mov	 rax, QWORD PTR ptrBuf$[rsp]
  001c9	66 0f 6f 44 24
	10		 movdqa	 xmm0, XMMWORD PTR x0$2[rsp]
  001cf	f3 0f 7f 00	 movdqu	 XMMWORD PTR [rax], xmm0

; 434  :             _mm_store_si128((__m128i *)(ptrBuf +  16), x1);

  001d3	48 8b 84 24 28
	01 00 00	 mov	 rax, QWORD PTR ptrBuf$[rsp]
  001db	48 83 c0 10	 add	 rax, 16
  001df	66 0f 6f 44 24
	30		 movdqa	 xmm0, XMMWORD PTR x1$4[rsp]
  001e5	f3 0f 7f 00	 movdqu	 XMMWORD PTR [rax], xmm0

; 435  :             _mm_store_si128((__m128i *)(ptrBuf +  32), x2);

  001e9	48 8b 84 24 28
	01 00 00	 mov	 rax, QWORD PTR ptrBuf$[rsp]
  001f1	48 83 c0 20	 add	 rax, 32			; 00000020H
  001f5	66 0f 6f 44 24
	50		 movdqa	 xmm0, XMMWORD PTR x2$6[rsp]
  001fb	f3 0f 7f 00	 movdqu	 XMMWORD PTR [rax], xmm0

; 436  :             _mm_store_si128((__m128i *)(ptrBuf +  48), x3);

  001ff	48 8b 84 24 28
	01 00 00	 mov	 rax, QWORD PTR ptrBuf$[rsp]
  00207	48 83 c0 30	 add	 rax, 48			; 00000030H
  0020b	66 0f 6f 44 24
	70		 movdqa	 xmm0, XMMWORD PTR x3$8[rsp]
  00211	f3 0f 7f 00	 movdqu	 XMMWORD PTR [rax], xmm0

; 437  :             _mm_store_si128((__m128i *)(ptrBuf +  64), x4);

  00215	48 8b 84 24 28
	01 00 00	 mov	 rax, QWORD PTR ptrBuf$[rsp]
  0021d	48 83 c0 40	 add	 rax, 64			; 00000040H
  00221	66 0f 6f 84 24
	90 00 00 00	 movdqa	 xmm0, XMMWORD PTR x4$10[rsp]
  0022a	f3 0f 7f 00	 movdqu	 XMMWORD PTR [rax], xmm0

; 438  :             _mm_store_si128((__m128i *)(ptrBuf +  80), x5);

  0022e	48 8b 84 24 28
	01 00 00	 mov	 rax, QWORD PTR ptrBuf$[rsp]
  00236	48 83 c0 50	 add	 rax, 80			; 00000050H
  0023a	66 0f 6f 84 24
	b0 00 00 00	 movdqa	 xmm0, XMMWORD PTR x5$12[rsp]
  00243	f3 0f 7f 00	 movdqu	 XMMWORD PTR [rax], xmm0

; 439  :             _mm_store_si128((__m128i *)(ptrBuf +  96), x6);

  00247	48 8b 84 24 28
	01 00 00	 mov	 rax, QWORD PTR ptrBuf$[rsp]
  0024f	48 83 c0 60	 add	 rax, 96			; 00000060H
  00253	66 0f 6f 84 24
	d0 00 00 00	 movdqa	 xmm0, XMMWORD PTR x6$14[rsp]
  0025c	f3 0f 7f 00	 movdqu	 XMMWORD PTR [rax], xmm0

; 440  :             _mm_store_si128((__m128i *)(ptrBuf + 112), x7);

  00260	48 8b 84 24 28
	01 00 00	 mov	 rax, QWORD PTR ptrBuf$[rsp]
  00268	48 83 c0 70	 add	 rax, 112		; 00000070H
  0026c	66 0f 6f 84 24
	f0 00 00 00	 movdqa	 xmm0, XMMWORD PTR x7$16[rsp]
  00275	f3 0f 7f 00	 movdqu	 XMMWORD PTR [rax], xmm0

; 441  :         }

  00279	e9 be fd ff ff	 jmp	 $LN2@operator
$LN3@operator:

; 442  :     };

  0027e	48 81 c4 10 01
	00 00		 add	 rsp, 272		; 00000110H
  00285	5f		 pop	 rdi
  00286	c3		 ret	 0
??R<lambda_f79789dc0fd7cea8a85e7512acf0222d>@@QEBAXPEAE0H@Z ENDP ; <lambda_f79789dc0fd7cea8a85e7512acf0222d>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ
_TEXT	SEGMENT
this$ = 48
??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ PROC ; std::shared_ptr<EncodeStatus>::operator-><EncodeStatus,0>, COMDAT

; 1204 :     _NODISCARD _Ty2* operator->() const noexcept { // return pointer to resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1205 :         return get();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?get@?$_Ptr_base@VEncodeStatus@@@std@@IEBAPEAVEncodeStatus@@XZ ; std::_Ptr_base<EncodeStatus>::get

; 1206 :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ ENDP ; std::shared_ptr<EncodeStatus>::operator-><EncodeStatus,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z
_TEXT	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z PROC ; std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6> >, COMDAT

; 138  : _NODISCARD _InIt find_if(_InIt _First, const _InIt _Last, _Pr _Pred) { // find first satisfying _Pred

  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 78	 sub	 rsp, 120		; 00000078H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 1e 00 00 00	 mov	 ecx, 30
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  00031	c7 44 24 60 00
	00 00 00	 mov	 DWORD PTR $T5[rsp], 0

; 139  :     _Adl_verify_range(_First, _Last);

  00039	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR _Last$[rsp]
  00041	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > > >

; 140  :     auto _UFirst      = _Get_unwrapped(_First);

  0004e	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  00056	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@$0A@@std@@YAPEBUnal_info@@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,0>
  0005b	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax

; 141  :     const auto _ULast = _Get_unwrapped(_Last);

  00060	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Last$[rsp]
  00068	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@$0A@@std@@YAPEBUnal_info@@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,0>
  0006d	48 89 44 24 38	 mov	 QWORD PTR _ULast$[rsp], rax

; 142  :     for (; _UFirst != _ULast; ++_UFirst) {

  00072	eb 0e		 jmp	 SHORT $LN4@find_if
$LN2@find_if:
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _UFirst$[rsp]
  00079	48 83 c0 18	 add	 rax, 24
  0007d	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@find_if:
  00082	48 8b 44 24 38	 mov	 rax, QWORD PTR _ULast$[rsp]
  00087	48 39 44 24 28	 cmp	 QWORD PTR _UFirst$[rsp], rax
  0008c	74 31		 je	 SHORT $LN3@find_if

; 143  :         if (_Pred(*_UFirst)) {

  0008e	48 8d 44 24 40	 lea	 rax, QWORD PTR $T4[rsp]
  00093	48 8b f8	 mov	 rdi, rax
  00096	48 8b 74 24 28	 mov	 rsi, QWORD PTR _UFirst$[rsp]
  0009b	b9 18 00 00 00	 mov	 ecx, 24
  000a0	f3 a4		 rep movsb
  000a2	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T4[rsp]
  000a7	48 8d 8c 24 a8
	00 00 00	 lea	 rcx, QWORD PTR _Pred$[rsp]
  000af	e8 00 00 00 00	 call	 ??R<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@QEBA_NUnal_info@@@Z ; <lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>::operator()
  000b4	0f b6 c0	 movzx	 eax, al
  000b7	85 c0		 test	 eax, eax
  000b9	74 02		 je	 SHORT $LN5@find_if

; 144  :             break;

  000bb	eb 02		 jmp	 SHORT $LN3@find_if
$LN5@find_if:

; 145  :         }
; 146  :     }

  000bd	eb b5		 jmp	 SHORT $LN2@find_if
$LN3@find_if:

; 147  : 
; 148  :     _Seek_wrapped(_First, _UFirst);

  000bf	48 8d 54 24 28	 lea	 rdx, QWORD PTR _UFirst$[rsp]
  000c4	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  000cc	e8 00 00 00 00	 call	 ??$_Seek_wrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@PEBUnal_info@@@std@@YAXAEAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@AEBQEBUnal_info@@@Z ; std::_Seek_wrapped<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,nal_info const *>

; 149  :     return _First;

  000d1	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _First$[rsp]
  000d9	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000e1	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
  000e6	8b 44 24 60	 mov	 eax, DWORD PTR $T5[rsp]
  000ea	83 c8 01	 or	 eax, 1
  000ed	89 44 24 60	 mov	 DWORD PTR $T5[rsp], eax
  000f1	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  000f9	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  000fe	90		 npad	 1
  000ff	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Last$[rsp]
  00107	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0010c	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 150  : }

  00114	48 8b f8	 mov	 rdi, rax
  00117	48 8b cc	 mov	 rcx, rsp
  0011a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z$rtcFrameData
  00121	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00126	48 8b c7	 mov	 rax, rdi
  00129	48 83 c4 78	 add	 rsp, 120		; 00000078H
  0012d	5f		 pop	 rdi
  0012e	5e		 pop	 rsi
  0012f	c3		 ret	 0
  00130	cc		 int	 3
??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z ENDP ; std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA PROC ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA PROC ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 98 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6> >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA PROC ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6> >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T5[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN10@dtor$2
  0001d	83 65 60 fe	 and	 DWORD PTR $T5[rbp], -2
  00021	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN10@dtor$2:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA PROC ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA PROC ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 98 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA PROC ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6> >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T5[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN10@dtor$2
  0001d	83 65 60 fe	 and	 DWORD PTR $T5[rbp], -2
  00021	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN10@dtor$2:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
;	COMDAT ??R<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@QEBA_NUnal_info@@@Z
_TEXT	SEGMENT
tv67 = 0
this$ = 32
info$ = 40
??R<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@QEBA_NUnal_info@@@Z PROC ; <lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>::operator(), COMDAT

; 332  :             const auto hevc_pps_nal = std::find_if(nal_list.begin(), nal_list.end(), [](nal_info info) { return info.type == NALU_HEVC_PPS; });

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]
  00023	48 8b 44 24 28	 mov	 rax, QWORD PTR info$[rsp]
  00028	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]
  0002c	83 f8 22	 cmp	 eax, 34			; 00000022H
  0002f	75 09		 jne	 SHORT $LN3@operator
  00031	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv67[rsp], 1
  00038	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0003a	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv67[rsp], 0
$LN4@operator:
  00041	0f b6 04 24	 movzx	 eax, BYTE PTR tv67[rsp]
  00045	48 83 c4 10	 add	 rsp, 16
  00049	5f		 pop	 rdi
  0004a	c3		 ret	 0
??R<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@QEBA_NUnal_info@@@Z ENDP ; <lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z
_TEXT	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z PROC ; std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_eaa0021af3d5bbad03ad875501c252dc> >, COMDAT

; 138  : _NODISCARD _InIt find_if(_InIt _First, const _InIt _Last, _Pr _Pred) { // find first satisfying _Pred

  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 78	 sub	 rsp, 120		; 00000078H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 1e 00 00 00	 mov	 ecx, 30
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  00031	c7 44 24 60 00
	00 00 00	 mov	 DWORD PTR $T5[rsp], 0

; 139  :     _Adl_verify_range(_First, _Last);

  00039	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR _Last$[rsp]
  00041	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > > >

; 140  :     auto _UFirst      = _Get_unwrapped(_First);

  0004e	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  00056	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@$0A@@std@@YAPEBUnal_info@@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,0>
  0005b	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax

; 141  :     const auto _ULast = _Get_unwrapped(_Last);

  00060	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Last$[rsp]
  00068	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@$0A@@std@@YAPEBUnal_info@@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,0>
  0006d	48 89 44 24 38	 mov	 QWORD PTR _ULast$[rsp], rax

; 142  :     for (; _UFirst != _ULast; ++_UFirst) {

  00072	eb 0e		 jmp	 SHORT $LN4@find_if
$LN2@find_if:
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _UFirst$[rsp]
  00079	48 83 c0 18	 add	 rax, 24
  0007d	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@find_if:
  00082	48 8b 44 24 38	 mov	 rax, QWORD PTR _ULast$[rsp]
  00087	48 39 44 24 28	 cmp	 QWORD PTR _UFirst$[rsp], rax
  0008c	74 31		 je	 SHORT $LN3@find_if

; 143  :         if (_Pred(*_UFirst)) {

  0008e	48 8d 44 24 40	 lea	 rax, QWORD PTR $T4[rsp]
  00093	48 8b f8	 mov	 rdi, rax
  00096	48 8b 74 24 28	 mov	 rsi, QWORD PTR _UFirst$[rsp]
  0009b	b9 18 00 00 00	 mov	 ecx, 24
  000a0	f3 a4		 rep movsb
  000a2	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T4[rsp]
  000a7	48 8d 8c 24 a8
	00 00 00	 lea	 rcx, QWORD PTR _Pred$[rsp]
  000af	e8 00 00 00 00	 call	 ??R<lambda_eaa0021af3d5bbad03ad875501c252dc>@@QEBA_NUnal_info@@@Z ; <lambda_eaa0021af3d5bbad03ad875501c252dc>::operator()
  000b4	0f b6 c0	 movzx	 eax, al
  000b7	85 c0		 test	 eax, eax
  000b9	74 02		 je	 SHORT $LN5@find_if

; 144  :             break;

  000bb	eb 02		 jmp	 SHORT $LN3@find_if
$LN5@find_if:

; 145  :         }
; 146  :     }

  000bd	eb b5		 jmp	 SHORT $LN2@find_if
$LN3@find_if:

; 147  : 
; 148  :     _Seek_wrapped(_First, _UFirst);

  000bf	48 8d 54 24 28	 lea	 rdx, QWORD PTR _UFirst$[rsp]
  000c4	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  000cc	e8 00 00 00 00	 call	 ??$_Seek_wrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@PEBUnal_info@@@std@@YAXAEAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@AEBQEBUnal_info@@@Z ; std::_Seek_wrapped<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,nal_info const *>

; 149  :     return _First;

  000d1	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _First$[rsp]
  000d9	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000e1	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
  000e6	8b 44 24 60	 mov	 eax, DWORD PTR $T5[rsp]
  000ea	83 c8 01	 or	 eax, 1
  000ed	89 44 24 60	 mov	 DWORD PTR $T5[rsp], eax
  000f1	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  000f9	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  000fe	90		 npad	 1
  000ff	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Last$[rsp]
  00107	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0010c	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 150  : }

  00114	48 8b f8	 mov	 rdi, rax
  00117	48 8b cc	 mov	 rcx, rsp
  0011a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z$rtcFrameData
  00121	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00126	48 8b c7	 mov	 rax, rdi
  00129	48 83 c4 78	 add	 rsp, 120		; 00000078H
  0012d	5f		 pop	 rdi
  0012e	5e		 pop	 rsi
  0012f	c3		 ret	 0
  00130	cc		 int	 3
??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z ENDP ; std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_eaa0021af3d5bbad03ad875501c252dc> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA PROC ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_eaa0021af3d5bbad03ad875501c252dc> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_eaa0021af3d5bbad03ad875501c252dc> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA PROC ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_eaa0021af3d5bbad03ad875501c252dc> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 98 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_eaa0021af3d5bbad03ad875501c252dc> >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA PROC ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_eaa0021af3d5bbad03ad875501c252dc> >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T5[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN10@dtor$2
  0001d	83 65 60 fe	 and	 DWORD PTR $T5[rbp], -2
  00021	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN10@dtor$2:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_eaa0021af3d5bbad03ad875501c252dc> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA PROC ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_eaa0021af3d5bbad03ad875501c252dc> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_eaa0021af3d5bbad03ad875501c252dc> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA PROC ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_eaa0021af3d5bbad03ad875501c252dc> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 98 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_eaa0021af3d5bbad03ad875501c252dc> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA PROC ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_eaa0021af3d5bbad03ad875501c252dc> >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T5[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN10@dtor$2
  0001d	83 65 60 fe	 and	 DWORD PTR $T5[rbp], -2
  00021	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN10@dtor$2:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_eaa0021af3d5bbad03ad875501c252dc> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
;	COMDAT ??R<lambda_eaa0021af3d5bbad03ad875501c252dc>@@QEBA_NUnal_info@@@Z
_TEXT	SEGMENT
tv67 = 0
this$ = 32
info$ = 40
??R<lambda_eaa0021af3d5bbad03ad875501c252dc>@@QEBA_NUnal_info@@@Z PROC ; <lambda_eaa0021af3d5bbad03ad875501c252dc>::operator(), COMDAT

; 331  :             const auto hevc_sps_nal = std::find_if(nal_list.begin(), nal_list.end(), [](nal_info info) { return info.type == NALU_HEVC_SPS; });

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]
  00023	48 8b 44 24 28	 mov	 rax, QWORD PTR info$[rsp]
  00028	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]
  0002c	83 f8 21	 cmp	 eax, 33			; 00000021H
  0002f	75 09		 jne	 SHORT $LN3@operator
  00031	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv67[rsp], 1
  00038	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0003a	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv67[rsp], 0
$LN4@operator:
  00041	0f b6 04 24	 movzx	 eax, BYTE PTR tv67[rsp]
  00045	48 83 c4 10	 add	 rsp, 16
  00049	5f		 pop	 rdi
  0004a	c3		 ret	 0
??R<lambda_eaa0021af3d5bbad03ad875501c252dc>@@QEBA_NUnal_info@@@Z ENDP ; <lambda_eaa0021af3d5bbad03ad875501c252dc>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z
_TEXT	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z PROC ; std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_f0f721445d981f5d1c40edf2de63bc8d> >, COMDAT

; 138  : _NODISCARD _InIt find_if(_InIt _First, const _InIt _Last, _Pr _Pred) { // find first satisfying _Pred

  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 78	 sub	 rsp, 120		; 00000078H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 1e 00 00 00	 mov	 ecx, 30
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  00031	c7 44 24 60 00
	00 00 00	 mov	 DWORD PTR $T5[rsp], 0

; 139  :     _Adl_verify_range(_First, _Last);

  00039	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR _Last$[rsp]
  00041	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > > >

; 140  :     auto _UFirst      = _Get_unwrapped(_First);

  0004e	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  00056	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@$0A@@std@@YAPEBUnal_info@@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,0>
  0005b	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax

; 141  :     const auto _ULast = _Get_unwrapped(_Last);

  00060	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Last$[rsp]
  00068	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@$0A@@std@@YAPEBUnal_info@@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,0>
  0006d	48 89 44 24 38	 mov	 QWORD PTR _ULast$[rsp], rax

; 142  :     for (; _UFirst != _ULast; ++_UFirst) {

  00072	eb 0e		 jmp	 SHORT $LN4@find_if
$LN2@find_if:
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _UFirst$[rsp]
  00079	48 83 c0 18	 add	 rax, 24
  0007d	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@find_if:
  00082	48 8b 44 24 38	 mov	 rax, QWORD PTR _ULast$[rsp]
  00087	48 39 44 24 28	 cmp	 QWORD PTR _UFirst$[rsp], rax
  0008c	74 31		 je	 SHORT $LN3@find_if

; 143  :         if (_Pred(*_UFirst)) {

  0008e	48 8d 44 24 40	 lea	 rax, QWORD PTR $T4[rsp]
  00093	48 8b f8	 mov	 rdi, rax
  00096	48 8b 74 24 28	 mov	 rsi, QWORD PTR _UFirst$[rsp]
  0009b	b9 18 00 00 00	 mov	 ecx, 24
  000a0	f3 a4		 rep movsb
  000a2	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T4[rsp]
  000a7	48 8d 8c 24 a8
	00 00 00	 lea	 rcx, QWORD PTR _Pred$[rsp]
  000af	e8 00 00 00 00	 call	 ??R<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@QEBA_NUnal_info@@@Z ; <lambda_f0f721445d981f5d1c40edf2de63bc8d>::operator()
  000b4	0f b6 c0	 movzx	 eax, al
  000b7	85 c0		 test	 eax, eax
  000b9	74 02		 je	 SHORT $LN5@find_if

; 144  :             break;

  000bb	eb 02		 jmp	 SHORT $LN3@find_if
$LN5@find_if:

; 145  :         }
; 146  :     }

  000bd	eb b5		 jmp	 SHORT $LN2@find_if
$LN3@find_if:

; 147  : 
; 148  :     _Seek_wrapped(_First, _UFirst);

  000bf	48 8d 54 24 28	 lea	 rdx, QWORD PTR _UFirst$[rsp]
  000c4	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  000cc	e8 00 00 00 00	 call	 ??$_Seek_wrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@PEBUnal_info@@@std@@YAXAEAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@AEBQEBUnal_info@@@Z ; std::_Seek_wrapped<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,nal_info const *>

; 149  :     return _First;

  000d1	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _First$[rsp]
  000d9	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000e1	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
  000e6	8b 44 24 60	 mov	 eax, DWORD PTR $T5[rsp]
  000ea	83 c8 01	 or	 eax, 1
  000ed	89 44 24 60	 mov	 DWORD PTR $T5[rsp], eax
  000f1	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  000f9	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  000fe	90		 npad	 1
  000ff	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Last$[rsp]
  00107	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0010c	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 150  : }

  00114	48 8b f8	 mov	 rdi, rax
  00117	48 8b cc	 mov	 rcx, rsp
  0011a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z$rtcFrameData
  00121	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00126	48 8b c7	 mov	 rax, rdi
  00129	48 83 c4 78	 add	 rsp, 120		; 00000078H
  0012d	5f		 pop	 rdi
  0012e	5e		 pop	 rsi
  0012f	c3		 ret	 0
  00130	cc		 int	 3
??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z ENDP ; std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_f0f721445d981f5d1c40edf2de63bc8d> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA PROC ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_f0f721445d981f5d1c40edf2de63bc8d> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_f0f721445d981f5d1c40edf2de63bc8d> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA PROC ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_f0f721445d981f5d1c40edf2de63bc8d> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 98 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_f0f721445d981f5d1c40edf2de63bc8d> >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA PROC ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_f0f721445d981f5d1c40edf2de63bc8d> >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T5[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN10@dtor$2
  0001d	83 65 60 fe	 and	 DWORD PTR $T5[rbp], -2
  00021	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN10@dtor$2:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_f0f721445d981f5d1c40edf2de63bc8d> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA PROC ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_f0f721445d981f5d1c40edf2de63bc8d> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_f0f721445d981f5d1c40edf2de63bc8d> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA PROC ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_f0f721445d981f5d1c40edf2de63bc8d> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 98 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_f0f721445d981f5d1c40edf2de63bc8d> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA PROC ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_f0f721445d981f5d1c40edf2de63bc8d> >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T5[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN10@dtor$2
  0001d	83 65 60 fe	 and	 DWORD PTR $T5[rbp], -2
  00021	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN10@dtor$2:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$2@?0???$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_f0f721445d981f5d1c40edf2de63bc8d> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
;	COMDAT ??R<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@QEBA_NUnal_info@@@Z
_TEXT	SEGMENT
tv67 = 0
this$ = 32
info$ = 40
??R<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@QEBA_NUnal_info@@@Z PROC ; <lambda_f0f721445d981f5d1c40edf2de63bc8d>::operator(), COMDAT

; 330  :             const auto hevc_vps_nal = std::find_if(nal_list.begin(), nal_list.end(), [](nal_info info) { return info.type == NALU_HEVC_VPS; });

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]
  00023	48 8b 44 24 28	 mov	 rax, QWORD PTR info$[rsp]
  00028	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]
  0002c	83 f8 20	 cmp	 eax, 32			; 00000020H
  0002f	75 09		 jne	 SHORT $LN3@operator
  00031	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv67[rsp], 1
  00038	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0003a	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv67[rsp], 0
$LN4@operator:
  00041	0f b6 04 24	 movzx	 eax, BYTE PTR tv67[rsp]
  00045	48 83 c4 10	 add	 rsp, 16
  00049	5f		 pop	 rdi
  0004a	c3		 ret	 0
??R<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@QEBA_NUnal_info@@@Z ENDP ; <lambda_f0f721445d981f5d1c40edf2de63bc8d>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z
_TEXT	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z PROC ; std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_c9b8cf6142d60d923da63780b9f1f11d> >, COMDAT

; 138  : _NODISCARD _InIt find_if(_InIt _First, const _InIt _Last, _Pr _Pred) { // find first satisfying _Pred

  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 78	 sub	 rsp, 120		; 00000078H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 1e 00 00 00	 mov	 ecx, 30
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  00031	c7 44 24 60 00
	00 00 00	 mov	 DWORD PTR $T5[rsp], 0

; 139  :     _Adl_verify_range(_First, _Last);

  00039	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR _Last$[rsp]
  00041	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > > >

; 140  :     auto _UFirst      = _Get_unwrapped(_First);

  0004e	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  00056	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@$0A@@std@@YAPEAUnal_info@@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,0>
  0005b	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax

; 141  :     const auto _ULast = _Get_unwrapped(_Last);

  00060	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Last$[rsp]
  00068	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@$0A@@std@@YAPEAUnal_info@@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,0>
  0006d	48 89 44 24 38	 mov	 QWORD PTR _ULast$[rsp], rax

; 142  :     for (; _UFirst != _ULast; ++_UFirst) {

  00072	eb 0e		 jmp	 SHORT $LN4@find_if
$LN2@find_if:
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _UFirst$[rsp]
  00079	48 83 c0 18	 add	 rax, 24
  0007d	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@find_if:
  00082	48 8b 44 24 38	 mov	 rax, QWORD PTR _ULast$[rsp]
  00087	48 39 44 24 28	 cmp	 QWORD PTR _UFirst$[rsp], rax
  0008c	74 31		 je	 SHORT $LN3@find_if

; 143  :         if (_Pred(*_UFirst)) {

  0008e	48 8d 44 24 40	 lea	 rax, QWORD PTR $T4[rsp]
  00093	48 8b f8	 mov	 rdi, rax
  00096	48 8b 74 24 28	 mov	 rsi, QWORD PTR _UFirst$[rsp]
  0009b	b9 18 00 00 00	 mov	 ecx, 24
  000a0	f3 a4		 rep movsb
  000a2	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T4[rsp]
  000a7	48 8d 8c 24 a8
	00 00 00	 lea	 rcx, QWORD PTR _Pred$[rsp]
  000af	e8 00 00 00 00	 call	 ??R<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@QEBA_NUnal_info@@@Z ; <lambda_c9b8cf6142d60d923da63780b9f1f11d>::operator()
  000b4	0f b6 c0	 movzx	 eax, al
  000b7	85 c0		 test	 eax, eax
  000b9	74 02		 je	 SHORT $LN5@find_if

; 144  :             break;

  000bb	eb 02		 jmp	 SHORT $LN3@find_if
$LN5@find_if:

; 145  :         }
; 146  :     }

  000bd	eb b5		 jmp	 SHORT $LN2@find_if
$LN3@find_if:

; 147  : 
; 148  :     _Seek_wrapped(_First, _UFirst);

  000bf	48 8d 54 24 28	 lea	 rdx, QWORD PTR _UFirst$[rsp]
  000c4	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  000cc	e8 00 00 00 00	 call	 ??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@PEAUnal_info@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@AEBQEAUnal_info@@@Z ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,nal_info *>

; 149  :     return _First;

  000d1	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _First$[rsp]
  000d9	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000e1	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
  000e6	8b 44 24 60	 mov	 eax, DWORD PTR $T5[rsp]
  000ea	83 c8 01	 or	 eax, 1
  000ed	89 44 24 60	 mov	 DWORD PTR $T5[rsp], eax
  000f1	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  000f9	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  000fe	90		 npad	 1
  000ff	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Last$[rsp]
  00107	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0010c	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 150  : }

  00114	48 8b f8	 mov	 rdi, rax
  00117	48 8b cc	 mov	 rcx, rsp
  0011a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z$rtcFrameData
  00121	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00126	48 8b c7	 mov	 rax, rdi
  00129	48 83 c4 78	 add	 rsp, 120		; 00000078H
  0012d	5f		 pop	 rdi
  0012e	5e		 pop	 rsi
  0012f	c3		 ret	 0
  00130	cc		 int	 3
??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z ENDP ; std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_c9b8cf6142d60d923da63780b9f1f11d> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_c9b8cf6142d60d923da63780b9f1f11d> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_c9b8cf6142d60d923da63780b9f1f11d> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_c9b8cf6142d60d923da63780b9f1f11d> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 98 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_c9b8cf6142d60d923da63780b9f1f11d> >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_c9b8cf6142d60d923da63780b9f1f11d> >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T5[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN10@dtor$2
  0001d	83 65 60 fe	 and	 DWORD PTR $T5[rbp], -2
  00021	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN10@dtor$2:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_c9b8cf6142d60d923da63780b9f1f11d> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_c9b8cf6142d60d923da63780b9f1f11d> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_c9b8cf6142d60d923da63780b9f1f11d> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_c9b8cf6142d60d923da63780b9f1f11d> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 98 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_c9b8cf6142d60d923da63780b9f1f11d> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 96
__$ReturnUdt$ = 144
_First$ = 152
_Last$ = 160
_Pred$ = 168
?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_c9b8cf6142d60d923da63780b9f1f11d> >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T5[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN10@dtor$2
  0001d	83 65 60 fe	 and	 DWORD PTR $T5[rbp], -2
  00021	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN10@dtor$2:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_c9b8cf6142d60d923da63780b9f1f11d> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
;	COMDAT ??R<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@QEBA_NUnal_info@@@Z
_TEXT	SEGMENT
tv67 = 0
this$ = 32
info$ = 40
??R<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@QEBA_NUnal_info@@@Z PROC ; <lambda_c9b8cf6142d60d923da63780b9f1f11d>::operator(), COMDAT

; 291  :             auto sps_nal = std::find_if(nal_list.begin(), nal_list.end(), [](nal_info info) { return info.type == NALU_HEVC_SPS; });

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]
  00023	48 8b 44 24 28	 mov	 rax, QWORD PTR info$[rsp]
  00028	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]
  0002c	83 f8 21	 cmp	 eax, 33			; 00000021H
  0002f	75 09		 jne	 SHORT $LN3@operator
  00031	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv67[rsp], 1
  00038	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0003a	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv67[rsp], 0
$LN4@operator:
  00041	0f b6 04 24	 movzx	 eax, BYTE PTR tv67[rsp]
  00045	48 83 c4 10	 add	 rsp, 16
  00049	5f		 pop	 rdi
  0004a	c3		 ret	 0
??R<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@QEBA_NUnal_info@@@Z ENDP ; <lambda_c9b8cf6142d60d923da63780b9f1f11d>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT ??$sprintf_s@$0IA@@@YAHAEAY0IA@DPEBDZZ
_TEXT	SEGMENT
_ArgList$ = 40
_Buffer$ = 80
_Format$ = 88
??$sprintf_s@$0IA@@@YAHAEAY0IA@DPEBDZZ PROC		; sprintf_s<128>, COMDAT

; 1858 :         )

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000f	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1853 :     __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1_ARGLIST(

  0002d	48 8d 44 24 60	 lea	 rax, QWORD PTR _Format$[rsp+8]
  00032	48 89 44 24 28	 mov	 QWORD PTR _ArgList$[rsp], rax
  00037	4c 8b 4c 24 28	 mov	 r9, QWORD PTR _ArgList$[rsp]
  0003c	4c 8b 44 24 58	 mov	 r8, QWORD PTR _Format$[rsp]
  00041	ba 80 00 00 00	 mov	 edx, 128		; 00000080H
  00046	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Buffer$[rsp]
  0004b	e8 00 00 00 00	 call	 vsprintf_s
  00050	48 8b f8	 mov	 rdi, rax
  00053	48 8b cc	 mov	 rcx, rsp
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$sprintf_s@$0IA@@@YAHAEAY0IA@DPEBDZZ$rtcFrameData
  0005d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00062	48 8b c7	 mov	 rax, rdi
  00065	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00069	5f		 pop	 rdi
  0006a	c3		 ret	 0
??$sprintf_s@$0IA@@@YAHAEAY0IA@DPEBDZZ ENDP		; sprintf_s<128>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@PEAUAVBSFContext@@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
_Dt$ = 80
??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@PEAUAVBSFContext@@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@@Z PROC ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> ><RGYAVDeleter<AVBSFContext>,0>, COMDAT

; 1827 :     unique_ptr(pointer _Ptr, _Dx&& _Dt) noexcept : _Mypair(_One_then_variadic_args_t(), _STD move(_Dt), _Ptr) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dt$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$move@AEAU?$RGYAVDeleter@UAVBSFContext@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAU1@@Z ; std::move<RGYAVDeleter<AVBSFContext> &>
  00032	90		 npad	 1
  00033	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00038	4c 8d 4c 24 48	 lea	 r9, QWORD PTR _Ptr$[rsp]
  0003d	4c 8b c0	 mov	 r8, rax
  00040	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00045	e8 00 00 00 00	 call	 ??$?0U?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAPEAUAVBSFContext@@@Z ; std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0><RGYAVDeleter<AVBSFContext>,AVBSFContext * &>
  0004a	90		 npad	 1
  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@PEAUAVBSFContext@@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@@Z ENDP ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> ><RGYAVDeleter<AVBSFContext>,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
_Dt$ = 80
?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@PEAUAVBSFContext@@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@@Z@4HA PROC ; `std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> ><RGYAVDeleter<AVBSFContext>,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@PEAUAVBSFContext@@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@@Z@4HA ENDP ; `std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> ><RGYAVDeleter<AVBSFContext>,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
_Dt$ = 80
?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@PEAUAVBSFContext@@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@@Z@4HA PROC ; `std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> ><RGYAVDeleter<AVBSFContext>,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@PEAUAVBSFContext@@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@@Z@4HA ENDP ; `std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> ><RGYAVDeleter<AVBSFContext>,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@P6AXPEAPEAUAVBSFContext@@@Z@Z
_TEXT	SEGMENT
this$ = 48
_Func$ = 56
??$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@P6AXPEAPEAUAVBSFContext@@@Z@Z PROC ; std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)><void (__cdecl*)(AVBSFContext * *),void>, COMDAT

; 1167 :     function(_Fx _Func) { // construct wrapper holding copy of _Func

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ??0?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ ; std::_Func_class<void,AVBSFContext * *>::_Func_class<void,AVBSFContext * *>
  0002d	90		 npad	 1

; 1168 :         this->_Reset(_STD move(_Func));

  0002e	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Func$[rsp]
  00033	e8 00 00 00 00	 call	 ??$move@AEAP6AXPEAPEAUAVBSFContext@@@Z@std@@YA$$QEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z ; std::move<void (__cdecl*&)(AVBSFContext * *)>
  00038	48 8b d0	 mov	 rdx, rax
  0003b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00040	e8 00 00 00 00	 call	 ??$_Reset@P6AXPEAPEAUAVBSFContext@@@Z@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAX$$QEAP6AXPEAPEAUAVBSFContext@@@Z@Z ; std::_Func_class<void,AVBSFContext * *>::_Reset<void (__cdecl*)(AVBSFContext * *)>
  00045	90		 npad	 1

; 1169 :     }

  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@P6AXPEAPEAUAVBSFContext@@@Z@Z ENDP ; std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)><void (__cdecl*)(AVBSFContext * *),void>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Func$ = 56
?dtor$0@?0???$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@P6AXPEAPEAUAVBSFContext@@@Z@Z@4HA PROC ; `std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)><void (__cdecl*)(AVBSFContext * *),void>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ ; std::_Func_class<void,AVBSFContext * *>::~_Func_class<void,AVBSFContext * *>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@P6AXPEAPEAUAVBSFContext@@@Z@Z@4HA ENDP ; `std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)><void (__cdecl*)(AVBSFContext * *),void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Func$ = 56
?dtor$0@?0???$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@P6AXPEAPEAUAVBSFContext@@@Z@Z@4HA PROC ; `std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)><void (__cdecl*)(AVBSFContext * *),void>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ ; std::_Func_class<void,AVBSFContext * *>::~_Func_class<void,AVBSFContext * *>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@P6AXPEAPEAUAVBSFContext@@@Z@Z@4HA ENDP ; `std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)><void (__cdecl*)(AVBSFContext * *),void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$invoke@AEAP6AXPEAPEAUAVBSFContext@@@ZPEAPEAU1@@std@@YAXAEAP6AXPEAPEAUAVBSFContext@@@Z$$QEAPEAPEAU1@@Z
_TEXT	SEGMENT
tv64 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$invoke@AEAP6AXPEAPEAUAVBSFContext@@@ZPEAPEAU1@@std@@YAXAEAP6AXPEAPEAUAVBSFContext@@@Z$$QEAPEAPEAU1@@Z PROC ; std::invoke<void (__cdecl*&)(AVBSFContext * *),AVBSFContext * *>, COMDAT

; 1571 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@PEAPEAUAVBSFContext@@@std@@YA$$QEAPEAPEAUAVBSFContext@@AEAPEAPEAU1@@Z ; std::forward<AVBSFContext * *>
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv64[rsp], rax
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00037	e8 00 00 00 00	 call	 ??$forward@AEAP6AXPEAPEAUAVBSFContext@@@Z@std@@YAAEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z ; std::forward<void (__cdecl*&)(AVBSFContext * *)>
  0003c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv64[rsp]
  00041	48 8b d1	 mov	 rdx, rcx
  00044	48 8b c8	 mov	 rcx, rax
  00047	e8 00 00 00 00	 call	 ??$_Call@AEAP6AXPEAPEAUAVBSFContext@@@ZPEAPEAU1@@_Invoker_functor@std@@SAXAEAP6AXPEAPEAUAVBSFContext@@@Z$$QEAPEAPEAU2@@Z ; std::_Invoker_functor::_Call<void (__cdecl*&)(AVBSFContext * *),AVBSFContext * *>
  0004c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00050	5f		 pop	 rdi
  00051	c3		 ret	 0
??$invoke@AEAP6AXPEAPEAUAVBSFContext@@@ZPEAPEAU1@@std@@YAXAEAP6AXPEAPEAUAVBSFContext@@@Z$$QEAPEAPEAU1@@Z ENDP ; std::invoke<void (__cdecl*&)(AVBSFContext * *),AVBSFContext * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$_Call@AEAP6AXPEAPEAUAVBSFContext@@@ZPEAPEAU1@@_Invoker_functor@std@@SAXAEAP6AXPEAPEAUAVBSFContext@@@Z$$QEAPEAPEAU2@@Z
_TEXT	SEGMENT
tv66 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Call@AEAP6AXPEAPEAUAVBSFContext@@@ZPEAPEAU1@@_Invoker_functor@std@@SAXAEAP6AXPEAPEAUAVBSFContext@@@Z$$QEAPEAPEAU2@@Z PROC ; std::_Invoker_functor::_Call<void (__cdecl*&)(AVBSFContext * *),AVBSFContext * *>, COMDAT

; 1571 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@PEAPEAUAVBSFContext@@@std@@YA$$QEAPEAPEAUAVBSFContext@@AEAPEAPEAU1@@Z ; std::forward<AVBSFContext * *>
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv66[rsp], rax
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00037	e8 00 00 00 00	 call	 ??$forward@AEAP6AXPEAPEAUAVBSFContext@@@Z@std@@YAAEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z ; std::forward<void (__cdecl*&)(AVBSFContext * *)>
  0003c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv66[rsp]
  00041	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00044	ff 10		 call	 QWORD PTR [rax]
  00046	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
??$_Call@AEAP6AXPEAPEAUAVBSFContext@@@ZPEAPEAU1@@_Invoker_functor@std@@SAXAEAP6AXPEAPEAUAVBSFContext@@@Z$$QEAPEAPEAU2@@Z ENDP ; std::_Invoker_functor::_Call<void (__cdecl*&)(AVBSFContext * *),AVBSFContext * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAPEAUAVBSFContext@@@std@@YA$$QEAPEAPEAUAVBSFContext@@AEAPEAPEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAPEAUAVBSFContext@@@std@@YA$$QEAPEAPEAUAVBSFContext@@AEAPEAPEAU1@@Z PROC ; std::forward<AVBSFContext * *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@PEAPEAUAVBSFContext@@@std@@YA$$QEAPEAPEAUAVBSFContext@@AEAPEAPEAU1@@Z ENDP ; std::forward<AVBSFContext * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAP6AXPEAPEAUAVBSFContext@@@Z@std@@YAAEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAP6AXPEAPEAUAVBSFContext@@@Z@std@@YAAEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z PROC ; std::forward<void (__cdecl*&)(AVBSFContext * *)>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAP6AXPEAPEAUAVBSFContext@@@Z@std@@YAAEAP6AXPEAPEAUAVBSFContext@@@ZAEAP6AX0@Z@Z ENDP ; std::forward<void (__cdecl*&)(AVBSFContext * *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@$0A@@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@PEAUAVCodecParameters@@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
_Dt$ = 80
??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@$0A@@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@PEAUAVCodecParameters@@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@@Z PROC ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> ><RGYAVDeleter<AVCodecParameters>,0>, COMDAT

; 1827 :     unique_ptr(pointer _Ptr, _Dx&& _Dt) noexcept : _Mypair(_One_then_variadic_args_t(), _STD move(_Dt), _Ptr) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dt$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$move@AEAU?$RGYAVDeleter@UAVCodecParameters@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAU1@@Z ; std::move<RGYAVDeleter<AVCodecParameters> &>
  00032	90		 npad	 1
  00033	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00038	4c 8d 4c 24 48	 lea	 r9, QWORD PTR _Ptr$[rsp]
  0003d	4c 8b c0	 mov	 r8, rax
  00040	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00045	e8 00 00 00 00	 call	 ??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@AEAPEAUAVCodecParameters@@@Z ; std::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0>::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0><RGYAVDeleter<AVCodecParameters>,AVCodecParameters * &>
  0004a	90		 npad	 1
  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@$0A@@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@PEAUAVCodecParameters@@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@@Z ENDP ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> ><RGYAVDeleter<AVCodecParameters>,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
_Dt$ = 80
?dtor$0@?0???$?0U?$RGYAVDeleter@UAVCodecParameters@@@@$0A@@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@PEAUAVCodecParameters@@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@@Z@4HA PROC ; `std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> ><RGYAVDeleter<AVCodecParameters>,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0U?$RGYAVDeleter@UAVCodecParameters@@@@$0A@@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@PEAUAVCodecParameters@@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@@Z@4HA ENDP ; `std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> ><RGYAVDeleter<AVCodecParameters>,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
_Dt$ = 80
?dtor$0@?0???$?0U?$RGYAVDeleter@UAVCodecParameters@@@@$0A@@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@PEAUAVCodecParameters@@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@@Z@4HA PROC ; `std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> ><RGYAVDeleter<AVCodecParameters>,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0U?$RGYAVDeleter@UAVCodecParameters@@@@$0A@@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@PEAUAVCodecParameters@@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@@Z@4HA ENDP ; `std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> ><RGYAVDeleter<AVCodecParameters>,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ PROC ; std::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0>::~_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0>, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ??1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ
  0002b	90		 npad	 1
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
??1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ ENDP ; std::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0>::~_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0>::~_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0>::~_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0>::~_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0>::~_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAAAEAU?$RGYAVDeleter@UAVCodecParameters@@@@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAAAEAU?$RGYAVDeleter@UAVCodecParameters@@@@XZ PROC ; std::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0>::_Get_first, COMDAT

; 1443 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1444 :         return _Myval1;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1445 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAAAEAU?$RGYAVDeleter@UAVCodecParameters@@@@XZ ENDP ; std::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ
_TEXT	SEGMENT
this$ = 16
?get@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ PROC ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::get, COMDAT

; 1895 :     _NODISCARD pointer get() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1896 :         return _Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 40	 mov	 rax, QWORD PTR [rax+64]

; 1897 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?get@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ ENDP ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??C?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ
_TEXT	SEGMENT
this$ = 16
??C?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ PROC ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::operator->, COMDAT

; 1891 :     _NODISCARD pointer operator->() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1892 :         return _Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 40	 mov	 rax, QWORD PTR [rax+64]

; 1893 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
??C?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ ENDP ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ PROC ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::~unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >, COMDAT

; 1873 :     ~unique_ptr() noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1874 :         if (_Mypair._Myval2) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 40 00	 cmp	 QWORD PTR [rax+64], 0
  00028	74 20		 je	 SHORT $LN2@unique_ptr

; 1875 :             _Mypair._Get_first()(_Mypair._Myval2);

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b c8	 mov	 rcx, rax
  00032	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAAAEAU?$RGYAVDeleter@UAVCodecParameters@@@@XZ ; std::_Compressed_pair<RGYAVDeleter<AVCodecParameters>,AVCodecParameters *,0>::_Get_first
  00037	90		 npad	 1
  00038	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003d	48 8b 51 40	 mov	 rdx, QWORD PTR [rcx+64]
  00041	48 8b c8	 mov	 rcx, rax
  00044	e8 00 00 00 00	 call	 ??R?$RGYAVDeleter@UAVCodecParameters@@@@QEAAXPEAUAVCodecParameters@@@Z ; RGYAVDeleter<AVCodecParameters>::operator()
  00049	90		 npad	 1
$LN2@unique_ptr:

; 1876 :         }
; 1877 :     }

  0004a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004f	48 8b c8	 mov	 rcx, rax
  00052	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ
  00057	90		 npad	 1
  00058	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ ENDP ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::~unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ@4HA PROC ; `std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::~unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ@4HA ENDP ; `std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::~unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ@4HA PROC ; `std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::~unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@U?$RGYAVDeleter@UAVCodecParameters@@@@PEAUAVCodecParameters@@$0A@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ@4HA ENDP ; `std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::~unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@P6AXPEAPEAUAVCodecParameters@@@Z@Z
_TEXT	SEGMENT
this$ = 48
_Func$ = 56
??$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@P6AXPEAPEAUAVCodecParameters@@@Z@Z PROC ; std::function<void __cdecl(AVCodecParameters * *)>::function<void __cdecl(AVCodecParameters * *)><void (__cdecl*)(AVCodecParameters * *),void>, COMDAT

; 1167 :     function(_Fx _Func) { // construct wrapper holding copy of _Func

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ??0?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ ; std::_Func_class<void,AVCodecParameters * *>::_Func_class<void,AVCodecParameters * *>
  0002d	90		 npad	 1

; 1168 :         this->_Reset(_STD move(_Func));

  0002e	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Func$[rsp]
  00033	e8 00 00 00 00	 call	 ??$move@AEAP6AXPEAPEAUAVCodecParameters@@@Z@std@@YA$$QEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z ; std::move<void (__cdecl*&)(AVCodecParameters * *)>
  00038	48 8b d0	 mov	 rdx, rax
  0003b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00040	e8 00 00 00 00	 call	 ??$_Reset@P6AXPEAPEAUAVCodecParameters@@@Z@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAX$$QEAP6AXPEAPEAUAVCodecParameters@@@Z@Z ; std::_Func_class<void,AVCodecParameters * *>::_Reset<void (__cdecl*)(AVCodecParameters * *)>
  00045	90		 npad	 1

; 1169 :     }

  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@P6AXPEAPEAUAVCodecParameters@@@Z@Z ENDP ; std::function<void __cdecl(AVCodecParameters * *)>::function<void __cdecl(AVCodecParameters * *)><void (__cdecl*)(AVCodecParameters * *),void>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Func$ = 56
?dtor$0@?0???$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@P6AXPEAPEAUAVCodecParameters@@@Z@Z@4HA PROC ; `std::function<void __cdecl(AVCodecParameters * *)>::function<void __cdecl(AVCodecParameters * *)><void (__cdecl*)(AVCodecParameters * *),void>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ ; std::_Func_class<void,AVCodecParameters * *>::~_Func_class<void,AVCodecParameters * *>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@P6AXPEAPEAUAVCodecParameters@@@Z@Z@4HA ENDP ; `std::function<void __cdecl(AVCodecParameters * *)>::function<void __cdecl(AVCodecParameters * *)><void (__cdecl*)(AVCodecParameters * *),void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Func$ = 56
?dtor$0@?0???$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@P6AXPEAPEAUAVCodecParameters@@@Z@Z@4HA PROC ; `std::function<void __cdecl(AVCodecParameters * *)>::function<void __cdecl(AVCodecParameters * *)><void (__cdecl*)(AVCodecParameters * *),void>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ ; std::_Func_class<void,AVCodecParameters * *>::~_Func_class<void,AVCodecParameters * *>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@P6AXPEAPEAUAVCodecParameters@@@Z@Z@4HA ENDP ; `std::function<void __cdecl(AVCodecParameters * *)>::function<void __cdecl(AVCodecParameters * *)><void (__cdecl*)(AVCodecParameters * *),void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$invoke@AEAP6AXPEAPEAUAVCodecParameters@@@ZPEAPEAU1@@std@@YAXAEAP6AXPEAPEAUAVCodecParameters@@@Z$$QEAPEAPEAU1@@Z
_TEXT	SEGMENT
tv64 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$invoke@AEAP6AXPEAPEAUAVCodecParameters@@@ZPEAPEAU1@@std@@YAXAEAP6AXPEAPEAUAVCodecParameters@@@Z$$QEAPEAPEAU1@@Z PROC ; std::invoke<void (__cdecl*&)(AVCodecParameters * *),AVCodecParameters * *>, COMDAT

; 1571 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@PEAPEAUAVCodecParameters@@@std@@YA$$QEAPEAPEAUAVCodecParameters@@AEAPEAPEAU1@@Z ; std::forward<AVCodecParameters * *>
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv64[rsp], rax
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00037	e8 00 00 00 00	 call	 ??$forward@AEAP6AXPEAPEAUAVCodecParameters@@@Z@std@@YAAEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z ; std::forward<void (__cdecl*&)(AVCodecParameters * *)>
  0003c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv64[rsp]
  00041	48 8b d1	 mov	 rdx, rcx
  00044	48 8b c8	 mov	 rcx, rax
  00047	e8 00 00 00 00	 call	 ??$_Call@AEAP6AXPEAPEAUAVCodecParameters@@@ZPEAPEAU1@@_Invoker_functor@std@@SAXAEAP6AXPEAPEAUAVCodecParameters@@@Z$$QEAPEAPEAU2@@Z ; std::_Invoker_functor::_Call<void (__cdecl*&)(AVCodecParameters * *),AVCodecParameters * *>
  0004c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00050	5f		 pop	 rdi
  00051	c3		 ret	 0
??$invoke@AEAP6AXPEAPEAUAVCodecParameters@@@ZPEAPEAU1@@std@@YAXAEAP6AXPEAPEAUAVCodecParameters@@@Z$$QEAPEAPEAU1@@Z ENDP ; std::invoke<void (__cdecl*&)(AVCodecParameters * *),AVCodecParameters * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$_Call@AEAP6AXPEAPEAUAVCodecParameters@@@ZPEAPEAU1@@_Invoker_functor@std@@SAXAEAP6AXPEAPEAUAVCodecParameters@@@Z$$QEAPEAPEAU2@@Z
_TEXT	SEGMENT
tv66 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Call@AEAP6AXPEAPEAUAVCodecParameters@@@ZPEAPEAU1@@_Invoker_functor@std@@SAXAEAP6AXPEAPEAUAVCodecParameters@@@Z$$QEAPEAPEAU2@@Z PROC ; std::_Invoker_functor::_Call<void (__cdecl*&)(AVCodecParameters * *),AVCodecParameters * *>, COMDAT

; 1571 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@PEAPEAUAVCodecParameters@@@std@@YA$$QEAPEAPEAUAVCodecParameters@@AEAPEAPEAU1@@Z ; std::forward<AVCodecParameters * *>
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv66[rsp], rax
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00037	e8 00 00 00 00	 call	 ??$forward@AEAP6AXPEAPEAUAVCodecParameters@@@Z@std@@YAAEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z ; std::forward<void (__cdecl*&)(AVCodecParameters * *)>
  0003c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv66[rsp]
  00041	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00044	ff 10		 call	 QWORD PTR [rax]
  00046	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
??$_Call@AEAP6AXPEAPEAUAVCodecParameters@@@ZPEAPEAU1@@_Invoker_functor@std@@SAXAEAP6AXPEAPEAUAVCodecParameters@@@Z$$QEAPEAPEAU2@@Z ENDP ; std::_Invoker_functor::_Call<void (__cdecl*&)(AVCodecParameters * *),AVCodecParameters * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAPEAUAVCodecParameters@@@std@@YA$$QEAPEAPEAUAVCodecParameters@@AEAPEAPEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAPEAUAVCodecParameters@@@std@@YA$$QEAPEAPEAUAVCodecParameters@@AEAPEAPEAU1@@Z PROC ; std::forward<AVCodecParameters * *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@PEAPEAUAVCodecParameters@@@std@@YA$$QEAPEAPEAUAVCodecParameters@@AEAPEAPEAU1@@Z ENDP ; std::forward<AVCodecParameters * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAP6AXPEAPEAUAVCodecParameters@@@Z@std@@YAAEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAP6AXPEAPEAUAVCodecParameters@@@Z@std@@YAAEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z PROC ; std::forward<void (__cdecl*&)(AVCodecParameters * *)>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAP6AXPEAPEAUAVCodecParameters@@@Z@std@@YAAEAP6AXPEAPEAUAVCodecParameters@@@ZAEAP6AX0@Z@Z ENDP ; std::forward<void (__cdecl*&)(AVCodecParameters * *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@$$QEAU0@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@$$QEAU0@@Z PROC ; RGYAVDeleter<AVCodecParameters>::RGYAVDeleter<AVCodecParameters>, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b d0	 mov	 rdx, rax
  00030	e8 00 00 00 00	 call	 ??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@$$QEAV01@@Z ; std::function<void __cdecl(AVCodecParameters * *)>::function<void __cdecl(AVCodecParameters * *)>
  00035	90		 npad	 1
  00036	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@$$QEAU0@@Z ENDP ; RGYAVDeleter<AVCodecParameters>::RGYAVDeleter<AVCodecParameters>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@$$QEAU0@@Z@4HA PROC ; `RGYAVDeleter<AVCodecParameters>::RGYAVDeleter<AVCodecParameters>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@$$QEAU0@@Z@4HA ENDP ; `RGYAVDeleter<AVCodecParameters>::RGYAVDeleter<AVCodecParameters>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@$$QEAU0@@Z@4HA PROC ; `RGYAVDeleter<AVCodecParameters>::RGYAVDeleter<AVCodecParameters>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@$$QEAU0@@Z@4HA ENDP ; `RGYAVDeleter<AVCodecParameters>::RGYAVDeleter<AVCodecParameters>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ PROC	; RGYAVDeleter<AVCodecParameters>::~RGYAVDeleter<AVCodecParameters>, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ
  0002b	90		 npad	 1
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
??1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ ENDP	; RGYAVDeleter<AVCodecParameters>::~RGYAVDeleter<AVCodecParameters>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ@4HA PROC ; `RGYAVDeleter<AVCodecParameters>::~RGYAVDeleter<AVCodecParameters>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ@4HA ENDP ; `RGYAVDeleter<AVCodecParameters>::~RGYAVDeleter<AVCodecParameters>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ@4HA PROC ; `RGYAVDeleter<AVCodecParameters>::~RGYAVDeleter<AVCodecParameters>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ@4HA ENDP ; `RGYAVDeleter<AVCodecParameters>::~RGYAVDeleter<AVCodecParameters>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ PROC ; std::function<void __cdecl(AVCodecParameters * *)>::~function<void __cdecl(AVCodecParameters * *)>, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ ; std::_Func_class<void,AVCodecParameters * *>::~_Func_class<void,AVCodecParameters * *>
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ ENDP ; std::function<void __cdecl(AVCodecParameters * *)>::~function<void __cdecl(AVCodecParameters * *)>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ@4HA PROC ; `std::function<void __cdecl(AVCodecParameters * *)>::~function<void __cdecl(AVCodecParameters * *)>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ ; std::_Func_class<void,AVCodecParameters * *>::~_Func_class<void,AVCodecParameters * *>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ@4HA ENDP ; `std::function<void __cdecl(AVCodecParameters * *)>::~function<void __cdecl(AVCodecParameters * *)>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ@4HA PROC ; `std::function<void __cdecl(AVCodecParameters * *)>::~function<void __cdecl(AVCodecParameters * *)>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ ; std::_Func_class<void,AVCodecParameters * *>::~_Func_class<void,AVCodecParameters * *>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ@4HA ENDP ; `std::function<void __cdecl(AVCodecParameters * *)>::~function<void __cdecl(AVCodecParameters * *)>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@$$QEAV01@@Z PROC ; std::function<void __cdecl(AVCodecParameters * *)>::function<void __cdecl(AVCodecParameters * *)>, COMDAT

; 1197 :     function(function&& _Right) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ??0?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ ; std::_Func_class<void,AVCodecParameters * *>::_Func_class<void,AVCodecParameters * *>
  0002d	90		 npad	 1

; 1198 :         this->_Reset_move(_STD move(_Right));

  0002e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00033	e8 00 00 00 00	 call	 ??$move@AEAV?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@0@AEAV10@@Z ; std::move<std::function<void __cdecl(AVCodecParameters * *)> &>
  00038	90		 npad	 1
  00039	48 8b d0	 mov	 rdx, rax
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ?_Reset_move@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAX$$QEAV12@@Z ; std::_Func_class<void,AVCodecParameters * *>::_Reset_move
  00046	90		 npad	 1

; 1199 :     }

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00050	5f		 pop	 rdi
  00051	c3		 ret	 0
??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@$$QEAV01@@Z ENDP ; std::function<void __cdecl(AVCodecParameters * *)>::function<void __cdecl(AVCodecParameters * *)>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Right$ = 56
?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::function<void __cdecl(AVCodecParameters * *)>::function<void __cdecl(AVCodecParameters * *)>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ ; std::_Func_class<void,AVCodecParameters * *>::~_Func_class<void,AVCodecParameters * *>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::function<void __cdecl(AVCodecParameters * *)>::function<void __cdecl(AVCodecParameters * *)>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Right$ = 56
?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::function<void __cdecl(AVCodecParameters * *)>::function<void __cdecl(AVCodecParameters * *)>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ ; std::_Func_class<void,AVCodecParameters * *>::~_Func_class<void,AVCodecParameters * *>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::function<void __cdecl(AVCodecParameters * *)>::function<void __cdecl(AVCodecParameters * *)>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@AEBV01@@Z PROC ; std::function<void __cdecl(AVCodecParameters * *)>::function<void __cdecl(AVCodecParameters * *)>, COMDAT

; 1162 :     function(const function& _Right) { // construct holding copy of _Right

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ??0?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ ; std::_Func_class<void,AVCodecParameters * *>::_Func_class<void,AVCodecParameters * *>
  0002d	90		 npad	 1

; 1163 :         this->_Reset_copy(_Right);

  0002e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00033	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00038	e8 00 00 00 00	 call	 ?_Reset_copy@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAXAEBV12@@Z ; std::_Func_class<void,AVCodecParameters * *>::_Reset_copy
  0003d	90		 npad	 1

; 1164 :     }

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@AEBV01@@Z ENDP ; std::function<void __cdecl(AVCodecParameters * *)>::function<void __cdecl(AVCodecParameters * *)>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Right$ = 56
?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::function<void __cdecl(AVCodecParameters * *)>::function<void __cdecl(AVCodecParameters * *)>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ ; std::_Func_class<void,AVCodecParameters * *>::~_Func_class<void,AVCodecParameters * *>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::function<void __cdecl(AVCodecParameters * *)>::function<void __cdecl(AVCodecParameters * *)>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Right$ = 56
?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::function<void __cdecl(AVCodecParameters * *)>::function<void __cdecl(AVCodecParameters * *)>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ ; std::_Func_class<void,AVCodecParameters * *>::~_Func_class<void,AVCodecParameters * *>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::function<void __cdecl(AVCodecParameters * *)>::function<void __cdecl(AVCodecParameters * *)>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Set@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@@Z
_TEXT	SEGMENT
this$ = 16
_Ptr$ = 24
?_Set@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@@Z PROC ; std::_Func_class<void,AVCodecParameters * *>::_Set, COMDAT

; 1133 :     void _Set(_Ptrt* _Ptr) noexcept { // store pointer to object

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 1134 :         _Mystorage._Ptrs[_Small_object_num_ptrs - 1] = _Ptr;

  0000b	b8 08 00 00 00	 mov	 eax, 8
  00010	48 6b c0 07	 imul	 rax, rax, 7
  00014	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00019	48 8b 54 24 18	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0001e	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 1135 :     }

  00022	5f		 pop	 rdi
  00023	c3		 ret	 0
?_Set@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@@Z ENDP ; std::_Func_class<void,AVCodecParameters * *>::_Set
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Getimpl@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Getimpl@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@XZ PROC ; std::_Func_class<void,AVCodecParameters * *>::_Getimpl, COMDAT

; 1129 :     _Ptrt* _Getimpl() const noexcept { // get pointer to object

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1130 :         return _Mystorage._Ptrs[_Small_object_num_ptrs - 1];

  00006	b8 08 00 00 00	 mov	 eax, 8
  0000b	48 6b c0 07	 imul	 rax, rax, 7
  0000f	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00014	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]

; 1131 :     }

  00018	5f		 pop	 rdi
  00019	c3		 ret	 0
?_Getimpl@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@XZ ENDP ; std::_Func_class<void,AVCodecParameters * *>::_Getimpl
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Local@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEBA_NXZ
_TEXT	SEGMENT
tv68 = 32
this$ = 64
?_Local@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEBA_NXZ PROC ; std::_Func_class<void,AVCodecParameters * *>::_Local, COMDAT

; 1117 :     bool _Local() const noexcept { // test for locally stored copy of object

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1118 :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@XZ ; std::_Func_class<void,AVCodecParameters * *>::_Getimpl
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 3b c1	 cmp	 rax, rcx
  00030	75 0a		 jne	 SHORT $LN3@Local
  00032	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv68[rsp], 1
  0003a	eb 08		 jmp	 SHORT $LN4@Local
$LN3@Local:
  0003c	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv68[rsp], 0
$LN4@Local:
  00044	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv68[rsp]

; 1119 :     }

  00049	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004d	5f		 pop	 rdi
  0004e	c3		 ret	 0
?_Local@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEBA_NXZ ENDP ; std::_Func_class<void,AVCodecParameters * *>::_Local
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Tidy@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAXXZ
_TEXT	SEGMENT
tv78 = 32
tv71 = 40
this$ = 64
?_Tidy@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAXXZ PROC ; std::_Func_class<void,AVCodecParameters * *>::_Tidy, COMDAT

; 1086 :     void _Tidy() noexcept { // clean up

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1087 :         if (!_Empty()) { // destroy callable object and maybe delete it

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Empty@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEBA_NXZ ; std::_Func_class<void,AVCodecParameters * *>::_Empty
  00028	0f b6 c0	 movzx	 eax, al
  0002b	85 c0		 test	 eax, eax
  0002d	75 4d		 jne	 SHORT $LN2@Tidy

; 1088 :             _Getimpl()->_Delete_this(!_Local());

  0002f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00034	e8 00 00 00 00	 call	 ?_Local@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEBA_NXZ ; std::_Func_class<void,AVCodecParameters * *>::_Local
  00039	0f b6 c0	 movzx	 eax, al
  0003c	85 c0		 test	 eax, eax
  0003e	75 07		 jne	 SHORT $LN4@Tidy
  00040	c6 44 24 20 01	 mov	 BYTE PTR tv78[rsp], 1
  00045	eb 05		 jmp	 SHORT $LN5@Tidy
$LN4@Tidy:
  00047	c6 44 24 20 00	 mov	 BYTE PTR tv78[rsp], 0
$LN5@Tidy:
  0004c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00051	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@XZ ; std::_Func_class<void,AVCodecParameters * *>::_Getimpl
  00056	48 89 44 24 28	 mov	 QWORD PTR tv71[rsp], rax
  0005b	48 8b 44 24 28	 mov	 rax, QWORD PTR tv71[rsp]
  00060	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00063	0f b6 54 24 20	 movzx	 edx, BYTE PTR tv78[rsp]
  00068	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv71[rsp]
  0006d	ff 50 20	 call	 QWORD PTR [rax+32]

; 1089 :             _Set(nullptr);

  00070	33 d2		 xor	 edx, edx
  00072	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00077	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@@Z ; std::_Func_class<void,AVCodecParameters * *>::_Set
$LN2@Tidy:

; 1090 :         }
; 1091 :     }

  0007c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00080	5f		 pop	 rdi
  00081	c3		 ret	 0
?_Tidy@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAXXZ ENDP ; std::_Func_class<void,AVCodecParameters * *>::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Reset_move@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAX$$QEAV12@@Z
_TEXT	SEGMENT
tv76 = 32
tv90 = 40
this$ = 64
_Right$ = 72
?_Reset_move@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAX$$QEAV12@@Z PROC ; std::_Func_class<void,AVCodecParameters * *>::_Reset_move, COMDAT

; 1029 :     void _Reset_move(_Func_class&& _Right) noexcept { // move _Right's stored object

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1030 :         if (!_Right._Empty()) {

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Empty@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEBA_NXZ ; std::_Func_class<void,AVCodecParameters * *>::_Empty
  0002d	0f b6 c0	 movzx	 eax, al
  00030	85 c0		 test	 eax, eax
  00032	75 7e		 jne	 SHORT $LN2@Reset_move

; 1031 :             if (_Right._Local()) { // move and tidy

  00034	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00039	e8 00 00 00 00	 call	 ?_Local@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEBA_NXZ ; std::_Func_class<void,AVCodecParameters * *>::_Local
  0003e	0f b6 c0	 movzx	 eax, al
  00041	85 c0		 test	 eax, eax
  00043	74 4a		 je	 SHORT $LN3@Reset_move

; 1032 :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  00045	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0004a	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@XZ ; std::_Func_class<void,AVCodecParameters * *>::_Getimpl
  0004f	48 89 44 24 20	 mov	 QWORD PTR tv76[rsp], rax
  00054	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv76[rsp]
  0005e	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00061	48 89 4c 24 28	 mov	 QWORD PTR tv90[rsp], rcx
  00066	48 8b d0	 mov	 rdx, rax
  00069	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv76[rsp]
  0006e	48 8b 44 24 28	 mov	 rax, QWORD PTR tv90[rsp]
  00073	ff 50 08	 call	 QWORD PTR [rax+8]
  00076	48 8b d0	 mov	 rdx, rax
  00079	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0007e	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@@Z ; std::_Func_class<void,AVCodecParameters * *>::_Set

; 1033 :                 _Right._Tidy();

  00083	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00088	e8 00 00 00 00	 call	 ?_Tidy@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAXXZ ; std::_Func_class<void,AVCodecParameters * *>::_Tidy

; 1034 :             } else { // steal from _Right

  0008d	eb 23		 jmp	 SHORT $LN4@Reset_move
$LN3@Reset_move:

; 1035 :                 _Set(_Right._Getimpl());

  0008f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00094	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@XZ ; std::_Func_class<void,AVCodecParameters * *>::_Getimpl
  00099	48 8b d0	 mov	 rdx, rax
  0009c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000a1	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@@Z ; std::_Func_class<void,AVCodecParameters * *>::_Set

; 1036 :                 _Right._Set(nullptr);

  000a6	33 d2		 xor	 edx, edx
  000a8	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  000ad	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@@Z ; std::_Func_class<void,AVCodecParameters * *>::_Set
$LN4@Reset_move:
$LN2@Reset_move:

; 1037 :             }
; 1038 :         }
; 1039 :     }

  000b2	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000b6	5f		 pop	 rdi
  000b7	c3		 ret	 0
?_Reset_move@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAX$$QEAV12@@Z ENDP ; std::_Func_class<void,AVCodecParameters * *>::_Reset_move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Reset_copy@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAXAEBV12@@Z
_TEXT	SEGMENT
tv72 = 32
tv73 = 40
this$ = 64
_Right$ = 72
?_Reset_copy@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAXAEBV12@@Z PROC ; std::_Func_class<void,AVCodecParameters * *>::_Reset_copy, COMDAT

; 1023 :     void _Reset_copy(const _Func_class& _Right) { // copy _Right's stored object

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1024 :         if (!_Right._Empty()) {

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Empty@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEBA_NXZ ; std::_Func_class<void,AVCodecParameters * *>::_Empty
  0002d	0f b6 c0	 movzx	 eax, al
  00030	85 c0		 test	 eax, eax
  00032	75 3d		 jne	 SHORT $LN2@Reset_copy

; 1025 :             _Set(_Right._Getimpl()->_Copy(&_Mystorage));

  00034	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00039	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@XZ ; std::_Func_class<void,AVCodecParameters * *>::_Getimpl
  0003e	48 89 44 24 20	 mov	 QWORD PTR tv72[rsp], rax
  00043	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv72[rsp]
  0004d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00050	48 89 4c 24 28	 mov	 QWORD PTR tv73[rsp], rcx
  00055	48 8b d0	 mov	 rdx, rax
  00058	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv72[rsp]
  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR tv73[rsp]
  00062	ff 10		 call	 QWORD PTR [rax]
  00064	48 8b d0	 mov	 rdx, rax
  00067	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006c	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@@Z ; std::_Func_class<void,AVCodecParameters * *>::_Set
$LN2@Reset_copy:

; 1026 :         }
; 1027 :     }

  00071	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00075	5f		 pop	 rdi
  00076	c3		 ret	 0
?_Reset_copy@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAXAEBV12@@Z ENDP ; std::_Func_class<void,AVCodecParameters * *>::_Reset_copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Empty@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEBA_NXZ
_TEXT	SEGMENT
tv67 = 32
this$ = 64
?_Empty@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEBA_NXZ PROC ; std::_Func_class<void,AVCodecParameters * *>::_Empty, COMDAT

; 1019 :     bool _Empty() const noexcept { // return true if no stored object

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1020 :         return !_Getimpl();

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@XZ ; std::_Func_class<void,AVCodecParameters * *>::_Getimpl
  00028	48 85 c0	 test	 rax, rax
  0002b	75 0a		 jne	 SHORT $LN3@Empty
  0002d	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv67[rsp], 1
  00035	eb 08		 jmp	 SHORT $LN4@Empty
$LN3@Empty:
  00037	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv67[rsp], 0
$LN4@Empty:
  0003f	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv67[rsp]

; 1021 :     }

  00044	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Empty@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEBA_NXZ ENDP ; std::_Func_class<void,AVCodecParameters * *>::_Empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??1?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ PROC ; std::_Func_class<void,AVCodecParameters * *>::~_Func_class<void,AVCodecParameters * *>, COMDAT

; 1010 :     ~_Func_class() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1011 :         _Tidy();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEAAXXZ ; std::_Func_class<void,AVCodecParameters * *>::_Tidy

; 1012 :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ ENDP ; std::_Func_class<void,AVCodecParameters * *>::~_Func_class<void,AVCodecParameters * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??R?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEBAXPEAPEAUAVCodecParameters@@@Z
_TEXT	SEGMENT
_Impl$ = 32
tv76 = 40
this$ = 64
<_Args_0>$ = 72
??R?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEBAXPEAPEAUAVCodecParameters@@@Z PROC ; std::_Func_class<void,AVCodecParameters * *>::operator(), COMDAT

; 1002 :     _Ret operator()(_Types... _Args) const { // call through stored object

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1003 :         if (_Empty()) {

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Empty@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@IEBA_NXZ ; std::_Func_class<void,AVCodecParameters * *>::_Empty
  0002d	0f b6 c0	 movzx	 eax, al
  00030	85 c0		 test	 eax, eax
  00032	74 05		 je	 SHORT $LN2@operator

; 1004 :             _Xbad_function_call();

  00034	e8 00 00 00 00	 call	 ?_Xbad_function_call@std@@YAXXZ ; std::_Xbad_function_call
$LN2@operator:

; 1005 :         }
; 1006 :         const auto _Impl = _Getimpl();

  00039	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003e	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@XZ ; std::_Func_class<void,AVCodecParameters * *>::_Getimpl
  00043	48 89 44 24 20	 mov	 QWORD PTR _Impl$[rsp], rax

; 1007 :         return _Impl->_Do_call(_STD forward<_Types>(_Args)...);

  00048	48 8d 4c 24 48	 lea	 rcx, QWORD PTR <_Args_0>$[rsp]
  0004d	e8 00 00 00 00	 call	 ??$forward@PEAPEAUAVCodecParameters@@@std@@YA$$QEAPEAPEAUAVCodecParameters@@AEAPEAPEAU1@@Z ; std::forward<AVCodecParameters * *>
  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Impl$[rsp]
  00057	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0005a	48 89 4c 24 28	 mov	 QWORD PTR tv76[rsp], rcx
  0005f	48 8b d0	 mov	 rdx, rax
  00062	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Impl$[rsp]
  00067	48 8b 44 24 28	 mov	 rax, QWORD PTR tv76[rsp]
  0006c	ff 50 10	 call	 QWORD PTR [rax+16]
$LN3@operator:

; 1008 :     }

  0006f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00073	5f		 pop	 rdi
  00074	c3		 ret	 0
??R?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEBAXPEAPEAUAVCodecParameters@@@Z ENDP ; std::_Func_class<void,AVCodecParameters * *>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??0?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ PROC ; std::_Func_class<void,AVCodecParameters * *>::_Func_class<void,AVCodecParameters * *>, COMDAT

; 998  :     _Func_class() noexcept { // construct without stored object

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 999  :         _Set(nullptr);

  0001e	33 d2		 xor	 edx, edx
  00020	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00025	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVCodecParameters@@@2@@Z ; std::_Func_class<void,AVCodecParameters * *>::_Set

; 1000 :     }

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
??0?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEAA@XZ ENDP ; std::_Func_class<void,AVCodecParameters * *>::_Func_class<void,AVCodecParameters * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_avutil.h
;	COMDAT ??R?$RGYAVDeleter@UAVCodecParameters@@@@QEAAXPEAUAVCodecParameters@@@Z
_TEXT	SEGMENT
this$ = 48
p$ = 56
??R?$RGYAVDeleter@UAVCodecParameters@@@@QEAAXPEAUAVCodecParameters@@@Z PROC ; RGYAVDeleter<AVCodecParameters>::operator(), COMDAT

; 164  :     void operator()(T *p) { deleter(&p); }

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 54 24 38	 lea	 rdx, QWORD PTR p$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??R?$_Func_class@XPEAPEAUAVCodecParameters@@@std@@QEBAXPEAPEAUAVCodecParameters@@@Z ; std::_Func_class<void,AVCodecParameters * *>::operator()
  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
??R?$RGYAVDeleter@UAVCodecParameters@@@@QEAAXPEAUAVCodecParameters@@@Z ENDP ; RGYAVDeleter<AVCodecParameters>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_avutil.h
;	COMDAT ??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z
_TEXT	SEGMENT
this$ = 48
deleter$ = 56
??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z PROC ; RGYAVDeleter<AVCodecParameters>::RGYAVDeleter<AVCodecParameters>, COMDAT

; 163  :     RGYAVDeleter(std::function<void(T**)> deleter) : deleter(deleter) {};

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 54 24 38	 mov	 rdx, QWORD PTR deleter$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??0?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@AEBV01@@Z ; std::function<void __cdecl(AVCodecParameters * *)>::function<void __cdecl(AVCodecParameters * *)>
  00035	90		 npad	 1
  00036	48 8b 4c 24 38	 mov	 rcx, QWORD PTR deleter$[rsp]
  0003b	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ
  00040	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00045	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00049	5f		 pop	 rdi
  0004a	c3		 ret	 0
??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z ENDP ; RGYAVDeleter<AVCodecParameters>::RGYAVDeleter<AVCodecParameters>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
deleter$ = 56
?dtor$0@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z@4HA PROC ; `RGYAVDeleter<AVCodecParameters>::RGYAVDeleter<AVCodecParameters>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 38	 mov	 rcx, QWORD PTR deleter$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z@4HA ENDP ; `RGYAVDeleter<AVCodecParameters>::RGYAVDeleter<AVCodecParameters>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
deleter$ = 56
?dtor$1@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z@4HA PROC ; `RGYAVDeleter<AVCodecParameters>::RGYAVDeleter<AVCodecParameters>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z@4HA ENDP ; `RGYAVDeleter<AVCodecParameters>::RGYAVDeleter<AVCodecParameters>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
deleter$ = 56
?dtor$0@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z@4HA PROC ; `RGYAVDeleter<AVCodecParameters>::RGYAVDeleter<AVCodecParameters>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 38	 mov	 rcx, QWORD PTR deleter$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z@4HA ENDP ; `RGYAVDeleter<AVCodecParameters>::RGYAVDeleter<AVCodecParameters>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
deleter$ = 56
?dtor$1@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z@4HA PROC ; `RGYAVDeleter<AVCodecParameters>::RGYAVDeleter<AVCodecParameters>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z@4HA ENDP ; `RGYAVDeleter<AVCodecParameters>::RGYAVDeleter<AVCodecParameters>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ PROC ; std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0002f	90		 npad	 1
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ ENDP ; std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ@4HA PROC ; `std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ@4HA PROC ; `std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ PROC ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> ><RGYAVDeleter<AVBSFContext>,0>, COMDAT

; 1809 :     constexpr unique_ptr() noexcept : _Mypair(_Zero_then_variadic_args_t()) {}

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0><>
  00030	90		 npad	 1
  00031	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ ENDP ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> ><RGYAVDeleter<AVBSFContext>,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ@4HA PROC ; `std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> ><RGYAVDeleter<AVBSFContext>,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ@4HA ENDP ; `std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> ><RGYAVDeleter<AVBSFContext>,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ@4HA PROC ; `std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> ><RGYAVDeleter<AVBSFContext>,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ@4HA ENDP ; `std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> ><RGYAVDeleter<AVBSFContext>,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0Ualigned_malloc_deleter@@$0A@@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??$?0Ualigned_malloc_deleter@@$0A@@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ PROC ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::unique_ptr<unsigned char,aligned_malloc_deleter><aligned_malloc_deleter,0>, COMDAT

; 1809 :     constexpr unique_ptr() noexcept : _Mypair(_Zero_then_variadic_args_t()) {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1>::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1><>
  00030	90		 npad	 1
  00031	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??$?0Ualigned_malloc_deleter@@$0A@@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ ENDP ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::unique_ptr<unsigned char,aligned_malloc_deleter><aligned_malloc_deleter,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0Umalloc_deleter@@$0A@@?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??$?0Umalloc_deleter@@$0A@@?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ PROC ; std::unique_ptr<char,malloc_deleter>::unique_ptr<char,malloc_deleter><malloc_deleter,0>, COMDAT

; 1809 :     constexpr unique_ptr() noexcept : _Mypair(_Zero_then_variadic_args_t()) {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@Umalloc_deleter@@PEAD$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<malloc_deleter,char *,1>::_Compressed_pair<malloc_deleter,char *,1><>
  00030	90		 npad	 1
  00031	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??$?0Umalloc_deleter@@$0A@@?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ ENDP ; std::unique_ptr<char,malloc_deleter>::unique_ptr<char,malloc_deleter><malloc_deleter,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ PROC ; std::unique_ptr<_iobuf,fp_deleter>::unique_ptr<_iobuf,fp_deleter><fp_deleter,0>, COMDAT

; 1809 :     constexpr unique_ptr() noexcept : _Mypair(_Zero_then_variadic_args_t()) {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<fp_deleter,_iobuf *,1>::_Compressed_pair<fp_deleter,_iobuf *,1><>
  00030	90		 npad	 1
  00031	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ ENDP ; std::unique_ptr<_iobuf,fp_deleter>::unique_ptr<_iobuf,fp_deleter><fp_deleter,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
_TEXT	SEGMENT
buffer$ = 64
ptr$ = 328
len$ = 336
picstruct$ = 344
tv176 = 360
tv184 = 368
__$ArrayPad$ = 376
fp$ = 400
info$ = 408
?WriteY4MHeader@@YA?AW4RGY_ERR@@PEAU_iobuf@@PEBUVideoInfo@@@Z PROC ; WriteY4MHeader

; 32   : static RGY_ERR WriteY4MHeader(FILE *fp, const VideoInfo *info) {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 80 01
	00 00		 sub	 rsp, 384		; 00000180H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 60 00 00 00	 mov	 ecx, 96			; 00000060H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 90
	01 00 00	 mov	 rcx, QWORD PTR [rsp+400]
  00029	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00030	48 33 c4	 xor	 rax, rsp
  00033	48 89 84 24 78
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 33   :     char buffer[256] = { 0 };

  0003b	48 8d 44 24 40	 lea	 rax, QWORD PTR buffer$[rsp]
  00040	48 8b f8	 mov	 rdi, rax
  00043	33 c0		 xor	 eax, eax
  00045	b9 00 01 00 00	 mov	 ecx, 256		; 00000100H
  0004a	f3 aa		 rep stosb

; 34   :     char *ptr = buffer;

  0004c	48 8d 44 24 40	 lea	 rax, QWORD PTR buffer$[rsp]
  00051	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR ptr$[rsp], rax

; 35   :     uint32_t len = 0;

  00059	c7 84 24 50 01
	00 00 00 00 00
	00		 mov	 DWORD PTR len$[rsp], 0

; 36   :     memcpy(ptr, "YUV4MPEG2 ", 10);

  00064	41 b8 0a 00 00
	00		 mov	 r8d, 10
  0006a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG133590
  00071	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR ptr$[rsp]
  00079	e8 00 00 00 00	 call	 memcpy

; 37   :     len += 10;

  0007e	8b 84 24 50 01
	00 00		 mov	 eax, DWORD PTR len$[rsp]
  00085	83 c0 0a	 add	 eax, 10
  00088	89 84 24 50 01
	00 00		 mov	 DWORD PTR len$[rsp], eax

; 38   : 
; 39   :     len += sprintf_s(ptr+len, sizeof(buffer)-len, "W%d H%d ", info->dstWidth, info->dstHeight);

  0008f	8b 84 24 50 01
	00 00		 mov	 eax, DWORD PTR len$[rsp]
  00096	b9 00 01 00 00	 mov	 ecx, 256		; 00000100H
  0009b	48 2b c8	 sub	 rcx, rax
  0009e	48 8b c1	 mov	 rax, rcx
  000a1	8b 8c 24 50 01
	00 00		 mov	 ecx, DWORD PTR len$[rsp]
  000a8	48 8b 94 24 48
	01 00 00	 mov	 rdx, QWORD PTR ptr$[rsp]
  000b0	48 03 d1	 add	 rdx, rcx
  000b3	48 8b ca	 mov	 rcx, rdx
  000b6	48 8b 94 24 98
	01 00 00	 mov	 rdx, QWORD PTR info$[rsp]
  000be	8b 52 1c	 mov	 edx, DWORD PTR [rdx+28]
  000c1	89 54 24 20	 mov	 DWORD PTR [rsp+32], edx
  000c5	48 8b 94 24 98
	01 00 00	 mov	 rdx, QWORD PTR info$[rsp]
  000cd	44 8b 4a 18	 mov	 r9d, DWORD PTR [rdx+24]
  000d1	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG133591
  000d8	48 8b d0	 mov	 rdx, rax
  000db	e8 00 00 00 00	 call	 sprintf_s
  000e0	8b 8c 24 50 01
	00 00		 mov	 ecx, DWORD PTR len$[rsp]
  000e7	03 c8		 add	 ecx, eax
  000e9	8b c1		 mov	 eax, ecx
  000eb	89 84 24 50 01
	00 00		 mov	 DWORD PTR len$[rsp], eax

; 40   :     len += sprintf_s(ptr+len, sizeof(buffer)-len, "F%d:%d ", info->fpsN, info->fpsD);

  000f2	8b 84 24 50 01
	00 00		 mov	 eax, DWORD PTR len$[rsp]
  000f9	b9 00 01 00 00	 mov	 ecx, 256		; 00000100H
  000fe	48 2b c8	 sub	 rcx, rax
  00101	48 8b c1	 mov	 rax, rcx
  00104	8b 8c 24 50 01
	00 00		 mov	 ecx, DWORD PTR len$[rsp]
  0010b	48 8b 94 24 48
	01 00 00	 mov	 rdx, QWORD PTR ptr$[rsp]
  00113	48 03 d1	 add	 rdx, rcx
  00116	48 8b ca	 mov	 rcx, rdx
  00119	48 8b 94 24 98
	01 00 00	 mov	 rdx, QWORD PTR info$[rsp]
  00121	8b 52 30	 mov	 edx, DWORD PTR [rdx+48]
  00124	89 54 24 20	 mov	 DWORD PTR [rsp+32], edx
  00128	48 8b 94 24 98
	01 00 00	 mov	 rdx, QWORD PTR info$[rsp]
  00130	44 8b 4a 2c	 mov	 r9d, DWORD PTR [rdx+44]
  00134	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG133592
  0013b	48 8b d0	 mov	 rdx, rax
  0013e	e8 00 00 00 00	 call	 sprintf_s
  00143	8b 8c 24 50 01
	00 00		 mov	 ecx, DWORD PTR len$[rsp]
  0014a	03 c8		 add	 ecx, eax
  0014c	8b c1		 mov	 eax, ecx
  0014e	89 84 24 50 01
	00 00		 mov	 DWORD PTR len$[rsp], eax

; 41   : 
; 42   :     const char *picstruct = "Ip ";

  00155	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG133593
  0015c	48 89 84 24 58
	01 00 00	 mov	 QWORD PTR picstruct$[rsp], rax

; 43   :     if (info->picstruct & RGY_PICSTRUCT_TFF) {

  00164	ba 02 00 00 00	 mov	 edx, 2
  00169	48 8b 84 24 98
	01 00 00	 mov	 rax, QWORD PTR info$[rsp]
  00171	8b 48 50	 mov	 ecx, DWORD PTR [rax+80]
  00174	e8 00 00 00 00	 call	 ??I@YA?AW4RGY_PICSTRUCT@@W40@0@Z ; operator&
  00179	85 c0		 test	 eax, eax
  0017b	74 11		 je	 SHORT $LN2@WriteY4MHe

; 44   :         picstruct = "It ";

  0017d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG133596
  00184	48 89 84 24 58
	01 00 00	 mov	 QWORD PTR picstruct$[rsp], rax
  0018c	eb 28		 jmp	 SHORT $LN3@WriteY4MHe
$LN2@WriteY4MHe:

; 45   :     } else if (info->picstruct & RGY_PICSTRUCT_BFF) {

  0018e	ba 04 00 00 00	 mov	 edx, 4
  00193	48 8b 84 24 98
	01 00 00	 mov	 rax, QWORD PTR info$[rsp]
  0019b	8b 48 50	 mov	 ecx, DWORD PTR [rax+80]
  0019e	e8 00 00 00 00	 call	 ??I@YA?AW4RGY_PICSTRUCT@@W40@0@Z ; operator&
  001a3	85 c0		 test	 eax, eax
  001a5	74 0f		 je	 SHORT $LN4@WriteY4MHe

; 46   :         picstruct = "Ib ";

  001a7	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG133598
  001ae	48 89 84 24 58
	01 00 00	 mov	 QWORD PTR picstruct$[rsp], rax
$LN4@WriteY4MHe:
$LN3@WriteY4MHe:

; 47   :     }
; 48   :     strcpy_s(ptr+len, sizeof(buffer)-len, picstruct); len += 3;

  001b6	8b 84 24 50 01
	00 00		 mov	 eax, DWORD PTR len$[rsp]
  001bd	b9 00 01 00 00	 mov	 ecx, 256		; 00000100H
  001c2	48 2b c8	 sub	 rcx, rax
  001c5	48 8b c1	 mov	 rax, rcx
  001c8	8b 8c 24 50 01
	00 00		 mov	 ecx, DWORD PTR len$[rsp]
  001cf	48 8b 94 24 48
	01 00 00	 mov	 rdx, QWORD PTR ptr$[rsp]
  001d7	48 03 d1	 add	 rdx, rcx
  001da	48 8b ca	 mov	 rcx, rdx
  001dd	4c 8b 84 24 58
	01 00 00	 mov	 r8, QWORD PTR picstruct$[rsp]
  001e5	48 8b d0	 mov	 rdx, rax
  001e8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_strcpy_s
  001ee	8b 84 24 50 01
	00 00		 mov	 eax, DWORD PTR len$[rsp]
  001f5	83 c0 03	 add	 eax, 3
  001f8	89 84 24 50 01
	00 00		 mov	 DWORD PTR len$[rsp], eax

; 49   :     len += sprintf_s(ptr+len, sizeof(buffer)-len, "A%d:%d ", info->sar[0], info->sar[1]);

  001ff	b8 04 00 00 00	 mov	 eax, 4
  00204	48 6b c0 01	 imul	 rax, rax, 1
  00208	b9 04 00 00 00	 mov	 ecx, 4
  0020d	48 6b c9 00	 imul	 rcx, rcx, 0
  00211	8b 94 24 50 01
	00 00		 mov	 edx, DWORD PTR len$[rsp]
  00218	bf 00 01 00 00	 mov	 edi, 256		; 00000100H
  0021d	48 2b fa	 sub	 rdi, rdx
  00220	48 8b d7	 mov	 rdx, rdi
  00223	8b bc 24 50 01
	00 00		 mov	 edi, DWORD PTR len$[rsp]
  0022a	4c 8b 84 24 48
	01 00 00	 mov	 r8, QWORD PTR ptr$[rsp]
  00232	4c 03 c7	 add	 r8, rdi
  00235	49 8b f8	 mov	 rdi, r8
  00238	4c 8b 84 24 98
	01 00 00	 mov	 r8, QWORD PTR info$[rsp]
  00240	41 8b 44 00 44	 mov	 eax, DWORD PTR [r8+rax+68]
  00245	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00249	48 8b 84 24 98
	01 00 00	 mov	 rax, QWORD PTR info$[rsp]
  00251	44 8b 4c 08 44	 mov	 r9d, DWORD PTR [rax+rcx+68]
  00256	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG133599
  0025d	48 8b cf	 mov	 rcx, rdi
  00260	e8 00 00 00 00	 call	 sprintf_s
  00265	8b 8c 24 50 01
	00 00		 mov	 ecx, DWORD PTR len$[rsp]
  0026c	03 c8		 add	 ecx, eax
  0026e	8b c1		 mov	 eax, ecx
  00270	89 84 24 50 01
	00 00		 mov	 DWORD PTR len$[rsp], eax

; 50   :     strcpy_s(ptr+len, sizeof(buffer)-len, "C420mpeg2\n"); len += (mfxU32)strlen("C420mpeg2\n");

  00277	8b 84 24 50 01
	00 00		 mov	 eax, DWORD PTR len$[rsp]
  0027e	b9 00 01 00 00	 mov	 ecx, 256		; 00000100H
  00283	48 2b c8	 sub	 rcx, rax
  00286	48 8b c1	 mov	 rax, rcx
  00289	8b 8c 24 50 01
	00 00		 mov	 ecx, DWORD PTR len$[rsp]
  00290	48 8b 94 24 48
	01 00 00	 mov	 rdx, QWORD PTR ptr$[rsp]
  00298	48 03 d1	 add	 rdx, rcx
  0029b	48 8b ca	 mov	 rcx, rdx
  0029e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG133600
  002a5	48 8b d0	 mov	 rdx, rax
  002a8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_strcpy_s
  002ae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG133601
  002b5	e8 00 00 00 00	 call	 strlen
  002ba	8b 8c 24 50 01
	00 00		 mov	 ecx, DWORD PTR len$[rsp]
  002c1	03 c8		 add	 ecx, eax
  002c3	8b c1		 mov	 eax, ecx
  002c5	89 84 24 50 01
	00 00		 mov	 DWORD PTR len$[rsp], eax

; 51   :     return (len == fwrite(buffer, 1, len, fp)) ? RGY_ERR_NONE : RGY_ERR_UNDEFINED_BEHAVIOR;

  002cc	8b 84 24 50 01
	00 00		 mov	 eax, DWORD PTR len$[rsp]
  002d3	48 89 84 24 68
	01 00 00	 mov	 QWORD PTR tv176[rsp], rax
  002db	8b 8c 24 50 01
	00 00		 mov	 ecx, DWORD PTR len$[rsp]
  002e2	4c 8b 8c 24 90
	01 00 00	 mov	 r9, QWORD PTR fp$[rsp]
  002ea	44 8b c1	 mov	 r8d, ecx
  002ed	ba 01 00 00 00	 mov	 edx, 1
  002f2	48 8d 4c 24 40	 lea	 rcx, QWORD PTR buffer$[rsp]
  002f7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fwrite
  002fd	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR tv176[rsp]
  00305	48 3b c8	 cmp	 rcx, rax
  00308	75 0d		 jne	 SHORT $LN6@WriteY4MHe
  0030a	c7 84 24 70 01
	00 00 00 00 00
	00		 mov	 DWORD PTR tv184[rsp], 0
  00315	eb 0b		 jmp	 SHORT $LN7@WriteY4MHe
$LN6@WriteY4MHe:
  00317	c7 84 24 70 01
	00 00 f0 ff ff
	ff		 mov	 DWORD PTR tv184[rsp], -16
$LN7@WriteY4MHe:
  00322	8b 84 24 70 01
	00 00		 mov	 eax, DWORD PTR tv184[rsp]

; 52   : }

  00329	8b f8		 mov	 edi, eax
  0032b	48 8b cc	 mov	 rcx, rsp
  0032e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?WriteY4MHeader@@YA?AW4RGY_ERR@@PEAU_iobuf@@PEBUVideoInfo@@@Z$rtcFrameData
  00335	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0033a	8b c7		 mov	 eax, edi
  0033c	48 8b 8c 24 78
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00344	48 33 cc	 xor	 rcx, rsp
  00347	e8 00 00 00 00	 call	 __security_check_cookie
  0034c	48 81 c4 80 01
	00 00		 add	 rsp, 384		; 00000180H
  00353	5f		 pop	 rdi
  00354	c3		 ret	 0
?WriteY4MHeader@@YA?AW4RGY_ERR@@PEAU_iobuf@@PEBUVideoInfo@@@Z ENDP ; WriteY4MHeader
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_bitstream.h
_TEXT	SEGMENT
nal_list$ = 40
nal_start$6 = 104
i_fin$7 = 136
i$8 = 144
prev$9 = 168
$T10 = 200
$T11 = 224
tv128 = 228
tv65 = 232
tv170 = 240
tv159 = 248
__$ReturnUdt$ = 272
data$ = 280
size$ = 288
?parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z PROC ; parse_nal_unit_hevc

; 147  : static std::vector<nal_info> parse_nal_unit_hevc(const uint8_t *data, size_t size) {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 00 01
	00 00		 sub	 rsp, 256		; 00000100H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 10
	01 00 00	 mov	 rcx, QWORD PTR [rsp+272]
  0002e	c7 84 24 e0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T11[rsp], 0

; 148  :     std::vector<nal_info> nal_list;

  00039	48 8d 4c 24 28	 lea	 rcx, QWORD PTR nal_list$[rsp]
  0003e	e8 00 00 00 00	 call	 ??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::vector<nal_info,std::allocator<nal_info> >
  00043	90		 npad	 1

; 149  :     if (size > 3) {

  00044	48 83 bc 24 20
	01 00 00 03	 cmp	 QWORD PTR size$[rsp], 3
  0004d	0f 86 68 02 00
	00		 jbe	 $LN5@parse_nal_

; 150  :         nal_info nal_start = { nullptr, 0, 0 };

  00053	48 c7 44 24 68
	00 00 00 00	 mov	 QWORD PTR nal_start$6[rsp], 0
  0005c	c6 44 24 70 00	 mov	 BYTE PTR nal_start$6[rsp+8], 0
  00061	48 c7 44 24 78
	00 00 00 00	 mov	 QWORD PTR nal_start$6[rsp+16], 0

; 151  :         const auto i_fin = size - 3;

  0006a	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR size$[rsp]
  00072	48 83 e8 03	 sub	 rax, 3
  00076	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR i_fin$7[rsp], rax

; 152  : 
; 153  :         for (size_t i = 0; i < i_fin; i++) {

  0007e	48 c7 84 24 90
	00 00 00 00 00
	00 00		 mov	 QWORD PTR i$8[rsp], 0
  0008a	eb 13		 jmp	 SHORT $LN4@parse_nal_
$LN2@parse_nal_:
  0008c	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR i$8[rsp]
  00094	48 ff c0	 inc	 rax
  00097	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR i$8[rsp], rax
$LN4@parse_nal_:
  0009f	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR i_fin$7[rsp]
  000a7	48 39 84 24 90
	00 00 00	 cmp	 QWORD PTR i$8[rsp], rax
  000af	0f 83 ef 01 00
	00		 jae	 $LN3@parse_nal_

; 154  :             if (data[i+0] == 0 && data[i+1] == 0 && data[i+2] == 1) {

  000b5	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR i$8[rsp]
  000bd	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR data$[rsp]
  000c5	48 03 c8	 add	 rcx, rax
  000c8	48 8b c1	 mov	 rax, rcx
  000cb	0f b6 00	 movzx	 eax, BYTE PTR [rax]
  000ce	85 c0		 test	 eax, eax
  000d0	0f 85 c9 01 00
	00		 jne	 $LN6@parse_nal_
  000d6	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR i$8[rsp]
  000de	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR data$[rsp]
  000e6	48 03 c8	 add	 rcx, rax
  000e9	48 8b c1	 mov	 rax, rcx
  000ec	0f b6 40 01	 movzx	 eax, BYTE PTR [rax+1]
  000f0	85 c0		 test	 eax, eax
  000f2	0f 85 a7 01 00
	00		 jne	 $LN6@parse_nal_
  000f8	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR i$8[rsp]
  00100	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR data$[rsp]
  00108	48 03 c8	 add	 rcx, rax
  0010b	48 8b c1	 mov	 rax, rcx
  0010e	0f b6 40 02	 movzx	 eax, BYTE PTR [rax+2]
  00112	83 f8 01	 cmp	 eax, 1
  00115	0f 85 84 01 00
	00		 jne	 $LN6@parse_nal_

; 155  :                 if (nal_start.ptr) {

  0011b	48 83 7c 24 68
	00		 cmp	 QWORD PTR nal_start$6[rsp], 0
  00121	74 0f		 je	 SHORT $LN7@parse_nal_

; 156  :                     nal_list.push_back(nal_start);

  00123	48 8d 54 24 68	 lea	 rdx, QWORD PTR nal_start$6[rsp]
  00128	48 8d 4c 24 28	 lea	 rcx, QWORD PTR nal_list$[rsp]
  0012d	e8 00 00 00 00	 call	 ?push_back@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAXAEBUnal_info@@@Z ; std::vector<nal_info,std::allocator<nal_info> >::push_back
$LN7@parse_nal_:

; 157  :                 }
; 158  :                 nal_start.ptr = data + i - (i > 0 && data[i-1] == 0);

  00132	48 83 bc 24 90
	00 00 00 00	 cmp	 QWORD PTR i$8[rsp], 0
  0013b	76 2b		 jbe	 SHORT $LN11@parse_nal_
  0013d	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR i$8[rsp]
  00145	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR data$[rsp]
  0014d	48 03 c8	 add	 rcx, rax
  00150	48 8b c1	 mov	 rax, rcx
  00153	0f b6 40 ff	 movzx	 eax, BYTE PTR [rax-1]
  00157	85 c0		 test	 eax, eax
  00159	75 0d		 jne	 SHORT $LN11@parse_nal_
  0015b	c7 84 24 e4 00
	00 00 01 00 00
	00		 mov	 DWORD PTR tv128[rsp], 1
  00166	eb 0b		 jmp	 SHORT $LN12@parse_nal_
$LN11@parse_nal_:
  00168	c7 84 24 e4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR tv128[rsp], 0
$LN12@parse_nal_:
  00173	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR i$8[rsp]
  0017b	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR data$[rsp]
  00183	48 03 c8	 add	 rcx, rax
  00186	48 8b c1	 mov	 rax, rcx
  00189	48 63 8c 24 e4
	00 00 00	 movsxd	 rcx, DWORD PTR tv128[rsp]
  00191	48 2b c1	 sub	 rax, rcx
  00194	48 89 44 24 68	 mov	 QWORD PTR nal_start$6[rsp], rax

; 159  :                 nal_start.type = (data[i+3] & 0x7f) >> 1;

  00199	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR i$8[rsp]
  001a1	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR data$[rsp]
  001a9	48 03 c8	 add	 rcx, rax
  001ac	48 8b c1	 mov	 rax, rcx
  001af	0f b6 40 03	 movzx	 eax, BYTE PTR [rax+3]
  001b3	83 e0 7f	 and	 eax, 127		; 0000007fH
  001b6	d1 f8		 sar	 eax, 1
  001b8	88 44 24 70	 mov	 BYTE PTR nal_start$6[rsp+8], al

; 160  :                 nal_start.size = data + size - nal_start.ptr;

  001bc	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR size$[rsp]
  001c4	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR data$[rsp]
  001cc	48 03 c8	 add	 rcx, rax
  001cf	48 8b c1	 mov	 rax, rcx
  001d2	48 2b 44 24 68	 sub	 rax, QWORD PTR nal_start$6[rsp]
  001d7	48 89 44 24 78	 mov	 QWORD PTR nal_start$6[rsp+16], rax

; 161  :                 if (nal_list.size()) {

  001dc	48 8d 4c 24 28	 lea	 rcx, QWORD PTR nal_list$[rsp]
  001e1	e8 00 00 00 00	 call	 ?size@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA_KXZ ; std::vector<nal_info,std::allocator<nal_info> >::size
  001e6	48 85 c0	 test	 rax, rax
  001e9	0f 84 9c 00 00
	00		 je	 $LN8@parse_nal_

; 162  :                     auto prev = nal_list.end()-1;

  001ef	48 8d 94 24 c8
	00 00 00	 lea	 rdx, QWORD PTR $T10[rsp]
  001f7	48 8d 4c 24 28	 lea	 rcx, QWORD PTR nal_list$[rsp]
  001fc	e8 00 00 00 00	 call	 ?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::end
  00201	48 89 84 24 e8
	00 00 00	 mov	 QWORD PTR tv65[rsp], rax
  00209	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR tv65[rsp]
  00211	48 89 84 24 f0
	00 00 00	 mov	 QWORD PTR tv170[rsp], rax
  00219	41 b8 01 00 00
	00		 mov	 r8d, 1
  0021f	48 8d 94 24 a8
	00 00 00	 lea	 rdx, QWORD PTR prev$9[rsp]
  00227	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR tv170[rsp]
  0022f	e8 00 00 00 00	 call	 ??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator-
  00234	90		 npad	 1
  00235	48 8d 8c 24 c8
	00 00 00	 lea	 rcx, QWORD PTR $T10[rsp]
  0023d	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ

; 163  :                     prev->size = nal_start.ptr - prev->ptr;

  00242	48 8d 8c 24 a8
	00 00 00	 lea	 rcx, QWORD PTR prev$9[rsp]
  0024a	e8 00 00 00 00	 call	 ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEAUnal_info@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator->
  0024f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00252	48 8b 4c 24 68	 mov	 rcx, QWORD PTR nal_start$6[rsp]
  00257	48 2b c8	 sub	 rcx, rax
  0025a	48 8b c1	 mov	 rax, rcx
  0025d	48 89 84 24 f8
	00 00 00	 mov	 QWORD PTR tv159[rsp], rax
  00265	48 8d 8c 24 a8
	00 00 00	 lea	 rcx, QWORD PTR prev$9[rsp]
  0026d	e8 00 00 00 00	 call	 ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEAUnal_info@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator->
  00272	48 8b 8c 24 f8
	00 00 00	 mov	 rcx, QWORD PTR tv159[rsp]
  0027a	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 164  :                 }

  0027e	48 8d 8c 24 a8
	00 00 00	 lea	 rcx, QWORD PTR prev$9[rsp]
  00286	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN8@parse_nal_:

; 165  :                 i += 3;

  0028b	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR i$8[rsp]
  00293	48 83 c0 03	 add	 rax, 3
  00297	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR i$8[rsp], rax
$LN6@parse_nal_:

; 166  :             }
; 167  :         }

  0029f	e9 e8 fd ff ff	 jmp	 $LN2@parse_nal_
$LN3@parse_nal_:

; 168  :         if (nal_start.ptr) {

  002a4	48 83 7c 24 68
	00		 cmp	 QWORD PTR nal_start$6[rsp], 0
  002aa	74 0f		 je	 SHORT $LN5@parse_nal_

; 169  :             nal_list.push_back(nal_start);

  002ac	48 8d 54 24 68	 lea	 rdx, QWORD PTR nal_start$6[rsp]
  002b1	48 8d 4c 24 28	 lea	 rcx, QWORD PTR nal_list$[rsp]
  002b6	e8 00 00 00 00	 call	 ?push_back@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAXAEBUnal_info@@@Z ; std::vector<nal_info,std::allocator<nal_info> >::push_back
$LN5@parse_nal_:

; 170  :         }
; 171  :     }
; 172  :     return nal_list;

  002bb	48 8d 54 24 28	 lea	 rdx, QWORD PTR nal_list$[rsp]
  002c0	48 8b 8c 24 10
	01 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  002c8	e8 00 00 00 00	 call	 ??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::vector<nal_info,std::allocator<nal_info> >::vector<nal_info,std::allocator<nal_info> >
  002cd	8b 84 24 e0 00
	00 00		 mov	 eax, DWORD PTR $T11[rsp]
  002d4	83 c8 01	 or	 eax, 1
  002d7	89 84 24 e0 00
	00 00		 mov	 DWORD PTR $T11[rsp], eax
  002de	48 8d 4c 24 28	 lea	 rcx, QWORD PTR nal_list$[rsp]
  002e3	e8 00 00 00 00	 call	 ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
  002e8	48 8b 84 24 10
	01 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 173  : }

  002f0	48 8b f8	 mov	 rdi, rax
  002f3	48 8b cc	 mov	 rcx, rsp
  002f6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z$rtcFrameData
  002fd	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00302	48 8b c7	 mov	 rax, rdi
  00305	48 81 c4 00 01
	00 00		 add	 rsp, 256		; 00000100H
  0030c	5f		 pop	 rdi
  0030d	c3		 ret	 0
  0030e	cc		 int	 3
?parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z ENDP ; parse_nal_unit_hevc
_TEXT	ENDS
text$x	SEGMENT
nal_list$ = 40
nal_start$6 = 104
i_fin$7 = 136
i$8 = 144
prev$9 = 168
$T10 = 200
$T11 = 224
tv128 = 228
tv65 = 232
tv170 = 240
tv159 = 248
__$ReturnUdt$ = 272
data$ = 280
size$ = 288
?dtor$0@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA PROC ; `parse_nal_unit_hevc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR nal_list$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA ENDP ; `parse_nal_unit_hevc'::`1'::dtor$0
nal_list$ = 40
nal_start$6 = 104
i_fin$7 = 136
i$8 = 144
prev$9 = 168
$T10 = 200
$T11 = 224
tv128 = 228
tv65 = 232
tv170 = 240
tv159 = 248
__$ReturnUdt$ = 272
data$ = 280
size$ = 288
?dtor$1@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA PROC ; `parse_nal_unit_hevc'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA ENDP ; `parse_nal_unit_hevc'::`1'::dtor$1
nal_list$ = 40
nal_start$6 = 104
i_fin$7 = 136
i$8 = 144
prev$9 = 168
$T10 = 200
$T11 = 224
tv128 = 228
tv65 = 232
tv170 = 240
tv159 = 248
__$ReturnUdt$ = 272
data$ = 280
size$ = 288
?dtor$2@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA PROC ; `parse_nal_unit_hevc'::`1'::dtor$2
  00049	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00053	55		 push	 rbp
  00054	57		 push	 rdi
  00055	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00059	48 8b ea	 mov	 rbp, rdx
  0005c	48 8d 8d a8 00
	00 00		 lea	 rcx, QWORD PTR prev$9[rbp]
  00063	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00068	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006c	5f		 pop	 rdi
  0006d	5d		 pop	 rbp
  0006e	c3		 ret	 0
?dtor$2@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA ENDP ; `parse_nal_unit_hevc'::`1'::dtor$2
nal_list$ = 40
nal_start$6 = 104
i_fin$7 = 136
i$8 = 144
prev$9 = 168
$T10 = 200
$T11 = 224
tv128 = 228
tv65 = 232
tv170 = 240
tv159 = 248
__$ReturnUdt$ = 272
data$ = 280
size$ = 288
?dtor$3@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA PROC ; `parse_nal_unit_hevc'::`1'::dtor$3
  0006f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00074	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00079	55		 push	 rbp
  0007a	57		 push	 rdi
  0007b	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007f	48 8b ea	 mov	 rbp, rdx
  00082	8b 85 e0 00 00
	00		 mov	 eax, DWORD PTR $T11[rbp]
  00088	83 e0 01	 and	 eax, 1
  0008b	85 c0		 test	 eax, eax
  0008d	74 13		 je	 SHORT $LN17@dtor$3
  0008f	83 a5 e0 00 00
	00 fe		 and	 DWORD PTR $T11[rbp], -2
  00096	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0009d	e8 00 00 00 00	 call	 ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
$LN17@dtor$3:
  000a2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000a6	5f		 pop	 rdi
  000a7	5d		 pop	 rbp
  000a8	c3		 ret	 0
?dtor$3@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA ENDP ; `parse_nal_unit_hevc'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nal_list$ = 40
nal_start$6 = 104
i_fin$7 = 136
i$8 = 144
prev$9 = 168
$T10 = 200
$T11 = 224
tv128 = 228
tv65 = 232
tv170 = 240
tv159 = 248
__$ReturnUdt$ = 272
data$ = 280
size$ = 288
?dtor$0@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA PROC ; `parse_nal_unit_hevc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR nal_list$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA ENDP ; `parse_nal_unit_hevc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nal_list$ = 40
nal_start$6 = 104
i_fin$7 = 136
i$8 = 144
prev$9 = 168
$T10 = 200
$T11 = 224
tv128 = 228
tv65 = 232
tv170 = 240
tv159 = 248
__$ReturnUdt$ = 272
data$ = 280
size$ = 288
?dtor$1@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA PROC ; `parse_nal_unit_hevc'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA ENDP ; `parse_nal_unit_hevc'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nal_list$ = 40
nal_start$6 = 104
i_fin$7 = 136
i$8 = 144
prev$9 = 168
$T10 = 200
$T11 = 224
tv128 = 228
tv65 = 232
tv170 = 240
tv159 = 248
__$ReturnUdt$ = 272
data$ = 280
size$ = 288
?dtor$2@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA PROC ; `parse_nal_unit_hevc'::`1'::dtor$2
  00049	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00053	55		 push	 rbp
  00054	57		 push	 rdi
  00055	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00059	48 8b ea	 mov	 rbp, rdx
  0005c	48 8d 8d a8 00
	00 00		 lea	 rcx, QWORD PTR prev$9[rbp]
  00063	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00068	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006c	5f		 pop	 rdi
  0006d	5d		 pop	 rbp
  0006e	c3		 ret	 0
?dtor$2@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA ENDP ; `parse_nal_unit_hevc'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nal_list$ = 40
nal_start$6 = 104
i_fin$7 = 136
i$8 = 144
prev$9 = 168
$T10 = 200
$T11 = 224
tv128 = 228
tv65 = 232
tv170 = 240
tv159 = 248
__$ReturnUdt$ = 272
data$ = 280
size$ = 288
?dtor$3@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA PROC ; `parse_nal_unit_hevc'::`1'::dtor$3
  0006f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00074	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00079	55		 push	 rbp
  0007a	57		 push	 rdi
  0007b	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007f	48 8b ea	 mov	 rbp, rdx
  00082	8b 85 e0 00 00
	00		 mov	 eax, DWORD PTR $T11[rbp]
  00088	83 e0 01	 and	 eax, 1
  0008b	85 c0		 test	 eax, eax
  0008d	74 13		 je	 SHORT $LN17@dtor$3
  0008f	83 a5 e0 00 00
	00 fe		 and	 DWORD PTR $T11[rbp], -2
  00096	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0009d	e8 00 00 00 00	 call	 ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
$LN17@dtor$3:
  000a2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000a6	5f		 pop	 rdi
  000a7	5d		 pop	 rbp
  000a8	c3		 ret	 0
?dtor$3@?0??parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA ENDP ; `parse_nal_unit_hevc'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEAUnal_info@@XZ
_TEXT	SEGMENT
this$ = 48
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEAUnal_info@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Unwrapped, COMDAT

; 276  :     _NODISCARD value_type* _Unwrapped() const {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 277  :         return _Unfancy(this->_Ptr);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00027	e8 00 00 00 00	 call	 ??$_Unfancy@Unal_info@@@std@@YAPEAUnal_info@@PEAU1@@Z ; std::_Unfancy<nal_info>

; 278  :     }

  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEAUnal_info@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Unwrapped
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z
_TEXT	SEGMENT
_Tmp$ = 40
$T4 = 68
this$ = 96
__$ReturnUdt$ = 104
_Off$ = 112
??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator-, COMDAT

; 265  :     _NODISCARD _Vector_iterator operator-(const difference_type _Off) const {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]
  00028	c7 44 24 44 00
	00 00 00	 mov	 DWORD PTR $T4[rsp], 0

; 266  :         _Vector_iterator _Tmp = *this;

  00030	48 8b 54 24 60	 mov	 rdx, QWORD PTR this$[rsp]
  00035	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Tmp$[rsp]
  0003a	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z
  0003f	90		 npad	 1

; 267  :         return _Tmp -= _Off;

  00040	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Off$[rsp]
  00045	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Tmp$[rsp]
  0004a	e8 00 00 00 00	 call	 ??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator-=
  0004f	48 8b d0	 mov	 rdx, rax
  00052	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00057	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z
  0005c	8b 44 24 44	 mov	 eax, DWORD PTR $T4[rsp]
  00060	83 c8 01	 or	 eax, 1
  00063	89 44 24 44	 mov	 DWORD PTR $T4[rsp], eax
  00067	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Tmp$[rsp]
  0006c	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00071	48 8b 44 24 68	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 268  :     }

  00076	48 8b f8	 mov	 rdi, rax
  00079	48 8b cc	 mov	 rcx, rsp
  0007c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z$rtcFrameData
  00083	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00088	48 8b c7	 mov	 rax, rdi
  0008b	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
  00091	cc		 int	 3
??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator-
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tmp$ = 40
$T4 = 68
this$ = 96
__$ReturnUdt$ = 104
_Off$ = 112
?dtor$0@?0???G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator-'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _Tmp$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator-'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tmp$ = 40
$T4 = 68
this$ = 96
__$ReturnUdt$ = 104
_Off$ = 112
?dtor$1@?0???G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator-'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 44	 mov	 eax, DWORD PTR $T4[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN5@dtor$1
  0001d	83 65 44 fe	 and	 DWORD PTR $T4[rbp], -2
  00021	48 8b 4d 68	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN5@dtor$1:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$1@?0???G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator-'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Tmp$ = 40
$T4 = 68
this$ = 96
__$ReturnUdt$ = 104
_Off$ = 112
?dtor$0@?0???G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator-'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _Tmp$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator-'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Tmp$ = 40
$T4 = 68
this$ = 96
__$ReturnUdt$ = 104
_Off$ = 112
?dtor$1@?0???G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator-'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 44	 mov	 eax, DWORD PTR $T4[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN5@dtor$1
  0001d	83 65 44 fe	 and	 DWORD PTR $T4[rbp], -2
  00021	48 8b 4d 68	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN5@dtor$1:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$1@?0???G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator-'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator-=, COMDAT

; 258  :     _Vector_iterator& operator-=(const difference_type _Off) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 259  :         _Mybase::operator-=(_Off);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Off$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??Z?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator-=

; 260  :         return *this;

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]

; 261  :     }

  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??Z?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator-=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEAUnal_info@@XZ
_TEXT	SEGMENT
this$ = 48
??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEAUnal_info@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator->, COMDAT

; 222  :     _NODISCARD pointer operator->() const {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 223  :         return _Const_cast(_Mybase::operator->());

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEBUnal_info@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator->
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBUnal_info@@@std@@YAPEAUnal_info@@PEBU1@@Z ; std::_Const_cast<nal_info const >

; 224  :     }

  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEAUnal_info@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >, COMDAT

; 216  :     _Vector_iterator(pointer _Parg, const _Container_base* _Pvector) : _Mybase(_Parg, _Pvector) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Pvector$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Parg$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >
  0003c	90		 npad	 1
  0003d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00046	5f		 pop	 rdi
  00047	c3		 ret	 0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QEAA@AEBU01@@Z ; std::_Iterator_base12::_Iterator_base12
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __that$[rsp]
  0003d	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00041	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00045	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004e	5f		 pop	 rdi
  0004f	c3		 ret	 0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QEAA@AEBU01@@Z ; std::_Iterator_base12::_Iterator_base12
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __that$[rsp]
  0003d	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00041	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00045	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004e	5f		 pop	 rdi
  0004f	c3		 ret	 0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAXPEBUnal_info@@@Z
_TEXT	SEGMENT
this$ = 48
_It$ = 56
?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAXPEBUnal_info@@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Seek_to, COMDAT

; 188  :     void _Seek_to(const value_type* _It) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 189  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _It$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Refancy@PEAUnal_info@@$0A@@std@@YAPEAUnal_info@@PEAU1@@Z ; std::_Refancy<nal_info *,0>
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 190  :     }

  00036	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAXPEBUnal_info@@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Seek_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unwrapped@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEBUnal_info@@XZ
_TEXT	SEGMENT
this$ = 48
?_Unwrapped@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEBUnal_info@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Unwrapped, COMDAT

; 184  :     _NODISCARD const value_type* _Unwrapped() const {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 185  :         return _Unfancy(_Ptr);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00027	e8 00 00 00 00	 call	 ??$_Unfancy@Unal_info@@@std@@YAPEAUnal_info@@PEAU1@@Z ; std::_Unfancy<nal_info>

; 186  :     }

  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
?_Unwrapped@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEBUnal_info@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Unwrapped
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
tv69 = 48
_First$ = 80
_Last$ = 88
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@1@0@Z PROC ; std::_Verify_range, COMDAT

; 176  :     friend void _Verify_range(const _Vector_const_iterator& _First, const _Vector_const_iterator& _Last) {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
$LN4@Verify_ran:

; 177  :         _STL_VERIFY(_First._Getcont() == _Last._Getcont(), "vector iterators in range are from different containers");

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _First$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002d	48 89 44 24 30	 mov	 QWORD PTR tv69[rsp], rax
  00032	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Last$[rsp]
  00037	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv69[rsp]
  00041	48 3b c8	 cmp	 rcx, rax
  00044	75 02		 jne	 SHORT $LN14@Verify_ran
  00046	eb 6b		 jmp	 SHORT $LN15@Verify_ran
$LN14@Verify_ran:
$LN7@Verify_ran:
  00048	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@
  0004f	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00054	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0005b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00060	45 33 c9	 xor	 r9d, r9d
  00063	41 b8 b1 00 00
	00		 mov	 r8d, 177		; 000000b1H
  00069	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00070	b9 02 00 00 00	 mov	 ecx, 2
  00075	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0007b	83 f8 01	 cmp	 eax, 1
  0007e	75 03		 jne	 SHORT $LN19@Verify_ran
  00080	cc		 int	 3
  00081	33 c0		 xor	 eax, eax
$LN19@Verify_ran:
  00083	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0008c	41 b9 b1 00 00
	00		 mov	 r9d, 177		; 000000b1H
  00092	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00099	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
  000a0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
  000a7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000ad	33 c0		 xor	 eax, eax
  000af	85 c0		 test	 eax, eax
  000b1	75 95		 jne	 SHORT $LN7@Verify_ran
$LN15@Verify_ran:
  000b3	33 c0		 xor	 eax, eax
  000b5	85 c0		 test	 eax, eax
  000b7	0f 85 66 ff ff
	ff		 jne	 $LN4@Verify_ran
$LN10@Verify_ran:

; 178  :         _STL_VERIFY(_First._Ptr <= _Last._Ptr, "vector iterator range transposed");

  000bd	48 8b 44 24 50	 mov	 rax, QWORD PTR _First$[rsp]
  000c2	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Last$[rsp]
  000c7	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000cb	48 39 48 10	 cmp	 QWORD PTR [rax+16], rcx
  000cf	77 02		 ja	 SHORT $LN16@Verify_ran
  000d1	eb 6b		 jmp	 SHORT $LN17@Verify_ran
$LN16@Verify_ran:
$LN13@Verify_ran:
  000d3	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@
  000da	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000df	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  000e6	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000eb	45 33 c9	 xor	 r9d, r9d
  000ee	41 b8 b2 00 00
	00		 mov	 r8d, 178		; 000000b2H
  000f4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000fb	b9 02 00 00 00	 mov	 ecx, 2
  00100	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00106	83 f8 01	 cmp	 eax, 1
  00109	75 03		 jne	 SHORT $LN20@Verify_ran
  0010b	cc		 int	 3
  0010c	33 c0		 xor	 eax, eax
$LN20@Verify_ran:
  0010e	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00117	41 b9 b2 00 00
	00		 mov	 r9d, 178		; 000000b2H
  0011d	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00124	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
  0012b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
  00132	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00138	33 c0		 xor	 eax, eax
  0013a	85 c0		 test	 eax, eax
  0013c	75 95		 jne	 SHORT $LN13@Verify_ran
$LN17@Verify_ran:
  0013e	33 c0		 xor	 eax, eax
  00140	85 c0		 test	 eax, eax
  00142	0f 85 75 ff ff
	ff		 jne	 $LN10@Verify_ran

; 179  :     }

  00148	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0014c	5f		 pop	 rdi
  0014d	c3		 ret	 0
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@1@0@Z ENDP ; std::_Verify_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAXAEBV12@@Z
_TEXT	SEGMENT
tv69 = 48
this$ = 80
_Right$ = 88
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAXAEBV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Compat, COMDAT

; 167  :     void _Compat(const _Vector_const_iterator& _Right) const { // test for compatible iterator pair

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
$LN4@Compat:

; 168  : #if _ITERATOR_DEBUG_LEVEL == 0
; 169  :         (void) _Right;
; 170  : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 0 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 0 vvv
; 171  :         _STL_VERIFY(this->_Getcont() == _Right._Getcont(), "vector iterators incompatible");

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002d	48 89 44 24 30	 mov	 QWORD PTR tv69[rsp], rax
  00032	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00037	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv69[rsp]
  00041	48 3b c8	 cmp	 rcx, rax
  00044	75 02		 jne	 SHORT $LN8@Compat
  00046	eb 6b		 jmp	 SHORT $LN9@Compat
$LN8@Compat:
$LN7@Compat:
  00048	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BO@CAOBBIOC@vector?5iterators?5incompatible@
  0004f	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00054	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0005b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00060	45 33 c9	 xor	 r9d, r9d
  00063	41 b8 ab 00 00
	00		 mov	 r8d, 171		; 000000abH
  00069	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00070	b9 02 00 00 00	 mov	 ecx, 2
  00075	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0007b	83 f8 01	 cmp	 eax, 1
  0007e	75 03		 jne	 SHORT $LN11@Compat
  00080	cc		 int	 3
  00081	33 c0		 xor	 eax, eax
$LN11@Compat:
  00083	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0008c	41 b9 ab 00 00
	00		 mov	 r9d, 171		; 000000abH
  00092	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00099	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1NG@BALHEPOA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
  000a0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EA@DJDGNIII@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
  000a7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000ad	33 c0		 xor	 eax, eax
  000af	85 c0		 test	 eax, eax
  000b1	75 95		 jne	 SHORT $LN7@Compat
$LN9@Compat:
  000b3	33 c0		 xor	 eax, eax
  000b5	85 c0		 test	 eax, eax
  000b7	0f 85 66 ff ff
	ff		 jne	 $LN4@Compat

; 172  : #endif // _ITERATOR_DEBUG_LEVEL == 0
; 173  :     }

  000bd	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000c1	5f		 pop	 rdi
  000c2	c3		 ret	 0
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAXAEBV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv69 = 32
this$ = 64
_Right$ = 72
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator!=, COMDAT

; 146  :     _NODISCARD bool operator!=(const _Vector_const_iterator& _Right) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 147  :         return !(*this == _Right);

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator==
  00032	0f b6 c0	 movzx	 eax, al
  00035	85 c0		 test	 eax, eax
  00037	75 0a		 jne	 SHORT $LN3@operator
  00039	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  00041	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00043	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN4@operator:
  0004b	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv69[rsp]

; 148  :     }

  00050	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv69 = 32
this$ = 64
_Right$ = 72
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator==, COMDAT

; 141  :     _NODISCARD bool operator==(const _Vector_const_iterator& _Right) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 142  :         _Compat(_Right);

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAXAEBV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Compat

; 143  :         return _Ptr == _Right._Ptr;

  00032	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003c	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00040	48 39 48 10	 cmp	 QWORD PTR [rax+16], rcx
  00044	75 0a		 jne	 SHORT $LN3@operator
  00046	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  0004e	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00050	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN4@operator:
  00058	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv69[rsp]

; 144  :     }

  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??Z?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
??Z?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator-=, COMDAT

; 123  :     _Vector_const_iterator& operator-=(const difference_type _Off) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 124  :         return *this += -_Off;

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Off$[rsp]
  00028	48 f7 d8	 neg	 rax
  0002b	48 8b d0	 mov	 rdx, rax
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00033	e8 00 00 00 00	 call	 ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator+=

; 125  :     }

  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
??Z?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator-=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator+=, COMDAT

; 112  :     _Vector_const_iterator& operator+=(const difference_type _Off) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 113  :         _Verify_offset(_Off);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Off$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAX_J@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Verify_offset

; 114  :         _Ptr += _Off;

  00032	48 6b 44 24 38
	18		 imul	 rax, QWORD PTR _Off$[rsp], 24
  00038	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003d	48 03 41 10	 add	 rax, QWORD PTR [rcx+16]
  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00046	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 115  :         return *this;

  0004a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]

; 116  :     }

  0004f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00053	5f		 pop	 rdi
  00054	c3		 ret	 0
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAX_J@Z
_TEXT	SEGMENT
_Mycont$ = 48
this$ = 80
_Off$ = 88
?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAX_J@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Verify_offset, COMDAT

; 96   :     void _Verify_offset(const difference_type _Off) const {

$LN33:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 97   : #if _ITERATOR_DEBUG_LEVEL == 0
; 98   :         (void) _Off;
; 99   : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 0 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 0 vvv
; 100  :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002d	48 89 44 24 30	 mov	 QWORD PTR _Mycont$[rsp], rax
$LN4@Verify_off:

; 101  :         _STL_VERIFY(_Off == 0 || _Ptr, "cannot seek value-initialized vector iterator");

  00032	48 83 7c 24 58
	00		 cmp	 QWORD PTR _Off$[rsp], 0
  00038	74 0c		 je	 SHORT $LN22@Verify_off
  0003a	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 83 78 10 00	 cmp	 QWORD PTR [rax+16], 0
  00044	74 02		 je	 SHORT $LN20@Verify_off
$LN22@Verify_off:
  00046	eb 6b		 jmp	 SHORT $LN21@Verify_off
$LN20@Verify_off:
$LN7@Verify_off:
  00048	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CO@LHPFLLJB@cannot?5seek?5value?9initialized?5v@
  0004f	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00054	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0005b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00060	45 33 c9	 xor	 r9d, r9d
  00063	41 b8 65 00 00
	00		 mov	 r8d, 101		; 00000065H
  00069	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00070	b9 02 00 00 00	 mov	 ecx, 2
  00075	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0007b	83 f8 01	 cmp	 eax, 1
  0007e	75 03		 jne	 SHORT $LN30@Verify_off
  00080	cc		 int	 3
  00081	33 c0		 xor	 eax, eax
$LN30@Verify_off:
  00083	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0008c	41 b9 65 00 00
	00		 mov	 r9d, 101		; 00000065H
  00092	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00099	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OE@PHFHONJN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
  000a0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1GA@EIHBFEJD@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAa@
  000a7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000ad	33 c0		 xor	 eax, eax
  000af	85 c0		 test	 eax, eax
  000b1	75 95		 jne	 SHORT $LN7@Verify_off
$LN21@Verify_off:
  000b3	33 c0		 xor	 eax, eax
  000b5	85 c0		 test	 eax, eax
  000b7	0f 85 75 ff ff
	ff		 jne	 $LN4@Verify_off

; 102  :         if (_Off < 0) {

  000bd	48 83 7c 24 58
	00		 cmp	 QWORD PTR _Off$[rsp], 0
  000c3	0f 8d 9d 00 00
	00		 jge	 $LN23@Verify_off
$LN10@Verify_off:

; 103  :             _STL_VERIFY(_Off >= _Mycont->_Myfirst - _Ptr, "cannot seek vector iterator before begin");

  000c9	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mycont$[rsp]
  000ce	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000d3	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000d7	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000db	48 2b c1	 sub	 rax, rcx
  000de	48 99		 cdq
  000e0	b9 18 00 00 00	 mov	 ecx, 24
  000e5	48 f7 f9	 idiv	 rcx
  000e8	48 39 44 24 58	 cmp	 QWORD PTR _Off$[rsp], rax
  000ed	7c 02		 jl	 SHORT $LN24@Verify_off
  000ef	eb 6b		 jmp	 SHORT $LN25@Verify_off
$LN24@Verify_off:
$LN13@Verify_off:
  000f1	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CJ@DIFMEJBE@cannot?5seek?5vector?5iterator?5bef@
  000f8	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000fd	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00104	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00109	45 33 c9	 xor	 r9d, r9d
  0010c	41 b8 67 00 00
	00		 mov	 r8d, 103		; 00000067H
  00112	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00119	b9 02 00 00 00	 mov	 ecx, 2
  0011e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00124	83 f8 01	 cmp	 eax, 1
  00127	75 03		 jne	 SHORT $LN31@Verify_off
  00129	cc		 int	 3
  0012a	33 c0		 xor	 eax, eax
$LN31@Verify_off:
  0012c	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00135	41 b9 67 00 00
	00		 mov	 r9d, 103		; 00000067H
  0013b	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00142	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OE@PHFHONJN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
  00149	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1FG@JCGKNFIB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@
  00150	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00156	33 c0		 xor	 eax, eax
  00158	85 c0		 test	 eax, eax
  0015a	75 95		 jne	 SHORT $LN13@Verify_off
$LN25@Verify_off:
  0015c	33 c0		 xor	 eax, eax
  0015e	85 c0		 test	 eax, eax
  00160	0f 85 63 ff ff
	ff		 jne	 $LN10@Verify_off
$LN23@Verify_off:

; 104  :         }
; 105  : 
; 106  :         if (_Off > 0) {

  00166	48 83 7c 24 58
	00		 cmp	 QWORD PTR _Off$[rsp], 0
  0016c	0f 8e 9d 00 00
	00		 jle	 $LN26@Verify_off
$LN16@Verify_off:

; 107  :             _STL_VERIFY(_Off <= _Mycont->_Mylast - _Ptr, "cannot seek vector iterator after end");

  00172	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mycont$[rsp]
  00177	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0017c	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00180	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00184	48 2b c1	 sub	 rax, rcx
  00187	48 99		 cdq
  00189	b9 18 00 00 00	 mov	 ecx, 24
  0018e	48 f7 f9	 idiv	 rcx
  00191	48 39 44 24 58	 cmp	 QWORD PTR _Off$[rsp], rax
  00196	7f 02		 jg	 SHORT $LN27@Verify_off
  00198	eb 6b		 jmp	 SHORT $LN28@Verify_off
$LN27@Verify_off:
$LN19@Verify_off:
  0019a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CG@JDIOCKHH@cannot?5seek?5vector?5iterator?5aft@
  001a1	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  001a6	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  001ad	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  001b2	45 33 c9	 xor	 r9d, r9d
  001b5	41 b8 6b 00 00
	00		 mov	 r8d, 107		; 0000006bH
  001bb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  001c2	b9 02 00 00 00	 mov	 ecx, 2
  001c7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  001cd	83 f8 01	 cmp	 eax, 1
  001d0	75 03		 jne	 SHORT $LN32@Verify_off
  001d2	cc		 int	 3
  001d3	33 c0		 xor	 eax, eax
$LN32@Verify_off:
  001d5	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  001de	41 b9 6b 00 00
	00		 mov	 r9d, 107		; 0000006bH
  001e4	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  001eb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OE@PHFHONJN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
  001f2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1FA@LCODAPOP@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAk?$AA?5?$AAv?$AAe@
  001f9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  001ff	33 c0		 xor	 eax, eax
  00201	85 c0		 test	 eax, eax
  00203	75 95		 jne	 SHORT $LN19@Verify_off
$LN28@Verify_off:
  00205	33 c0		 xor	 eax, eax
  00207	85 c0		 test	 eax, eax
  00209	0f 85 63 ff ff
	ff		 jne	 $LN16@Verify_off
$LN26@Verify_off:

; 108  :         }
; 109  : #endif // _ITERATOR_DEBUG_LEVEL == 0
; 110  :     }

  0020f	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00213	5f		 pop	 rdi
  00214	c3		 ret	 0
?_Verify_offset@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAX_J@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Verify_offset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEBUnal_info@@XZ
_TEXT	SEGMENT
_Mycont$ = 48
this$ = 80
??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEBUnal_info@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator->, COMDAT

; 51   :     _NODISCARD pointer operator->() const {

$LN21:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 52   : #if _ITERATOR_DEBUG_LEVEL != 0
; 53   :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());

  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00028	48 89 44 24 30	 mov	 QWORD PTR _Mycont$[rsp], rax
$LN4@operator:

; 54   :         _STL_VERIFY(_Ptr, "can't dereference value-initialized vector iterator");

  0002d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 78 10 00	 cmp	 QWORD PTR [rax+16], 0
  00037	74 02		 je	 SHORT $LN14@operator
  00039	eb 6b		 jmp	 SHORT $LN15@operator
$LN14@operator:
$LN7@operator:
  0003b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@
  00042	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00047	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0004e	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00053	45 33 c9	 xor	 r9d, r9d
  00056	41 b8 36 00 00
	00		 mov	 r8d, 54			; 00000036H
  0005c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00063	b9 02 00 00 00	 mov	 ecx, 2
  00068	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0006e	83 f8 01	 cmp	 eax, 1
  00071	75 03		 jne	 SHORT $LN19@operator
  00073	cc		 int	 3
  00074	33 c0		 xor	 eax, eax
$LN19@operator:
  00076	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0007f	41 b9 36 00 00
	00		 mov	 r9d, 54			; 00000036H
  00085	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0008c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1NO@DHAACCAA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
  00093	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
  0009a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000a0	33 c0		 xor	 eax, eax
  000a2	85 c0		 test	 eax, eax
  000a4	75 95		 jne	 SHORT $LN7@operator
$LN15@operator:
  000a6	33 c0		 xor	 eax, eax
  000a8	85 c0		 test	 eax, eax
  000aa	75 81		 jne	 SHORT $LN4@operator
$LN10@operator:

; 55   :         _STL_VERIFY(

  000ac	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mycont$[rsp]
  000b1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000b6	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000ba	48 39 48 08	 cmp	 QWORD PTR [rax+8], rcx
  000be	77 16		 ja	 SHORT $LN16@operator
  000c0	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000c5	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Mycont$[rsp]
  000ca	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000ce	48 39 48 10	 cmp	 QWORD PTR [rax+16], rcx
  000d2	73 02		 jae	 SHORT $LN16@operator
  000d4	eb 6b		 jmp	 SHORT $LN17@operator
$LN16@operator:
$LN13@operator:
  000d6	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@
  000dd	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000e2	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  000e9	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000ee	45 33 c9	 xor	 r9d, r9d
  000f1	41 b8 38 00 00
	00		 mov	 r8d, 56			; 00000038H
  000f7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000fe	b9 02 00 00 00	 mov	 ecx, 2
  00103	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00109	83 f8 01	 cmp	 eax, 1
  0010c	75 03		 jne	 SHORT $LN20@operator
  0010e	cc		 int	 3
  0010f	33 c0		 xor	 eax, eax
$LN20@operator:
  00111	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0011a	41 b9 38 00 00
	00		 mov	 r9d, 56			; 00000038H
  00120	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00127	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1NO@DHAACCAA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
  0012e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
  00135	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter

; 56   :             _Mycont->_Myfirst <= _Ptr && _Ptr < _Mycont->_Mylast, "can't dereference out of range vector iterator");

  0013b	33 c0		 xor	 eax, eax
  0013d	85 c0		 test	 eax, eax
  0013f	75 95		 jne	 SHORT $LN13@operator
$LN17@operator:
  00141	33 c0		 xor	 eax, eax
  00143	85 c0		 test	 eax, eax
  00145	0f 85 61 ff ff
	ff		 jne	 $LN10@operator

; 57   : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 58   : 
; 59   :         return _Ptr;

  0014b	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00150	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 60   :     }

  00154	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00158	5f		 pop	 rdi
  00159	c3		 ret	 0
??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEBUnal_info@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >, COMDAT

; 36   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) : _Ptr(_Parg) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::_Iterator_base12
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Parg$[rsp]
  0003d	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 37   :         this->_Adopt(_Pvector);

  00041	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Pvector$[rsp]
  00046	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
  00050	90		 npad	 1

; 38   :     }

  00051	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00056	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Unal_info@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Unal_info@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<nal_info>,std::_Vector_val<std::_Simple_types<nal_info> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Unal_info@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<nal_info>,std::_Vector_val<std::_Simple_types<nal_info> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Unal_info@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Unal_info@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<nal_info>,std::_Vector_val<std::_Simple_types<nal_info> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Unal_info@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<nal_info>,std::_Vector_val<std::_Simple_types<nal_info> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Take_contents@?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Take_contents@?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@QEAAXAEAV12@@Z PROC ; std::_Vector_val<std::_Simple_types<nal_info> >::_Take_contents, COMDAT

; 324  :     void _Take_contents(_Vector_val& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 325  :         this->_Swap_proxy_and_iterators(_Right);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators

; 326  :         _Myfirst = _Right._Myfirst;

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003c	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00040	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 327  :         _Mylast  = _Right._Mylast;

  00044	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00049	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  0004e	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00052	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 328  :         _Myend   = _Right._Myend;

  00056	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00060	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00064	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 329  : 
; 330  :         _Right._Myfirst = pointer();

  00068	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0006d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 331  :         _Right._Mylast  = pointer();

  00075	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0007a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0

; 332  :         _Right._Myend   = pointer();

  00082	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00087	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 333  :     }

  0008f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00093	5f		 pop	 rdi
  00094	c3		 ret	 0
?_Take_contents@?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@QEAAXAEAV12@@Z ENDP ; std::_Vector_val<std::_Simple_types<nal_info> >::_Take_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<nal_info> >::_Vector_val<std::_Simple_types<nal_info> >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<nal_info> >::_Vector_val<std::_Simple_types<nal_info> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAAEBV?$allocator@Unal_info@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAAEBV?$allocator@Unal_info@@@2@XZ PROC ; std::vector<nal_info,std::allocator<nal_info> >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1693 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Unal_info@@@2@XZ ; std::_Compressed_pair<std::allocator<nal_info>,std::_Vector_val<std::_Simple_types<nal_info> >,1>::_Get_first

; 1694 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAAEBV?$allocator@Unal_info@@@2@XZ ENDP ; std::vector<nal_info,std::allocator<nal_info> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAAEAV?$allocator@Unal_info@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAAEAV?$allocator@Unal_info@@@2@XZ PROC ; std::vector<nal_info,std::allocator<nal_info> >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Unal_info@@@2@XZ ; std::_Compressed_pair<std::allocator<nal_info>,std::_Vector_val<std::_Simple_types<nal_info> >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAAEAV?$allocator@Unal_info@@@2@XZ ENDP ; std::vector<nal_info,std::allocator<nal_info> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z
_TEXT	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z PROC ; std::vector<nal_info,std::allocator<nal_info> >::_Orphan_range, COMDAT

; 1668 :     void _Orphan_range(pointer _First, pointer _Last) const { // orphan iterators within specified (inclusive) range

$LN9:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1669 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1670 :         _Lockit _Lock(_LOCK_DEBUG);

  00028	ba 03 00 00 00	 mov	 edx, 3
  0002d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00038	90		 npad	 1

; 1671 : 
; 1672 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

  00039	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00041	48 83 c0 08	 add	 rax, 8
  00045	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax
$LN2@Orphan_ran:

; 1673 :         while (*_Pnext) {

  0004a	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0004f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00053	74 61		 je	 SHORT $LN3@Orphan_ran

; 1674 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

  00055	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00061	48 89 44 24 40	 mov	 QWORD PTR _Pnextptr$4[rsp], rax

; 1675 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

  00066	48 8b 44 24 68	 mov	 rax, QWORD PTR _First$[rsp]
  0006b	48 39 44 24 40	 cmp	 QWORD PTR _Pnextptr$4[rsp], rax
  00070	72 0c		 jb	 SHORT $LN6@Orphan_ran
  00072	48 8b 44 24 40	 mov	 rax, QWORD PTR _Pnextptr$4[rsp]
  00077	48 39 44 24 70	 cmp	 QWORD PTR _Last$[rsp], rax
  0007c	73 13		 jae	 SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1676 :                 _Pnext = &(*_Pnext)->_Mynextiter;

  0007e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00083	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00086	48 83 c0 08	 add	 rax, 8
  0008a	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax

; 1677 :             } else { // orphan the iterator

  0008f	eb 23		 jmp	 SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 1678 :                 (*_Pnext)->_Myproxy = nullptr;

  00091	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00096	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00099	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1679 :                 *_Pnext             = (*_Pnext)->_Mynextiter;

  000a0	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  000a5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a8	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$[rsp]
  000ad	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000b1	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN5@Orphan_ran:

; 1680 :             }
; 1681 :         }

  000b4	eb 94		 jmp	 SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 1682 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1683 :         (void) _First;
; 1684 :         (void) _Last;
; 1685 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1686 :     }

  000b6	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  000bb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000c1	48 8b cc	 mov	 rcx, rsp
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z$rtcFrameData
  000cb	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d0	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
?_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z ENDP ; std::vector<nal_info,std::allocator<nal_info> >::_Orphan_range
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z@4HA PROC ; `std::vector<nal_info,std::allocator<nal_info> >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z@4HA ENDP ; `std::vector<nal_info,std::allocator<nal_info> >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z@4HA PROC ; `std::vector<nal_info,std::allocator<nal_info> >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAXPEAUnal_info@@0@Z@4HA ENDP ; `std::vector<nal_info,std::allocator<nal_info> >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@CAXXZ PROC ; std::vector<nal_info,std::allocator<nal_info> >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 1661 :         _Xlength_error("vector<T> too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlength@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@CAXXZ ENDP ; std::vector<nal_info,std::allocator<nal_info> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXXZ PROC ; std::vector<nal_info,std::allocator<nal_info> >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	0f 84 85 00 00
	00		 je	 $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  0006c	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00071	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ?_Destroy@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@0@Z ; std::vector<nal_info,std::allocator<nal_info> >::_Destroy
  00086	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00087	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  0008c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00091	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00094	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00097	48 2b c1	 sub	 rax, rcx
  0009a	48 99		 cdq
  0009c	b9 18 00 00 00	 mov	 ecx, 24
  000a1	48 f7 f9	 idiv	 rcx
  000a4	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000a9	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000ae	e8 00 00 00 00	 call	 ?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAAEAV?$allocator@Unal_info@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::_Getal
  000b3	90		 npad	 1
  000b4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000b9	4c 8b c1	 mov	 r8, rcx
  000bc	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c1	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000c4	48 8b c8	 mov	 rcx, rax
  000c7	e8 00 00 00 00	 call	 ?deallocate@?$allocator@Unal_info@@@std@@QEAAXQEAUnal_info@@_K@Z ; std::allocator<nal_info>::deallocate
  000cc	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000cd	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d2	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000d9	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000de	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000e5	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000ea	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000f1	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000f5	5f		 pop	 rdi
  000f6	c3		 ret	 0
?_Tidy@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXXZ ENDP ; std::vector<nal_info,std::allocator<nal_info> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Change_array@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXQEAUnal_info@@_K1@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
_Newvec$ = 104
_Newsize$ = 112
_Newcapacity$ = 120
?_Change_array@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXQEAUnal_info@@_K1@Z PROC ; std::vector<nal_info,std::allocator<nal_info> >::_Change_array, COMDAT

; 1623 :     void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1624 :         // orphan all iterators, discard old array, acquire new array
; 1625 :         auto& _My_data    = _Mypair._Myval2;

  0002d	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1626 :         pointer& _Myfirst = _My_data._Myfirst;

  00037	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003c	48 83 c0 08	 add	 rax, 8
  00040	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1627 :         pointer& _Mylast  = _My_data._Mylast;

  00045	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004a	48 83 c0 10	 add	 rax, 16
  0004e	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1628 :         pointer& _Myend   = _My_data._Myend;

  00053	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00058	48 83 c0 18	 add	 rax, 24
  0005c	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1629 : 
; 1630 :         _My_data._Orphan_all();

  00061	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00066	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1631 : 
; 1632 :         if (_Myfirst) { // destroy and deallocate old array

  0006b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00070	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00074	74 5e		 je	 SHORT $LN2@Change_arr

; 1633 :             _Destroy(_Myfirst, _Mylast);

  00076	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0007b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00083	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00086	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0008b	e8 00 00 00 00	 call	 ?_Destroy@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@0@Z ; std::vector<nal_info,std::allocator<nal_info> >::_Destroy

; 1634 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00090	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00095	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0009a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 2b c1	 sub	 rax, rcx
  000a3	48 99		 cdq
  000a5	b9 18 00 00 00	 mov	 ecx, 24
  000aa	48 f7 f9	 idiv	 rcx
  000ad	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000b2	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000b7	e8 00 00 00 00	 call	 ?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAAEAV?$allocator@Unal_info@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::_Getal
  000bc	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000c1	4c 8b c1	 mov	 r8, rcx
  000c4	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c9	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000cc	48 8b c8	 mov	 rcx, rax
  000cf	e8 00 00 00 00	 call	 ?deallocate@?$allocator@Unal_info@@@std@@QEAAXQEAUnal_info@@_K@Z ; std::allocator<nal_info>::deallocate
$LN2@Change_arr:

; 1635 :         }
; 1636 : 
; 1637 :         _Myfirst = _Newvec;

  000d4	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d9	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000de	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1638 :         _Mylast  = _Newvec + _Newsize;

  000e1	48 6b 44 24 70
	18		 imul	 rax, QWORD PTR _Newsize$[rsp], 24
  000e7	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000ec	48 03 c8	 add	 rcx, rax
  000ef	48 8b c1	 mov	 rax, rcx
  000f2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000f7	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1639 :         _Myend   = _Newvec + _Newcapacity;

  000fa	48 6b 44 24 78
	18		 imul	 rax, QWORD PTR _Newcapacity$[rsp], 24
  00100	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  00105	48 03 c8	 add	 rcx, rax
  00108	48 8b c1	 mov	 rax, rcx
  0010b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  00110	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1640 :     }

  00113	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00117	5f		 pop	 rdi
  00118	c3		 ret	 0
?_Change_array@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXQEAUnal_info@@_K1@Z ENDP ; std::vector<nal_info,std::allocator<nal_info> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Calculate_growth@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 32
_Geometric$ = 40
tv67 = 48
this$ = 80
_Newsize$ = 88
?_Calculate_growth@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<nal_info,std::allocator<nal_info> >::_Calculate_growth, COMDAT

; 1571 :     size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1572 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1573 :         const size_type _Oldcapacity = capacity();

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?capacity@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA_KXZ ; std::vector<nal_info,std::allocator<nal_info> >::capacity
  0002d	48 89 44 24 20	 mov	 QWORD PTR _Oldcapacity$[rsp], rax

; 1574 : 
; 1575 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00032	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ?max_size@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA_KXZ ; std::vector<nal_info,std::allocator<nal_info> >::max_size
  0003c	48 89 44 24 30	 mov	 QWORD PTR tv67[rsp], rax
  00041	33 d2		 xor	 edx, edx
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00048	b9 02 00 00 00	 mov	 ecx, 2
  0004d	48 f7 f1	 div	 rcx
  00050	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv67[rsp]
  00055	48 2b c8	 sub	 rcx, rax
  00058	48 8b c1	 mov	 rax, rcx
  0005b	48 39 44 24 20	 cmp	 QWORD PTR _Oldcapacity$[rsp], rax
  00060	76 07		 jbe	 SHORT $LN2@Calculate_

; 1576 :             return _Newsize; // geometric growth would overflow

  00062	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00067	eb 37		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1577 :         }
; 1578 : 
; 1579 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00069	33 d2		 xor	 edx, edx
  0006b	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00070	b9 02 00 00 00	 mov	 ecx, 2
  00075	48 f7 f1	 div	 rcx
  00078	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Oldcapacity$[rsp]
  0007d	48 03 c8	 add	 rcx, rax
  00080	48 8b c1	 mov	 rax, rcx
  00083	48 89 44 24 28	 mov	 QWORD PTR _Geometric$[rsp], rax

; 1580 : 
; 1581 :         if (_Geometric < _Newsize) {

  00088	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  0008d	48 39 44 24 28	 cmp	 QWORD PTR _Geometric$[rsp], rax
  00092	73 07		 jae	 SHORT $LN3@Calculate_

; 1582 :             return _Newsize; // geometric growth would be insufficient

  00094	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00099	eb 05		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1583 :         }
; 1584 : 
; 1585 :         return _Geometric; // geometric growth is sufficient

  0009b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Geometric$[rsp]
$LN1@Calculate_:

; 1586 :     }

  000a0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000a4	5f		 pop	 rdi
  000a5	c3		 ret	 0
?_Calculate_growth@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<nal_info,std::allocator<nal_info> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@0@Z PROC ; std::vector<nal_info,std::allocator<nal_info> >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAAEAV?$allocator@Unal_info@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@Unal_info@@@std@@@std@@YAXPEAUnal_info@@QEAU1@AEAV?$allocator@Unal_info@@@0@@Z ; std::_Destroy_range<std::allocator<nal_info> >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@0@Z ENDP ; std::vector<nal_info,std::allocator<nal_info> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@00@Z
_TEXT	SEGMENT
$T1 = 48
this$ = 80
_First$ = 88
_Last$ = 96
_Dest$ = 104
?_Umove_if_noexcept@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@00@Z PROC ; std::vector<nal_info,std::allocator<nal_info> >::_Umove_if_noexcept, COMDAT

; 1561 :     void _Umove_if_noexcept(pointer _First, pointer _Last, pointer _Dest) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1562 :         // move_if_noexcept [_First, _Last) to raw _Dest, using allocator
; 1563 :         _Umove_if_noexcept1(_First, _Last, _Dest,

  0002d	48 8d 44 24 30	 lea	 rax, QWORD PTR $T1[rsp]
  00032	48 8b f8	 mov	 rdi, rax
  00035	33 c0		 xor	 eax, eax
  00037	b9 01 00 00 00	 mov	 ecx, 1
  0003c	f3 aa		 rep stosb
  0003e	0f b6 44 24 30	 movzx	 eax, BYTE PTR $T1[rsp]
  00043	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  00047	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Dest$[rsp]
  0004c	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Last$[rsp]
  00051	48 8b 54 24 58	 mov	 rdx, QWORD PTR _First$[rsp]
  00056	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Umove_if_noexcept1@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@00U?$integral_constant@_N$00@2@@Z ; std::vector<nal_info,std::allocator<nal_info> >::_Umove_if_noexcept1

; 1564 :             bool_constant<disjunction_v<is_nothrow_move_constructible<_Ty>, negation<is_copy_constructible<_Ty>>>>{});
; 1565 :     }

  00060	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
?_Umove_if_noexcept@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@00@Z ENDP ; std::vector<nal_info,std::allocator<nal_info> >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
__formal$ = 80
?_Umove_if_noexcept1@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<nal_info,std::allocator<nal_info> >::_Umove_if_noexcept1, COMDAT

; 1551 :     void _Umove_if_noexcept1(pointer _First, pointer _Last, pointer _Dest, true_type) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1552 :         // move [_First, _Last) to raw _Dest, using allocator
; 1553 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAAEAV?$allocator@Unal_info@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAUnal_info@@V?$allocator@Unal_info@@@std@@@std@@YAPEAUnal_info@@QEAU1@0PEAU1@AEAV?$allocator@Unal_info@@@0@@Z ; std::_Uninitialized_move<nal_info *,std::allocator<nal_info> >

; 1554 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove_if_noexcept1@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXPEAUnal_info@@00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<nal_info,std::allocator<nal_info> >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAPEAUnal_info@@PEAU3@00@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
?_Umove@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAPEAUnal_info@@PEAU3@00@Z PROC ; std::vector<nal_info,std::allocator<nal_info> >::_Umove, COMDAT

; 1547 :     pointer _Umove(pointer _First, pointer _Last, pointer _Dest) { // move [_First, _Last) to raw _Dest, using allocator

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1548 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAAEAV?$allocator@Unal_info@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAUnal_info@@V?$allocator@Unal_info@@@std@@@std@@YAPEAUnal_info@@QEAU1@0PEAU1@AEAV?$allocator@Unal_info@@@0@@Z ; std::_Uninitialized_move<nal_info *,std::allocator<nal_info> >

; 1549 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAPEAUnal_info@@PEAU3@00@Z ENDP ; std::vector<nal_info,std::allocator<nal_info> >::_Umove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?capacity@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?capacity@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA_KXZ PROC ; std::vector<nal_info,std::allocator<nal_info> >::capacity, COMDAT

; 1446 :     _NODISCARD size_type capacity() const noexcept { // return current length of allocated storage

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1447 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1448 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 99		 cdq
  0003c	b9 18 00 00 00	 mov	 ecx, 24
  00041	48 f7 f9	 idiv	 rcx

; 1449 :     }

  00044	48 83 c4 10	 add	 rsp, 16
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?capacity@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<nal_info,std::allocator<nal_info> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA_KXZ PROC ; std::vector<nal_info,std::allocator<nal_info> >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1442 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEBAAEBV?$allocator@Unal_info@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@Unal_info@@@std@@@std@@SA_KAEBV?$allocator@Unal_info@@@2@@Z ; std::_Default_allocator_traits<std::allocator<nal_info> >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<nal_info,std::allocator<nal_info> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?size@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?size@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA_KXZ PROC ; std::vector<nal_info,std::allocator<nal_info> >::size, COMDAT

; 1436 :     _NODISCARD size_type size() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1437 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1438 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 99		 cdq
  0003c	b9 18 00 00 00	 mov	 ecx, 24
  00041	48 f7 f9	 idiv	 rcx

; 1439 :     }

  00044	48 83 c4 10	 add	 rsp, 16
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?size@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<nal_info,std::allocator<nal_info> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBAPEBUnal_info@@XZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBAPEBUnal_info@@XZ PROC ; std::vector<nal_info,std::allocator<nal_info> >::_Unchecked_end, COMDAT

; 1427 :     const_pointer _Unchecked_end() const noexcept { // return pointer for end of nonmutable sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1428 :         return _Mypair._Myval2._Mylast;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 1429 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBAPEBUnal_info@@XZ ENDP ; std::vector<nal_info,std::allocator<nal_info> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBAPEBUnal_info@@XZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBAPEBUnal_info@@XZ PROC ; std::vector<nal_info,std::allocator<nal_info> >::_Unchecked_begin, COMDAT

; 1419 :     const_pointer _Unchecked_begin() const noexcept { // return pointer for beginning of nonmutable sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1420 :         return _Mypair._Myval2._Myfirst;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1421 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBAPEBUnal_info@@XZ ENDP ; std::vector<nal_info,std::allocator<nal_info> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ PROC ; std::vector<nal_info,std::allocator<nal_info> >::end, COMDAT

; 1375 :     _NODISCARD const_iterator end() const noexcept { // return iterator for end of nonmutable sequence

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 1376 :         auto& _My_data = _Mypair._Myval2;

  0002b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1377 :         return const_iterator(_My_data._Mylast, _STD addressof(_My_data));

  00035	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@0@AEBV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<nal_info> > const >
  0003f	90		 npad	 1
  00040	4c 8b c0	 mov	 r8, rax
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00048	48 8b 50 10	 mov	 rdx, QWORD PTR [rax+16]
  0004c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00051	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >
  00056	90		 npad	 1
  00057	8b 44 24 28	 mov	 eax, DWORD PTR $T1[rsp]
  0005b	83 c8 01	 or	 eax, 1
  0005e	89 44 24 28	 mov	 DWORD PTR $T1[rsp], eax
  00062	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1378 :     }

  00067	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
  0006d	cc		 int	 3
?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ ENDP ; std::vector<nal_info,std::allocator<nal_info> >::end
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA PROC ; `std::vector<nal_info,std::allocator<nal_info> >::end'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<nal_info,std::allocator<nal_info> >::end'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA PROC ; `std::vector<nal_info,std::allocator<nal_info> >::end'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<nal_info,std::allocator<nal_info> >::end'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ PROC ; std::vector<nal_info,std::allocator<nal_info> >::end, COMDAT

; 1370 :     _NODISCARD iterator end() noexcept { // return iterator for end of mutable sequence

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 1371 :         auto& _My_data = _Mypair._Myval2;

  0002b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1372 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  00035	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$addressof@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<nal_info> > >
  0003f	90		 npad	 1
  00040	4c 8b c0	 mov	 r8, rax
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00048	48 8b 50 10	 mov	 rdx, QWORD PTR [rax+16]
  0004c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00051	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >
  00056	90		 npad	 1
  00057	8b 44 24 28	 mov	 eax, DWORD PTR $T1[rsp]
  0005b	83 c8 01	 or	 eax, 1
  0005e	89 44 24 28	 mov	 DWORD PTR $T1[rsp], eax
  00062	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1373 :     }

  00067	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
  0006d	cc		 int	 3
?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ ENDP ; std::vector<nal_info,std::allocator<nal_info> >::end
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA PROC ; `std::vector<nal_info,std::allocator<nal_info> >::end'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<nal_info,std::allocator<nal_info> >::end'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA PROC ; `std::vector<nal_info,std::allocator<nal_info> >::end'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<nal_info,std::allocator<nal_info> >::end'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ PROC ; std::vector<nal_info,std::allocator<nal_info> >::begin, COMDAT

; 1365 :     _NODISCARD const_iterator begin() const noexcept { // return iterator for beginning of nonmutable sequence

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 1366 :         auto& _My_data = _Mypair._Myval2;

  0002b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1367 :         return const_iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00035	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@0@AEBV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<nal_info> > const >
  0003f	90		 npad	 1
  00040	4c 8b c0	 mov	 r8, rax
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00048	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  0004c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00051	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >
  00056	90		 npad	 1
  00057	8b 44 24 28	 mov	 eax, DWORD PTR $T1[rsp]
  0005b	83 c8 01	 or	 eax, 1
  0005e	89 44 24 28	 mov	 DWORD PTR $T1[rsp], eax
  00062	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1368 :     }

  00067	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
  0006d	cc		 int	 3
?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ ENDP ; std::vector<nal_info,std::allocator<nal_info> >::begin
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA PROC ; `std::vector<nal_info,std::allocator<nal_info> >::begin'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<nal_info,std::allocator<nal_info> >::begin'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA PROC ; `std::vector<nal_info,std::allocator<nal_info> >::begin'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<nal_info,std::allocator<nal_info> >::begin'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ PROC ; std::vector<nal_info,std::allocator<nal_info> >::begin, COMDAT

; 1360 :     _NODISCARD iterator begin() noexcept { // return iterator for beginning of mutable sequence

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 1361 :         auto& _My_data = _Mypair._Myval2;

  0002b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1362 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00035	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$addressof@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<nal_info> > >
  0003f	90		 npad	 1
  00040	4c 8b c0	 mov	 r8, rax
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00048	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  0004c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00051	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@PEAUnal_info@@PEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >
  00056	90		 npad	 1
  00057	8b 44 24 28	 mov	 eax, DWORD PTR $T1[rsp]
  0005b	83 c8 01	 or	 eax, 1
  0005e	89 44 24 28	 mov	 DWORD PTR $T1[rsp], eax
  00062	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1363 :     }

  00067	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
  0006d	cc		 int	 3
?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ ENDP ; std::vector<nal_info,std::allocator<nal_info> >::begin
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA PROC ; `std::vector<nal_info,std::allocator<nal_info> >::begin'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<nal_info,std::allocator<nal_info> >::begin'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA PROC ; `std::vector<nal_info,std::allocator<nal_info> >::begin'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<nal_info,std::allocator<nal_info> >::begin'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?push_back@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAXAEBUnal_info@@@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAXAEBUnal_info@@@Z PROC ; std::vector<nal_info,std::allocator<nal_info> >::push_back, COMDAT

; 667  :     void push_back(const _Ty& _Val) { // insert element at end, provide strong guarantee

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 668  :         emplace_back(_Val);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Val$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$emplace_back@AEBUnal_info@@@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAXAEBUnal_info@@@Z ; std::vector<nal_info,std::allocator<nal_info> >::emplace_back<nal_info const &>

; 669  :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
?push_back@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAXAEBUnal_info@@@Z ENDP ; std::vector<nal_info,std::allocator<nal_info> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S1$ = 52
$T4 = 68
this$ = 96
??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ PROC ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXXZ ; std::vector<nal_info,std::allocator<nal_info> >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAAEAV?$allocator@Unal_info@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S1$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0Unal_info@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Unal_info@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><nal_info>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S1$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ENDP ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??4?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Right$ = 72
??4?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z PROC ; std::vector<nal_info,std::allocator<nal_info> >::operator=, COMDAT

; 615  :     vector& operator=(vector&& _Right) _NOEXCEPT_COND(noexcept(_Move_assign(_Right, _Choose_pocma<_Alty>{}))) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 616  :         if (this != _STD addressof(_Right)) {

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@V?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@@std@@YAPEAV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@0@AEAV10@@Z ; std::addressof<std::vector<nal_info,std::allocator<nal_info> > >
  0002d	48 39 44 24 40	 cmp	 QWORD PTR this$[rsp], rax
  00032	74 26		 je	 SHORT $LN2@operator

; 617  :             _Move_assign(_Right, _Choose_pocma<_Alty>{});

  00034	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00039	48 8b f8	 mov	 rdi, rax
  0003c	33 c0		 xor	 eax, eax
  0003e	b9 01 00 00 00	 mov	 ecx, 1
  00043	f3 aa		 rep stosb
  00045	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR $T1[rsp]
  0004b	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00050	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00055	e8 00 00 00 00	 call	 ?_Move_assign@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ; std::vector<nal_info,std::allocator<nal_info> >::_Move_assign
$LN2@operator:

; 618  :         }
; 619  : 
; 620  :         return *this;

  0005a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]

; 621  :     }

  0005f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??4?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ENDP ; std::vector<nal_info,std::allocator<nal_info> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Move_assign@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z
_TEXT	SEGMENT
tv66 = 32
this$ = 64
_Right$ = 72
__formal$ = 80
?_Move_assign@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z PROC ; std::vector<nal_info,std::allocator<nal_info> >::_Move_assign, COMDAT

; 546  :     void _Move_assign(vector& _Right, _Equal_allocators) noexcept {

$LN3:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 547  :         _Tidy();

  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Tidy@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXXZ ; std::vector<nal_info,std::allocator<nal_info> >::_Tidy

; 548  :         _Pocma(_Getal(), _Right._Getal());

  00032	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00037	e8 00 00 00 00	 call	 ?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAAEAV?$allocator@Unal_info@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::_Getal
  0003c	48 89 44 24 20	 mov	 QWORD PTR tv66[rsp], rax
  00041	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00046	e8 00 00 00 00	 call	 ?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAAEAV?$allocator@Unal_info@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::_Getal
  0004b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv66[rsp]
  00050	48 8b d1	 mov	 rdx, rcx
  00053	48 8b c8	 mov	 rcx, rax
  00056	e8 00 00 00 00	 call	 ??$_Pocma@V?$allocator@Unal_info@@@std@@@std@@YAXAEAV?$allocator@Unal_info@@@0@0@Z ; std::_Pocma<std::allocator<nal_info> >

; 549  :         _Mypair._Myval2._Take_contents(_Right._Mypair._Myval2);

  0005b	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  00060	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00065	48 8b d0	 mov	 rdx, rax
  00068	e8 00 00 00 00	 call	 ?_Take_contents@?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@QEAAXAEAV12@@Z ; std::_Vector_val<std::_Simple_types<nal_info> >::_Take_contents

; 550  :     }

  0006d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00071	5f		 pop	 rdi
  00072	c3		 ret	 0
?_Move_assign@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ENDP ; std::vector<nal_info,std::allocator<nal_info> >::_Move_assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::vector<nal_info,std::allocator<nal_info> >::vector<nal_info,std::allocator<nal_info> >, COMDAT

; 531  :     vector(vector&& _Right) noexcept

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 532  :         : _Mypair(_One_then_variadic_args_t(), _STD move(_Right._Getal())) { // construct by moving _Right

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAAEAV?$allocator@Unal_info@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::_Getal
  0002d	90		 npad	 1
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ??$move@AEAV?$allocator@Unal_info@@@std@@@std@@YA$$QEAV?$allocator@Unal_info@@@0@AEAV10@@Z ; std::move<std::allocator<nal_info> &>
  00036	90		 npad	 1
  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	4c 8b c0	 mov	 r8, rax
  0003f	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0V?$allocator@Unal_info@@@std@@$$V@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Unal_info@@@1@@Z ; std::_Compressed_pair<std::allocator<nal_info>,std::_Vector_val<std::_Simple_types<nal_info> >,1>::_Compressed_pair<std::allocator<nal_info>,std::_Vector_val<std::_Simple_types<nal_info> >,1><std::allocator<nal_info> >
  00049	90		 npad	 1

; 533  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	e8 00 00 00 00	 call	 ?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAAEAV?$allocator@Unal_info@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::_Getal
  00054	90		 npad	 1
  00055	48 8b d0	 mov	 rdx, rax
  00058	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  0005d	e8 00 00 00 00	 call	 ??$?0Unal_info@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Unal_info@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><nal_info>
  00062	90		 npad	 1
  00063	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00068	48 8b d0	 mov	 rdx, rax
  0006b	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00070	90		 npad	 1

; 534  :         _Move_construct(_Right, true_type{});

  00071	48 8d 44 24 22	 lea	 rax, QWORD PTR $T3[rsp]
  00076	48 8b f8	 mov	 rdi, rax
  00079	33 c0		 xor	 eax, eax
  0007b	b9 01 00 00 00	 mov	 ecx, 1
  00080	f3 aa		 rep stosb
  00082	44 0f b6 44 24
	22		 movzx	 r8d, BYTE PTR $T3[rsp]
  00088	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  0008d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00092	e8 00 00 00 00	 call	 ?_Move_construct@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<nal_info,std::allocator<nal_info> >::_Move_construct
  00097	90		 npad	 1

; 535  :     }

  00098	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0009d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a1	5f		 pop	 rdi
  000a2	c3		 ret	 0
??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::vector<nal_info,std::allocator<nal_info> >::vector<nal_info,std::allocator<nal_info> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Move_construct@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
__formal$ = 64
?_Move_construct@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::vector<nal_info,std::allocator<nal_info> >::_Move_construct, COMDAT

; 505  :     void _Move_construct(vector& _Right, true_type) noexcept { // move from _Right, stealing its contents

$LN3:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 506  :         _Mypair._Myval2._Take_contents(_Right._Mypair._Myval2);

  00028	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	48 8b d0	 mov	 rdx, rax
  00035	e8 00 00 00 00	 call	 ?_Take_contents@?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@QEAAXAEAV12@@Z ; std::_Vector_val<std::_Simple_types<nal_info> >::_Take_contents

; 507  :     }

  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?_Move_construct@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<nal_info,std::allocator<nal_info> >::_Move_construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ PROC ; std::vector<nal_info,std::allocator<nal_info> >::vector<nal_info,std::allocator<nal_info> >, COMDAT

; 385  :     vector() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>)

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 386  :         : _Mypair(_Zero_then_variadic_args_t()) { // construct empty vector

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@Unal_info@@@std@@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<nal_info>,std::_Vector_val<std::_Simple_types<nal_info> >,1>::_Compressed_pair<std::allocator<nal_info>,std::_Vector_val<std::_Simple_types<nal_info> >,1><>
  00030	90		 npad	 1

; 387  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@AEAAAEAV?$allocator@Unal_info@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0Unal_info@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Unal_info@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><nal_info>
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 388  :     }

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ENDP ; std::vector<nal_info,std::allocator<nal_info> >::vector<nal_info,std::allocator<nal_info> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@Unal_info@@@std@@@std@@SA_KAEBV?$allocator@Unal_info@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@Unal_info@@@std@@@std@@SA_KAEBV?$allocator@Unal_info@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<nal_info> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 b8 aa aa aa
	aa aa aa aa 0a	 mov	 rax, 768614336404564650	; 0aaaaaaaaaaaaaaaH

; 768  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@Unal_info@@@std@@@std@@SA_KAEBV?$allocator@Unal_info@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<nal_info> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@Unal_info@@@std@@QEAAPEAUnal_info@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@Unal_info@@@std@@QEAAPEAUnal_info@@_K@Z PROC ; std::allocator<nal_info>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z ; std::_Get_size_of_n<24>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@Unal_info@@@std@@QEAAPEAUnal_info@@_K@Z ENDP ; std::allocator<nal_info>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@Unal_info@@@std@@QEAAXQEAUnal_info@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@Unal_info@@@std@@QEAAXQEAUnal_info@@_K@Z PROC ; std::allocator<nal_info>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 6b 44 24 40
	18		 imul	 rax, QWORD PTR _Count$[rsp], 24
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$allocator@Unal_info@@@std@@QEAAXQEAUnal_info@@_K@Z ENDP ; std::allocator<nal_info>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@Unal_info@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@Unal_info@@@std@@QEAA@XZ PROC		; std::allocator<nal_info>::allocator<nal_info>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@Unal_info@@@std@@QEAA@XZ ENDP		; std::allocator<nal_info>::allocator<nal_info>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_bitstream.h
_TEXT	SEGMENT
nal_list$ = 40
nal_start$6 = 104
i_fin$7 = 136
i$8 = 144
prev$9 = 168
$T10 = 200
$T11 = 224
tv128 = 228
tv65 = 232
tv169 = 240
tv158 = 248
__$ReturnUdt$ = 272
data$ = 280
size$ = 288
?parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z PROC ; parse_nal_unit_h264

; 120  : static std::vector<nal_info> parse_nal_unit_h264(const uint8_t *data, size_t size) {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 00 01
	00 00		 sub	 rsp, 256		; 00000100H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 10
	01 00 00	 mov	 rcx, QWORD PTR [rsp+272]
  0002e	c7 84 24 e0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T11[rsp], 0

; 121  :     std::vector<nal_info> nal_list;

  00039	48 8d 4c 24 28	 lea	 rcx, QWORD PTR nal_list$[rsp]
  0003e	e8 00 00 00 00	 call	 ??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::vector<nal_info,std::allocator<nal_info> >
  00043	90		 npad	 1

; 122  :     if (size > 3) {

  00044	48 83 bc 24 20
	01 00 00 03	 cmp	 QWORD PTR size$[rsp], 3
  0004d	0f 86 66 02 00
	00		 jbe	 $LN5@parse_nal_

; 123  :         nal_info nal_start = { nullptr, 0, 0 };

  00053	48 c7 44 24 68
	00 00 00 00	 mov	 QWORD PTR nal_start$6[rsp], 0
  0005c	c6 44 24 70 00	 mov	 BYTE PTR nal_start$6[rsp+8], 0
  00061	48 c7 44 24 78
	00 00 00 00	 mov	 QWORD PTR nal_start$6[rsp+16], 0

; 124  :         const auto i_fin = size - 3;

  0006a	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR size$[rsp]
  00072	48 83 e8 03	 sub	 rax, 3
  00076	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR i_fin$7[rsp], rax

; 125  :         for (size_t i = 0; i < i_fin; i++) {

  0007e	48 c7 84 24 90
	00 00 00 00 00
	00 00		 mov	 QWORD PTR i$8[rsp], 0
  0008a	eb 13		 jmp	 SHORT $LN4@parse_nal_
$LN2@parse_nal_:
  0008c	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR i$8[rsp]
  00094	48 ff c0	 inc	 rax
  00097	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR i$8[rsp], rax
$LN4@parse_nal_:
  0009f	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR i_fin$7[rsp]
  000a7	48 39 84 24 90
	00 00 00	 cmp	 QWORD PTR i$8[rsp], rax
  000af	0f 83 ed 01 00
	00		 jae	 $LN3@parse_nal_

; 126  :             if (data[i+0] == 0 && data[i+1] == 0 && data[i+2] == 1) {

  000b5	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR i$8[rsp]
  000bd	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR data$[rsp]
  000c5	48 03 c8	 add	 rcx, rax
  000c8	48 8b c1	 mov	 rax, rcx
  000cb	0f b6 00	 movzx	 eax, BYTE PTR [rax]
  000ce	85 c0		 test	 eax, eax
  000d0	0f 85 c7 01 00
	00		 jne	 $LN6@parse_nal_
  000d6	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR i$8[rsp]
  000de	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR data$[rsp]
  000e6	48 03 c8	 add	 rcx, rax
  000e9	48 8b c1	 mov	 rax, rcx
  000ec	0f b6 40 01	 movzx	 eax, BYTE PTR [rax+1]
  000f0	85 c0		 test	 eax, eax
  000f2	0f 85 a5 01 00
	00		 jne	 $LN6@parse_nal_
  000f8	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR i$8[rsp]
  00100	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR data$[rsp]
  00108	48 03 c8	 add	 rcx, rax
  0010b	48 8b c1	 mov	 rax, rcx
  0010e	0f b6 40 02	 movzx	 eax, BYTE PTR [rax+2]
  00112	83 f8 01	 cmp	 eax, 1
  00115	0f 85 82 01 00
	00		 jne	 $LN6@parse_nal_

; 127  :                 if (nal_start.ptr) {

  0011b	48 83 7c 24 68
	00		 cmp	 QWORD PTR nal_start$6[rsp], 0
  00121	74 0f		 je	 SHORT $LN7@parse_nal_

; 128  :                     nal_list.push_back(nal_start);

  00123	48 8d 54 24 68	 lea	 rdx, QWORD PTR nal_start$6[rsp]
  00128	48 8d 4c 24 28	 lea	 rcx, QWORD PTR nal_list$[rsp]
  0012d	e8 00 00 00 00	 call	 ?push_back@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAXAEBUnal_info@@@Z ; std::vector<nal_info,std::allocator<nal_info> >::push_back
$LN7@parse_nal_:

; 129  :                 }
; 130  :                 nal_start.ptr = data + i - (i > 0 && data[i-1] == 0);

  00132	48 83 bc 24 90
	00 00 00 00	 cmp	 QWORD PTR i$8[rsp], 0
  0013b	76 2b		 jbe	 SHORT $LN11@parse_nal_
  0013d	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR i$8[rsp]
  00145	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR data$[rsp]
  0014d	48 03 c8	 add	 rcx, rax
  00150	48 8b c1	 mov	 rax, rcx
  00153	0f b6 40 ff	 movzx	 eax, BYTE PTR [rax-1]
  00157	85 c0		 test	 eax, eax
  00159	75 0d		 jne	 SHORT $LN11@parse_nal_
  0015b	c7 84 24 e4 00
	00 00 01 00 00
	00		 mov	 DWORD PTR tv128[rsp], 1
  00166	eb 0b		 jmp	 SHORT $LN12@parse_nal_
$LN11@parse_nal_:
  00168	c7 84 24 e4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR tv128[rsp], 0
$LN12@parse_nal_:
  00173	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR i$8[rsp]
  0017b	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR data$[rsp]
  00183	48 03 c8	 add	 rcx, rax
  00186	48 8b c1	 mov	 rax, rcx
  00189	48 63 8c 24 e4
	00 00 00	 movsxd	 rcx, DWORD PTR tv128[rsp]
  00191	48 2b c1	 sub	 rax, rcx
  00194	48 89 44 24 68	 mov	 QWORD PTR nal_start$6[rsp], rax

; 131  :                 nal_start.type = data[i+3] & 0x1f;

  00199	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR i$8[rsp]
  001a1	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR data$[rsp]
  001a9	48 03 c8	 add	 rcx, rax
  001ac	48 8b c1	 mov	 rax, rcx
  001af	0f b6 40 03	 movzx	 eax, BYTE PTR [rax+3]
  001b3	83 e0 1f	 and	 eax, 31
  001b6	88 44 24 70	 mov	 BYTE PTR nal_start$6[rsp+8], al

; 132  :                 nal_start.size = data + size - nal_start.ptr;

  001ba	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR size$[rsp]
  001c2	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR data$[rsp]
  001ca	48 03 c8	 add	 rcx, rax
  001cd	48 8b c1	 mov	 rax, rcx
  001d0	48 2b 44 24 68	 sub	 rax, QWORD PTR nal_start$6[rsp]
  001d5	48 89 44 24 78	 mov	 QWORD PTR nal_start$6[rsp+16], rax

; 133  :                 if (nal_list.size()) {

  001da	48 8d 4c 24 28	 lea	 rcx, QWORD PTR nal_list$[rsp]
  001df	e8 00 00 00 00	 call	 ?size@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA_KXZ ; std::vector<nal_info,std::allocator<nal_info> >::size
  001e4	48 85 c0	 test	 rax, rax
  001e7	0f 84 9c 00 00
	00		 je	 $LN8@parse_nal_

; 134  :                     auto prev = nal_list.end()-1;

  001ed	48 8d 94 24 c8
	00 00 00	 lea	 rdx, QWORD PTR $T10[rsp]
  001f5	48 8d 4c 24 28	 lea	 rcx, QWORD PTR nal_list$[rsp]
  001fa	e8 00 00 00 00	 call	 ?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::end
  001ff	48 89 84 24 e8
	00 00 00	 mov	 QWORD PTR tv65[rsp], rax
  00207	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR tv65[rsp]
  0020f	48 89 84 24 f0
	00 00 00	 mov	 QWORD PTR tv169[rsp], rax
  00217	41 b8 01 00 00
	00		 mov	 r8d, 1
  0021d	48 8d 94 24 a8
	00 00 00	 lea	 rdx, QWORD PTR prev$9[rsp]
  00225	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR tv169[rsp]
  0022d	e8 00 00 00 00	 call	 ??G?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA?AV01@_J@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator-
  00232	90		 npad	 1
  00233	48 8d 8c 24 c8
	00 00 00	 lea	 rcx, QWORD PTR $T10[rsp]
  0023b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ

; 135  :                     prev->size = nal_start.ptr - prev->ptr;

  00240	48 8d 8c 24 a8
	00 00 00	 lea	 rcx, QWORD PTR prev$9[rsp]
  00248	e8 00 00 00 00	 call	 ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEAUnal_info@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator->
  0024d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00250	48 8b 4c 24 68	 mov	 rcx, QWORD PTR nal_start$6[rsp]
  00255	48 2b c8	 sub	 rcx, rax
  00258	48 8b c1	 mov	 rax, rcx
  0025b	48 89 84 24 f8
	00 00 00	 mov	 QWORD PTR tv158[rsp], rax
  00263	48 8d 8c 24 a8
	00 00 00	 lea	 rcx, QWORD PTR prev$9[rsp]
  0026b	e8 00 00 00 00	 call	 ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEAUnal_info@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator->
  00270	48 8b 8c 24 f8
	00 00 00	 mov	 rcx, QWORD PTR tv158[rsp]
  00278	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 136  :                 }

  0027c	48 8d 8c 24 a8
	00 00 00	 lea	 rcx, QWORD PTR prev$9[rsp]
  00284	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN8@parse_nal_:

; 137  :                 i += 3;

  00289	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR i$8[rsp]
  00291	48 83 c0 03	 add	 rax, 3
  00295	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR i$8[rsp], rax
$LN6@parse_nal_:

; 138  :             }
; 139  :         }

  0029d	e9 ea fd ff ff	 jmp	 $LN2@parse_nal_
$LN3@parse_nal_:

; 140  :         if (nal_start.ptr) {

  002a2	48 83 7c 24 68
	00		 cmp	 QWORD PTR nal_start$6[rsp], 0
  002a8	74 0f		 je	 SHORT $LN5@parse_nal_

; 141  :             nal_list.push_back(nal_start);

  002aa	48 8d 54 24 68	 lea	 rdx, QWORD PTR nal_start$6[rsp]
  002af	48 8d 4c 24 28	 lea	 rcx, QWORD PTR nal_list$[rsp]
  002b4	e8 00 00 00 00	 call	 ?push_back@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAXAEBUnal_info@@@Z ; std::vector<nal_info,std::allocator<nal_info> >::push_back
$LN5@parse_nal_:

; 142  :         }
; 143  :     }
; 144  :     return nal_list;

  002b9	48 8d 54 24 28	 lea	 rdx, QWORD PTR nal_list$[rsp]
  002be	48 8b 8c 24 10
	01 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  002c6	e8 00 00 00 00	 call	 ??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::vector<nal_info,std::allocator<nal_info> >::vector<nal_info,std::allocator<nal_info> >
  002cb	8b 84 24 e0 00
	00 00		 mov	 eax, DWORD PTR $T11[rsp]
  002d2	83 c8 01	 or	 eax, 1
  002d5	89 84 24 e0 00
	00 00		 mov	 DWORD PTR $T11[rsp], eax
  002dc	48 8d 4c 24 28	 lea	 rcx, QWORD PTR nal_list$[rsp]
  002e1	e8 00 00 00 00	 call	 ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
  002e6	48 8b 84 24 10
	01 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 145  : }

  002ee	48 8b f8	 mov	 rdi, rax
  002f1	48 8b cc	 mov	 rcx, rsp
  002f4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z$rtcFrameData
  002fb	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00300	48 8b c7	 mov	 rax, rdi
  00303	48 81 c4 00 01
	00 00		 add	 rsp, 256		; 00000100H
  0030a	5f		 pop	 rdi
  0030b	c3		 ret	 0
  0030c	cc		 int	 3
?parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z ENDP ; parse_nal_unit_h264
_TEXT	ENDS
text$x	SEGMENT
nal_list$ = 40
nal_start$6 = 104
i_fin$7 = 136
i$8 = 144
prev$9 = 168
$T10 = 200
$T11 = 224
tv128 = 228
tv65 = 232
tv169 = 240
tv158 = 248
__$ReturnUdt$ = 272
data$ = 280
size$ = 288
?dtor$0@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA PROC ; `parse_nal_unit_h264'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR nal_list$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA ENDP ; `parse_nal_unit_h264'::`1'::dtor$0
nal_list$ = 40
nal_start$6 = 104
i_fin$7 = 136
i$8 = 144
prev$9 = 168
$T10 = 200
$T11 = 224
tv128 = 228
tv65 = 232
tv169 = 240
tv158 = 248
__$ReturnUdt$ = 272
data$ = 280
size$ = 288
?dtor$1@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA PROC ; `parse_nal_unit_h264'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA ENDP ; `parse_nal_unit_h264'::`1'::dtor$1
nal_list$ = 40
nal_start$6 = 104
i_fin$7 = 136
i$8 = 144
prev$9 = 168
$T10 = 200
$T11 = 224
tv128 = 228
tv65 = 232
tv169 = 240
tv158 = 248
__$ReturnUdt$ = 272
data$ = 280
size$ = 288
?dtor$2@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA PROC ; `parse_nal_unit_h264'::`1'::dtor$2
  00049	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00053	55		 push	 rbp
  00054	57		 push	 rdi
  00055	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00059	48 8b ea	 mov	 rbp, rdx
  0005c	48 8d 8d a8 00
	00 00		 lea	 rcx, QWORD PTR prev$9[rbp]
  00063	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00068	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006c	5f		 pop	 rdi
  0006d	5d		 pop	 rbp
  0006e	c3		 ret	 0
?dtor$2@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA ENDP ; `parse_nal_unit_h264'::`1'::dtor$2
nal_list$ = 40
nal_start$6 = 104
i_fin$7 = 136
i$8 = 144
prev$9 = 168
$T10 = 200
$T11 = 224
tv128 = 228
tv65 = 232
tv169 = 240
tv158 = 248
__$ReturnUdt$ = 272
data$ = 280
size$ = 288
?dtor$3@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA PROC ; `parse_nal_unit_h264'::`1'::dtor$3
  0006f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00074	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00079	55		 push	 rbp
  0007a	57		 push	 rdi
  0007b	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007f	48 8b ea	 mov	 rbp, rdx
  00082	8b 85 e0 00 00
	00		 mov	 eax, DWORD PTR $T11[rbp]
  00088	83 e0 01	 and	 eax, 1
  0008b	85 c0		 test	 eax, eax
  0008d	74 13		 je	 SHORT $LN17@dtor$3
  0008f	83 a5 e0 00 00
	00 fe		 and	 DWORD PTR $T11[rbp], -2
  00096	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0009d	e8 00 00 00 00	 call	 ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
$LN17@dtor$3:
  000a2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000a6	5f		 pop	 rdi
  000a7	5d		 pop	 rbp
  000a8	c3		 ret	 0
?dtor$3@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA ENDP ; `parse_nal_unit_h264'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nal_list$ = 40
nal_start$6 = 104
i_fin$7 = 136
i$8 = 144
prev$9 = 168
$T10 = 200
$T11 = 224
tv128 = 228
tv65 = 232
tv169 = 240
tv158 = 248
__$ReturnUdt$ = 272
data$ = 280
size$ = 288
?dtor$0@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA PROC ; `parse_nal_unit_h264'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR nal_list$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA ENDP ; `parse_nal_unit_h264'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nal_list$ = 40
nal_start$6 = 104
i_fin$7 = 136
i$8 = 144
prev$9 = 168
$T10 = 200
$T11 = 224
tv128 = 228
tv65 = 232
tv169 = 240
tv158 = 248
__$ReturnUdt$ = 272
data$ = 280
size$ = 288
?dtor$1@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA PROC ; `parse_nal_unit_h264'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA ENDP ; `parse_nal_unit_h264'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nal_list$ = 40
nal_start$6 = 104
i_fin$7 = 136
i$8 = 144
prev$9 = 168
$T10 = 200
$T11 = 224
tv128 = 228
tv65 = 232
tv169 = 240
tv158 = 248
__$ReturnUdt$ = 272
data$ = 280
size$ = 288
?dtor$2@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA PROC ; `parse_nal_unit_h264'::`1'::dtor$2
  00049	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00053	55		 push	 rbp
  00054	57		 push	 rdi
  00055	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00059	48 8b ea	 mov	 rbp, rdx
  0005c	48 8d 8d a8 00
	00 00		 lea	 rcx, QWORD PTR prev$9[rbp]
  00063	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00068	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006c	5f		 pop	 rdi
  0006d	5d		 pop	 rbp
  0006e	c3		 ret	 0
?dtor$2@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA ENDP ; `parse_nal_unit_h264'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nal_list$ = 40
nal_start$6 = 104
i_fin$7 = 136
i$8 = 144
prev$9 = 168
$T10 = 200
$T11 = 224
tv128 = 228
tv65 = 232
tv169 = 240
tv158 = 248
__$ReturnUdt$ = 272
data$ = 280
size$ = 288
?dtor$3@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA PROC ; `parse_nal_unit_h264'::`1'::dtor$3
  0006f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00074	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00079	55		 push	 rbp
  0007a	57		 push	 rdi
  0007b	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007f	48 8b ea	 mov	 rbp, rdx
  00082	8b 85 e0 00 00
	00		 mov	 eax, DWORD PTR $T11[rbp]
  00088	83 e0 01	 and	 eax, 1
  0008b	85 c0		 test	 eax, eax
  0008d	74 13		 je	 SHORT $LN17@dtor$3
  0008f	83 a5 e0 00 00
	00 fe		 and	 DWORD PTR $T11[rbp], -2
  00096	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0009d	e8 00 00 00 00	 call	 ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
$LN17@dtor$3:
  000a2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000a6	5f		 pop	 rdi
  000a7	5d		 pop	 rbp
  000a8	c3		 ret	 0
?dtor$3@?0??parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z@4HA ENDP ; `parse_nal_unit_h264'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCQSVOutFrame@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GCQSVOutFrame@@UEAAPEAXI@Z PROC			; CQSVOutFrame::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1CQSVOutFrame@@UEAA@XZ ; CQSVOutFrame::~CQSVOutFrame
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 40 01 00 00	 mov	 edx, 320		; 00000140H
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_GCQSVOutFrame@@UEAAPEAXI@Z ENDP			; CQSVOutFrame::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
_TEXT	SEGMENT
fp$4 = 56
error$5 = 68
writerParam$ = 72
tv160 = 80
this$ = 112
strFileName$ = 120
pVideoOutputInfo$ = 128
prm$ = 136
?Init@CQSVOutFrame@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z PROC ; CQSVOutFrame::Init

; 374  : RGY_ERR CQSVOutFrame::Init(const TCHAR *strFileName, const VideoInfo *pVideoOutputInfo, const void *prm) {

$LN9:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 375  :     UNREFERENCED_PARAMETER(pVideoOutputInfo);
; 376  :     if (_tcscmp(strFileName, _T("-")) == 0) {

  0002d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG135198
  00034	48 8b 4c 24 78	 mov	 rcx, QWORD PTR strFileName$[rsp]
  00039	e8 00 00 00 00	 call	 _tcscmp
  0003e	85 c0		 test	 eax, eax
  00040	75 3d		 jne	 SHORT $LN2@Init

; 377  :         m_fDest.reset(stdout);

  00042	b9 01 00 00 00	 mov	 ecx, 1
  00047	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  0004d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00052	48 83 c1 18	 add	 rcx, 24
  00056	48 8b d0	 mov	 rdx, rax
  00059	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z ; std::unique_ptr<_iobuf,fp_deleter>::reset

; 378  :         m_bOutputIsStdout = true;

  0005e	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00063	c6 40 20 01	 mov	 BYTE PTR [rax+32], 1

; 379  :         AddMessage(RGY_LOG_DEBUG, _T("using stdout\n"));

  00067	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG135199
  0006e	ba fe ff ff ff	 mov	 edx, -2
  00073	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00078	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage

; 380  :     } else {

  0007d	eb 7d		 jmp	 SHORT $LN3@Init
$LN2@Init:

; 381  :         FILE *fp = NULL;

  0007f	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR fp$4[rsp], 0

; 382  :         int error = _tfopen_s(&fp, strFileName, _T("wb"));

  00088	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG135200
  0008f	48 8b 54 24 78	 mov	 rdx, QWORD PTR strFileName$[rsp]
  00094	48 8d 4c 24 38	 lea	 rcx, QWORD PTR fp$4[rsp]
  00099	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fopen_s
  0009f	89 44 24 44	 mov	 DWORD PTR error$5[rsp], eax

; 383  :         if (0 != error || fp == NULL) {

  000a3	83 7c 24 44 00	 cmp	 DWORD PTR error$5[rsp], 0
  000a8	75 08		 jne	 SHORT $LN5@Init
  000aa	48 83 7c 24 38
	00		 cmp	 QWORD PTR fp$4[rsp], 0
  000b0	75 34		 jne	 SHORT $LN4@Init
$LN5@Init:

; 384  :             AddMessage(RGY_LOG_DEBUG, _T("failed to open file \"%s\": %s\n"), strFileName, _tcserror(error));

  000b2	8b 4c 24 44	 mov	 ecx, DWORD PTR error$5[rsp]
  000b6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_strerror
  000bc	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000c1	4c 8b 4c 24 78	 mov	 r9, QWORD PTR strFileName$[rsp]
  000c6	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG135203
  000cd	ba fe ff ff ff	 mov	 edx, -2
  000d2	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  000d7	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage

; 385  :             return RGY_ERR_NULL_PTR;

  000dc	b8 fe ff ff ff	 mov	 eax, -2
  000e1	e9 82 00 00 00	 jmp	 $LN1@Init
$LN4@Init:

; 386  :         }
; 387  :         m_fDest.reset(fp);

  000e6	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000eb	48 83 c0 18	 add	 rax, 24
  000ef	48 8b 54 24 38	 mov	 rdx, QWORD PTR fp$4[rsp]
  000f4	48 8b c8	 mov	 rcx, rax
  000f7	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z ; std::unique_ptr<_iobuf,fp_deleter>::reset
$LN3@Init:

; 388  :     }
; 389  : 
; 390  :     YUVWriterParam *writerParam = (YUVWriterParam *)prm;

  000fc	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR prm$[rsp]
  00104	48 89 44 24 48	 mov	 QWORD PTR writerParam$[rsp], rax

; 391  : 
; 392  :     m_bY4m = writerParam->bY4m;

  00109	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0010e	48 8b 4c 24 48	 mov	 rcx, QWORD PTR writerParam$[rsp]
  00113	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  00116	88 88 38 01 00
	00		 mov	 BYTE PTR [rax+312], cl

; 393  :     m_bSourceHWMem = !!(writerParam->memType & (D3D11_MEMORY | D3D9_MEMORY));

  0011c	ba 01 00 00 00	 mov	 edx, 1
  00121	b9 02 00 00 00	 mov	 ecx, 2
  00126	e8 00 00 00 00	 call	 ??U@YA?AW4MemType@@W40@0@Z ; operator|
  0012b	8b d0		 mov	 edx, eax
  0012d	48 8b 44 24 48	 mov	 rax, QWORD PTR writerParam$[rsp]
  00132	8b 48 04	 mov	 ecx, DWORD PTR [rax+4]
  00135	e8 00 00 00 00	 call	 ??I@YA?AW4MemType@@W40@0@Z ; operator&
  0013a	85 c0		 test	 eax, eax
  0013c	74 0a		 je	 SHORT $LN7@Init
  0013e	c7 44 24 50 01
	00 00 00	 mov	 DWORD PTR tv160[rsp], 1
  00146	eb 08		 jmp	 SHORT $LN8@Init
$LN7@Init:
  00148	c7 44 24 50 00
	00 00 00	 mov	 DWORD PTR tv160[rsp], 0
$LN8@Init:
  00150	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00155	0f b6 4c 24 50	 movzx	 ecx, BYTE PTR tv160[rsp]
  0015a	88 48 28	 mov	 BYTE PTR [rax+40], cl

; 394  :     m_bInited = true;

  0015d	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00162	c6 40 21 01	 mov	 BYTE PTR [rax+33], 1

; 395  : 
; 396  :     return RGY_ERR_NONE;

  00166	33 c0		 xor	 eax, eax
$LN1@Init:

; 397  : }

  00168	48 8b f8	 mov	 rdi, rax
  0016b	48 8b cc	 mov	 rcx, rsp
  0016e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Init@CQSVOutFrame@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z$rtcFrameData
  00175	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0017a	48 8b c7	 mov	 rax, rdi
  0017d	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00181	5f		 pop	 rdi
  00182	c3		 ret	 0
?Init@CQSVOutFrame@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z ENDP ; CQSVOutFrame::Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
_TEXT	SEGMENT
loadLineToBuffer$ = 36
lumaWidthBytes$ = 52
cropOffset$4 = 56
$T5 = 64
$T6 = 80
j$7 = 96
ptrBuf$8 = 104
ptrSrc$9 = 112
$T10 = 120
$T11 = 136
j$12 = 152
frameSize$ = 156
uvPitch$13 = 160
uvWidth$14 = 164
uvHeight$15 = 168
ptrBuf$16 = 176
i$17 = 184
$T18 = 192
$T19 = 208
i$20 = 224
$T21 = 232
$T22 = 248
uvWidth$23 = 264
uvHeight$24 = 268
uvFrameOffset$25 = 272
xMaskLow8$26 = 288
$T27 = 304
j$28 = 320
ptrBuf$29 = 328
ptrSrc$30 = 336
$T31 = 344
ptrUV$32 = 360
$T33 = 368
ptrU$34 = 384
ptrV$35 = 392
i$36 = 400
x0$37 = 416
$T38 = 432
x1$39 = 448
$T40 = 464
$T41 = 480
$T42 = 496
$T43 = 512
$T44 = 528
$T45 = 544
$T46 = 560
ptrBuf$47 = 576
i$48 = 584
$T49 = 592
$T50 = 608
w$51 = 624
h$52 = 628
ptr$53 = 632
$T54 = 640
$T55 = 656
i$56 = 672
$T57 = 688
tv148 = 696
tv173 = 704
tv166 = 712
tv199 = 720
tv211 = 728
tv217 = 736
tv243 = 744
tv249 = 752
tv268 = 760
tv270 = 768
tv301 = 776
tv303 = 784
tv309 = 792
tv354 = 800
tv373 = 808
tv375 = 816
tv401 = 824
tv420 = 832
tv422 = 840
tv496 = 848
tv502 = 856
tv611 = 864
tv614 = 872
tv642 = 880
tv645 = 888
tv690 = 896
tv693 = 904
tv695 = 912
tv704 = 920
tv719 = 928
tv724 = 936
tv712 = 944
tv762 = 952
tv769 = 960
tv771 = 968
tv789 = 976
tv792 = 984
tv820 = 992
tv822 = 1000
__$ArrayPad$ = 1008
this$ = 1040
pSurface$ = 1048
?WriteNextFrame@CQSVOutFrame@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z PROC ; CQSVOutFrame::WriteNextFrame

; 404  : RGY_ERR CQSVOutFrame::WriteNextFrame(RGYFrame *pSurface) {

$LN59:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 00 04
	00 00		 sub	 rsp, 1024		; 00000400H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 00 01 00 00	 mov	 ecx, 256		; 00000100H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 10
	04 00 00	 mov	 rcx, QWORD PTR [rsp+1040]
  00029	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00030	48 33 c4	 xor	 rax, rsp
  00033	48 89 84 24 f0
	03 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 405  :     if (!m_fDest) {

  0003b	48 8b 84 24 10
	04 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c0 18	 add	 rax, 24
  00047	48 8b c8	 mov	 rcx, rax
  0004a	e8 00 00 00 00	 call	 ??B?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBA_NXZ ; std::unique_ptr<_iobuf,fp_deleter>::operator bool
  0004f	0f b6 c0	 movzx	 eax, al
  00052	85 c0		 test	 eax, eax
  00054	75 0a		 jne	 SHORT $LN26@WriteNextF

; 406  :         return RGY_ERR_NULL_PTR;

  00056	b8 fe ff ff ff	 mov	 eax, -2
  0005b	e9 df 11 00 00	 jmp	 $LN1@WriteNextF
$LN26@WriteNextF:

; 407  :     }
; 408  : 
; 409  :     if (m_bSourceHWMem) {

  00060	48 8b 84 24 10
	04 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00068	0f b6 40 28	 movzx	 eax, BYTE PTR [rax+40]
  0006c	85 c0		 test	 eax, eax
  0006e	74 53		 je	 SHORT $LN27@WriteNextF

; 410  :         if (m_pReadBuffer.get() == nullptr) {

  00070	48 8b 84 24 10
	04 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00078	48 05 28 01 00
	00		 add	 rax, 296		; 00000128H
  0007e	48 8b c8	 mov	 rcx, rax
  00081	e8 00 00 00 00	 call	 ?get@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEBAPEAEXZ ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::get
  00086	48 85 c0	 test	 rax, rax
  00089	75 38		 jne	 SHORT $LN28@WriteNextF

; 411  :             m_pReadBuffer.reset((uint8_t *)_aligned_malloc(pSurface->pitch() + 128, 16));

  0008b	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00093	e8 00 00 00 00	 call	 ?pitch@RGYFrame@@QEAAIXZ ; RGYFrame::pitch
  00098	05 80 00 00 00	 add	 eax, 128		; 00000080H
  0009d	8b c0		 mov	 eax, eax
  0009f	ba 10 00 00 00	 mov	 edx, 16
  000a4	8b c8		 mov	 ecx, eax
  000a6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__aligned_malloc
  000ac	48 8b 8c 24 10
	04 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000b4	48 81 c1 28 01
	00 00		 add	 rcx, 296		; 00000128H
  000bb	48 8b d0	 mov	 rdx, rax
  000be	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAAXPEAE@Z ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::reset
$LN28@WriteNextF:
$LN27@WriteNextF:

; 412  :         }
; 413  :     }
; 414  : 
; 415  :     if (m_bY4m) {

  000c3	48 8b 84 24 10
	04 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000cb	0f b6 80 38 01
	00 00		 movzx	 eax, BYTE PTR [rax+312]
  000d2	85 c0		 test	 eax, eax
  000d4	0f 84 e2 00 00
	00		 je	 $LN29@WriteNextF

; 416  :         if (!m_bY4mHeaderWritten) {

  000da	48 8b 84 24 10
	04 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000e2	0f b6 40 29	 movzx	 eax, BYTE PTR [rax+41]
  000e6	85 c0		 test	 eax, eax
  000e8	75 46		 jne	 SHORT $LN30@WriteNextF

; 417  :             WriteY4MHeader(m_fDest.get(), &m_VideoOutputInfo);

  000ea	48 8b 84 24 10
	04 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000f2	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  000f8	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR tv148[rsp], rax
  00100	48 8b 8c 24 10
	04 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00108	48 83 c1 18	 add	 rcx, 24
  0010c	e8 00 00 00 00	 call	 ?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ ; std::unique_ptr<_iobuf,fp_deleter>::get
  00111	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR tv148[rsp]
  00119	48 8b d1	 mov	 rdx, rcx
  0011c	48 8b c8	 mov	 rcx, rax
  0011f	e8 00 00 00 00	 call	 ?WriteY4MHeader@@YA?AW4RGY_ERR@@PEAU_iobuf@@PEBUVideoInfo@@@Z ; WriteY4MHeader

; 418  :             m_bY4mHeaderWritten = true;

  00124	48 8b 84 24 10
	04 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0012c	c6 40 29 01	 mov	 BYTE PTR [rax+41], 1
$LN30@WriteNextF:

; 419  :         }
; 420  :         WRITE_CHECK(fwrite("FRAME\n", 1, strlen("FRAME\n"), m_fDest.get()), strlen("FRAME\n"));

  00130	48 8b 84 24 10
	04 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00138	48 83 c0 18	 add	 rax, 24
  0013c	48 8b c8	 mov	 rcx, rax
  0013f	e8 00 00 00 00	 call	 ?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ ; std::unique_ptr<_iobuf,fp_deleter>::get
  00144	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR tv173[rsp], rax
  0014c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG135436
  00153	e8 00 00 00 00	 call	 strlen
  00158	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR tv173[rsp]
  00160	4c 8b c9	 mov	 r9, rcx
  00163	4c 8b c0	 mov	 r8, rax
  00166	ba 01 00 00 00	 mov	 edx, 1
  0016b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG135437
  00172	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fwrite
  00178	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR tv166[rsp], rax
  00180	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG135438
  00187	e8 00 00 00 00	 call	 strlen
  0018c	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR tv166[rsp]
  00194	48 3b c8	 cmp	 rcx, rax
  00197	74 23		 je	 SHORT $LN31@WriteNextF
  00199	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG135439
  001a0	ba 02 00 00 00	 mov	 edx, 2
  001a5	48 8b 8c 24 10
	04 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001ad	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage
  001b2	b8 f0 ff ff ff	 mov	 eax, -16
  001b7	e9 83 10 00 00	 jmp	 $LN1@WriteNextF
$LN31@WriteNextF:
$LN29@WriteNextF:

; 421  :     }
; 422  : 
; 423  :     auto loadLineToBuffer = [](uint8_t *ptrBuf, uint8_t *ptrSrc, int pitch) {

  001bc	48 8d 84 24 b0
	02 00 00	 lea	 rax, QWORD PTR $T57[rsp]
  001c4	48 8b f8	 mov	 rdi, rax
  001c7	33 c0		 xor	 eax, eax
  001c9	b9 01 00 00 00	 mov	 ecx, 1
  001ce	f3 aa		 rep stosb

; 424  :         for (int i = 0; i < pitch; i += 128, ptrSrc += 128, ptrBuf += 128) {
; 425  :             __m128i x0 = _mm_stream_load_si128((__m128i *)(ptrSrc +   0));
; 426  :             __m128i x1 = _mm_stream_load_si128((__m128i *)(ptrSrc +  16));
; 427  :             __m128i x2 = _mm_stream_load_si128((__m128i *)(ptrSrc +  32));
; 428  :             __m128i x3 = _mm_stream_load_si128((__m128i *)(ptrSrc +  48));
; 429  :             __m128i x4 = _mm_stream_load_si128((__m128i *)(ptrSrc +  64));
; 430  :             __m128i x5 = _mm_stream_load_si128((__m128i *)(ptrSrc +  80));
; 431  :             __m128i x6 = _mm_stream_load_si128((__m128i *)(ptrSrc +  96));
; 432  :             __m128i x7 = _mm_stream_load_si128((__m128i *)(ptrSrc + 112));
; 433  :             _mm_store_si128((__m128i *)(ptrBuf +   0), x0);
; 434  :             _mm_store_si128((__m128i *)(ptrBuf +  16), x1);
; 435  :             _mm_store_si128((__m128i *)(ptrBuf +  32), x2);
; 436  :             _mm_store_si128((__m128i *)(ptrBuf +  48), x3);
; 437  :             _mm_store_si128((__m128i *)(ptrBuf +  64), x4);
; 438  :             _mm_store_si128((__m128i *)(ptrBuf +  80), x5);
; 439  :             _mm_store_si128((__m128i *)(ptrBuf +  96), x6);
; 440  :             _mm_store_si128((__m128i *)(ptrBuf + 112), x7);
; 441  :         }
; 442  :     };
; 443  : 
; 444  :     const uint32_t lumaWidthBytes = pSurface->width() << ((pSurface->csp() == RGY_CSP_P010) ? 1 : 0);

  001d0	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  001d8	e8 00 00 00 00	 call	 ?csp@RGYFrame@@QEAA?AW4RGY_CSP@@XZ ; RGYFrame::csp
  001dd	83 f8 0c	 cmp	 eax, 12
  001e0	75 0d		 jne	 SHORT $LN57@WriteNextF
  001e2	c7 84 24 d0 02
	00 00 01 00 00
	00		 mov	 DWORD PTR tv199[rsp], 1
  001ed	eb 0b		 jmp	 SHORT $LN58@WriteNextF
$LN57@WriteNextF:
  001ef	c7 84 24 d0 02
	00 00 00 00 00
	00		 mov	 DWORD PTR tv199[rsp], 0
$LN58@WriteNextF:
  001fa	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00202	e8 00 00 00 00	 call	 ?width@RGYFrame@@QEAAIXZ ; RGYFrame::width
  00207	8b 8c 24 d0 02
	00 00		 mov	 ecx, DWORD PTR tv199[rsp]
  0020e	d3 e0		 shl	 eax, cl
  00210	89 44 24 34	 mov	 DWORD PTR lumaWidthBytes$[rsp], eax

; 445  :     if (   pSurface->csp() == RGY_CSP_YV12
; 446  :         || pSurface->csp() == RGY_CSP_NV12
; 447  :         || pSurface->csp() == RGY_CSP_P010) {

  00214	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  0021c	e8 00 00 00 00	 call	 ?csp@RGYFrame@@QEAA?AW4RGY_CSP@@XZ ; RGYFrame::csp
  00221	83 f8 02	 cmp	 eax, 2
  00224	74 28		 je	 SHORT $LN33@WriteNextF
  00226	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  0022e	e8 00 00 00 00	 call	 ?csp@RGYFrame@@QEAA?AW4RGY_CSP@@XZ ; RGYFrame::csp
  00233	83 f8 01	 cmp	 eax, 1
  00236	74 16		 je	 SHORT $LN33@WriteNextF
  00238	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00240	e8 00 00 00 00	 call	 ?csp@RGYFrame@@QEAA?AW4RGY_CSP@@XZ ; RGYFrame::csp
  00245	83 f8 0c	 cmp	 eax, 12
  00248	0f 85 de 02 00
	00		 jne	 $LN32@WriteNextF
$LN33@WriteNextF:

; 448  :         const uint32_t cropOffset = pSurface->crop().e.up * pSurface->pitch() + pSurface->crop().e.left;

  0024e	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T5[rsp]
  00253	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  0025b	e8 00 00 00 00	 call	 ?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ ; RGYFrame::crop
  00260	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR tv211[rsp], rax
  00268	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00270	e8 00 00 00 00	 call	 ?pitch@RGYFrame@@QEAAIXZ ; RGYFrame::pitch
  00275	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR tv211[rsp]
  0027d	8b 49 04	 mov	 ecx, DWORD PTR [rcx+4]
  00280	0f af c8	 imul	 ecx, eax
  00283	8b c1		 mov	 eax, ecx
  00285	89 84 24 e0 02
	00 00		 mov	 DWORD PTR tv217[rsp], eax
  0028c	48 8d 54 24 50	 lea	 rdx, QWORD PTR $T6[rsp]
  00291	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00299	e8 00 00 00 00	 call	 ?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ ; RGYFrame::crop
  0029e	8b 8c 24 e0 02
	00 00		 mov	 ecx, DWORD PTR tv217[rsp]
  002a5	03 08		 add	 ecx, DWORD PTR [rax]
  002a7	8b c1		 mov	 eax, ecx
  002a9	89 44 24 38	 mov	 DWORD PTR cropOffset$4[rsp], eax

; 449  :         if (m_bSourceHWMem) {

  002ad	48 8b 84 24 10
	04 00 00	 mov	 rax, QWORD PTR this$[rsp]
  002b5	0f b6 40 28	 movzx	 eax, BYTE PTR [rax+40]
  002b9	85 c0		 test	 eax, eax
  002bb	0f 84 72 01 00
	00		 je	 $LN34@WriteNextF

; 450  :             for (uint32_t j = 0; j < pSurface->height(); j++) {

  002c1	c7 44 24 60 00
	00 00 00	 mov	 DWORD PTR j$7[rsp], 0
  002c9	eb 0a		 jmp	 SHORT $LN4@WriteNextF
$LN2@WriteNextF:
  002cb	8b 44 24 60	 mov	 eax, DWORD PTR j$7[rsp]
  002cf	ff c0		 inc	 eax
  002d1	89 44 24 60	 mov	 DWORD PTR j$7[rsp], eax
$LN4@WriteNextF:
  002d5	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  002dd	e8 00 00 00 00	 call	 ?height@RGYFrame@@QEAAIXZ ; RGYFrame::height
  002e2	39 44 24 60	 cmp	 DWORD PTR j$7[rsp], eax
  002e6	0f 83 42 01 00
	00		 jae	 $LN3@WriteNextF

; 451  :                 uint8_t *ptrBuf = m_pReadBuffer.get();

  002ec	48 8b 84 24 10
	04 00 00	 mov	 rax, QWORD PTR this$[rsp]
  002f4	48 05 28 01 00
	00		 add	 rax, 296		; 00000128H
  002fa	48 8b c8	 mov	 rcx, rax
  002fd	e8 00 00 00 00	 call	 ?get@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEBAPEAEXZ ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::get
  00302	48 89 44 24 68	 mov	 QWORD PTR ptrBuf$8[rsp], rax

; 452  :                 uint8_t *ptrSrc = pSurface->ptrY() + (pSurface->crop().e.up + j) * pSurface->pitch();

  00307	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  0030f	e8 00 00 00 00	 call	 ?ptrY@RGYFrame@@QEAAPEAEXZ ; RGYFrame::ptrY
  00314	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR tv243[rsp], rax
  0031c	48 8d 54 24 78	 lea	 rdx, QWORD PTR $T10[rsp]
  00321	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00329	e8 00 00 00 00	 call	 ?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ ; RGYFrame::crop
  0032e	8b 40 04	 mov	 eax, DWORD PTR [rax+4]
  00331	03 44 24 60	 add	 eax, DWORD PTR j$7[rsp]
  00335	89 84 24 f0 02
	00 00		 mov	 DWORD PTR tv249[rsp], eax
  0033c	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00344	e8 00 00 00 00	 call	 ?pitch@RGYFrame@@QEAAIXZ ; RGYFrame::pitch
  00349	8b 8c 24 f0 02
	00 00		 mov	 ecx, DWORD PTR tv249[rsp]
  00350	0f af c8	 imul	 ecx, eax
  00353	8b c1		 mov	 eax, ecx
  00355	8b c0		 mov	 eax, eax
  00357	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR tv243[rsp]
  0035f	48 03 c8	 add	 rcx, rax
  00362	48 8b c1	 mov	 rax, rcx
  00365	48 89 44 24 70	 mov	 QWORD PTR ptrSrc$9[rsp], rax

; 453  :                 loadLineToBuffer(ptrBuf, ptrSrc, pSurface->pitch());

  0036a	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00372	e8 00 00 00 00	 call	 ?pitch@RGYFrame@@QEAAIXZ ; RGYFrame::pitch
  00377	44 8b c8	 mov	 r9d, eax
  0037a	4c 8b 44 24 70	 mov	 r8, QWORD PTR ptrSrc$9[rsp]
  0037f	48 8b 54 24 68	 mov	 rdx, QWORD PTR ptrBuf$8[rsp]
  00384	48 8d 4c 24 24	 lea	 rcx, QWORD PTR loadLineToBuffer$[rsp]
  00389	e8 00 00 00 00	 call	 ??R<lambda_f79789dc0fd7cea8a85e7512acf0222d>@@QEBAXPEAE0H@Z ; <lambda_f79789dc0fd7cea8a85e7512acf0222d>::operator()

; 454  :                 WRITE_CHECK(fwrite(ptrBuf + pSurface->crop().e.left, 1, lumaWidthBytes, m_fDest.get()), lumaWidthBytes);

  0038e	48 8b 84 24 10
	04 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00396	48 83 c0 18	 add	 rax, 24
  0039a	48 8b c8	 mov	 rcx, rax
  0039d	e8 00 00 00 00	 call	 ?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ ; std::unique_ptr<_iobuf,fp_deleter>::get
  003a2	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR tv268[rsp], rax
  003aa	8b 4c 24 34	 mov	 ecx, DWORD PTR lumaWidthBytes$[rsp]
  003ae	48 89 8c 24 00
	03 00 00	 mov	 QWORD PTR tv270[rsp], rcx
  003b6	48 8d 94 24 88
	00 00 00	 lea	 rdx, QWORD PTR $T11[rsp]
  003be	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  003c6	e8 00 00 00 00	 call	 ?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ ; RGYFrame::crop
  003cb	48 63 00	 movsxd	 rax, DWORD PTR [rax]
  003ce	48 8b 4c 24 68	 mov	 rcx, QWORD PTR ptrBuf$8[rsp]
  003d3	48 03 c8	 add	 rcx, rax
  003d6	48 8b c1	 mov	 rax, rcx
  003d9	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR tv268[rsp]
  003e1	4c 8b c9	 mov	 r9, rcx
  003e4	48 8b 8c 24 00
	03 00 00	 mov	 rcx, QWORD PTR tv270[rsp]
  003ec	4c 8b c1	 mov	 r8, rcx
  003ef	ba 01 00 00 00	 mov	 edx, 1
  003f4	48 8b c8	 mov	 rcx, rax
  003f7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fwrite
  003fd	8b 4c 24 34	 mov	 ecx, DWORD PTR lumaWidthBytes$[rsp]
  00401	48 3b c1	 cmp	 rax, rcx
  00404	74 23		 je	 SHORT $LN36@WriteNextF
  00406	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG135445
  0040d	ba 02 00 00 00	 mov	 edx, 2
  00412	48 8b 8c 24 10
	04 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0041a	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage
  0041f	b8 f0 ff ff ff	 mov	 eax, -16
  00424	e9 16 0e 00 00	 jmp	 $LN1@WriteNextF
$LN36@WriteNextF:

; 455  :             }

  00429	e9 9d fe ff ff	 jmp	 $LN2@WriteNextF
$LN3@WriteNextF:

; 456  :         } else {

  0042e	e9 f9 00 00 00	 jmp	 $LN35@WriteNextF
$LN34@WriteNextF:

; 457  :             for (uint32_t j = 0; j < pSurface->height(); j++) {

  00433	c7 84 24 98 00
	00 00 00 00 00
	00		 mov	 DWORD PTR j$12[rsp], 0
  0043e	eb 10		 jmp	 SHORT $LN7@WriteNextF
$LN5@WriteNextF:
  00440	8b 84 24 98 00
	00 00		 mov	 eax, DWORD PTR j$12[rsp]
  00447	ff c0		 inc	 eax
  00449	89 84 24 98 00
	00 00		 mov	 DWORD PTR j$12[rsp], eax
$LN7@WriteNextF:
  00450	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00458	e8 00 00 00 00	 call	 ?height@RGYFrame@@QEAAIXZ ; RGYFrame::height
  0045d	39 84 24 98 00
	00 00		 cmp	 DWORD PTR j$12[rsp], eax
  00464	0f 83 c2 00 00
	00		 jae	 $LN6@WriteNextF

; 458  :                 WRITE_CHECK(fwrite(pSurface->ptrY() + cropOffset + j * pSurface->pitch(), 1, lumaWidthBytes, m_fDest.get()), lumaWidthBytes);

  0046a	48 8b 84 24 10
	04 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00472	48 83 c0 18	 add	 rax, 24
  00476	48 8b c8	 mov	 rcx, rax
  00479	e8 00 00 00 00	 call	 ?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ ; std::unique_ptr<_iobuf,fp_deleter>::get
  0047e	48 89 84 24 08
	03 00 00	 mov	 QWORD PTR tv301[rsp], rax
  00486	8b 4c 24 34	 mov	 ecx, DWORD PTR lumaWidthBytes$[rsp]
  0048a	48 89 8c 24 10
	03 00 00	 mov	 QWORD PTR tv303[rsp], rcx
  00492	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  0049a	e8 00 00 00 00	 call	 ?ptrY@RGYFrame@@QEAAPEAEXZ ; RGYFrame::ptrY
  0049f	8b 4c 24 38	 mov	 ecx, DWORD PTR cropOffset$4[rsp]
  004a3	48 03 c1	 add	 rax, rcx
  004a6	48 89 84 24 18
	03 00 00	 mov	 QWORD PTR tv309[rsp], rax
  004ae	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  004b6	e8 00 00 00 00	 call	 ?pitch@RGYFrame@@QEAAIXZ ; RGYFrame::pitch
  004bb	8b 8c 24 98 00
	00 00		 mov	 ecx, DWORD PTR j$12[rsp]
  004c2	0f af c8	 imul	 ecx, eax
  004c5	8b c1		 mov	 eax, ecx
  004c7	8b c0		 mov	 eax, eax
  004c9	48 8b 8c 24 18
	03 00 00	 mov	 rcx, QWORD PTR tv309[rsp]
  004d1	48 03 c8	 add	 rcx, rax
  004d4	48 8b c1	 mov	 rax, rcx
  004d7	48 8b 8c 24 08
	03 00 00	 mov	 rcx, QWORD PTR tv301[rsp]
  004df	4c 8b c9	 mov	 r9, rcx
  004e2	48 8b 8c 24 10
	03 00 00	 mov	 rcx, QWORD PTR tv303[rsp]
  004ea	4c 8b c1	 mov	 r8, rcx
  004ed	ba 01 00 00 00	 mov	 edx, 1
  004f2	48 8b c8	 mov	 rcx, rax
  004f5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fwrite
  004fb	8b 4c 24 34	 mov	 ecx, DWORD PTR lumaWidthBytes$[rsp]
  004ff	48 3b c1	 cmp	 rax, rcx
  00502	74 23		 je	 SHORT $LN37@WriteNextF
  00504	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG135447
  0050b	ba 02 00 00 00	 mov	 edx, 2
  00510	48 8b 8c 24 10
	04 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00518	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage
  0051d	b8 f0 ff ff ff	 mov	 eax, -16
  00522	e9 18 0d 00 00	 jmp	 $LN1@WriteNextF
$LN37@WriteNextF:

; 459  :             }

  00527	e9 14 ff ff ff	 jmp	 $LN5@WriteNextF
$LN6@WriteNextF:
$LN35@WriteNextF:
$LN32@WriteNextF:

; 460  :         }
; 461  :     }
; 462  : 
; 463  :     uint32_t frameSize = 0;

  0052c	c7 84 24 9c 00
	00 00 00 00 00
	00		 mov	 DWORD PTR frameSize$[rsp], 0

; 464  :     if (pSurface->csp() == RGY_CSP_YV12) {

  00537	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  0053f	e8 00 00 00 00	 call	 ?csp@RGYFrame@@QEAA?AW4RGY_CSP@@XZ ; RGYFrame::csp
  00544	83 f8 02	 cmp	 eax, 2
  00547	0f 85 1a 03 00
	00		 jne	 $LN38@WriteNextF

; 465  :         frameSize = lumaWidthBytes * pSurface->height() * 3 / 2;

  0054d	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00555	e8 00 00 00 00	 call	 ?height@RGYFrame@@QEAAIXZ ; RGYFrame::height
  0055a	8b 4c 24 34	 mov	 ecx, DWORD PTR lumaWidthBytes$[rsp]
  0055e	0f af c8	 imul	 ecx, eax
  00561	8b c1		 mov	 eax, ecx
  00563	6b c0 03	 imul	 eax, eax, 3
  00566	33 d2		 xor	 edx, edx
  00568	b9 02 00 00 00	 mov	 ecx, 2
  0056d	f7 f1		 div	 ecx
  0056f	89 84 24 9c 00
	00 00		 mov	 DWORD PTR frameSize$[rsp], eax

; 466  : 
; 467  :         uint32_t uvPitch = pSurface->pitch() >> 1;

  00576	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  0057e	e8 00 00 00 00	 call	 ?pitch@RGYFrame@@QEAAIXZ ; RGYFrame::pitch
  00583	d1 e8		 shr	 eax, 1
  00585	89 84 24 a0 00
	00 00		 mov	 DWORD PTR uvPitch$13[rsp], eax

; 468  :         uint32_t uvWidth = pSurface->width() >> 1;

  0058c	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00594	e8 00 00 00 00	 call	 ?width@RGYFrame@@QEAAIXZ ; RGYFrame::width
  00599	d1 e8		 shr	 eax, 1
  0059b	89 84 24 a4 00
	00 00		 mov	 DWORD PTR uvWidth$14[rsp], eax

; 469  :         uint32_t uvHeight = pSurface->height() >> 1;

  005a2	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  005aa	e8 00 00 00 00	 call	 ?height@RGYFrame@@QEAAIXZ ; RGYFrame::height
  005af	d1 e8		 shr	 eax, 1
  005b1	89 84 24 a8 00
	00 00		 mov	 DWORD PTR uvHeight$15[rsp], eax

; 470  :         uint8_t *ptrBuf = m_pReadBuffer.get();

  005b8	48 8b 84 24 10
	04 00 00	 mov	 rax, QWORD PTR this$[rsp]
  005c0	48 05 28 01 00
	00		 add	 rax, 296		; 00000128H
  005c6	48 8b c8	 mov	 rcx, rax
  005c9	e8 00 00 00 00	 call	 ?get@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEBAPEAEXZ ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::get
  005ce	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR ptrBuf$16[rsp], rax

; 471  :         for (uint32_t i = 0; i < uvHeight; i++) {

  005d6	c7 84 24 b8 00
	00 00 00 00 00
	00		 mov	 DWORD PTR i$17[rsp], 0
  005e1	eb 10		 jmp	 SHORT $LN10@WriteNextF
$LN8@WriteNextF:
  005e3	8b 84 24 b8 00
	00 00		 mov	 eax, DWORD PTR i$17[rsp]
  005ea	ff c0		 inc	 eax
  005ec	89 84 24 b8 00
	00 00		 mov	 DWORD PTR i$17[rsp], eax
$LN10@WriteNextF:
  005f3	8b 84 24 a8 00
	00 00		 mov	 eax, DWORD PTR uvHeight$15[rsp]
  005fa	39 84 24 b8 00
	00 00		 cmp	 DWORD PTR i$17[rsp], eax
  00601	0f 83 15 01 00
	00		 jae	 $LN9@WriteNextF

; 472  :             loadLineToBuffer(ptrBuf, pSurface->ptrU() + (pSurface->crop().e.up + i) * uvPitch, uvPitch);

  00607	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  0060f	e8 00 00 00 00	 call	 ?ptrU@RGYFrame@@QEAAPEAEXZ ; RGYFrame::ptrU
  00614	48 89 84 24 20
	03 00 00	 mov	 QWORD PTR tv354[rsp], rax
  0061c	48 8d 94 24 c0
	00 00 00	 lea	 rdx, QWORD PTR $T18[rsp]
  00624	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  0062c	e8 00 00 00 00	 call	 ?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ ; RGYFrame::crop
  00631	8b 40 04	 mov	 eax, DWORD PTR [rax+4]
  00634	03 84 24 b8 00
	00 00		 add	 eax, DWORD PTR i$17[rsp]
  0063b	0f af 84 24 a0
	00 00 00	 imul	 eax, DWORD PTR uvPitch$13[rsp]
  00643	8b c0		 mov	 eax, eax
  00645	48 8b 8c 24 20
	03 00 00	 mov	 rcx, QWORD PTR tv354[rsp]
  0064d	48 03 c8	 add	 rcx, rax
  00650	48 8b c1	 mov	 rax, rcx
  00653	44 8b 8c 24 a0
	00 00 00	 mov	 r9d, DWORD PTR uvPitch$13[rsp]
  0065b	4c 8b c0	 mov	 r8, rax
  0065e	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR ptrBuf$16[rsp]
  00666	48 8d 4c 24 24	 lea	 rcx, QWORD PTR loadLineToBuffer$[rsp]
  0066b	e8 00 00 00 00	 call	 ??R<lambda_f79789dc0fd7cea8a85e7512acf0222d>@@QEBAXPEAE0H@Z ; <lambda_f79789dc0fd7cea8a85e7512acf0222d>::operator()

; 473  :             WRITE_CHECK(fwrite(ptrBuf + (pSurface->crop().e.left >> 1), 1, uvWidth, m_fDest.get()), uvWidth);

  00670	48 8b 84 24 10
	04 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00678	48 83 c0 18	 add	 rax, 24
  0067c	48 8b c8	 mov	 rcx, rax
  0067f	e8 00 00 00 00	 call	 ?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ ; std::unique_ptr<_iobuf,fp_deleter>::get
  00684	48 89 84 24 28
	03 00 00	 mov	 QWORD PTR tv373[rsp], rax
  0068c	8b 8c 24 a4 00
	00 00		 mov	 ecx, DWORD PTR uvWidth$14[rsp]
  00693	48 89 8c 24 30
	03 00 00	 mov	 QWORD PTR tv375[rsp], rcx
  0069b	48 8d 94 24 d0
	00 00 00	 lea	 rdx, QWORD PTR $T19[rsp]
  006a3	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  006ab	e8 00 00 00 00	 call	 ?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ ; RGYFrame::crop
  006b0	8b 00		 mov	 eax, DWORD PTR [rax]
  006b2	d1 f8		 sar	 eax, 1
  006b4	48 98		 cdqe
  006b6	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR ptrBuf$16[rsp]
  006be	48 03 c8	 add	 rcx, rax
  006c1	48 8b c1	 mov	 rax, rcx
  006c4	48 8b 8c 24 28
	03 00 00	 mov	 rcx, QWORD PTR tv373[rsp]
  006cc	4c 8b c9	 mov	 r9, rcx
  006cf	48 8b 8c 24 30
	03 00 00	 mov	 rcx, QWORD PTR tv375[rsp]
  006d7	4c 8b c1	 mov	 r8, rcx
  006da	ba 01 00 00 00	 mov	 edx, 1
  006df	48 8b c8	 mov	 rcx, rax
  006e2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fwrite
  006e8	8b 8c 24 a4 00
	00 00		 mov	 ecx, DWORD PTR uvWidth$14[rsp]
  006ef	48 3b c1	 cmp	 rax, rcx
  006f2	74 23		 je	 SHORT $LN40@WriteNextF
  006f4	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG135451
  006fb	ba 02 00 00 00	 mov	 edx, 2
  00700	48 8b 8c 24 10
	04 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00708	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage
  0070d	b8 f0 ff ff ff	 mov	 eax, -16
  00712	e9 28 0b 00 00	 jmp	 $LN1@WriteNextF
$LN40@WriteNextF:

; 474  :         }

  00717	e9 c7 fe ff ff	 jmp	 $LN8@WriteNextF
$LN9@WriteNextF:

; 475  :         for (uint32_t i = 0; i < uvHeight; i++) {

  0071c	c7 84 24 e0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR i$20[rsp], 0
  00727	eb 10		 jmp	 SHORT $LN13@WriteNextF
$LN11@WriteNextF:
  00729	8b 84 24 e0 00
	00 00		 mov	 eax, DWORD PTR i$20[rsp]
  00730	ff c0		 inc	 eax
  00732	89 84 24 e0 00
	00 00		 mov	 DWORD PTR i$20[rsp], eax
$LN13@WriteNextF:
  00739	8b 84 24 a8 00
	00 00		 mov	 eax, DWORD PTR uvHeight$15[rsp]
  00740	39 84 24 e0 00
	00 00		 cmp	 DWORD PTR i$20[rsp], eax
  00747	0f 83 15 01 00
	00		 jae	 $LN12@WriteNextF

; 476  :             loadLineToBuffer(ptrBuf, pSurface->ptrV() + (pSurface->crop().e.up + i) * uvPitch, uvPitch);

  0074d	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00755	e8 00 00 00 00	 call	 ?ptrV@RGYFrame@@QEAAPEAEXZ ; RGYFrame::ptrV
  0075a	48 89 84 24 38
	03 00 00	 mov	 QWORD PTR tv401[rsp], rax
  00762	48 8d 94 24 e8
	00 00 00	 lea	 rdx, QWORD PTR $T21[rsp]
  0076a	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00772	e8 00 00 00 00	 call	 ?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ ; RGYFrame::crop
  00777	8b 40 04	 mov	 eax, DWORD PTR [rax+4]
  0077a	03 84 24 e0 00
	00 00		 add	 eax, DWORD PTR i$20[rsp]
  00781	0f af 84 24 a0
	00 00 00	 imul	 eax, DWORD PTR uvPitch$13[rsp]
  00789	8b c0		 mov	 eax, eax
  0078b	48 8b 8c 24 38
	03 00 00	 mov	 rcx, QWORD PTR tv401[rsp]
  00793	48 03 c8	 add	 rcx, rax
  00796	48 8b c1	 mov	 rax, rcx
  00799	44 8b 8c 24 a0
	00 00 00	 mov	 r9d, DWORD PTR uvPitch$13[rsp]
  007a1	4c 8b c0	 mov	 r8, rax
  007a4	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR ptrBuf$16[rsp]
  007ac	48 8d 4c 24 24	 lea	 rcx, QWORD PTR loadLineToBuffer$[rsp]
  007b1	e8 00 00 00 00	 call	 ??R<lambda_f79789dc0fd7cea8a85e7512acf0222d>@@QEBAXPEAE0H@Z ; <lambda_f79789dc0fd7cea8a85e7512acf0222d>::operator()

; 477  :             WRITE_CHECK(fwrite(ptrBuf + (pSurface->crop().e.left >> 1), 1, uvWidth, m_fDest.get()), uvWidth);

  007b6	48 8b 84 24 10
	04 00 00	 mov	 rax, QWORD PTR this$[rsp]
  007be	48 83 c0 18	 add	 rax, 24
  007c2	48 8b c8	 mov	 rcx, rax
  007c5	e8 00 00 00 00	 call	 ?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ ; std::unique_ptr<_iobuf,fp_deleter>::get
  007ca	48 89 84 24 40
	03 00 00	 mov	 QWORD PTR tv420[rsp], rax
  007d2	8b 8c 24 a4 00
	00 00		 mov	 ecx, DWORD PTR uvWidth$14[rsp]
  007d9	48 89 8c 24 48
	03 00 00	 mov	 QWORD PTR tv422[rsp], rcx
  007e1	48 8d 94 24 f8
	00 00 00	 lea	 rdx, QWORD PTR $T22[rsp]
  007e9	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  007f1	e8 00 00 00 00	 call	 ?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ ; RGYFrame::crop
  007f6	8b 00		 mov	 eax, DWORD PTR [rax]
  007f8	d1 f8		 sar	 eax, 1
  007fa	48 98		 cdqe
  007fc	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR ptrBuf$16[rsp]
  00804	48 03 c8	 add	 rcx, rax
  00807	48 8b c1	 mov	 rax, rcx
  0080a	48 8b 8c 24 40
	03 00 00	 mov	 rcx, QWORD PTR tv420[rsp]
  00812	4c 8b c9	 mov	 r9, rcx
  00815	48 8b 8c 24 48
	03 00 00	 mov	 rcx, QWORD PTR tv422[rsp]
  0081d	4c 8b c1	 mov	 r8, rcx
  00820	ba 01 00 00 00	 mov	 edx, 1
  00825	48 8b c8	 mov	 rcx, rax
  00828	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fwrite
  0082e	8b 8c 24 a4 00
	00 00		 mov	 ecx, DWORD PTR uvWidth$14[rsp]
  00835	48 3b c1	 cmp	 rax, rcx
  00838	74 23		 je	 SHORT $LN41@WriteNextF
  0083a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG135453
  00841	ba 02 00 00 00	 mov	 edx, 2
  00846	48 8b 8c 24 10
	04 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0084e	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage
  00853	b8 f0 ff ff ff	 mov	 eax, -16
  00858	e9 e2 09 00 00	 jmp	 $LN1@WriteNextF
$LN41@WriteNextF:

; 478  :         }

  0085d	e9 c7 fe ff ff	 jmp	 $LN11@WriteNextF
$LN12@WriteNextF:

; 479  :     } else if (pSurface->csp() == RGY_CSP_NV12) {

  00862	e9 86 09 00 00	 jmp	 $LN39@WriteNextF
$LN38@WriteNextF:
  00867	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  0086f	e8 00 00 00 00	 call	 ?csp@RGYFrame@@QEAA?AW4RGY_CSP@@XZ ; RGYFrame::csp
  00874	83 f8 01	 cmp	 eax, 1
  00877	0f 85 51 05 00
	00		 jne	 $LN42@WriteNextF

; 480  :         frameSize = lumaWidthBytes * pSurface->height() * 3 / 2;

  0087d	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00885	e8 00 00 00 00	 call	 ?height@RGYFrame@@QEAAIXZ ; RGYFrame::height
  0088a	8b 4c 24 34	 mov	 ecx, DWORD PTR lumaWidthBytes$[rsp]
  0088e	0f af c8	 imul	 ecx, eax
  00891	8b c1		 mov	 eax, ecx
  00893	6b c0 03	 imul	 eax, eax, 3
  00896	33 d2		 xor	 edx, edx
  00898	b9 02 00 00 00	 mov	 ecx, 2
  0089d	f7 f1		 div	 ecx
  0089f	89 84 24 9c 00
	00 00		 mov	 DWORD PTR frameSize$[rsp], eax

; 481  :         uint32_t uvWidth = pSurface->width() >> 1;

  008a6	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  008ae	e8 00 00 00 00	 call	 ?width@RGYFrame@@QEAAIXZ ; RGYFrame::width
  008b3	d1 e8		 shr	 eax, 1
  008b5	89 84 24 08 01
	00 00		 mov	 DWORD PTR uvWidth$23[rsp], eax

; 482  :         //uint32_t nv12Width = pSurface->width();
; 483  :         uint32_t uvHeight = pSurface->height() >> 1;

  008bc	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  008c4	e8 00 00 00 00	 call	 ?height@RGYFrame@@QEAAIXZ ; RGYFrame::height
  008c9	d1 e8		 shr	 eax, 1
  008cb	89 84 24 0c 01
	00 00		 mov	 DWORD PTR uvHeight$24[rsp], eax

; 484  :         uint32_t uvFrameOffset = ALIGN16(uvWidth * uvHeight + 16);

  008d2	8b 84 24 08 01
	00 00		 mov	 eax, DWORD PTR uvWidth$23[rsp]
  008d9	0f af 84 24 0c
	01 00 00	 imul	 eax, DWORD PTR uvHeight$24[rsp]
  008e1	83 c0 1f	 add	 eax, 31
  008e4	83 e0 f0	 and	 eax, -16		; fffffff0H
  008e7	89 84 24 10 01
	00 00		 mov	 DWORD PTR uvFrameOffset$25[rsp], eax

; 485  :         if (m_pUVBuffer.get() == nullptr) {

  008ee	48 8b 84 24 10
	04 00 00	 mov	 rax, QWORD PTR this$[rsp]
  008f6	48 05 30 01 00
	00		 add	 rax, 304		; 00000130H
  008fc	48 8b c8	 mov	 rcx, rax
  008ff	e8 00 00 00 00	 call	 ?get@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEBAPEAEXZ ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::get
  00904	48 85 c0	 test	 rax, rax
  00907	75 2f		 jne	 SHORT $LN44@WriteNextF

; 486  :             m_pUVBuffer.reset((uint8_t *)_aligned_malloc(uvFrameOffset << 1, 32));

  00909	8b 84 24 10 01
	00 00		 mov	 eax, DWORD PTR uvFrameOffset$25[rsp]
  00910	d1 e0		 shl	 eax, 1
  00912	8b c0		 mov	 eax, eax
  00914	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00919	8b c8		 mov	 ecx, eax
  0091b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__aligned_malloc
  00921	48 8b 8c 24 10
	04 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00929	48 81 c1 30 01
	00 00		 add	 rcx, 304		; 00000130H
  00930	48 8b d0	 mov	 rdx, rax
  00933	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAAXPEAE@Z ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::reset
$LN44@WriteNextF:

; 487  :         }
; 488  : 
; 489  :         alignas(16) static const uint16_t MASK_LOW8[] = {
; 490  :             0x00ff, 0x00ff, 0x00ff, 0x00ff, 0x00ff, 0x00ff, 0x00ff, 0x00ff
; 491  :         };
; 492  :         const __m128i xMaskLow8 = _mm_load_si128((__m128i *)MASK_LOW8);

  00938	66 0f 6f 05 00
	00 00 00	 movdqa	 xmm0, XMMWORD PTR ?MASK_LOW8@?DM@??WriteNextFrame@CQSVOutFrame@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z@4QBGB
  00940	66 0f 7f 84 24
	30 01 00 00	 movdqa	 XMMWORD PTR $T27[rsp], xmm0
  00949	66 0f 6f 84 24
	30 01 00 00	 movdqa	 xmm0, XMMWORD PTR $T27[rsp]
  00952	66 0f 7f 84 24
	20 01 00 00	 movdqa	 XMMWORD PTR xMaskLow8$26[rsp], xmm0

; 493  : 
; 494  :         for (uint32_t j = 0; j < uvHeight; j++) {

  0095b	c7 84 24 40 01
	00 00 00 00 00
	00		 mov	 DWORD PTR j$28[rsp], 0
  00966	eb 10		 jmp	 SHORT $LN16@WriteNextF
$LN14@WriteNextF:
  00968	8b 84 24 40 01
	00 00		 mov	 eax, DWORD PTR j$28[rsp]
  0096f	ff c0		 inc	 eax
  00971	89 84 24 40 01
	00 00		 mov	 DWORD PTR j$28[rsp], eax
$LN16@WriteNextF:
  00978	8b 84 24 0c 01
	00 00		 mov	 eax, DWORD PTR uvHeight$24[rsp]
  0097f	39 84 24 40 01
	00 00		 cmp	 DWORD PTR j$28[rsp], eax
  00986	0f 83 e1 02 00
	00		 jae	 $LN15@WriteNextF

; 495  :             uint8_t *ptrBuf = m_pReadBuffer.get();

  0098c	48 8b 84 24 10
	04 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00994	48 05 28 01 00
	00		 add	 rax, 296		; 00000128H
  0099a	48 8b c8	 mov	 rcx, rax
  0099d	e8 00 00 00 00	 call	 ?get@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEBAPEAEXZ ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::get
  009a2	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR ptrBuf$29[rsp], rax

; 496  :             uint8_t *ptrSrc = pSurface->ptrUV() + (pSurface->crop().e.up + j) * pSurface->pitch();

  009aa	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  009b2	e8 00 00 00 00	 call	 ?ptrUV@RGYFrame@@QEAAPEAEXZ ; RGYFrame::ptrUV
  009b7	48 89 84 24 50
	03 00 00	 mov	 QWORD PTR tv496[rsp], rax
  009bf	48 8d 94 24 58
	01 00 00	 lea	 rdx, QWORD PTR $T31[rsp]
  009c7	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  009cf	e8 00 00 00 00	 call	 ?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ ; RGYFrame::crop
  009d4	8b 40 04	 mov	 eax, DWORD PTR [rax+4]
  009d7	03 84 24 40 01
	00 00		 add	 eax, DWORD PTR j$28[rsp]
  009de	89 84 24 58 03
	00 00		 mov	 DWORD PTR tv502[rsp], eax
  009e5	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  009ed	e8 00 00 00 00	 call	 ?pitch@RGYFrame@@QEAAIXZ ; RGYFrame::pitch
  009f2	8b 8c 24 58 03
	00 00		 mov	 ecx, DWORD PTR tv502[rsp]
  009f9	0f af c8	 imul	 ecx, eax
  009fc	8b c1		 mov	 eax, ecx
  009fe	8b c0		 mov	 eax, eax
  00a00	48 8b 8c 24 50
	03 00 00	 mov	 rcx, QWORD PTR tv496[rsp]
  00a08	48 03 c8	 add	 rcx, rax
  00a0b	48 8b c1	 mov	 rax, rcx
  00a0e	48 89 84 24 50
	01 00 00	 mov	 QWORD PTR ptrSrc$30[rsp], rax

; 497  :             if (m_bSourceHWMem) {

  00a16	48 8b 84 24 10
	04 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00a1e	0f b6 40 28	 movzx	 eax, BYTE PTR [rax+40]
  00a22	85 c0		 test	 eax, eax
  00a24	74 2c		 je	 SHORT $LN45@WriteNextF

; 498  :                 loadLineToBuffer(ptrBuf, ptrSrc, pSurface->pitch());

  00a26	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00a2e	e8 00 00 00 00	 call	 ?pitch@RGYFrame@@QEAAIXZ ; RGYFrame::pitch
  00a33	44 8b c8	 mov	 r9d, eax
  00a36	4c 8b 84 24 50
	01 00 00	 mov	 r8, QWORD PTR ptrSrc$30[rsp]
  00a3e	48 8b 94 24 48
	01 00 00	 mov	 rdx, QWORD PTR ptrBuf$29[rsp]
  00a46	48 8d 4c 24 24	 lea	 rcx, QWORD PTR loadLineToBuffer$[rsp]
  00a4b	e8 00 00 00 00	 call	 ??R<lambda_f79789dc0fd7cea8a85e7512acf0222d>@@QEBAXPEAE0H@Z ; <lambda_f79789dc0fd7cea8a85e7512acf0222d>::operator()

; 499  :             } else {

  00a50	eb 10		 jmp	 SHORT $LN46@WriteNextF
$LN45@WriteNextF:

; 500  :                 ptrBuf = ptrSrc;

  00a52	48 8b 84 24 50
	01 00 00	 mov	 rax, QWORD PTR ptrSrc$30[rsp]
  00a5a	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR ptrBuf$29[rsp], rax
$LN46@WriteNextF:

; 501  :             }
; 502  : 
; 503  :             uint8_t *ptrUV = ptrBuf + pSurface->crop().e.left;

  00a62	48 8d 94 24 70
	01 00 00	 lea	 rdx, QWORD PTR $T33[rsp]
  00a6a	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00a72	e8 00 00 00 00	 call	 ?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ ; RGYFrame::crop
  00a77	48 63 00	 movsxd	 rax, DWORD PTR [rax]
  00a7a	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR ptrBuf$29[rsp]
  00a82	48 03 c8	 add	 rcx, rax
  00a85	48 8b c1	 mov	 rax, rcx
  00a88	48 89 84 24 68
	01 00 00	 mov	 QWORD PTR ptrUV$32[rsp], rax

; 504  :             uint8_t *ptrU = m_pUVBuffer.get() + j * uvWidth;

  00a90	48 8b 84 24 10
	04 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00a98	48 05 30 01 00
	00		 add	 rax, 304		; 00000130H
  00a9e	48 8b c8	 mov	 rcx, rax
  00aa1	e8 00 00 00 00	 call	 ?get@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEBAPEAEXZ ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::get
  00aa6	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR j$28[rsp]
  00aad	0f af 8c 24 08
	01 00 00	 imul	 ecx, DWORD PTR uvWidth$23[rsp]
  00ab5	8b c9		 mov	 ecx, ecx
  00ab7	48 03 c1	 add	 rax, rcx
  00aba	48 89 84 24 80
	01 00 00	 mov	 QWORD PTR ptrU$34[rsp], rax

; 505  :             uint8_t *ptrV = ptrU + uvFrameOffset;

  00ac2	8b 84 24 10 01
	00 00		 mov	 eax, DWORD PTR uvFrameOffset$25[rsp]
  00ac9	48 8b 8c 24 80
	01 00 00	 mov	 rcx, QWORD PTR ptrU$34[rsp]
  00ad1	48 03 c8	 add	 rcx, rax
  00ad4	48 8b c1	 mov	 rax, rcx
  00ad7	48 89 84 24 88
	01 00 00	 mov	 QWORD PTR ptrV$35[rsp], rax

; 506  :             for (uint32_t i = 0; i < uvWidth; i += 16, ptrUV += 32, ptrU += 16, ptrV += 16) {

  00adf	c7 84 24 90 01
	00 00 00 00 00
	00		 mov	 DWORD PTR i$36[rsp], 0
  00aea	eb 4d		 jmp	 SHORT $LN19@WriteNextF
$LN17@WriteNextF:
  00aec	8b 84 24 90 01
	00 00		 mov	 eax, DWORD PTR i$36[rsp]
  00af3	83 c0 10	 add	 eax, 16
  00af6	89 84 24 90 01
	00 00		 mov	 DWORD PTR i$36[rsp], eax
  00afd	48 8b 84 24 68
	01 00 00	 mov	 rax, QWORD PTR ptrUV$32[rsp]
  00b05	48 83 c0 20	 add	 rax, 32			; 00000020H
  00b09	48 89 84 24 68
	01 00 00	 mov	 QWORD PTR ptrUV$32[rsp], rax
  00b11	48 8b 84 24 80
	01 00 00	 mov	 rax, QWORD PTR ptrU$34[rsp]
  00b19	48 83 c0 10	 add	 rax, 16
  00b1d	48 89 84 24 80
	01 00 00	 mov	 QWORD PTR ptrU$34[rsp], rax
  00b25	48 8b 84 24 88
	01 00 00	 mov	 rax, QWORD PTR ptrV$35[rsp]
  00b2d	48 83 c0 10	 add	 rax, 16
  00b31	48 89 84 24 88
	01 00 00	 mov	 QWORD PTR ptrV$35[rsp], rax
$LN19@WriteNextF:
  00b39	8b 84 24 08 01
	00 00		 mov	 eax, DWORD PTR uvWidth$23[rsp]
  00b40	39 84 24 90 01
	00 00		 cmp	 DWORD PTR i$36[rsp], eax
  00b47	0f 83 1b 01 00
	00		 jae	 $LN18@WriteNextF

; 507  :                 __m128i x0 = _mm_loadu_si128((__m128i *)(ptrUV +  0));

  00b4d	48 8b 84 24 68
	01 00 00	 mov	 rax, QWORD PTR ptrUV$32[rsp]
  00b55	f3 0f 6f 00	 movdqu	 xmm0, XMMWORD PTR [rax]
  00b59	66 0f 7f 84 24
	b0 01 00 00	 movdqa	 XMMWORD PTR $T38[rsp], xmm0
  00b62	66 0f 6f 84 24
	b0 01 00 00	 movdqa	 xmm0, XMMWORD PTR $T38[rsp]
  00b6b	66 0f 7f 84 24
	a0 01 00 00	 movdqa	 XMMWORD PTR x0$37[rsp], xmm0

; 508  :                 __m128i x1 = _mm_loadu_si128((__m128i *)(ptrUV + 16));

  00b74	48 8b 84 24 68
	01 00 00	 mov	 rax, QWORD PTR ptrUV$32[rsp]
  00b7c	48 83 c0 10	 add	 rax, 16
  00b80	f3 0f 6f 00	 movdqu	 xmm0, XMMWORD PTR [rax]
  00b84	66 0f 7f 84 24
	d0 01 00 00	 movdqa	 XMMWORD PTR $T40[rsp], xmm0
  00b8d	66 0f 6f 84 24
	d0 01 00 00	 movdqa	 xmm0, XMMWORD PTR $T40[rsp]
  00b96	66 0f 7f 84 24
	c0 01 00 00	 movdqa	 XMMWORD PTR x1$39[rsp], xmm0

; 509  :                 _mm_storeu_si128((__m128i *)ptrU, _mm_packus_epi16(_mm_and_si128(x0, xMaskLow8), _mm_and_si128(x1, xMaskLow8)));

  00b9f	66 0f 6f 84 24
	c0 01 00 00	 movdqa	 xmm0, XMMWORD PTR x1$39[rsp]
  00ba8	66 0f db 84 24
	20 01 00 00	 pand	 xmm0, XMMWORD PTR xMaskLow8$26[rsp]
  00bb1	66 0f 7f 84 24
	f0 01 00 00	 movdqa	 XMMWORD PTR $T42[rsp], xmm0
  00bba	66 0f 6f 84 24
	a0 01 00 00	 movdqa	 xmm0, XMMWORD PTR x0$37[rsp]
  00bc3	66 0f db 84 24
	20 01 00 00	 pand	 xmm0, XMMWORD PTR xMaskLow8$26[rsp]
  00bcc	66 0f 7f 84 24
	e0 01 00 00	 movdqa	 XMMWORD PTR $T41[rsp], xmm0
  00bd5	66 0f 6f 84 24
	e0 01 00 00	 movdqa	 xmm0, XMMWORD PTR $T41[rsp]
  00bde	66 0f 67 84 24
	f0 01 00 00	 packuswb xmm0, XMMWORD PTR $T42[rsp]
  00be7	66 0f 7f 84 24
	00 02 00 00	 movdqa	 XMMWORD PTR $T43[rsp], xmm0
  00bf0	48 8b 84 24 80
	01 00 00	 mov	 rax, QWORD PTR ptrU$34[rsp]
  00bf8	66 0f 6f 84 24
	00 02 00 00	 movdqa	 xmm0, XMMWORD PTR $T43[rsp]
  00c01	f3 0f 7f 00	 movdqu	 XMMWORD PTR [rax], xmm0

; 510  :                 _mm_storeu_si128((__m128i *)ptrV, _mm_packus_epi16(_mm_srli_epi16(x0, 8), _mm_srli_epi16(x1, 8)));

  00c05	66 0f 6f 84 24
	c0 01 00 00	 movdqa	 xmm0, XMMWORD PTR x1$39[rsp]
  00c0e	66 0f 71 d0 08	 psrlw	 xmm0, 8
  00c13	66 0f 7f 84 24
	20 02 00 00	 movdqa	 XMMWORD PTR $T45[rsp], xmm0
  00c1c	66 0f 6f 84 24
	a0 01 00 00	 movdqa	 xmm0, XMMWORD PTR x0$37[rsp]
  00c25	66 0f 71 d0 08	 psrlw	 xmm0, 8
  00c2a	66 0f 7f 84 24
	10 02 00 00	 movdqa	 XMMWORD PTR $T44[rsp], xmm0
  00c33	66 0f 6f 84 24
	10 02 00 00	 movdqa	 xmm0, XMMWORD PTR $T44[rsp]
  00c3c	66 0f 67 84 24
	20 02 00 00	 packuswb xmm0, XMMWORD PTR $T45[rsp]
  00c45	66 0f 7f 84 24
	30 02 00 00	 movdqa	 XMMWORD PTR $T46[rsp], xmm0
  00c4e	48 8b 84 24 88
	01 00 00	 mov	 rax, QWORD PTR ptrV$35[rsp]
  00c56	66 0f 6f 84 24
	30 02 00 00	 movdqa	 xmm0, XMMWORD PTR $T46[rsp]
  00c5f	f3 0f 7f 00	 movdqu	 XMMWORD PTR [rax], xmm0

; 511  :             }

  00c63	e9 84 fe ff ff	 jmp	 $LN17@WriteNextF
$LN18@WriteNextF:

; 512  :         }

  00c68	e9 fb fc ff ff	 jmp	 $LN14@WriteNextF
$LN15@WriteNextF:

; 513  :         WRITE_CHECK(fwrite(m_pUVBuffer.get(), 1, uvWidth * uvHeight, m_fDest.get()), uvWidth * uvHeight);

  00c6d	48 8b 84 24 10
	04 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00c75	48 83 c0 18	 add	 rax, 24
  00c79	48 8b c8	 mov	 rcx, rax
  00c7c	e8 00 00 00 00	 call	 ?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ ; std::unique_ptr<_iobuf,fp_deleter>::get
  00c81	48 89 84 24 60
	03 00 00	 mov	 QWORD PTR tv611[rsp], rax
  00c89	8b 8c 24 08 01
	00 00		 mov	 ecx, DWORD PTR uvWidth$23[rsp]
  00c90	0f af 8c 24 0c
	01 00 00	 imul	 ecx, DWORD PTR uvHeight$24[rsp]
  00c98	8b c9		 mov	 ecx, ecx
  00c9a	48 89 8c 24 68
	03 00 00	 mov	 QWORD PTR tv614[rsp], rcx
  00ca2	48 8b 94 24 10
	04 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  00caa	48 81 c2 30 01
	00 00		 add	 rdx, 304		; 00000130H
  00cb1	48 8b ca	 mov	 rcx, rdx
  00cb4	e8 00 00 00 00	 call	 ?get@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEBAPEAEXZ ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::get
  00cb9	48 8b 8c 24 60
	03 00 00	 mov	 rcx, QWORD PTR tv611[rsp]
  00cc1	4c 8b c9	 mov	 r9, rcx
  00cc4	48 8b 8c 24 68
	03 00 00	 mov	 rcx, QWORD PTR tv614[rsp]
  00ccc	4c 8b c1	 mov	 r8, rcx
  00ccf	ba 01 00 00 00	 mov	 edx, 1
  00cd4	48 8b c8	 mov	 rcx, rax
  00cd7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fwrite
  00cdd	8b 8c 24 08 01
	00 00		 mov	 ecx, DWORD PTR uvWidth$23[rsp]
  00ce4	0f af 8c 24 0c
	01 00 00	 imul	 ecx, DWORD PTR uvHeight$24[rsp]
  00cec	8b c9		 mov	 ecx, ecx
  00cee	48 3b c1	 cmp	 rax, rcx
  00cf1	74 23		 je	 SHORT $LN47@WriteNextF
  00cf3	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG135460
  00cfa	ba 02 00 00 00	 mov	 edx, 2
  00cff	48 8b 8c 24 10
	04 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00d07	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage
  00d0c	b8 f0 ff ff ff	 mov	 eax, -16
  00d11	e9 29 05 00 00	 jmp	 $LN1@WriteNextF
$LN47@WriteNextF:

; 514  :         WRITE_CHECK(fwrite(m_pUVBuffer.get() + uvFrameOffset, 1, uvWidth * uvHeight, m_fDest.get()), uvWidth * uvHeight);

  00d16	48 8b 84 24 10
	04 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00d1e	48 83 c0 18	 add	 rax, 24
  00d22	48 8b c8	 mov	 rcx, rax
  00d25	e8 00 00 00 00	 call	 ?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ ; std::unique_ptr<_iobuf,fp_deleter>::get
  00d2a	48 89 84 24 70
	03 00 00	 mov	 QWORD PTR tv642[rsp], rax
  00d32	8b 8c 24 08 01
	00 00		 mov	 ecx, DWORD PTR uvWidth$23[rsp]
  00d39	0f af 8c 24 0c
	01 00 00	 imul	 ecx, DWORD PTR uvHeight$24[rsp]
  00d41	8b c9		 mov	 ecx, ecx
  00d43	48 89 8c 24 78
	03 00 00	 mov	 QWORD PTR tv645[rsp], rcx
  00d4b	48 8b 94 24 10
	04 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  00d53	48 81 c2 30 01
	00 00		 add	 rdx, 304		; 00000130H
  00d5a	48 8b ca	 mov	 rcx, rdx
  00d5d	e8 00 00 00 00	 call	 ?get@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEBAPEAEXZ ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::get
  00d62	8b 8c 24 10 01
	00 00		 mov	 ecx, DWORD PTR uvFrameOffset$25[rsp]
  00d69	48 03 c1	 add	 rax, rcx
  00d6c	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR tv642[rsp]
  00d74	4c 8b c9	 mov	 r9, rcx
  00d77	48 8b 8c 24 78
	03 00 00	 mov	 rcx, QWORD PTR tv645[rsp]
  00d7f	4c 8b c1	 mov	 r8, rcx
  00d82	ba 01 00 00 00	 mov	 edx, 1
  00d87	48 8b c8	 mov	 rcx, rax
  00d8a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fwrite
  00d90	8b 8c 24 08 01
	00 00		 mov	 ecx, DWORD PTR uvWidth$23[rsp]
  00d97	0f af 8c 24 0c
	01 00 00	 imul	 ecx, DWORD PTR uvHeight$24[rsp]
  00d9f	8b c9		 mov	 ecx, ecx
  00da1	48 3b c1	 cmp	 rax, rcx
  00da4	74 23		 je	 SHORT $LN48@WriteNextF
  00da6	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG135462
  00dad	ba 02 00 00 00	 mov	 edx, 2
  00db2	48 8b 8c 24 10
	04 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00dba	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage
  00dbf	b8 f0 ff ff ff	 mov	 eax, -16
  00dc4	e9 76 04 00 00	 jmp	 $LN1@WriteNextF
$LN48@WriteNextF:
  00dc9	e9 1f 04 00 00	 jmp	 $LN43@WriteNextF
$LN42@WriteNextF:

; 515  :     } else if (pSurface->csp() == RGY_CSP_P010) {

  00dce	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00dd6	e8 00 00 00 00	 call	 ?csp@RGYFrame@@QEAA?AW4RGY_CSP@@XZ ; RGYFrame::csp
  00ddb	83 f8 0c	 cmp	 eax, 12
  00dde	0f 85 17 02 00
	00		 jne	 $LN49@WriteNextF

; 516  :         frameSize = lumaWidthBytes * pSurface->height() * 3 / 2;

  00de4	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00dec	e8 00 00 00 00	 call	 ?height@RGYFrame@@QEAAIXZ ; RGYFrame::height
  00df1	8b 4c 24 34	 mov	 ecx, DWORD PTR lumaWidthBytes$[rsp]
  00df5	0f af c8	 imul	 ecx, eax
  00df8	8b c1		 mov	 eax, ecx
  00dfa	6b c0 03	 imul	 eax, eax, 3
  00dfd	33 d2		 xor	 edx, edx
  00dff	b9 02 00 00 00	 mov	 ecx, 2
  00e04	f7 f1		 div	 ecx
  00e06	89 84 24 9c 00
	00 00		 mov	 DWORD PTR frameSize$[rsp], eax

; 517  :         uint8_t *ptrBuf = m_pReadBuffer.get();

  00e0d	48 8b 84 24 10
	04 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00e15	48 05 28 01 00
	00		 add	 rax, 296		; 00000128H
  00e1b	48 8b c8	 mov	 rcx, rax
  00e1e	e8 00 00 00 00	 call	 ?get@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEBAPEAEXZ ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::get
  00e23	48 89 84 24 40
	02 00 00	 mov	 QWORD PTR ptrBuf$47[rsp], rax

; 518  :         for (uint32_t i = 0; i < (uint32_t)(pSurface->height() >> 1); i++) {

  00e2b	c7 84 24 48 02
	00 00 00 00 00
	00		 mov	 DWORD PTR i$48[rsp], 0
  00e36	eb 10		 jmp	 SHORT $LN22@WriteNextF
$LN20@WriteNextF:
  00e38	8b 84 24 48 02
	00 00		 mov	 eax, DWORD PTR i$48[rsp]
  00e3f	ff c0		 inc	 eax
  00e41	89 84 24 48 02
	00 00		 mov	 DWORD PTR i$48[rsp], eax
$LN22@WriteNextF:
  00e48	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00e50	e8 00 00 00 00	 call	 ?height@RGYFrame@@QEAAIXZ ; RGYFrame::height
  00e55	d1 e8		 shr	 eax, 1
  00e57	39 84 24 48 02
	00 00		 cmp	 DWORD PTR i$48[rsp], eax
  00e5e	0f 83 92 01 00
	00		 jae	 $LN21@WriteNextF

; 519  :             loadLineToBuffer(ptrBuf, pSurface->ptrUV() + pSurface->crop().e.up * (pSurface->pitch() >> 1) + i * pSurface->pitch(), pSurface->pitch());

  00e64	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00e6c	e8 00 00 00 00	 call	 ?pitch@RGYFrame@@QEAAIXZ ; RGYFrame::pitch
  00e71	89 84 24 80 03
	00 00		 mov	 DWORD PTR tv690[rsp], eax
  00e78	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00e80	e8 00 00 00 00	 call	 ?ptrUV@RGYFrame@@QEAAPEAEXZ ; RGYFrame::ptrUV
  00e85	48 89 84 24 88
	03 00 00	 mov	 QWORD PTR tv693[rsp], rax
  00e8d	48 8d 94 24 50
	02 00 00	 lea	 rdx, QWORD PTR $T49[rsp]
  00e95	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00e9d	e8 00 00 00 00	 call	 ?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ ; RGYFrame::crop
  00ea2	48 89 84 24 90
	03 00 00	 mov	 QWORD PTR tv695[rsp], rax
  00eaa	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00eb2	e8 00 00 00 00	 call	 ?pitch@RGYFrame@@QEAAIXZ ; RGYFrame::pitch
  00eb7	d1 e8		 shr	 eax, 1
  00eb9	48 8b 8c 24 90
	03 00 00	 mov	 rcx, QWORD PTR tv695[rsp]
  00ec1	8b 49 04	 mov	 ecx, DWORD PTR [rcx+4]
  00ec4	0f af c8	 imul	 ecx, eax
  00ec7	8b c1		 mov	 eax, ecx
  00ec9	8b c0		 mov	 eax, eax
  00ecb	48 8b 8c 24 88
	03 00 00	 mov	 rcx, QWORD PTR tv693[rsp]
  00ed3	48 03 c8	 add	 rcx, rax
  00ed6	48 8b c1	 mov	 rax, rcx
  00ed9	48 89 84 24 98
	03 00 00	 mov	 QWORD PTR tv704[rsp], rax
  00ee1	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00ee9	e8 00 00 00 00	 call	 ?pitch@RGYFrame@@QEAAIXZ ; RGYFrame::pitch
  00eee	8b 8c 24 48 02
	00 00		 mov	 ecx, DWORD PTR i$48[rsp]
  00ef5	0f af c8	 imul	 ecx, eax
  00ef8	8b c1		 mov	 eax, ecx
  00efa	8b c0		 mov	 eax, eax
  00efc	48 8b 8c 24 98
	03 00 00	 mov	 rcx, QWORD PTR tv704[rsp]
  00f04	48 03 c8	 add	 rcx, rax
  00f07	48 8b c1	 mov	 rax, rcx
  00f0a	8b 8c 24 80 03
	00 00		 mov	 ecx, DWORD PTR tv690[rsp]
  00f11	44 8b c9	 mov	 r9d, ecx
  00f14	4c 8b c0	 mov	 r8, rax
  00f17	48 8b 94 24 40
	02 00 00	 mov	 rdx, QWORD PTR ptrBuf$47[rsp]
  00f1f	48 8d 4c 24 24	 lea	 rcx, QWORD PTR loadLineToBuffer$[rsp]
  00f24	e8 00 00 00 00	 call	 ??R<lambda_f79789dc0fd7cea8a85e7512acf0222d>@@QEBAXPEAE0H@Z ; <lambda_f79789dc0fd7cea8a85e7512acf0222d>::operator()

; 520  :             WRITE_CHECK(fwrite(ptrBuf + pSurface->crop().e.left, 1, (uint32_t)pSurface->width() << 1, m_fDest.get()), (uint32_t)pSurface->width() << 1);

  00f29	48 8b 84 24 10
	04 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00f31	48 83 c0 18	 add	 rax, 24
  00f35	48 8b c8	 mov	 rcx, rax
  00f38	e8 00 00 00 00	 call	 ?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ ; std::unique_ptr<_iobuf,fp_deleter>::get
  00f3d	48 89 84 24 a0
	03 00 00	 mov	 QWORD PTR tv719[rsp], rax
  00f45	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00f4d	e8 00 00 00 00	 call	 ?width@RGYFrame@@QEAAIXZ ; RGYFrame::width
  00f52	d1 e0		 shl	 eax, 1
  00f54	8b c0		 mov	 eax, eax
  00f56	48 89 84 24 a8
	03 00 00	 mov	 QWORD PTR tv724[rsp], rax
  00f5e	48 8d 94 24 60
	02 00 00	 lea	 rdx, QWORD PTR $T50[rsp]
  00f66	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00f6e	e8 00 00 00 00	 call	 ?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ ; RGYFrame::crop
  00f73	48 63 00	 movsxd	 rax, DWORD PTR [rax]
  00f76	48 8b 8c 24 40
	02 00 00	 mov	 rcx, QWORD PTR ptrBuf$47[rsp]
  00f7e	48 03 c8	 add	 rcx, rax
  00f81	48 8b c1	 mov	 rax, rcx
  00f84	48 8b 8c 24 a0
	03 00 00	 mov	 rcx, QWORD PTR tv719[rsp]
  00f8c	4c 8b c9	 mov	 r9, rcx
  00f8f	48 8b 8c 24 a8
	03 00 00	 mov	 rcx, QWORD PTR tv724[rsp]
  00f97	4c 8b c1	 mov	 r8, rcx
  00f9a	ba 01 00 00 00	 mov	 edx, 1
  00f9f	48 8b c8	 mov	 rcx, rax
  00fa2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fwrite
  00fa8	48 89 84 24 b0
	03 00 00	 mov	 QWORD PTR tv712[rsp], rax
  00fb0	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00fb8	e8 00 00 00 00	 call	 ?width@RGYFrame@@QEAAIXZ ; RGYFrame::width
  00fbd	d1 e0		 shl	 eax, 1
  00fbf	8b c0		 mov	 eax, eax
  00fc1	48 8b 8c 24 b0
	03 00 00	 mov	 rcx, QWORD PTR tv712[rsp]
  00fc9	48 3b c8	 cmp	 rcx, rax
  00fcc	74 23		 je	 SHORT $LN51@WriteNextF
  00fce	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG135466
  00fd5	ba 02 00 00 00	 mov	 edx, 2
  00fda	48 8b 8c 24 10
	04 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00fe2	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage
  00fe7	b8 f0 ff ff ff	 mov	 eax, -16
  00fec	e9 4e 02 00 00	 jmp	 $LN1@WriteNextF
$LN51@WriteNextF:

; 521  :         }

  00ff1	e9 42 fe ff ff	 jmp	 $LN20@WriteNextF
$LN21@WriteNextF:

; 522  :     } else if (pSurface->csp() == RGY_CSP_RGB32R

  00ff6	e9 f2 01 00 00	 jmp	 $LN50@WriteNextF
$LN49@WriteNextF:

; 523  :         || pSurface->csp() == 100 //DXGI_FORMAT_AYUV

  00ffb	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  01003	e8 00 00 00 00	 call	 ?csp@RGYFrame@@QEAA?AW4RGY_CSP@@XZ ; RGYFrame::csp
  01008	83 f8 1b	 cmp	 eax, 27
  0100b	74 16		 je	 SHORT $LN54@WriteNextF
  0100d	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  01015	e8 00 00 00 00	 call	 ?csp@RGYFrame@@QEAA?AW4RGY_CSP@@XZ ; RGYFrame::csp
  0101a	83 f8 64	 cmp	 eax, 100		; 00000064H
  0101d	0f 85 c3 01 00
	00		 jne	 $LN52@WriteNextF
$LN54@WriteNextF:

; 524  :         /*|| pSurface->csp() == RGY_CSP_A2RGB10*/) {
; 525  :         frameSize = lumaWidthBytes * pSurface->height() * 4;

  01023	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  0102b	e8 00 00 00 00	 call	 ?height@RGYFrame@@QEAAIXZ ; RGYFrame::height
  01030	8b 4c 24 34	 mov	 ecx, DWORD PTR lumaWidthBytes$[rsp]
  01034	0f af c8	 imul	 ecx, eax
  01037	8b c1		 mov	 eax, ecx
  01039	c1 e0 02	 shl	 eax, 2
  0103c	89 84 24 9c 00
	00 00		 mov	 DWORD PTR frameSize$[rsp], eax

; 526  :         uint32_t w = pSurface->width();

  01043	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  0104b	e8 00 00 00 00	 call	 ?width@RGYFrame@@QEAAIXZ ; RGYFrame::width
  01050	89 84 24 70 02
	00 00		 mov	 DWORD PTR w$51[rsp], eax

; 527  :         uint32_t h = pSurface->height();

  01057	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  0105f	e8 00 00 00 00	 call	 ?height@RGYFrame@@QEAAIXZ ; RGYFrame::height
  01064	89 84 24 74 02
	00 00		 mov	 DWORD PTR h$52[rsp], eax

; 528  : 
; 529  :         uint8_t *ptr = pSurface->ptrRGB() + pSurface->crop().e.left + pSurface->crop().e.up * pSurface->pitch();

  0106b	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  01073	e8 00 00 00 00	 call	 ?ptrRGB@RGYFrame@@QEAAPEAEXZ ; RGYFrame::ptrRGB
  01078	48 89 84 24 b8
	03 00 00	 mov	 QWORD PTR tv762[rsp], rax
  01080	48 8d 94 24 80
	02 00 00	 lea	 rdx, QWORD PTR $T54[rsp]
  01088	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  01090	e8 00 00 00 00	 call	 ?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ ; RGYFrame::crop
  01095	48 63 00	 movsxd	 rax, DWORD PTR [rax]
  01098	48 8b 8c 24 b8
	03 00 00	 mov	 rcx, QWORD PTR tv762[rsp]
  010a0	48 03 c8	 add	 rcx, rax
  010a3	48 8b c1	 mov	 rax, rcx
  010a6	48 89 84 24 c0
	03 00 00	 mov	 QWORD PTR tv769[rsp], rax
  010ae	48 8d 94 24 90
	02 00 00	 lea	 rdx, QWORD PTR $T55[rsp]
  010b6	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  010be	e8 00 00 00 00	 call	 ?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ ; RGYFrame::crop
  010c3	48 89 84 24 c8
	03 00 00	 mov	 QWORD PTR tv771[rsp], rax
  010cb	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  010d3	e8 00 00 00 00	 call	 ?pitch@RGYFrame@@QEAAIXZ ; RGYFrame::pitch
  010d8	48 8b 8c 24 c8
	03 00 00	 mov	 rcx, QWORD PTR tv771[rsp]
  010e0	8b 49 04	 mov	 ecx, DWORD PTR [rcx+4]
  010e3	0f af c8	 imul	 ecx, eax
  010e6	8b c1		 mov	 eax, ecx
  010e8	8b c0		 mov	 eax, eax
  010ea	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR tv769[rsp]
  010f2	48 03 c8	 add	 rcx, rax
  010f5	48 8b c1	 mov	 rax, rcx
  010f8	48 89 84 24 78
	02 00 00	 mov	 QWORD PTR ptr$53[rsp], rax

; 530  : 
; 531  :         for (uint32_t i = 0; i < h; i++) {

  01100	c7 84 24 a0 02
	00 00 00 00 00
	00		 mov	 DWORD PTR i$56[rsp], 0
  0110b	eb 10		 jmp	 SHORT $LN25@WriteNextF
$LN23@WriteNextF:
  0110d	8b 84 24 a0 02
	00 00		 mov	 eax, DWORD PTR i$56[rsp]
  01114	ff c0		 inc	 eax
  01116	89 84 24 a0 02
	00 00		 mov	 DWORD PTR i$56[rsp], eax
$LN25@WriteNextF:
  0111d	8b 84 24 74 02
	00 00		 mov	 eax, DWORD PTR h$52[rsp]
  01124	39 84 24 a0 02
	00 00		 cmp	 DWORD PTR i$56[rsp], eax
  0112b	0f 83 b3 00 00
	00		 jae	 $LN24@WriteNextF

; 532  :             WRITE_CHECK(fwrite(ptr + i * pSurface->pitch(), 1, 4*w, m_fDest.get()), 4*w);

  01131	48 8b 84 24 10
	04 00 00	 mov	 rax, QWORD PTR this$[rsp]
  01139	48 83 c0 18	 add	 rax, 24
  0113d	48 8b c8	 mov	 rcx, rax
  01140	e8 00 00 00 00	 call	 ?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ ; std::unique_ptr<_iobuf,fp_deleter>::get
  01145	48 89 84 24 d0
	03 00 00	 mov	 QWORD PTR tv789[rsp], rax
  0114d	8b 8c 24 70 02
	00 00		 mov	 ecx, DWORD PTR w$51[rsp]
  01154	c1 e1 02	 shl	 ecx, 2
  01157	8b c9		 mov	 ecx, ecx
  01159	48 89 8c 24 d8
	03 00 00	 mov	 QWORD PTR tv792[rsp], rcx
  01161	48 8b 8c 24 18
	04 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  01169	e8 00 00 00 00	 call	 ?pitch@RGYFrame@@QEAAIXZ ; RGYFrame::pitch
  0116e	8b 8c 24 a0 02
	00 00		 mov	 ecx, DWORD PTR i$56[rsp]
  01175	0f af c8	 imul	 ecx, eax
  01178	8b c1		 mov	 eax, ecx
  0117a	8b c0		 mov	 eax, eax
  0117c	48 8b 8c 24 78
	02 00 00	 mov	 rcx, QWORD PTR ptr$53[rsp]
  01184	48 03 c8	 add	 rcx, rax
  01187	48 8b c1	 mov	 rax, rcx
  0118a	48 8b 8c 24 d0
	03 00 00	 mov	 rcx, QWORD PTR tv789[rsp]
  01192	4c 8b c9	 mov	 r9, rcx
  01195	48 8b 8c 24 d8
	03 00 00	 mov	 rcx, QWORD PTR tv792[rsp]
  0119d	4c 8b c1	 mov	 r8, rcx
  011a0	ba 01 00 00 00	 mov	 edx, 1
  011a5	48 8b c8	 mov	 rcx, rax
  011a8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fwrite
  011ae	8b 8c 24 70 02
	00 00		 mov	 ecx, DWORD PTR w$51[rsp]
  011b5	c1 e1 02	 shl	 ecx, 2
  011b8	8b c9		 mov	 ecx, ecx
  011ba	48 3b c1	 cmp	 rax, rcx
  011bd	74 20		 je	 SHORT $LN55@WriteNextF
  011bf	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG135471
  011c6	ba 02 00 00 00	 mov	 edx, 2
  011cb	48 8b 8c 24 10
	04 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  011d3	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage
  011d8	b8 f0 ff ff ff	 mov	 eax, -16
  011dd	eb 60		 jmp	 SHORT $LN1@WriteNextF
$LN55@WriteNextF:

; 533  :         }

  011df	e9 29 ff ff ff	 jmp	 $LN23@WriteNextF
$LN24@WriteNextF:

; 534  :     } else {

  011e4	eb 07		 jmp	 SHORT $LN53@WriteNextF
$LN52@WriteNextF:

; 535  :         return RGY_ERR_INVALID_COLOR_FORMAT;

  011e6	b8 9c ff ff ff	 mov	 eax, -100		; ffffffffffffff9cH
  011eb	eb 52		 jmp	 SHORT $LN1@WriteNextF
$LN53@WriteNextF:
$LN50@WriteNextF:
$LN43@WriteNextF:
$LN39@WriteNextF:

; 536  :     }
; 537  : 
; 538  :     m_pEncSatusInfo->SetOutputData(frametype_enc_to_rgy(MFX_FRAMETYPE_IDR | MFX_FRAMETYPE_I), frameSize, 0);

  011ed	8b 84 24 9c 00
	00 00		 mov	 eax, DWORD PTR frameSize$[rsp]
  011f4	48 89 84 24 e0
	03 00 00	 mov	 QWORD PTR tv820[rsp], rax
  011fc	b9 81 00 00 00	 mov	 ecx, 129		; 00000081H
  01201	e8 00 00 00 00	 call	 ?frametype_enc_to_rgy@@YA?AW4RGY_FRAMETYPE@@I@Z ; frametype_enc_to_rgy
  01206	89 84 24 e8 03
	00 00		 mov	 DWORD PTR tv822[rsp], eax
  0120d	48 8b 8c 24 10
	04 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  01215	48 83 c1 08	 add	 rcx, 8
  01219	e8 00 00 00 00	 call	 ??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ ; std::shared_ptr<EncodeStatus>::operator-><EncodeStatus,0>
  0121e	45 33 c9	 xor	 r9d, r9d
  01221	48 8b 8c 24 e0
	03 00 00	 mov	 rcx, QWORD PTR tv820[rsp]
  01229	4c 8b c1	 mov	 r8, rcx
  0122c	8b 8c 24 e8 03
	00 00		 mov	 ecx, DWORD PTR tv822[rsp]
  01233	8b d1		 mov	 edx, ecx
  01235	48 8b c8	 mov	 rcx, rax
  01238	e8 00 00 00 00	 call	 ?SetOutputData@EncodeStatus@@QEAAXW4RGY_FRAMETYPE@@_KI@Z ; EncodeStatus::SetOutputData

; 539  :     return RGY_ERR_NONE;

  0123d	33 c0		 xor	 eax, eax
$LN1@WriteNextF:

; 540  : }

  0123f	48 8b f8	 mov	 rdi, rax
  01242	48 8b cc	 mov	 rcx, rsp
  01245	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?WriteNextFrame@CQSVOutFrame@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z$rtcFrameData
  0124c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  01251	48 8b c7	 mov	 rax, rdi
  01254	48 8b 8c 24 f0
	03 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0125c	48 33 cc	 xor	 rcx, rsp
  0125f	e8 00 00 00 00	 call	 __security_check_cookie
  01264	48 81 c4 00 04
	00 00		 add	 rsp, 1024		; 00000400H
  0126b	5f		 pop	 rdi
  0126c	c3		 ret	 0
?WriteNextFrame@CQSVOutFrame@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z ENDP ; CQSVOutFrame::WriteNextFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
_TEXT	SEGMENT
this$ = 16
pBitstream$ = 24
?WriteNextFrame@CQSVOutFrame@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z PROC ; CQSVOutFrame::WriteNextFrame

; 399  : RGY_ERR CQSVOutFrame::WriteNextFrame(RGYBitstream *pBitstream) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 400  :     UNREFERENCED_PARAMETER(pBitstream);
; 401  :     return RGY_ERR_UNSUPPORTED;

  0000b	b8 fd ff ff ff	 mov	 eax, -3

; 402  : }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?WriteNextFrame@CQSVOutFrame@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z ENDP ; CQSVOutFrame::WriteNextFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
_TEXT	SEGMENT
this$ = 48
??1CQSVOutFrame@@UEAA@XZ PROC				; CQSVOutFrame::~CQSVOutFrame

; 371  : CQSVOutFrame::~CQSVOutFrame() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7CQSVOutFrame@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 372  : };

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ??1RGYOutput@@UEAA@XZ	; RGYOutput::~RGYOutput
  00037	90		 npad	 1
  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
??1CQSVOutFrame@@UEAA@XZ ENDP				; CQSVOutFrame::~CQSVOutFrame
_TEXT	ENDS
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1CQSVOutFrame@@UEAA@XZ@4HA PROC		; `CQSVOutFrame::~CQSVOutFrame'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1RGYOutput@@UEAA@XZ	; RGYOutput::~RGYOutput
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1CQSVOutFrame@@UEAA@XZ@4HA ENDP		; `CQSVOutFrame::~CQSVOutFrame'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1CQSVOutFrame@@UEAA@XZ@4HA PROC		; `CQSVOutFrame::~CQSVOutFrame'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1RGYOutput@@UEAA@XZ	; RGYOutput::~RGYOutput
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1CQSVOutFrame@@UEAA@XZ@4HA ENDP		; `CQSVOutFrame::~CQSVOutFrame'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
_TEXT	SEGMENT
this$ = 48
??0CQSVOutFrame@@QEAA@XZ PROC				; CQSVOutFrame::CQSVOutFrame

; 366  : CQSVOutFrame::CQSVOutFrame() : m_bY4m(true) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0RGYOutput@@QEAA@XZ	; RGYOutput::RGYOutput
  00028	90		 npad	 1
  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7CQSVOutFrame@@6B@
  00035	48 89 08	 mov	 QWORD PTR [rax], rcx
  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	c6 80 38 01 00
	00 01		 mov	 BYTE PTR [rax+312], 1

; 367  :     m_strWriterName = _T("yuv writer");

  00044	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00049	48 83 c0 30	 add	 rax, 48			; 00000030H
  0004d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG135178
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

; 368  :     m_OutType = OUT_TYPE_SURFACE;

  0005c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00061	c7 40 24 02 00
	00 00		 mov	 DWORD PTR [rax+36], 2

; 369  : };

  00068	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0006d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00071	5f		 pop	 rdi
  00072	c3		 ret	 0
??0CQSVOutFrame@@QEAA@XZ ENDP				; CQSVOutFrame::CQSVOutFrame
_TEXT	ENDS
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0CQSVOutFrame@@QEAA@XZ@4HA PROC		; `CQSVOutFrame::CQSVOutFrame'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1RGYOutput@@UEAA@XZ	; RGYOutput::~RGYOutput
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0CQSVOutFrame@@QEAA@XZ@4HA ENDP		; `CQSVOutFrame::CQSVOutFrame'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0CQSVOutFrame@@QEAA@XZ@4HA PROC		; `CQSVOutFrame::CQSVOutFrame'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1RGYOutput@@UEAA@XZ	; RGYOutput::~RGYOutput
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0CQSVOutFrame@@QEAA@XZ@4HA ENDP		; `CQSVOutFrame::CQSVOutFrame'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GRGYOutputRaw@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GRGYOutputRaw@@UEAAPEAXI@Z PROC			; RGYOutputRaw::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1RGYOutputRaw@@UEAA@XZ ; RGYOutputRaw::~RGYOutputRaw
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba a0 01 00 00	 mov	 edx, 416		; 000001a0H
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_GRGYOutputRaw@@UEAAPEAXI@Z ENDP			; RGYOutputRaw::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ PROC ; std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::~_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ??1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ
  0002b	90		 npad	 1
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
??1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ ENDP ; std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::~_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::~_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::~_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::~_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::~_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAAAEAU?$RGYAVDeleter@UAVBSFContext@@@@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAAAEAU?$RGYAVDeleter@UAVBSFContext@@@@XZ PROC ; std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::_Get_first, COMDAT

; 1443 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1444 :         return _Myval1;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1445 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAAAEAU?$RGYAVDeleter@UAVBSFContext@@@@XZ ENDP ; std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?reset@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAXPEAUAVBSFContext@@@Z
_TEXT	SEGMENT
_Old$ = 32
this$ = 64
_Ptr$ = 72
?reset@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAXPEAUAVBSFContext@@@Z PROC ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::reset, COMDAT

; 1907 :     void reset(pointer _Ptr = pointer()) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1908 :         pointer _Old = _STD exchange(_Mypair._Myval2, _Ptr);

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 83 c0 40	 add	 rax, 64			; 00000040H
  0002c	48 8d 54 24 48	 lea	 rdx, QWORD PTR _Ptr$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??$exchange@PEAUAVBSFContext@@AEAPEAU1@@std@@YAPEAUAVBSFContext@@AEAPEAU1@0@Z ; std::exchange<AVBSFContext *,AVBSFContext * &>
  00039	90		 npad	 1
  0003a	48 89 44 24 20	 mov	 QWORD PTR _Old$[rsp], rax

; 1909 :         if (_Old) {

  0003f	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Old$[rsp], 0
  00045	74 1c		 je	 SHORT $LN2@reset

; 1910 :             _Mypair._Get_first()(_Old);

  00047	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 8b c8	 mov	 rcx, rax
  0004f	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAAAEAU?$RGYAVDeleter@UAVBSFContext@@@@XZ ; std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::_Get_first
  00054	90		 npad	 1
  00055	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Old$[rsp]
  0005a	48 8b c8	 mov	 rcx, rax
  0005d	e8 00 00 00 00	 call	 ??R?$RGYAVDeleter@UAVBSFContext@@@@QEAAXPEAUAVBSFContext@@@Z ; RGYAVDeleter<AVBSFContext>::operator()
  00062	90		 npad	 1
$LN2@reset:

; 1911 :         }
; 1912 :     }

  00063	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00067	5f		 pop	 rdi
  00068	c3		 ret	 0
?reset@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAXPEAUAVBSFContext@@@Z ENDP ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?release@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAPEAUAVBSFContext@@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?release@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAPEAUAVBSFContext@@XZ PROC ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::release, COMDAT

; 1903 :     pointer release() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1904 :         return _STD exchange(_Mypair._Myval2, pointer());

  0001e	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR $T1[rsp], 0
  00027	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 83 c0 40	 add	 rax, 64			; 00000040H
  00030	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00035	48 8b c8	 mov	 rcx, rax
  00038	e8 00 00 00 00	 call	 ??$exchange@PEAUAVBSFContext@@PEAU1@@std@@YAPEAUAVBSFContext@@AEAPEAU1@$$QEAPEAU1@@Z ; std::exchange<AVBSFContext *,AVBSFContext *>
  0003d	90		 npad	 1

; 1905 :     }

  0003e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?release@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAPEAUAVBSFContext@@XZ ENDP ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??B?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv67 = 0
this$ = 32
??B?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBA_NXZ PROC ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::operator bool, COMDAT

; 1899 :     explicit operator bool() const noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1900 :         return static_cast<bool>(_Mypair._Myval2);

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 40 00	 cmp	 QWORD PTR [rax+64], 0
  00028	74 06		 je	 SHORT $LN3@operator
  0002a	c6 04 24 01	 mov	 BYTE PTR tv67[rsp], 1
  0002e	eb 04		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00030	c6 04 24 00	 mov	 BYTE PTR tv67[rsp], 0
$LN4@operator:
  00034	0f b6 04 24	 movzx	 eax, BYTE PTR tv67[rsp]

; 1901 :     }

  00038	48 83 c4 10	 add	 rsp, 16
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
??B?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBA_NXZ ENDP ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBAPEAUAVBSFContext@@XZ
_TEXT	SEGMENT
this$ = 16
?get@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBAPEAUAVBSFContext@@XZ PROC ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::get, COMDAT

; 1895 :     _NODISCARD pointer get() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1896 :         return _Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 40	 mov	 rax, QWORD PTR [rax+64]

; 1897 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?get@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBAPEAUAVBSFContext@@XZ ENDP ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??C?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBAPEAUAVBSFContext@@XZ
_TEXT	SEGMENT
this$ = 16
??C?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBAPEAUAVBSFContext@@XZ PROC ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::operator->, COMDAT

; 1891 :     _NODISCARD pointer operator->() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1892 :         return _Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 40	 mov	 rax, QWORD PTR [rax+64]

; 1893 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
??C?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBAPEAUAVBSFContext@@XZ ENDP ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ PROC ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::~unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >, COMDAT

; 1873 :     ~unique_ptr() noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1874 :         if (_Mypair._Myval2) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 40 00	 cmp	 QWORD PTR [rax+64], 0
  00028	74 20		 je	 SHORT $LN2@unique_ptr

; 1875 :             _Mypair._Get_first()(_Mypair._Myval2);

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b c8	 mov	 rcx, rax
  00032	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAAAEAU?$RGYAVDeleter@UAVBSFContext@@@@XZ ; std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::_Get_first
  00037	90		 npad	 1
  00038	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003d	48 8b 51 40	 mov	 rdx, QWORD PTR [rcx+64]
  00041	48 8b c8	 mov	 rcx, rax
  00044	e8 00 00 00 00	 call	 ??R?$RGYAVDeleter@UAVBSFContext@@@@QEAAXPEAUAVBSFContext@@@Z ; RGYAVDeleter<AVBSFContext>::operator()
  00049	90		 npad	 1
$LN2@unique_ptr:

; 1876 :         }
; 1877 :     }

  0004a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004f	48 8b c8	 mov	 rcx, rax
  00052	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ
  00057	90		 npad	 1
  00058	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ ENDP ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::~unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ@4HA PROC ; `std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::~unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ@4HA ENDP ; `std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::~unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ@4HA PROC ; `std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::~unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ@4HA ENDP ; `std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::~unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??4?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
tv76 = 32
this$ = 64
_Right$ = 72
??4?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAAEAV01@$$QEAV01@@Z PROC ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::operator=, COMDAT

; 1860 :     unique_ptr& operator=(unique_ptr&& _Right) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1861 :         if (this != _STD addressof(_Right)) {

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@V?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@@std@@YAPEAV?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@0@AEAV10@@Z ; std::addressof<std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> > >
  0002d	48 39 44 24 40	 cmp	 QWORD PTR this$[rsp], rax
  00032	74 4b		 je	 SHORT $LN2@operator

; 1862 :             reset(_Right.release());

  00034	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00039	e8 00 00 00 00	 call	 ?release@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAPEAUAVBSFContext@@XZ ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::release
  0003e	48 8b d0	 mov	 rdx, rax
  00041	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00046	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAXPEAUAVBSFContext@@@Z ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::reset

; 1863 :             _Mypair._Get_first() = _STD forward<_Dx>(_Right._Mypair._Get_first());

  0004b	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  00050	48 8b c8	 mov	 rcx, rax
  00053	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAAAEAU?$RGYAVDeleter@UAVBSFContext@@@@XZ ; std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::_Get_first
  00058	48 8b c8	 mov	 rcx, rax
  0005b	e8 00 00 00 00	 call	 ??$forward@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@YA$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@AEAU1@@Z ; std::forward<RGYAVDeleter<AVBSFContext> >
  00060	48 89 44 24 20	 mov	 QWORD PTR tv76[rsp], rax
  00065	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006a	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$RGYAVDeleter@UAVBSFContext@@@@PEAUAVBSFContext@@$0A@@std@@QEAAAEAU?$RGYAVDeleter@UAVBSFContext@@@@XZ ; std::_Compressed_pair<RGYAVDeleter<AVBSFContext>,AVBSFContext *,0>::_Get_first
  0006f	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv76[rsp]
  00074	48 8b d1	 mov	 rdx, rcx
  00077	48 8b c8	 mov	 rcx, rax
  0007a	e8 00 00 00 00	 call	 ??4?$RGYAVDeleter@UAVBSFContext@@@@QEAAAEAU0@$$QEAU0@@Z
$LN2@operator:

; 1864 :         }
; 1865 :         return *this;

  0007f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]

; 1866 :     }

  00084	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00088	5f		 pop	 rdi
  00089	c3		 ret	 0
??4?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAAEAV01@$$QEAV01@@Z ENDP ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$RGYAVDeleter@UAVBSFContext@@@@QEAAAEAU0@$$QEAU0@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??4?$RGYAVDeleter@UAVBSFContext@@@@QEAAAEAU0@$$QEAU0@@Z PROC ; RGYAVDeleter<AVBSFContext>::operator=, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b d0	 mov	 rdx, rax
  00030	e8 00 00 00 00	 call	 ??4?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAAAEAV01@$$QEAV01@@Z ; std::function<void __cdecl(AVBSFContext * *)>::operator=
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
??4?$RGYAVDeleter@UAVBSFContext@@@@QEAAAEAU0@$$QEAU0@@Z ENDP ; RGYAVDeleter<AVBSFContext>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@$$QEAU0@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@$$QEAU0@@Z PROC	; RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b d0	 mov	 rdx, rax
  00030	e8 00 00 00 00	 call	 ??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$QEAV01@@Z ; std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)>
  00035	90		 npad	 1
  00036	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@$$QEAU0@@Z ENDP	; RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@$$QEAU0@@Z@4HA PROC ; `RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@$$QEAU0@@Z@4HA ENDP ; `RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@$$QEAU0@@Z@4HA PROC ; `RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@$$QEAU0@@Z@4HA ENDP ; `RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ PROC		; RGYAVDeleter<AVBSFContext>::~RGYAVDeleter<AVBSFContext>, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ
  0002b	90		 npad	 1
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
??1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ ENDP		; RGYAVDeleter<AVBSFContext>::~RGYAVDeleter<AVBSFContext>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ@4HA PROC ; `RGYAVDeleter<AVBSFContext>::~RGYAVDeleter<AVBSFContext>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ@4HA ENDP ; `RGYAVDeleter<AVBSFContext>::~RGYAVDeleter<AVBSFContext>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ@4HA PROC ; `RGYAVDeleter<AVBSFContext>::~RGYAVDeleter<AVBSFContext>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ@4HA ENDP ; `RGYAVDeleter<AVBSFContext>::~RGYAVDeleter<AVBSFContext>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ PROC ; std::function<void __cdecl(AVBSFContext * *)>::~function<void __cdecl(AVBSFContext * *)>, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ ; std::_Func_class<void,AVBSFContext * *>::~_Func_class<void,AVBSFContext * *>
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ ENDP ; std::function<void __cdecl(AVBSFContext * *)>::~function<void __cdecl(AVBSFContext * *)>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ@4HA PROC ; `std::function<void __cdecl(AVBSFContext * *)>::~function<void __cdecl(AVBSFContext * *)>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ ; std::_Func_class<void,AVBSFContext * *>::~_Func_class<void,AVBSFContext * *>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ@4HA ENDP ; `std::function<void __cdecl(AVBSFContext * *)>::~function<void __cdecl(AVBSFContext * *)>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ@4HA PROC ; `std::function<void __cdecl(AVBSFContext * *)>::~function<void __cdecl(AVBSFContext * *)>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ ; std::_Func_class<void,AVBSFContext * *>::~_Func_class<void,AVBSFContext * *>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ@4HA ENDP ; `std::function<void __cdecl(AVBSFContext * *)>::~function<void __cdecl(AVBSFContext * *)>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??4?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??4?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAAAEAV01@$$QEAV01@@Z PROC ; std::function<void __cdecl(AVBSFContext * *)>::operator=, COMDAT

; 1209 :     function& operator=(function&& _Right) noexcept { // strengthened

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1210 :         // assign by moving _Right
; 1211 :         if (this != _STD addressof(_Right)) { // clean up and copy

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@std@@YAPEAV?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@0@AEAV10@@Z ; std::addressof<std::function<void __cdecl(AVBSFContext * *)> >
  0002d	48 39 44 24 30	 cmp	 QWORD PTR this$[rsp], rax
  00032	74 21		 je	 SHORT $LN2@operator

; 1212 :             this->_Tidy();

  00034	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00039	e8 00 00 00 00	 call	 ?_Tidy@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAXXZ ; std::_Func_class<void,AVBSFContext * *>::_Tidy

; 1213 :             this->_Reset_move(_STD move(_Right));

  0003e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00043	e8 00 00 00 00	 call	 ??$move@AEAV?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@0@AEAV10@@Z ; std::move<std::function<void __cdecl(AVBSFContext * *)> &>
  00048	48 8b d0	 mov	 rdx, rax
  0004b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00050	e8 00 00 00 00	 call	 ?_Reset_move@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAX$$QEAV12@@Z ; std::_Func_class<void,AVBSFContext * *>::_Reset_move
$LN2@operator:

; 1214 :         }
; 1215 :         return *this;

  00055	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]

; 1216 :     }

  0005a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005e	5f		 pop	 rdi
  0005f	c3		 ret	 0
??4?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAAAEAV01@$$QEAV01@@Z ENDP ; std::function<void __cdecl(AVBSFContext * *)>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$QEAV01@@Z PROC ; std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)>, COMDAT

; 1197 :     function(function&& _Right) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ??0?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ ; std::_Func_class<void,AVBSFContext * *>::_Func_class<void,AVBSFContext * *>
  0002d	90		 npad	 1

; 1198 :         this->_Reset_move(_STD move(_Right));

  0002e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00033	e8 00 00 00 00	 call	 ??$move@AEAV?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@0@AEAV10@@Z ; std::move<std::function<void __cdecl(AVBSFContext * *)> &>
  00038	90		 npad	 1
  00039	48 8b d0	 mov	 rdx, rax
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ?_Reset_move@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAX$$QEAV12@@Z ; std::_Func_class<void,AVBSFContext * *>::_Reset_move
  00046	90		 npad	 1

; 1199 :     }

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00050	5f		 pop	 rdi
  00051	c3		 ret	 0
??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$QEAV01@@Z ENDP ; std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Right$ = 56
?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ ; std::_Func_class<void,AVBSFContext * *>::~_Func_class<void,AVBSFContext * *>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Right$ = 56
?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ ; std::_Func_class<void,AVBSFContext * *>::~_Func_class<void,AVBSFContext * *>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@AEBV01@@Z PROC ; std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)>, COMDAT

; 1162 :     function(const function& _Right) { // construct holding copy of _Right

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ??0?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ ; std::_Func_class<void,AVBSFContext * *>::_Func_class<void,AVBSFContext * *>
  0002d	90		 npad	 1

; 1163 :         this->_Reset_copy(_Right);

  0002e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00033	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00038	e8 00 00 00 00	 call	 ?_Reset_copy@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAXAEBV12@@Z ; std::_Func_class<void,AVBSFContext * *>::_Reset_copy
  0003d	90		 npad	 1

; 1164 :     }

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@AEBV01@@Z ENDP ; std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Right$ = 56
?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ ; std::_Func_class<void,AVBSFContext * *>::~_Func_class<void,AVBSFContext * *>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Right$ = 56
?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ ; std::_Func_class<void,AVBSFContext * *>::~_Func_class<void,AVBSFContext * *>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$T@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$T@Z PROC ; std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)>, COMDAT

; 1160 :     function(nullptr_t) noexcept {} // construct empty function wrapper from null pointer

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ??0?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ ; std::_Func_class<void,AVBSFContext * *>::_Func_class<void,AVBSFContext * *>
  0002d	90		 npad	 1
  0002e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00033	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00037	5f		 pop	 rdi
  00038	c3		 ret	 0
??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$T@Z ENDP ; std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$T@Z@4HA PROC ; `std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ ; std::_Func_class<void,AVBSFContext * *>::~_Func_class<void,AVBSFContext * *>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$T@Z@4HA ENDP ; `std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$T@Z@4HA PROC ; `std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ ; std::_Func_class<void,AVBSFContext * *>::~_Func_class<void,AVBSFContext * *>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$T@Z@4HA ENDP ; `std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Set@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@@Z
_TEXT	SEGMENT
this$ = 16
_Ptr$ = 24
?_Set@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@@Z PROC ; std::_Func_class<void,AVBSFContext * *>::_Set, COMDAT

; 1133 :     void _Set(_Ptrt* _Ptr) noexcept { // store pointer to object

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 1134 :         _Mystorage._Ptrs[_Small_object_num_ptrs - 1] = _Ptr;

  0000b	b8 08 00 00 00	 mov	 eax, 8
  00010	48 6b c0 07	 imul	 rax, rax, 7
  00014	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00019	48 8b 54 24 18	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0001e	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 1135 :     }

  00022	5f		 pop	 rdi
  00023	c3		 ret	 0
?_Set@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@@Z ENDP ; std::_Func_class<void,AVBSFContext * *>::_Set
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Getimpl@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Getimpl@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@XZ PROC ; std::_Func_class<void,AVBSFContext * *>::_Getimpl, COMDAT

; 1129 :     _Ptrt* _Getimpl() const noexcept { // get pointer to object

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1130 :         return _Mystorage._Ptrs[_Small_object_num_ptrs - 1];

  00006	b8 08 00 00 00	 mov	 eax, 8
  0000b	48 6b c0 07	 imul	 rax, rax, 7
  0000f	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00014	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]

; 1131 :     }

  00018	5f		 pop	 rdi
  00019	c3		 ret	 0
?_Getimpl@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@XZ ENDP ; std::_Func_class<void,AVBSFContext * *>::_Getimpl
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Local@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEBA_NXZ
_TEXT	SEGMENT
tv68 = 32
this$ = 64
?_Local@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEBA_NXZ PROC ; std::_Func_class<void,AVBSFContext * *>::_Local, COMDAT

; 1117 :     bool _Local() const noexcept { // test for locally stored copy of object

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1118 :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@XZ ; std::_Func_class<void,AVBSFContext * *>::_Getimpl
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 3b c1	 cmp	 rax, rcx
  00030	75 0a		 jne	 SHORT $LN3@Local
  00032	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv68[rsp], 1
  0003a	eb 08		 jmp	 SHORT $LN4@Local
$LN3@Local:
  0003c	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv68[rsp], 0
$LN4@Local:
  00044	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv68[rsp]

; 1119 :     }

  00049	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004d	5f		 pop	 rdi
  0004e	c3		 ret	 0
?_Local@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEBA_NXZ ENDP ; std::_Func_class<void,AVBSFContext * *>::_Local
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Tidy@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAXXZ
_TEXT	SEGMENT
tv78 = 32
tv71 = 40
this$ = 64
?_Tidy@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAXXZ PROC ; std::_Func_class<void,AVBSFContext * *>::_Tidy, COMDAT

; 1086 :     void _Tidy() noexcept { // clean up

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1087 :         if (!_Empty()) { // destroy callable object and maybe delete it

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Empty@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEBA_NXZ ; std::_Func_class<void,AVBSFContext * *>::_Empty
  00028	0f b6 c0	 movzx	 eax, al
  0002b	85 c0		 test	 eax, eax
  0002d	75 4d		 jne	 SHORT $LN2@Tidy

; 1088 :             _Getimpl()->_Delete_this(!_Local());

  0002f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00034	e8 00 00 00 00	 call	 ?_Local@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEBA_NXZ ; std::_Func_class<void,AVBSFContext * *>::_Local
  00039	0f b6 c0	 movzx	 eax, al
  0003c	85 c0		 test	 eax, eax
  0003e	75 07		 jne	 SHORT $LN4@Tidy
  00040	c6 44 24 20 01	 mov	 BYTE PTR tv78[rsp], 1
  00045	eb 05		 jmp	 SHORT $LN5@Tidy
$LN4@Tidy:
  00047	c6 44 24 20 00	 mov	 BYTE PTR tv78[rsp], 0
$LN5@Tidy:
  0004c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00051	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@XZ ; std::_Func_class<void,AVBSFContext * *>::_Getimpl
  00056	48 89 44 24 28	 mov	 QWORD PTR tv71[rsp], rax
  0005b	48 8b 44 24 28	 mov	 rax, QWORD PTR tv71[rsp]
  00060	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00063	0f b6 54 24 20	 movzx	 edx, BYTE PTR tv78[rsp]
  00068	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv71[rsp]
  0006d	ff 50 20	 call	 QWORD PTR [rax+32]

; 1089 :             _Set(nullptr);

  00070	33 d2		 xor	 edx, edx
  00072	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00077	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@@Z ; std::_Func_class<void,AVBSFContext * *>::_Set
$LN2@Tidy:

; 1090 :         }
; 1091 :     }

  0007c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00080	5f		 pop	 rdi
  00081	c3		 ret	 0
?_Tidy@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAXXZ ENDP ; std::_Func_class<void,AVBSFContext * *>::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Reset_move@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAX$$QEAV12@@Z
_TEXT	SEGMENT
tv76 = 32
tv90 = 40
this$ = 64
_Right$ = 72
?_Reset_move@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAX$$QEAV12@@Z PROC ; std::_Func_class<void,AVBSFContext * *>::_Reset_move, COMDAT

; 1029 :     void _Reset_move(_Func_class&& _Right) noexcept { // move _Right's stored object

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1030 :         if (!_Right._Empty()) {

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Empty@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEBA_NXZ ; std::_Func_class<void,AVBSFContext * *>::_Empty
  0002d	0f b6 c0	 movzx	 eax, al
  00030	85 c0		 test	 eax, eax
  00032	75 7e		 jne	 SHORT $LN2@Reset_move

; 1031 :             if (_Right._Local()) { // move and tidy

  00034	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00039	e8 00 00 00 00	 call	 ?_Local@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEBA_NXZ ; std::_Func_class<void,AVBSFContext * *>::_Local
  0003e	0f b6 c0	 movzx	 eax, al
  00041	85 c0		 test	 eax, eax
  00043	74 4a		 je	 SHORT $LN3@Reset_move

; 1032 :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  00045	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0004a	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@XZ ; std::_Func_class<void,AVBSFContext * *>::_Getimpl
  0004f	48 89 44 24 20	 mov	 QWORD PTR tv76[rsp], rax
  00054	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv76[rsp]
  0005e	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00061	48 89 4c 24 28	 mov	 QWORD PTR tv90[rsp], rcx
  00066	48 8b d0	 mov	 rdx, rax
  00069	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv76[rsp]
  0006e	48 8b 44 24 28	 mov	 rax, QWORD PTR tv90[rsp]
  00073	ff 50 08	 call	 QWORD PTR [rax+8]
  00076	48 8b d0	 mov	 rdx, rax
  00079	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0007e	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@@Z ; std::_Func_class<void,AVBSFContext * *>::_Set

; 1033 :                 _Right._Tidy();

  00083	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00088	e8 00 00 00 00	 call	 ?_Tidy@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAXXZ ; std::_Func_class<void,AVBSFContext * *>::_Tidy

; 1034 :             } else { // steal from _Right

  0008d	eb 23		 jmp	 SHORT $LN4@Reset_move
$LN3@Reset_move:

; 1035 :                 _Set(_Right._Getimpl());

  0008f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00094	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@XZ ; std::_Func_class<void,AVBSFContext * *>::_Getimpl
  00099	48 8b d0	 mov	 rdx, rax
  0009c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000a1	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@@Z ; std::_Func_class<void,AVBSFContext * *>::_Set

; 1036 :                 _Right._Set(nullptr);

  000a6	33 d2		 xor	 edx, edx
  000a8	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  000ad	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@@Z ; std::_Func_class<void,AVBSFContext * *>::_Set
$LN4@Reset_move:
$LN2@Reset_move:

; 1037 :             }
; 1038 :         }
; 1039 :     }

  000b2	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000b6	5f		 pop	 rdi
  000b7	c3		 ret	 0
?_Reset_move@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAX$$QEAV12@@Z ENDP ; std::_Func_class<void,AVBSFContext * *>::_Reset_move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Reset_copy@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAXAEBV12@@Z
_TEXT	SEGMENT
tv72 = 32
tv73 = 40
this$ = 64
_Right$ = 72
?_Reset_copy@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAXAEBV12@@Z PROC ; std::_Func_class<void,AVBSFContext * *>::_Reset_copy, COMDAT

; 1023 :     void _Reset_copy(const _Func_class& _Right) { // copy _Right's stored object

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1024 :         if (!_Right._Empty()) {

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Empty@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEBA_NXZ ; std::_Func_class<void,AVBSFContext * *>::_Empty
  0002d	0f b6 c0	 movzx	 eax, al
  00030	85 c0		 test	 eax, eax
  00032	75 3d		 jne	 SHORT $LN2@Reset_copy

; 1025 :             _Set(_Right._Getimpl()->_Copy(&_Mystorage));

  00034	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00039	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@XZ ; std::_Func_class<void,AVBSFContext * *>::_Getimpl
  0003e	48 89 44 24 20	 mov	 QWORD PTR tv72[rsp], rax
  00043	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv72[rsp]
  0004d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00050	48 89 4c 24 28	 mov	 QWORD PTR tv73[rsp], rcx
  00055	48 8b d0	 mov	 rdx, rax
  00058	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv72[rsp]
  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR tv73[rsp]
  00062	ff 10		 call	 QWORD PTR [rax]
  00064	48 8b d0	 mov	 rdx, rax
  00067	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006c	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@@Z ; std::_Func_class<void,AVBSFContext * *>::_Set
$LN2@Reset_copy:

; 1026 :         }
; 1027 :     }

  00071	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00075	5f		 pop	 rdi
  00076	c3		 ret	 0
?_Reset_copy@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAXAEBV12@@Z ENDP ; std::_Func_class<void,AVBSFContext * *>::_Reset_copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Empty@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEBA_NXZ
_TEXT	SEGMENT
tv67 = 32
this$ = 64
?_Empty@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEBA_NXZ PROC ; std::_Func_class<void,AVBSFContext * *>::_Empty, COMDAT

; 1019 :     bool _Empty() const noexcept { // return true if no stored object

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1020 :         return !_Getimpl();

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@XZ ; std::_Func_class<void,AVBSFContext * *>::_Getimpl
  00028	48 85 c0	 test	 rax, rax
  0002b	75 0a		 jne	 SHORT $LN3@Empty
  0002d	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv67[rsp], 1
  00035	eb 08		 jmp	 SHORT $LN4@Empty
$LN3@Empty:
  00037	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv67[rsp], 0
$LN4@Empty:
  0003f	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv67[rsp]

; 1021 :     }

  00044	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Empty@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEBA_NXZ ENDP ; std::_Func_class<void,AVBSFContext * *>::_Empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??1?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ PROC ; std::_Func_class<void,AVBSFContext * *>::~_Func_class<void,AVBSFContext * *>, COMDAT

; 1010 :     ~_Func_class() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1011 :         _Tidy();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEAAXXZ ; std::_Func_class<void,AVBSFContext * *>::_Tidy

; 1012 :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ ENDP ; std::_Func_class<void,AVBSFContext * *>::~_Func_class<void,AVBSFContext * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??R?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEBAXPEAPEAUAVBSFContext@@@Z
_TEXT	SEGMENT
_Impl$ = 32
tv76 = 40
this$ = 64
<_Args_0>$ = 72
??R?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEBAXPEAPEAUAVBSFContext@@@Z PROC ; std::_Func_class<void,AVBSFContext * *>::operator(), COMDAT

; 1002 :     _Ret operator()(_Types... _Args) const { // call through stored object

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1003 :         if (_Empty()) {

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Empty@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@IEBA_NXZ ; std::_Func_class<void,AVBSFContext * *>::_Empty
  0002d	0f b6 c0	 movzx	 eax, al
  00030	85 c0		 test	 eax, eax
  00032	74 05		 je	 SHORT $LN2@operator

; 1004 :             _Xbad_function_call();

  00034	e8 00 00 00 00	 call	 ?_Xbad_function_call@std@@YAXXZ ; std::_Xbad_function_call
$LN2@operator:

; 1005 :         }
; 1006 :         const auto _Impl = _Getimpl();

  00039	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003e	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEBAPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@XZ ; std::_Func_class<void,AVBSFContext * *>::_Getimpl
  00043	48 89 44 24 20	 mov	 QWORD PTR _Impl$[rsp], rax

; 1007 :         return _Impl->_Do_call(_STD forward<_Types>(_Args)...);

  00048	48 8d 4c 24 48	 lea	 rcx, QWORD PTR <_Args_0>$[rsp]
  0004d	e8 00 00 00 00	 call	 ??$forward@PEAPEAUAVBSFContext@@@std@@YA$$QEAPEAPEAUAVBSFContext@@AEAPEAPEAU1@@Z ; std::forward<AVBSFContext * *>
  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Impl$[rsp]
  00057	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0005a	48 89 4c 24 28	 mov	 QWORD PTR tv76[rsp], rcx
  0005f	48 8b d0	 mov	 rdx, rax
  00062	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Impl$[rsp]
  00067	48 8b 44 24 28	 mov	 rax, QWORD PTR tv76[rsp]
  0006c	ff 50 10	 call	 QWORD PTR [rax+16]
$LN3@operator:

; 1008 :     }

  0006f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00073	5f		 pop	 rdi
  00074	c3		 ret	 0
??R?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEBAXPEAPEAUAVBSFContext@@@Z ENDP ; std::_Func_class<void,AVBSFContext * *>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??0?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ PROC ; std::_Func_class<void,AVBSFContext * *>::_Func_class<void,AVBSFContext * *>, COMDAT

; 998  :     _Func_class() noexcept { // construct without stored object

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 999  :         _Set(nullptr);

  0001e	33 d2		 xor	 edx, edx
  00020	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00025	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XPEAPEAUAVBSFContext@@@std@@AEAAXPEAV?$_Func_base@XPEAPEAUAVBSFContext@@@2@@Z ; std::_Func_class<void,AVBSFContext * *>::_Set

; 1000 :     }

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
??0?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEAA@XZ ENDP ; std::_Func_class<void,AVBSFContext * *>::_Func_class<void,AVBSFContext * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_avutil.h
;	COMDAT ??R?$RGYAVDeleter@UAVBSFContext@@@@QEAAXPEAUAVBSFContext@@@Z
_TEXT	SEGMENT
this$ = 48
p$ = 56
??R?$RGYAVDeleter@UAVBSFContext@@@@QEAAXPEAUAVBSFContext@@@Z PROC ; RGYAVDeleter<AVBSFContext>::operator(), COMDAT

; 164  :     void operator()(T *p) { deleter(&p); }

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 54 24 38	 lea	 rdx, QWORD PTR p$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??R?$_Func_class@XPEAPEAUAVBSFContext@@@std@@QEBAXPEAPEAUAVBSFContext@@@Z ; std::_Func_class<void,AVBSFContext * *>::operator()
  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
??R?$RGYAVDeleter@UAVBSFContext@@@@QEAAXPEAUAVBSFContext@@@Z ENDP ; RGYAVDeleter<AVBSFContext>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_avutil.h
;	COMDAT ??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z
_TEXT	SEGMENT
this$ = 48
deleter$ = 56
??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z PROC ; RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>, COMDAT

; 163  :     RGYAVDeleter(std::function<void(T**)> deleter) : deleter(deleter) {};

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 54 24 38	 mov	 rdx, QWORD PTR deleter$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@AEBV01@@Z ; std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)>
  00035	90		 npad	 1
  00036	48 8b 4c 24 38	 mov	 rcx, QWORD PTR deleter$[rsp]
  0003b	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ
  00040	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00045	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00049	5f		 pop	 rdi
  0004a	c3		 ret	 0
??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z ENDP ; RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
deleter$ = 56
?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z@4HA PROC ; `RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 38	 mov	 rcx, QWORD PTR deleter$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z@4HA ENDP ; `RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
deleter$ = 56
?dtor$1@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z@4HA PROC ; `RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z@4HA ENDP ; `RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
deleter$ = 56
?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z@4HA PROC ; `RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 38	 mov	 rcx, QWORD PTR deleter$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z@4HA ENDP ; `RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
deleter$ = 56
?dtor$1@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z@4HA PROC ; `RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z@4HA ENDP ; `RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_avutil.h
;	COMDAT ??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ PROC		; RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>, COMDAT

; 162  :     RGYAVDeleter() : deleter(nullptr) {};

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	33 d2		 xor	 edx, edx
  00025	48 8b c8	 mov	 rcx, rax
  00028	e8 00 00 00 00	 call	 ??0?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@$$T@Z ; std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)>
  0002d	90		 npad	 1
  0002e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00033	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00037	5f		 pop	 rdi
  00038	c3		 ret	 0
??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ ENDP		; RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ@4HA PROC ; `RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ@4HA ENDP ; `RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ@4HA PROC ; `RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ@4HA ENDP ; `RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
_TEXT	SEGMENT
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z PROC ; RGYOutputRaw::Init

; 122  : RGY_ERR RGYOutputRaw::Init(const TCHAR *strFileName, const VideoInfo *pVideoOutputInfo, const void *prm) {

$LN53:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 60 05
	00 00		 sub	 rsp, 1376		; 00000560H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 58 01 00 00	 mov	 ecx, 344		; 00000158H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR [rsp+1392]
  00033	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003a	48 33 c4	 xor	 rax, rsp
  0003d	48 89 84 24 50
	05 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 123  :     UNREFERENCED_PARAMETER(pVideoOutputInfo);
; 124  :     RGYOutputRawPrm *rawPrm = (RGYOutputRawPrm *)prm;

  00045	48 8b 84 24 88
	05 00 00	 mov	 rax, QWORD PTR prm$[rsp]
  0004d	48 89 44 24 30	 mov	 QWORD PTR rawPrm$[rsp], rax

; 125  :     if (!rawPrm->bBenchmark && _tcslen(strFileName) == 0) {

  00052	48 8b 44 24 30	 mov	 rax, QWORD PTR rawPrm$[rsp]
  00057	0f b6 00	 movzx	 eax, BYTE PTR [rax]
  0005a	85 c0		 test	 eax, eax
  0005c	75 35		 jne	 SHORT $LN4@Init
  0005e	48 8b 8c 24 78
	05 00 00	 mov	 rcx, QWORD PTR strFileName$[rsp]
  00066	e8 00 00 00 00	 call	 strlen
  0006b	48 85 c0	 test	 rax, rax
  0006e	75 23		 jne	 SHORT $LN4@Init

; 126  :         AddMessage(RGY_LOG_ERROR, _T("output filename not set.\n"));

  00070	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134727
  00077	ba 02 00 00 00	 mov	 edx, 2
  0007c	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00084	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage

; 127  :         return RGY_ERR_INVALID_PARAM;

  00089	b8 e8 ff ff ff	 mov	 eax, -24
  0008e	e9 a7 0e 00 00	 jmp	 $LN1@Init
$LN4@Init:

; 128  :     }
; 129  : 
; 130  :     if (rawPrm->bBenchmark) {

  00093	48 8b 44 24 30	 mov	 rax, QWORD PTR rawPrm$[rsp]
  00098	0f b6 00	 movzx	 eax, BYTE PTR [rax]
  0009b	85 c0		 test	 eax, eax
  0009d	74 2a		 je	 SHORT $LN5@Init

; 131  :         m_bNoOutput = true;

  0009f	48 8b 84 24 70
	05 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000a7	c6 40 22 01	 mov	 BYTE PTR [rax+34], 1

; 132  :         AddMessage(RGY_LOG_DEBUG, _T("no output for benchmark mode.\n"));

  000ab	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134730
  000b2	ba fe ff ff ff	 mov	 edx, -2
  000b7	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000bf	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage

; 133  :     } else {

  000c4	e9 63 0e 00 00	 jmp	 $LN6@Init
$LN5@Init:

; 134  :         if (_tcscmp(strFileName, _T("-")) == 0) {

  000c9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG134733
  000d0	48 8b 8c 24 78
	05 00 00	 mov	 rcx, QWORD PTR strFileName$[rsp]
  000d8	e8 00 00 00 00	 call	 _tcscmp
  000dd	85 c0		 test	 eax, eax
  000df	75 49		 jne	 SHORT $LN7@Init

; 135  :             m_fDest.reset(stdout);

  000e1	b9 01 00 00 00	 mov	 ecx, 1
  000e6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  000ec	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000f4	48 83 c1 18	 add	 rcx, 24
  000f8	48 8b d0	 mov	 rdx, rax
  000fb	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z ; std::unique_ptr<_iobuf,fp_deleter>::reset

; 136  :             m_bOutputIsStdout = true;

  00100	48 8b 84 24 70
	05 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00108	c6 40 20 01	 mov	 BYTE PTR [rax+32], 1

; 137  :             AddMessage(RGY_LOG_DEBUG, _T("using stdout\n"));

  0010c	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134734
  00113	ba fe ff ff ff	 mov	 edx, -2
  00118	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00120	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage

; 138  :         } else {

  00125	e9 8c 02 00 00	 jmp	 $LN8@Init
$LN7@Init:

; 139  :             CreateDirectoryRecursive(PathRemoveFileSpecFixed(strFileName).second.c_str());

  0012a	48 8b 94 24 78
	05 00 00	 mov	 rdx, QWORD PTR strFileName$[rsp]
  00132	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T9[rsp]
  00137	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0013c	90		 npad	 1
  0013d	48 8d 54 24 38	 lea	 rdx, QWORD PTR $T9[rsp]
  00142	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T10[rsp]
  00147	e8 00 00 00 00	 call	 ?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; PathRemoveFileSpecFixed
  0014c	48 89 84 24 60
	04 00 00	 mov	 QWORD PTR tv152[rsp], rax
  00154	48 8b 84 24 60
	04 00 00	 mov	 rax, QWORD PTR tv152[rsp]
  0015c	48 89 84 24 68
	04 00 00	 mov	 QWORD PTR tv697[rsp], rax
  00164	48 8b 84 24 68
	04 00 00	 mov	 rax, QWORD PTR tv697[rsp]
  0016c	48 83 c0 08	 add	 rax, 8
  00170	48 8b c8	 mov	 rcx, rax
  00173	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00178	48 8b c8	 mov	 rcx, rax
  0017b	e8 00 00 00 00	 call	 ?CreateDirectoryRecursive@@YA_NPEBD@Z ; CreateDirectoryRecursive
  00180	90		 npad	 1
  00181	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T10[rsp]
  00186	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
  0018b	90		 npad	 1
  0018c	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T9[rsp]
  00191	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 140  :             FILE *fp = NULL;

  00196	48 c7 84 24 98
	00 00 00 00 00
	00 00		 mov	 QWORD PTR fp$11[rsp], 0

; 141  :             int error = _tfopen_s(&fp, strFileName, _T("wb+"));

  001a2	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134735
  001a9	48 8b 94 24 78
	05 00 00	 mov	 rdx, QWORD PTR strFileName$[rsp]
  001b1	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR fp$11[rsp]
  001b9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fopen_s
  001bf	89 84 24 a4 00
	00 00		 mov	 DWORD PTR error$12[rsp], eax

; 142  :             if (error != 0 || fp == NULL) {

  001c6	83 bc 24 a4 00
	00 00 00	 cmp	 DWORD PTR error$12[rsp], 0
  001ce	75 0b		 jne	 SHORT $LN10@Init
  001d0	48 83 bc 24 98
	00 00 00 00	 cmp	 QWORD PTR fp$11[rsp], 0
  001d9	75 3d		 jne	 SHORT $LN9@Init
$LN10@Init:

; 143  :                 AddMessage(RGY_LOG_ERROR, _T("failed to open output file \"%s\": %s\n"), strFileName, _tcserror(error));

  001db	8b 8c 24 a4 00
	00 00		 mov	 ecx, DWORD PTR error$12[rsp]
  001e2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_strerror
  001e8	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  001ed	4c 8b 8c 24 78
	05 00 00	 mov	 r9, QWORD PTR strFileName$[rsp]
  001f5	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134738
  001fc	ba 02 00 00 00	 mov	 edx, 2
  00201	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00209	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage

; 144  :                 return RGY_ERR_FILE_OPEN;

  0020e	b8 e3 ff ff ff	 mov	 eax, -29
  00213	e9 22 0d 00 00	 jmp	 $LN1@Init
$LN9@Init:

; 145  :             }
; 146  :             m_fDest.reset(fp);

  00218	48 8b 84 24 70
	05 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00220	48 83 c0 18	 add	 rax, 24
  00224	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR fp$11[rsp]
  0022c	48 8b c8	 mov	 rcx, rax
  0022f	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z ; std::unique_ptr<_iobuf,fp_deleter>::reset

; 147  :             AddMessage(RGY_LOG_DEBUG, _T("Opened file \"%s\"\n"), strFileName);

  00234	4c 8b 8c 24 78
	05 00 00	 mov	 r9, QWORD PTR strFileName$[rsp]
  0023c	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134739
  00243	ba fe ff ff ff	 mov	 edx, -2
  00248	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00250	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage

; 148  : 
; 149  :             int bufferSizeByte = clamp(rawPrm->nBufSizeMB, 0, RGY_OUTPUT_BUF_MB_MAX) * 1024 * 1024;

  00255	48 8b 44 24 30	 mov	 rax, QWORD PTR rawPrm$[rsp]
  0025a	81 78 04 80 00
	00 00		 cmp	 DWORD PTR [rax+4], 128	; 00000080H
  00261	7f 37		 jg	 SHORT $LN36@Init
  00263	48 8b 44 24 30	 mov	 rax, QWORD PTR rawPrm$[rsp]
  00268	83 78 04 00	 cmp	 DWORD PTR [rax+4], 0
  0026c	7c 11		 jl	 SHORT $LN34@Init
  0026e	48 8b 44 24 30	 mov	 rax, QWORD PTR rawPrm$[rsp]
  00273	8b 40 04	 mov	 eax, DWORD PTR [rax+4]
  00276	89 84 24 70 04
	00 00		 mov	 DWORD PTR tv199[rsp], eax
  0027d	eb 0b		 jmp	 SHORT $LN35@Init
$LN34@Init:
  0027f	c7 84 24 70 04
	00 00 00 00 00
	00		 mov	 DWORD PTR tv199[rsp], 0
$LN35@Init:
  0028a	8b 84 24 70 04
	00 00		 mov	 eax, DWORD PTR tv199[rsp]
  00291	89 84 24 74 04
	00 00		 mov	 DWORD PTR tv200[rsp], eax
  00298	eb 0b		 jmp	 SHORT $LN37@Init
$LN36@Init:
  0029a	c7 84 24 74 04
	00 00 80 00 00
	00		 mov	 DWORD PTR tv200[rsp], 128 ; 00000080H
$LN37@Init:
  002a5	69 84 24 74 04
	00 00 00 04 00
	00		 imul	 eax, DWORD PTR tv200[rsp], 1024 ; 00000400H
  002b0	69 c0 00 04 00
	00		 imul	 eax, eax, 1024		; 00000400H
  002b6	89 84 24 a8 00
	00 00		 mov	 DWORD PTR bufferSizeByte$13[rsp], eax

; 150  :             if (bufferSizeByte) {

  002bd	83 bc 24 a8 00
	00 00 00	 cmp	 DWORD PTR bufferSizeByte$13[rsp], 0
  002c5	0f 84 eb 00 00
	00		 je	 $LN8@Init

; 151  :                 void *ptr = nullptr;

  002cb	48 c7 84 24 b8
	00 00 00 00 00
	00 00		 mov	 QWORD PTR ptr$14[rsp], 0

; 152  :                 bufferSizeByte = (int)malloc_degeneracy(&ptr, bufferSizeByte, 1024 * 1024);

  002d7	48 63 84 24 a8
	00 00 00	 movsxd	 rax, DWORD PTR bufferSizeByte$13[rsp]
  002df	41 b8 00 00 10
	00		 mov	 r8d, 1048576		; 00100000H
  002e5	48 8b d0	 mov	 rdx, rax
  002e8	48 8d 8c 24 b8
	00 00 00	 lea	 rcx, QWORD PTR ptr$14[rsp]
  002f0	e8 00 00 00 00	 call	 ?malloc_degeneracy@@YA_KPEAPEAX_K1@Z ; malloc_degeneracy
  002f5	89 84 24 a8 00
	00 00		 mov	 DWORD PTR bufferSizeByte$13[rsp], eax

; 153  :                 if (bufferSizeByte) {

  002fc	83 bc 24 a8 00
	00 00 00	 cmp	 DWORD PTR bufferSizeByte$13[rsp], 0
  00304	0f 84 ac 00 00
	00		 je	 $LN8@Init

; 154  :                     m_pOutputBuffer.reset((char*)ptr);

  0030a	48 8b 84 24 70
	05 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00312	48 05 20 01 00
	00		 add	 rax, 288		; 00000120H
  00318	48 8b 94 24 b8
	00 00 00	 mov	 rdx, QWORD PTR ptr$14[rsp]
  00320	48 8b c8	 mov	 rcx, rax
  00323	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@DUmalloc_deleter@@@std@@QEAAXPEAD@Z ; std::unique_ptr<char,malloc_deleter>::reset

; 155  :                     setvbuf(m_fDest.get(), m_pOutputBuffer.get(), _IOFBF, bufferSizeByte);

  00328	48 63 84 24 a8
	00 00 00	 movsxd	 rax, DWORD PTR bufferSizeByte$13[rsp]
  00330	48 89 84 24 78
	04 00 00	 mov	 QWORD PTR tv219[rsp], rax
  00338	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00340	48 81 c1 20 01
	00 00		 add	 rcx, 288		; 00000120H
  00347	e8 00 00 00 00	 call	 ?get@?$unique_ptr@DUmalloc_deleter@@@std@@QEBAPEADXZ ; std::unique_ptr<char,malloc_deleter>::get
  0034c	48 89 84 24 80
	04 00 00	 mov	 QWORD PTR tv228[rsp], rax
  00354	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0035c	48 83 c1 18	 add	 rcx, 24
  00360	e8 00 00 00 00	 call	 ?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ ; std::unique_ptr<_iobuf,fp_deleter>::get
  00365	48 8b 8c 24 78
	04 00 00	 mov	 rcx, QWORD PTR tv219[rsp]
  0036d	4c 8b c9	 mov	 r9, rcx
  00370	45 33 c0	 xor	 r8d, r8d
  00373	48 8b 8c 24 80
	04 00 00	 mov	 rcx, QWORD PTR tv228[rsp]
  0037b	48 8b d1	 mov	 rdx, rcx
  0037e	48 8b c8	 mov	 rcx, rax
  00381	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_setvbuf

; 156  :                     AddMessage(RGY_LOG_DEBUG, _T("Added %d MB output buffer.\n"), bufferSizeByte / (1024 * 1024));

  00387	8b 84 24 a8 00
	00 00		 mov	 eax, DWORD PTR bufferSizeByte$13[rsp]
  0038e	99		 cdq
  0038f	81 e2 ff ff 0f
	00		 and	 edx, 1048575		; 000fffffH
  00395	03 c2		 add	 eax, edx
  00397	c1 f8 14	 sar	 eax, 20
  0039a	44 8b c8	 mov	 r9d, eax
  0039d	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134742
  003a4	ba fe ff ff ff	 mov	 edx, -2
  003a9	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  003b1	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage
$LN8@Init:

; 157  :                 }
; 158  :             }
; 159  :         }
; 160  : #if ENABLE_AVSW_READER
; 161  :         if ((ENCODER_NVENC
; 162  :             && (pVideoOutputInfo->codec == RGY_CODEC_H264 || pVideoOutputInfo->codec == RGY_CODEC_HEVC)
; 163  :             && pVideoOutputInfo->sar[0] * pVideoOutputInfo->sar[1] > 0)
; 164  :             || (ENCODER_VCEENC

  003b6	33 c0		 xor	 eax, eax
  003b8	85 c0		 test	 eax, eax
  003ba	0f 84 41 0b 00
	00		 je	 $LN13@Init

; 165  :                 && (pVideoOutputInfo->vui.format != 5
; 166  :                     || pVideoOutputInfo->vui.colorprim != 2
; 167  :                     || pVideoOutputInfo->vui.transfer != 2
; 168  :                     || pVideoOutputInfo->vui.matrix != 2
; 169  :                     || pVideoOutputInfo->vui.chromaloc != 0))) {
; 170  :             if (!check_avcodec_dll()) {

  003c0	e8 00 00 00 00	 call	 ?check_avcodec_dll@@YA_NXZ ; check_avcodec_dll
  003c5	0f b6 c0	 movzx	 eax, al
  003c8	85 c0		 test	 eax, eax
  003ca	75 57		 jne	 SHORT $LN14@Init

; 171  :                 AddMessage(RGY_LOG_ERROR, error_mes_avcodec_dll_not_found());

  003cc	48 8d 8c 24 c8
	00 00 00	 lea	 rcx, QWORD PTR $T15[rsp]
  003d4	e8 00 00 00 00	 call	 ?error_mes_avcodec_dll_not_found@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; error_mes_avcodec_dll_not_found
  003d9	48 89 84 24 88
	04 00 00	 mov	 QWORD PTR tv723[rsp], rax
  003e1	48 8b 84 24 88
	04 00 00	 mov	 rax, QWORD PTR tv723[rsp]
  003e9	48 89 84 24 90
	04 00 00	 mov	 QWORD PTR tv699[rsp], rax
  003f1	4c 8b 84 24 90
	04 00 00	 mov	 r8, QWORD PTR tv699[rsp]
  003f9	ba 02 00 00 00	 mov	 edx, 2
  003fe	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00406	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; RGYOutput::AddMessage
  0040b	90		 npad	 1
  0040c	48 8d 8c 24 c8
	00 00 00	 lea	 rcx, QWORD PTR $T15[rsp]
  00414	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 172  :                 return RGY_ERR_NULL_PTR;

  00419	b8 fe ff ff ff	 mov	 eax, -2
  0041e	e9 17 0b 00 00	 jmp	 $LN1@Init
$LN14@Init:

; 173  :             }
; 174  : 
; 175  :             const char *bsf_name = nullptr;

  00423	48 c7 84 24 f0
	00 00 00 00 00
	00 00		 mov	 QWORD PTR bsf_name$16[rsp], 0

; 176  :             switch (pVideoOutputInfo->codec) {

  0042f	48 8b 84 24 80
	05 00 00	 mov	 rax, QWORD PTR pVideoOutputInfo$[rsp]
  00437	8b 40 54	 mov	 eax, DWORD PTR [rax+84]
  0043a	89 84 24 98 04
	00 00		 mov	 DWORD PTR tv262[rsp], eax
  00441	83 bc 24 98 04
	00 00 01	 cmp	 DWORD PTR tv262[rsp], 1
  00449	74 0c		 je	 SHORT $LN15@Init
  0044b	83 bc 24 98 04
	00 00 02	 cmp	 DWORD PTR tv262[rsp], 2
  00453	74 13		 je	 SHORT $LN16@Init
  00455	eb 20		 jmp	 SHORT $LN2@Init
$LN15@Init:

; 177  :             case RGY_CODEC_H264: bsf_name = "h264_metadata"; break;

  00457	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG134746
  0045e	48 89 84 24 f0
	00 00 00	 mov	 QWORD PTR bsf_name$16[rsp], rax
  00466	eb 0f		 jmp	 SHORT $LN2@Init
$LN16@Init:

; 178  :             case RGY_CODEC_HEVC: bsf_name = "hevc_metadata"; break;

  00468	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG134748
  0046f	48 89 84 24 f0
	00 00 00	 mov	 QWORD PTR bsf_name$16[rsp], rax
$LN2@Init:

; 179  :             default:
; 180  :                 break;
; 181  :             }
; 182  :             if (bsf_name == nullptr) {

  00477	48 83 bc 24 f0
	00 00 00 00	 cmp	 QWORD PTR bsf_name$16[rsp], 0
  00480	75 23		 jne	 SHORT $LN18@Init

; 183  :                 AddMessage(RGY_LOG_ERROR, _T("invalid codec to set metadata filter.\n"));

  00482	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134751
  00489	ba 02 00 00 00	 mov	 edx, 2
  0048e	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00496	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage

; 184  :                 return RGY_ERR_INVALID_CALL;

  0049b	b8 dc ff ff ff	 mov	 eax, -36		; ffffffffffffffdcH
  004a0	e9 95 0a 00 00	 jmp	 $LN1@Init
$LN18@Init:

; 185  :             }
; 186  :             AddMessage(RGY_LOG_DEBUG, _T("start initialize %s filter...\n"), bsf_name);

  004a5	4c 8b 8c 24 f0
	00 00 00	 mov	 r9, QWORD PTR bsf_name$16[rsp]
  004ad	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134752
  004b4	ba fe ff ff ff	 mov	 edx, -2
  004b9	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  004c1	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage

; 187  :             auto filter = av_bsf_get_by_name(bsf_name);

  004c6	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR bsf_name$16[rsp]
  004ce	e8 00 00 00 00	 call	 av_bsf_get_by_name
  004d3	48 89 84 24 f8
	00 00 00	 mov	 QWORD PTR filter$17[rsp], rax

; 188  :             if (filter == nullptr) {

  004db	48 83 bc 24 f8
	00 00 00 00	 cmp	 QWORD PTR filter$17[rsp], 0
  004e4	75 2b		 jne	 SHORT $LN19@Init

; 189  :                 AddMessage(RGY_LOG_ERROR, _T("failed to find %s.\n"), bsf_name);

  004e6	4c 8b 8c 24 f0
	00 00 00	 mov	 r9, QWORD PTR bsf_name$16[rsp]
  004ee	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134754
  004f5	ba 02 00 00 00	 mov	 edx, 2
  004fa	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00502	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage

; 190  :                 return RGY_ERR_NOT_FOUND;

  00507	b8 f7 ff ff ff	 mov	 eax, -9
  0050c	e9 29 0a 00 00	 jmp	 $LN1@Init
$LN19@Init:

; 191  :             }
; 192  :             unique_ptr<AVCodecParameters, RGYAVDeleter<AVCodecParameters>> codecpar(avcodec_parameters_alloc(), RGYAVDeleter<AVCodecParameters>(avcodec_parameters_free));

  00511	48 8d 84 24 c0
	03 00 00	 lea	 rax, QWORD PTR $T30[rsp]
  00519	48 89 84 24 00
	04 00 00	 mov	 QWORD PTR $T31[rsp], rax
  00521	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:avcodec_parameters_free
  00528	48 8b 8c 24 00
	04 00 00	 mov	 rcx, QWORD PTR $T31[rsp]
  00530	e8 00 00 00 00	 call	 ??$?0P6AXPEAPEAUAVCodecParameters@@@ZX@?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@P6AXPEAPEAUAVCodecParameters@@@Z@Z ; std::function<void __cdecl(AVCodecParameters * *)>::function<void __cdecl(AVCodecParameters * *)><void (__cdecl*)(AVCodecParameters * *),void>
  00535	48 89 84 24 a0
	04 00 00	 mov	 QWORD PTR tv724[rsp], rax
  0053d	48 8b 84 24 a0
	04 00 00	 mov	 rax, QWORD PTR tv724[rsp]
  00545	48 89 84 24 a8
	04 00 00	 mov	 QWORD PTR tv701[rsp], rax
  0054d	48 8b 94 24 a8
	04 00 00	 mov	 rdx, QWORD PTR tv701[rsp]
  00555	48 8d 8c 24 00
	01 00 00	 lea	 rcx, QWORD PTR $T18[rsp]
  0055d	e8 00 00 00 00	 call	 ??0?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@V?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@@Z ; RGYAVDeleter<AVCodecParameters>::RGYAVDeleter<AVCodecParameters>
  00562	48 89 84 24 b0
	04 00 00	 mov	 QWORD PTR tv725[rsp], rax
  0056a	48 8b 84 24 b0
	04 00 00	 mov	 rax, QWORD PTR tv725[rsp]
  00572	48 89 84 24 b8
	04 00 00	 mov	 QWORD PTR tv703[rsp], rax
  0057a	e8 00 00 00 00	 call	 avcodec_parameters_alloc
  0057f	4c 8b 84 24 b8
	04 00 00	 mov	 r8, QWORD PTR tv703[rsp]
  00587	48 8b d0	 mov	 rdx, rax
  0058a	48 8d 8c 24 50
	01 00 00	 lea	 rcx, QWORD PTR codecpar$19[rsp]
  00592	e8 00 00 00 00	 call	 ??$?0U?$RGYAVDeleter@UAVCodecParameters@@@@$0A@@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@PEAUAVCodecParameters@@$$QEAU?$RGYAVDeleter@UAVCodecParameters@@@@@Z ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> ><RGYAVDeleter<AVCodecParameters>,0>
  00597	90		 npad	 1
  00598	48 8d 8c 24 00
	01 00 00	 lea	 rcx, QWORD PTR $T18[rsp]
  005a0	e8 00 00 00 00	 call	 ??1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ

; 193  : 
; 194  :             codecpar->codec_type              = AVMEDIA_TYPE_VIDEO;

  005a5	48 8d 8c 24 50
	01 00 00	 lea	 rcx, QWORD PTR codecpar$19[rsp]
  005ad	e8 00 00 00 00	 call	 ??C?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::operator->
  005b2	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 195  :             codecpar->codec_id                = getAVCodecId(pVideoOutputInfo->codec);

  005b8	48 8b 84 24 80
	05 00 00	 mov	 rax, QWORD PTR pVideoOutputInfo$[rsp]
  005c0	8b 48 54	 mov	 ecx, DWORD PTR [rax+84]
  005c3	e8 00 00 00 00	 call	 ?getAVCodecId@@YA?BW4AVCodecID@@W4RGY_CODEC@@@Z ; getAVCodecId
  005c8	89 84 24 c0 04
	00 00		 mov	 DWORD PTR tv318[rsp], eax
  005cf	48 8d 8c 24 50
	01 00 00	 lea	 rcx, QWORD PTR codecpar$19[rsp]
  005d7	e8 00 00 00 00	 call	 ??C?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::operator->
  005dc	8b 8c 24 c0 04
	00 00		 mov	 ecx, DWORD PTR tv318[rsp]
  005e3	89 48 04	 mov	 DWORD PTR [rax+4], ecx

; 196  :             codecpar->width                   = pVideoOutputInfo->dstWidth;

  005e6	48 8d 8c 24 50
	01 00 00	 lea	 rcx, QWORD PTR codecpar$19[rsp]
  005ee	e8 00 00 00 00	 call	 ??C?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::operator->
  005f3	48 8b 8c 24 80
	05 00 00	 mov	 rcx, QWORD PTR pVideoOutputInfo$[rsp]
  005fb	8b 49 18	 mov	 ecx, DWORD PTR [rcx+24]
  005fe	89 48 38	 mov	 DWORD PTR [rax+56], ecx

; 197  :             codecpar->height                  = pVideoOutputInfo->dstHeight;

  00601	48 8d 8c 24 50
	01 00 00	 lea	 rcx, QWORD PTR codecpar$19[rsp]
  00609	e8 00 00 00 00	 call	 ??C?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::operator->
  0060e	48 8b 8c 24 80
	05 00 00	 mov	 rcx, QWORD PTR pVideoOutputInfo$[rsp]
  00616	8b 49 1c	 mov	 ecx, DWORD PTR [rcx+28]
  00619	89 48 3c	 mov	 DWORD PTR [rax+60], ecx

; 198  :             codecpar->format                  = csp_rgy_to_avpixfmt(pVideoOutputInfo->csp);

  0061c	48 8b 84 24 80
	05 00 00	 mov	 rax, QWORD PTR pVideoOutputInfo$[rsp]
  00624	8b 48 4c	 mov	 ecx, DWORD PTR [rax+76]
  00627	e8 00 00 00 00	 call	 ?csp_rgy_to_avpixfmt@@YA?AW4AVPixelFormat@@W4RGY_CSP@@@Z ; csp_rgy_to_avpixfmt
  0062c	89 84 24 c4 04
	00 00		 mov	 DWORD PTR tv332[rsp], eax
  00633	48 8d 8c 24 50
	01 00 00	 lea	 rcx, QWORD PTR codecpar$19[rsp]
  0063b	e8 00 00 00 00	 call	 ??C?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::operator->
  00640	8b 8c 24 c4 04
	00 00		 mov	 ecx, DWORD PTR tv332[rsp]
  00647	89 48 1c	 mov	 DWORD PTR [rax+28], ecx

; 199  :             codecpar->level                   = pVideoOutputInfo->codecLevel;

  0064a	48 8d 8c 24 50
	01 00 00	 lea	 rcx, QWORD PTR codecpar$19[rsp]
  00652	e8 00 00 00 00	 call	 ??C?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::operator->
  00657	48 8b 8c 24 80
	05 00 00	 mov	 rcx, QWORD PTR pVideoOutputInfo$[rsp]
  0065f	8b 49 64	 mov	 ecx, DWORD PTR [rcx+100]
  00662	89 48 34	 mov	 DWORD PTR [rax+52], ecx

; 200  :             codecpar->profile                 = pVideoOutputInfo->codecProfile;

  00665	48 8d 8c 24 50
	01 00 00	 lea	 rcx, QWORD PTR codecpar$19[rsp]
  0066d	e8 00 00 00 00	 call	 ??C?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::operator->
  00672	48 8b 8c 24 80
	05 00 00	 mov	 rcx, QWORD PTR pVideoOutputInfo$[rsp]
  0067a	8b 49 68	 mov	 ecx, DWORD PTR [rcx+104]
  0067d	89 48 30	 mov	 DWORD PTR [rax+48], ecx

; 201  :             codecpar->sample_aspect_ratio.num = pVideoOutputInfo->sar[0];

  00680	b8 04 00 00 00	 mov	 eax, 4
  00685	48 6b c0 00	 imul	 rax, rax, 0
  00689	48 89 84 24 c8
	04 00 00	 mov	 QWORD PTR tv348[rsp], rax
  00691	48 8d 8c 24 50
	01 00 00	 lea	 rcx, QWORD PTR codecpar$19[rsp]
  00699	e8 00 00 00 00	 call	 ??C?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::operator->
  0069e	48 8b 8c 24 80
	05 00 00	 mov	 rcx, QWORD PTR pVideoOutputInfo$[rsp]
  006a6	48 8b 94 24 c8
	04 00 00	 mov	 rdx, QWORD PTR tv348[rsp]
  006ae	8b 4c 11 44	 mov	 ecx, DWORD PTR [rcx+rdx+68]
  006b2	89 48 40	 mov	 DWORD PTR [rax+64], ecx

; 202  :             codecpar->sample_aspect_ratio.den = pVideoOutputInfo->sar[1];

  006b5	b8 04 00 00 00	 mov	 eax, 4
  006ba	48 6b c0 01	 imul	 rax, rax, 1
  006be	48 89 84 24 d0
	04 00 00	 mov	 QWORD PTR tv355[rsp], rax
  006c6	48 8d 8c 24 50
	01 00 00	 lea	 rcx, QWORD PTR codecpar$19[rsp]
  006ce	e8 00 00 00 00	 call	 ??C?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::operator->
  006d3	48 8b 8c 24 80
	05 00 00	 mov	 rcx, QWORD PTR pVideoOutputInfo$[rsp]
  006db	48 8b 94 24 d0
	04 00 00	 mov	 rdx, QWORD PTR tv355[rsp]
  006e3	8b 4c 11 44	 mov	 ecx, DWORD PTR [rcx+rdx+68]
  006e7	89 48 44	 mov	 DWORD PTR [rax+68], ecx

; 203  :             codecpar->chroma_location         = AVCHROMA_LOC_LEFT;

  006ea	48 8d 8c 24 50
	01 00 00	 lea	 rcx, QWORD PTR codecpar$19[rsp]
  006f2	e8 00 00 00 00	 call	 ??C?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::operator->
  006f7	c7 40 5c 01 00
	00 00		 mov	 DWORD PTR [rax+92], 1

; 204  :             codecpar->field_order             = picstrcut_rgy_to_avfieldorder(pVideoOutputInfo->picstruct);

  006fe	48 8b 84 24 80
	05 00 00	 mov	 rax, QWORD PTR pVideoOutputInfo$[rsp]
  00706	8b 48 50	 mov	 ecx, DWORD PTR [rax+80]
  00709	e8 00 00 00 00	 call	 ?picstrcut_rgy_to_avfieldorder@@YA?AW4AVFieldOrder@@W4RGY_PICSTRUCT@@@Z ; picstrcut_rgy_to_avfieldorder
  0070e	89 84 24 d8 04
	00 00		 mov	 DWORD PTR tv363[rsp], eax
  00715	48 8d 8c 24 50
	01 00 00	 lea	 rcx, QWORD PTR codecpar$19[rsp]
  0071d	e8 00 00 00 00	 call	 ??C?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::operator->
  00722	8b 8c 24 d8 04
	00 00		 mov	 ecx, DWORD PTR tv363[rsp]
  00729	89 48 48	 mov	 DWORD PTR [rax+72], ecx

; 205  :             codecpar->video_delay             = pVideoOutputInfo->videoDelay;

  0072c	48 8d 8c 24 50
	01 00 00	 lea	 rcx, QWORD PTR codecpar$19[rsp]
  00734	e8 00 00 00 00	 call	 ??C?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::operator->
  00739	48 8b 8c 24 80
	05 00 00	 mov	 rcx, QWORD PTR pVideoOutputInfo$[rsp]
  00741	8b 49 6c	 mov	 ecx, DWORD PTR [rcx+108]
  00744	89 48 60	 mov	 DWORD PTR [rax+96], ecx

; 206  :             if (pVideoOutputInfo->vui.descriptpresent) {

  00747	48 8b 84 24 80
	05 00 00	 mov	 rax, QWORD PTR pVideoOutputInfo$[rsp]
  0074f	83 78 70 00	 cmp	 DWORD PTR [rax+112], 0
  00753	0f 84 91 00 00
	00		 je	 $LN20@Init

; 207  :                 codecpar->color_space         = (AVColorSpace)pVideoOutputInfo->vui.matrix;

  00759	48 8d 8c 24 50
	01 00 00	 lea	 rcx, QWORD PTR codecpar$19[rsp]
  00761	e8 00 00 00 00	 call	 ??C?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::operator->
  00766	48 8b 8c 24 80
	05 00 00	 mov	 rcx, QWORD PTR pVideoOutputInfo$[rsp]
  0076e	8b 49 78	 mov	 ecx, DWORD PTR [rcx+120]
  00771	89 48 58	 mov	 DWORD PTR [rax+88], ecx

; 208  :                 codecpar->color_primaries     = (AVColorPrimaries)pVideoOutputInfo->vui.colorprim;

  00774	48 8d 8c 24 50
	01 00 00	 lea	 rcx, QWORD PTR codecpar$19[rsp]
  0077c	e8 00 00 00 00	 call	 ??C?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::operator->
  00781	48 8b 8c 24 80
	05 00 00	 mov	 rcx, QWORD PTR pVideoOutputInfo$[rsp]
  00789	8b 49 74	 mov	 ecx, DWORD PTR [rcx+116]
  0078c	89 48 50	 mov	 DWORD PTR [rax+80], ecx

; 209  :                 codecpar->color_range         = (AVColorRange)(pVideoOutputInfo->vui.fullrange ? AVCOL_RANGE_JPEG : AVCOL_RANGE_MPEG);

  0078f	48 8b 84 24 80
	05 00 00	 mov	 rax, QWORD PTR pVideoOutputInfo$[rsp]
  00797	83 b8 84 00 00
	00 00		 cmp	 DWORD PTR [rax+132], 0
  0079e	74 0d		 je	 SHORT $LN38@Init
  007a0	c7 84 24 dc 04
	00 00 02 00 00
	00		 mov	 DWORD PTR tv389[rsp], 2
  007ab	eb 0b		 jmp	 SHORT $LN39@Init
$LN38@Init:
  007ad	c7 84 24 dc 04
	00 00 01 00 00
	00		 mov	 DWORD PTR tv389[rsp], 1
$LN39@Init:
  007b8	48 8d 8c 24 50
	01 00 00	 lea	 rcx, QWORD PTR codecpar$19[rsp]
  007c0	e8 00 00 00 00	 call	 ??C?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::operator->
  007c5	8b 8c 24 dc 04
	00 00		 mov	 ecx, DWORD PTR tv389[rsp]
  007cc	89 48 4c	 mov	 DWORD PTR [rax+76], ecx

; 210  :                 codecpar->color_trc           = (AVColorTransferCharacteristic)pVideoOutputInfo->vui.transfer;

  007cf	48 8d 8c 24 50
	01 00 00	 lea	 rcx, QWORD PTR codecpar$19[rsp]
  007d7	e8 00 00 00 00	 call	 ??C?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::operator->
  007dc	48 8b 8c 24 80
	05 00 00	 mov	 rcx, QWORD PTR pVideoOutputInfo$[rsp]
  007e4	8b 49 7c	 mov	 ecx, DWORD PTR [rcx+124]
  007e7	89 48 54	 mov	 DWORD PTR [rax+84], ecx
$LN20@Init:

; 211  :             }
; 212  :             int ret = 0;

  007ea	c7 84 24 a4 01
	00 00 00 00 00
	00		 mov	 DWORD PTR ret$20[rsp], 0

; 213  :             AVBSFContext *bsfc = nullptr;

  007f5	48 c7 84 24 b8
	01 00 00 00 00
	00 00		 mov	 QWORD PTR bsfc$21[rsp], 0

; 214  :             if (0 > (ret = av_bsf_alloc(filter, &bsfc))) {

  00801	48 8d 94 24 b8
	01 00 00	 lea	 rdx, QWORD PTR bsfc$21[rsp]
  00809	48 8b 8c 24 f8
	00 00 00	 mov	 rcx, QWORD PTR filter$17[rsp]
  00811	e8 00 00 00 00	 call	 av_bsf_alloc
  00816	89 84 24 a4 01
	00 00		 mov	 DWORD PTR ret$20[rsp], eax
  0081d	83 bc 24 a4 01
	00 00 00	 cmp	 DWORD PTR ret$20[rsp], 0
  00825	0f 8d 91 00 00
	00		 jge	 $LN21@Init

; 215  :                 AddMessage(RGY_LOG_ERROR, _T("failed to allocate memory for %s: %s.\n"), bsf_name, qsv_av_err2str(ret).c_str());

  0082b	8b 94 24 a4 01
	00 00		 mov	 edx, DWORD PTR ret$20[rsp]
  00832	48 8d 8c 24 c8
	01 00 00	 lea	 rcx, QWORD PTR $T22[rsp]
  0083a	e8 00 00 00 00	 call	 ?qsv_av_err2str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; qsv_av_err2str
  0083f	48 89 84 24 e0
	04 00 00	 mov	 QWORD PTR tv293[rsp], rax
  00847	48 8b 84 24 e0
	04 00 00	 mov	 rax, QWORD PTR tv293[rsp]
  0084f	48 89 84 24 e8
	04 00 00	 mov	 QWORD PTR tv706[rsp], rax
  00857	48 8b 8c 24 e8
	04 00 00	 mov	 rcx, QWORD PTR tv706[rsp]
  0085f	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00864	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00869	4c 8b 8c 24 f0
	00 00 00	 mov	 r9, QWORD PTR bsf_name$16[rsp]
  00871	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134757
  00878	ba 02 00 00 00	 mov	 edx, 2
  0087d	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00885	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage
  0088a	90		 npad	 1
  0088b	48 8d 8c 24 c8
	01 00 00	 lea	 rcx, QWORD PTR $T22[rsp]
  00893	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 216  :                 return RGY_ERR_NULL_PTR;

  00898	c7 84 24 08 04
	00 00 fe ff ff
	ff		 mov	 DWORD PTR $T32[rsp], -2
  008a3	48 8d 8c 24 50
	01 00 00	 lea	 rcx, QWORD PTR codecpar$19[rsp]
  008ab	e8 00 00 00 00	 call	 ??1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::~unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >
  008b0	8b 84 24 08 04
	00 00		 mov	 eax, DWORD PTR $T32[rsp]
  008b7	e9 7e 06 00 00	 jmp	 $LN1@Init
$LN21@Init:

; 217  :             }
; 218  :             if (0 > (ret = avcodec_parameters_copy(bsfc->par_in, codecpar.get()))) {

  008bc	48 8d 8c 24 50
	01 00 00	 lea	 rcx, QWORD PTR codecpar$19[rsp]
  008c4	e8 00 00 00 00	 call	 ?get@?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEBAPEAUAVCodecParameters@@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::get
  008c9	48 8b d0	 mov	 rdx, rax
  008cc	48 8b 84 24 b8
	01 00 00	 mov	 rax, QWORD PTR bsfc$21[rsp]
  008d4	48 8b 48 20	 mov	 rcx, QWORD PTR [rax+32]
  008d8	e8 00 00 00 00	 call	 avcodec_parameters_copy
  008dd	89 84 24 a4 01
	00 00		 mov	 DWORD PTR ret$20[rsp], eax
  008e4	83 bc 24 a4 01
	00 00 00	 cmp	 DWORD PTR ret$20[rsp], 0
  008ec	0f 8d 91 00 00
	00		 jge	 $LN22@Init

; 219  :                 AddMessage(RGY_LOG_ERROR, _T("failed to copy parameter for %s: %s.\n"), bsf_name, qsv_av_err2str(ret).c_str());

  008f2	8b 94 24 a4 01
	00 00		 mov	 edx, DWORD PTR ret$20[rsp]
  008f9	48 8d 8c 24 f0
	01 00 00	 lea	 rcx, QWORD PTR $T23[rsp]
  00901	e8 00 00 00 00	 call	 ?qsv_av_err2str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; qsv_av_err2str
  00906	48 89 84 24 f0
	04 00 00	 mov	 QWORD PTR tv726[rsp], rax
  0090e	48 8b 84 24 f0
	04 00 00	 mov	 rax, QWORD PTR tv726[rsp]
  00916	48 89 84 24 f8
	04 00 00	 mov	 QWORD PTR tv709[rsp], rax
  0091e	48 8b 8c 24 f8
	04 00 00	 mov	 rcx, QWORD PTR tv709[rsp]
  00926	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0092b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00930	4c 8b 8c 24 f0
	00 00 00	 mov	 r9, QWORD PTR bsf_name$16[rsp]
  00938	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134760
  0093f	ba 02 00 00 00	 mov	 edx, 2
  00944	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0094c	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage
  00951	90		 npad	 1
  00952	48 8d 8c 24 f0
	01 00 00	 lea	 rcx, QWORD PTR $T23[rsp]
  0095a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 220  :                 return RGY_ERR_UNKNOWN;

  0095f	c7 84 24 0c 04
	00 00 ff ff ff
	ff		 mov	 DWORD PTR $T33[rsp], -1
  0096a	48 8d 8c 24 50
	01 00 00	 lea	 rcx, QWORD PTR codecpar$19[rsp]
  00972	e8 00 00 00 00	 call	 ??1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::~unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >
  00977	8b 84 24 0c 04
	00 00		 mov	 eax, DWORD PTR $T33[rsp]
  0097e	e9 b7 05 00 00	 jmp	 $LN1@Init
$LN22@Init:

; 221  :             }
; 222  :             m_pBsfc = unique_ptr<AVBSFContext, RGYAVDeleter<AVBSFContext>>(bsfc, RGYAVDeleter<AVBSFContext>(av_bsf_free));

  00983	48 8d 84 24 10
	04 00 00	 lea	 rax, QWORD PTR $T34[rsp]
  0098b	48 89 84 24 50
	04 00 00	 mov	 QWORD PTR $T35[rsp], rax
  00993	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:av_bsf_free
  0099a	48 8b 8c 24 50
	04 00 00	 mov	 rcx, QWORD PTR $T35[rsp]
  009a2	e8 00 00 00 00	 call	 ??$?0P6AXPEAPEAUAVBSFContext@@@ZX@?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@P6AXPEAPEAUAVBSFContext@@@Z@Z ; std::function<void __cdecl(AVBSFContext * *)>::function<void __cdecl(AVBSFContext * *)><void (__cdecl*)(AVBSFContext * *),void>
  009a7	48 89 84 24 00
	05 00 00	 mov	 QWORD PTR tv727[rsp], rax
  009af	48 8b 84 24 00
	05 00 00	 mov	 rax, QWORD PTR tv727[rsp]
  009b7	48 89 84 24 08
	05 00 00	 mov	 QWORD PTR tv712[rsp], rax
  009bf	48 8b 94 24 08
	05 00 00	 mov	 rdx, QWORD PTR tv712[rsp]
  009c7	48 8d 8c 24 20
	02 00 00	 lea	 rcx, QWORD PTR $T24[rsp]
  009cf	e8 00 00 00 00	 call	 ??0?$RGYAVDeleter@UAVBSFContext@@@@QEAA@V?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@@Z ; RGYAVDeleter<AVBSFContext>::RGYAVDeleter<AVBSFContext>
  009d4	48 89 84 24 10
	05 00 00	 mov	 QWORD PTR tv728[rsp], rax
  009dc	48 8b 84 24 10
	05 00 00	 mov	 rax, QWORD PTR tv728[rsp]
  009e4	48 89 84 24 18
	05 00 00	 mov	 QWORD PTR tv714[rsp], rax
  009ec	4c 8b 84 24 18
	05 00 00	 mov	 r8, QWORD PTR tv714[rsp]
  009f4	48 8b 94 24 b8
	01 00 00	 mov	 rdx, QWORD PTR bsfc$21[rsp]
  009fc	48 8d 8c 24 60
	02 00 00	 lea	 rcx, QWORD PTR $T25[rsp]
  00a04	e8 00 00 00 00	 call	 ??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@PEAUAVBSFContext@@$$QEAU?$RGYAVDeleter@UAVBSFContext@@@@@Z ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> ><RGYAVDeleter<AVBSFContext>,0>
  00a09	48 89 84 24 20
	05 00 00	 mov	 QWORD PTR tv729[rsp], rax
  00a11	48 8b 84 24 20
	05 00 00	 mov	 rax, QWORD PTR tv729[rsp]
  00a19	48 89 84 24 28
	05 00 00	 mov	 QWORD PTR tv716[rsp], rax
  00a21	48 8b 84 24 70
	05 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00a29	48 05 58 01 00
	00		 add	 rax, 344		; 00000158H
  00a2f	48 8b 94 24 28
	05 00 00	 mov	 rdx, QWORD PTR tv716[rsp]
  00a37	48 8b c8	 mov	 rcx, rax
  00a3a	e8 00 00 00 00	 call	 ??4?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::operator=
  00a3f	90		 npad	 1
  00a40	48 8d 8c 24 60
	02 00 00	 lea	 rcx, QWORD PTR $T25[rsp]
  00a48	e8 00 00 00 00	 call	 ??1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::~unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >
  00a4d	90		 npad	 1
  00a4e	48 8d 8c 24 20
	02 00 00	 lea	 rcx, QWORD PTR $T24[rsp]
  00a56	e8 00 00 00 00	 call	 ??1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ

; 223  :             AVDictionary *bsfPrm = nullptr;

  00a5b	48 c7 84 24 b8
	02 00 00 00 00
	00 00		 mov	 QWORD PTR bsfPrm$26[rsp], 0

; 224  :             if (ENCODER_NVENC) {

  00a67	33 c0		 xor	 eax, eax
  00a69	85 c0		 test	 eax, eax
  00a6b	0f 84 b4 00 00
	00		 je	 $LN23@Init

; 225  :                 char sar[128];
; 226  :                 sprintf_s(sar, "%d/%d", pVideoOutputInfo->sar[0], pVideoOutputInfo->sar[1]);

  00a71	b8 04 00 00 00	 mov	 eax, 4
  00a76	48 6b c0 01	 imul	 rax, rax, 1
  00a7a	b9 04 00 00 00	 mov	 ecx, 4
  00a7f	48 6b c9 00	 imul	 rcx, rcx, 0
  00a83	48 8b 94 24 80
	05 00 00	 mov	 rdx, QWORD PTR pVideoOutputInfo$[rsp]
  00a8b	44 8b 4c 02 44	 mov	 r9d, DWORD PTR [rdx+rax+68]
  00a90	48 8b 84 24 80
	05 00 00	 mov	 rax, QWORD PTR pVideoOutputInfo$[rsp]
  00a98	44 8b 44 08 44	 mov	 r8d, DWORD PTR [rax+rcx+68]
  00a9d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG134763
  00aa4	48 8d 8c 24 e0
	02 00 00	 lea	 rcx, QWORD PTR sar$27[rsp]
  00aac	e8 00 00 00 00	 call	 ??$sprintf_s@$0IA@@@YAHAEAY0IA@DPEBDZZ ; sprintf_s<128>

; 227  :                 av_dict_set(&bsfPrm, "sample_aspect_ratio", sar, 0);

  00ab1	45 33 c9	 xor	 r9d, r9d
  00ab4	4c 8d 84 24 e0
	02 00 00	 lea	 r8, QWORD PTR sar$27[rsp]
  00abc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG134764
  00ac3	48 8d 8c 24 b8
	02 00 00	 lea	 rcx, QWORD PTR bsfPrm$26[rsp]
  00acb	e8 00 00 00 00	 call	 av_dict_set

; 228  :                 AddMessage(RGY_LOG_DEBUG, _T("set sar %d:%d by %s filter\n"), pVideoOutputInfo->sar[0], pVideoOutputInfo->sar[1], bsf_name);

  00ad0	b8 04 00 00 00	 mov	 eax, 4
  00ad5	48 6b c0 01	 imul	 rax, rax, 1
  00ad9	b9 04 00 00 00	 mov	 ecx, 4
  00ade	48 6b c9 00	 imul	 rcx, rcx, 0
  00ae2	48 8b 94 24 f0
	00 00 00	 mov	 rdx, QWORD PTR bsf_name$16[rsp]
  00aea	48 89 54 24 28	 mov	 QWORD PTR [rsp+40], rdx
  00aef	48 8b 94 24 80
	05 00 00	 mov	 rdx, QWORD PTR pVideoOutputInfo$[rsp]
  00af7	8b 44 02 44	 mov	 eax, DWORD PTR [rdx+rax+68]
  00afb	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00aff	48 8b 84 24 80
	05 00 00	 mov	 rax, QWORD PTR pVideoOutputInfo$[rsp]
  00b07	44 8b 4c 08 44	 mov	 r9d, DWORD PTR [rax+rcx+68]
  00b0c	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134765
  00b13	ba fe ff ff ff	 mov	 edx, -2
  00b18	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00b20	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage
$LN23@Init:

; 229  :             }
; 230  :             if (ENCODER_VCEENC) {

  00b25	33 c0		 xor	 eax, eax
  00b27	85 c0		 test	 eax, eax
  00b29	0f 84 10 02 00
	00		 je	 $LN24@Init

; 231  :                 if (pVideoOutputInfo->vui.format != 5 /*undef*/) {

  00b2f	48 8b 84 24 80
	05 00 00	 mov	 rax, QWORD PTR pVideoOutputInfo$[rsp]
  00b37	83 b8 80 00 00
	00 05		 cmp	 DWORD PTR [rax+128], 5
  00b3e	74 5e		 je	 SHORT $LN25@Init

; 232  :                     av_dict_set_int(&bsfPrm, "video_format", pVideoOutputInfo->vui.format, 0);

  00b40	48 8b 84 24 80
	05 00 00	 mov	 rax, QWORD PTR pVideoOutputInfo$[rsp]
  00b48	48 63 80 80 00
	00 00		 movsxd	 rax, DWORD PTR [rax+128]
  00b4f	45 33 c9	 xor	 r9d, r9d
  00b52	4c 8b c0	 mov	 r8, rax
  00b55	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG134768
  00b5c	48 8d 8c 24 b8
	02 00 00	 lea	 rcx, QWORD PTR bsfPrm$26[rsp]
  00b64	e8 00 00 00 00	 call	 av_dict_set_int

; 233  :                     AddMessage(RGY_LOG_DEBUG, _T("set video_format %d by %s filter\n"), pVideoOutputInfo->vui.format, bsf_name);

  00b69	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR bsf_name$16[rsp]
  00b71	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00b76	48 8b 84 24 80
	05 00 00	 mov	 rax, QWORD PTR pVideoOutputInfo$[rsp]
  00b7e	44 8b 88 80 00
	00 00		 mov	 r9d, DWORD PTR [rax+128]
  00b85	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134769
  00b8c	ba fe ff ff ff	 mov	 edx, -2
  00b91	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00b99	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage
$LN25@Init:

; 234  :                 }
; 235  :                 if (pVideoOutputInfo->vui.colorprim != 2 /*undef*/) {

  00b9e	48 8b 84 24 80
	05 00 00	 mov	 rax, QWORD PTR pVideoOutputInfo$[rsp]
  00ba6	83 78 74 02	 cmp	 DWORD PTR [rax+116], 2
  00baa	74 58		 je	 SHORT $LN26@Init

; 236  :                     av_dict_set_int(&bsfPrm, "colour_primaries", pVideoOutputInfo->vui.colorprim, 0);

  00bac	48 8b 84 24 80
	05 00 00	 mov	 rax, QWORD PTR pVideoOutputInfo$[rsp]
  00bb4	48 63 40 74	 movsxd	 rax, DWORD PTR [rax+116]
  00bb8	45 33 c9	 xor	 r9d, r9d
  00bbb	4c 8b c0	 mov	 r8, rax
  00bbe	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG134771
  00bc5	48 8d 8c 24 b8
	02 00 00	 lea	 rcx, QWORD PTR bsfPrm$26[rsp]
  00bcd	e8 00 00 00 00	 call	 av_dict_set_int

; 237  :                     AddMessage(RGY_LOG_DEBUG, _T("set colorprim %d by %s filter\n"), pVideoOutputInfo->vui.colorprim, bsf_name);

  00bd2	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR bsf_name$16[rsp]
  00bda	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00bdf	48 8b 84 24 80
	05 00 00	 mov	 rax, QWORD PTR pVideoOutputInfo$[rsp]
  00be7	44 8b 48 74	 mov	 r9d, DWORD PTR [rax+116]
  00beb	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134772
  00bf2	ba fe ff ff ff	 mov	 edx, -2
  00bf7	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00bff	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage
$LN26@Init:

; 238  :                 }
; 239  :                 if (pVideoOutputInfo->vui.transfer != 2 /*undef*/) {

  00c04	48 8b 84 24 80
	05 00 00	 mov	 rax, QWORD PTR pVideoOutputInfo$[rsp]
  00c0c	83 78 7c 02	 cmp	 DWORD PTR [rax+124], 2
  00c10	74 58		 je	 SHORT $LN27@Init

; 240  :                     av_dict_set_int(&bsfPrm, "transfer_characteristics", pVideoOutputInfo->vui.transfer, 0);

  00c12	48 8b 84 24 80
	05 00 00	 mov	 rax, QWORD PTR pVideoOutputInfo$[rsp]
  00c1a	48 63 40 7c	 movsxd	 rax, DWORD PTR [rax+124]
  00c1e	45 33 c9	 xor	 r9d, r9d
  00c21	4c 8b c0	 mov	 r8, rax
  00c24	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG134774
  00c2b	48 8d 8c 24 b8
	02 00 00	 lea	 rcx, QWORD PTR bsfPrm$26[rsp]
  00c33	e8 00 00 00 00	 call	 av_dict_set_int

; 241  :                     AddMessage(RGY_LOG_DEBUG, _T("set transfer %d by %s filter\n"), pVideoOutputInfo->vui.transfer, bsf_name);

  00c38	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR bsf_name$16[rsp]
  00c40	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00c45	48 8b 84 24 80
	05 00 00	 mov	 rax, QWORD PTR pVideoOutputInfo$[rsp]
  00c4d	44 8b 48 7c	 mov	 r9d, DWORD PTR [rax+124]
  00c51	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134775
  00c58	ba fe ff ff ff	 mov	 edx, -2
  00c5d	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00c65	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage
$LN27@Init:

; 242  :                 }
; 243  :                 if (pVideoOutputInfo->vui.matrix != 2 /*undef*/) {

  00c6a	48 8b 84 24 80
	05 00 00	 mov	 rax, QWORD PTR pVideoOutputInfo$[rsp]
  00c72	83 78 78 02	 cmp	 DWORD PTR [rax+120], 2
  00c76	74 58		 je	 SHORT $LN28@Init

; 244  :                     av_dict_set_int(&bsfPrm, "matrix_coefficients", pVideoOutputInfo->vui.matrix, 0);

  00c78	48 8b 84 24 80
	05 00 00	 mov	 rax, QWORD PTR pVideoOutputInfo$[rsp]
  00c80	48 63 40 78	 movsxd	 rax, DWORD PTR [rax+120]
  00c84	45 33 c9	 xor	 r9d, r9d
  00c87	4c 8b c0	 mov	 r8, rax
  00c8a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG134777
  00c91	48 8d 8c 24 b8
	02 00 00	 lea	 rcx, QWORD PTR bsfPrm$26[rsp]
  00c99	e8 00 00 00 00	 call	 av_dict_set_int

; 245  :                     AddMessage(RGY_LOG_DEBUG, _T("set matrix %d by %s filter\n"), pVideoOutputInfo->vui.matrix, bsf_name);

  00c9e	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR bsf_name$16[rsp]
  00ca6	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00cab	48 8b 84 24 80
	05 00 00	 mov	 rax, QWORD PTR pVideoOutputInfo$[rsp]
  00cb3	44 8b 48 78	 mov	 r9d, DWORD PTR [rax+120]
  00cb7	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134778
  00cbe	ba fe ff ff ff	 mov	 edx, -2
  00cc3	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00ccb	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage
$LN28@Init:

; 246  :                 }
; 247  :                 if (pVideoOutputInfo->vui.chromaloc != 0) {

  00cd0	48 8b 84 24 80
	05 00 00	 mov	 rax, QWORD PTR pVideoOutputInfo$[rsp]
  00cd8	83 b8 88 00 00
	00 00		 cmp	 DWORD PTR [rax+136], 0
  00cdf	74 5e		 je	 SHORT $LN24@Init

; 248  :                     av_dict_set_int(&bsfPrm, "chroma_sample_loc_type", pVideoOutputInfo->vui.chromaloc, 0);

  00ce1	48 8b 84 24 80
	05 00 00	 mov	 rax, QWORD PTR pVideoOutputInfo$[rsp]
  00ce9	48 63 80 88 00
	00 00		 movsxd	 rax, DWORD PTR [rax+136]
  00cf0	45 33 c9	 xor	 r9d, r9d
  00cf3	4c 8b c0	 mov	 r8, rax
  00cf6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG134780
  00cfd	48 8d 8c 24 b8
	02 00 00	 lea	 rcx, QWORD PTR bsfPrm$26[rsp]
  00d05	e8 00 00 00 00	 call	 av_dict_set_int

; 249  :                     AddMessage(RGY_LOG_DEBUG, _T("set chromaloc %d by %s filter\n"), pVideoOutputInfo->vui.chromaloc, bsf_name);

  00d0a	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR bsf_name$16[rsp]
  00d12	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00d17	48 8b 84 24 80
	05 00 00	 mov	 rax, QWORD PTR pVideoOutputInfo$[rsp]
  00d1f	44 8b 88 88 00
	00 00		 mov	 r9d, DWORD PTR [rax+136]
  00d26	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134781
  00d2d	ba fe ff ff ff	 mov	 edx, -2
  00d32	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00d3a	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage
$LN24@Init:

; 250  :                 }
; 251  :             }
; 252  :             if (0 > (ret = av_opt_set_dict2(m_pBsfc.get(), &bsfPrm, AV_OPT_SEARCH_CHILDREN))) {

  00d3f	48 8b 84 24 70
	05 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00d47	48 05 58 01 00
	00		 add	 rax, 344		; 00000158H
  00d4d	48 8b c8	 mov	 rcx, rax
  00d50	e8 00 00 00 00	 call	 ?get@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBAPEAUAVBSFContext@@XZ ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::get
  00d55	41 b8 01 00 00
	00		 mov	 r8d, 1
  00d5b	48 8d 94 24 b8
	02 00 00	 lea	 rdx, QWORD PTR bsfPrm$26[rsp]
  00d63	48 8b c8	 mov	 rcx, rax
  00d66	e8 00 00 00 00	 call	 av_opt_set_dict2
  00d6b	89 84 24 a4 01
	00 00		 mov	 DWORD PTR ret$20[rsp], eax
  00d72	83 bc 24 a4 01
	00 00 00	 cmp	 DWORD PTR ret$20[rsp], 0
  00d7a	0f 8d 91 00 00
	00		 jge	 $LN30@Init

; 253  :                 AddMessage(RGY_LOG_ERROR, _T("failed to set parameters for %s: %s.\n"), bsf_name, qsv_av_err2str(ret).c_str());

  00d80	8b 94 24 a4 01
	00 00		 mov	 edx, DWORD PTR ret$20[rsp]
  00d87	48 8d 8c 24 68
	03 00 00	 lea	 rcx, QWORD PTR $T28[rsp]
  00d8f	e8 00 00 00 00	 call	 ?qsv_av_err2str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; qsv_av_err2str
  00d94	48 89 84 24 30
	05 00 00	 mov	 QWORD PTR tv730[rsp], rax
  00d9c	48 8b 84 24 30
	05 00 00	 mov	 rax, QWORD PTR tv730[rsp]
  00da4	48 89 84 24 38
	05 00 00	 mov	 QWORD PTR tv718[rsp], rax
  00dac	48 8b 8c 24 38
	05 00 00	 mov	 rcx, QWORD PTR tv718[rsp]
  00db4	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00db9	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00dbe	4c 8b 8c 24 f0
	00 00 00	 mov	 r9, QWORD PTR bsf_name$16[rsp]
  00dc6	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134783
  00dcd	ba 02 00 00 00	 mov	 edx, 2
  00dd2	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00dda	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage
  00ddf	90		 npad	 1
  00de0	48 8d 8c 24 68
	03 00 00	 lea	 rcx, QWORD PTR $T28[rsp]
  00de8	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 254  :                 return RGY_ERR_UNKNOWN;

  00ded	c7 84 24 58 04
	00 00 ff ff ff
	ff		 mov	 DWORD PTR $T36[rsp], -1
  00df8	48 8d 8c 24 50
	01 00 00	 lea	 rcx, QWORD PTR codecpar$19[rsp]
  00e00	e8 00 00 00 00	 call	 ??1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::~unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >
  00e05	8b 84 24 58 04
	00 00		 mov	 eax, DWORD PTR $T36[rsp]
  00e0c	e9 29 01 00 00	 jmp	 $LN1@Init
$LN30@Init:

; 255  :             }
; 256  :             if (0 > (ret = av_bsf_init(m_pBsfc.get()))) {

  00e11	48 8b 84 24 70
	05 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00e19	48 05 58 01 00
	00		 add	 rax, 344		; 00000158H
  00e1f	48 8b c8	 mov	 rcx, rax
  00e22	e8 00 00 00 00	 call	 ?get@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBAPEAUAVBSFContext@@XZ ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::get
  00e27	48 8b c8	 mov	 rcx, rax
  00e2a	e8 00 00 00 00	 call	 av_bsf_init
  00e2f	89 84 24 a4 01
	00 00		 mov	 DWORD PTR ret$20[rsp], eax
  00e36	83 bc 24 a4 01
	00 00 00	 cmp	 DWORD PTR ret$20[rsp], 0
  00e3e	0f 8d 8e 00 00
	00		 jge	 $LN31@Init

; 257  :                 AddMessage(RGY_LOG_ERROR, _T("failed to init %s: %s.\n"), bsf_name, qsv_av_err2str(ret).c_str());

  00e44	8b 94 24 a4 01
	00 00		 mov	 edx, DWORD PTR ret$20[rsp]
  00e4b	48 8d 8c 24 90
	03 00 00	 lea	 rcx, QWORD PTR $T29[rsp]
  00e53	e8 00 00 00 00	 call	 ?qsv_av_err2str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; qsv_av_err2str
  00e58	48 89 84 24 40
	05 00 00	 mov	 QWORD PTR tv731[rsp], rax
  00e60	48 8b 84 24 40
	05 00 00	 mov	 rax, QWORD PTR tv731[rsp]
  00e68	48 89 84 24 48
	05 00 00	 mov	 QWORD PTR tv721[rsp], rax
  00e70	48 8b 8c 24 48
	05 00 00	 mov	 rcx, QWORD PTR tv721[rsp]
  00e78	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00e7d	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00e82	4c 8b 8c 24 f0
	00 00 00	 mov	 r9, QWORD PTR bsf_name$16[rsp]
  00e8a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134786
  00e91	ba 02 00 00 00	 mov	 edx, 2
  00e96	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00e9e	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage
  00ea3	90		 npad	 1
  00ea4	48 8d 8c 24 90
	03 00 00	 lea	 rcx, QWORD PTR $T29[rsp]
  00eac	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 258  :                 return RGY_ERR_UNKNOWN;

  00eb1	c7 84 24 5c 04
	00 00 ff ff ff
	ff		 mov	 DWORD PTR $T37[rsp], -1
  00ebc	48 8d 8c 24 50
	01 00 00	 lea	 rcx, QWORD PTR codecpar$19[rsp]
  00ec4	e8 00 00 00 00	 call	 ??1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::~unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >
  00ec9	8b 84 24 5c 04
	00 00		 mov	 eax, DWORD PTR $T37[rsp]
  00ed0	eb 68		 jmp	 SHORT $LN1@Init
$LN31@Init:

; 259  :             }
; 260  :             AddMessage(RGY_LOG_DEBUG, _T("initialized %s filter\n"), bsf_name);

  00ed2	4c 8b 8c 24 f0
	00 00 00	 mov	 r9, QWORD PTR bsf_name$16[rsp]
  00eda	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134788
  00ee1	ba fe ff ff ff	 mov	 edx, -2
  00ee6	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00eee	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage
  00ef3	90		 npad	 1

; 261  :         }

  00ef4	48 8d 8c 24 50
	01 00 00	 lea	 rcx, QWORD PTR codecpar$19[rsp]
  00efc	e8 00 00 00 00	 call	 ??1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::~unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >
$LN13@Init:

; 262  : #endif //#if ENABLE_AVSW_READER
; 263  :         if (rawPrm->codecId == RGY_CODEC_HEVC) {

  00f01	48 8b 44 24 30	 mov	 rax, QWORD PTR rawPrm$[rsp]
  00f06	83 78 08 02	 cmp	 DWORD PTR [rax+8], 2
  00f0a	75 20		 jne	 SHORT $LN6@Init

; 264  :             m_seiNal = rawPrm->seiNal;

  00f0c	48 8b 44 24 30	 mov	 rax, QWORD PTR rawPrm$[rsp]
  00f11	48 83 c0 10	 add	 rax, 16
  00f15	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00f1d	48 81 c1 38 01
	00 00		 add	 rcx, 312		; 00000138H
  00f24	48 8b d0	 mov	 rdx, rax
  00f27	e8 00 00 00 00	 call	 ??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@AEBV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
$LN6@Init:

; 265  :         }
; 266  :     }
; 267  :     m_bInited = true;

  00f2c	48 8b 84 24 70
	05 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00f34	c6 40 21 01	 mov	 BYTE PTR [rax+33], 1

; 268  :     return RGY_ERR_NONE;

  00f38	33 c0		 xor	 eax, eax
$LN1@Init:

; 269  : }

  00f3a	48 8b f8	 mov	 rdi, rax
  00f3d	48 8b cc	 mov	 rcx, rsp
  00f40	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z$rtcFrameData
  00f47	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00f4c	48 8b c7	 mov	 rax, rdi
  00f4f	48 8b 8c 24 50
	05 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00f57	48 33 cc	 xor	 rcx, rsp
  00f5a	e8 00 00 00 00	 call	 __security_check_cookie
  00f5f	48 81 c4 60 05
	00 00		 add	 rsp, 1376		; 00000560H
  00f66	5f		 pop	 rdi
  00f67	c3		 ret	 0
?Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z ENDP ; RGYOutputRaw::Init
_TEXT	ENDS
text$x	SEGMENT
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?dtor$0@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA PROC ; `RGYOutputRaw::Init'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR $T9[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA ENDP ; `RGYOutputRaw::Init'::`1'::dtor$0
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?dtor$1@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA PROC ; `RGYOutputRaw::Init'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 60	 lea	 rcx, QWORD PTR $T10[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA ENDP ; `RGYOutputRaw::Init'::`1'::dtor$1
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?dtor$2@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA PROC ; `RGYOutputRaw::Init'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T15[rbp]
  00060	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00065	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?dtor$2@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA ENDP ; `RGYOutputRaw::Init'::`1'::dtor$2
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?dtor$3@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA PROC ; `RGYOutputRaw::Init'::`1'::dtor$3
  0006c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00071	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00076	55		 push	 rbp
  00077	57		 push	 rdi
  00078	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007c	48 8b ea	 mov	 rbp, rdx
  0007f	48 8b 8d 00 04
	00 00		 mov	 rcx, QWORD PTR $T31[rbp]
  00086	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ
  0008b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0008f	5f		 pop	 rdi
  00090	5d		 pop	 rbp
  00091	c3		 ret	 0
?dtor$3@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA ENDP ; `RGYOutputRaw::Init'::`1'::dtor$3
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?dtor$4@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA PROC ; `RGYOutputRaw::Init'::`1'::dtor$4
  00092	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00097	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009c	55		 push	 rbp
  0009d	57		 push	 rdi
  0009e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a2	48 8b ea	 mov	 rbp, rdx
  000a5	48 8d 8d 00 01
	00 00		 lea	 rcx, QWORD PTR $T18[rbp]
  000ac	e8 00 00 00 00	 call	 ??1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ
  000b1	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b5	5f		 pop	 rdi
  000b6	5d		 pop	 rbp
  000b7	c3		 ret	 0
?dtor$4@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA ENDP ; `RGYOutputRaw::Init'::`1'::dtor$4
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?dtor$5@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA PROC ; `RGYOutputRaw::Init'::`1'::dtor$5
  000b8	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000bd	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000c2	55		 push	 rbp
  000c3	57		 push	 rdi
  000c4	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000c8	48 8b ea	 mov	 rbp, rdx
  000cb	48 8d 8d 50 01
	00 00		 lea	 rcx, QWORD PTR codecpar$19[rbp]
  000d2	e8 00 00 00 00	 call	 ??1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::~unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >
  000d7	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000db	5f		 pop	 rdi
  000dc	5d		 pop	 rbp
  000dd	c3		 ret	 0
?dtor$5@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA ENDP ; `RGYOutputRaw::Init'::`1'::dtor$5
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?dtor$6@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA PROC ; `RGYOutputRaw::Init'::`1'::dtor$6
  000de	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000e3	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000e8	55		 push	 rbp
  000e9	57		 push	 rdi
  000ea	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000ee	48 8b ea	 mov	 rbp, rdx
  000f1	48 8d 8d c8 01
	00 00		 lea	 rcx, QWORD PTR $T22[rbp]
  000f8	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000fd	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00101	5f		 pop	 rdi
  00102	5d		 pop	 rbp
  00103	c3		 ret	 0
?dtor$6@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA ENDP ; `RGYOutputRaw::Init'::`1'::dtor$6
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?dtor$7@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA PROC ; `RGYOutputRaw::Init'::`1'::dtor$7
  00104	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00109	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0010e	55		 push	 rbp
  0010f	57		 push	 rdi
  00110	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00114	48 8b ea	 mov	 rbp, rdx
  00117	48 8d 8d f0 01
	00 00		 lea	 rcx, QWORD PTR $T23[rbp]
  0011e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00123	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00127	5f		 pop	 rdi
  00128	5d		 pop	 rbp
  00129	c3		 ret	 0
?dtor$7@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA ENDP ; `RGYOutputRaw::Init'::`1'::dtor$7
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?dtor$8@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA PROC ; `RGYOutputRaw::Init'::`1'::dtor$8
  0012a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0012f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00134	55		 push	 rbp
  00135	57		 push	 rdi
  00136	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0013a	48 8b ea	 mov	 rbp, rdx
  0013d	48 8b 8d 50 04
	00 00		 mov	 rcx, QWORD PTR $T35[rbp]
  00144	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ
  00149	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0014d	5f		 pop	 rdi
  0014e	5d		 pop	 rbp
  0014f	c3		 ret	 0
?dtor$8@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA ENDP ; `RGYOutputRaw::Init'::`1'::dtor$8
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?dtor$9@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA PROC ; `RGYOutputRaw::Init'::`1'::dtor$9
  00150	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00155	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0015a	55		 push	 rbp
  0015b	57		 push	 rdi
  0015c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00160	48 8b ea	 mov	 rbp, rdx
  00163	48 8d 8d 20 02
	00 00		 lea	 rcx, QWORD PTR $T24[rbp]
  0016a	e8 00 00 00 00	 call	 ??1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ
  0016f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00173	5f		 pop	 rdi
  00174	5d		 pop	 rbp
  00175	c3		 ret	 0
?dtor$9@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA ENDP ; `RGYOutputRaw::Init'::`1'::dtor$9
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?dtor$10@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA PROC ; `RGYOutputRaw::Init'::`1'::dtor$10
  00176	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0017b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00180	55		 push	 rbp
  00181	57		 push	 rdi
  00182	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00186	48 8b ea	 mov	 rbp, rdx
  00189	48 8d 8d 60 02
	00 00		 lea	 rcx, QWORD PTR $T25[rbp]
  00190	e8 00 00 00 00	 call	 ??1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::~unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >
  00195	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00199	5f		 pop	 rdi
  0019a	5d		 pop	 rbp
  0019b	c3		 ret	 0
?dtor$10@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA ENDP ; `RGYOutputRaw::Init'::`1'::dtor$10
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?dtor$11@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA PROC ; `RGYOutputRaw::Init'::`1'::dtor$11
  0019c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001a1	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001a6	55		 push	 rbp
  001a7	57		 push	 rdi
  001a8	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001ac	48 8b ea	 mov	 rbp, rdx
  001af	48 8d 8d 68 03
	00 00		 lea	 rcx, QWORD PTR $T28[rbp]
  001b6	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001bb	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001bf	5f		 pop	 rdi
  001c0	5d		 pop	 rbp
  001c1	c3		 ret	 0
?dtor$11@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA ENDP ; `RGYOutputRaw::Init'::`1'::dtor$11
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?dtor$12@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA PROC ; `RGYOutputRaw::Init'::`1'::dtor$12
  001c2	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001c7	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001cc	55		 push	 rbp
  001cd	57		 push	 rdi
  001ce	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001d2	48 8b ea	 mov	 rbp, rdx
  001d5	48 8d 8d 90 03
	00 00		 lea	 rcx, QWORD PTR $T29[rbp]
  001dc	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001e1	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001e5	5f		 pop	 rdi
  001e6	5d		 pop	 rbp
  001e7	c3		 ret	 0
?dtor$12@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA ENDP ; `RGYOutputRaw::Init'::`1'::dtor$12
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?dtor$0@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA PROC ; `RGYOutputRaw::Init'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR $T9[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA ENDP ; `RGYOutputRaw::Init'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?dtor$1@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA PROC ; `RGYOutputRaw::Init'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 60	 lea	 rcx, QWORD PTR $T10[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA ENDP ; `RGYOutputRaw::Init'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?dtor$2@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA PROC ; `RGYOutputRaw::Init'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T15[rbp]
  00060	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00065	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?dtor$2@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA ENDP ; `RGYOutputRaw::Init'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?dtor$3@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA PROC ; `RGYOutputRaw::Init'::`1'::dtor$3
  0006c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00071	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00076	55		 push	 rbp
  00077	57		 push	 rdi
  00078	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007c	48 8b ea	 mov	 rbp, rdx
  0007f	48 8b 8d 00 04
	00 00		 mov	 rcx, QWORD PTR $T31[rbp]
  00086	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPEAPEAUAVCodecParameters@@@Z@std@@QEAA@XZ
  0008b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0008f	5f		 pop	 rdi
  00090	5d		 pop	 rbp
  00091	c3		 ret	 0
?dtor$3@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA ENDP ; `RGYOutputRaw::Init'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?dtor$4@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA PROC ; `RGYOutputRaw::Init'::`1'::dtor$4
  00092	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00097	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009c	55		 push	 rbp
  0009d	57		 push	 rdi
  0009e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a2	48 8b ea	 mov	 rbp, rdx
  000a5	48 8d 8d 00 01
	00 00		 lea	 rcx, QWORD PTR $T18[rbp]
  000ac	e8 00 00 00 00	 call	 ??1?$RGYAVDeleter@UAVCodecParameters@@@@QEAA@XZ
  000b1	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b5	5f		 pop	 rdi
  000b6	5d		 pop	 rbp
  000b7	c3		 ret	 0
?dtor$4@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA ENDP ; `RGYOutputRaw::Init'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?dtor$5@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA PROC ; `RGYOutputRaw::Init'::`1'::dtor$5
  000b8	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000bd	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000c2	55		 push	 rbp
  000c3	57		 push	 rdi
  000c4	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000c8	48 8b ea	 mov	 rbp, rdx
  000cb	48 8d 8d 50 01
	00 00		 lea	 rcx, QWORD PTR codecpar$19[rbp]
  000d2	e8 00 00 00 00	 call	 ??1?$unique_ptr@UAVCodecParameters@@U?$RGYAVDeleter@UAVCodecParameters@@@@@std@@QEAA@XZ ; std::unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >::~unique_ptr<AVCodecParameters,RGYAVDeleter<AVCodecParameters> >
  000d7	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000db	5f		 pop	 rdi
  000dc	5d		 pop	 rbp
  000dd	c3		 ret	 0
?dtor$5@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA ENDP ; `RGYOutputRaw::Init'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?dtor$6@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA PROC ; `RGYOutputRaw::Init'::`1'::dtor$6
  000de	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000e3	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000e8	55		 push	 rbp
  000e9	57		 push	 rdi
  000ea	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000ee	48 8b ea	 mov	 rbp, rdx
  000f1	48 8d 8d c8 01
	00 00		 lea	 rcx, QWORD PTR $T22[rbp]
  000f8	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000fd	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00101	5f		 pop	 rdi
  00102	5d		 pop	 rbp
  00103	c3		 ret	 0
?dtor$6@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA ENDP ; `RGYOutputRaw::Init'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?dtor$7@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA PROC ; `RGYOutputRaw::Init'::`1'::dtor$7
  00104	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00109	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0010e	55		 push	 rbp
  0010f	57		 push	 rdi
  00110	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00114	48 8b ea	 mov	 rbp, rdx
  00117	48 8d 8d f0 01
	00 00		 lea	 rcx, QWORD PTR $T23[rbp]
  0011e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00123	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00127	5f		 pop	 rdi
  00128	5d		 pop	 rbp
  00129	c3		 ret	 0
?dtor$7@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA ENDP ; `RGYOutputRaw::Init'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?dtor$8@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA PROC ; `RGYOutputRaw::Init'::`1'::dtor$8
  0012a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0012f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00134	55		 push	 rbp
  00135	57		 push	 rdi
  00136	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0013a	48 8b ea	 mov	 rbp, rdx
  0013d	48 8b 8d 50 04
	00 00		 mov	 rcx, QWORD PTR $T35[rbp]
  00144	e8 00 00 00 00	 call	 ??1?$function@$$A6AXPEAPEAUAVBSFContext@@@Z@std@@QEAA@XZ
  00149	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0014d	5f		 pop	 rdi
  0014e	5d		 pop	 rbp
  0014f	c3		 ret	 0
?dtor$8@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA ENDP ; `RGYOutputRaw::Init'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?dtor$9@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA PROC ; `RGYOutputRaw::Init'::`1'::dtor$9
  00150	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00155	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0015a	55		 push	 rbp
  0015b	57		 push	 rdi
  0015c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00160	48 8b ea	 mov	 rbp, rdx
  00163	48 8d 8d 20 02
	00 00		 lea	 rcx, QWORD PTR $T24[rbp]
  0016a	e8 00 00 00 00	 call	 ??1?$RGYAVDeleter@UAVBSFContext@@@@QEAA@XZ
  0016f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00173	5f		 pop	 rdi
  00174	5d		 pop	 rbp
  00175	c3		 ret	 0
?dtor$9@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA ENDP ; `RGYOutputRaw::Init'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?dtor$10@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA PROC ; `RGYOutputRaw::Init'::`1'::dtor$10
  00176	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0017b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00180	55		 push	 rbp
  00181	57		 push	 rdi
  00182	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00186	48 8b ea	 mov	 rbp, rdx
  00189	48 8d 8d 60 02
	00 00		 lea	 rcx, QWORD PTR $T25[rbp]
  00190	e8 00 00 00 00	 call	 ??1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::~unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >
  00195	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00199	5f		 pop	 rdi
  0019a	5d		 pop	 rbp
  0019b	c3		 ret	 0
?dtor$10@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA ENDP ; `RGYOutputRaw::Init'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?dtor$11@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA PROC ; `RGYOutputRaw::Init'::`1'::dtor$11
  0019c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001a1	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001a6	55		 push	 rbp
  001a7	57		 push	 rdi
  001a8	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001ac	48 8b ea	 mov	 rbp, rdx
  001af	48 8d 8d 68 03
	00 00		 lea	 rcx, QWORD PTR $T28[rbp]
  001b6	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001bb	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001bf	5f		 pop	 rdi
  001c0	5d		 pop	 rbp
  001c1	c3		 ret	 0
?dtor$11@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA ENDP ; `RGYOutputRaw::Init'::`1'::dtor$11
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
rawPrm$ = 48
$T9 = 56
$T10 = 96
fp$11 = 152
error$12 = 164
bufferSizeByte$13 = 168
ptr$14 = 184
$T15 = 200
bsf_name$16 = 240
filter$17 = 248
$T18 = 256
codecpar$19 = 336
ret$20 = 420
bsfc$21 = 440
$T22 = 456
$T23 = 496
$T24 = 544
$T25 = 608
bsfPrm$26 = 696
sar$27 = 736
$T28 = 872
$T29 = 912
$T30 = 960
$T31 = 1024
$T32 = 1032
$T33 = 1036
$T34 = 1040
$T35 = 1104
$T36 = 1112
$T37 = 1116
tv152 = 1120
tv697 = 1128
tv199 = 1136
tv200 = 1140
tv219 = 1144
tv228 = 1152
tv723 = 1160
tv699 = 1168
tv262 = 1176
tv724 = 1184
tv701 = 1192
tv725 = 1200
tv703 = 1208
tv318 = 1216
tv332 = 1220
tv348 = 1224
tv355 = 1232
tv363 = 1240
tv389 = 1244
tv293 = 1248
tv706 = 1256
tv726 = 1264
tv709 = 1272
tv727 = 1280
tv712 = 1288
tv728 = 1296
tv714 = 1304
tv729 = 1312
tv716 = 1320
tv730 = 1328
tv718 = 1336
tv731 = 1344
tv721 = 1352
__$ArrayPad$ = 1360
this$ = 1392
strFileName$ = 1400
pVideoOutputInfo$ = 1408
prm$ = 1416
?dtor$12@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA PROC ; `RGYOutputRaw::Init'::`1'::dtor$12
  001c2	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001c7	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001cc	55		 push	 rbp
  001cd	57		 push	 rdi
  001ce	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001d2	48 8b ea	 mov	 rbp, rdx
  001d5	48 8d 8d 90 03
	00 00		 lea	 rcx, QWORD PTR $T29[rbp]
  001dc	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001e1	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001e5	5f		 pop	 rdi
  001e6	5d		 pop	 rbp
  001e7	c3		 ret	 0
?dtor$12@?0??Init@RGYOutputRaw@@MEAA?AW4RGY_ERR@@PEBDPEBUVideoInfo@@PEBX@Z@4HA ENDP ; `RGYOutputRaw::Init'::`1'::dtor$12
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
_TEXT	SEGMENT
this$ = 16
pSurface$ = 24
?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z PROC ; RGYOutputRaw::WriteNextFrame

; 361  : RGY_ERR RGYOutputRaw::WriteNextFrame(RGYFrame *pSurface) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 362  :     UNREFERENCED_PARAMETER(pSurface);
; 363  :     return RGY_ERR_UNSUPPORTED;

  0000b	b8 fd ff ff ff	 mov	 eax, -3

; 364  : }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z ENDP ; RGYOutputRaw::WriteNextFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
_TEXT	SEGMENT
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z PROC ; RGYOutputRaw::WriteNextFrame

; 272  : RGY_ERR RGYOutputRaw::WriteNextFrame(RGYBitstream *pBitstream) {

$LN60:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec a0 06
	00 00		 sub	 rsp, 1696		; 000006a0H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 a8 01 00 00	 mov	 ecx, 424		; 000001a8H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 b0
	06 00 00	 mov	 rcx, QWORD PTR [rsp+1712]
  00029	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00030	48 33 c4	 xor	 rax, rsp
  00033	48 89 84 24 98
	06 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003b	c7 84 24 b4 04
	00 00 00 00 00
	00		 mov	 DWORD PTR $T64[rsp], 0

; 273  :     if (pBitstream == nullptr) {

  00046	48 83 bc 24 b8
	06 00 00 00	 cmp	 QWORD PTR pBitstream$[rsp], 0
  0004f	75 23		 jne	 SHORT $LN5@WriteNextF

; 274  :         AddMessage(RGY_LOG_ERROR, _T("Invalid call: WriteNextFrame\n"));

  00051	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG135140
  00058	ba 02 00 00 00	 mov	 edx, 2
  0005d	48 8b 8c 24 b0
	06 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00065	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage

; 275  :         return RGY_ERR_NULL_PTR;

  0006a	b8 fe ff ff ff	 mov	 eax, -2
  0006f	e9 9b 10 00 00	 jmp	 $LN1@WriteNextF
$LN5@WriteNextF:

; 276  :     }
; 277  : 
; 278  :     size_t nBytesWritten = 0;

  00074	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR nBytesWritten$[rsp], 0

; 279  :     if (!m_bNoOutput) {

  0007d	48 8b 84 24 b0
	06 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00085	0f b6 40 22	 movzx	 eax, BYTE PTR [rax+34]
  00089	85 c0		 test	 eax, eax
  0008b	0f 85 14 10 00
	00		 jne	 $LN6@WriteNextF

; 280  : #if ENABLE_AVSW_READER
; 281  :         if (m_pBsfc) {

  00091	48 8b 84 24 b0
	06 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00099	48 05 58 01 00
	00		 add	 rax, 344		; 00000158H
  0009f	48 8b c8	 mov	 rcx, rax
  000a2	e8 00 00 00 00	 call	 ??B?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBA_NXZ ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::operator bool
  000a7	0f b6 c0	 movzx	 eax, al
  000aa	85 c0		 test	 eax, eax
  000ac	0f 84 ad 07 00
	00		 je	 $LN7@WriteNextF

; 282  :             uint8_t nal_type = 0;

  000b2	c6 44 24 38 00	 mov	 BYTE PTR nal_type$10[rsp], 0

; 283  :             std::vector<nal_info> nal_list;

  000b7	48 8d 4c 24 48	 lea	 rcx, QWORD PTR nal_list$11[rsp]
  000bc	e8 00 00 00 00	 call	 ??0?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::vector<nal_info,std::allocator<nal_info> >
  000c1	90		 npad	 1

; 284  :             if (m_VideoOutputInfo.codec == RGY_CODEC_HEVC) {

  000c2	48 8b 84 24 b0
	06 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000ca	83 b8 d4 00 00
	00 02		 cmp	 DWORD PTR [rax+212], 2
  000d1	75 7f		 jne	 SHORT $LN8@WriteNextF

; 285  :                 nal_type = NALU_HEVC_SPS;

  000d3	c6 44 24 38 21	 mov	 BYTE PTR nal_type$10[rsp], 33 ; 00000021H

; 286  :                 nal_list = parse_nal_unit_hevc(pBitstream->data(), pBitstream->size());

  000d8	48 8b 8c 24 b8
	06 00 00	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  000e0	e8 00 00 00 00	 call	 ?size@RGYBitstream@@QEBA_KXZ ; RGYBitstream::size
  000e5	48 89 84 24 b8
	04 00 00	 mov	 QWORD PTR tv130[rsp], rax
  000ed	48 8b 8c 24 b8
	06 00 00	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  000f5	e8 00 00 00 00	 call	 ?data@RGYBitstream@@QEBAPEAEXZ ; RGYBitstream::data
  000fa	48 8b 8c 24 b8
	04 00 00	 mov	 rcx, QWORD PTR tv130[rsp]
  00102	4c 8b c1	 mov	 r8, rcx
  00105	48 8b d0	 mov	 rdx, rax
  00108	48 8d 8c 24 e0
	02 00 00	 lea	 rcx, QWORD PTR $T33[rsp]
  00110	e8 00 00 00 00	 call	 ?parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z ; parse_nal_unit_hevc
  00115	48 89 84 24 c0
	04 00 00	 mov	 QWORD PTR tv85[rsp], rax
  0011d	48 8b 84 24 c0
	04 00 00	 mov	 rax, QWORD PTR tv85[rsp]
  00125	48 89 84 24 c8
	04 00 00	 mov	 QWORD PTR tv665[rsp], rax
  0012d	48 8b 94 24 c8
	04 00 00	 mov	 rdx, QWORD PTR tv665[rsp]
  00135	48 8d 4c 24 48	 lea	 rcx, QWORD PTR nal_list$11[rsp]
  0013a	e8 00 00 00 00	 call	 ??4?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<nal_info,std::allocator<nal_info> >::operator=
  0013f	90		 npad	 1
  00140	48 8d 8c 24 e0
	02 00 00	 lea	 rcx, QWORD PTR $T33[rsp]
  00148	e8 00 00 00 00	 call	 ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
  0014d	e9 8b 00 00 00	 jmp	 $LN9@WriteNextF
$LN8@WriteNextF:

; 287  :             } else if (m_VideoOutputInfo.codec == RGY_CODEC_H264) {

  00152	48 8b 84 24 b0
	06 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0015a	83 b8 d4 00 00
	00 01		 cmp	 DWORD PTR [rax+212], 1
  00161	75 7a		 jne	 SHORT $LN9@WriteNextF

; 288  :                 nal_type = NALU_H264_SPS;

  00163	c6 44 24 38 07	 mov	 BYTE PTR nal_type$10[rsp], 7

; 289  :                 nal_list = parse_nal_unit_h264(pBitstream->data(), pBitstream->size());

  00168	48 8b 8c 24 b8
	06 00 00	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  00170	e8 00 00 00 00	 call	 ?size@RGYBitstream@@QEBA_KXZ ; RGYBitstream::size
  00175	48 89 84 24 d0
	04 00 00	 mov	 QWORD PTR tv149[rsp], rax
  0017d	48 8b 8c 24 b8
	06 00 00	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  00185	e8 00 00 00 00	 call	 ?data@RGYBitstream@@QEBAPEAEXZ ; RGYBitstream::data
  0018a	48 8b 8c 24 d0
	04 00 00	 mov	 rcx, QWORD PTR tv149[rsp]
  00192	4c 8b c1	 mov	 r8, rcx
  00195	48 8b d0	 mov	 rdx, rax
  00198	48 8d 8c 24 00
	03 00 00	 lea	 rcx, QWORD PTR $T34[rsp]
  001a0	e8 00 00 00 00	 call	 ?parse_nal_unit_h264@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z ; parse_nal_unit_h264
  001a5	48 89 84 24 d8
	04 00 00	 mov	 QWORD PTR tv730[rsp], rax
  001ad	48 8b 84 24 d8
	04 00 00	 mov	 rax, QWORD PTR tv730[rsp]
  001b5	48 89 84 24 e0
	04 00 00	 mov	 QWORD PTR tv667[rsp], rax
  001bd	48 8b 94 24 e0
	04 00 00	 mov	 rdx, QWORD PTR tv667[rsp]
  001c5	48 8d 4c 24 48	 lea	 rcx, QWORD PTR nal_list$11[rsp]
  001ca	e8 00 00 00 00	 call	 ??4?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<nal_info,std::allocator<nal_info> >::operator=
  001cf	90		 npad	 1
  001d0	48 8d 8c 24 00
	03 00 00	 lea	 rcx, QWORD PTR $T34[rsp]
  001d8	e8 00 00 00 00	 call	 ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
$LN9@WriteNextF:

; 290  :             }
; 291  :             auto sps_nal = std::find_if(nal_list.begin(), nal_list.end(), [](nal_info info) { return info.type == NALU_HEVC_SPS; });

  001dd	48 8d 84 24 20
	03 00 00	 lea	 rax, QWORD PTR $T35[rsp]
  001e5	48 8b f8	 mov	 rdi, rax
  001e8	33 c0		 xor	 eax, eax
  001ea	b9 01 00 00 00	 mov	 ecx, 1
  001ef	f3 aa		 rep stosb
  001f1	48 8d 84 24 28
	03 00 00	 lea	 rax, QWORD PTR $T36[rsp]
  001f9	48 89 84 24 40
	03 00 00	 mov	 QWORD PTR $T37[rsp], rax
  00201	48 8d 84 24 48
	03 00 00	 lea	 rax, QWORD PTR $T38[rsp]
  00209	48 89 84 24 60
	03 00 00	 mov	 QWORD PTR $T39[rsp], rax
  00211	48 8b 94 24 40
	03 00 00	 mov	 rdx, QWORD PTR $T37[rsp]
  00219	48 8d 4c 24 48	 lea	 rcx, QWORD PTR nal_list$11[rsp]
  0021e	e8 00 00 00 00	 call	 ?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::end
  00223	48 89 84 24 e8
	04 00 00	 mov	 QWORD PTR tv731[rsp], rax
  0022b	48 8b 84 24 e8
	04 00 00	 mov	 rax, QWORD PTR tv731[rsp]
  00233	48 89 84 24 f0
	04 00 00	 mov	 QWORD PTR tv669[rsp], rax
  0023b	48 8b 94 24 60
	03 00 00	 mov	 rdx, QWORD PTR $T39[rsp]
  00243	48 8d 4c 24 48	 lea	 rcx, QWORD PTR nal_list$11[rsp]
  00248	e8 00 00 00 00	 call	 ?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::begin
  0024d	48 89 84 24 f8
	04 00 00	 mov	 QWORD PTR tv732[rsp], rax
  00255	48 8b 84 24 f8
	04 00 00	 mov	 rax, QWORD PTR tv732[rsp]
  0025d	48 89 84 24 00
	05 00 00	 mov	 QWORD PTR tv671[rsp], rax
  00265	44 0f b6 8c 24
	20 03 00 00	 movzx	 r9d, BYTE PTR $T35[rsp]
  0026e	4c 8b 84 24 f0
	04 00 00	 mov	 r8, QWORD PTR tv669[rsp]
  00276	48 8b 94 24 00
	05 00 00	 mov	 rdx, QWORD PTR tv671[rsp]
  0027e	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR sps_nal$12[rsp]
  00286	e8 00 00 00 00	 call	 ??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_c9b8cf6142d60d923da63780b9f1f11d>@@@Z ; std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_c9b8cf6142d60d923da63780b9f1f11d> >
  0028b	90		 npad	 1

; 292  :             if (sps_nal != nal_list.end()) {

  0028c	48 8d 94 24 70
	03 00 00	 lea	 rdx, QWORD PTR $T41[rsp]
  00294	48 8d 4c 24 48	 lea	 rcx, QWORD PTR nal_list$11[rsp]
  00299	e8 00 00 00 00	 call	 ?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::end
  0029e	48 89 84 24 08
	05 00 00	 mov	 QWORD PTR tv146[rsp], rax
  002a6	48 8b 84 24 08
	05 00 00	 mov	 rax, QWORD PTR tv146[rsp]
  002ae	48 89 84 24 10
	05 00 00	 mov	 QWORD PTR tv674[rsp], rax
  002b6	48 8b 94 24 10
	05 00 00	 mov	 rdx, QWORD PTR tv674[rsp]
  002be	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR sps_nal$12[rsp]
  002c6	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator!=
  002cb	88 84 24 68 03
	00 00		 mov	 BYTE PTR $T40[rsp], al
  002d2	48 8d 8c 24 70
	03 00 00	 lea	 rcx, QWORD PTR $T41[rsp]
  002da	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  002df	0f b6 84 24 68
	03 00 00	 movzx	 eax, BYTE PTR $T40[rsp]
  002e7	85 c0		 test	 eax, eax
  002e9	0f 84 58 05 00
	00		 je	 $LN11@WriteNextF

; 293  :                 AVPacket pkt = { 0 };

  002ef	48 8d 84 24 c0
	00 00 00	 lea	 rax, QWORD PTR pkt$13[rsp]
  002f7	48 8b f8	 mov	 rdi, rax
  002fa	33 c0		 xor	 eax, eax
  002fc	b9 58 00 00 00	 mov	 ecx, 88			; 00000058H
  00301	f3 aa		 rep stosb

; 294  :                 av_init_packet(&pkt);

  00303	48 8d 8c 24 c0
	00 00 00	 lea	 rcx, QWORD PTR pkt$13[rsp]
  0030b	e8 00 00 00 00	 call	 av_init_packet

; 295  :                 av_new_packet(&pkt, (int)sps_nal->size);

  00310	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR sps_nal$12[rsp]
  00318	e8 00 00 00 00	 call	 ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEAUnal_info@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator->
  0031d	8b 50 10	 mov	 edx, DWORD PTR [rax+16]
  00320	48 8d 8c 24 c0
	00 00 00	 lea	 rcx, QWORD PTR pkt$13[rsp]
  00328	e8 00 00 00 00	 call	 av_new_packet

; 296  :                 memcpy(pkt.data, sps_nal->ptr, sps_nal->size);

  0032d	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR sps_nal$12[rsp]
  00335	e8 00 00 00 00	 call	 ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEAUnal_info@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator->
  0033a	48 89 84 24 18
	05 00 00	 mov	 QWORD PTR tv214[rsp], rax
  00342	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR sps_nal$12[rsp]
  0034a	e8 00 00 00 00	 call	 ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEAUnal_info@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator->
  0034f	48 8b 8c 24 18
	05 00 00	 mov	 rcx, QWORD PTR tv214[rsp]
  00357	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  0035b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0035e	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR pkt$13[rsp+24]
  00366	e8 00 00 00 00	 call	 memcpy

; 297  :                 int ret = 0;

  0036b	c7 84 24 24 01
	00 00 00 00 00
	00		 mov	 DWORD PTR ret$14[rsp], 0

; 298  :                 if (0 > (ret = av_bsf_send_packet(m_pBsfc.get(), &pkt))) {

  00376	48 8b 84 24 b0
	06 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0037e	48 05 58 01 00
	00		 add	 rax, 344		; 00000158H
  00384	48 8b c8	 mov	 rcx, rax
  00387	e8 00 00 00 00	 call	 ?get@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBAPEAUAVBSFContext@@XZ ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::get
  0038c	48 8d 94 24 c0
	00 00 00	 lea	 rdx, QWORD PTR pkt$13[rsp]
  00394	48 8b c8	 mov	 rcx, rax
  00397	e8 00 00 00 00	 call	 av_bsf_send_packet
  0039c	89 84 24 24 01
	00 00		 mov	 DWORD PTR ret$14[rsp], eax
  003a3	83 bc 24 24 01
	00 00 00	 cmp	 DWORD PTR ret$14[rsp], 0
  003ab	0f 8d 15 01 00
	00		 jge	 $LN12@WriteNextF

; 299  :                     av_packet_unref(&pkt);

  003b1	48 8d 8c 24 c0
	00 00 00	 lea	 rcx, QWORD PTR pkt$13[rsp]
  003b9	e8 00 00 00 00	 call	 av_packet_unref

; 300  :                     AddMessage(RGY_LOG_ERROR, _T("failed to send packet to %s bitstream filter: %s.\n"),

  003be	8b 94 24 24 01
	00 00		 mov	 edx, DWORD PTR ret$14[rsp]
  003c5	48 8d 8c 24 50
	01 00 00	 lea	 rcx, QWORD PTR $T16[rsp]
  003cd	e8 00 00 00 00	 call	 ?qsv_av_err2str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; qsv_av_err2str
  003d2	48 89 84 24 20
	05 00 00	 mov	 QWORD PTR tv733[rsp], rax
  003da	48 8b 84 24 20
	05 00 00	 mov	 rax, QWORD PTR tv733[rsp]
  003e2	48 89 84 24 28
	05 00 00	 mov	 QWORD PTR tv676[rsp], rax
  003ea	48 8b 8c 24 28
	05 00 00	 mov	 rcx, QWORD PTR tv676[rsp]
  003f2	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  003f7	48 89 84 24 30
	05 00 00	 mov	 QWORD PTR tv240[rsp], rax
  003ff	48 8b 8c 24 b0
	06 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00407	48 81 c1 58 01
	00 00		 add	 rcx, 344		; 00000158H
  0040e	e8 00 00 00 00	 call	 ??C?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBAPEAUAVBSFContext@@XZ ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::operator->
  00413	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00417	41 b8 03 00 00
	00		 mov	 r8d, 3
  0041d	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00420	48 8d 8c 24 28
	01 00 00	 lea	 rcx, QWORD PTR $T15[rsp]
  00428	e8 00 00 00 00	 call	 ?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z ; char_to_tstring
  0042d	48 89 84 24 38
	05 00 00	 mov	 QWORD PTR tv734[rsp], rax
  00435	48 8b 84 24 38
	05 00 00	 mov	 rax, QWORD PTR tv734[rsp]
  0043d	48 89 84 24 40
	05 00 00	 mov	 QWORD PTR tv678[rsp], rax
  00445	48 8b 8c 24 40
	05 00 00	 mov	 rcx, QWORD PTR tv678[rsp]
  0044d	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00452	48 8b 8c 24 30
	05 00 00	 mov	 rcx, QWORD PTR tv240[rsp]
  0045a	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0045f	4c 8b c8	 mov	 r9, rax
  00462	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG135149
  00469	ba 02 00 00 00	 mov	 edx, 2
  0046e	48 8b 8c 24 b0
	06 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00476	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage
  0047b	90		 npad	 1
  0047c	48 8d 8c 24 28
	01 00 00	 lea	 rcx, QWORD PTR $T15[rsp]
  00484	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00489	90		 npad	 1
  0048a	48 8d 8c 24 50
	01 00 00	 lea	 rcx, QWORD PTR $T16[rsp]
  00492	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 301  :                         char_to_tstring(m_pBsfc->filter->name).c_str(), qsv_av_err2str(ret).c_str());
; 302  :                     return RGY_ERR_UNKNOWN;

  00497	c7 84 24 88 03
	00 00 ff ff ff
	ff		 mov	 DWORD PTR $T42[rsp], -1
  004a2	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR sps_nal$12[rsp]
  004aa	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  004af	90		 npad	 1
  004b0	48 8d 4c 24 48	 lea	 rcx, QWORD PTR nal_list$11[rsp]
  004b5	e8 00 00 00 00	 call	 ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
  004ba	8b 84 24 88 03
	00 00		 mov	 eax, DWORD PTR $T42[rsp]
  004c1	e9 49 0c 00 00	 jmp	 $LN1@WriteNextF
$LN12@WriteNextF:

; 303  :                 }
; 304  :                 ret = av_bsf_receive_packet(m_pBsfc.get(), &pkt);

  004c6	48 8b 84 24 b0
	06 00 00	 mov	 rax, QWORD PTR this$[rsp]
  004ce	48 05 58 01 00
	00		 add	 rax, 344		; 00000158H
  004d4	48 8b c8	 mov	 rcx, rax
  004d7	e8 00 00 00 00	 call	 ?get@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBAPEAUAVBSFContext@@XZ ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::get
  004dc	48 8d 94 24 c0
	00 00 00	 lea	 rdx, QWORD PTR pkt$13[rsp]
  004e4	48 8b c8	 mov	 rcx, rax
  004e7	e8 00 00 00 00	 call	 av_bsf_receive_packet
  004ec	89 84 24 24 01
	00 00		 mov	 DWORD PTR ret$14[rsp], eax

; 305  :                 if (ret == AVERROR(EAGAIN)) {

  004f3	83 bc 24 24 01
	00 00 f5	 cmp	 DWORD PTR ret$14[rsp], -11
  004fb	75 34		 jne	 SHORT $LN13@WriteNextF

; 306  :                     return RGY_ERR_NONE;

  004fd	c7 84 24 8c 03
	00 00 00 00 00
	00		 mov	 DWORD PTR $T43[rsp], 0
  00508	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR sps_nal$12[rsp]
  00510	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00515	90		 npad	 1
  00516	48 8d 4c 24 48	 lea	 rcx, QWORD PTR nal_list$11[rsp]
  0051b	e8 00 00 00 00	 call	 ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
  00520	8b 84 24 8c 03
	00 00		 mov	 eax, DWORD PTR $T43[rsp]
  00527	e9 e3 0b 00 00	 jmp	 $LN1@WriteNextF
  0052c	e9 2d 01 00 00	 jmp	 $LN14@WriteNextF
$LN13@WriteNextF:

; 307  :                 } else if ((ret < 0 && ret != AVERROR_EOF) || pkt.size < 0) {

  00531	83 bc 24 24 01
	00 00 00	 cmp	 DWORD PTR ret$14[rsp], 0
  00539	7d 0d		 jge	 SHORT $LN17@WriteNextF
  0053b	81 bc 24 24 01
	00 00 bb b0 b9
	df		 cmp	 DWORD PTR ret$14[rsp], -541478725 ; ffffffffdfb9b0bbH
  00546	75 0e		 jne	 SHORT $LN16@WriteNextF
$LN17@WriteNextF:
  00548	83 bc 24 e0 00
	00 00 00	 cmp	 DWORD PTR pkt$13[rsp+32], 0
  00550	0f 8d 08 01 00
	00		 jge	 $LN14@WriteNextF
$LN16@WriteNextF:

; 308  :                     AddMessage(RGY_LOG_ERROR, _T("failed to run %s bitstream filter: %s.\n"),

  00556	8b 94 24 24 01
	00 00		 mov	 edx, DWORD PTR ret$14[rsp]
  0055d	48 8d 8c 24 a0
	01 00 00	 lea	 rcx, QWORD PTR $T18[rsp]
  00565	e8 00 00 00 00	 call	 ?qsv_av_err2str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; qsv_av_err2str
  0056a	48 89 84 24 48
	05 00 00	 mov	 QWORD PTR tv735[rsp], rax
  00572	48 8b 84 24 48
	05 00 00	 mov	 rax, QWORD PTR tv735[rsp]
  0057a	48 89 84 24 50
	05 00 00	 mov	 QWORD PTR tv684[rsp], rax
  00582	48 8b 8c 24 50
	05 00 00	 mov	 rcx, QWORD PTR tv684[rsp]
  0058a	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0058f	48 89 84 24 58
	05 00 00	 mov	 QWORD PTR tv279[rsp], rax
  00597	48 8b 8c 24 b0
	06 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0059f	48 81 c1 58 01
	00 00		 add	 rcx, 344		; 00000158H
  005a6	e8 00 00 00 00	 call	 ??C?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEBAPEAUAVBSFContext@@XZ ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::operator->
  005ab	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  005af	41 b8 03 00 00
	00		 mov	 r8d, 3
  005b5	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  005b8	48 8d 8c 24 78
	01 00 00	 lea	 rcx, QWORD PTR $T17[rsp]
  005c0	e8 00 00 00 00	 call	 ?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z ; char_to_tstring
  005c5	48 89 84 24 60
	05 00 00	 mov	 QWORD PTR tv736[rsp], rax
  005cd	48 8b 84 24 60
	05 00 00	 mov	 rax, QWORD PTR tv736[rsp]
  005d5	48 89 84 24 68
	05 00 00	 mov	 QWORD PTR tv686[rsp], rax
  005dd	48 8b 8c 24 68
	05 00 00	 mov	 rcx, QWORD PTR tv686[rsp]
  005e5	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  005ea	48 8b 8c 24 58
	05 00 00	 mov	 rcx, QWORD PTR tv279[rsp]
  005f2	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  005f7	4c 8b c8	 mov	 r9, rax
  005fa	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG135157
  00601	ba 02 00 00 00	 mov	 edx, 2
  00606	48 8b 8c 24 b0
	06 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0060e	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage
  00613	90		 npad	 1
  00614	48 8d 8c 24 78
	01 00 00	 lea	 rcx, QWORD PTR $T17[rsp]
  0061c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00621	90		 npad	 1
  00622	48 8d 8c 24 a0
	01 00 00	 lea	 rcx, QWORD PTR $T18[rsp]
  0062a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 309  :                         char_to_tstring(m_pBsfc->filter->name).c_str(), qsv_av_err2str(ret).c_str());
; 310  :                     return RGY_ERR_UNKNOWN;

  0062f	c7 84 24 90 03
	00 00 ff ff ff
	ff		 mov	 DWORD PTR $T44[rsp], -1
  0063a	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR sps_nal$12[rsp]
  00642	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00647	90		 npad	 1
  00648	48 8d 4c 24 48	 lea	 rcx, QWORD PTR nal_list$11[rsp]
  0064d	e8 00 00 00 00	 call	 ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
  00652	8b 84 24 90 03
	00 00		 mov	 eax, DWORD PTR $T44[rsp]
  00659	e9 b1 0a 00 00	 jmp	 $LN1@WriteNextF
$LN14@WriteNextF:

; 311  :                 }
; 312  :                 const auto new_data_size = pBitstream->size() + pkt.size - sps_nal->size;

  0065e	48 8b 8c 24 b8
	06 00 00	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  00666	e8 00 00 00 00	 call	 ?size@RGYBitstream@@QEBA_KXZ ; RGYBitstream::size
  0066b	48 63 8c 24 e0
	00 00 00	 movsxd	 rcx, DWORD PTR pkt$13[rsp+32]
  00673	48 03 c1	 add	 rax, rcx
  00676	48 89 84 24 70
	05 00 00	 mov	 QWORD PTR tv300[rsp], rax
  0067e	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR sps_nal$12[rsp]
  00686	e8 00 00 00 00	 call	 ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEAUnal_info@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator->
  0068b	48 8b 8c 24 70
	05 00 00	 mov	 rcx, QWORD PTR tv300[rsp]
  00693	48 2b 48 10	 sub	 rcx, QWORD PTR [rax+16]
  00697	48 8b c1	 mov	 rax, rcx
  0069a	48 89 84 24 c8
	01 00 00	 mov	 QWORD PTR new_data_size$19[rsp], rax

; 313  :                 const auto sps_nal_offset = sps_nal->ptr - pBitstream->data();

  006a2	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR sps_nal$12[rsp]
  006aa	e8 00 00 00 00	 call	 ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEAUnal_info@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator->
  006af	48 89 84 24 78
	05 00 00	 mov	 QWORD PTR tv306[rsp], rax
  006b7	48 8b 8c 24 b8
	06 00 00	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  006bf	e8 00 00 00 00	 call	 ?data@RGYBitstream@@QEBAPEAEXZ ; RGYBitstream::data
  006c4	48 8b 8c 24 78
	05 00 00	 mov	 rcx, QWORD PTR tv306[rsp]
  006cc	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  006cf	48 2b c8	 sub	 rcx, rax
  006d2	48 8b c1	 mov	 rax, rcx
  006d5	48 89 84 24 d0
	01 00 00	 mov	 QWORD PTR sps_nal_offset$20[rsp], rax

; 314  :                 const auto next_nal_orig_offset = sps_nal_offset + sps_nal->size;

  006dd	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR sps_nal$12[rsp]
  006e5	e8 00 00 00 00	 call	 ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEAUnal_info@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator->
  006ea	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  006ee	48 8b 8c 24 d0
	01 00 00	 mov	 rcx, QWORD PTR sps_nal_offset$20[rsp]
  006f6	48 03 c8	 add	 rcx, rax
  006f9	48 8b c1	 mov	 rax, rcx
  006fc	48 89 84 24 d8
	01 00 00	 mov	 QWORD PTR next_nal_orig_offset$21[rsp], rax

; 315  :                 const auto next_nal_new_offset = sps_nal_offset + pkt.size;

  00704	48 63 84 24 e0
	00 00 00	 movsxd	 rax, DWORD PTR pkt$13[rsp+32]
  0070c	48 8b 8c 24 d0
	01 00 00	 mov	 rcx, QWORD PTR sps_nal_offset$20[rsp]
  00714	48 03 c8	 add	 rcx, rax
  00717	48 8b c1	 mov	 rax, rcx
  0071a	48 89 84 24 e0
	01 00 00	 mov	 QWORD PTR next_nal_new_offset$22[rsp], rax

; 316  :                 const auto stream_orig_length = pBitstream->size();

  00722	48 8b 8c 24 b8
	06 00 00	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  0072a	e8 00 00 00 00	 call	 ?size@RGYBitstream@@QEBA_KXZ ; RGYBitstream::size
  0072f	48 89 84 24 e8
	01 00 00	 mov	 QWORD PTR stream_orig_length$23[rsp], rax

; 317  :                 if ((decltype(new_data_size))pBitstream->bufsize() < new_data_size) {

  00737	48 8b 8c 24 b8
	06 00 00	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  0073f	e8 00 00 00 00	 call	 ?bufsize@RGYBitstream@@QEBA_KXZ ; RGYBitstream::bufsize
  00744	48 3b 84 24 c8
	01 00 00	 cmp	 rax, QWORD PTR new_data_size$19[rsp]
  0074c	73 17		 jae	 SHORT $LN18@WriteNextF

; 318  :                     pBitstream->changeSize(new_data_size);

  0074e	48 8b 94 24 c8
	01 00 00	 mov	 rdx, QWORD PTR new_data_size$19[rsp]
  00756	48 8b 8c 24 b8
	06 00 00	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  0075e	e8 00 00 00 00	 call	 ?changeSize@RGYBitstream@@QEAA?AW4RGY_ERR@@_K@Z ; RGYBitstream::changeSize
  00763	eb 26		 jmp	 SHORT $LN19@WriteNextF
$LN18@WriteNextF:

; 319  :                 } else if (pkt.size > (decltype(pkt.size))sps_nal->size) {

  00765	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR sps_nal$12[rsp]
  0076d	e8 00 00 00 00	 call	 ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEAUnal_info@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator->
  00772	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00775	39 84 24 e0 00
	00 00		 cmp	 DWORD PTR pkt$13[rsp+32], eax
  0077c	7e 0d		 jle	 SHORT $LN19@WriteNextF

; 320  :                     pBitstream->trim();

  0077e	48 8b 8c 24 b8
	06 00 00	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  00786	e8 00 00 00 00	 call	 ?trim@RGYBitstream@@QEAAXXZ ; RGYBitstream::trim
$LN19@WriteNextF:

; 321  :                 }
; 322  :                 memmove(pBitstream->data() + next_nal_new_offset, pBitstream->data() + next_nal_orig_offset, stream_orig_length - next_nal_orig_offset);

  0078b	48 8b 84 24 d8
	01 00 00	 mov	 rax, QWORD PTR next_nal_orig_offset$21[rsp]
  00793	48 8b 8c 24 e8
	01 00 00	 mov	 rcx, QWORD PTR stream_orig_length$23[rsp]
  0079b	48 2b c8	 sub	 rcx, rax
  0079e	48 8b c1	 mov	 rax, rcx
  007a1	48 89 84 24 80
	05 00 00	 mov	 QWORD PTR tv362[rsp], rax
  007a9	48 8b 8c 24 b8
	06 00 00	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  007b1	e8 00 00 00 00	 call	 ?data@RGYBitstream@@QEBAPEAEXZ ; RGYBitstream::data
  007b6	48 03 84 24 d8
	01 00 00	 add	 rax, QWORD PTR next_nal_orig_offset$21[rsp]
  007be	48 89 84 24 88
	05 00 00	 mov	 QWORD PTR tv366[rsp], rax
  007c6	48 8b 8c 24 b8
	06 00 00	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  007ce	e8 00 00 00 00	 call	 ?data@RGYBitstream@@QEBAPEAEXZ ; RGYBitstream::data
  007d3	48 03 84 24 e0
	01 00 00	 add	 rax, QWORD PTR next_nal_new_offset$22[rsp]
  007db	48 8b 8c 24 80
	05 00 00	 mov	 rcx, QWORD PTR tv362[rsp]
  007e3	4c 8b c1	 mov	 r8, rcx
  007e6	48 8b 8c 24 88
	05 00 00	 mov	 rcx, QWORD PTR tv366[rsp]
  007ee	48 8b d1	 mov	 rdx, rcx
  007f1	48 8b c8	 mov	 rcx, rax
  007f4	e8 00 00 00 00	 call	 memmove

; 323  :                 memcpy(pBitstream->data() + sps_nal_offset, pkt.data, pkt.size);

  007f9	48 63 84 24 e0
	00 00 00	 movsxd	 rax, DWORD PTR pkt$13[rsp+32]
  00801	48 89 84 24 90
	05 00 00	 mov	 QWORD PTR tv372[rsp], rax
  00809	48 8b 8c 24 b8
	06 00 00	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  00811	e8 00 00 00 00	 call	 ?data@RGYBitstream@@QEBAPEAEXZ ; RGYBitstream::data
  00816	48 03 84 24 d0
	01 00 00	 add	 rax, QWORD PTR sps_nal_offset$20[rsp]
  0081e	48 8b 8c 24 90
	05 00 00	 mov	 rcx, QWORD PTR tv372[rsp]
  00826	4c 8b c1	 mov	 r8, rcx
  00829	48 8b 94 24 d8
	00 00 00	 mov	 rdx, QWORD PTR pkt$13[rsp+24]
  00831	48 8b c8	 mov	 rcx, rax
  00834	e8 00 00 00 00	 call	 memcpy

; 324  :                 av_packet_unref(&pkt);

  00839	48 8d 8c 24 c0
	00 00 00	 lea	 rcx, QWORD PTR pkt$13[rsp]
  00841	e8 00 00 00 00	 call	 av_packet_unref
  00846	90		 npad	 1
$LN11@WriteNextF:

; 325  :             }
; 326  :         }

  00847	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR sps_nal$12[rsp]
  0084f	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00854	90		 npad	 1
  00855	48 8d 4c 24 48	 lea	 rcx, QWORD PTR nal_list$11[rsp]
  0085a	e8 00 00 00 00	 call	 ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
$LN7@WriteNextF:

; 327  : #endif //#if ENABLE_AVSW_READER
; 328  :         if (m_seiNal.size()) {

  0085f	48 8b 84 24 b0
	06 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00867	48 05 38 01 00
	00		 add	 rax, 312		; 00000138H
  0086d	48 8b c8	 mov	 rcx, rax
  00870	e8 00 00 00 00	 call	 ?size@?$vector@EV?$allocator@E@std@@@std@@QEBA_KXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::size
  00875	48 85 c0	 test	 rax, rax
  00878	0f 84 8c 07 00
	00		 je	 $LN21@WriteNextF

; 329  :             const auto nal_list     = parse_nal_unit_hevc(pBitstream->data(), pBitstream->size());

  0087e	48 8b 8c 24 b8
	06 00 00	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  00886	e8 00 00 00 00	 call	 ?size@RGYBitstream@@QEBA_KXZ ; RGYBitstream::size
  0088b	48 89 84 24 98
	05 00 00	 mov	 QWORD PTR tv385[rsp], rax
  00893	48 8b 8c 24 b8
	06 00 00	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  0089b	e8 00 00 00 00	 call	 ?data@RGYBitstream@@QEBAPEAEXZ ; RGYBitstream::data
  008a0	48 8b 8c 24 98
	05 00 00	 mov	 rcx, QWORD PTR tv385[rsp]
  008a8	4c 8b c1	 mov	 r8, rcx
  008ab	48 8b d0	 mov	 rdx, rax
  008ae	48 8d 8c 24 f8
	01 00 00	 lea	 rcx, QWORD PTR nal_list$24[rsp]
  008b6	e8 00 00 00 00	 call	 ?parse_nal_unit_hevc@@YA?AV?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@PEBE_K@Z ; parse_nal_unit_hevc
  008bb	90		 npad	 1

; 330  :             const auto hevc_vps_nal = std::find_if(nal_list.begin(), nal_list.end(), [](nal_info info) { return info.type == NALU_HEVC_VPS; });

  008bc	48 8d 84 24 94
	03 00 00	 lea	 rax, QWORD PTR $T45[rsp]
  008c4	48 8b f8	 mov	 rdi, rax
  008c7	33 c0		 xor	 eax, eax
  008c9	b9 01 00 00 00	 mov	 ecx, 1
  008ce	f3 aa		 rep stosb
  008d0	48 8d 84 24 98
	03 00 00	 lea	 rax, QWORD PTR $T46[rsp]
  008d8	48 89 84 24 b0
	03 00 00	 mov	 QWORD PTR $T47[rsp], rax
  008e0	48 8d 84 24 b8
	03 00 00	 lea	 rax, QWORD PTR $T48[rsp]
  008e8	48 89 84 24 d0
	03 00 00	 mov	 QWORD PTR $T49[rsp], rax
  008f0	48 8b 94 24 b0
	03 00 00	 mov	 rdx, QWORD PTR $T47[rsp]
  008f8	48 8d 8c 24 f8
	01 00 00	 lea	 rcx, QWORD PTR nal_list$24[rsp]
  00900	e8 00 00 00 00	 call	 ?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::end
  00905	48 89 84 24 a0
	05 00 00	 mov	 QWORD PTR tv383[rsp], rax
  0090d	48 8b 84 24 a0
	05 00 00	 mov	 rax, QWORD PTR tv383[rsp]
  00915	48 89 84 24 a8
	05 00 00	 mov	 QWORD PTR tv691[rsp], rax
  0091d	48 8b 94 24 d0
	03 00 00	 mov	 rdx, QWORD PTR $T49[rsp]
  00925	48 8d 8c 24 f8
	01 00 00	 lea	 rcx, QWORD PTR nal_list$24[rsp]
  0092d	e8 00 00 00 00	 call	 ?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::begin
  00932	48 89 84 24 b0
	05 00 00	 mov	 QWORD PTR tv737[rsp], rax
  0093a	48 8b 84 24 b0
	05 00 00	 mov	 rax, QWORD PTR tv737[rsp]
  00942	48 89 84 24 b8
	05 00 00	 mov	 QWORD PTR tv693[rsp], rax
  0094a	44 0f b6 8c 24
	94 03 00 00	 movzx	 r9d, BYTE PTR $T45[rsp]
  00953	4c 8b 84 24 a8
	05 00 00	 mov	 r8, QWORD PTR tv691[rsp]
  0095b	48 8b 94 24 b8
	05 00 00	 mov	 rdx, QWORD PTR tv693[rsp]
  00963	48 8d 8c 24 38
	02 00 00	 lea	 rcx, QWORD PTR hevc_vps_nal$25[rsp]
  0096b	e8 00 00 00 00	 call	 ??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_f0f721445d981f5d1c40edf2de63bc8d>@@@Z ; std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_f0f721445d981f5d1c40edf2de63bc8d> >
  00970	90		 npad	 1

; 331  :             const auto hevc_sps_nal = std::find_if(nal_list.begin(), nal_list.end(), [](nal_info info) { return info.type == NALU_HEVC_SPS; });

  00971	48 8d 84 24 d8
	03 00 00	 lea	 rax, QWORD PTR $T50[rsp]
  00979	48 8b f8	 mov	 rdi, rax
  0097c	33 c0		 xor	 eax, eax
  0097e	b9 01 00 00 00	 mov	 ecx, 1
  00983	f3 aa		 rep stosb
  00985	48 8d 84 24 e0
	03 00 00	 lea	 rax, QWORD PTR $T51[rsp]
  0098d	48 89 84 24 f8
	03 00 00	 mov	 QWORD PTR $T52[rsp], rax
  00995	48 8d 84 24 00
	04 00 00	 lea	 rax, QWORD PTR $T53[rsp]
  0099d	48 89 84 24 18
	04 00 00	 mov	 QWORD PTR $T54[rsp], rax
  009a5	48 8b 94 24 f8
	03 00 00	 mov	 rdx, QWORD PTR $T52[rsp]
  009ad	48 8d 8c 24 f8
	01 00 00	 lea	 rcx, QWORD PTR nal_list$24[rsp]
  009b5	e8 00 00 00 00	 call	 ?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::end
  009ba	48 89 84 24 c0
	05 00 00	 mov	 QWORD PTR tv392[rsp], rax
  009c2	48 8b 84 24 c0
	05 00 00	 mov	 rax, QWORD PTR tv392[rsp]
  009ca	48 89 84 24 c8
	05 00 00	 mov	 QWORD PTR tv696[rsp], rax
  009d2	48 8b 94 24 18
	04 00 00	 mov	 rdx, QWORD PTR $T54[rsp]
  009da	48 8d 8c 24 f8
	01 00 00	 lea	 rcx, QWORD PTR nal_list$24[rsp]
  009e2	e8 00 00 00 00	 call	 ?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::begin
  009e7	48 89 84 24 d0
	05 00 00	 mov	 QWORD PTR tv738[rsp], rax
  009ef	48 8b 84 24 d0
	05 00 00	 mov	 rax, QWORD PTR tv738[rsp]
  009f7	48 89 84 24 d8
	05 00 00	 mov	 QWORD PTR tv698[rsp], rax
  009ff	44 0f b6 8c 24
	d8 03 00 00	 movzx	 r9d, BYTE PTR $T50[rsp]
  00a08	4c 8b 84 24 c8
	05 00 00	 mov	 r8, QWORD PTR tv696[rsp]
  00a10	48 8b 94 24 d8
	05 00 00	 mov	 rdx, QWORD PTR tv698[rsp]
  00a18	48 8d 8c 24 68
	02 00 00	 lea	 rcx, QWORD PTR hevc_sps_nal$26[rsp]
  00a20	e8 00 00 00 00	 call	 ??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_eaa0021af3d5bbad03ad875501c252dc>@@@Z ; std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_eaa0021af3d5bbad03ad875501c252dc> >
  00a25	90		 npad	 1

; 332  :             const auto hevc_pps_nal = std::find_if(nal_list.begin(), nal_list.end(), [](nal_info info) { return info.type == NALU_HEVC_PPS; });

  00a26	48 8d 84 24 20
	04 00 00	 lea	 rax, QWORD PTR $T55[rsp]
  00a2e	48 8b f8	 mov	 rdi, rax
  00a31	33 c0		 xor	 eax, eax
  00a33	b9 01 00 00 00	 mov	 ecx, 1
  00a38	f3 aa		 rep stosb
  00a3a	48 8d 84 24 28
	04 00 00	 lea	 rax, QWORD PTR $T56[rsp]
  00a42	48 89 84 24 40
	04 00 00	 mov	 QWORD PTR $T57[rsp], rax
  00a4a	48 8d 84 24 48
	04 00 00	 lea	 rax, QWORD PTR $T58[rsp]
  00a52	48 89 84 24 60
	04 00 00	 mov	 QWORD PTR $T59[rsp], rax
  00a5a	48 8b 94 24 40
	04 00 00	 mov	 rdx, QWORD PTR $T57[rsp]
  00a62	48 8d 8c 24 f8
	01 00 00	 lea	 rcx, QWORD PTR nal_list$24[rsp]
  00a6a	e8 00 00 00 00	 call	 ?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::end
  00a6f	48 89 84 24 e0
	05 00 00	 mov	 QWORD PTR tv411[rsp], rax
  00a77	48 8b 84 24 e0
	05 00 00	 mov	 rax, QWORD PTR tv411[rsp]
  00a7f	48 89 84 24 e8
	05 00 00	 mov	 QWORD PTR tv701[rsp], rax
  00a87	48 8b 94 24 60
	04 00 00	 mov	 rdx, QWORD PTR $T59[rsp]
  00a8f	48 8d 8c 24 f8
	01 00 00	 lea	 rcx, QWORD PTR nal_list$24[rsp]
  00a97	e8 00 00 00 00	 call	 ?begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::begin
  00a9c	48 89 84 24 f0
	05 00 00	 mov	 QWORD PTR tv739[rsp], rax
  00aa4	48 8b 84 24 f0
	05 00 00	 mov	 rax, QWORD PTR tv739[rsp]
  00aac	48 89 84 24 f8
	05 00 00	 mov	 QWORD PTR tv703[rsp], rax
  00ab4	44 0f b6 8c 24
	20 04 00 00	 movzx	 r9d, BYTE PTR $T55[rsp]
  00abd	4c 8b 84 24 e8
	05 00 00	 mov	 r8, QWORD PTR tv701[rsp]
  00ac5	48 8b 94 24 f8
	05 00 00	 mov	 rdx, QWORD PTR tv703[rsp]
  00acd	48 8d 8c 24 98
	02 00 00	 lea	 rcx, QWORD PTR hevc_pps_nal$27[rsp]
  00ad5	e8 00 00 00 00	 call	 ??$find_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@std@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@0@V10@V10@V<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6>@@@Z ; std::find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >,<lambda_ac4fe3d7eb818dc0bbae2dfda5116da6> >
  00ada	90		 npad	 1

; 333  :             const bool header_check = (nal_list.end() != hevc_vps_nal) && (nal_list.end() != hevc_sps_nal) && (nal_list.end() != hevc_pps_nal);

  00adb	48 8d 94 24 68
	04 00 00	 lea	 rdx, QWORD PTR $T60[rsp]
  00ae3	48 8d 8c 24 f8
	01 00 00	 lea	 rcx, QWORD PTR nal_list$24[rsp]
  00aeb	e8 00 00 00 00	 call	 ?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::end
  00af0	48 89 84 24 00
	06 00 00	 mov	 QWORD PTR tv438[rsp], rax
  00af8	48 8b 84 24 00
	06 00 00	 mov	 rax, QWORD PTR tv438[rsp]
  00b00	48 89 84 24 08
	06 00 00	 mov	 QWORD PTR tv709[rsp], rax
  00b08	8b 84 24 b4 04
	00 00		 mov	 eax, DWORD PTR $T64[rsp]
  00b0f	83 c8 01	 or	 eax, 1
  00b12	89 84 24 b4 04
	00 00		 mov	 DWORD PTR $T64[rsp], eax
  00b19	48 8d 94 24 38
	02 00 00	 lea	 rdx, QWORD PTR hevc_vps_nal$25[rsp]
  00b21	48 8b 8c 24 08
	06 00 00	 mov	 rcx, QWORD PTR tv709[rsp]
  00b29	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator!=
  00b2e	0f b6 c0	 movzx	 eax, al
  00b31	85 c0		 test	 eax, eax
  00b33	0f 84 be 00 00
	00		 je	 $LN28@WriteNextF
  00b39	48 8d 94 24 80
	04 00 00	 lea	 rdx, QWORD PTR $T61[rsp]
  00b41	48 8d 8c 24 f8
	01 00 00	 lea	 rcx, QWORD PTR nal_list$24[rsp]
  00b49	e8 00 00 00 00	 call	 ?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::end
  00b4e	48 89 84 24 10
	06 00 00	 mov	 QWORD PTR tv740[rsp], rax
  00b56	48 8b 84 24 10
	06 00 00	 mov	 rax, QWORD PTR tv740[rsp]
  00b5e	48 89 84 24 18
	06 00 00	 mov	 QWORD PTR tv714[rsp], rax
  00b66	8b 84 24 b4 04
	00 00		 mov	 eax, DWORD PTR $T64[rsp]
  00b6d	83 c8 02	 or	 eax, 2
  00b70	89 84 24 b4 04
	00 00		 mov	 DWORD PTR $T64[rsp], eax
  00b77	48 8d 94 24 68
	02 00 00	 lea	 rdx, QWORD PTR hevc_sps_nal$26[rsp]
  00b7f	48 8b 8c 24 18
	06 00 00	 mov	 rcx, QWORD PTR tv714[rsp]
  00b87	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator!=
  00b8c	0f b6 c0	 movzx	 eax, al
  00b8f	85 c0		 test	 eax, eax
  00b91	74 64		 je	 SHORT $LN28@WriteNextF
  00b93	48 8d 94 24 98
	04 00 00	 lea	 rdx, QWORD PTR $T62[rsp]
  00b9b	48 8d 8c 24 f8
	01 00 00	 lea	 rcx, QWORD PTR nal_list$24[rsp]
  00ba3	e8 00 00 00 00	 call	 ?end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@2@XZ ; std::vector<nal_info,std::allocator<nal_info> >::end
  00ba8	48 89 84 24 20
	06 00 00	 mov	 QWORD PTR tv741[rsp], rax
  00bb0	48 8b 84 24 20
	06 00 00	 mov	 rax, QWORD PTR tv741[rsp]
  00bb8	48 89 84 24 28
	06 00 00	 mov	 QWORD PTR tv719[rsp], rax
  00bc0	8b 84 24 b4 04
	00 00		 mov	 eax, DWORD PTR $T64[rsp]
  00bc7	83 c8 04	 or	 eax, 4
  00bca	89 84 24 b4 04
	00 00		 mov	 DWORD PTR $T64[rsp], eax
  00bd1	48 8d 94 24 98
	02 00 00	 lea	 rdx, QWORD PTR hevc_pps_nal$27[rsp]
  00bd9	48 8b 8c 24 28
	06 00 00	 mov	 rcx, QWORD PTR tv719[rsp]
  00be1	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator!=
  00be6	0f b6 c0	 movzx	 eax, al
  00be9	85 c0		 test	 eax, eax
  00beb	74 0a		 je	 SHORT $LN28@WriteNextF
  00bed	c6 84 24 30 06
	00 00 01	 mov	 BYTE PTR tv503[rsp], 1
  00bf5	eb 08		 jmp	 SHORT $LN29@WriteNextF
$LN28@WriteNextF:
  00bf7	c6 84 24 30 06
	00 00 00	 mov	 BYTE PTR tv503[rsp], 0
$LN29@WriteNextF:
  00bff	0f b6 84 24 30
	06 00 00	 movzx	 eax, BYTE PTR tv503[rsp]
  00c07	88 84 24 b4 02
	00 00		 mov	 BYTE PTR header_check$28[rsp], al
  00c0e	8b 84 24 b4 04
	00 00		 mov	 eax, DWORD PTR $T64[rsp]
  00c15	83 e0 04	 and	 eax, 4
  00c18	85 c0		 test	 eax, eax
  00c1a	74 16		 je	 SHORT $LN57@WriteNextF
  00c1c	83 a4 24 b4 04
	00 00 fb	 and	 DWORD PTR $T64[rsp], -5
  00c24	48 8d 8c 24 98
	04 00 00	 lea	 rcx, QWORD PTR $T62[rsp]
  00c2c	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00c31	90		 npad	 1
$LN57@WriteNextF:
  00c32	8b 84 24 b4 04
	00 00		 mov	 eax, DWORD PTR $T64[rsp]
  00c39	83 e0 02	 and	 eax, 2
  00c3c	85 c0		 test	 eax, eax
  00c3e	74 16		 je	 SHORT $LN58@WriteNextF
  00c40	83 a4 24 b4 04
	00 00 fd	 and	 DWORD PTR $T64[rsp], -3
  00c48	48 8d 8c 24 80
	04 00 00	 lea	 rcx, QWORD PTR $T61[rsp]
  00c50	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00c55	90		 npad	 1
$LN58@WriteNextF:
  00c56	8b 84 24 b4 04
	00 00		 mov	 eax, DWORD PTR $T64[rsp]
  00c5d	83 e0 01	 and	 eax, 1
  00c60	85 c0		 test	 eax, eax
  00c62	74 15		 je	 SHORT $LN59@WriteNextF
  00c64	83 a4 24 b4 04
	00 00 fe	 and	 DWORD PTR $T64[rsp], -2
  00c6c	48 8d 8c 24 68
	04 00 00	 lea	 rcx, QWORD PTR $T60[rsp]
  00c74	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN59@WriteNextF:

; 334  :             if (header_check) {

  00c79	0f b6 84 24 b4
	02 00 00	 movzx	 eax, BYTE PTR header_check$28[rsp]
  00c81	85 c0		 test	 eax, eax
  00c83	0f 84 c7 02 00
	00		 je	 $LN23@WriteNextF

; 335  :                 nBytesWritten  = _fwrite_nolock(hevc_vps_nal->ptr, 1, hevc_vps_nal->size, m_fDest.get());

  00c89	48 8b 84 24 b0
	06 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00c91	48 83 c0 18	 add	 rax, 24
  00c95	48 8b c8	 mov	 rcx, rax
  00c98	e8 00 00 00 00	 call	 ?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ ; std::unique_ptr<_iobuf,fp_deleter>::get
  00c9d	48 89 84 24 38
	06 00 00	 mov	 QWORD PTR tv513[rsp], rax
  00ca5	48 8d 8c 24 38
	02 00 00	 lea	 rcx, QWORD PTR hevc_vps_nal$25[rsp]
  00cad	e8 00 00 00 00	 call	 ??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEBUnal_info@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator->
  00cb2	48 89 84 24 40
	06 00 00	 mov	 QWORD PTR tv516[rsp], rax
  00cba	48 8d 8c 24 38
	02 00 00	 lea	 rcx, QWORD PTR hevc_vps_nal$25[rsp]
  00cc2	e8 00 00 00 00	 call	 ??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEBUnal_info@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator->
  00cc7	48 8b 8c 24 38
	06 00 00	 mov	 rcx, QWORD PTR tv513[rsp]
  00ccf	4c 8b c9	 mov	 r9, rcx
  00cd2	48 8b 8c 24 40
	06 00 00	 mov	 rcx, QWORD PTR tv516[rsp]
  00cda	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  00cde	ba 01 00 00 00	 mov	 edx, 1
  00ce3	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00ce6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__fwrite_nolock
  00cec	48 89 44 24 30	 mov	 QWORD PTR nBytesWritten$[rsp], rax

; 336  :                 nBytesWritten += _fwrite_nolock(hevc_sps_nal->ptr, 1, hevc_sps_nal->size, m_fDest.get());

  00cf1	48 8b 84 24 b0
	06 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00cf9	48 83 c0 18	 add	 rax, 24
  00cfd	48 8b c8	 mov	 rcx, rax
  00d00	e8 00 00 00 00	 call	 ?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ ; std::unique_ptr<_iobuf,fp_deleter>::get
  00d05	48 89 84 24 48
	06 00 00	 mov	 QWORD PTR tv531[rsp], rax
  00d0d	48 8d 8c 24 68
	02 00 00	 lea	 rcx, QWORD PTR hevc_sps_nal$26[rsp]
  00d15	e8 00 00 00 00	 call	 ??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEBUnal_info@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator->
  00d1a	48 89 84 24 50
	06 00 00	 mov	 QWORD PTR tv534[rsp], rax
  00d22	48 8d 8c 24 68
	02 00 00	 lea	 rcx, QWORD PTR hevc_sps_nal$26[rsp]
  00d2a	e8 00 00 00 00	 call	 ??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEBUnal_info@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator->
  00d2f	48 8b 8c 24 48
	06 00 00	 mov	 rcx, QWORD PTR tv531[rsp]
  00d37	4c 8b c9	 mov	 r9, rcx
  00d3a	48 8b 8c 24 50
	06 00 00	 mov	 rcx, QWORD PTR tv534[rsp]
  00d42	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  00d46	ba 01 00 00 00	 mov	 edx, 1
  00d4b	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00d4e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__fwrite_nolock
  00d54	48 8b 4c 24 30	 mov	 rcx, QWORD PTR nBytesWritten$[rsp]
  00d59	48 03 c8	 add	 rcx, rax
  00d5c	48 8b c1	 mov	 rax, rcx
  00d5f	48 89 44 24 30	 mov	 QWORD PTR nBytesWritten$[rsp], rax

; 337  :                 nBytesWritten += _fwrite_nolock(hevc_pps_nal->ptr, 1, hevc_pps_nal->size, m_fDest.get());

  00d64	48 8b 84 24 b0
	06 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00d6c	48 83 c0 18	 add	 rax, 24
  00d70	48 8b c8	 mov	 rcx, rax
  00d73	e8 00 00 00 00	 call	 ?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ ; std::unique_ptr<_iobuf,fp_deleter>::get
  00d78	48 89 84 24 58
	06 00 00	 mov	 QWORD PTR tv550[rsp], rax
  00d80	48 8d 8c 24 98
	02 00 00	 lea	 rcx, QWORD PTR hevc_pps_nal$27[rsp]
  00d88	e8 00 00 00 00	 call	 ??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEBUnal_info@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator->
  00d8d	48 89 84 24 60
	06 00 00	 mov	 QWORD PTR tv553[rsp], rax
  00d95	48 8d 8c 24 98
	02 00 00	 lea	 rcx, QWORD PTR hevc_pps_nal$27[rsp]
  00d9d	e8 00 00 00 00	 call	 ??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEBAPEBUnal_info@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<nal_info> > >::operator->
  00da2	48 8b 8c 24 58
	06 00 00	 mov	 rcx, QWORD PTR tv550[rsp]
  00daa	4c 8b c9	 mov	 r9, rcx
  00dad	48 8b 8c 24 60
	06 00 00	 mov	 rcx, QWORD PTR tv553[rsp]
  00db5	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  00db9	ba 01 00 00 00	 mov	 edx, 1
  00dbe	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00dc1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__fwrite_nolock
  00dc7	48 8b 4c 24 30	 mov	 rcx, QWORD PTR nBytesWritten$[rsp]
  00dcc	48 03 c8	 add	 rcx, rax
  00dcf	48 8b c1	 mov	 rax, rcx
  00dd2	48 89 44 24 30	 mov	 QWORD PTR nBytesWritten$[rsp], rax

; 338  :                 nBytesWritten += _fwrite_nolock(m_seiNal.data(),   1, m_seiNal.size(),    m_fDest.get());

  00dd7	48 8b 84 24 b0
	06 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00ddf	48 83 c0 18	 add	 rax, 24
  00de3	48 8b c8	 mov	 rcx, rax
  00de6	e8 00 00 00 00	 call	 ?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ ; std::unique_ptr<_iobuf,fp_deleter>::get
  00deb	48 89 84 24 68
	06 00 00	 mov	 QWORD PTR tv569[rsp], rax
  00df3	48 8b 8c 24 b0
	06 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00dfb	48 81 c1 38 01
	00 00		 add	 rcx, 312		; 00000138H
  00e02	e8 00 00 00 00	 call	 ?size@?$vector@EV?$allocator@E@std@@@std@@QEBA_KXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::size
  00e07	48 89 84 24 70
	06 00 00	 mov	 QWORD PTR tv573[rsp], rax
  00e0f	48 8b 8c 24 b0
	06 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00e17	48 81 c1 38 01
	00 00		 add	 rcx, 312		; 00000138H
  00e1e	e8 00 00 00 00	 call	 ?data@?$vector@EV?$allocator@E@std@@@std@@QEAAPEAEXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::data
  00e23	48 8b 8c 24 68
	06 00 00	 mov	 rcx, QWORD PTR tv569[rsp]
  00e2b	4c 8b c9	 mov	 r9, rcx
  00e2e	48 8b 8c 24 70
	06 00 00	 mov	 rcx, QWORD PTR tv573[rsp]
  00e36	4c 8b c1	 mov	 r8, rcx
  00e39	ba 01 00 00 00	 mov	 edx, 1
  00e3e	48 8b c8	 mov	 rcx, rax
  00e41	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__fwrite_nolock
  00e47	48 8b 4c 24 30	 mov	 rcx, QWORD PTR nBytesWritten$[rsp]
  00e4c	48 03 c8	 add	 rcx, rax
  00e4f	48 8b c1	 mov	 rax, rcx
  00e52	48 89 44 24 30	 mov	 QWORD PTR nBytesWritten$[rsp], rax

; 339  :                 for (const auto& nal : nal_list) {

  00e57	48 8d 84 24 f8
	01 00 00	 lea	 rax, QWORD PTR nal_list$24[rsp]
  00e5f	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR <range>$L0$29[rsp], rax
  00e67	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR <range>$L0$29[rsp]
  00e6f	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBAPEBUnal_info@@XZ ; std::vector<nal_info,std::allocator<nal_info> >::_Unchecked_begin
  00e74	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR <begin>$L0$30[rsp], rax
  00e7c	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR <range>$L0$29[rsp]
  00e84	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEBAPEBUnal_info@@XZ ; std::vector<nal_info,std::allocator<nal_info> >::_Unchecked_end
  00e89	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR <end>$L0$31[rsp], rax
  00e91	eb 14		 jmp	 SHORT $LN4@WriteNextF
$LN2@WriteNextF:
  00e93	48 8b 84 24 c0
	02 00 00	 mov	 rax, QWORD PTR <begin>$L0$30[rsp]
  00e9b	48 83 c0 18	 add	 rax, 24
  00e9f	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR <begin>$L0$30[rsp], rax
$LN4@WriteNextF:
  00ea7	48 8b 84 24 c8
	02 00 00	 mov	 rax, QWORD PTR <end>$L0$31[rsp]
  00eaf	48 39 84 24 c0
	02 00 00	 cmp	 QWORD PTR <begin>$L0$30[rsp], rax
  00eb7	0f 84 91 00 00
	00		 je	 $LN3@WriteNextF
  00ebd	48 8b 84 24 c0
	02 00 00	 mov	 rax, QWORD PTR <begin>$L0$30[rsp]
  00ec5	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR nal$32[rsp], rax

; 340  :                     if (nal.type != NALU_HEVC_VPS && nal.type != NALU_HEVC_SPS && nal.type != NALU_HEVC_PPS) {

  00ecd	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR nal$32[rsp]
  00ed5	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]
  00ed9	83 f8 20	 cmp	 eax, 32			; 00000020H
  00edc	74 6b		 je	 SHORT $LN25@WriteNextF
  00ede	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR nal$32[rsp]
  00ee6	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]
  00eea	83 f8 21	 cmp	 eax, 33			; 00000021H
  00eed	74 5a		 je	 SHORT $LN25@WriteNextF
  00eef	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR nal$32[rsp]
  00ef7	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]
  00efb	83 f8 22	 cmp	 eax, 34			; 00000022H
  00efe	74 49		 je	 SHORT $LN25@WriteNextF

; 341  :                         nBytesWritten += _fwrite_nolock(nal.ptr, 1, nal.size, m_fDest.get());

  00f00	48 8b 84 24 b0
	06 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00f08	48 83 c0 18	 add	 rax, 24
  00f0c	48 8b c8	 mov	 rcx, rax
  00f0f	e8 00 00 00 00	 call	 ?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ ; std::unique_ptr<_iobuf,fp_deleter>::get
  00f14	4c 8b c8	 mov	 r9, rax
  00f17	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR nal$32[rsp]
  00f1f	4c 8b 40 10	 mov	 r8, QWORD PTR [rax+16]
  00f23	ba 01 00 00 00	 mov	 edx, 1
  00f28	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR nal$32[rsp]
  00f30	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00f33	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__fwrite_nolock
  00f39	48 8b 4c 24 30	 mov	 rcx, QWORD PTR nBytesWritten$[rsp]
  00f3e	48 03 c8	 add	 rcx, rax
  00f41	48 8b c1	 mov	 rax, rcx
  00f44	48 89 44 24 30	 mov	 QWORD PTR nBytesWritten$[rsp], rax
$LN25@WriteNextF:

; 342  :                     }
; 343  :                 }

  00f49	e9 45 ff ff ff	 jmp	 $LN2@WriteNextF
$LN3@WriteNextF:

; 344  :             } else {

  00f4e	eb 67		 jmp	 SHORT $LN24@WriteNextF
$LN23@WriteNextF:

; 345  :                 AddMessage(RGY_LOG_ERROR, _T("Unexpected HEVC header.\n"));

  00f50	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG135167
  00f57	ba 02 00 00 00	 mov	 edx, 2
  00f5c	48 8b 8c 24 b0
	06 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00f64	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage

; 346  :                 return RGY_ERR_UNDEFINED_BEHAVIOR;

  00f69	c7 84 24 b0 04
	00 00 f0 ff ff
	ff		 mov	 DWORD PTR $T63[rsp], -16
  00f74	48 8d 8c 24 98
	02 00 00	 lea	 rcx, QWORD PTR hevc_pps_nal$27[rsp]
  00f7c	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00f81	90		 npad	 1
  00f82	48 8d 8c 24 68
	02 00 00	 lea	 rcx, QWORD PTR hevc_sps_nal$26[rsp]
  00f8a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00f8f	90		 npad	 1
  00f90	48 8d 8c 24 38
	02 00 00	 lea	 rcx, QWORD PTR hevc_vps_nal$25[rsp]
  00f98	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00f9d	90		 npad	 1
  00f9e	48 8d 8c 24 f8
	01 00 00	 lea	 rcx, QWORD PTR nal_list$24[rsp]
  00fa6	e8 00 00 00 00	 call	 ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
  00fab	8b 84 24 b0 04
	00 00		 mov	 eax, DWORD PTR $T63[rsp]
  00fb2	e9 58 01 00 00	 jmp	 $LN1@WriteNextF
$LN24@WriteNextF:

; 347  :             }
; 348  :             m_seiNal.clear();

  00fb7	48 8b 84 24 b0
	06 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00fbf	48 05 38 01 00
	00		 add	 rax, 312		; 00000138H
  00fc5	48 8b c8	 mov	 rcx, rax
  00fc8	e8 00 00 00 00	 call	 ?clear@?$vector@EV?$allocator@E@std@@@std@@QEAAXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::clear
  00fcd	90		 npad	 1

; 349  :         } else {

  00fce	48 8d 8c 24 98
	02 00 00	 lea	 rcx, QWORD PTR hevc_pps_nal$27[rsp]
  00fd6	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00fdb	90		 npad	 1
  00fdc	48 8d 8c 24 68
	02 00 00	 lea	 rcx, QWORD PTR hevc_sps_nal$26[rsp]
  00fe4	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00fe9	90		 npad	 1
  00fea	48 8d 8c 24 38
	02 00 00	 lea	 rcx, QWORD PTR hevc_vps_nal$25[rsp]
  00ff2	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00ff7	90		 npad	 1
  00ff8	48 8d 8c 24 f8
	01 00 00	 lea	 rcx, QWORD PTR nal_list$24[rsp]
  01000	e8 00 00 00 00	 call	 ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
  01005	e9 9b 00 00 00	 jmp	 $LN6@WriteNextF
$LN21@WriteNextF:

; 350  :             nBytesWritten = _fwrite_nolock(pBitstream->data(), 1, pBitstream->size(), m_fDest.get());

  0100a	48 8b 84 24 b0
	06 00 00	 mov	 rax, QWORD PTR this$[rsp]
  01012	48 83 c0 18	 add	 rax, 24
  01016	48 8b c8	 mov	 rcx, rax
  01019	e8 00 00 00 00	 call	 ?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ ; std::unique_ptr<_iobuf,fp_deleter>::get
  0101e	48 89 84 24 78
	06 00 00	 mov	 QWORD PTR tv627[rsp], rax
  01026	48 8b 8c 24 b8
	06 00 00	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  0102e	e8 00 00 00 00	 call	 ?size@RGYBitstream@@QEBA_KXZ ; RGYBitstream::size
  01033	48 89 84 24 80
	06 00 00	 mov	 QWORD PTR tv630[rsp], rax
  0103b	48 8b 8c 24 b8
	06 00 00	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  01043	e8 00 00 00 00	 call	 ?data@RGYBitstream@@QEBAPEAEXZ ; RGYBitstream::data
  01048	48 8b 8c 24 78
	06 00 00	 mov	 rcx, QWORD PTR tv627[rsp]
  01050	4c 8b c9	 mov	 r9, rcx
  01053	48 8b 8c 24 80
	06 00 00	 mov	 rcx, QWORD PTR tv630[rsp]
  0105b	4c 8b c1	 mov	 r8, rcx
  0105e	ba 01 00 00 00	 mov	 edx, 1
  01063	48 8b c8	 mov	 rcx, rax
  01066	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__fwrite_nolock
  0106c	48 89 44 24 30	 mov	 QWORD PTR nBytesWritten$[rsp], rax

; 351  :             WRITE_CHECK(nBytesWritten, pBitstream->size());

  01071	48 8b 8c 24 b8
	06 00 00	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  01079	e8 00 00 00 00	 call	 ?size@RGYBitstream@@QEBA_KXZ ; RGYBitstream::size
  0107e	48 39 44 24 30	 cmp	 QWORD PTR nBytesWritten$[rsp], rax
  01083	74 20		 je	 SHORT $LN6@WriteNextF
  01085	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG135170
  0108c	ba 02 00 00 00	 mov	 edx, 2
  01091	48 8b 8c 24 b0
	06 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  01099	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage
  0109e	b8 f0 ff ff ff	 mov	 eax, -16
  010a3	eb 6a		 jmp	 SHORT $LN1@WriteNextF
$LN6@WriteNextF:

; 352  :         }
; 353  :     }
; 354  : 
; 355  :     m_pEncSatusInfo->SetOutputData(pBitstream->frametype(), pBitstream->size(), 0);

  010a5	48 8b 8c 24 b8
	06 00 00	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  010ad	e8 00 00 00 00	 call	 ?size@RGYBitstream@@QEBA_KXZ ; RGYBitstream::size
  010b2	48 89 84 24 88
	06 00 00	 mov	 QWORD PTR tv656[rsp], rax
  010ba	48 8b 8c 24 b8
	06 00 00	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  010c2	e8 00 00 00 00	 call	 ?frametype@RGYBitstream@@QEBA?AW4RGY_FRAMETYPE@@XZ ; RGYBitstream::frametype
  010c7	89 84 24 90 06
	00 00		 mov	 DWORD PTR tv659[rsp], eax
  010ce	48 8b 8c 24 b0
	06 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  010d6	48 83 c1 08	 add	 rcx, 8
  010da	e8 00 00 00 00	 call	 ??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ ; std::shared_ptr<EncodeStatus>::operator-><EncodeStatus,0>
  010df	45 33 c9	 xor	 r9d, r9d
  010e2	48 8b 8c 24 88
	06 00 00	 mov	 rcx, QWORD PTR tv656[rsp]
  010ea	4c 8b c1	 mov	 r8, rcx
  010ed	8b 8c 24 90 06
	00 00		 mov	 ecx, DWORD PTR tv659[rsp]
  010f4	8b d1		 mov	 edx, ecx
  010f6	48 8b c8	 mov	 rcx, rax
  010f9	e8 00 00 00 00	 call	 ?SetOutputData@EncodeStatus@@QEAAXW4RGY_FRAMETYPE@@_KI@Z ; EncodeStatus::SetOutputData

; 356  :     pBitstream->setSize(0);

  010fe	33 d2		 xor	 edx, edx
  01100	48 8b 8c 24 b8
	06 00 00	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  01108	e8 00 00 00 00	 call	 ?setSize@RGYBitstream@@QEAAX_K@Z ; RGYBitstream::setSize

; 357  : 
; 358  :     return RGY_ERR_NONE;

  0110d	33 c0		 xor	 eax, eax
$LN1@WriteNextF:

; 359  : }

  0110f	48 8b f8	 mov	 rdi, rax
  01112	48 8b cc	 mov	 rcx, rsp
  01115	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z$rtcFrameData
  0111c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  01121	48 8b c7	 mov	 rax, rdi
  01124	48 8b 8c 24 98
	06 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0112c	48 33 cc	 xor	 rcx, rsp
  0112f	e8 00 00 00 00	 call	 __security_check_cookie
  01134	48 81 c4 a0 06
	00 00		 add	 rsp, 1696		; 000006a0H
  0113b	5f		 pop	 rdi
  0113c	c3		 ret	 0
?WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z ENDP ; RGYOutputRaw::WriteNextFrame
_TEXT	ENDS
text$x	SEGMENT
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$0@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 48	 lea	 rcx, QWORD PTR nal_list$11[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$0
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$1@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 8d e0 02
	00 00		 lea	 rcx, QWORD PTR $T33[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$1
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$2@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$2
  00049	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00053	55		 push	 rbp
  00054	57		 push	 rdi
  00055	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00059	48 8b ea	 mov	 rbp, rdx
  0005c	48 8d 8d 00 03
	00 00		 lea	 rcx, QWORD PTR $T34[rbp]
  00063	e8 00 00 00 00	 call	 ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
  00068	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006c	5f		 pop	 rdi
  0006d	5d		 pop	 rbp
  0006e	c3		 ret	 0
?dtor$2@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$2
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$3@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$3
  0006f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00074	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00079	55		 push	 rbp
  0007a	57		 push	 rdi
  0007b	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007f	48 8b ea	 mov	 rbp, rdx
  00082	48 8b 8d 40 03
	00 00		 mov	 rcx, QWORD PTR $T37[rbp]
  00089	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0008e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00092	5f		 pop	 rdi
  00093	5d		 pop	 rbp
  00094	c3		 ret	 0
?dtor$3@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$3
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$4@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$4
  00095	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0009a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009f	55		 push	 rbp
  000a0	57		 push	 rdi
  000a1	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a5	48 8b ea	 mov	 rbp, rdx
  000a8	48 8b 8d 60 03
	00 00		 mov	 rcx, QWORD PTR $T39[rbp]
  000af	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  000b4	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b8	5f		 pop	 rdi
  000b9	5d		 pop	 rbp
  000ba	c3		 ret	 0
?dtor$4@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$4
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$5@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$5
  000bb	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000c0	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000c5	55		 push	 rbp
  000c6	57		 push	 rdi
  000c7	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000cb	48 8b ea	 mov	 rbp, rdx
  000ce	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR sps_nal$12[rbp]
  000d5	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  000da	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000de	5f		 pop	 rdi
  000df	5d		 pop	 rbp
  000e0	c3		 ret	 0
?dtor$5@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$5
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$6@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$6
  000e1	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000e6	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000eb	55		 push	 rbp
  000ec	57		 push	 rdi
  000ed	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000f1	48 8b ea	 mov	 rbp, rdx
  000f4	48 8d 8d 70 03
	00 00		 lea	 rcx, QWORD PTR $T41[rbp]
  000fb	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00100	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00104	5f		 pop	 rdi
  00105	5d		 pop	 rbp
  00106	c3		 ret	 0
?dtor$6@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$6
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$7@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$7
  00107	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0010c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00111	55		 push	 rbp
  00112	57		 push	 rdi
  00113	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00117	48 8b ea	 mov	 rbp, rdx
  0011a	48 8d 8d 50 01
	00 00		 lea	 rcx, QWORD PTR $T16[rbp]
  00121	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00126	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0012a	5f		 pop	 rdi
  0012b	5d		 pop	 rbp
  0012c	c3		 ret	 0
?dtor$7@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$7
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$8@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$8
  0012d	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00132	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00137	55		 push	 rbp
  00138	57		 push	 rdi
  00139	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0013d	48 8b ea	 mov	 rbp, rdx
  00140	48 8d 8d 28 01
	00 00		 lea	 rcx, QWORD PTR $T15[rbp]
  00147	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0014c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00150	5f		 pop	 rdi
  00151	5d		 pop	 rbp
  00152	c3		 ret	 0
?dtor$8@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$8
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$9@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$9
  00153	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00158	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0015d	55		 push	 rbp
  0015e	57		 push	 rdi
  0015f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00163	48 8b ea	 mov	 rbp, rdx
  00166	48 8d 8d a0 01
	00 00		 lea	 rcx, QWORD PTR $T18[rbp]
  0016d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00172	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00176	5f		 pop	 rdi
  00177	5d		 pop	 rbp
  00178	c3		 ret	 0
?dtor$9@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$9
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$10@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$10
  00179	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0017e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00183	55		 push	 rbp
  00184	57		 push	 rdi
  00185	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00189	48 8b ea	 mov	 rbp, rdx
  0018c	48 8d 8d 78 01
	00 00		 lea	 rcx, QWORD PTR $T17[rbp]
  00193	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00198	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0019c	5f		 pop	 rdi
  0019d	5d		 pop	 rbp
  0019e	c3		 ret	 0
?dtor$10@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$10
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$11@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$11
  0019f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001a4	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001a9	55		 push	 rbp
  001aa	57		 push	 rdi
  001ab	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001af	48 8b ea	 mov	 rbp, rdx
  001b2	48 8d 8d f8 01
	00 00		 lea	 rcx, QWORD PTR nal_list$24[rbp]
  001b9	e8 00 00 00 00	 call	 ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
  001be	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001c2	5f		 pop	 rdi
  001c3	5d		 pop	 rbp
  001c4	c3		 ret	 0
?dtor$11@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$11
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$12@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$12
  001c5	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001ca	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001cf	55		 push	 rbp
  001d0	57		 push	 rdi
  001d1	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001d5	48 8b ea	 mov	 rbp, rdx
  001d8	48 8b 8d b0 03
	00 00		 mov	 rcx, QWORD PTR $T47[rbp]
  001df	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  001e4	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001e8	5f		 pop	 rdi
  001e9	5d		 pop	 rbp
  001ea	c3		 ret	 0
?dtor$12@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$12
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$13@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$13
  001eb	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001f0	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001f5	55		 push	 rbp
  001f6	57		 push	 rdi
  001f7	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001fb	48 8b ea	 mov	 rbp, rdx
  001fe	48 8b 8d d0 03
	00 00		 mov	 rcx, QWORD PTR $T49[rbp]
  00205	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0020a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0020e	5f		 pop	 rdi
  0020f	5d		 pop	 rbp
  00210	c3		 ret	 0
?dtor$13@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$13
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$14@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$14
  00211	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00216	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0021b	55		 push	 rbp
  0021c	57		 push	 rdi
  0021d	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00221	48 8b ea	 mov	 rbp, rdx
  00224	48 8d 8d 38 02
	00 00		 lea	 rcx, QWORD PTR hevc_vps_nal$25[rbp]
  0022b	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00230	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00234	5f		 pop	 rdi
  00235	5d		 pop	 rbp
  00236	c3		 ret	 0
?dtor$14@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$14
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$15@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$15
  00237	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0023c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00241	55		 push	 rbp
  00242	57		 push	 rdi
  00243	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00247	48 8b ea	 mov	 rbp, rdx
  0024a	48 8b 8d f8 03
	00 00		 mov	 rcx, QWORD PTR $T52[rbp]
  00251	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00256	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0025a	5f		 pop	 rdi
  0025b	5d		 pop	 rbp
  0025c	c3		 ret	 0
?dtor$15@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$15
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$16@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$16
  0025d	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00262	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00267	55		 push	 rbp
  00268	57		 push	 rdi
  00269	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0026d	48 8b ea	 mov	 rbp, rdx
  00270	48 8b 8d 18 04
	00 00		 mov	 rcx, QWORD PTR $T54[rbp]
  00277	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0027c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00280	5f		 pop	 rdi
  00281	5d		 pop	 rbp
  00282	c3		 ret	 0
?dtor$16@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$16
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$17@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$17
  00283	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00288	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0028d	55		 push	 rbp
  0028e	57		 push	 rdi
  0028f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00293	48 8b ea	 mov	 rbp, rdx
  00296	48 8d 8d 68 02
	00 00		 lea	 rcx, QWORD PTR hevc_sps_nal$26[rbp]
  0029d	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  002a2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002a6	5f		 pop	 rdi
  002a7	5d		 pop	 rbp
  002a8	c3		 ret	 0
?dtor$17@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$17
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$18@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$18
  002a9	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002ae	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002b3	55		 push	 rbp
  002b4	57		 push	 rdi
  002b5	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  002b9	48 8b ea	 mov	 rbp, rdx
  002bc	48 8b 8d 40 04
	00 00		 mov	 rcx, QWORD PTR $T57[rbp]
  002c3	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  002c8	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002cc	5f		 pop	 rdi
  002cd	5d		 pop	 rbp
  002ce	c3		 ret	 0
?dtor$18@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$18
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$19@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$19
  002cf	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002d4	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002d9	55		 push	 rbp
  002da	57		 push	 rdi
  002db	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  002df	48 8b ea	 mov	 rbp, rdx
  002e2	48 8b 8d 60 04
	00 00		 mov	 rcx, QWORD PTR $T59[rbp]
  002e9	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  002ee	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002f2	5f		 pop	 rdi
  002f3	5d		 pop	 rbp
  002f4	c3		 ret	 0
?dtor$19@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$19
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$20@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$20
  002f5	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002fa	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002ff	55		 push	 rbp
  00300	57		 push	 rdi
  00301	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00305	48 8b ea	 mov	 rbp, rdx
  00308	48 8d 8d 98 02
	00 00		 lea	 rcx, QWORD PTR hevc_pps_nal$27[rbp]
  0030f	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00314	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00318	5f		 pop	 rdi
  00319	5d		 pop	 rbp
  0031a	c3		 ret	 0
?dtor$20@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$20
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$21@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$21
  0031b	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00320	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00325	55		 push	 rbp
  00326	57		 push	 rdi
  00327	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0032b	48 8b ea	 mov	 rbp, rdx
  0032e	8b 85 b4 04 00
	00		 mov	 eax, DWORD PTR $T64[rbp]
  00334	83 e0 01	 and	 eax, 1
  00337	85 c0		 test	 eax, eax
  00339	74 13		 je	 SHORT $LN52@dtor$21
  0033b	83 a5 b4 04 00
	00 fe		 and	 DWORD PTR $T64[rbp], -2
  00342	48 8d 8d 68 04
	00 00		 lea	 rcx, QWORD PTR $T60[rbp]
  00349	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN52@dtor$21:
  0034e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00352	5f		 pop	 rdi
  00353	5d		 pop	 rbp
  00354	c3		 ret	 0
?dtor$21@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$21
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$22@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$22
  00355	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0035a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0035f	55		 push	 rbp
  00360	57		 push	 rdi
  00361	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00365	48 8b ea	 mov	 rbp, rdx
  00368	8b 85 b4 04 00
	00		 mov	 eax, DWORD PTR $T64[rbp]
  0036e	83 e0 02	 and	 eax, 2
  00371	85 c0		 test	 eax, eax
  00373	74 13		 je	 SHORT $LN54@dtor$22
  00375	83 a5 b4 04 00
	00 fd		 and	 DWORD PTR $T64[rbp], -3
  0037c	48 8d 8d 80 04
	00 00		 lea	 rcx, QWORD PTR $T61[rbp]
  00383	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN54@dtor$22:
  00388	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0038c	5f		 pop	 rdi
  0038d	5d		 pop	 rbp
  0038e	c3		 ret	 0
?dtor$22@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$22
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$23@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$23
  0038f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00394	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00399	55		 push	 rbp
  0039a	57		 push	 rdi
  0039b	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0039f	48 8b ea	 mov	 rbp, rdx
  003a2	8b 85 b4 04 00
	00		 mov	 eax, DWORD PTR $T64[rbp]
  003a8	83 e0 04	 and	 eax, 4
  003ab	85 c0		 test	 eax, eax
  003ad	74 13		 je	 SHORT $LN56@dtor$23
  003af	83 a5 b4 04 00
	00 fb		 and	 DWORD PTR $T64[rbp], -5
  003b6	48 8d 8d 98 04
	00 00		 lea	 rcx, QWORD PTR $T62[rbp]
  003bd	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN56@dtor$23:
  003c2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  003c6	5f		 pop	 rdi
  003c7	5d		 pop	 rbp
  003c8	c3		 ret	 0
?dtor$23@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$23
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$0@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 48	 lea	 rcx, QWORD PTR nal_list$11[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$1@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 8d e0 02
	00 00		 lea	 rcx, QWORD PTR $T33[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$2@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$2
  00049	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00053	55		 push	 rbp
  00054	57		 push	 rdi
  00055	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00059	48 8b ea	 mov	 rbp, rdx
  0005c	48 8d 8d 00 03
	00 00		 lea	 rcx, QWORD PTR $T34[rbp]
  00063	e8 00 00 00 00	 call	 ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
  00068	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006c	5f		 pop	 rdi
  0006d	5d		 pop	 rbp
  0006e	c3		 ret	 0
?dtor$2@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$3@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$3
  0006f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00074	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00079	55		 push	 rbp
  0007a	57		 push	 rdi
  0007b	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007f	48 8b ea	 mov	 rbp, rdx
  00082	48 8b 8d 40 03
	00 00		 mov	 rcx, QWORD PTR $T37[rbp]
  00089	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0008e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00092	5f		 pop	 rdi
  00093	5d		 pop	 rbp
  00094	c3		 ret	 0
?dtor$3@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$4@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$4
  00095	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0009a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009f	55		 push	 rbp
  000a0	57		 push	 rdi
  000a1	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a5	48 8b ea	 mov	 rbp, rdx
  000a8	48 8b 8d 60 03
	00 00		 mov	 rcx, QWORD PTR $T39[rbp]
  000af	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  000b4	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b8	5f		 pop	 rdi
  000b9	5d		 pop	 rbp
  000ba	c3		 ret	 0
?dtor$4@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$5@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$5
  000bb	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000c0	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000c5	55		 push	 rbp
  000c6	57		 push	 rdi
  000c7	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000cb	48 8b ea	 mov	 rbp, rdx
  000ce	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR sps_nal$12[rbp]
  000d5	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  000da	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000de	5f		 pop	 rdi
  000df	5d		 pop	 rbp
  000e0	c3		 ret	 0
?dtor$5@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$6@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$6
  000e1	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000e6	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000eb	55		 push	 rbp
  000ec	57		 push	 rdi
  000ed	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000f1	48 8b ea	 mov	 rbp, rdx
  000f4	48 8d 8d 70 03
	00 00		 lea	 rcx, QWORD PTR $T41[rbp]
  000fb	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00100	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00104	5f		 pop	 rdi
  00105	5d		 pop	 rbp
  00106	c3		 ret	 0
?dtor$6@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$7@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$7
  00107	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0010c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00111	55		 push	 rbp
  00112	57		 push	 rdi
  00113	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00117	48 8b ea	 mov	 rbp, rdx
  0011a	48 8d 8d 50 01
	00 00		 lea	 rcx, QWORD PTR $T16[rbp]
  00121	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00126	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0012a	5f		 pop	 rdi
  0012b	5d		 pop	 rbp
  0012c	c3		 ret	 0
?dtor$7@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$8@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$8
  0012d	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00132	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00137	55		 push	 rbp
  00138	57		 push	 rdi
  00139	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0013d	48 8b ea	 mov	 rbp, rdx
  00140	48 8d 8d 28 01
	00 00		 lea	 rcx, QWORD PTR $T15[rbp]
  00147	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0014c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00150	5f		 pop	 rdi
  00151	5d		 pop	 rbp
  00152	c3		 ret	 0
?dtor$8@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$9@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$9
  00153	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00158	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0015d	55		 push	 rbp
  0015e	57		 push	 rdi
  0015f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00163	48 8b ea	 mov	 rbp, rdx
  00166	48 8d 8d a0 01
	00 00		 lea	 rcx, QWORD PTR $T18[rbp]
  0016d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00172	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00176	5f		 pop	 rdi
  00177	5d		 pop	 rbp
  00178	c3		 ret	 0
?dtor$9@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$10@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$10
  00179	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0017e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00183	55		 push	 rbp
  00184	57		 push	 rdi
  00185	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00189	48 8b ea	 mov	 rbp, rdx
  0018c	48 8d 8d 78 01
	00 00		 lea	 rcx, QWORD PTR $T17[rbp]
  00193	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00198	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0019c	5f		 pop	 rdi
  0019d	5d		 pop	 rbp
  0019e	c3		 ret	 0
?dtor$10@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$11@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$11
  0019f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001a4	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001a9	55		 push	 rbp
  001aa	57		 push	 rdi
  001ab	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001af	48 8b ea	 mov	 rbp, rdx
  001b2	48 8d 8d f8 01
	00 00		 lea	 rcx, QWORD PTR nal_list$24[rbp]
  001b9	e8 00 00 00 00	 call	 ??1?$vector@Unal_info@@V?$allocator@Unal_info@@@std@@@std@@QEAA@XZ ; std::vector<nal_info,std::allocator<nal_info> >::~vector<nal_info,std::allocator<nal_info> >
  001be	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001c2	5f		 pop	 rdi
  001c3	5d		 pop	 rbp
  001c4	c3		 ret	 0
?dtor$11@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$11
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$12@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$12
  001c5	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001ca	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001cf	55		 push	 rbp
  001d0	57		 push	 rdi
  001d1	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001d5	48 8b ea	 mov	 rbp, rdx
  001d8	48 8b 8d b0 03
	00 00		 mov	 rcx, QWORD PTR $T47[rbp]
  001df	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  001e4	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001e8	5f		 pop	 rdi
  001e9	5d		 pop	 rbp
  001ea	c3		 ret	 0
?dtor$12@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$12
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$13@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$13
  001eb	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001f0	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001f5	55		 push	 rbp
  001f6	57		 push	 rdi
  001f7	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001fb	48 8b ea	 mov	 rbp, rdx
  001fe	48 8b 8d d0 03
	00 00		 mov	 rcx, QWORD PTR $T49[rbp]
  00205	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0020a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0020e	5f		 pop	 rdi
  0020f	5d		 pop	 rbp
  00210	c3		 ret	 0
?dtor$13@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$13
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$14@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$14
  00211	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00216	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0021b	55		 push	 rbp
  0021c	57		 push	 rdi
  0021d	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00221	48 8b ea	 mov	 rbp, rdx
  00224	48 8d 8d 38 02
	00 00		 lea	 rcx, QWORD PTR hevc_vps_nal$25[rbp]
  0022b	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00230	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00234	5f		 pop	 rdi
  00235	5d		 pop	 rbp
  00236	c3		 ret	 0
?dtor$14@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$14
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$15@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$15
  00237	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0023c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00241	55		 push	 rbp
  00242	57		 push	 rdi
  00243	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00247	48 8b ea	 mov	 rbp, rdx
  0024a	48 8b 8d f8 03
	00 00		 mov	 rcx, QWORD PTR $T52[rbp]
  00251	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00256	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0025a	5f		 pop	 rdi
  0025b	5d		 pop	 rbp
  0025c	c3		 ret	 0
?dtor$15@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$15
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$16@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$16
  0025d	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00262	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00267	55		 push	 rbp
  00268	57		 push	 rdi
  00269	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0026d	48 8b ea	 mov	 rbp, rdx
  00270	48 8b 8d 18 04
	00 00		 mov	 rcx, QWORD PTR $T54[rbp]
  00277	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  0027c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00280	5f		 pop	 rdi
  00281	5d		 pop	 rbp
  00282	c3		 ret	 0
?dtor$16@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$16
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$17@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$17
  00283	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00288	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0028d	55		 push	 rbp
  0028e	57		 push	 rdi
  0028f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00293	48 8b ea	 mov	 rbp, rdx
  00296	48 8d 8d 68 02
	00 00		 lea	 rcx, QWORD PTR hevc_sps_nal$26[rbp]
  0029d	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  002a2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002a6	5f		 pop	 rdi
  002a7	5d		 pop	 rbp
  002a8	c3		 ret	 0
?dtor$17@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$17
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$18@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$18
  002a9	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002ae	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002b3	55		 push	 rbp
  002b4	57		 push	 rdi
  002b5	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  002b9	48 8b ea	 mov	 rbp, rdx
  002bc	48 8b 8d 40 04
	00 00		 mov	 rcx, QWORD PTR $T57[rbp]
  002c3	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  002c8	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002cc	5f		 pop	 rdi
  002cd	5d		 pop	 rbp
  002ce	c3		 ret	 0
?dtor$18@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$18
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$19@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$19
  002cf	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002d4	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002d9	55		 push	 rbp
  002da	57		 push	 rdi
  002db	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  002df	48 8b ea	 mov	 rbp, rdx
  002e2	48 8b 8d 60 04
	00 00		 mov	 rcx, QWORD PTR $T59[rbp]
  002e9	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  002ee	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002f2	5f		 pop	 rdi
  002f3	5d		 pop	 rbp
  002f4	c3		 ret	 0
?dtor$19@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$19
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$20@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$20
  002f5	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002fa	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002ff	55		 push	 rbp
  00300	57		 push	 rdi
  00301	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00305	48 8b ea	 mov	 rbp, rdx
  00308	48 8d 8d 98 02
	00 00		 lea	 rcx, QWORD PTR hevc_pps_nal$27[rbp]
  0030f	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
  00314	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00318	5f		 pop	 rdi
  00319	5d		 pop	 rbp
  0031a	c3		 ret	 0
?dtor$20@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$20
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$21@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$21
  0031b	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00320	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00325	55		 push	 rbp
  00326	57		 push	 rdi
  00327	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0032b	48 8b ea	 mov	 rbp, rdx
  0032e	8b 85 b4 04 00
	00		 mov	 eax, DWORD PTR $T64[rbp]
  00334	83 e0 01	 and	 eax, 1
  00337	85 c0		 test	 eax, eax
  00339	74 13		 je	 SHORT $LN52@dtor$21
  0033b	83 a5 b4 04 00
	00 fe		 and	 DWORD PTR $T64[rbp], -2
  00342	48 8d 8d 68 04
	00 00		 lea	 rcx, QWORD PTR $T60[rbp]
  00349	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN52@dtor$21:
  0034e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00352	5f		 pop	 rdi
  00353	5d		 pop	 rbp
  00354	c3		 ret	 0
?dtor$21@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$21
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$22@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$22
  00355	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0035a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0035f	55		 push	 rbp
  00360	57		 push	 rdi
  00361	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00365	48 8b ea	 mov	 rbp, rdx
  00368	8b 85 b4 04 00
	00		 mov	 eax, DWORD PTR $T64[rbp]
  0036e	83 e0 02	 and	 eax, 2
  00371	85 c0		 test	 eax, eax
  00373	74 13		 je	 SHORT $LN54@dtor$22
  00375	83 a5 b4 04 00
	00 fd		 and	 DWORD PTR $T64[rbp], -3
  0037c	48 8d 8d 80 04
	00 00		 lea	 rcx, QWORD PTR $T61[rbp]
  00383	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN54@dtor$22:
  00388	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0038c	5f		 pop	 rdi
  0038d	5d		 pop	 rbp
  0038e	c3		 ret	 0
?dtor$22@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$22
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
nBytesWritten$ = 48
nal_type$10 = 56
nal_list$11 = 72
sps_nal$12 = 136
pkt$13 = 192
ret$14 = 292
$T15 = 296
$T16 = 336
$T17 = 376
$T18 = 416
new_data_size$19 = 456
sps_nal_offset$20 = 464
next_nal_orig_offset$21 = 472
next_nal_new_offset$22 = 480
stream_orig_length$23 = 488
nal_list$24 = 504
hevc_vps_nal$25 = 568
hevc_sps_nal$26 = 616
hevc_pps_nal$27 = 664
header_check$28 = 692
<range>$L0$29 = 696
<begin>$L0$30 = 704
<end>$L0$31 = 712
nal$32 = 720
$T33 = 736
$T34 = 768
$T35 = 800
$T36 = 808
$T37 = 832
$T38 = 840
$T39 = 864
$T40 = 872
$T41 = 880
$T42 = 904
$T43 = 908
$T44 = 912
$T45 = 916
$T46 = 920
$T47 = 944
$T48 = 952
$T49 = 976
$T50 = 984
$T51 = 992
$T52 = 1016
$T53 = 1024
$T54 = 1048
$T55 = 1056
$T56 = 1064
$T57 = 1088
$T58 = 1096
$T59 = 1120
$T60 = 1128
$T61 = 1152
$T62 = 1176
$T63 = 1200
$T64 = 1204
tv130 = 1208
tv85 = 1216
tv665 = 1224
tv149 = 1232
tv730 = 1240
tv667 = 1248
tv731 = 1256
tv669 = 1264
tv732 = 1272
tv671 = 1280
tv146 = 1288
tv674 = 1296
tv214 = 1304
tv733 = 1312
tv676 = 1320
tv240 = 1328
tv734 = 1336
tv678 = 1344
tv735 = 1352
tv684 = 1360
tv279 = 1368
tv736 = 1376
tv686 = 1384
tv300 = 1392
tv306 = 1400
tv362 = 1408
tv366 = 1416
tv372 = 1424
tv385 = 1432
tv383 = 1440
tv691 = 1448
tv737 = 1456
tv693 = 1464
tv392 = 1472
tv696 = 1480
tv738 = 1488
tv698 = 1496
tv411 = 1504
tv701 = 1512
tv739 = 1520
tv703 = 1528
tv438 = 1536
tv709 = 1544
tv740 = 1552
tv714 = 1560
tv741 = 1568
tv719 = 1576
tv503 = 1584
tv513 = 1592
tv516 = 1600
tv531 = 1608
tv534 = 1616
tv550 = 1624
tv553 = 1632
tv569 = 1640
tv573 = 1648
tv627 = 1656
tv630 = 1664
tv656 = 1672
tv659 = 1680
__$ArrayPad$ = 1688
this$ = 1712
pBitstream$ = 1720
?dtor$23@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA PROC ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$23
  0038f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00394	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00399	55		 push	 rbp
  0039a	57		 push	 rdi
  0039b	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0039f	48 8b ea	 mov	 rbp, rdx
  003a2	8b 85 b4 04 00
	00		 mov	 eax, DWORD PTR $T64[rbp]
  003a8	83 e0 04	 and	 eax, 4
  003ab	85 c0		 test	 eax, eax
  003ad	74 13		 je	 SHORT $LN56@dtor$23
  003af	83 a5 b4 04 00
	00 fb		 and	 DWORD PTR $T64[rbp], -5
  003b6	48 8d 8d 98 04
	00 00		 lea	 rcx, QWORD PTR $T62[rbp]
  003bd	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Unal_info@@@std@@@std@@@std@@QEAA@XZ
$LN56@dtor$23:
  003c2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  003c6	5f		 pop	 rdi
  003c7	5d		 pop	 rbp
  003c8	c3		 ret	 0
?dtor$23@?0??WriteNextFrame@RGYOutputRaw@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z@4HA ENDP ; `RGYOutputRaw::WriteNextFrame'::`1'::dtor$23
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
_TEXT	SEGMENT
this$ = 48
??1RGYOutputRaw@@UEAA@XZ PROC				; RGYOutputRaw::~RGYOutputRaw

; 114  : RGYOutputRaw::~RGYOutputRaw() {

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7RGYOutputRaw@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 115  : #if ENABLE_AVSW_READER
; 116  :     m_pBsfc.reset();

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 05 58 01 00
	00		 add	 rax, 344		; 00000158H
  00038	33 d2		 xor	 edx, edx
  0003a	48 8b c8	 mov	 rcx, rax
  0003d	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAAXPEAUAVBSFContext@@@Z ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::reset
  00042	90		 npad	 1

; 117  : #endif //#if ENABLE_AVSW_READER
; 118  : }

  00043	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 05 58 01 00
	00		 add	 rax, 344		; 00000158H
  0004e	48 8b c8	 mov	 rcx, rax
  00051	e8 00 00 00 00	 call	 ??1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::~unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >
  00056	90		 npad	 1
  00057	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005c	48 05 38 01 00
	00		 add	 rax, 312		; 00000138H
  00062	48 8b c8	 mov	 rcx, rax
  00065	e8 00 00 00 00	 call	 ??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
  0006a	90		 npad	 1
  0006b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00070	e8 00 00 00 00	 call	 ??1RGYOutput@@UEAA@XZ	; RGYOutput::~RGYOutput
  00075	90		 npad	 1
  00076	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007a	5f		 pop	 rdi
  0007b	c3		 ret	 0
??1RGYOutputRaw@@UEAA@XZ ENDP				; RGYOutputRaw::~RGYOutputRaw
_TEXT	ENDS
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1RGYOutputRaw@@UEAA@XZ@4HA PROC		; `RGYOutputRaw::~RGYOutputRaw'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1RGYOutput@@UEAA@XZ	; RGYOutput::~RGYOutput
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1RGYOutputRaw@@UEAA@XZ@4HA ENDP		; `RGYOutputRaw::~RGYOutputRaw'::`1'::dtor$0
this$ = 48
?dtor$1@?0???1RGYOutputRaw@@UEAA@XZ@4HA PROC		; `RGYOutputRaw::~RGYOutputRaw'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003a	48 81 c1 38 01
	00 00		 add	 rcx, 312		; 00000138H
  00041	e8 00 00 00 00	 call	 ??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
  00046	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004a	5f		 pop	 rdi
  0004b	5d		 pop	 rbp
  0004c	c3		 ret	 0
?dtor$1@?0???1RGYOutputRaw@@UEAA@XZ@4HA ENDP		; `RGYOutputRaw::~RGYOutputRaw'::`1'::dtor$1
this$ = 48
?dtor$2@?0???1RGYOutputRaw@@UEAA@XZ@4HA PROC		; `RGYOutputRaw::~RGYOutputRaw'::`1'::dtor$2
  0004d	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00052	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00057	55		 push	 rbp
  00058	57		 push	 rdi
  00059	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005d	48 8b ea	 mov	 rbp, rdx
  00060	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00064	48 81 c1 58 01
	00 00		 add	 rcx, 344		; 00000158H
  0006b	e8 00 00 00 00	 call	 ??1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::~unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >
  00070	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00074	5f		 pop	 rdi
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
?dtor$2@?0???1RGYOutputRaw@@UEAA@XZ@4HA ENDP		; `RGYOutputRaw::~RGYOutputRaw'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1RGYOutputRaw@@UEAA@XZ@4HA PROC		; `RGYOutputRaw::~RGYOutputRaw'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1RGYOutput@@UEAA@XZ	; RGYOutput::~RGYOutput
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1RGYOutputRaw@@UEAA@XZ@4HA ENDP		; `RGYOutputRaw::~RGYOutputRaw'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1RGYOutputRaw@@UEAA@XZ@4HA PROC		; `RGYOutputRaw::~RGYOutputRaw'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003a	48 81 c1 38 01
	00 00		 add	 rcx, 312		; 00000138H
  00041	e8 00 00 00 00	 call	 ??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
  00046	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004a	5f		 pop	 rdi
  0004b	5d		 pop	 rbp
  0004c	c3		 ret	 0
?dtor$1@?0???1RGYOutputRaw@@UEAA@XZ@4HA ENDP		; `RGYOutputRaw::~RGYOutputRaw'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$2@?0???1RGYOutputRaw@@UEAA@XZ@4HA PROC		; `RGYOutputRaw::~RGYOutputRaw'::`1'::dtor$2
  0004d	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00052	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00057	55		 push	 rbp
  00058	57		 push	 rdi
  00059	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005d	48 8b ea	 mov	 rbp, rdx
  00060	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00064	48 81 c1 58 01
	00 00		 add	 rcx, 344		; 00000158H
  0006b	e8 00 00 00 00	 call	 ??1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::~unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >
  00070	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00074	5f		 pop	 rdi
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
?dtor$2@?0???1RGYOutputRaw@@UEAA@XZ@4HA ENDP		; `RGYOutputRaw::~RGYOutputRaw'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
_TEXT	SEGMENT
this$ = 48
??0RGYOutputRaw@@QEAA@XZ PROC				; RGYOutputRaw::RGYOutputRaw

; 109  : {

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0RGYOutput@@QEAA@XZ	; RGYOutput::RGYOutput
  00028	90		 npad	 1
  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7RGYOutputRaw@@6B@
  00035	48 89 08	 mov	 QWORD PTR [rax], rcx

; 105  :     m_seiNal()

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 05 38 01 00
	00		 add	 rax, 312		; 00000138H
  00043	48 8b c8	 mov	 rcx, rax
  00046	e8 00 00 00 00	 call	 ??0?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >
  0004b	90		 npad	 1

; 106  : #if ENABLE_AVSW_READER
; 107  :     , m_pBsfc()

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00051	48 05 58 01 00
	00		 add	 rax, 344		; 00000158H
  00057	48 8b c8	 mov	 rcx, rax
  0005a	e8 00 00 00 00	 call	 ??$?0U?$RGYAVDeleter@UAVBSFContext@@@@$0A@@?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> ><RGYAVDeleter<AVBSFContext>,0>
  0005f	90		 npad	 1

; 110  :     m_strWriterName = _T("bitstream");

  00060	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00065	48 83 c0 30	 add	 rax, 48			; 00000030H
  00069	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG133764
  00070	48 8b c8	 mov	 rcx, rax
  00073	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

; 111  :     m_OutType = OUT_TYPE_BITSTREAM;

  00078	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0007d	c7 40 24 01 00
	00 00		 mov	 DWORD PTR [rax+36], 1

; 112  : }

  00084	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00089	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0008d	5f		 pop	 rdi
  0008e	c3		 ret	 0
??0RGYOutputRaw@@QEAA@XZ ENDP				; RGYOutputRaw::RGYOutputRaw
_TEXT	ENDS
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0RGYOutputRaw@@QEAA@XZ@4HA PROC		; `RGYOutputRaw::RGYOutputRaw'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1RGYOutput@@UEAA@XZ	; RGYOutput::~RGYOutput
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0RGYOutputRaw@@QEAA@XZ@4HA ENDP		; `RGYOutputRaw::RGYOutputRaw'::`1'::dtor$0
this$ = 48
?dtor$1@?0???0RGYOutputRaw@@QEAA@XZ@4HA PROC		; `RGYOutputRaw::RGYOutputRaw'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003a	48 81 c1 38 01
	00 00		 add	 rcx, 312		; 00000138H
  00041	e8 00 00 00 00	 call	 ??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
  00046	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004a	5f		 pop	 rdi
  0004b	5d		 pop	 rbp
  0004c	c3		 ret	 0
?dtor$1@?0???0RGYOutputRaw@@QEAA@XZ@4HA ENDP		; `RGYOutputRaw::RGYOutputRaw'::`1'::dtor$1
this$ = 48
?dtor$2@?0???0RGYOutputRaw@@QEAA@XZ@4HA PROC		; `RGYOutputRaw::RGYOutputRaw'::`1'::dtor$2
  0004d	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00052	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00057	55		 push	 rbp
  00058	57		 push	 rdi
  00059	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005d	48 8b ea	 mov	 rbp, rdx
  00060	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00064	48 81 c1 58 01
	00 00		 add	 rcx, 344		; 00000158H
  0006b	e8 00 00 00 00	 call	 ??1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::~unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >
  00070	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00074	5f		 pop	 rdi
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
?dtor$2@?0???0RGYOutputRaw@@QEAA@XZ@4HA ENDP		; `RGYOutputRaw::RGYOutputRaw'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0RGYOutputRaw@@QEAA@XZ@4HA PROC		; `RGYOutputRaw::RGYOutputRaw'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1RGYOutput@@UEAA@XZ	; RGYOutput::~RGYOutput
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0RGYOutputRaw@@QEAA@XZ@4HA ENDP		; `RGYOutputRaw::RGYOutputRaw'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$1@?0???0RGYOutputRaw@@QEAA@XZ@4HA PROC		; `RGYOutputRaw::RGYOutputRaw'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003a	48 81 c1 38 01
	00 00		 add	 rcx, 312		; 00000138H
  00041	e8 00 00 00 00	 call	 ??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
  00046	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004a	5f		 pop	 rdi
  0004b	5d		 pop	 rbp
  0004c	c3		 ret	 0
?dtor$1@?0???0RGYOutputRaw@@QEAA@XZ@4HA ENDP		; `RGYOutputRaw::RGYOutputRaw'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$2@?0???0RGYOutputRaw@@QEAA@XZ@4HA PROC		; `RGYOutputRaw::RGYOutputRaw'::`1'::dtor$2
  0004d	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00052	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00057	55		 push	 rbp
  00058	57		 push	 rdi
  00059	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005d	48 8b ea	 mov	 rbp, rdx
  00060	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00064	48 81 c1 58 01
	00 00		 add	 rcx, 344		; 00000158H
  0006b	e8 00 00 00 00	 call	 ??1?$unique_ptr@UAVBSFContext@@U?$RGYAVDeleter@UAVBSFContext@@@@@std@@QEAA@XZ ; std::unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >::~unique_ptr<AVBSFContext,RGYAVDeleter<AVBSFContext> >
  00070	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00074	5f		 pop	 rdi
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
?dtor$2@?0???0RGYOutputRaw@@QEAA@XZ@4HA ENDP		; `RGYOutputRaw::RGYOutputRaw'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEBAAEBV?$allocator@E@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEBAAEBV?$allocator@E@2@XZ PROC ; std::_Compressed_pair<std::allocator<unsigned char>,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEBAAEBV?$allocator@E@2@XZ ENDP ; std::_Compressed_pair<std::allocator<unsigned char>,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEAAAEAV?$allocator@E@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEAAAEAV?$allocator@E@2@XZ PROC ; std::_Compressed_pair<std::allocator<unsigned char>,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEAAAEAV?$allocator@E@2@XZ ENDP ; std::_Compressed_pair<std::allocator<unsigned char>,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@E@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@E@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<unsigned char> >::_Vector_val<std::_Simple_types<unsigned char> >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@E@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<unsigned char> >::_Vector_val<std::_Simple_types<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEBAAEBV?$allocator@E@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEBAAEBV?$allocator@E@2@XZ PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1693 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEBAAEBV?$allocator@E@2@XZ ; std::_Compressed_pair<std::allocator<unsigned char>,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_first

; 1694 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEBAAEBV?$allocator@E@2@XZ ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEAAAEAV?$allocator@E@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEAAAEAV?$allocator@E@2@XZ PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEAAAEAV?$allocator@E@2@XZ ; std::_Compressed_pair<std::allocator<unsigned char>,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEAAAEAV?$allocator@E@2@XZ ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@EV?$allocator@E@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@EV?$allocator@E@std@@@std@@CAXXZ PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 1661 :         _Xlength_error("vector<T> too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlength@?$vector@EV?$allocator@E@std@@@std@@CAXXZ ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv81 = 64
this$ = 96
?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	74 7b		 je	 SHORT $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  00068	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006d	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00070	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00075	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0007d	e8 00 00 00 00	 call	 ?_Destroy@?$vector@EV?$allocator@E@std@@@std@@AEAAXPEAE0@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Destroy
  00082	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00083	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00088	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0008d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 2b c1	 sub	 rax, rcx
  00096	48 89 44 24 40	 mov	 QWORD PTR tv81[rsp], rax
  0009b	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000a0	e8 00 00 00 00	 call	 ?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEAAAEAV?$allocator@E@2@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Getal
  000a5	90		 npad	 1
  000a6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv81[rsp]
  000ab	4c 8b c1	 mov	 r8, rcx
  000ae	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000b3	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000b6	48 8b c8	 mov	 rcx, rax
  000b9	e8 00 00 00 00	 call	 ?deallocate@?$allocator@E@std@@QEAAXQEAE_K@Z ; std::allocator<unsigned char>::deallocate
  000be	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000bf	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000c4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000cb	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000d0	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000d7	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000dc	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000e3	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000e7	5f		 pop	 rdi
  000e8	c3		 ret	 0
?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_raw@?$vector@EV?$allocator@E@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
_Newvec$ = 64
this$ = 96
_Newcapacity$ = 104
?_Buy_raw@?$vector@EV?$allocator@E@std@@@std@@AEAAX_K@Z PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::_Buy_raw, COMDAT

; 1589 :     void _Buy_raw(const size_type _Newcapacity) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1590 :         // allocate array with _Newcapacity elements
; 1591 :         auto& _My_data    = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1592 :         pointer& _Myfirst = _My_data._Myfirst;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1593 :         pointer& _Mylast  = _My_data._Mylast;

  0003b	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00040	48 83 c0 10	 add	 rax, 16
  00044	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1594 :         pointer& _Myend   = _My_data._Myend;

  00049	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004e	48 83 c0 18	 add	 rax, 24
  00052	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1595 : 
; 1596 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1597 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 1598 : 
; 1599 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

  00057	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0005c	e8 00 00 00 00	 call	 ?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEAAAEAV?$allocator@E@2@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Getal
  00061	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  00066	48 8b c8	 mov	 rcx, rax
  00069	e8 00 00 00 00	 call	 ?allocate@?$allocator@E@std@@QEAAPEAE_K@Z ; std::allocator<unsigned char>::allocate
  0006e	48 89 44 24 40	 mov	 QWORD PTR _Newvec$[rsp], rax

; 1600 :         _Myfirst           = _Newvec;

  00073	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00078	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0007d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1601 :         _Mylast            = _Newvec;

  00080	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00085	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0008a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1602 :         _Myend             = _Newvec + _Newcapacity;

  0008d	48 8b 44 24 68	 mov	 rax, QWORD PTR _Newcapacity$[rsp]
  00092	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  00097	48 03 c8	 add	 rcx, rax
  0009a	48 8b c1	 mov	 rax, rcx
  0009d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  000a2	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1603 :     }

  000a5	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000a9	5f		 pop	 rdi
  000aa	c3		 ret	 0
?_Buy_raw@?$vector@EV?$allocator@E@std@@@std@@AEAAX_K@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Calculate_growth@?$vector@EV?$allocator@E@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 32
_Geometric$ = 40
tv67 = 48
this$ = 80
_Newsize$ = 88
?_Calculate_growth@?$vector@EV?$allocator@E@std@@@std@@AEBA_K_K@Z PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::_Calculate_growth, COMDAT

; 1571 :     size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1572 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1573 :         const size_type _Oldcapacity = capacity();

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?capacity@?$vector@EV?$allocator@E@std@@@std@@QEBA_KXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::capacity
  0002d	48 89 44 24 20	 mov	 QWORD PTR _Oldcapacity$[rsp], rax

; 1574 : 
; 1575 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00032	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ?max_size@?$vector@EV?$allocator@E@std@@@std@@QEBA_KXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::max_size
  0003c	48 89 44 24 30	 mov	 QWORD PTR tv67[rsp], rax
  00041	33 d2		 xor	 edx, edx
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00048	b9 02 00 00 00	 mov	 ecx, 2
  0004d	48 f7 f1	 div	 rcx
  00050	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv67[rsp]
  00055	48 2b c8	 sub	 rcx, rax
  00058	48 8b c1	 mov	 rax, rcx
  0005b	48 39 44 24 20	 cmp	 QWORD PTR _Oldcapacity$[rsp], rax
  00060	76 07		 jbe	 SHORT $LN2@Calculate_

; 1576 :             return _Newsize; // geometric growth would overflow

  00062	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00067	eb 37		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1577 :         }
; 1578 : 
; 1579 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00069	33 d2		 xor	 edx, edx
  0006b	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00070	b9 02 00 00 00	 mov	 ecx, 2
  00075	48 f7 f1	 div	 rcx
  00078	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Oldcapacity$[rsp]
  0007d	48 03 c8	 add	 rcx, rax
  00080	48 8b c1	 mov	 rax, rcx
  00083	48 89 44 24 28	 mov	 QWORD PTR _Geometric$[rsp], rax

; 1580 : 
; 1581 :         if (_Geometric < _Newsize) {

  00088	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  0008d	48 39 44 24 28	 cmp	 QWORD PTR _Geometric$[rsp], rax
  00092	73 07		 jae	 SHORT $LN3@Calculate_

; 1582 :             return _Newsize; // geometric growth would be insufficient

  00094	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00099	eb 05		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1583 :         }
; 1584 : 
; 1585 :         return _Geometric; // geometric growth is sufficient

  0009b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Geometric$[rsp]
$LN1@Calculate_:

; 1586 :     }

  000a0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000a4	5f		 pop	 rdi
  000a5	c3		 ret	 0
?_Calculate_growth@?$vector@EV?$allocator@E@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@EV?$allocator@E@std@@@std@@AEAAXPEAE0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@EV?$allocator@E@std@@@std@@AEAAXPEAE0@Z PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEAAAEAV?$allocator@E@2@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@E@std@@@std@@YAXPEAEQEAEAEAV?$allocator@E@0@@Z ; std::_Destroy_range<std::allocator<unsigned char> >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@EV?$allocator@E@std@@@std@@AEAAXPEAE0@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?capacity@?$vector@EV?$allocator@E@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?capacity@?$vector@EV?$allocator@E@std@@@std@@QEBA_KXZ PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::capacity, COMDAT

; 1446 :     _NODISCARD size_type capacity() const noexcept { // return current length of allocated storage

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1447 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1448 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00037	48 2b c1	 sub	 rax, rcx

; 1449 :     }

  0003a	48 83 c4 10	 add	 rsp, 16
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?capacity@?$vector@EV?$allocator@E@std@@@std@@QEBA_KXZ ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@EV?$allocator@E@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@EV?$allocator@E@std@@@std@@QEBA_KXZ PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1442 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEBAAEBV?$allocator@E@2@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@E@std@@@std@@SA_KAEBV?$allocator@E@2@@Z ; std::_Default_allocator_traits<std::allocator<unsigned char> >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$vector@EV?$allocator@E@std@@@std@@QEBA_KXZ ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?size@?$vector@EV?$allocator@E@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?size@?$vector@EV?$allocator@E@std@@@std@@QEBA_KXZ PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::size, COMDAT

; 1436 :     _NODISCARD size_type size() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1437 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1438 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00037	48 2b c1	 sub	 rax, rcx

; 1439 :     }

  0003a	48 83 c4 10	 add	 rsp, 16
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?size@?$vector@EV?$allocator@E@std@@@std@@QEBA_KXZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?data@?$vector@EV?$allocator@E@std@@@std@@QEAAPEAEXZ
_TEXT	SEGMENT
this$ = 48
?data@?$vector@EV?$allocator@E@std@@@std@@QEAAPEAEXZ PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::data, COMDAT

; 1352 :     _NODISCARD _Ty* data() noexcept { // return address of first element

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1353 :         return _Unfancy_maybe_null(_Mypair._Myval2._Myfirst);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00027	e8 00 00 00 00	 call	 ??$_Unfancy_maybe_null@E@std@@YAPEAEPEAE@Z ; std::_Unfancy_maybe_null<unsigned char>
  0002c	90		 npad	 1

; 1354 :     }

  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
?data@?$vector@EV?$allocator@E@std@@@std@@QEAAPEAEXZ ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?clear@?$vector@EV?$allocator@E@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
this$ = 80
?clear@?$vector@EV?$allocator@E@std@@@std@@QEAAXXZ PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::clear, COMDAT

; 1333 :     void clear() noexcept { // erase all

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1334 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1335 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1336 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1337 : 
; 1338 :         _My_data._Orphan_all();

  00044	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00049	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0004e	90		 npad	 1

; 1339 :         _Destroy(_Myfirst, _Mylast);

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00054	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00057	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0005c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0005f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00064	e8 00 00 00 00	 call	 ?_Destroy@?$vector@EV?$allocator@E@std@@@std@@AEAAXPEAE0@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Destroy
  00069	90		 npad	 1

; 1340 :         _Mylast = _Myfirst;

  0006a	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006f	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00074	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00077	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1341 :     }

  0007a	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0007e	5f		 pop	 rdi
  0007f	c3		 ret	 0
?clear@?$vector@EV?$allocator@E@std@@@std@@QEAAXXZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Clear_and_reserve_geometric@?$vector@EV?$allocator@E@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
_Newcapacity$ = 64
tv82 = 72
this$ = 96
_Newsize$ = 104
?_Clear_and_reserve_geometric@?$vector@EV?$allocator@E@std@@@std@@AEAAX_K@Z PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::_Clear_and_reserve_geometric, COMDAT

; 1222 :     void _Clear_and_reserve_geometric(const size_type _Newsize) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1223 :         auto& _My_data    = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1224 :         pointer& _Myfirst = _My_data._Myfirst;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1225 :         pointer& _Mylast  = _My_data._Mylast;

  0003b	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00040	48 83 c0 10	 add	 rax, 16
  00044	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1226 :         pointer& _Myend   = _My_data._Myend;

  00049	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004e	48 83 c0 18	 add	 rax, 24
  00052	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1227 : 
; 1228 : #if _ITERATOR_DEBUG_LEVEL != 0 && defined(_ENABLE_STL_INTERNAL_CHECK)
; 1229 :         _STL_INTERNAL_CHECK(_Newsize != 0);
; 1230 :         {
; 1231 :             _Lockit _Lock(_LOCK_DEBUG);
; 1232 :             _STL_INTERNAL_CHECK(!_My_data._Myproxy->_Myfirstiter); // asserts that all iterators are orphaned
; 1233 :         } // unlock
; 1234 : #endif // _ITERATOR_DEBUG_LEVEL != 0 && defined(_ENABLE_STL_INTERNAL_CHECK)
; 1235 : 
; 1236 :         if (_Newsize > max_size()) {

  00057	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0005c	e8 00 00 00 00	 call	 ?max_size@?$vector@EV?$allocator@E@std@@@std@@QEBA_KXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::max_size
  00061	48 39 44 24 68	 cmp	 QWORD PTR _Newsize$[rsp], rax
  00066	76 05		 jbe	 SHORT $LN2@Clear_and_

; 1237 :             _Xlength();

  00068	e8 00 00 00 00	 call	 ?_Xlength@?$vector@EV?$allocator@E@std@@@std@@CAXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Xlength
$LN2@Clear_and_:

; 1238 :         }
; 1239 : 
; 1240 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

  0006d	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  00072	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00077	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@EV?$allocator@E@std@@@std@@AEBA_K_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Calculate_growth
  0007c	48 89 44 24 40	 mov	 QWORD PTR _Newcapacity$[rsp], rax

; 1241 : 
; 1242 :         if (_Myfirst) { // destroy and deallocate old array

  00081	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00086	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0008a	74 78		 je	 SHORT $LN3@Clear_and_

; 1243 :             _Destroy(_Myfirst, _Mylast);

  0008c	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00091	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00094	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00099	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0009c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000a1	e8 00 00 00 00	 call	 ?_Destroy@?$vector@EV?$allocator@E@std@@@std@@AEAAXPEAE0@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Destroy

; 1244 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000a6	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000ab	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000b0	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000b3	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000b6	48 2b c1	 sub	 rax, rcx
  000b9	48 89 44 24 48	 mov	 QWORD PTR tv82[rsp], rax
  000be	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000c3	e8 00 00 00 00	 call	 ?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEAAAEAV?$allocator@E@2@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Getal
  000c8	48 8b 4c 24 48	 mov	 rcx, QWORD PTR tv82[rsp]
  000cd	4c 8b c1	 mov	 r8, rcx
  000d0	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000d5	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000d8	48 8b c8	 mov	 rcx, rax
  000db	e8 00 00 00 00	 call	 ?deallocate@?$allocator@E@std@@QEAAXQEAE_K@Z ; std::allocator<unsigned char>::deallocate

; 1245 : 
; 1246 :             _Myfirst = pointer();

  000e0	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000e5	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1247 :             _Mylast  = pointer();

  000ec	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000f1	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1248 :             _Myend   = pointer();

  000f8	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000fd	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN3@Clear_and_:

; 1249 :         }
; 1250 : 
; 1251 :         _Buy_raw(_Newcapacity);

  00104	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  00109	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0010e	e8 00 00 00 00	 call	 ?_Buy_raw@?$vector@EV?$allocator@E@std@@@std@@AEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Buy_raw
$LN4@Clear_and_:

; 1252 :     }

  00113	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00117	5f		 pop	 rdi
  00118	c3		 ret	 0
?_Clear_and_reserve_geometric@?$vector@EV?$allocator@E@std@@@std@@AEAAX_K@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::_Clear_and_reserve_geometric
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Right$ = 72
??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=, COMDAT

; 1118 :     vector& operator=(const vector& _Right) { // assign _Right

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1119 :         if (this != _STD addressof(_Right)) { // different, assign it

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$vector@EV?$allocator@E@std@@@std@@@std@@YAPEBV?$vector@EV?$allocator@E@std@@@0@AEBV10@@Z ; std::addressof<std::vector<unsigned char,std::allocator<unsigned char> > const >
  0002d	48 39 44 24 40	 cmp	 QWORD PTR this$[rsp], rax
  00032	74 26		 je	 SHORT $LN2@operator

; 1120 :             _Copy_assign(_Right, _Choose_pocca<_Alty>{});

  00034	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00039	48 8b f8	 mov	 rdi, rax
  0003c	33 c0		 xor	 eax, eax
  0003e	b9 01 00 00 00	 mov	 ecx, 1
  00043	f3 aa		 rep stosb
  00045	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR $T1[rsp]
  0004b	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00050	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00055	e8 00 00 00 00	 call	 ?_Copy_assign@?$vector@EV?$allocator@E@std@@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Copy_assign
$LN2@operator:

; 1121 :         }
; 1122 : 
; 1123 :         return *this;

  0005a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]

; 1124 :     }

  0005f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Copy_assign@?$vector@EV?$allocator@E@std@@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z
_TEXT	SEGMENT
_Right_data$ = 32
tv65 = 40
this$ = 64
_Right$ = 72
__formal$ = 80
?_Copy_assign@?$vector@EV?$allocator@E@std@@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::_Copy_assign, COMDAT

; 1101 :     void _Copy_assign(const vector& _Right, false_type) {

$LN3:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1102 :         _Pocca(_Getal(), _Right._Getal());

  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEBAAEBV?$allocator@E@2@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Getal
  00032	48 89 44 24 28	 mov	 QWORD PTR tv65[rsp], rax
  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	e8 00 00 00 00	 call	 ?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEAAAEAV?$allocator@E@2@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Getal
  00041	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv65[rsp]
  00046	48 8b d1	 mov	 rdx, rcx
  00049	48 8b c8	 mov	 rcx, rax
  0004c	e8 00 00 00 00	 call	 ??$_Pocca@V?$allocator@E@std@@@std@@YAXAEAV?$allocator@E@0@AEBV10@@Z ; std::_Pocca<std::allocator<unsigned char> >

; 1103 :         auto& _Right_data = _Right._Mypair._Myval2;

  00051	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  00056	48 89 44 24 20	 mov	 QWORD PTR _Right_data$[rsp], rax

; 1104 :         assign(_Right_data._Myfirst, _Right_data._Mylast);

  0005b	48 8b 44 24 20	 mov	 rax, QWORD PTR _Right_data$[rsp]
  00060	4c 8b 40 10	 mov	 r8, QWORD PTR [rax+16]
  00064	48 8b 44 24 20	 mov	 rax, QWORD PTR _Right_data$[rsp]
  00069	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  0006d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00072	e8 00 00 00 00	 call	 ??$assign@PEAEX@?$vector@EV?$allocator@E@std@@@std@@QEAAXPEAE0@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::assign<unsigned char *,void>

; 1105 :     }

  00077	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0007b	5f		 pop	 rdi
  0007c	c3		 ret	 0
?_Copy_assign@?$vector@EV?$allocator@E@std@@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::_Copy_assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S2$ = 52
$T4 = 68
this$ = 96
??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEAAAEAV?$allocator@E@2@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S2$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0E@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@E@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned char>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S2$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >, COMDAT

; 385  :     vector() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>)

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 386  :         : _Mypair(_Zero_then_variadic_args_t()) { // construct empty vector

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<unsigned char>,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Compressed_pair<std::allocator<unsigned char>,std::_Vector_val<std::_Simple_types<unsigned char> >,1><>
  00030	90		 npad	 1

; 387  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEAAAEAV?$allocator@E@2@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0E@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@E@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned char>
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 388  :     }

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??0?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@E@std@@@std@@SA_KAEBV?$allocator@E@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@E@std@@@std@@SA_KAEBV?$allocator@E@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<unsigned char> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1

; 768  :     }

  0000d	5f		 pop	 rdi
  0000e	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@E@std@@@std@@SA_KAEBV?$allocator@E@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<unsigned char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@E@std@@QEAAPEAE_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@E@std@@QEAAPEAE_K@Z PROC		; std::allocator<unsigned char>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$00@std@@YA_K_K@Z ; std::_Get_size_of_n<1>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@E@std@@QEAAPEAE_K@Z ENDP		; std::allocator<unsigned char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@E@std@@QEAAXQEAE_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@E@std@@QEAAXQEAE_K@Z PROC	; std::allocator<unsigned char>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Count$[rsp]
  0002d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
?deallocate@?$allocator@E@std@@QEAAXQEAE_K@Z ENDP	; std::allocator<unsigned char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@E@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@E@std@@QEAA@XZ PROC			; std::allocator<unsigned char>::allocator<unsigned char>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@E@std@@QEAA@XZ ENDP			; std::allocator<unsigned char>::allocator<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z
_TEXT	SEGMENT
tv71 = 32
_Left$ = 64
__formal$ = 72
??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z PROC ; std::operator==<RGYLog>, COMDAT

; 1327 : _NODISCARD bool operator==(const shared_ptr<_Ty>& _Left, nullptr_t) noexcept {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1328 :     return _Left.get() == nullptr;

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Left$[rsp]
  00028	e8 00 00 00 00	 call	 ?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ ; std::_Ptr_base<RGYLog>::get
  0002d	48 85 c0	 test	 rax, rax
  00030	75 0a		 jne	 SHORT $LN3@operator
  00032	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv71[rsp], 1
  0003a	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0003c	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv71[rsp], 0
$LN4@operator:
  00044	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv71[rsp]

; 1329 : }

  00049	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004d	5f		 pop	 rdi
  0004e	c3		 ret	 0
??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z ENDP ; std::operator==<RGYLog>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GRGYOutput@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GRGYOutput@@UEAAPEAXI@Z PROC				; RGYOutput::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1RGYOutput@@UEAA@XZ	; RGYOutput::~RGYOutput
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 38 01 00 00	 mov	 edx, 312		; 00000138H
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_GRGYOutput@@UEAAPEAXI@Z ENDP				; RGYOutput::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAAAEAUaligned_malloc_deleter@@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAAAEAUaligned_malloc_deleter@@XZ PROC ; std::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAAAEAUaligned_malloc_deleter@@XZ ENDP ; std::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?reset@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAAXPEAE@Z
_TEXT	SEGMENT
_Old$ = 32
this$ = 64
_Ptr$ = 72
?reset@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAAXPEAE@Z PROC ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::reset, COMDAT

; 1907 :     void reset(pointer _Ptr = pointer()) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1908 :         pointer _Old = _STD exchange(_Mypair._Myval2, _Ptr);

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 54 24 48	 lea	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$exchange@PEAEAEAPEAE@std@@YAPEAEAEAPEAE0@Z ; std::exchange<unsigned char *,unsigned char * &>
  00035	90		 npad	 1
  00036	48 89 44 24 20	 mov	 QWORD PTR _Old$[rsp], rax

; 1909 :         if (_Old) {

  0003b	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Old$[rsp], 0
  00041	74 1c		 je	 SHORT $LN2@reset

; 1910 :             _Mypair._Get_first()(_Old);

  00043	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAAAEAUaligned_malloc_deleter@@XZ ; std::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1>::_Get_first
  00050	90		 npad	 1
  00051	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Old$[rsp]
  00056	48 8b c8	 mov	 rcx, rax
  00059	e8 00 00 00 00	 call	 ??Raligned_malloc_deleter@@QEBAXPEAX@Z ; aligned_malloc_deleter::operator()
  0005e	90		 npad	 1
$LN2@reset:

; 1911 :         }
; 1912 :     }

  0005f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
?reset@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAAXPEAE@Z ENDP ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEBAPEAEXZ
_TEXT	SEGMENT
this$ = 16
?get@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEBAPEAEXZ PROC ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::get, COMDAT

; 1895 :     _NODISCARD pointer get() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1896 :         return _Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1897 :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?get@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEBAPEAEXZ ENDP ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ PROC ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::~unique_ptr<unsigned char,aligned_malloc_deleter>, COMDAT

; 1873 :     ~unique_ptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1874 :         if (_Mypair._Myval2) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 1f		 je	 SHORT $LN2@unique_ptr

; 1875 :             _Mypair._Get_first()(_Mypair._Myval2);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAAAEAUaligned_malloc_deleter@@XZ ; std::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1>::_Get_first
  00036	90		 npad	 1
  00037	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??Raligned_malloc_deleter@@QEBAXPEAX@Z ; aligned_malloc_deleter::operator()
  00047	90		 npad	 1
$LN2@unique_ptr:

; 1876 :         }
; 1877 :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
??1?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ ENDP ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::~unique_ptr<unsigned char,aligned_malloc_deleter>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@Umalloc_deleter@@PEAD$00@std@@QEAAAEAUmalloc_deleter@@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@Umalloc_deleter@@PEAD$00@std@@QEAAAEAUmalloc_deleter@@XZ PROC ; std::_Compressed_pair<malloc_deleter,char *,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@Umalloc_deleter@@PEAD$00@std@@QEAAAEAUmalloc_deleter@@XZ ENDP ; std::_Compressed_pair<malloc_deleter,char *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?reset@?$unique_ptr@DUmalloc_deleter@@@std@@QEAAXPEAD@Z
_TEXT	SEGMENT
_Old$ = 32
this$ = 64
_Ptr$ = 72
?reset@?$unique_ptr@DUmalloc_deleter@@@std@@QEAAXPEAD@Z PROC ; std::unique_ptr<char,malloc_deleter>::reset, COMDAT

; 1907 :     void reset(pointer _Ptr = pointer()) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1908 :         pointer _Old = _STD exchange(_Mypair._Myval2, _Ptr);

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 54 24 48	 lea	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$exchange@PEADAEAPEAD@std@@YAPEADAEAPEAD0@Z ; std::exchange<char *,char * &>
  00035	90		 npad	 1
  00036	48 89 44 24 20	 mov	 QWORD PTR _Old$[rsp], rax

; 1909 :         if (_Old) {

  0003b	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Old$[rsp], 0
  00041	74 1c		 je	 SHORT $LN2@reset

; 1910 :             _Mypair._Get_first()(_Old);

  00043	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@Umalloc_deleter@@PEAD$00@std@@QEAAAEAUmalloc_deleter@@XZ ; std::_Compressed_pair<malloc_deleter,char *,1>::_Get_first
  00050	90		 npad	 1
  00051	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Old$[rsp]
  00056	48 8b c8	 mov	 rcx, rax
  00059	e8 00 00 00 00	 call	 ??Rmalloc_deleter@@QEBAXPEAX@Z ; malloc_deleter::operator()
  0005e	90		 npad	 1
$LN2@reset:

; 1911 :         }
; 1912 :     }

  0005f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
?reset@?$unique_ptr@DUmalloc_deleter@@@std@@QEAAXPEAD@Z ENDP ; std::unique_ptr<char,malloc_deleter>::reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$unique_ptr@DUmalloc_deleter@@@std@@QEBAPEADXZ
_TEXT	SEGMENT
this$ = 16
?get@?$unique_ptr@DUmalloc_deleter@@@std@@QEBAPEADXZ PROC ; std::unique_ptr<char,malloc_deleter>::get, COMDAT

; 1895 :     _NODISCARD pointer get() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1896 :         return _Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1897 :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?get@?$unique_ptr@DUmalloc_deleter@@@std@@QEBAPEADXZ ENDP ; std::unique_ptr<char,malloc_deleter>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ PROC	; std::unique_ptr<char,malloc_deleter>::~unique_ptr<char,malloc_deleter>, COMDAT

; 1873 :     ~unique_ptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1874 :         if (_Mypair._Myval2) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 1f		 je	 SHORT $LN2@unique_ptr

; 1875 :             _Mypair._Get_first()(_Mypair._Myval2);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@Umalloc_deleter@@PEAD$00@std@@QEAAAEAUmalloc_deleter@@XZ ; std::_Compressed_pair<malloc_deleter,char *,1>::_Get_first
  00036	90		 npad	 1
  00037	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??Rmalloc_deleter@@QEBAXPEAX@Z ; malloc_deleter::operator()
  00047	90		 npad	 1
$LN2@unique_ptr:

; 1876 :         }
; 1877 :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
??1?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ ENDP	; std::unique_ptr<char,malloc_deleter>::~unique_ptr<char,malloc_deleter>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.h
;	COMDAT ?AddMessage@RGYOutput@@QEAAXHPEBDZZ
_TEXT	SEGMENT
args$ = 40
len$ = 52
buffer$ = 72
tv93 = 136
__$ArrayPad$ = 144
this$ = 176
log_level$ = 184
format$ = 192
?AddMessage@RGYOutput@@QEAAXHPEBDZZ PROC		; RGYOutput::AddMessage, COMDAT

; 139  :     void AddMessage(int log_level, const TCHAR *format, ... ) {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00013	57		 push	 rdi
  00014	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  0001b	48 8b fc	 mov	 rdi, rsp
  0001e	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00023	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00028	f3 ab		 rep stosd
  0002a	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+176]
  00032	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00039	48 33 c4	 xor	 rax, rsp
  0003c	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 140  :         if (m_pPrintMes == nullptr || log_level < m_pPrintMes->getLogLevel()) {

  00044	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 05 10 01 00
	00		 add	 rax, 272		; 00000110H
  00052	33 d2		 xor	 edx, edx
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z ; std::operator==<RGYLog>
  0005c	0f b6 c0	 movzx	 eax, al
  0005f	85 c0		 test	 eax, eax
  00061	75 27		 jne	 SHORT $LN3@AddMessage
  00063	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0006b	48 05 10 01 00
	00		 add	 rax, 272		; 00000110H
  00071	48 8b c8	 mov	 rcx, rax
  00074	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  00079	48 8b c8	 mov	 rcx, rax
  0007c	e8 00 00 00 00	 call	 ?getLogLevel@RGYLog@@QEAAHXZ ; RGYLog::getLogLevel
  00081	39 84 24 b8 00
	00 00		 cmp	 DWORD PTR log_level$[rsp], eax
  00088	7d 05		 jge	 SHORT $LN2@AddMessage
$LN3@AddMessage:

; 141  :             return;

  0008a	e9 ab 00 00 00	 jmp	 $LN1@AddMessage
$LN2@AddMessage:

; 142  :         }
; 143  : 
; 144  :         va_list args;
; 145  :         va_start(args, format);

  0008f	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR format$[rsp+8]
  00097	48 89 44 24 28	 mov	 QWORD PTR args$[rsp], rax

; 146  :         int len = _vsctprintf(format, args) + 1; // _vscprintf doesn't count terminating '\0'

  0009c	48 8b 54 24 28	 mov	 rdx, QWORD PTR args$[rsp]
  000a1	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR format$[rsp]
  000a9	e8 00 00 00 00	 call	 _vscprintf
  000ae	ff c0		 inc	 eax
  000b0	89 44 24 34	 mov	 DWORD PTR len$[rsp], eax

; 147  :         tstring buffer;

  000b4	48 8d 4c 24 48	 lea	 rcx, QWORD PTR buffer$[rsp]
  000b9	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000be	90		 npad	 1

; 148  :         buffer.resize(len, _T('\0'));

  000bf	48 63 44 24 34	 movsxd	 rax, DWORD PTR len$[rsp]
  000c4	45 33 c0	 xor	 r8d, r8d
  000c7	48 8b d0	 mov	 rdx, rax
  000ca	48 8d 4c 24 48	 lea	 rcx, QWORD PTR buffer$[rsp]
  000cf	e8 00 00 00 00	 call	 ?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize

; 149  :         _vstprintf_s(&buffer[0], len, format, args);

  000d4	48 63 44 24 34	 movsxd	 rax, DWORD PTR len$[rsp]
  000d9	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR tv93[rsp], rax
  000e1	33 d2		 xor	 edx, edx
  000e3	48 8d 4c 24 48	 lea	 rcx, QWORD PTR buffer$[rsp]
  000e8	e8 00 00 00 00	 call	 ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
  000ed	4c 8b 4c 24 28	 mov	 r9, QWORD PTR args$[rsp]
  000f2	4c 8b 84 24 c0
	00 00 00	 mov	 r8, QWORD PTR format$[rsp]
  000fa	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR tv93[rsp]
  00102	48 8b d1	 mov	 rdx, rcx
  00105	48 8b c8	 mov	 rcx, rax
  00108	e8 00 00 00 00	 call	 vsprintf_s

; 150  :         va_end(args);

  0010d	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR args$[rsp], 0

; 151  :         AddMessage(log_level, buffer);

  00116	4c 8d 44 24 48	 lea	 r8, QWORD PTR buffer$[rsp]
  0011b	8b 94 24 b8 00
	00 00		 mov	 edx, DWORD PTR log_level$[rsp]
  00122	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0012a	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; RGYOutput::AddMessage
  0012f	90		 npad	 1

; 152  :     }

  00130	48 8d 4c 24 48	 lea	 rcx, QWORD PTR buffer$[rsp]
  00135	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@AddMessage:
  0013a	48 8b cc	 mov	 rcx, rsp
  0013d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?AddMessage@RGYOutput@@QEAAXHPEBDZZ$rtcFrameData
  00144	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00149	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00151	48 33 cc	 xor	 rcx, rsp
  00154	e8 00 00 00 00	 call	 __security_check_cookie
  00159	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  00160	5f		 pop	 rdi
  00161	c3		 ret	 0
?AddMessage@RGYOutput@@QEAAXHPEBDZZ ENDP		; RGYOutput::AddMessage
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
args$ = 40
len$ = 52
buffer$ = 72
tv93 = 136
__$ArrayPad$ = 144
this$ = 176
log_level$ = 184
format$ = 192
?dtor$0@?0??AddMessage@RGYOutput@@QEAAXHPEBDZZ@4HA PROC	; `RGYOutput::AddMessage'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 48	 lea	 rcx, QWORD PTR buffer$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??AddMessage@RGYOutput@@QEAAXHPEBDZZ@4HA ENDP	; `RGYOutput::AddMessage'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
args$ = 40
len$ = 52
buffer$ = 72
tv93 = 136
__$ArrayPad$ = 144
this$ = 176
log_level$ = 184
format$ = 192
?dtor$0@?0??AddMessage@RGYOutput@@QEAAXHPEBDZZ@4HA PROC	; `RGYOutput::AddMessage'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 48	 lea	 rcx, QWORD PTR buffer$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??AddMessage@RGYOutput@@QEAAXHPEBDZZ@4HA ENDP	; `RGYOutput::AddMessage'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.h
;	COMDAT ?AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; RGYOutput::AddMessage, COMDAT

; 128  :     void AddMessage(int log_level, const tstring& str) {

$LN14:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 81 ec 70 01
	00 00		 sub	 rsp, 368		; 00000170H
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 5c 00 00 00	 mov	 ecx, 92			; 0000005cH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 80
	01 00 00	 mov	 rcx, QWORD PTR [rsp+384]
  0002d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00034	48 33 c4	 xor	 rax, rsp
  00037	48 89 84 24 60
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 129  :         if (m_pPrintMes == nullptr || log_level < m_pPrintMes->getLogLevel()) {

  0003f	48 8b 84 24 80
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 05 10 01 00
	00		 add	 rax, 272		; 00000110H
  0004d	33 d2		 xor	 edx, edx
  0004f	48 8b c8	 mov	 rcx, rax
  00052	e8 00 00 00 00	 call	 ??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z ; std::operator==<RGYLog>
  00057	0f b6 c0	 movzx	 eax, al
  0005a	85 c0		 test	 eax, eax
  0005c	75 27		 jne	 SHORT $LN6@AddMessage
  0005e	48 8b 84 24 80
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00066	48 05 10 01 00
	00		 add	 rax, 272		; 00000110H
  0006c	48 8b c8	 mov	 rcx, rax
  0006f	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  00074	48 8b c8	 mov	 rcx, rax
  00077	e8 00 00 00 00	 call	 ?getLogLevel@RGYLog@@QEAAHXZ ; RGYLog::getLogLevel
  0007c	39 84 24 88 01
	00 00		 cmp	 DWORD PTR log_level$[rsp], eax
  00083	7d 05		 jge	 SHORT $LN5@AddMessage
$LN6@AddMessage:

; 130  :             return;

  00085	e9 fc 01 00 00	 jmp	 $LN1@AddMessage
$LN5@AddMessage:

; 131  :         }
; 132  :         auto lines = split(str, _T("\n"));

  0008a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
  00091	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T4[rsp]
  00096	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0009b	90		 npad	 1
  0009c	45 33 c9	 xor	 r9d, r9d
  0009f	4c 8d 44 24 58	 lea	 r8, QWORD PTR $T4[rsp]
  000a4	48 8b 94 24 90
	01 00 00	 mov	 rdx, QWORD PTR str$[rsp]
  000ac	48 8d 4c 24 28	 lea	 rcx, QWORD PTR lines$[rsp]
  000b1	e8 00 00 00 00	 call	 ?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z ; split
  000b6	90		 npad	 1
  000b7	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T4[rsp]
  000bc	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 133  :         for (const auto& line : lines) {

  000c1	48 8d 44 24 28	 lea	 rax, QWORD PTR lines$[rsp]
  000c6	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR <range>$L0$5[rsp], rax
  000ce	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR <range>$L0$5[rsp]
  000d6	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unchecked_begin
  000db	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR <begin>$L0$6[rsp], rax
  000e3	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR <range>$L0$5[rsp]
  000eb	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unchecked_end
  000f0	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR <end>$L0$7[rsp], rax
  000f8	eb 14		 jmp	 SHORT $LN4@AddMessage
$LN2@AddMessage:
  000fa	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <begin>$L0$6[rsp]
  00102	48 83 c0 28	 add	 rax, 40			; 00000028H
  00106	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR <begin>$L0$6[rsp], rax
$LN4@AddMessage:
  0010e	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <end>$L0$7[rsp]
  00116	48 39 84 24 88
	00 00 00	 cmp	 QWORD PTR <begin>$L0$6[rsp], rax
  0011e	0f 84 58 01 00
	00		 je	 $LN3@AddMessage
  00124	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <begin>$L0$6[rsp]
  0012c	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR line$8[rsp], rax

; 134  :             if (line[0] != _T('\0')) {

  00134	33 d2		 xor	 edx, edx
  00136	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR line$8[rsp]
  0013e	e8 00 00 00 00	 call	 ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
  00143	0f be 00	 movsx	 eax, BYTE PTR [rax]
  00146	85 c0		 test	 eax, eax
  00148	0f 84 29 01 00
	00		 je	 $LN7@AddMessage

; 135  :                 m_pPrintMes->write(log_level, (m_strWriterName + _T(": ") + line + _T("\n")).c_str());

  0014e	48 8b 84 24 80
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00156	48 05 10 01 00
	00		 add	 rax, 272		; 00000110H
  0015c	48 8b c8	 mov	 rcx, rax
  0015f	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  00164	48 89 84 24 20
	01 00 00	 mov	 QWORD PTR tv133[rsp], rax
  0016c	48 8b 84 24 80
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00174	48 83 c0 30	 add	 rax, 48			; 00000030H
  00178	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_02LMMGGCAJ@?3?5@
  0017f	48 8b d0	 mov	 rdx, rax
  00182	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  0018a	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  0018f	48 89 84 24 28
	01 00 00	 mov	 QWORD PTR tv76[rsp], rax
  00197	48 8b 84 24 28
	01 00 00	 mov	 rax, QWORD PTR tv76[rsp]
  0019f	48 89 84 24 30
	01 00 00	 mov	 QWORD PTR tv162[rsp], rax
  001a7	4c 8b 84 24 98
	00 00 00	 mov	 r8, QWORD PTR line$8[rsp]
  001af	48 8b 94 24 30
	01 00 00	 mov	 rdx, QWORD PTR tv162[rsp]
  001b7	48 8d 8c 24 c8
	00 00 00	 lea	 rcx, QWORD PTR $T10[rsp]
  001bf	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  001c4	48 89 84 24 38
	01 00 00	 mov	 QWORD PTR tv79[rsp], rax
  001cc	48 8b 84 24 38
	01 00 00	 mov	 rax, QWORD PTR tv79[rsp]
  001d4	48 89 84 24 40
	01 00 00	 mov	 QWORD PTR tv164[rsp], rax
  001dc	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
  001e3	48 8b 94 24 40
	01 00 00	 mov	 rdx, QWORD PTR tv164[rsp]
  001eb	48 8d 8c 24 f0
	00 00 00	 lea	 rcx, QWORD PTR $T11[rsp]
  001f3	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  001f8	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR tv167[rsp], rax
  00200	48 8b 84 24 48
	01 00 00	 mov	 rax, QWORD PTR tv167[rsp]
  00208	48 89 84 24 50
	01 00 00	 mov	 QWORD PTR tv166[rsp], rax
  00210	48 8b 8c 24 50
	01 00 00	 mov	 rcx, QWORD PTR tv166[rsp]
  00218	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0021d	48 8b 8c 24 20
	01 00 00	 mov	 rcx, QWORD PTR tv133[rsp]
  00225	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00228	48 89 8c 24 58
	01 00 00	 mov	 QWORD PTR tv168[rsp], rcx
  00230	4c 8b c0	 mov	 r8, rax
  00233	8b 94 24 88 01
	00 00		 mov	 edx, DWORD PTR log_level$[rsp]
  0023a	48 8b 8c 24 20
	01 00 00	 mov	 rcx, QWORD PTR tv133[rsp]
  00242	48 8b 84 24 58
	01 00 00	 mov	 rax, QWORD PTR tv168[rsp]
  0024a	ff 50 20	 call	 QWORD PTR [rax+32]
  0024d	90		 npad	 1
  0024e	48 8d 8c 24 f0
	00 00 00	 lea	 rcx, QWORD PTR $T11[rsp]
  00256	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0025b	90		 npad	 1
  0025c	48 8d 8c 24 c8
	00 00 00	 lea	 rcx, QWORD PTR $T10[rsp]
  00264	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00269	90		 npad	 1
  0026a	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  00272	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN7@AddMessage:

; 136  :             }
; 137  :         }

  00277	e9 7e fe ff ff	 jmp	 $LN2@AddMessage
$LN3@AddMessage:

; 138  :     }

  0027c	48 8d 4c 24 28	 lea	 rcx, QWORD PTR lines$[rsp]
  00281	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN1@AddMessage:
  00286	48 8b cc	 mov	 rcx, rsp
  00289	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$rtcFrameData
  00290	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00295	48 8b 8c 24 60
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0029d	48 33 cc	 xor	 rcx, rsp
  002a0	e8 00 00 00 00	 call	 __security_check_cookie
  002a5	48 81 c4 70 01
	00 00		 add	 rsp, 368		; 00000170H
  002ac	5f		 pop	 rdi
  002ad	c3		 ret	 0
?AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; RGYOutput::AddMessage
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$0@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYOutput::AddMessage'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR $T4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYOutput::AddMessage'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$1@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYOutput::AddMessage'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR lines$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYOutput::AddMessage'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$2@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYOutput::AddMessage'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$2@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYOutput::AddMessage'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$3@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYOutput::AddMessage'::`1'::dtor$3
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$3@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYOutput::AddMessage'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$4@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYOutput::AddMessage'::`1'::dtor$4
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d f0 00
	00 00		 lea	 rcx, QWORD PTR $T11[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$4@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYOutput::AddMessage'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$0@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYOutput::AddMessage'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR $T4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYOutput::AddMessage'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$1@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYOutput::AddMessage'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR lines$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYOutput::AddMessage'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$2@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYOutput::AddMessage'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$2@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYOutput::AddMessage'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$3@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYOutput::AddMessage'::`1'::dtor$3
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$3@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYOutput::AddMessage'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$4@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYOutput::AddMessage'::`1'::dtor$4
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d f0 00
	00 00		 lea	 rcx, QWORD PTR $T11[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$4@?0??AddMessage@RGYOutput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYOutput::AddMessage'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.h
;	COMDAT ?WaitFin@RGYOutput@@UEAAXXZ
_TEXT	SEGMENT
this$ = 16
?WaitFin@RGYOutput@@UEAAXXZ PROC			; RGYOutput::WaitFin, COMDAT

; 120  :     virtual void WaitFin() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 121  :         return;
; 122  :     }

  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
?WaitFin@RGYOutput@@UEAAXXZ ENDP			; RGYOutput::WaitFin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.h
;	COMDAT ?getOutType@RGYOutput@@UEAA?AW4OutputType@@XZ
_TEXT	SEGMENT
this$ = 16
?getOutType@RGYOutput@@UEAA?AW4OutputType@@XZ PROC	; RGYOutput::getOutType, COMDAT

; 117  :     virtual OutputType getOutType() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 118  :         return m_OutType;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	8b 40 24	 mov	 eax, DWORD PTR [rax+36]

; 119  :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?getOutType@RGYOutput@@UEAA?AW4OutputType@@XZ ENDP	; RGYOutput::getOutType
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.h
;	COMDAT ?outputStdout@RGYOutput@@UEAA_NXZ
_TEXT	SEGMENT
this$ = 16
?outputStdout@RGYOutput@@UEAA_NXZ PROC			; RGYOutput::outputStdout, COMDAT

; 113  :     virtual bool outputStdout() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 114  :         return m_bOutputIsStdout;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	0f b6 40 20	 movzx	 eax, BYTE PTR [rax+32]

; 115  :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?outputStdout@RGYOutput@@UEAA_NXZ ENDP			; RGYOutput::outputStdout
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
_TEXT	SEGMENT
this$ = 48
?Close@RGYOutput@@UEAAXXZ PROC				; RGYOutput::Close

; 85   : void RGYOutput::Close() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 86   :     AddMessage(RGY_LOG_DEBUG, _T("Closing...\n"));

  0001e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG133720
  00025	ba fe ff ff ff	 mov	 edx, -2
  0002a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002f	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage

; 87   :     if (m_fDest) {

  00034	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 83 c0 18	 add	 rax, 24
  0003d	48 8b c8	 mov	 rcx, rax
  00040	e8 00 00 00 00	 call	 ??B?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBA_NXZ ; std::unique_ptr<_iobuf,fp_deleter>::operator bool
  00045	0f b6 c0	 movzx	 eax, al
  00048	85 c0		 test	 eax, eax
  0004a	74 29		 je	 SHORT $LN2@Close

; 88   :         m_fDest.reset();

  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00051	48 83 c0 18	 add	 rax, 24
  00055	33 d2		 xor	 edx, edx
  00057	48 8b c8	 mov	 rcx, rax
  0005a	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z ; std::unique_ptr<_iobuf,fp_deleter>::reset

; 89   :         AddMessage(RGY_LOG_DEBUG, _T("Closed file pointer.\n"));

  0005f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG133722
  00066	ba fe ff ff ff	 mov	 edx, -2
  0006b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00070	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage
$LN2@Close:

; 90   :     }
; 91   :     m_pEncSatusInfo.reset();

  00075	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0007a	48 83 c0 08	 add	 rax, 8
  0007e	48 8b c8	 mov	 rcx, rax
  00081	e8 00 00 00 00	 call	 ?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ ; std::shared_ptr<EncodeStatus>::reset

; 92   :     m_pOutputBuffer.reset();

  00086	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0008b	48 05 20 01 00
	00		 add	 rax, 288		; 00000120H
  00091	33 d2		 xor	 edx, edx
  00093	48 8b c8	 mov	 rcx, rax
  00096	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@DUmalloc_deleter@@@std@@QEAAXPEAD@Z ; std::unique_ptr<char,malloc_deleter>::reset

; 93   :     m_pReadBuffer.reset();

  0009b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000a0	48 05 28 01 00
	00		 add	 rax, 296		; 00000128H
  000a6	33 d2		 xor	 edx, edx
  000a8	48 8b c8	 mov	 rcx, rax
  000ab	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAAXPEAE@Z ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::reset

; 94   :     m_pUVBuffer.reset();

  000b0	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000b5	48 05 30 01 00
	00		 add	 rax, 304		; 00000130H
  000bb	33 d2		 xor	 edx, edx
  000bd	48 8b c8	 mov	 rcx, rax
  000c0	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAAXPEAE@Z ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::reset

; 95   : 
; 96   :     m_bNoOutput = false;

  000c5	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000ca	c6 40 22 00	 mov	 BYTE PTR [rax+34], 0

; 97   :     m_bInited = false;

  000ce	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000d3	c6 40 21 00	 mov	 BYTE PTR [rax+33], 0

; 98   :     m_bSourceHWMem = false;

  000d7	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000dc	c6 40 28 00	 mov	 BYTE PTR [rax+40], 0

; 99   :     m_bY4mHeaderWritten = false;

  000e0	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000e5	c6 40 29 00	 mov	 BYTE PTR [rax+41], 0

; 100  :     AddMessage(RGY_LOG_DEBUG, _T("Closed.\n"));

  000e9	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG133723
  000f0	ba fe ff ff ff	 mov	 edx, -2
  000f5	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  000fa	e8 00 00 00 00	 call	 ?AddMessage@RGYOutput@@QEAAXHPEBDZZ ; RGYOutput::AddMessage

; 101  :     m_pPrintMes.reset();

  000ff	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00104	48 05 10 01 00
	00		 add	 rax, 272		; 00000110H
  0010a	48 8b c8	 mov	 rcx, rax
  0010d	e8 00 00 00 00	 call	 ?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ ; std::shared_ptr<RGYLog>::reset

; 102  : }

  00112	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00116	5f		 pop	 rdi
  00117	c3		 ret	 0
?Close@RGYOutput@@UEAAXXZ ENDP				; RGYOutput::Close
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
_TEXT	SEGMENT
this$ = 48
??1RGYOutput@@UEAA@XZ PROC				; RGYOutput::~RGYOutput

; 79   : RGYOutput::~RGYOutput() {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7RGYOutput@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 80   :     m_pEncSatusInfo.reset();

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ ; std::shared_ptr<EncodeStatus>::reset
  0003e	90		 npad	 1

; 81   :     m_pPrintMes.reset();

  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 05 10 01 00
	00		 add	 rax, 272		; 00000110H
  0004a	48 8b c8	 mov	 rcx, rax
  0004d	e8 00 00 00 00	 call	 ?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ ; std::shared_ptr<RGYLog>::reset
  00052	90		 npad	 1

; 82   :     Close();

  00053	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00058	e8 00 00 00 00	 call	 ?Close@RGYOutput@@UEAAXXZ ; RGYOutput::Close
  0005d	90		 npad	 1

; 83   : }

  0005e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00063	48 05 30 01 00
	00		 add	 rax, 304		; 00000130H
  00069	48 8b c8	 mov	 rcx, rax
  0006c	e8 00 00 00 00	 call	 ??1?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::~unique_ptr<unsigned char,aligned_malloc_deleter>
  00071	90		 npad	 1
  00072	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00077	48 05 28 01 00
	00		 add	 rax, 296		; 00000128H
  0007d	48 8b c8	 mov	 rcx, rax
  00080	e8 00 00 00 00	 call	 ??1?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::~unique_ptr<unsigned char,aligned_malloc_deleter>
  00085	90		 npad	 1
  00086	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0008b	48 05 20 01 00
	00		 add	 rax, 288		; 00000120H
  00091	48 8b c8	 mov	 rcx, rax
  00094	e8 00 00 00 00	 call	 ??1?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ ; std::unique_ptr<char,malloc_deleter>::~unique_ptr<char,malloc_deleter>
  00099	90		 npad	 1
  0009a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0009f	48 05 10 01 00
	00		 add	 rax, 272		; 00000110H
  000a5	48 8b c8	 mov	 rcx, rax
  000a8	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  000ad	90		 npad	 1
  000ae	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000b3	48 83 c0 58	 add	 rax, 88			; 00000058H
  000b7	48 8b c8	 mov	 rcx, rax
  000ba	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000bf	90		 npad	 1
  000c0	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000c5	48 83 c0 30	 add	 rax, 48			; 00000030H
  000c9	48 8b c8	 mov	 rcx, rax
  000cc	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000d1	90		 npad	 1
  000d2	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000d7	48 83 c0 18	 add	 rax, 24
  000db	48 8b c8	 mov	 rcx, rax
  000de	e8 00 00 00 00	 call	 ??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ ; std::unique_ptr<_iobuf,fp_deleter>::~unique_ptr<_iobuf,fp_deleter>
  000e3	90		 npad	 1
  000e4	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000e9	48 83 c0 08	 add	 rax, 8
  000ed	48 8b c8	 mov	 rcx, rax
  000f0	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  000f5	90		 npad	 1
  000f6	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000fa	5f		 pop	 rdi
  000fb	c3		 ret	 0
??1RGYOutput@@UEAA@XZ ENDP				; RGYOutput::~RGYOutput
_TEXT	ENDS
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1RGYOutput@@UEAA@XZ@4HA PROC		; `RGYOutput::~RGYOutput'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1RGYOutput@@UEAA@XZ@4HA ENDP		; `RGYOutput::~RGYOutput'::`1'::dtor$0
this$ = 48
?dtor$1@?0???1RGYOutput@@UEAA@XZ@4HA PROC		; `RGYOutput::~RGYOutput'::`1'::dtor$1
  00027	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00031	55		 push	 rbp
  00032	57		 push	 rdi
  00033	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00037	48 8b ea	 mov	 rbp, rdx
  0003a	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003e	48 83 c1 18	 add	 rcx, 24
  00042	e8 00 00 00 00	 call	 ??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ ; std::unique_ptr<_iobuf,fp_deleter>::~unique_ptr<_iobuf,fp_deleter>
  00047	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?dtor$1@?0???1RGYOutput@@UEAA@XZ@4HA ENDP		; `RGYOutput::~RGYOutput'::`1'::dtor$1
this$ = 48
?dtor$2@?0???1RGYOutput@@UEAA@XZ@4HA PROC		; `RGYOutput::~RGYOutput'::`1'::dtor$2
  0004e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00053	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00058	55		 push	 rbp
  00059	57		 push	 rdi
  0005a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005e	48 8b ea	 mov	 rbp, rdx
  00061	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00065	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00069	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0006e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
?dtor$2@?0???1RGYOutput@@UEAA@XZ@4HA ENDP		; `RGYOutput::~RGYOutput'::`1'::dtor$2
this$ = 48
?dtor$3@?0???1RGYOutput@@UEAA@XZ@4HA PROC		; `RGYOutput::~RGYOutput'::`1'::dtor$3
  00075	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0007a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0007f	55		 push	 rbp
  00080	57		 push	 rdi
  00081	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00085	48 8b ea	 mov	 rbp, rdx
  00088	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0008c	48 83 c1 58	 add	 rcx, 88			; 00000058H
  00090	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00095	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00099	5f		 pop	 rdi
  0009a	5d		 pop	 rbp
  0009b	c3		 ret	 0
?dtor$3@?0???1RGYOutput@@UEAA@XZ@4HA ENDP		; `RGYOutput::~RGYOutput'::`1'::dtor$3
this$ = 48
?dtor$4@?0???1RGYOutput@@UEAA@XZ@4HA PROC		; `RGYOutput::~RGYOutput'::`1'::dtor$4
  0009c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000a1	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000a6	55		 push	 rbp
  000a7	57		 push	 rdi
  000a8	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000ac	48 8b ea	 mov	 rbp, rdx
  000af	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000b3	48 81 c1 10 01
	00 00		 add	 rcx, 272		; 00000110H
  000ba	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  000bf	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000c3	5f		 pop	 rdi
  000c4	5d		 pop	 rbp
  000c5	c3		 ret	 0
?dtor$4@?0???1RGYOutput@@UEAA@XZ@4HA ENDP		; `RGYOutput::~RGYOutput'::`1'::dtor$4
this$ = 48
?dtor$5@?0???1RGYOutput@@UEAA@XZ@4HA PROC		; `RGYOutput::~RGYOutput'::`1'::dtor$5
  000c6	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000cb	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000d0	55		 push	 rbp
  000d1	57		 push	 rdi
  000d2	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000d6	48 8b ea	 mov	 rbp, rdx
  000d9	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000dd	48 81 c1 20 01
	00 00		 add	 rcx, 288		; 00000120H
  000e4	e8 00 00 00 00	 call	 ??1?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ ; std::unique_ptr<char,malloc_deleter>::~unique_ptr<char,malloc_deleter>
  000e9	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000ed	5f		 pop	 rdi
  000ee	5d		 pop	 rbp
  000ef	c3		 ret	 0
?dtor$5@?0???1RGYOutput@@UEAA@XZ@4HA ENDP		; `RGYOutput::~RGYOutput'::`1'::dtor$5
this$ = 48
?dtor$6@?0???1RGYOutput@@UEAA@XZ@4HA PROC		; `RGYOutput::~RGYOutput'::`1'::dtor$6
  000f0	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000f5	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000fa	55		 push	 rbp
  000fb	57		 push	 rdi
  000fc	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00100	48 8b ea	 mov	 rbp, rdx
  00103	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00107	48 81 c1 28 01
	00 00		 add	 rcx, 296		; 00000128H
  0010e	e8 00 00 00 00	 call	 ??1?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::~unique_ptr<unsigned char,aligned_malloc_deleter>
  00113	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00117	5f		 pop	 rdi
  00118	5d		 pop	 rbp
  00119	c3		 ret	 0
?dtor$6@?0???1RGYOutput@@UEAA@XZ@4HA ENDP		; `RGYOutput::~RGYOutput'::`1'::dtor$6
this$ = 48
?dtor$7@?0???1RGYOutput@@UEAA@XZ@4HA PROC		; `RGYOutput::~RGYOutput'::`1'::dtor$7
  0011a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0011f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00124	55		 push	 rbp
  00125	57		 push	 rdi
  00126	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0012a	48 8b ea	 mov	 rbp, rdx
  0012d	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00131	48 81 c1 30 01
	00 00		 add	 rcx, 304		; 00000130H
  00138	e8 00 00 00 00	 call	 ??1?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::~unique_ptr<unsigned char,aligned_malloc_deleter>
  0013d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00141	5f		 pop	 rdi
  00142	5d		 pop	 rbp
  00143	c3		 ret	 0
?dtor$7@?0???1RGYOutput@@UEAA@XZ@4HA ENDP		; `RGYOutput::~RGYOutput'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1RGYOutput@@UEAA@XZ@4HA PROC		; `RGYOutput::~RGYOutput'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1RGYOutput@@UEAA@XZ@4HA ENDP		; `RGYOutput::~RGYOutput'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1RGYOutput@@UEAA@XZ@4HA PROC		; `RGYOutput::~RGYOutput'::`1'::dtor$1
  00027	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00031	55		 push	 rbp
  00032	57		 push	 rdi
  00033	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00037	48 8b ea	 mov	 rbp, rdx
  0003a	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003e	48 83 c1 18	 add	 rcx, 24
  00042	e8 00 00 00 00	 call	 ??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ ; std::unique_ptr<_iobuf,fp_deleter>::~unique_ptr<_iobuf,fp_deleter>
  00047	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?dtor$1@?0???1RGYOutput@@UEAA@XZ@4HA ENDP		; `RGYOutput::~RGYOutput'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$2@?0???1RGYOutput@@UEAA@XZ@4HA PROC		; `RGYOutput::~RGYOutput'::`1'::dtor$2
  0004e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00053	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00058	55		 push	 rbp
  00059	57		 push	 rdi
  0005a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005e	48 8b ea	 mov	 rbp, rdx
  00061	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00065	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00069	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0006e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
?dtor$2@?0???1RGYOutput@@UEAA@XZ@4HA ENDP		; `RGYOutput::~RGYOutput'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$3@?0???1RGYOutput@@UEAA@XZ@4HA PROC		; `RGYOutput::~RGYOutput'::`1'::dtor$3
  00075	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0007a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0007f	55		 push	 rbp
  00080	57		 push	 rdi
  00081	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00085	48 8b ea	 mov	 rbp, rdx
  00088	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0008c	48 83 c1 58	 add	 rcx, 88			; 00000058H
  00090	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00095	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00099	5f		 pop	 rdi
  0009a	5d		 pop	 rbp
  0009b	c3		 ret	 0
?dtor$3@?0???1RGYOutput@@UEAA@XZ@4HA ENDP		; `RGYOutput::~RGYOutput'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$4@?0???1RGYOutput@@UEAA@XZ@4HA PROC		; `RGYOutput::~RGYOutput'::`1'::dtor$4
  0009c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000a1	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000a6	55		 push	 rbp
  000a7	57		 push	 rdi
  000a8	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000ac	48 8b ea	 mov	 rbp, rdx
  000af	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000b3	48 81 c1 10 01
	00 00		 add	 rcx, 272		; 00000110H
  000ba	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  000bf	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000c3	5f		 pop	 rdi
  000c4	5d		 pop	 rbp
  000c5	c3		 ret	 0
?dtor$4@?0???1RGYOutput@@UEAA@XZ@4HA ENDP		; `RGYOutput::~RGYOutput'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$5@?0???1RGYOutput@@UEAA@XZ@4HA PROC		; `RGYOutput::~RGYOutput'::`1'::dtor$5
  000c6	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000cb	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000d0	55		 push	 rbp
  000d1	57		 push	 rdi
  000d2	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000d6	48 8b ea	 mov	 rbp, rdx
  000d9	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000dd	48 81 c1 20 01
	00 00		 add	 rcx, 288		; 00000120H
  000e4	e8 00 00 00 00	 call	 ??1?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ ; std::unique_ptr<char,malloc_deleter>::~unique_ptr<char,malloc_deleter>
  000e9	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000ed	5f		 pop	 rdi
  000ee	5d		 pop	 rbp
  000ef	c3		 ret	 0
?dtor$5@?0???1RGYOutput@@UEAA@XZ@4HA ENDP		; `RGYOutput::~RGYOutput'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$6@?0???1RGYOutput@@UEAA@XZ@4HA PROC		; `RGYOutput::~RGYOutput'::`1'::dtor$6
  000f0	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000f5	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000fa	55		 push	 rbp
  000fb	57		 push	 rdi
  000fc	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00100	48 8b ea	 mov	 rbp, rdx
  00103	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00107	48 81 c1 28 01
	00 00		 add	 rcx, 296		; 00000128H
  0010e	e8 00 00 00 00	 call	 ??1?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::~unique_ptr<unsigned char,aligned_malloc_deleter>
  00113	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00117	5f		 pop	 rdi
  00118	5d		 pop	 rbp
  00119	c3		 ret	 0
?dtor$6@?0???1RGYOutput@@UEAA@XZ@4HA ENDP		; `RGYOutput::~RGYOutput'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$7@?0???1RGYOutput@@UEAA@XZ@4HA PROC		; `RGYOutput::~RGYOutput'::`1'::dtor$7
  0011a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0011f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00124	55		 push	 rbp
  00125	57		 push	 rdi
  00126	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0012a	48 8b ea	 mov	 rbp, rdx
  0012d	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00131	48 81 c1 30 01
	00 00		 add	 rcx, 304		; 00000130H
  00138	e8 00 00 00 00	 call	 ??1?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::~unique_ptr<unsigned char,aligned_malloc_deleter>
  0013d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00141	5f		 pop	 rdi
  00142	5d		 pop	 rbp
  00143	c3		 ret	 0
?dtor$7@?0???1RGYOutput@@UEAA@XZ@4HA ENDP		; `RGYOutput::~RGYOutput'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
_TEXT	SEGMENT
this$ = 48
??0RGYOutput@@QEAA@XZ PROC				; RGYOutput::RGYOutput

; 75   :     m_pUVBuffer() {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7RGYOutput@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 61   :     m_pEncSatusInfo(),

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::shared_ptr<EncodeStatus>
  0003e	90		 npad	 1

; 62   :     m_fDest(),

  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c0 18	 add	 rax, 24
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ ; std::unique_ptr<_iobuf,fp_deleter>::unique_ptr<_iobuf,fp_deleter><fp_deleter,0>
  00050	90		 npad	 1

; 63   :     m_bOutputIsStdout(false),

  00051	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00056	c6 40 20 00	 mov	 BYTE PTR [rax+32], 0

; 64   :     m_bInited(false),

  0005a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005f	c6 40 21 00	 mov	 BYTE PTR [rax+33], 0

; 65   :     m_bNoOutput(false),

  00063	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00068	c6 40 22 00	 mov	 BYTE PTR [rax+34], 0

; 66   :     m_OutType(OUT_TYPE_BITSTREAM),

  0006c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00071	c7 40 24 01 00
	00 00		 mov	 DWORD PTR [rax+36], 1

; 67   :     m_bSourceHWMem(false),

  00078	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0007d	c6 40 28 00	 mov	 BYTE PTR [rax+40], 0

; 68   :     m_bY4mHeaderWritten(false),

  00081	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00086	c6 40 29 00	 mov	 BYTE PTR [rax+41], 0

; 69   :     m_strWriterName(),

  0008a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0008f	48 83 c0 30	 add	 rax, 48			; 00000030H
  00093	48 8b c8	 mov	 rcx, rax
  00096	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0009b	90		 npad	 1

; 70   :     m_strOutputInfo(),

  0009c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000a1	48 83 c0 58	 add	 rax, 88			; 00000058H
  000a5	48 8b c8	 mov	 rcx, rax
  000a8	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000ad	90		 npad	 1

; 71   :     m_VideoOutputInfo(),

  000ae	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000b3	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  000b9	48 8b f8	 mov	 rdi, rax
  000bc	33 c0		 xor	 eax, eax
  000be	b9 90 00 00 00	 mov	 ecx, 144		; 00000090H
  000c3	f3 aa		 rep stosb
  000c5	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000ca	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  000d0	48 8b c8	 mov	 rcx, rax
  000d3	e8 00 00 00 00	 call	 ??0VideoInfo@@QEAA@XZ

; 72   :     m_pPrintMes(),

  000d8	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000dd	48 05 10 01 00
	00		 add	 rax, 272		; 00000110H
  000e3	48 8b c8	 mov	 rcx, rax
  000e6	e8 00 00 00 00	 call	 ??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>
  000eb	90		 npad	 1

; 73   :     m_pOutputBuffer(),

  000ec	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000f1	48 05 20 01 00
	00		 add	 rax, 288		; 00000120H
  000f7	48 8b c8	 mov	 rcx, rax
  000fa	e8 00 00 00 00	 call	 ??$?0Umalloc_deleter@@$0A@@?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ ; std::unique_ptr<char,malloc_deleter>::unique_ptr<char,malloc_deleter><malloc_deleter,0>
  000ff	90		 npad	 1

; 74   :     m_pReadBuffer(),

  00100	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00105	48 05 28 01 00
	00		 add	 rax, 296		; 00000128H
  0010b	48 8b c8	 mov	 rcx, rax
  0010e	e8 00 00 00 00	 call	 ??$?0Ualigned_malloc_deleter@@$0A@@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::unique_ptr<unsigned char,aligned_malloc_deleter><aligned_malloc_deleter,0>
  00113	90		 npad	 1

; 75   :     m_pUVBuffer() {

  00114	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00119	48 05 30 01 00
	00		 add	 rax, 304		; 00000130H
  0011f	48 8b c8	 mov	 rcx, rax
  00122	e8 00 00 00 00	 call	 ??$?0Ualigned_malloc_deleter@@$0A@@?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::unique_ptr<unsigned char,aligned_malloc_deleter><aligned_malloc_deleter,0>
  00127	90		 npad	 1

; 76   :     memset(&m_VideoOutputInfo, 0, sizeof(m_VideoOutputInfo));

  00128	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0012d	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  00133	41 b8 90 00 00
	00		 mov	 r8d, 144		; 00000090H
  00139	33 d2		 xor	 edx, edx
  0013b	48 8b c8	 mov	 rcx, rax
  0013e	e8 00 00 00 00	 call	 memset
  00143	90		 npad	 1

; 77   : }

  00144	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00149	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0014d	5f		 pop	 rdi
  0014e	c3		 ret	 0
??0RGYOutput@@QEAA@XZ ENDP				; RGYOutput::RGYOutput
_TEXT	ENDS
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0RGYOutput@@QEAA@XZ@4HA PROC		; `RGYOutput::RGYOutput'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0RGYOutput@@QEAA@XZ@4HA ENDP		; `RGYOutput::RGYOutput'::`1'::dtor$0
this$ = 48
?dtor$1@?0???0RGYOutput@@QEAA@XZ@4HA PROC		; `RGYOutput::RGYOutput'::`1'::dtor$1
  00027	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00031	55		 push	 rbp
  00032	57		 push	 rdi
  00033	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00037	48 8b ea	 mov	 rbp, rdx
  0003a	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003e	48 83 c1 18	 add	 rcx, 24
  00042	e8 00 00 00 00	 call	 ??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ ; std::unique_ptr<_iobuf,fp_deleter>::~unique_ptr<_iobuf,fp_deleter>
  00047	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?dtor$1@?0???0RGYOutput@@QEAA@XZ@4HA ENDP		; `RGYOutput::RGYOutput'::`1'::dtor$1
this$ = 48
?dtor$2@?0???0RGYOutput@@QEAA@XZ@4HA PROC		; `RGYOutput::RGYOutput'::`1'::dtor$2
  0004e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00053	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00058	55		 push	 rbp
  00059	57		 push	 rdi
  0005a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005e	48 8b ea	 mov	 rbp, rdx
  00061	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00065	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00069	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0006e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
?dtor$2@?0???0RGYOutput@@QEAA@XZ@4HA ENDP		; `RGYOutput::RGYOutput'::`1'::dtor$2
this$ = 48
?dtor$3@?0???0RGYOutput@@QEAA@XZ@4HA PROC		; `RGYOutput::RGYOutput'::`1'::dtor$3
  00075	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0007a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0007f	55		 push	 rbp
  00080	57		 push	 rdi
  00081	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00085	48 8b ea	 mov	 rbp, rdx
  00088	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0008c	48 83 c1 58	 add	 rcx, 88			; 00000058H
  00090	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00095	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00099	5f		 pop	 rdi
  0009a	5d		 pop	 rbp
  0009b	c3		 ret	 0
?dtor$3@?0???0RGYOutput@@QEAA@XZ@4HA ENDP		; `RGYOutput::RGYOutput'::`1'::dtor$3
this$ = 48
?dtor$4@?0???0RGYOutput@@QEAA@XZ@4HA PROC		; `RGYOutput::RGYOutput'::`1'::dtor$4
  0009c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000a1	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000a6	55		 push	 rbp
  000a7	57		 push	 rdi
  000a8	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000ac	48 8b ea	 mov	 rbp, rdx
  000af	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000b3	48 81 c1 10 01
	00 00		 add	 rcx, 272		; 00000110H
  000ba	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  000bf	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000c3	5f		 pop	 rdi
  000c4	5d		 pop	 rbp
  000c5	c3		 ret	 0
?dtor$4@?0???0RGYOutput@@QEAA@XZ@4HA ENDP		; `RGYOutput::RGYOutput'::`1'::dtor$4
this$ = 48
?dtor$5@?0???0RGYOutput@@QEAA@XZ@4HA PROC		; `RGYOutput::RGYOutput'::`1'::dtor$5
  000c6	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000cb	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000d0	55		 push	 rbp
  000d1	57		 push	 rdi
  000d2	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000d6	48 8b ea	 mov	 rbp, rdx
  000d9	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000dd	48 81 c1 20 01
	00 00		 add	 rcx, 288		; 00000120H
  000e4	e8 00 00 00 00	 call	 ??1?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ ; std::unique_ptr<char,malloc_deleter>::~unique_ptr<char,malloc_deleter>
  000e9	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000ed	5f		 pop	 rdi
  000ee	5d		 pop	 rbp
  000ef	c3		 ret	 0
?dtor$5@?0???0RGYOutput@@QEAA@XZ@4HA ENDP		; `RGYOutput::RGYOutput'::`1'::dtor$5
this$ = 48
?dtor$6@?0???0RGYOutput@@QEAA@XZ@4HA PROC		; `RGYOutput::RGYOutput'::`1'::dtor$6
  000f0	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000f5	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000fa	55		 push	 rbp
  000fb	57		 push	 rdi
  000fc	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00100	48 8b ea	 mov	 rbp, rdx
  00103	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00107	48 81 c1 28 01
	00 00		 add	 rcx, 296		; 00000128H
  0010e	e8 00 00 00 00	 call	 ??1?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::~unique_ptr<unsigned char,aligned_malloc_deleter>
  00113	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00117	5f		 pop	 rdi
  00118	5d		 pop	 rbp
  00119	c3		 ret	 0
?dtor$6@?0???0RGYOutput@@QEAA@XZ@4HA ENDP		; `RGYOutput::RGYOutput'::`1'::dtor$6
this$ = 48
?dtor$7@?0???0RGYOutput@@QEAA@XZ@4HA PROC		; `RGYOutput::RGYOutput'::`1'::dtor$7
  0011a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0011f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00124	55		 push	 rbp
  00125	57		 push	 rdi
  00126	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0012a	48 8b ea	 mov	 rbp, rdx
  0012d	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00131	48 81 c1 30 01
	00 00		 add	 rcx, 304		; 00000130H
  00138	e8 00 00 00 00	 call	 ??1?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::~unique_ptr<unsigned char,aligned_malloc_deleter>
  0013d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00141	5f		 pop	 rdi
  00142	5d		 pop	 rbp
  00143	c3		 ret	 0
?dtor$7@?0???0RGYOutput@@QEAA@XZ@4HA ENDP		; `RGYOutput::RGYOutput'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0RGYOutput@@QEAA@XZ@4HA PROC		; `RGYOutput::RGYOutput'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0RGYOutput@@QEAA@XZ@4HA ENDP		; `RGYOutput::RGYOutput'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$1@?0???0RGYOutput@@QEAA@XZ@4HA PROC		; `RGYOutput::RGYOutput'::`1'::dtor$1
  00027	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00031	55		 push	 rbp
  00032	57		 push	 rdi
  00033	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00037	48 8b ea	 mov	 rbp, rdx
  0003a	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003e	48 83 c1 18	 add	 rcx, 24
  00042	e8 00 00 00 00	 call	 ??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ ; std::unique_ptr<_iobuf,fp_deleter>::~unique_ptr<_iobuf,fp_deleter>
  00047	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?dtor$1@?0???0RGYOutput@@QEAA@XZ@4HA ENDP		; `RGYOutput::RGYOutput'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$2@?0???0RGYOutput@@QEAA@XZ@4HA PROC		; `RGYOutput::RGYOutput'::`1'::dtor$2
  0004e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00053	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00058	55		 push	 rbp
  00059	57		 push	 rdi
  0005a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005e	48 8b ea	 mov	 rbp, rdx
  00061	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00065	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00069	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0006e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
?dtor$2@?0???0RGYOutput@@QEAA@XZ@4HA ENDP		; `RGYOutput::RGYOutput'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$3@?0???0RGYOutput@@QEAA@XZ@4HA PROC		; `RGYOutput::RGYOutput'::`1'::dtor$3
  00075	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0007a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0007f	55		 push	 rbp
  00080	57		 push	 rdi
  00081	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00085	48 8b ea	 mov	 rbp, rdx
  00088	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0008c	48 83 c1 58	 add	 rcx, 88			; 00000058H
  00090	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00095	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00099	5f		 pop	 rdi
  0009a	5d		 pop	 rbp
  0009b	c3		 ret	 0
?dtor$3@?0???0RGYOutput@@QEAA@XZ@4HA ENDP		; `RGYOutput::RGYOutput'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$4@?0???0RGYOutput@@QEAA@XZ@4HA PROC		; `RGYOutput::RGYOutput'::`1'::dtor$4
  0009c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000a1	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000a6	55		 push	 rbp
  000a7	57		 push	 rdi
  000a8	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000ac	48 8b ea	 mov	 rbp, rdx
  000af	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000b3	48 81 c1 10 01
	00 00		 add	 rcx, 272		; 00000110H
  000ba	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  000bf	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000c3	5f		 pop	 rdi
  000c4	5d		 pop	 rbp
  000c5	c3		 ret	 0
?dtor$4@?0???0RGYOutput@@QEAA@XZ@4HA ENDP		; `RGYOutput::RGYOutput'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$5@?0???0RGYOutput@@QEAA@XZ@4HA PROC		; `RGYOutput::RGYOutput'::`1'::dtor$5
  000c6	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000cb	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000d0	55		 push	 rbp
  000d1	57		 push	 rdi
  000d2	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000d6	48 8b ea	 mov	 rbp, rdx
  000d9	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000dd	48 81 c1 20 01
	00 00		 add	 rcx, 288		; 00000120H
  000e4	e8 00 00 00 00	 call	 ??1?$unique_ptr@DUmalloc_deleter@@@std@@QEAA@XZ ; std::unique_ptr<char,malloc_deleter>::~unique_ptr<char,malloc_deleter>
  000e9	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000ed	5f		 pop	 rdi
  000ee	5d		 pop	 rbp
  000ef	c3		 ret	 0
?dtor$5@?0???0RGYOutput@@QEAA@XZ@4HA ENDP		; `RGYOutput::RGYOutput'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$6@?0???0RGYOutput@@QEAA@XZ@4HA PROC		; `RGYOutput::RGYOutput'::`1'::dtor$6
  000f0	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000f5	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000fa	55		 push	 rbp
  000fb	57		 push	 rdi
  000fc	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00100	48 8b ea	 mov	 rbp, rdx
  00103	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00107	48 81 c1 28 01
	00 00		 add	 rcx, 296		; 00000128H
  0010e	e8 00 00 00 00	 call	 ??1?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::~unique_ptr<unsigned char,aligned_malloc_deleter>
  00113	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00117	5f		 pop	 rdi
  00118	5d		 pop	 rbp
  00119	c3		 ret	 0
?dtor$6@?0???0RGYOutput@@QEAA@XZ@4HA ENDP		; `RGYOutput::RGYOutput'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$7@?0???0RGYOutput@@QEAA@XZ@4HA PROC		; `RGYOutput::RGYOutput'::`1'::dtor$7
  0011a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0011f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00124	55		 push	 rbp
  00125	57		 push	 rdi
  00126	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0012a	48 8b ea	 mov	 rbp, rdx
  0012d	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00131	48 81 c1 30 01
	00 00		 add	 rcx, 304		; 00000130H
  00138	e8 00 00 00 00	 call	 ??1?$unique_ptr@EUaligned_malloc_deleter@@@std@@QEAA@XZ ; std::unique_ptr<unsigned char,aligned_malloc_deleter>::~unique_ptr<unsigned char,aligned_malloc_deleter>
  0013d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00141	5f		 pop	 rdi
  00142	5d		 pop	 rbp
  00143	c3		 ret	 0
?dtor$7@?0???0RGYOutput@@QEAA@XZ@4HA ENDP		; `RGYOutput::RGYOutput'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$min@PEAE@std@@YAAEBQEAEAEBQEAE0@Z
_TEXT	SEGMENT
_Left$ = 64
_Right$ = 72
??$min@PEAE@std@@YAAEBQEAEAEBQEAE0@Z PROC		; std::min<unsigned char *>, COMDAT

; 4490 :     const _Ty& _Left, const _Ty& _Right) _NOEXCEPT_COND(noexcept(_Right < _Left)) { // strengthened

$LN13:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4491 :     // return smaller of _Left and _Right
; 4492 :     if (_Right < _Left) {

  00023	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Left$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	0f 83 92 00 00
	00		 jae	 $LN8@min
$LN4@min:

; 4493 :         _STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00039	48 8b 44 24 40	 mov	 rax, QWORD PTR _Left$[rsp]
  0003e	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00043	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00046	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00049	72 02		 jb	 SHORT $LN7@min
  0004b	eb 6d		 jmp	 SHORT $LN10@min
$LN7@min:
  0004d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00054	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00059	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00060	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00065	45 33 c9	 xor	 r9d, r9d
  00068	41 b8 8d 11 00
	00		 mov	 r8d, 4493		; 0000118dH
  0006e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00075	b9 02 00 00 00	 mov	 ecx, 2
  0007a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00080	90		 npad	 1
  00081	83 f8 01	 cmp	 eax, 1
  00084	75 03		 jne	 SHORT $LN12@min
  00086	cc		 int	 3
  00087	33 c0		 xor	 eax, eax
$LN12@min:
  00089	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00092	41 b9 8d 11 00
	00		 mov	 r9d, 4493		; 0000118dH
  00098	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0009f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  000a6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  000ad	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000b3	90		 npad	 1
  000b4	33 c0		 xor	 eax, eax
  000b6	85 c0		 test	 eax, eax
  000b8	75 93		 jne	 SHORT $LN7@min
$LN10@min:
  000ba	33 c0		 xor	 eax, eax
  000bc	85 c0		 test	 eax, eax
  000be	0f 85 75 ff ff
	ff		 jne	 $LN4@min

; 4494 :         return _Right;

  000c4	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  000c9	eb 05		 jmp	 SHORT $LN1@min
$LN8@min:

; 4495 :     }
; 4496 : 
; 4497 :     return _Left;

  000cb	48 8b 44 24 40	 mov	 rax, QWORD PTR _Left$[rsp]
$LN1@min:

; 4498 : }

  000d0	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
??$min@PEAE@std@@YAAEBQEAEAEBQEAE0@Z ENDP		; std::min<unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.h
;	COMDAT ?csp@RGYFrame@@QEAA?AW4RGY_CSP@@XZ
_TEXT	SEGMENT
this$ = 48
?csp@RGYFrame@@QEAA?AW4RGY_CSP@@XZ PROC			; RGYFrame::csp, COMDAT

; 392  :     RGY_CSP csp() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 393  :         return csp_enc_to_rgy(m_surface.Info.FourCC);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	8b 48 30	 mov	 ecx, DWORD PTR [rax+48]
  00026	e8 00 00 00 00	 call	 ?csp_enc_to_rgy@@YA?AW4RGY_CSP@@I@Z ; csp_enc_to_rgy

; 394  :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?csp@RGYFrame@@QEAA?AW4RGY_CSP@@XZ ENDP			; RGYFrame::csp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.h
;	COMDAT ?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ
_TEXT	SEGMENT
cr$ = 40
__$ArrayPad$ = 80
this$ = 128
__$ReturnUdt$ = 136
?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ PROC		; RGYFrame::crop, COMDAT

; 384  :     sInputCrop crop() {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 83 ec 68	 sub	 rsp, 104		; 00000068H
  00010	48 8b fc	 mov	 rdi, rsp
  00013	b9 1a 00 00 00	 mov	 ecx, 26
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]
  00027	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002e	48 33 c4	 xor	 rax, rsp
  00031	48 89 44 24 50	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 385  :         sInputCrop cr;
; 386  :         cr.e.left = m_surface.Info.CropX;

  00036	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003e	0f b7 40 38	 movzx	 eax, WORD PTR [rax+56]
  00042	89 44 24 28	 mov	 DWORD PTR cr$[rsp], eax

; 387  :         cr.e.up = m_surface.Info.CropY;

  00046	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0004e	0f b7 40 3a	 movzx	 eax, WORD PTR [rax+58]
  00052	89 44 24 2c	 mov	 DWORD PTR cr$[rsp+4], eax

; 388  :         cr.e.right = m_surface.Info.Width - m_surface.Info.CropW - m_surface.Info.CropX;

  00056	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0005e	0f b7 40 34	 movzx	 eax, WORD PTR [rax+52]
  00062	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0006a	0f b7 49 3c	 movzx	 ecx, WORD PTR [rcx+60]
  0006e	2b c1		 sub	 eax, ecx
  00070	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00078	0f b7 49 38	 movzx	 ecx, WORD PTR [rcx+56]
  0007c	2b c1		 sub	 eax, ecx
  0007e	89 44 24 30	 mov	 DWORD PTR cr$[rsp+8], eax

; 389  :         cr.e.bottom = m_surface.Info.Height - m_surface.Info.CropH - m_surface.Info.CropY;

  00082	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0008a	0f b7 40 36	 movzx	 eax, WORD PTR [rax+54]
  0008e	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00096	0f b7 49 3e	 movzx	 ecx, WORD PTR [rcx+62]
  0009a	2b c1		 sub	 eax, ecx
  0009c	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000a4	0f b7 49 3a	 movzx	 ecx, WORD PTR [rcx+58]
  000a8	2b c1		 sub	 eax, ecx
  000aa	89 44 24 34	 mov	 DWORD PTR cr$[rsp+12], eax

; 390  :         return cr;

  000ae	48 8d 44 24 28	 lea	 rax, QWORD PTR cr$[rsp]
  000b3	48 8b bc 24 88
	00 00 00	 mov	 rdi, QWORD PTR __$ReturnUdt$[rsp]
  000bb	48 8b f0	 mov	 rsi, rax
  000be	b9 10 00 00 00	 mov	 ecx, 16
  000c3	f3 a4		 rep movsb
  000c5	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 391  :     }

  000cd	48 8b f8	 mov	 rdi, rax
  000d0	48 8b cc	 mov	 rcx, rsp
  000d3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ$rtcFrameData
  000da	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000df	48 8b c7	 mov	 rax, rdi
  000e2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000e7	48 33 cc	 xor	 rcx, rsp
  000ea	e8 00 00 00 00	 call	 __security_check_cookie
  000ef	48 83 c4 68	 add	 rsp, 104		; 00000068H
  000f3	5f		 pop	 rdi
  000f4	5e		 pop	 rsi
  000f5	c3		 ret	 0
?crop@RGYFrame@@QEAA?ATsInputCrop@@XZ ENDP		; RGYFrame::crop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.h
;	COMDAT ?height@RGYFrame@@QEAAIXZ
_TEXT	SEGMENT
this$ = 16
?height@RGYFrame@@QEAAIXZ PROC				; RGYFrame::height, COMDAT

; 381  :     uint32_t height() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 382  :         return m_surface.Info.CropH;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	0f b7 40 3e	 movzx	 eax, WORD PTR [rax+62]

; 383  :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?height@RGYFrame@@QEAAIXZ ENDP				; RGYFrame::height
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.h
;	COMDAT ?width@RGYFrame@@QEAAIXZ
_TEXT	SEGMENT
this$ = 16
?width@RGYFrame@@QEAAIXZ PROC				; RGYFrame::width, COMDAT

; 378  :     uint32_t width() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 379  :         return m_surface.Info.CropW;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	0f b7 40 3c	 movzx	 eax, WORD PTR [rax+60]

; 380  :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?width@RGYFrame@@QEAAIXZ ENDP				; RGYFrame::width
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.h
;	COMDAT ?pitch@RGYFrame@@QEAAIXZ
_TEXT	SEGMENT
this$ = 16
?pitch@RGYFrame@@QEAAIXZ PROC				; RGYFrame::pitch, COMDAT

; 375  :     uint32_t pitch() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 376  :         return m_surface.Data.Pitch;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	0f b7 80 86 00
	00 00		 movzx	 eax, WORD PTR [rax+134]

; 377  :     }

  00012	5f		 pop	 rdi
  00013	c3		 ret	 0
?pitch@RGYFrame@@QEAAIXZ ENDP				; RGYFrame::pitch
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.h
;	COMDAT ?ptrRGB@RGYFrame@@QEAAPEAEXZ
_TEXT	SEGMENT
tv67 = 32
tv76 = 40
this$ = 64
?ptrRGB@RGYFrame@@QEAAPEAEXZ PROC			; RGYFrame::ptrRGB, COMDAT

; 372  :     uint8_t *ptrRGB() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 373  :         return (std::min)((std::min)(m_surface.Data.R, m_surface.Data.G), m_surface.Data.B);

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 05 98 00 00
	00		 add	 rax, 152		; 00000098H
  00029	48 89 44 24 20	 mov	 QWORD PTR tv67[rsp], rax
  0002e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00033	48 81 c1 90 00
	00 00		 add	 rcx, 144		; 00000090H
  0003a	48 8b 54 24 40	 mov	 rdx, QWORD PTR this$[rsp]
  0003f	48 81 c2 88 00
	00 00		 add	 rdx, 136		; 00000088H
  00046	48 89 54 24 28	 mov	 QWORD PTR tv76[rsp], rdx
  0004b	48 8b d1	 mov	 rdx, rcx
  0004e	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv76[rsp]
  00053	e8 00 00 00 00	 call	 ??$min@PEAE@std@@YAAEBQEAEAEBQEAE0@Z ; std::min<unsigned char *>
  00058	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv67[rsp]
  0005d	48 8b d1	 mov	 rdx, rcx
  00060	48 8b c8	 mov	 rcx, rax
  00063	e8 00 00 00 00	 call	 ??$min@PEAE@std@@YAAEBQEAEAEBQEAE0@Z ; std::min<unsigned char *>
  00068	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 374  :     }

  0006b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006f	5f		 pop	 rdi
  00070	c3		 ret	 0
?ptrRGB@RGYFrame@@QEAAPEAEXZ ENDP			; RGYFrame::ptrRGB
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.h
;	COMDAT ?ptrV@RGYFrame@@QEAAPEAEXZ
_TEXT	SEGMENT
this$ = 16
?ptrV@RGYFrame@@QEAAPEAEXZ PROC				; RGYFrame::ptrV, COMDAT

; 369  :     uint8_t *ptrV() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 370  :         return m_surface.Data.V;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]

; 371  :     }

  00012	5f		 pop	 rdi
  00013	c3		 ret	 0
?ptrV@RGYFrame@@QEAAPEAEXZ ENDP				; RGYFrame::ptrV
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.h
;	COMDAT ?ptrU@RGYFrame@@QEAAPEAEXZ
_TEXT	SEGMENT
this$ = 16
?ptrU@RGYFrame@@QEAAPEAEXZ PROC				; RGYFrame::ptrU, COMDAT

; 366  :     uint8_t *ptrU() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 367  :         return m_surface.Data.U;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]

; 368  :     }

  00012	5f		 pop	 rdi
  00013	c3		 ret	 0
?ptrU@RGYFrame@@QEAAPEAEXZ ENDP				; RGYFrame::ptrU
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.h
;	COMDAT ?ptrUV@RGYFrame@@QEAAPEAEXZ
_TEXT	SEGMENT
this$ = 16
?ptrUV@RGYFrame@@QEAAPEAEXZ PROC			; RGYFrame::ptrUV, COMDAT

; 363  :     uint8_t *ptrUV() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 364  :         return m_surface.Data.UV;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]

; 365  :     }

  00012	5f		 pop	 rdi
  00013	c3		 ret	 0
?ptrUV@RGYFrame@@QEAAPEAEXZ ENDP			; RGYFrame::ptrUV
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.h
;	COMDAT ?ptrY@RGYFrame@@QEAAPEAEXZ
_TEXT	SEGMENT
this$ = 16
?ptrY@RGYFrame@@QEAAPEAEXZ PROC				; RGYFrame::ptrY, COMDAT

; 360  :     uint8_t *ptrY() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 361  :         return m_surface.Data.Y;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 80 88 00
	00 00		 mov	 rax, QWORD PTR [rax+136]

; 362  :     }

  00012	5f		 pop	 rdi
  00013	c3		 ret	 0
?ptrY@RGYFrame@@QEAAPEAEXZ ENDP				; RGYFrame::ptrY
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.h
;	COMDAT ?changeSize@RGYBitstream@@QEAA?AW4RGY_ERR@@_K@Z
_TEXT	SEGMENT
pData$ = 32
nDataLen$ = 56
this$ = 96
nNewSize$ = 104
?changeSize@RGYBitstream@@QEAA?AW4RGY_ERR@@_K@Z PROC	; RGYBitstream::changeSize, COMDAT

; 294  :     RGY_ERR changeSize(size_t nNewSize) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 295  :         uint8_t *pData = (uint8_t *)_aligned_malloc(nNewSize, 32);

  00023	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00028	48 8b 4c 24 68	 mov	 rcx, QWORD PTR nNewSize$[rsp]
  0002d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__aligned_malloc
  00033	48 89 44 24 20	 mov	 QWORD PTR pData$[rsp], rax

; 296  :         if (pData == nullptr) {

  00038	48 83 7c 24 20
	00		 cmp	 QWORD PTR pData$[rsp], 0
  0003e	75 0a		 jne	 SHORT $LN2@changeSize

; 297  :             return RGY_ERR_NULL_PTR;

  00040	b8 fe ff ff ff	 mov	 eax, -2
  00045	e9 86 00 00 00	 jmp	 $LN1@changeSize
$LN2@changeSize:

; 298  :         }
; 299  : 
; 300  :         size_t nDataLen = m_bitstream.DataLength;

  0004a	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0004f	8b 40 34	 mov	 eax, DWORD PTR [rax+52]
  00052	48 89 44 24 38	 mov	 QWORD PTR nDataLen$[rsp], rax

; 301  :         if (m_bitstream.DataLength) {

  00057	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005c	83 78 34 00	 cmp	 DWORD PTR [rax+52], 0
  00060	74 30		 je	 SHORT $LN3@changeSize

; 302  :             memcpy(pData, m_bitstream.Data + m_bitstream.DataOffset, (std::min)(nDataLen, nNewSize));

  00062	48 8d 54 24 68	 lea	 rdx, QWORD PTR nNewSize$[rsp]
  00067	48 8d 4c 24 38	 lea	 rcx, QWORD PTR nDataLen$[rsp]
  0006c	e8 00 00 00 00	 call	 ??$min@_K@std@@YAAEB_KAEB_K0@Z ; std::min<unsigned __int64>
  00071	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00076	8b 49 30	 mov	 ecx, DWORD PTR [rcx+48]
  00079	48 8b 54 24 60	 mov	 rdx, QWORD PTR this$[rsp]
  0007e	48 03 4a 28	 add	 rcx, QWORD PTR [rdx+40]
  00082	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00085	48 8b d1	 mov	 rdx, rcx
  00088	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pData$[rsp]
  0008d	e8 00 00 00 00	 call	 memcpy
$LN3@changeSize:

; 303  :         }
; 304  :         clear();

  00092	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00097	e8 00 00 00 00	 call	 ?clear@RGYBitstream@@QEAAXXZ ; RGYBitstream::clear

; 305  : 
; 306  :         m_bitstream.Data       = pData;

  0009c	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  000a1	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pData$[rsp]
  000a6	48 89 48 28	 mov	 QWORD PTR [rax+40], rcx

; 307  :         m_bitstream.DataOffset = 0;

  000aa	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  000af	c7 40 30 00 00
	00 00		 mov	 DWORD PTR [rax+48], 0

; 308  :         m_bitstream.DataLength = (uint32_t)nDataLen;

  000b6	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  000bb	8b 4c 24 38	 mov	 ecx, DWORD PTR nDataLen$[rsp]
  000bf	89 48 34	 mov	 DWORD PTR [rax+52], ecx

; 309  :         m_bitstream.MaxLength  = (uint32_t)nNewSize;

  000c2	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  000c7	8b 4c 24 68	 mov	 ecx, DWORD PTR nNewSize$[rsp]
  000cb	89 48 38	 mov	 DWORD PTR [rax+56], ecx

; 310  : 
; 311  :         return RGY_ERR_NONE;

  000ce	33 c0		 xor	 eax, eax
$LN1@changeSize:

; 312  :     }

  000d0	48 8b f8	 mov	 rdi, rax
  000d3	48 8b cc	 mov	 rcx, rsp
  000d6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?changeSize@RGYBitstream@@QEAA?AW4RGY_ERR@@_K@Z$rtcFrameData
  000dd	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000e2	48 8b c7	 mov	 rax, rdi
  000e5	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000e9	5f		 pop	 rdi
  000ea	c3		 ret	 0
?changeSize@RGYBitstream@@QEAA?AW4RGY_ERR@@_K@Z ENDP	; RGYBitstream::changeSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.h
;	COMDAT ?trim@RGYBitstream@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?trim@RGYBitstream@@QEAAXXZ PROC			; RGYBitstream::trim, COMDAT

; 240  :     void trim() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 241  :         if (m_bitstream.DataOffset > 0 && m_bitstream.DataLength > 0) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	83 78 30 00	 cmp	 DWORD PTR [rax+48], 0
  00027	76 44		 jbe	 SHORT $LN2@trim
  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	83 78 34 00	 cmp	 DWORD PTR [rax+52], 0
  00032	76 39		 jbe	 SHORT $LN2@trim

; 242  :             memmove(m_bitstream.Data, m_bitstream.Data + m_bitstream.DataOffset, m_bitstream.DataLength);

  00034	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00039	8b 40 34	 mov	 eax, DWORD PTR [rax+52]
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	8b 49 30	 mov	 ecx, DWORD PTR [rcx+48]
  00044	48 8b 54 24 30	 mov	 rdx, QWORD PTR this$[rsp]
  00049	48 03 4a 28	 add	 rcx, QWORD PTR [rdx+40]
  0004d	44 8b c0	 mov	 r8d, eax
  00050	48 8b d1	 mov	 rdx, rcx
  00053	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00058	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  0005c	e8 00 00 00 00	 call	 memmove

; 243  :             m_bitstream.DataOffset = 0;

  00061	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00066	c7 40 30 00 00
	00 00		 mov	 DWORD PTR [rax+48], 0
$LN2@trim:

; 244  :         }
; 245  :     }

  0006d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00071	5f		 pop	 rdi
  00072	c3		 ret	 0
?trim@RGYBitstream@@QEAAXXZ ENDP			; RGYBitstream::trim
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.h
;	COMDAT ?clear@RGYBitstream@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?clear@RGYBitstream@@QEAAXXZ PROC			; RGYBitstream::clear, COMDAT

; 220  :     void clear() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 221  :         if (m_bitstream.Data) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 28 00	 cmp	 QWORD PTR [rax+40], 0
  00028	74 0f		 je	 SHORT $LN2@clear

; 222  :             _aligned_free(m_bitstream.Data);

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00033	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__aligned_free
$LN2@clear:

; 223  :         }
; 224  :         memset(&m_bitstream, 0, sizeof(m_bitstream));

  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	41 b8 48 00 00
	00		 mov	 r8d, 72			; 00000048H
  00044	33 d2		 xor	 edx, edx
  00046	48 8b c8	 mov	 rcx, rax
  00049	e8 00 00 00 00	 call	 memset

; 225  :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?clear@RGYBitstream@@QEAAXXZ ENDP			; RGYBitstream::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.h
;	COMDAT ?bufsize@RGYBitstream@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 16
?bufsize@RGYBitstream@@QEBA_KXZ PROC			; RGYBitstream::bufsize, COMDAT

; 192  :     size_t bufsize() const {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 193  :         return m_bitstream.MaxLength;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	8b 40 38	 mov	 eax, DWORD PTR [rax+56]

; 194  :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?bufsize@RGYBitstream@@QEBA_KXZ ENDP			; RGYBitstream::bufsize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.h
;	COMDAT ?setSize@RGYBitstream@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
size$ = 24
?setSize@RGYBitstream@@QEAAX_K@Z PROC			; RGYBitstream::setSize, COMDAT

; 176  :     void setSize(size_t size) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 177  :         m_bitstream.DataLength = (uint32_t)size;

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	8b 4c 24 18	 mov	 ecx, DWORD PTR size$[rsp]
  00014	89 48 34	 mov	 DWORD PTR [rax+52], ecx

; 178  :     }

  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
?setSize@RGYBitstream@@QEAAX_K@Z ENDP			; RGYBitstream::setSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.h
;	COMDAT ?size@RGYBitstream@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 16
?size@RGYBitstream@@QEBA_KXZ PROC			; RGYBitstream::size, COMDAT

; 172  :     size_t size() const {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 173  :         return m_bitstream.DataLength;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	8b 40 34	 mov	 eax, DWORD PTR [rax+52]

; 174  :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?size@RGYBitstream@@QEBA_KXZ ENDP			; RGYBitstream::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.h
;	COMDAT ?frametype@RGYBitstream@@QEBA?AW4RGY_FRAMETYPE@@XZ
_TEXT	SEGMENT
this$ = 48
?frametype@RGYBitstream@@QEBA?AW4RGY_FRAMETYPE@@XZ PROC	; RGYBitstream::frametype, COMDAT

; 140  :     RGY_FRAMETYPE frametype() const {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 141  :         return frametype_enc_to_rgy(m_bitstream.FrameType);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b7 40 3e	 movzx	 eax, WORD PTR [rax+62]
  00027	8b c8		 mov	 ecx, eax
  00029	e8 00 00 00 00	 call	 ?frametype_enc_to_rgy@@YA?AW4RGY_FRAMETYPE@@I@Z ; frametype_enc_to_rgy

; 142  :     }

  0002e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00032	5f		 pop	 rdi
  00033	c3		 ret	 0
?frametype@RGYBitstream@@QEBA?AW4RGY_FRAMETYPE@@XZ ENDP	; RGYBitstream::frametype
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.h
;	COMDAT ?data@RGYBitstream@@QEBAPEAEXZ
_TEXT	SEGMENT
this$ = 16
?data@RGYBitstream@@QEBAPEAEXZ PROC			; RGYBitstream::data, COMDAT

; 128  :     uint8_t *data() const {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 129  :         return m_bitstream.Data + m_bitstream.DataOffset;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	8b 40 30	 mov	 eax, DWORD PTR [rax+48]
  0000e	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00013	48 03 41 28	 add	 rax, QWORD PTR [rcx+40]

; 130  :     }

  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
?data@RGYBitstream@@QEBAPEAEXZ ENDP			; RGYBitstream::data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.h
_TEXT	SEGMENT
type$ = 36
tv67 = 52
tv72 = 56
tv77 = 60
tv82 = 64
tv87 = 68
tv92 = 72
tv129 = 76
tv134 = 80
frametype$ = 112
?frametype_enc_to_rgy@@YA?AW4RGY_FRAMETYPE@@I@Z PROC	; frametype_enc_to_rgy

; 72   : static inline RGY_FRAMETYPE frametype_enc_to_rgy(const uint32_t frametype) {

  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	57		 push	 rdi
  00005	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00009	48 8b fc	 mov	 rdi, rsp
  0000c	b9 18 00 00 00	 mov	 ecx, 24
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	8b 4c 24 70	 mov	 ecx, DWORD PTR [rsp+112]

; 73   :     RGY_FRAMETYPE type = RGY_FRAMETYPE_UNKNOWN;

  0001c	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR type$[rsp], 0

; 74   :     type |=  (MFX_FRAMETYPE_IDR  & frametype) ? RGY_FRAMETYPE_IDR : RGY_FRAMETYPE_UNKNOWN;

  00024	8b 44 24 70	 mov	 eax, DWORD PTR frametype$[rsp]
  00028	25 80 00 00 00	 and	 eax, 128		; 00000080H
  0002d	85 c0		 test	 eax, eax
  0002f	74 0a		 je	 SHORT $LN3@frametype_
  00031	c7 44 24 34 80
	00 00 00	 mov	 DWORD PTR tv67[rsp], 128 ; 00000080H
  00039	eb 08		 jmp	 SHORT $LN4@frametype_
$LN3@frametype_:
  0003b	c7 44 24 34 00
	00 00 00	 mov	 DWORD PTR tv67[rsp], 0
$LN4@frametype_:
  00043	8b 54 24 34	 mov	 edx, DWORD PTR tv67[rsp]
  00047	48 8d 4c 24 24	 lea	 rcx, QWORD PTR type$[rsp]
  0004c	e8 00 00 00 00	 call	 ??_5@YA?AW4RGY_FRAMETYPE@@AEAW40@W40@@Z ; operator|=

; 75   :     type |=  (MFX_FRAMETYPE_I    & frametype) ? RGY_FRAMETYPE_I   : RGY_FRAMETYPE_UNKNOWN;

  00051	8b 44 24 70	 mov	 eax, DWORD PTR frametype$[rsp]
  00055	83 e0 01	 and	 eax, 1
  00058	85 c0		 test	 eax, eax
  0005a	74 0a		 je	 SHORT $LN5@frametype_
  0005c	c7 44 24 38 01
	00 00 00	 mov	 DWORD PTR tv72[rsp], 1
  00064	eb 08		 jmp	 SHORT $LN6@frametype_
$LN5@frametype_:
  00066	c7 44 24 38 00
	00 00 00	 mov	 DWORD PTR tv72[rsp], 0
$LN6@frametype_:
  0006e	8b 54 24 38	 mov	 edx, DWORD PTR tv72[rsp]
  00072	48 8d 4c 24 24	 lea	 rcx, QWORD PTR type$[rsp]
  00077	e8 00 00 00 00	 call	 ??_5@YA?AW4RGY_FRAMETYPE@@AEAW40@W40@@Z ; operator|=

; 76   :     type |=  (MFX_FRAMETYPE_P    & frametype) ? RGY_FRAMETYPE_P   : RGY_FRAMETYPE_UNKNOWN;

  0007c	8b 44 24 70	 mov	 eax, DWORD PTR frametype$[rsp]
  00080	83 e0 02	 and	 eax, 2
  00083	85 c0		 test	 eax, eax
  00085	74 0a		 je	 SHORT $LN7@frametype_
  00087	c7 44 24 3c 02
	00 00 00	 mov	 DWORD PTR tv77[rsp], 2
  0008f	eb 08		 jmp	 SHORT $LN8@frametype_
$LN7@frametype_:
  00091	c7 44 24 3c 00
	00 00 00	 mov	 DWORD PTR tv77[rsp], 0
$LN8@frametype_:
  00099	8b 54 24 3c	 mov	 edx, DWORD PTR tv77[rsp]
  0009d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR type$[rsp]
  000a2	e8 00 00 00 00	 call	 ??_5@YA?AW4RGY_FRAMETYPE@@AEAW40@W40@@Z ; operator|=

; 77   :     type |=  (MFX_FRAMETYPE_B    & frametype) ? RGY_FRAMETYPE_B   : RGY_FRAMETYPE_UNKNOWN;

  000a7	8b 44 24 70	 mov	 eax, DWORD PTR frametype$[rsp]
  000ab	83 e0 04	 and	 eax, 4
  000ae	85 c0		 test	 eax, eax
  000b0	74 0a		 je	 SHORT $LN9@frametype_
  000b2	c7 44 24 40 04
	00 00 00	 mov	 DWORD PTR tv82[rsp], 4
  000ba	eb 08		 jmp	 SHORT $LN10@frametype_
$LN9@frametype_:
  000bc	c7 44 24 40 00
	00 00 00	 mov	 DWORD PTR tv82[rsp], 0
$LN10@frametype_:
  000c4	8b 54 24 40	 mov	 edx, DWORD PTR tv82[rsp]
  000c8	48 8d 4c 24 24	 lea	 rcx, QWORD PTR type$[rsp]
  000cd	e8 00 00 00 00	 call	 ??_5@YA?AW4RGY_FRAMETYPE@@AEAW40@W40@@Z ; operator|=

; 78   :     type |=  (MFX_FRAMETYPE_xIDR & frametype) ? RGY_FRAMETYPE_xIDR : RGY_FRAMETYPE_UNKNOWN;

  000d2	8b 44 24 70	 mov	 eax, DWORD PTR frametype$[rsp]
  000d6	25 00 80 00 00	 and	 eax, 32768		; 00008000H
  000db	85 c0		 test	 eax, eax
  000dd	74 0a		 je	 SHORT $LN11@frametype_
  000df	c7 44 24 44 00
	80 00 00	 mov	 DWORD PTR tv87[rsp], 32768 ; 00008000H
  000e7	eb 08		 jmp	 SHORT $LN12@frametype_
$LN11@frametype_:
  000e9	c7 44 24 44 00
	00 00 00	 mov	 DWORD PTR tv87[rsp], 0
$LN12@frametype_:
  000f1	8b 54 24 44	 mov	 edx, DWORD PTR tv87[rsp]
  000f5	48 8d 4c 24 24	 lea	 rcx, QWORD PTR type$[rsp]
  000fa	e8 00 00 00 00	 call	 ??_5@YA?AW4RGY_FRAMETYPE@@AEAW40@W40@@Z ; operator|=

; 79   :     type |=  (MFX_FRAMETYPE_xI   & frametype) ? RGY_FRAMETYPE_xI   : RGY_FRAMETYPE_UNKNOWN;

  000ff	8b 44 24 70	 mov	 eax, DWORD PTR frametype$[rsp]
  00103	25 00 01 00 00	 and	 eax, 256		; 00000100H
  00108	85 c0		 test	 eax, eax
  0010a	74 0a		 je	 SHORT $LN13@frametype_
  0010c	c7 44 24 48 00
	01 00 00	 mov	 DWORD PTR tv92[rsp], 256 ; 00000100H
  00114	eb 08		 jmp	 SHORT $LN14@frametype_
$LN13@frametype_:
  00116	c7 44 24 48 00
	00 00 00	 mov	 DWORD PTR tv92[rsp], 0
$LN14@frametype_:
  0011e	8b 54 24 48	 mov	 edx, DWORD PTR tv92[rsp]
  00122	48 8d 4c 24 24	 lea	 rcx, QWORD PTR type$[rsp]
  00127	e8 00 00 00 00	 call	 ??_5@YA?AW4RGY_FRAMETYPE@@AEAW40@W40@@Z ; operator|=

; 80   :     type |=  (MFX_FRAMETYPE_xP   & frametype) ? RGY_FRAMETYPE_xP   : RGY_FRAMETYPE_UNKNOWN;

  0012c	8b 44 24 70	 mov	 eax, DWORD PTR frametype$[rsp]
  00130	25 00 02 00 00	 and	 eax, 512		; 00000200H
  00135	85 c0		 test	 eax, eax
  00137	74 0a		 je	 SHORT $LN15@frametype_
  00139	c7 44 24 4c 00
	02 00 00	 mov	 DWORD PTR tv129[rsp], 512 ; 00000200H
  00141	eb 08		 jmp	 SHORT $LN16@frametype_
$LN15@frametype_:
  00143	c7 44 24 4c 00
	00 00 00	 mov	 DWORD PTR tv129[rsp], 0
$LN16@frametype_:
  0014b	8b 54 24 4c	 mov	 edx, DWORD PTR tv129[rsp]
  0014f	48 8d 4c 24 24	 lea	 rcx, QWORD PTR type$[rsp]
  00154	e8 00 00 00 00	 call	 ??_5@YA?AW4RGY_FRAMETYPE@@AEAW40@W40@@Z ; operator|=

; 81   :     type |=  (MFX_FRAMETYPE_xB   & frametype) ? RGY_FRAMETYPE_xB   : RGY_FRAMETYPE_UNKNOWN;

  00159	8b 44 24 70	 mov	 eax, DWORD PTR frametype$[rsp]
  0015d	25 00 04 00 00	 and	 eax, 1024		; 00000400H
  00162	85 c0		 test	 eax, eax
  00164	74 0a		 je	 SHORT $LN17@frametype_
  00166	c7 44 24 50 00
	04 00 00	 mov	 DWORD PTR tv134[rsp], 1024 ; 00000400H
  0016e	eb 08		 jmp	 SHORT $LN18@frametype_
$LN17@frametype_:
  00170	c7 44 24 50 00
	00 00 00	 mov	 DWORD PTR tv134[rsp], 0
$LN18@frametype_:
  00178	8b 54 24 50	 mov	 edx, DWORD PTR tv134[rsp]
  0017c	48 8d 4c 24 24	 lea	 rcx, QWORD PTR type$[rsp]
  00181	e8 00 00 00 00	 call	 ??_5@YA?AW4RGY_FRAMETYPE@@AEAW40@W40@@Z ; operator|=

; 82   :     return type;

  00186	8b 44 24 24	 mov	 eax, DWORD PTR type$[rsp]

; 83   : }

  0018a	8b f8		 mov	 edi, eax
  0018c	48 8b cc	 mov	 rcx, rsp
  0018f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?frametype_enc_to_rgy@@YA?AW4RGY_FRAMETYPE@@I@Z$rtcFrameData
  00196	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0019b	8b c7		 mov	 eax, edi
  0019d	48 83 c4 60	 add	 rsp, 96			; 00000060H
  001a1	5f		 pop	 rdi
  001a2	c3		 ret	 0
?frametype_enc_to_rgy@@YA?AW4RGY_FRAMETYPE@@I@Z ENDP	; frametype_enc_to_rgy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_prm.h
_TEXT	SEGMENT
a$ = 16
b$ = 24
??I@YA?AW4MemType@@W40@0@Z PROC				; operator&

; 77   : static MemType operator&(MemType a, MemType b) {

  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00008	57		 push	 rdi

; 78   :     return (MemType)((uint32_t)a & (uint32_t)b);

  00009	8b 44 24 18	 mov	 eax, DWORD PTR b$[rsp]
  0000d	8b 4c 24 10	 mov	 ecx, DWORD PTR a$[rsp]
  00011	23 c8		 and	 ecx, eax
  00013	8b c1		 mov	 eax, ecx

; 79   : }

  00015	5f		 pop	 rdi
  00016	c3		 ret	 0
??I@YA?AW4MemType@@W40@0@Z ENDP				; operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_prm.h
_TEXT	SEGMENT
a$ = 16
b$ = 24
??U@YA?AW4MemType@@W40@0@Z PROC				; operator|

; 68   : static MemType operator|(MemType a, MemType b) {

  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00008	57		 push	 rdi

; 69   :     return (MemType)((uint32_t)a | (uint32_t)b);

  00009	8b 44 24 18	 mov	 eax, DWORD PTR b$[rsp]
  0000d	8b 4c 24 10	 mov	 ecx, DWORD PTR a$[rsp]
  00011	0b c8		 or	 ecx, eax
  00013	8b c1		 mov	 eax, ecx

; 70   : }

  00015	5f		 pop	 rdi
  00016	c3		 ret	 0
??U@YA?AW4MemType@@W40@0@Z ENDP				; operator|
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	0f 84 85 00 00
	00		 je	 $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  0006c	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00071	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
  00086	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00087	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  0008c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00091	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00094	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00097	48 2b c1	 sub	 rax, rcx
  0009a	48 99		 cdq
  0009c	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  000a1	48 f7 f9	 idiv	 rcx
  000a4	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000a9	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000ae	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  000b3	90		 npad	 1
  000b4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000b9	4c 8b c1	 mov	 r8, rcx
  000bc	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c1	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000c4	48 8b c8	 mov	 rcx, rax
  000c7	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
  000cc	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000cd	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d2	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000d9	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000de	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000e5	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000ea	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000f1	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000f5	5f		 pop	 rdi
  000f6	c3		 ret	 0
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unchecked_end, COMDAT

; 1423 :     pointer _Unchecked_end() noexcept { // return pointer for end of mutable sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1424 :         return _Mypair._Myval2._Mylast;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 1425 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unchecked_begin, COMDAT

; 1415 :     pointer _Unchecked_begin() noexcept { // return pointer for beginning of mutable sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1416 :         return _Mypair._Myval2._Myfirst;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1417 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S5$ = 52
$T4 = 68
this$ = 96
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S5$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S5$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Count$[rsp], 40 ; 00000028H
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_avutil.h
_TEXT	SEGMENT
i$1 = 0
codec$ = 32
?getAVCodecId@@YA?BW4AVCodecID@@W4RGY_CODEC@@@Z PROC	; getAVCodecId

; 90   : static const inline AVCodecID getAVCodecId(RGY_CODEC codec) {

  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	57		 push	 rdi
  00005	48 83 ec 10	 sub	 rsp, 16
  00009	48 8b fc	 mov	 rdi, rsp
  0000c	b9 04 00 00 00	 mov	 ecx, 4
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	8b 4c 24 20	 mov	 ecx, DWORD PTR [rsp+32]

; 91   :     for (int i = 0; i < _countof(HW_DECODE_LIST); i++)

  0001c	c7 04 24 00 00
	00 00		 mov	 DWORD PTR i$1[rsp], 0
  00023	eb 08		 jmp	 SHORT $LN4@getAVCodec
$LN2@getAVCodec:
  00025	8b 04 24	 mov	 eax, DWORD PTR i$1[rsp]
  00028	ff c0		 inc	 eax
  0002a	89 04 24	 mov	 DWORD PTR i$1[rsp], eax
$LN4@getAVCodec:
  0002d	48 63 04 24	 movsxd	 rax, DWORD PTR i$1[rsp]
  00031	48 83 f8 06	 cmp	 rax, 6
  00035	73 27		 jae	 SHORT $LN3@getAVCodec

; 92   :         if (HW_DECODE_LIST[i].rgy_codec == codec)

  00037	48 63 04 24	 movsxd	 rax, DWORD PTR i$1[rsp]
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?HW_DECODE_LIST@@3QBUCodecMap@@B
  00042	8b 54 24 20	 mov	 edx, DWORD PTR codec$[rsp]
  00046	39 54 c1 04	 cmp	 DWORD PTR [rcx+rax*8+4], edx
  0004a	75 10		 jne	 SHORT $LN5@getAVCodec

; 93   :             return HW_DECODE_LIST[i].avcodec_id;

  0004c	48 63 04 24	 movsxd	 rax, DWORD PTR i$1[rsp]
  00050	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?HW_DECODE_LIST@@3QBUCodecMap@@B
  00057	8b 04 c1	 mov	 eax, DWORD PTR [rcx+rax*8]
  0005a	eb 04		 jmp	 SHORT $LN1@getAVCodec
$LN5@getAVCodec:
  0005c	eb c7		 jmp	 SHORT $LN2@getAVCodec
$LN3@getAVCodec:

; 94   :     return AV_CODEC_ID_NONE;

  0005e	33 c0		 xor	 eax, eax
$LN1@getAVCodec:

; 95   : }

  00060	48 83 c4 10	 add	 rsp, 16
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
?getAVCodecId@@YA?BW4AVCodecID@@W4RGY_CODEC@@@Z ENDP	; getAVCodecId
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ
_TEXT	SEGMENT
this$ = 48
??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ PROC ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>, COMDAT

; 1204 :     _NODISCARD _Ty2* operator->() const noexcept { // return pointer to resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1205 :         return get();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ ; std::_Ptr_base<RGYLog>::get

; 1206 :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ENDP ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_status.h
;	COMDAT ?SetOutputData@EncodeStatus@@QEAAXW4RGY_FRAMETYPE@@_KI@Z
_TEXT	SEGMENT
this$ = 48
picType$ = 56
outputBytes$ = 64
frameAvgQP$ = 72
?SetOutputData@EncodeStatus@@QEAAXW4RGY_FRAMETYPE@@_KI@Z PROC ; EncodeStatus::SetOutputData, COMDAT

; 132  :     void SetOutputData(RGY_FRAMETYPE picType, uint64_t outputBytes, uint32_t frameAvgQP) {

$LN3:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 08 00 00 00	 mov	 ecx, 8
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 133  :         m_sData.outFileSize    += outputBytes;

  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00035	48 03 44 24 40	 add	 rax, QWORD PTR outputBytes$[rsp]
  0003a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003f	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 134  :         m_sData.frameOut       += 1;

  00043	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00048	8b 40 24	 mov	 eax, DWORD PTR [rax+36]
  0004b	ff c0		 inc	 eax
  0004d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00052	89 41 24	 mov	 DWORD PTR [rcx+36], eax

; 135  :         m_sData.frameOutIDR    += (picType & RGY_FRAMETYPE_IDR) >> 7;

  00055	ba 80 00 00 00	 mov	 edx, 128		; 00000080H
  0005a	8b 4c 24 38	 mov	 ecx, DWORD PTR picType$[rsp]
  0005e	e8 00 00 00 00	 call	 ??I@YA?AW4RGY_FRAMETYPE@@W40@0@Z ; operator&
  00063	c1 e8 07	 shr	 eax, 7
  00066	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0006b	03 41 28	 add	 eax, DWORD PTR [rcx+40]
  0006e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00073	89 41 28	 mov	 DWORD PTR [rcx+40], eax

; 136  :         m_sData.frameOutI      += (picType & RGY_FRAMETYPE_IDR) >> 7;

  00076	ba 80 00 00 00	 mov	 edx, 128		; 00000080H
  0007b	8b 4c 24 38	 mov	 ecx, DWORD PTR picType$[rsp]
  0007f	e8 00 00 00 00	 call	 ??I@YA?AW4RGY_FRAMETYPE@@W40@0@Z ; operator&
  00084	c1 e8 07	 shr	 eax, 7
  00087	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0008c	03 41 2c	 add	 eax, DWORD PTR [rcx+44]
  0008f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00094	89 41 2c	 mov	 DWORD PTR [rcx+44], eax

; 137  :         m_sData.frameOutI      += (picType & RGY_FRAMETYPE_I);

  00097	ba 01 00 00 00	 mov	 edx, 1
  0009c	8b 4c 24 38	 mov	 ecx, DWORD PTR picType$[rsp]
  000a0	e8 00 00 00 00	 call	 ??I@YA?AW4RGY_FRAMETYPE@@W40@0@Z ; operator&
  000a5	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  000aa	03 41 2c	 add	 eax, DWORD PTR [rcx+44]
  000ad	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  000b2	89 41 2c	 mov	 DWORD PTR [rcx+44], eax

; 138  :         m_sData.frameOutP      += (picType & RGY_FRAMETYPE_P) >> 1;

  000b5	ba 02 00 00 00	 mov	 edx, 2
  000ba	8b 4c 24 38	 mov	 ecx, DWORD PTR picType$[rsp]
  000be	e8 00 00 00 00	 call	 ??I@YA?AW4RGY_FRAMETYPE@@W40@0@Z ; operator&
  000c3	d1 e8		 shr	 eax, 1
  000c5	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  000ca	03 41 30	 add	 eax, DWORD PTR [rcx+48]
  000cd	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  000d2	89 41 30	 mov	 DWORD PTR [rcx+48], eax

; 139  :         m_sData.frameOutB      += (picType & RGY_FRAMETYPE_B) >> 2;

  000d5	ba 04 00 00 00	 mov	 edx, 4
  000da	8b 4c 24 38	 mov	 ecx, DWORD PTR picType$[rsp]
  000de	e8 00 00 00 00	 call	 ??I@YA?AW4RGY_FRAMETYPE@@W40@0@Z ; operator&
  000e3	c1 e8 02	 shr	 eax, 2
  000e6	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  000eb	03 41 34	 add	 eax, DWORD PTR [rcx+52]
  000ee	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  000f3	89 41 34	 mov	 DWORD PTR [rcx+52], eax

; 140  :         m_sData.frameOutISize  += (0-((picType & RGY_FRAMETYPE_IDR) >> 7)) & outputBytes;

  000f6	ba 80 00 00 00	 mov	 edx, 128		; 00000080H
  000fb	8b 4c 24 38	 mov	 ecx, DWORD PTR picType$[rsp]
  000ff	e8 00 00 00 00	 call	 ??I@YA?AW4RGY_FRAMETYPE@@W40@0@Z ; operator&
  00104	c1 e8 07	 shr	 eax, 7
  00107	33 c9		 xor	 ecx, ecx
  00109	2b c8		 sub	 ecx, eax
  0010b	8b c1		 mov	 eax, ecx
  0010d	8b c0		 mov	 eax, eax
  0010f	48 23 44 24 40	 and	 rax, QWORD PTR outputBytes$[rsp]
  00114	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00119	48 03 41 38	 add	 rax, QWORD PTR [rcx+56]
  0011d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00122	48 89 41 38	 mov	 QWORD PTR [rcx+56], rax

; 141  :         m_sData.frameOutISize  += (0- (picType & RGY_FRAMETYPE_I))         & outputBytes;

  00126	ba 01 00 00 00	 mov	 edx, 1
  0012b	8b 4c 24 38	 mov	 ecx, DWORD PTR picType$[rsp]
  0012f	e8 00 00 00 00	 call	 ??I@YA?AW4RGY_FRAMETYPE@@W40@0@Z ; operator&
  00134	33 c9		 xor	 ecx, ecx
  00136	2b c8		 sub	 ecx, eax
  00138	8b c1		 mov	 eax, ecx
  0013a	8b c0		 mov	 eax, eax
  0013c	48 23 44 24 40	 and	 rax, QWORD PTR outputBytes$[rsp]
  00141	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00146	48 03 41 38	 add	 rax, QWORD PTR [rcx+56]
  0014a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0014f	48 89 41 38	 mov	 QWORD PTR [rcx+56], rax

; 142  :         m_sData.frameOutPSize  += (0-((picType & RGY_FRAMETYPE_P)   >> 1)) & outputBytes;

  00153	ba 02 00 00 00	 mov	 edx, 2
  00158	8b 4c 24 38	 mov	 ecx, DWORD PTR picType$[rsp]
  0015c	e8 00 00 00 00	 call	 ??I@YA?AW4RGY_FRAMETYPE@@W40@0@Z ; operator&
  00161	d1 e8		 shr	 eax, 1
  00163	33 c9		 xor	 ecx, ecx
  00165	2b c8		 sub	 ecx, eax
  00167	8b c1		 mov	 eax, ecx
  00169	8b c0		 mov	 eax, eax
  0016b	48 23 44 24 40	 and	 rax, QWORD PTR outputBytes$[rsp]
  00170	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00175	48 03 41 40	 add	 rax, QWORD PTR [rcx+64]
  00179	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0017e	48 89 41 40	 mov	 QWORD PTR [rcx+64], rax

; 143  :         m_sData.frameOutBSize  += (0-((picType & RGY_FRAMETYPE_B)   >> 2)) & outputBytes;

  00182	ba 04 00 00 00	 mov	 edx, 4
  00187	8b 4c 24 38	 mov	 ecx, DWORD PTR picType$[rsp]
  0018b	e8 00 00 00 00	 call	 ??I@YA?AW4RGY_FRAMETYPE@@W40@0@Z ; operator&
  00190	c1 e8 02	 shr	 eax, 2
  00193	33 c9		 xor	 ecx, ecx
  00195	2b c8		 sub	 ecx, eax
  00197	8b c1		 mov	 eax, ecx
  00199	8b c0		 mov	 eax, eax
  0019b	48 23 44 24 40	 and	 rax, QWORD PTR outputBytes$[rsp]
  001a0	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  001a5	48 03 41 48	 add	 rax, QWORD PTR [rcx+72]
  001a9	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  001ae	48 89 41 48	 mov	 QWORD PTR [rcx+72], rax

; 144  :         m_sData.frameOutIQPSum += (0-((picType & RGY_FRAMETYPE_IDR) >> 7)) & frameAvgQP;

  001b2	ba 80 00 00 00	 mov	 edx, 128		; 00000080H
  001b7	8b 4c 24 38	 mov	 ecx, DWORD PTR picType$[rsp]
  001bb	e8 00 00 00 00	 call	 ??I@YA?AW4RGY_FRAMETYPE@@W40@0@Z ; operator&
  001c0	c1 e8 07	 shr	 eax, 7
  001c3	33 c9		 xor	 ecx, ecx
  001c5	2b c8		 sub	 ecx, eax
  001c7	8b c1		 mov	 eax, ecx
  001c9	23 44 24 48	 and	 eax, DWORD PTR frameAvgQP$[rsp]
  001cd	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  001d2	03 41 50	 add	 eax, DWORD PTR [rcx+80]
  001d5	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  001da	89 41 50	 mov	 DWORD PTR [rcx+80], eax

; 145  :         m_sData.frameOutIQPSum += (0- (picType & RGY_FRAMETYPE_I))         & frameAvgQP;

  001dd	ba 01 00 00 00	 mov	 edx, 1
  001e2	8b 4c 24 38	 mov	 ecx, DWORD PTR picType$[rsp]
  001e6	e8 00 00 00 00	 call	 ??I@YA?AW4RGY_FRAMETYPE@@W40@0@Z ; operator&
  001eb	33 c9		 xor	 ecx, ecx
  001ed	2b c8		 sub	 ecx, eax
  001ef	8b c1		 mov	 eax, ecx
  001f1	23 44 24 48	 and	 eax, DWORD PTR frameAvgQP$[rsp]
  001f5	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  001fa	03 41 50	 add	 eax, DWORD PTR [rcx+80]
  001fd	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00202	89 41 50	 mov	 DWORD PTR [rcx+80], eax

; 146  :         m_sData.frameOutPQPSum += (0-((picType & RGY_FRAMETYPE_P)   >> 1)) & frameAvgQP;

  00205	ba 02 00 00 00	 mov	 edx, 2
  0020a	8b 4c 24 38	 mov	 ecx, DWORD PTR picType$[rsp]
  0020e	e8 00 00 00 00	 call	 ??I@YA?AW4RGY_FRAMETYPE@@W40@0@Z ; operator&
  00213	d1 e8		 shr	 eax, 1
  00215	33 c9		 xor	 ecx, ecx
  00217	2b c8		 sub	 ecx, eax
  00219	8b c1		 mov	 eax, ecx
  0021b	23 44 24 48	 and	 eax, DWORD PTR frameAvgQP$[rsp]
  0021f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00224	03 41 54	 add	 eax, DWORD PTR [rcx+84]
  00227	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0022c	89 41 54	 mov	 DWORD PTR [rcx+84], eax

; 147  :         m_sData.frameOutBQPSum += (0-((picType & RGY_FRAMETYPE_B)   >> 2)) & frameAvgQP;

  0022f	ba 04 00 00 00	 mov	 edx, 4
  00234	8b 4c 24 38	 mov	 ecx, DWORD PTR picType$[rsp]
  00238	e8 00 00 00 00	 call	 ??I@YA?AW4RGY_FRAMETYPE@@W40@0@Z ; operator&
  0023d	c1 e8 02	 shr	 eax, 2
  00240	33 c9		 xor	 ecx, ecx
  00242	2b c8		 sub	 ecx, eax
  00244	8b c1		 mov	 eax, ecx
  00246	23 44 24 48	 and	 eax, DWORD PTR frameAvgQP$[rsp]
  0024a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0024f	03 41 58	 add	 eax, DWORD PTR [rcx+88]
  00252	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00257	89 41 58	 mov	 DWORD PTR [rcx+88], eax

; 148  :     }

  0025a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0025e	5f		 pop	 rdi
  0025f	c3		 ret	 0
?SetOutputData@EncodeStatus@@QEAAXW4RGY_FRAMETYPE@@_KI@Z ENDP ; EncodeStatus::SetOutputData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ PROC		; std::shared_ptr<RGYLog>::reset, COMDAT

; 1177 :     void reset() noexcept { // release resource and convert to empty shared_ptr object

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1178 :         shared_ptr().swap(*this);

  0001e	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>
  00028	90		 npad	 1
  00029	48 89 44 24 30	 mov	 QWORD PTR tv72[rsp], rax
  0002e	48 8b 44 24 30	 mov	 rax, QWORD PTR tv72[rsp]
  00033	48 89 44 24 38	 mov	 QWORD PTR tv71[rsp], rax
  00038	48 8b 54 24 50	 mov	 rdx, QWORD PTR this$[rsp]
  0003d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv71[rsp]
  00042	e8 00 00 00 00	 call	 ?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z ; std::shared_ptr<RGYLog>::swap
  00047	90		 npad	 1
  00048	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0004d	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  00052	90		 npad	 1

; 1179 :     }

  00053	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ ENDP		; std::shared_ptr<RGYLog>::reset
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA PROC ; `std::shared_ptr<RGYLog>::reset'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA ENDP ; `std::shared_ptr<RGYLog>::reset'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA PROC ; `std::shared_ptr<RGYLog>::reset'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA ENDP ; `std::shared_ptr<RGYLog>::reset'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z PROC	; std::shared_ptr<RGYLog>::swap, COMDAT

; 1173 :     void swap(shared_ptr& _Other) noexcept { // swap pointers

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1174 :         this->_Swap(_Other);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Other$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z ; std::_Ptr_base<RGYLog>::_Swap

; 1175 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z ENDP	; std::shared_ptr<RGYLog>::swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ PROC		; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>, COMDAT

; 1132 :     ~shared_ptr() noexcept { // release resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1133 :         this->_Decref();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ ; std::_Ptr_base<RGYLog>::_Decref

; 1134 :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ENDP		; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ PROC		; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>, COMDAT

; 1016 :     constexpr shared_ptr() noexcept {} // construct empty shared_ptr

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ ; std::_Ptr_base<RGYLog>::_Ptr_base<RGYLog>
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ENDP		; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z PROC	; std::_Ptr_base<RGYLog>::_Swap, COMDAT

; 887  :     void _Swap(_Ptr_base& _Right) noexcept { // swap pointers

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 888  :         _STD swap(_Ptr, _Right._Ptr);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b d0	 mov	 rdx, rax
  00030	e8 00 00 00 00	 call	 ??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z ; std::swap<RGYLog *,void>

; 889  :         _STD swap(_Rep, _Right._Rep);

  00035	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 83 c0 08	 add	 rax, 8
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00043	48 83 c1 08	 add	 rcx, 8
  00047	48 8b d0	 mov	 rdx, rax
  0004a	e8 00 00 00 00	 call	 ??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z ; std::swap<std::_Ref_count_base *,void>

; 890  :     }

  0004f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00053	5f		 pop	 rdi
  00054	c3		 ret	 0
?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z ENDP	; std::_Ptr_base<RGYLog>::_Swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ PROC	; std::_Ptr_base<RGYLog>::_Decref, COMDAT

; 881  :     void _Decref() noexcept { // decrement reference count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 882  :         if (_Rep) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 0e		 je	 SHORT $LN2@Decref

; 883  :             _Rep->_Decref();

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00033	e8 00 00 00 00	 call	 ?_Decref@_Ref_count_base@std@@QEAAXXZ ; std::_Ref_count_base::_Decref
$LN2@Decref:

; 884  :         }
; 885  :     }

  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ ENDP	; std::_Ptr_base<RGYLog>::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
;	COMDAT ??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ PROC		; std::_Ptr_base<RGYLog>::_Ptr_base<RGYLog>, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory

; 910  :     element_type* _Ptr{nullptr};

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 911  :     _Ref_count_base* _Rep{nullptr};

  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp

  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	5f		 pop	 rdi
  00025	c3		 ret	 0
??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ ENDP		; std::_Ptr_base<RGYLog>::_Ptr_base<RGYLog>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ
_TEXT	SEGMENT
this$ = 16
?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ PROC	; std::_Ptr_base<RGYLog>::get, COMDAT

; 816  :     _NODISCARD element_type* get() const noexcept { // return pointer to resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 817  :         return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 818  :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ ENDP	; std::_Ptr_base<RGYLog>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAAAEAUfp_deleter@@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAAAEAUfp_deleter@@XZ PROC ; std::_Compressed_pair<fp_deleter,_iobuf *,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAAAEAUfp_deleter@@XZ ENDP ; std::_Compressed_pair<fp_deleter,_iobuf *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z
_TEXT	SEGMENT
_Old$ = 32
this$ = 64
_Ptr$ = 72
?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z PROC ; std::unique_ptr<_iobuf,fp_deleter>::reset, COMDAT

; 1907 :     void reset(pointer _Ptr = pointer()) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1908 :         pointer _Old = _STD exchange(_Mypair._Myval2, _Ptr);

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 54 24 48	 lea	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$exchange@PEAU_iobuf@@AEAPEAU1@@std@@YAPEAU_iobuf@@AEAPEAU1@0@Z ; std::exchange<_iobuf *,_iobuf * &>
  00035	90		 npad	 1
  00036	48 89 44 24 20	 mov	 QWORD PTR _Old$[rsp], rax

; 1909 :         if (_Old) {

  0003b	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Old$[rsp], 0
  00041	74 1c		 je	 SHORT $LN2@reset

; 1910 :             _Mypair._Get_first()(_Old);

  00043	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAAAEAUfp_deleter@@XZ ; std::_Compressed_pair<fp_deleter,_iobuf *,1>::_Get_first
  00050	90		 npad	 1
  00051	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Old$[rsp]
  00056	48 8b c8	 mov	 rcx, rax
  00059	e8 00 00 00 00	 call	 ??Rfp_deleter@@QEBAXPEAU_iobuf@@@Z ; fp_deleter::operator()
  0005e	90		 npad	 1
$LN2@reset:

; 1911 :         }
; 1912 :     }

  0005f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z ENDP ; std::unique_ptr<_iobuf,fp_deleter>::reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??B?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv67 = 0
this$ = 32
??B?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBA_NXZ PROC ; std::unique_ptr<_iobuf,fp_deleter>::operator bool, COMDAT

; 1899 :     explicit operator bool() const noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1900 :         return static_cast<bool>(_Mypair._Myval2);

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 06		 je	 SHORT $LN3@operator
  00029	c6 04 24 01	 mov	 BYTE PTR tv67[rsp], 1
  0002d	eb 04		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0002f	c6 04 24 00	 mov	 BYTE PTR tv67[rsp], 0
$LN4@operator:
  00033	0f b6 04 24	 movzx	 eax, BYTE PTR tv67[rsp]

; 1901 :     }

  00037	48 83 c4 10	 add	 rsp, 16
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??B?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBA_NXZ ENDP ; std::unique_ptr<_iobuf,fp_deleter>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ
_TEXT	SEGMENT
this$ = 16
?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ PROC ; std::unique_ptr<_iobuf,fp_deleter>::get, COMDAT

; 1895 :     _NODISCARD pointer get() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1896 :         return _Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1897 :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ ENDP ; std::unique_ptr<_iobuf,fp_deleter>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ PROC ; std::unique_ptr<_iobuf,fp_deleter>::~unique_ptr<_iobuf,fp_deleter>, COMDAT

; 1873 :     ~unique_ptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1874 :         if (_Mypair._Myval2) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 1f		 je	 SHORT $LN2@unique_ptr

; 1875 :             _Mypair._Get_first()(_Mypair._Myval2);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAAAEAUfp_deleter@@XZ ; std::_Compressed_pair<fp_deleter,_iobuf *,1>::_Get_first
  00036	90		 npad	 1
  00037	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??Rfp_deleter@@QEBAXPEAU_iobuf@@@Z ; fp_deleter::operator()
  00047	90		 npad	 1
$LN2@unique_ptr:

; 1876 :         }
; 1877 :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ ENDP ; std::unique_ptr<_iobuf,fp_deleter>::~unique_ptr<_iobuf,fp_deleter>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ PROC	; std::shared_ptr<EncodeStatus>::reset, COMDAT

; 1177 :     void reset() noexcept { // release resource and convert to empty shared_ptr object

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1178 :         shared_ptr().swap(*this);

  0001e	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::shared_ptr<EncodeStatus>
  00028	90		 npad	 1
  00029	48 89 44 24 30	 mov	 QWORD PTR tv72[rsp], rax
  0002e	48 8b 44 24 30	 mov	 rax, QWORD PTR tv72[rsp]
  00033	48 89 44 24 38	 mov	 QWORD PTR tv71[rsp], rax
  00038	48 8b 54 24 50	 mov	 rdx, QWORD PTR this$[rsp]
  0003d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv71[rsp]
  00042	e8 00 00 00 00	 call	 ?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z ; std::shared_ptr<EncodeStatus>::swap
  00047	90		 npad	 1
  00048	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0004d	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  00052	90		 npad	 1

; 1179 :     }

  00053	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ ENDP	; std::shared_ptr<EncodeStatus>::reset
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA PROC ; `std::shared_ptr<EncodeStatus>::reset'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA ENDP ; `std::shared_ptr<EncodeStatus>::reset'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA PROC ; `std::shared_ptr<EncodeStatus>::reset'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA ENDP ; `std::shared_ptr<EncodeStatus>::reset'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z PROC ; std::shared_ptr<EncodeStatus>::swap, COMDAT

; 1173 :     void swap(shared_ptr& _Other) noexcept { // swap pointers

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1174 :         this->_Swap(_Other);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Other$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z ; std::_Ptr_base<EncodeStatus>::_Swap

; 1175 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z ENDP ; std::shared_ptr<EncodeStatus>::swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ PROC	; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>, COMDAT

; 1132 :     ~shared_ptr() noexcept { // release resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1133 :         this->_Decref();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ ; std::_Ptr_base<EncodeStatus>::_Decref

; 1134 :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ENDP	; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ PROC	; std::shared_ptr<EncodeStatus>::shared_ptr<EncodeStatus>, COMDAT

; 1016 :     constexpr shared_ptr() noexcept {} // construct empty shared_ptr

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ ; std::_Ptr_base<EncodeStatus>::_Ptr_base<EncodeStatus>
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ENDP	; std::shared_ptr<EncodeStatus>::shared_ptr<EncodeStatus>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z PROC ; std::_Ptr_base<EncodeStatus>::_Swap, COMDAT

; 887  :     void _Swap(_Ptr_base& _Right) noexcept { // swap pointers

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 888  :         _STD swap(_Ptr, _Right._Ptr);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b d0	 mov	 rdx, rax
  00030	e8 00 00 00 00	 call	 ??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z ; std::swap<EncodeStatus *,void>

; 889  :         _STD swap(_Rep, _Right._Rep);

  00035	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 83 c0 08	 add	 rax, 8
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00043	48 83 c1 08	 add	 rcx, 8
  00047	48 8b d0	 mov	 rdx, rax
  0004a	e8 00 00 00 00	 call	 ??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z ; std::swap<std::_Ref_count_base *,void>

; 890  :     }

  0004f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00053	5f		 pop	 rdi
  00054	c3		 ret	 0
?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z ENDP ; std::_Ptr_base<EncodeStatus>::_Swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ PROC	; std::_Ptr_base<EncodeStatus>::_Decref, COMDAT

; 881  :     void _Decref() noexcept { // decrement reference count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 882  :         if (_Rep) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 0e		 je	 SHORT $LN2@Decref

; 883  :             _Rep->_Decref();

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00033	e8 00 00 00 00	 call	 ?_Decref@_Ref_count_base@std@@QEAAXXZ ; std::_Ref_count_base::_Decref
$LN2@Decref:

; 884  :         }
; 885  :     }

  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ ENDP	; std::_Ptr_base<EncodeStatus>::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
;	COMDAT ??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ PROC	; std::_Ptr_base<EncodeStatus>::_Ptr_base<EncodeStatus>, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory

; 910  :     element_type* _Ptr{nullptr};

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 911  :     _Ref_count_base* _Rep{nullptr};

  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp

  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	5f		 pop	 rdi
  00025	c3		 ret	 0
??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ ENDP	; std::_Ptr_base<EncodeStatus>::_Ptr_base<EncodeStatus>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$_Ptr_base@VEncodeStatus@@@std@@IEBAPEAVEncodeStatus@@XZ
_TEXT	SEGMENT
this$ = 16
?get@?$_Ptr_base@VEncodeStatus@@@std@@IEBAPEAVEncodeStatus@@XZ PROC ; std::_Ptr_base<EncodeStatus>::get, COMDAT

; 816  :     _NODISCARD element_type* get() const noexcept { // return pointer to resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 817  :         return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 818  :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?get@?$_Ptr_base@VEncodeStatus@@@std@@IEBAPEAVEncodeStatus@@XZ ENDP ; std::_Ptr_base<EncodeStatus>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_log.h
;	COMDAT ?getLogLevel@RGYLog@@QEAAHXZ
_TEXT	SEGMENT
this$ = 16
?getLogLevel@RGYLog@@QEAAHXZ PROC			; RGYLog::getLogLevel, COMDAT

; 55   :     int getLogLevel() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 56   :         return m_nLogLevel;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	8b 40 08	 mov	 eax, DWORD PTR [rax+8]

; 57   :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?getLogLevel@RGYLog@@QEAAHXZ ENDP			; RGYLog::getLogLevel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$min@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
_Left$ = 64
_Right$ = 72
??$min@_K@std@@YAAEB_KAEB_K0@Z PROC			; std::min<unsigned __int64>, COMDAT

; 4490 :     const _Ty& _Left, const _Ty& _Right) _NOEXCEPT_COND(noexcept(_Right < _Left)) { // strengthened

$LN13:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4491 :     // return smaller of _Left and _Right
; 4492 :     if (_Right < _Left) {

  00023	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Left$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	0f 83 92 00 00
	00		 jae	 $LN8@min
$LN4@min:

; 4493 :         _STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00039	48 8b 44 24 40	 mov	 rax, QWORD PTR _Left$[rsp]
  0003e	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00043	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00046	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00049	72 02		 jb	 SHORT $LN7@min
  0004b	eb 6d		 jmp	 SHORT $LN10@min
$LN7@min:
  0004d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00054	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00059	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00060	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00065	45 33 c9	 xor	 r9d, r9d
  00068	41 b8 8d 11 00
	00		 mov	 r8d, 4493		; 0000118dH
  0006e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00075	b9 02 00 00 00	 mov	 ecx, 2
  0007a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00080	90		 npad	 1
  00081	83 f8 01	 cmp	 eax, 1
  00084	75 03		 jne	 SHORT $LN12@min
  00086	cc		 int	 3
  00087	33 c0		 xor	 eax, eax
$LN12@min:
  00089	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00092	41 b9 8d 11 00
	00		 mov	 r9d, 4493		; 0000118dH
  00098	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0009f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  000a6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  000ad	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000b3	90		 npad	 1
  000b4	33 c0		 xor	 eax, eax
  000b6	85 c0		 test	 eax, eax
  000b8	75 93		 jne	 SHORT $LN7@min
$LN10@min:
  000ba	33 c0		 xor	 eax, eax
  000bc	85 c0		 test	 eax, eax
  000be	0f 85 75 ff ff
	ff		 jne	 $LN4@min

; 4494 :         return _Right;

  000c4	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  000c9	eb 05		 jmp	 SHORT $LN1@min
$LN8@min:

; 4495 :     }
; 4496 : 
; 4497 :     return _Left;

  000cb	48 8b 44 24 40	 mov	 rax, QWORD PTR _Left$[rsp]
$LN1@min:

; 4498 : }

  000d0	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
??$min@_K@std@@YAAEB_KAEB_K0@Z ENDP			; std::min<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0VideoInfo@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0VideoInfo@@QEAA@XZ PROC				; VideoInfo::VideoInfo, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 70	 add	 rax, 112		; 00000070H
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??0VideoVUIInfo@@QEAA@XZ ; VideoVUIInfo::VideoVUIInfo
  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??0VideoInfo@@QEAA@XZ ENDP				; VideoInfo::VideoInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
_Left$ = 72
_Right$ = 80
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4293 :     const basic_string<_Elem, _Traits, _Alloc>& _Right) { // return string + string

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00028	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 4294 :     return _STD move(_Left.append(_Right));

  00030	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Right$[rsp]
  00035	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Left$[rsp]
  0003a	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  00047	48 8b d0	 mov	 rdx, rax
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0004f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00054	90		 npad	 1
  00055	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  00059	83 c8 01	 or	 eax, 1
  0005c	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  00060	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 4295 : }

  00065	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00069	5f		 pop	 rdi
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
_Left$ = 72
_Right$ = 80
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
_Left$ = 72
_Right$ = 80
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
_Left$ = 72
_Right$ = 80
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4321 :     _In_z_ const _Elem* const _Right) { // return string + NTCTS

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00028	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 4322 :     return _STD move(_Left.append(_Right));

  00030	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Right$[rsp]
  00035	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Left$[rsp]
  0003a	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  00047	48 8b d0	 mov	 rdx, rax
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0004f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00054	90		 npad	 1
  00055	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  00059	83 c8 01	 or	 eax, 1
  0005c	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  00060	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 4323 : }

  00065	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00069	5f		 pop	 rdi
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
_Left$ = 72
_Right$ = 80
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
_Left$ = 72
_Right$ = 80
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z
_TEXT	SEGMENT
_Ans$ = 40
$T4 = 96
tv70 = 104
__$ArrayPad$ = 112
__$ReturnUdt$ = 144
_Left$ = 152
_Right$ = 160
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4265 :     _In_z_ const _Elem* const _Right) { // return string + NTCTS

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 70	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003d	c7 44 24 60 00
	00 00 00	 mov	 DWORD PTR $T4[rsp], 0

; 4266 :     using _String_type = basic_string<_Elem, _Traits, _Alloc>;
; 4267 :     using _Size_type   = typename _String_type::size_type;
; 4268 :     _String_type _Ans;

  00045	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ans$[rsp]
  0004a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0004f	90		 npad	 1

; 4269 :     _Ans.reserve(_Convert_size<_Size_type>(_Left.size() + _Traits::length(_Right)));

  00050	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Left$[rsp]
  00058	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  0005d	48 89 44 24 68	 mov	 QWORD PTR tv70[rsp], rax
  00062	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Right$[rsp]
  0006a	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0006f	48 8b 4c 24 68	 mov	 rcx, QWORD PTR tv70[rsp]
  00074	48 03 c8	 add	 rcx, rax
  00077	48 8b c1	 mov	 rax, rcx
  0007a	48 8b c8	 mov	 rcx, rax
  0007d	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00082	48 8b d0	 mov	 rdx, rax
  00085	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ans$[rsp]
  0008a	e8 00 00 00 00	 call	 ?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve

; 4270 :     _Ans += _Left;

  0008f	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Left$[rsp]
  00097	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ans$[rsp]
  0009c	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 4271 :     _Ans += _Right;

  000a1	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR _Right$[rsp]
  000a9	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ans$[rsp]
  000ae	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 4272 :     return _Ans;

  000b3	48 8d 54 24 28	 lea	 rdx, QWORD PTR _Ans$[rsp]
  000b8	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000c0	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000c5	8b 44 24 60	 mov	 eax, DWORD PTR $T4[rsp]
  000c9	83 c8 01	 or	 eax, 1
  000cc	89 44 24 60	 mov	 DWORD PTR $T4[rsp], eax
  000d0	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ans$[rsp]
  000d5	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000da	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 4273 : }

  000e2	48 8b f8	 mov	 rdi, rax
  000e5	48 8b cc	 mov	 rcx, rsp
  000e8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z$rtcFrameData
  000ef	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000f4	48 8b c7	 mov	 rax, rdi
  000f7	48 8b 4c 24 70	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000fc	48 33 cc	 xor	 rcx, rsp
  000ff	e8 00 00 00 00	 call	 __security_check_cookie
  00104	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0010b	5f		 pop	 rdi
  0010c	c3		 ret	 0
  0010d	cc		 int	 3
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Ans$ = 40
$T4 = 96
tv70 = 104
__$ArrayPad$ = 112
__$ReturnUdt$ = 144
_Left$ = 152
_Right$ = 160
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _Ans$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Ans$ = 40
$T4 = 96
tv70 = 104
__$ArrayPad$ = 112
__$ReturnUdt$ = 144
_Left$ = 152
_Right$ = 160
?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$1
  0001d	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00021	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$1:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Ans$ = 40
$T4 = 96
tv70 = 104
__$ArrayPad$ = 112
__$ReturnUdt$ = 144
_Left$ = 152
_Right$ = 160
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _Ans$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Ans$ = 40
$T4 = 96
tv70 = 104
__$ArrayPad$ = 112
__$ReturnUdt$ = 144
_Left$ = 152
_Right$ = 160
?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$1
  0001d	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00021	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$1:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??0VideoVUIInfo@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0VideoVUIInfo@@QEAA@XZ PROC				; VideoVUIInfo::VideoVUIInfo, COMDAT

; 1248 :         chromaloc(0) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1242 :         descriptpresent(0),

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 1243 :         colorprim((CspColorprim)get_cx_value(list_colorprim, _T("undef"))),

  00029	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_05PKCPKOLM@undef@
  00030	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?list_colorprim@@3QBUCX_DESC@@B
  00037	e8 00 00 00 00	 call	 ?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z ; get_cx_value
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	89 41 04	 mov	 DWORD PTR [rcx+4], eax

; 1244 :         matrix((CspMatrix)get_cx_value(list_colormatrix, _T("undef"))),

  00044	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_05PKCPKOLM@undef@
  0004b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?list_colormatrix@@3QBUCX_DESC@@B
  00052	e8 00 00 00 00	 call	 ?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z ; get_cx_value
  00057	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0005c	89 41 08	 mov	 DWORD PTR [rcx+8], eax

; 1245 :         transfer((CspTransfer)get_cx_value(list_transfer, _T("undef"))),

  0005f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_05PKCPKOLM@undef@
  00066	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?list_transfer@@3QBUCX_DESC@@B
  0006d	e8 00 00 00 00	 call	 ?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z ; get_cx_value
  00072	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00077	89 41 0c	 mov	 DWORD PTR [rcx+12], eax

; 1246 :         format(get_cx_value(list_videoformat, _T("undef"))),

  0007a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_05PKCPKOLM@undef@
  00081	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?list_videoformat@@3QBUCX_DESC@@B
  00088	e8 00 00 00 00	 call	 ?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z ; get_cx_value
  0008d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00092	89 41 10	 mov	 DWORD PTR [rcx+16], eax

; 1247 :         fullrange(0),

  00095	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0009a	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [rax+20], 0

; 1248 :         chromaloc(0) {

  000a1	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000a6	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [rax+24], 0

; 1249 : 
; 1250 :     }

  000ad	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000b2	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000b6	5f		 pop	 rdi
  000b7	c3		 ret	 0
??0VideoVUIInfo@@QEAA@XZ ENDP				; VideoVUIInfo::VideoVUIInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspColorprimList@@YAXXZ
text$di	SEGMENT
$T1 = 112
$T2 = 168
$T3 = 172
$T4 = 176
$T5 = 180
$T6 = 184
$T7 = 188
$T8 = 192
$T9 = 196
$T10 = 200
$T11 = 204
$T12 = 208
$T13 = 212
$T14 = 216
__$ArrayPad$ = 264
??__ECspColorprimList@@YAXXZ PROC			; `dynamic initializer for 'CspColorprimList'', COMDAT

; 1187 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 08
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1174 : static const auto CspColorprimList = make_array<CspColorprim>(

  0002b	c7 84 24 a8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T2[rsp], 13
  00036	c7 84 24 ac 00
	00 00 0c 00 00
	00		 mov	 DWORD PTR $T3[rsp], 12
  00041	c7 84 24 b0 00
	00 00 0b 00 00
	00		 mov	 DWORD PTR $T4[rsp], 11
  0004c	c7 84 24 b4 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T5[rsp], 10
  00057	c7 84 24 b8 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T6[rsp], 9
  00062	c7 84 24 bc 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T7[rsp], 8
  0006d	c7 84 24 c0 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T8[rsp], 7
  00078	c7 84 24 c4 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T9[rsp], 6
  00083	c7 84 24 c8 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T10[rsp], 5
  0008e	c7 84 24 cc 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T11[rsp], 4
  00099	c7 84 24 d0 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T12[rsp], 2
  000a4	c7 84 24 d4 00
	00 00 01 00 00
	00		 mov	 DWORD PTR $T13[rsp], 1
  000af	48 8d 84 24 a8
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000b7	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  000bc	48 8d 84 24 ac
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000c4	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  000c9	48 8d 84 24 b0
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000d1	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  000d6	48 8d 84 24 b4
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000de	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  000e3	48 8d 84 24 b8
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  000eb	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  000f0	48 8d 84 24 bc
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  000f8	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  000fd	48 8d 84 24 c0
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  00105	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0010a	48 8d 84 24 c4
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00112	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00117	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  0011f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00124	4c 8d 8c 24 cc
	00 00 00	 lea	 r9, QWORD PTR $T11[rsp]
  0012c	4c 8d 84 24 d0
	00 00 00	 lea	 r8, QWORD PTR $T12[rsp]
  00134	48 8d 94 24 d4
	00 00 00	 lea	 rdx, QWORD PTR $T13[rsp]
  0013c	48 8d 8c 24 d8
	00 00 00	 lea	 rcx, QWORD PTR $T14[rsp]
  00144	e8 00 00 00 00	 call	 ??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
  00149	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T1[rsp]
  0014e	48 8b f9	 mov	 rdi, rcx
  00151	48 8b f0	 mov	 rsi, rax
  00154	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00159	f3 a4		 rep movsb
  0015b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspColorprimList@@3V?$array@W4CspColorprim@@$0M@@std@@B
  00162	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T1[rsp]
  00167	48 8b f8	 mov	 rdi, rax
  0016a	48 8b f1	 mov	 rsi, rcx
  0016d	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00172	f3 a4		 rep movsb
  00174	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0017c	48 33 cc	 xor	 rcx, rsp
  0017f	e8 00 00 00 00	 call	 __security_check_cookie
  00184	48 81 c4 18 01
	00 00		 add	 rsp, 280		; 00000118H
  0018b	5f		 pop	 rdi
  0018c	5e		 pop	 rsi
  0018d	c3		 ret	 0
??__ECspColorprimList@@YAXXZ ENDP			; `dynamic initializer for 'CspColorprimList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 56
$T2 = 96
<args_0>$ = 104
<args_1>$ = 112
<args_2>$ = 120
<args_3>$ = 128
<args_4>$ = 136
<args_5>$ = 144
<args_6>$ = 152
<args_7>$ = 160
<args_8>$ = 168
<args_9>$ = 176
<args_10>$ = 184
<args_11>$ = 192
??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z PROC ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 12 00 00 00	 mov	 ecx, 18
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 38	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 68	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 44 24 70	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004c	8b 00		 mov	 eax, DWORD PTR [rax]
  0004e	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00052	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_2>$[rsp]
  00057	8b 00		 mov	 eax, DWORD PTR [rax]
  00059	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  0005d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  00065	8b 00		 mov	 eax, DWORD PTR [rax]
  00067	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  0006b	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00073	8b 00		 mov	 eax, DWORD PTR [rax]
  00075	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  00079	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00081	8b 00		 mov	 eax, DWORD PTR [rax]
  00083	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  00087	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  0008f	8b 00		 mov	 eax, DWORD PTR [rax]
  00091	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  00095	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  0009d	8b 00		 mov	 eax, DWORD PTR [rax]
  0009f	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a3	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000ab	8b 00		 mov	 eax, DWORD PTR [rax]
  000ad	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b1	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000b9	8b 00		 mov	 eax, DWORD PTR [rax]
  000bb	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000bf	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000c7	8b 00		 mov	 eax, DWORD PTR [rax]
  000c9	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000cd	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000d5	8b 00		 mov	 eax, DWORD PTR [rax]
  000d7	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000db	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  000df	48 8b 7c 24 60	 mov	 rdi, QWORD PTR $T2[rsp]
  000e4	48 8b f0	 mov	 rsi, rax
  000e7	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  000ec	f3 a4		 rep movsb
  000ee	48 8b 44 24 60	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  000f3	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000f8	48 33 cc	 xor	 rcx, rsp
  000fb	e8 00 00 00 00	 call	 __security_check_cookie
  00100	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00104	5f		 pop	 rdi
  00105	5e		 pop	 rsi
  00106	c3		 ret	 0
??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ENDP ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspTransferList@@YAXXZ
text$di	SEGMENT
$T1 = 128
$T2 = 200
$T3 = 204
$T4 = 208
$T5 = 212
$T6 = 216
$T7 = 220
$T8 = 224
$T9 = 228
$T10 = 232
$T11 = 236
$T12 = 240
$T13 = 244
$T14 = 248
$T15 = 252
$T16 = 256
$T17 = 264
__$ArrayPad$ = 328
??__ECspTransferList@@YAXXZ PROC			; `dynamic initializer for 'CspTransferList'', COMDAT

; 1135 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1119 : static const auto CspTransferList = make_array<CspTransfer>(

  0002b	c7 84 24 c8 00
	00 00 12 00 00
	00		 mov	 DWORD PTR $T2[rsp], 18
  00036	c7 84 24 cc 00
	00 00 10 00 00
	00		 mov	 DWORD PTR $T3[rsp], 16
  00041	c7 84 24 d0 00
	00 00 0f 00 00
	00		 mov	 DWORD PTR $T4[rsp], 15
  0004c	c7 84 24 d4 00
	00 00 0e 00 00
	00		 mov	 DWORD PTR $T5[rsp], 14
  00057	c7 84 24 d8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T6[rsp], 13
  00062	c7 84 24 dc 00
	00 00 0b 00 00
	00		 mov	 DWORD PTR $T7[rsp], 11
  0006d	c7 84 24 e0 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T8[rsp], 10
  00078	c7 84 24 e4 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T9[rsp], 9
  00083	c7 84 24 e8 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T10[rsp], 8
  0008e	c7 84 24 ec 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T11[rsp], 7
  00099	c7 84 24 f0 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T12[rsp], 6
  000a4	c7 84 24 f4 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T13[rsp], 5
  000af	c7 84 24 f8 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T14[rsp], 4
  000ba	c7 84 24 fc 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T15[rsp], 2
  000c5	c7 84 24 00 01
	00 00 01 00 00
	00		 mov	 DWORD PTR $T16[rsp], 1
  000d0	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000d8	48 89 44 24 78	 mov	 QWORD PTR [rsp+120], rax
  000dd	48 8d 84 24 cc
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000e5	48 89 44 24 70	 mov	 QWORD PTR [rsp+112], rax
  000ea	48 8d 84 24 d0
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000f2	48 89 44 24 68	 mov	 QWORD PTR [rsp+104], rax
  000f7	48 8d 84 24 d4
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000ff	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  00104	48 8d 84 24 d8
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  0010c	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  00111	48 8d 84 24 dc
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  00119	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  0011e	48 8d 84 24 e0
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  00126	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  0012b	48 8d 84 24 e4
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00133	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  00138	48 8d 84 24 e8
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  00140	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  00145	48 8d 84 24 ec
	00 00 00	 lea	 rax, QWORD PTR $T11[rsp]
  0014d	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00152	48 8d 84 24 f0
	00 00 00	 lea	 rax, QWORD PTR $T12[rsp]
  0015a	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0015f	48 8d 84 24 f4
	00 00 00	 lea	 rax, QWORD PTR $T13[rsp]
  00167	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0016c	4c 8d 8c 24 f8
	00 00 00	 lea	 r9, QWORD PTR $T14[rsp]
  00174	4c 8d 84 24 fc
	00 00 00	 lea	 r8, QWORD PTR $T15[rsp]
  0017c	48 8d 94 24 00
	01 00 00	 lea	 rdx, QWORD PTR $T16[rsp]
  00184	48 8d 8c 24 08
	01 00 00	 lea	 rcx, QWORD PTR $T17[rsp]
  0018c	e8 00 00 00 00	 call	 ??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
  00191	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  00199	48 8b f9	 mov	 rdi, rcx
  0019c	48 8b f0	 mov	 rsi, rax
  0019f	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  001a4	f3 a4		 rep movsb
  001a6	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspTransferList@@3V?$array@W4CspTransfer@@$0P@@std@@B
  001ad	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  001b5	48 8b f8	 mov	 rdi, rax
  001b8	48 8b f1	 mov	 rsi, rcx
  001bb	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  001c0	f3 a4		 rep movsb
  001c2	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001ca	48 33 cc	 xor	 rcx, rsp
  001cd	e8 00 00 00 00	 call	 __security_check_cookie
  001d2	48 81 c4 58 01
	00 00		 add	 rsp, 344		; 00000158H
  001d9	5f		 pop	 rdi
  001da	5e		 pop	 rsi
  001db	c3		 ret	 0
??__ECspTransferList@@YAXXZ ENDP			; `dynamic initializer for 'CspTransferList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 72
$T2 = 112
<args_0>$ = 120
<args_1>$ = 128
<args_2>$ = 136
<args_3>$ = 144
<args_4>$ = 152
<args_5>$ = 160
<args_6>$ = 168
<args_7>$ = 176
<args_8>$ = 184
<args_9>$ = 192
<args_10>$ = 200
<args_11>$ = 208
<args_12>$ = 216
<args_13>$ = 224
<args_14>$ = 232
??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z PROC ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 16 00 00 00	 mov	 ecx, 22
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 48	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00055	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_2>$[rsp]
  0005d	8b 00		 mov	 eax, DWORD PTR [rax]
  0005f	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  0006b	8b 00		 mov	 eax, DWORD PTR [rax]
  0006d	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  00071	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00079	8b 00		 mov	 eax, DWORD PTR [rax]
  0007b	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  0007f	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00087	8b 00		 mov	 eax, DWORD PTR [rax]
  00089	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  0008d	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  00095	8b 00		 mov	 eax, DWORD PTR [rax]
  00097	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  0009b	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  000a3	8b 00		 mov	 eax, DWORD PTR [rax]
  000a5	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a9	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000b1	8b 00		 mov	 eax, DWORD PTR [rax]
  000b3	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b7	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000bf	8b 00		 mov	 eax, DWORD PTR [rax]
  000c1	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000c5	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000cd	8b 00		 mov	 eax, DWORD PTR [rax]
  000cf	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000d3	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000db	8b 00		 mov	 eax, DWORD PTR [rax]
  000dd	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000e1	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR <args_12>$[rsp]
  000e9	8b 00		 mov	 eax, DWORD PTR [rax]
  000eb	89 44 24 30	 mov	 DWORD PTR $T1[rsp+48], eax
  000ef	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR <args_13>$[rsp]
  000f7	8b 00		 mov	 eax, DWORD PTR [rax]
  000f9	89 44 24 34	 mov	 DWORD PTR $T1[rsp+52], eax
  000fd	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR <args_14>$[rsp]
  00105	8b 00		 mov	 eax, DWORD PTR [rax]
  00107	89 44 24 38	 mov	 DWORD PTR $T1[rsp+56], eax
  0010b	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  0010f	48 8b 7c 24 70	 mov	 rdi, QWORD PTR $T2[rsp]
  00114	48 8b f0	 mov	 rsi, rax
  00117	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  0011c	f3 a4		 rep movsb
  0011e	48 8b 44 24 70	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  00123	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00128	48 33 cc	 xor	 rcx, rsp
  0012b	e8 00 00 00 00	 call	 __security_check_cookie
  00130	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00134	5f		 pop	 rdi
  00135	5e		 pop	 rsi
  00136	c3		 ret	 0
??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ENDP ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspMatrixList@@YAXXZ
text$di	SEGMENT
$T1 = 128
$T2 = 192
$T3 = 196
$T4 = 200
$T5 = 204
$T6 = 208
$T7 = 212
$T8 = 216
$T9 = 220
$T10 = 224
$T11 = 228
$T12 = 232
$T13 = 236
$T14 = 240
$T15 = 244
$T16 = 248
__$ArrayPad$ = 304
??__ECspMatrixList@@YAXXZ PROC				; `dynamic initializer for 'CspMatrixList'', COMDAT

; 1080 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 30
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1065 : static const auto CspMatrixList = make_array<CspMatrix>(

  0002b	c7 84 24 c0 00
	00 00 0f 00 00
	00		 mov	 DWORD PTR $T2[rsp], 15
  00036	c7 84 24 c4 00
	00 00 0e 00 00
	00		 mov	 DWORD PTR $T3[rsp], 14
  00041	c7 84 24 c8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T4[rsp], 13
  0004c	c7 84 24 cc 00
	00 00 0c 00 00
	00		 mov	 DWORD PTR $T5[rsp], 12
  00057	c7 84 24 d0 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T6[rsp], 10
  00062	c7 84 24 d4 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T7[rsp], 9
  0006d	c7 84 24 d8 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T8[rsp], 8
  00078	c7 84 24 dc 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T9[rsp], 7
  00083	c7 84 24 e0 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T10[rsp], 6
  0008e	c7 84 24 e4 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T11[rsp], 5
  00099	c7 84 24 e8 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T12[rsp], 4
  000a4	c7 84 24 ec 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T13[rsp], 2
  000af	c7 84 24 f0 00
	00 00 01 00 00
	00		 mov	 DWORD PTR $T14[rsp], 1
  000ba	c7 84 24 f4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T15[rsp], 0
  000c5	48 8d 84 24 c0
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000cd	48 89 44 24 70	 mov	 QWORD PTR [rsp+112], rax
  000d2	48 8d 84 24 c4
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000da	48 89 44 24 68	 mov	 QWORD PTR [rsp+104], rax
  000df	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000e7	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  000ec	48 8d 84 24 cc
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000f4	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  000f9	48 8d 84 24 d0
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  00101	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  00106	48 8d 84 24 d4
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  0010e	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  00113	48 8d 84 24 d8
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  0011b	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  00120	48 8d 84 24 dc
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00128	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  0012d	48 8d 84 24 e0
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  00135	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0013a	48 8d 84 24 e4
	00 00 00	 lea	 rax, QWORD PTR $T11[rsp]
  00142	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00147	48 8d 84 24 e8
	00 00 00	 lea	 rax, QWORD PTR $T12[rsp]
  0014f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00154	4c 8d 8c 24 ec
	00 00 00	 lea	 r9, QWORD PTR $T13[rsp]
  0015c	4c 8d 84 24 f0
	00 00 00	 lea	 r8, QWORD PTR $T14[rsp]
  00164	48 8d 94 24 f4
	00 00 00	 lea	 rdx, QWORD PTR $T15[rsp]
  0016c	48 8d 8c 24 f8
	00 00 00	 lea	 rcx, QWORD PTR $T16[rsp]
  00174	e8 00 00 00 00	 call	 ??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
  00179	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  00181	48 8b f9	 mov	 rdi, rcx
  00184	48 8b f0	 mov	 rsi, rax
  00187	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  0018c	f3 a4		 rep movsb
  0018e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspMatrixList@@3V?$array@W4CspMatrix@@$0O@@std@@B
  00195	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  0019d	48 8b f8	 mov	 rdi, rax
  001a0	48 8b f1	 mov	 rsi, rcx
  001a3	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  001a8	f3 a4		 rep movsb
  001aa	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001b2	48 33 cc	 xor	 rcx, rsp
  001b5	e8 00 00 00 00	 call	 __security_check_cookie
  001ba	48 81 c4 48 01
	00 00		 add	 rsp, 328		; 00000148H
  001c1	5f		 pop	 rdi
  001c2	5e		 pop	 rsi
  001c3	c3		 ret	 0
??__ECspMatrixList@@YAXXZ ENDP				; `dynamic initializer for 'CspMatrixList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 64
$T2 = 112
<args_0>$ = 120
<args_1>$ = 128
<args_2>$ = 136
<args_3>$ = 144
<args_4>$ = 152
<args_5>$ = 160
<args_6>$ = 168
<args_7>$ = 176
<args_8>$ = 184
<args_9>$ = 192
<args_10>$ = 200
<args_11>$ = 208
<args_12>$ = 216
<args_13>$ = 224
??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z PROC ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 16 00 00 00	 mov	 ecx, 22
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 40	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00055	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_2>$[rsp]
  0005d	8b 00		 mov	 eax, DWORD PTR [rax]
  0005f	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  0006b	8b 00		 mov	 eax, DWORD PTR [rax]
  0006d	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  00071	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00079	8b 00		 mov	 eax, DWORD PTR [rax]
  0007b	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  0007f	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00087	8b 00		 mov	 eax, DWORD PTR [rax]
  00089	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  0008d	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  00095	8b 00		 mov	 eax, DWORD PTR [rax]
  00097	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  0009b	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  000a3	8b 00		 mov	 eax, DWORD PTR [rax]
  000a5	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a9	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000b1	8b 00		 mov	 eax, DWORD PTR [rax]
  000b3	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b7	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000bf	8b 00		 mov	 eax, DWORD PTR [rax]
  000c1	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000c5	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000cd	8b 00		 mov	 eax, DWORD PTR [rax]
  000cf	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000d3	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000db	8b 00		 mov	 eax, DWORD PTR [rax]
  000dd	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000e1	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR <args_12>$[rsp]
  000e9	8b 00		 mov	 eax, DWORD PTR [rax]
  000eb	89 44 24 30	 mov	 DWORD PTR $T1[rsp+48], eax
  000ef	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR <args_13>$[rsp]
  000f7	8b 00		 mov	 eax, DWORD PTR [rax]
  000f9	89 44 24 34	 mov	 DWORD PTR $T1[rsp+52], eax
  000fd	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  00101	48 8b 7c 24 70	 mov	 rdi, QWORD PTR $T2[rsp]
  00106	48 8b f0	 mov	 rsi, rax
  00109	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  0010e	f3 a4		 rep movsb
  00110	48 8b 44 24 70	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  00115	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0011a	48 33 cc	 xor	 rcx, rsp
  0011d	e8 00 00 00 00	 call	 __security_check_cookie
  00122	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00126	5f		 pop	 rdi
  00127	5e		 pop	 rsi
  00128	c3		 ret	 0
??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ENDP ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
_TEXT	SEGMENT
i$1 = 32
list$ = 64
chr$ = 72
?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z PROC		; get_cx_value

; 790  : static int get_cx_value(const CX_DESC * list, const TCHAR *chr) {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 791  :     for (int i = 0; list[i].desc; i++)

  00023	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR i$1[rsp], 0
  0002b	eb 0a		 jmp	 SHORT $LN4@get_cx_val
$LN2@get_cx_val:
  0002d	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  00031	ff c0		 inc	 eax
  00033	89 44 24 20	 mov	 DWORD PTR i$1[rsp], eax
$LN4@get_cx_val:
  00037	48 63 44 24 20	 movsxd	 rax, DWORD PTR i$1[rsp]
  0003c	48 6b c0 10	 imul	 rax, rax, 16
  00040	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00045	48 83 3c 01 00	 cmp	 QWORD PTR [rcx+rax], 0
  0004a	74 36		 je	 SHORT $LN3@get_cx_val

; 792  :         if (0 == _tcscmp(list[i].desc, chr))

  0004c	48 63 44 24 20	 movsxd	 rax, DWORD PTR i$1[rsp]
  00051	48 6b c0 10	 imul	 rax, rax, 16
  00055	48 8b 54 24 48	 mov	 rdx, QWORD PTR chr$[rsp]
  0005a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  0005f	48 8b 0c 01	 mov	 rcx, QWORD PTR [rcx+rax]
  00063	e8 00 00 00 00	 call	 _tcscmp
  00068	85 c0		 test	 eax, eax
  0006a	75 14		 jne	 SHORT $LN5@get_cx_val

; 793  :             return list[i].value;

  0006c	48 63 44 24 20	 movsxd	 rax, DWORD PTR i$1[rsp]
  00071	48 6b c0 10	 imul	 rax, rax, 16
  00075	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  0007a	8b 44 01 08	 mov	 eax, DWORD PTR [rcx+rax+8]
  0007e	eb 04		 jmp	 SHORT $LN1@get_cx_val
$LN5@get_cx_val:
  00080	eb ab		 jmp	 SHORT $LN2@get_cx_val
$LN3@get_cx_val:

; 794  :     return 0;

  00082	33 c0		 xor	 eax, eax
$LN1@get_cx_val:

; 795  : }

  00084	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00088	5f		 pop	 rdi
  00089	c3		 ret	 0
?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z ENDP		; get_cx_value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
_TEXT	SEGMENT
a$ = 16
b$ = 24
??I@YA?AW4RGY_FRAMETYPE@@W40@0@Z PROC			; operator&

; 679  : static RGY_FRAMETYPE operator&(RGY_FRAMETYPE a, RGY_FRAMETYPE b) {

  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00008	57		 push	 rdi

; 680  :     return (RGY_FRAMETYPE)((uint32_t)a & (uint32_t)b);

  00009	8b 44 24 18	 mov	 eax, DWORD PTR b$[rsp]
  0000d	8b 4c 24 10	 mov	 ecx, DWORD PTR a$[rsp]
  00011	23 c8		 and	 ecx, eax
  00013	8b c1		 mov	 eax, ecx

; 681  : }

  00015	5f		 pop	 rdi
  00016	c3		 ret	 0
??I@YA?AW4RGY_FRAMETYPE@@W40@0@Z ENDP			; operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
_TEXT	SEGMENT
a$ = 48
b$ = 56
??_5@YA?AW4RGY_FRAMETYPE@@AEAW40@W40@@Z PROC		; operator|=

; 674  : static RGY_FRAMETYPE operator|=(RGY_FRAMETYPE& a, RGY_FRAMETYPE b) {

  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 675  :     a = a | b;

  00022	8b 54 24 38	 mov	 edx, DWORD PTR b$[rsp]
  00026	48 8b 44 24 30	 mov	 rax, QWORD PTR a$[rsp]
  0002b	8b 08		 mov	 ecx, DWORD PTR [rax]
  0002d	e8 00 00 00 00	 call	 ??U@YA?AW4RGY_FRAMETYPE@@W40@0@Z ; operator|
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR a$[rsp]
  00037	89 01		 mov	 DWORD PTR [rcx], eax

; 676  :     return a;

  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR a$[rsp]
  0003e	8b 00		 mov	 eax, DWORD PTR [rax]

; 677  : }

  00040	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00044	5f		 pop	 rdi
  00045	c3		 ret	 0
??_5@YA?AW4RGY_FRAMETYPE@@AEAW40@W40@@Z ENDP		; operator|=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
_TEXT	SEGMENT
a$ = 16
b$ = 24
??U@YA?AW4RGY_FRAMETYPE@@W40@0@Z PROC			; operator|

; 670  : static RGY_FRAMETYPE operator|(RGY_FRAMETYPE a, RGY_FRAMETYPE b) {

  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00008	57		 push	 rdi

; 671  :     return (RGY_FRAMETYPE)((uint32_t)a | (uint32_t)b);

  00009	8b 44 24 18	 mov	 eax, DWORD PTR b$[rsp]
  0000d	8b 4c 24 10	 mov	 ecx, DWORD PTR a$[rsp]
  00011	0b c8		 or	 ecx, eax
  00013	8b c1		 mov	 eax, ecx

; 672  : }

  00015	5f		 pop	 rdi
  00016	c3		 ret	 0
??U@YA?AW4RGY_FRAMETYPE@@W40@0@Z ENDP			; operator|
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??Rfp_deleter@@QEBAXPEAU_iobuf@@@Z
_TEXT	SEGMENT
this$ = 48
fp$ = 56
??Rfp_deleter@@QEBAXPEAU_iobuf@@@Z PROC			; fp_deleter::operator(), COMDAT

; 179  :     void operator()(FILE* fp) const {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 180  :         if (fp) {

  00023	48 83 7c 24 38
	00		 cmp	 QWORD PTR fp$[rsp], 0
  00029	74 16		 je	 SHORT $LN2@operator

; 181  :             fflush(fp);

  0002b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR fp$[rsp]
  00030	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fflush

; 182  :             fclose(fp);

  00036	48 8b 4c 24 38	 mov	 rcx, QWORD PTR fp$[rsp]
  0003b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fclose
$LN2@operator:

; 183  :         }
; 184  :     }

  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
??Rfp_deleter@@QEBAXPEAU_iobuf@@@Z ENDP			; fp_deleter::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??Rmalloc_deleter@@QEBAXPEAX@Z
_TEXT	SEGMENT
this$ = 48
ptr$ = 56
??Rmalloc_deleter@@QEBAXPEAX@Z PROC			; malloc_deleter::operator(), COMDAT

; 173  :     void operator()(void* ptr) const {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 174  :         free(ptr);

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR ptr$[rsp]
  00028	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_free

; 175  :     }

  0002e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00032	5f		 pop	 rdi
  00033	c3		 ret	 0
??Rmalloc_deleter@@QEBAXPEAX@Z ENDP			; malloc_deleter::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??Raligned_malloc_deleter@@QEBAXPEAX@Z
_TEXT	SEGMENT
this$ = 48
ptr$ = 56
??Raligned_malloc_deleter@@QEBAXPEAX@Z PROC		; aligned_malloc_deleter::operator(), COMDAT

; 167  :     void operator()(void* ptr) const {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 168  :         _aligned_free(ptr);

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR ptr$[rsp]
  00028	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__aligned_free

; 169  :     }

  0002e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00032	5f		 pop	 rdi
  00033	c3		 ret	 0
??Raligned_malloc_deleter@@QEBAXPEAX@Z ENDP		; aligned_malloc_deleter::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\convert_csp.h
_TEXT	SEGMENT
a$ = 16
b$ = 24
??I@YA?AW4RGY_PICSTRUCT@@W40@0@Z PROC			; operator&

; 289  : static RGY_PICSTRUCT operator&(RGY_PICSTRUCT a, RGY_PICSTRUCT b) {

  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00008	57		 push	 rdi

; 290  :     return (RGY_PICSTRUCT)((uint8_t)a & (uint8_t)b);

  00009	0f b6 44 24 10	 movzx	 eax, BYTE PTR a$[rsp]
  0000e	0f b6 4c 24 18	 movzx	 ecx, BYTE PTR b$[rsp]
  00013	23 c1		 and	 eax, ecx

; 291  : }

  00015	5f		 pop	 rdi
  00016	c3		 ret	 0
??I@YA?AW4RGY_PICSTRUCT@@W40@0@Z ENDP			; operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\tchar.h
;	COMDAT _tcscmp
_TEXT	SEGMENT
_s1$ = 48
_s2$ = 56
_tcscmp	PROC						; COMDAT

; 1681 : _Check_return_ __inline int _tcscmp(_In_z_ _CPC _s1,_In_z_ _CPC _s2) {return _mbscmp((_CPUC)_s1,(_CPUC)_s2);}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _s2$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _s1$[rsp]
  0002d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__mbscmp
  00033	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00037	5f		 pop	 rdi
  00038	c3		 ret	 0
_tcscmp	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0002b	90		 npad	 1
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4198 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4199 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4200 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4194 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4195 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4196 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators, COMDAT

; 4190 :     void _Swap_proxy_and_iterators(basic_string& _Right) { // swap all iterators

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4191 :         _Mypair._Myval2._Swap_proxy_and_iterators(_Right._Mypair._Myval2);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b d0	 mov	 rdx, rax
  00030	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators

; 4192 :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT

; 4180 :     [[noreturn]] static void _Xlen() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 4181 :         _Xlength_error("string too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlen:

; 4182 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_Ptr$1 = 32
_Al$2 = 40
$T3 = 48
this$ = 80
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT

; 4164 :     void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 4165 :         _Mypair._Myval2._Orphan_all();

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0002b	90		 npad	 1

; 4166 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0002c	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00039	90		 npad	 1
  0003a	0f b6 c0	 movzx	 eax, al
  0003d	85 c0		 test	 eax, eax
  0003f	74 4f		 je	 SHORT $LN2@Tidy_deall

; 4167 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

  00041	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00046	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0004a	48 89 44 24 20	 mov	 QWORD PTR _Ptr$1[rsp], rax

; 4168 :             auto& _Al          = _Getal();

  0004f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00054	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00059	90		 npad	 1
  0005a	48 89 44 24 28	 mov	 QWORD PTR _Al$2[rsp], rax

; 4169 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);

  0005f	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00064	48 83 c0 08	 add	 rax, 8
  00068	48 8b c8	 mov	 rcx, rax
  0006b	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ; std::_Destroy_in_place<char *>
  00070	90		 npad	 1

; 4170 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00071	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00076	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0007a	48 ff c0	 inc	 rax
  0007d	4c 8b c0	 mov	 r8, rax
  00080	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Ptr$1[rsp]
  00085	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Al$2[rsp]
  0008a	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
  0008f	90		 npad	 1
$LN2@Tidy_deall:

; 4171 :         }
; 4172 : 
; 4173 :         _Mypair._Myval2._Mysize = 0;

  00090	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00095	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4174 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0009d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000a2	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4175 :         // the _Traits::assign is last so the codegen doesn't think the char
; 4176 :         // write can alias this
; 4177 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000aa	c6 44 24 30 00	 mov	 BYTE PTR $T3[rsp], 0
  000af	b8 01 00 00 00	 mov	 eax, 1
  000b4	48 6b c0 00	 imul	 rax, rax, 0
  000b8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000bd	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  000c2	48 8d 54 24 30	 lea	 rdx, QWORD PTR $T3[rsp]
  000c7	48 8b c8	 mov	 rcx, rax
  000ca	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
  000cf	90		 npad	 1

; 4178 :     }

  000d0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init, COMDAT

; 4156 :     void _Tidy_init() noexcept { // initialize basic_string data members

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4157 :         _Mypair._Myval2._Mysize = 0;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4158 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4159 :         // the _Traits::assign is last so the codegen doesn't think the char
; 4160 :         // write can alias this
; 4161 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00038	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  0003d	b8 01 00 00 00	 mov	 eax, 1
  00042	48 6b c0 00	 imul	 rax, rax, 0
  00046	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  00050	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00055	48 8b c8	 mov	 rcx, rax
  00058	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 4162 :     }

  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Newsize$ = 72
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT

; 4152 :     void _Eos(const size_type _Newsize) { // set new length and null terminator

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4153 :         _Traits::assign(_Mypair._Myval2._Myptr()[_Mypair._Myval2._Mysize = _Newsize], _Elem());

  00023	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newsize$[rsp]
  00032	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx
  00036	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 8b c8	 mov	 rcx, rax
  0003e	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00043	48 03 44 24 48	 add	 rax, QWORD PTR _Newsize$[rsp]
  00048	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  0004d	48 8b c8	 mov	 rcx, rax
  00050	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 4154 :     }

  00055	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_Ptr$ = 32
_Al$ = 40
tv86 = 48
this$ = 80
?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Become_small, COMDAT

; 4139 :     void _Become_small() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 4140 :         // release any held storage and return to small string mode
; 4141 :         // pre: *this is in large string mode
; 4142 :         // pre: this is small enough to return to small string mode
; 4143 :         _Mypair._Myval2._Orphan_all();

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4144 :         const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

  0002b	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00034	48 89 44 24 20	 mov	 QWORD PTR _Ptr$[rsp], rax

; 4145 :         auto& _Al          = _Getal();

  00039	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0003e	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00043	48 89 44 24 28	 mov	 QWORD PTR _Al$[rsp], rax

; 4146 :         _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);

  00048	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0004d	48 83 c0 08	 add	 rax, 8
  00051	48 8b c8	 mov	 rcx, rax
  00054	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ; std::_Destroy_in_place<char *>

; 4147 :         _Traits::copy(_Mypair._Myval2._Bx._Buf, _Unfancy(_Ptr), _Mypair._Myval2._Mysize + 1);

  00059	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00062	48 ff c0	 inc	 rax
  00065	48 89 44 24 30	 mov	 QWORD PTR tv86[rsp], rax
  0006a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0006f	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00074	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00079	48 83 c1 08	 add	 rcx, 8
  0007d	48 8b 54 24 30	 mov	 rdx, QWORD PTR tv86[rsp]
  00082	4c 8b c2	 mov	 r8, rdx
  00085	48 8b d0	 mov	 rdx, rax
  00088	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 4148 :         _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0008d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00092	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00096	48 ff c0	 inc	 rax
  00099	4c 8b c0	 mov	 r8, rax
  0009c	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  000a1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Al$[rsp]
  000a6	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4149 :         _Mypair._Myval2._Myres = _BUF_SIZE - 1;

  000ab	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000b0	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4150 :     }

  000b8	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000bc	5f		 pop	 rdi
  000bd	c3		 ret	 0
?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Become_small
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 48
_Requested$ = 56
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4077 :     _NODISCARD size_type _Calculate_growth(const size_type _Requested) const noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4078 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0002d	4c 8b c0	 mov	 r8, rax
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 50 20	 mov	 rdx, QWORD PTR [rax+32]
  00039	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Requested$[rsp]
  0003e	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth

; 4079 :     }

  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
_TEXT	SEGMENT
_Masked$ = 40
$T4 = 56
_Requested$ = 80
_Old$ = 88
_Max$ = 96
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4064 :         const size_type _Requested, const size_type _Old, const size_type _Max) noexcept {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 4065 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR _Requested$[rsp]
  0002d	48 83 c8 0f	 or	 rax, 15
  00031	48 89 44 24 28	 mov	 QWORD PTR _Masked$[rsp], rax

; 4066 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00036	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  0003b	48 39 44 24 28	 cmp	 QWORD PTR _Masked$[rsp], rax
  00040	76 07		 jbe	 SHORT $LN2@Calculate_

; 4067 :             return _Max;

  00042	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  00047	eb 59		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 4068 :         }
; 4069 : 
; 4070 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00049	33 d2		 xor	 edx, edx
  0004b	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old$[rsp]
  00050	b9 02 00 00 00	 mov	 ecx, 2
  00055	48 f7 f1	 div	 rcx
  00058	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Max$[rsp]
  0005d	48 2b c8	 sub	 rcx, rax
  00060	48 8b c1	 mov	 rax, rcx
  00063	48 39 44 24 58	 cmp	 QWORD PTR _Old$[rsp], rax
  00068	76 07		 jbe	 SHORT $LN3@Calculate_

; 4071 :             return _Max;

  0006a	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  0006f	eb 31		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 4072 :         }
; 4073 : 
; 4074 :         return _Max_value(_Masked, _Old + _Old / 2);

  00071	33 d2		 xor	 edx, edx
  00073	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old$[rsp]
  00078	b9 02 00 00 00	 mov	 ecx, 2
  0007d	48 f7 f1	 div	 rcx
  00080	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Old$[rsp]
  00085	48 03 c8	 add	 rcx, rax
  00088	48 8b c1	 mov	 rax, rcx
  0008b	48 89 44 24 38	 mov	 QWORD PTR $T4[rsp], rax
  00090	48 8d 54 24 38	 lea	 rdx, QWORD PTR $T4[rsp]
  00095	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Masked$[rsp]
  0009a	e8 00 00 00 00	 call	 ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Max_value<unsigned __int64>
  0009f	48 8b 00	 mov	 rax, QWORD PTR [rax]
$LN1@Calculate_:

; 4075 :     }

  000a2	48 8b f8	 mov	 rdi, rax
  000a5	48 8b cc	 mov	 rcx, rsp
  000a8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcFrameData
  000af	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000b4	48 8b c7	 mov	 rax, rdi
  000b7	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000bb	5f		 pop	 rdi
  000bc	c3		 ret	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
_Old_size$1 = 32
$T2 = 40
this$ = 64
_Newcap$ = 72
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve, COMDAT

; 3593 :     void reserve(_CRT_GUARDOVERFLOW const size_type _Newcap = 0) { // determine new minimum length of allocated storage

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 3594 :         if (_Mypair._Myval2._Mysize > _Newcap) { // requested capacity is not large enough for current size, ignore

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newcap$[rsp]
  0002d	48 39 48 18	 cmp	 QWORD PTR [rax+24], rcx
  00031	76 05		 jbe	 SHORT $LN2@reserve

; 3595 :             return; // nothing to do

  00033	e9 9d 00 00 00	 jmp	 $LN1@reserve
$LN2@reserve:

; 3596 :         }
; 3597 : 
; 3598 :         if (_Mypair._Myval2._Myres == _Newcap) { // we're already at the requested capacity

  00038	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newcap$[rsp]
  00042	48 39 48 20	 cmp	 QWORD PTR [rax+32], rcx
  00046	75 05		 jne	 SHORT $LN3@reserve

; 3599 :             return; // nothing to do

  00048	e9 88 00 00 00	 jmp	 $LN1@reserve
$LN3@reserve:

; 3600 :         }
; 3601 : 
; 3602 :         if (_Mypair._Myval2._Myres < _Newcap) { // reallocate to grow

  0004d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00052	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newcap$[rsp]
  00057	48 39 48 20	 cmp	 QWORD PTR [rax+32], rcx
  0005b	73 52		 jae	 SHORT $LN4@reserve

; 3603 :             const size_type _Old_size = _Mypair._Myval2._Mysize;

  0005d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00062	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00066	48 89 44 24 20	 mov	 QWORD PTR _Old_size$1[rsp], rax

; 3604 :             _Reallocate_grow_by(

  0006b	48 8d 44 24 28	 lea	 rax, QWORD PTR $T2[rsp]
  00070	48 8b f8	 mov	 rdi, rax
  00073	33 c0		 xor	 eax, eax
  00075	b9 01 00 00 00	 mov	 ecx, 1
  0007a	f3 aa		 rep stosb
  0007c	48 8b 44 24 20	 mov	 rax, QWORD PTR _Old_size$1[rsp]
  00081	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newcap$[rsp]
  00086	48 2b c8	 sub	 rcx, rax
  00089	48 8b c1	 mov	 rax, rcx
  0008c	44 0f b6 44 24
	28		 movzx	 r8d, BYTE PTR $T2[rsp]
  00092	48 8b d0	 mov	 rdx, rax
  00095	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0009a	e8 00 00 00 00	 call	 ??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >

; 3605 :                 _Newcap - _Old_size, [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size) {
; 3606 :                     _Traits::copy(_New_ptr, _Old_ptr, _Old_size + 1);
; 3607 :                 });
; 3608 : 
; 3609 :             _Mypair._Myval2._Mysize = _Old_size;

  0009f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000a4	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Old_size$1[rsp]
  000a9	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 3610 :             return;

  000ad	eb 26		 jmp	 SHORT $LN1@reserve
$LN4@reserve:

; 3611 :         }
; 3612 : 
; 3613 :         if (_BUF_SIZE > _Newcap && _Mypair._Myval2._Large_string_engaged()) {

  000af	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Newcap$[rsp], 16
  000b5	73 1e		 jae	 SHORT $LN5@reserve
  000b7	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000bc	48 8b c8	 mov	 rcx, rax
  000bf	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  000c4	0f b6 c0	 movzx	 eax, al
  000c7	85 c0		 test	 eax, eax
  000c9	74 0a		 je	 SHORT $LN5@reserve

; 3614 :             // deallocate everything; switch back to "small" mode
; 3615 :             _Become_small();

  000cb	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000d0	e8 00 00 00 00	 call	 ?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Become_small
$LN5@reserve:
$LN1@reserve:

; 3616 :             return;
; 3617 :         }
; 3618 : 
; 3619 :         // ignore requests to reserve to [_BUF_SIZE, _Myres)
; 3620 :     }

  000d5	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000d9	5f		 pop	 rdi
  000da	c3		 ret	 0
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z
_TEXT	SEGMENT
_Old_size$ = 32
this$ = 64
_Newsize$ = 72
_Ch$ = 80
?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize, COMDAT

; 3579 :     void resize(_CRT_GUARDOVERFLOW const size_type _Newsize, const _Elem _Ch = _Elem()) {

$LN5:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 3580 :         // determine new length, padding with _Ch elements as needed
; 3581 :         const size_type _Old_size = size();

  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  00032	48 89 44 24 20	 mov	 QWORD PTR _Old_size$[rsp], rax

; 3582 :         if (_Newsize <= _Old_size) {

  00037	48 8b 44 24 20	 mov	 rax, QWORD PTR _Old_size$[rsp]
  0003c	48 39 44 24 48	 cmp	 QWORD PTR _Newsize$[rsp], rax
  00041	77 11		 ja	 SHORT $LN2@resize

; 3583 :             _Eos(_Newsize);

  00043	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  00048	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004d	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 3584 :         } else {

  00052	eb 23		 jmp	 SHORT $LN3@resize
$LN2@resize:

; 3585 :             append(_Newsize - _Old_size, _Ch);

  00054	48 8b 44 24 20	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00059	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newsize$[rsp]
  0005e	48 2b c8	 sub	 rcx, rax
  00061	48 8b c1	 mov	 rax, rcx
  00064	44 0f b6 44 24
	50		 movzx	 r8d, BYTE PTR _Ch$[rsp]
  0006a	48 8b d0	 mov	 rdx, rax
  0006d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00072	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN3@resize:

; 3586 :         }
; 3587 :     }

  00077	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0007b	5f		 pop	 rdi
  0007c	c3		 ret	 0
?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_Alloc_max$ = 40
_Storage_max$ = 56
$T4 = 64
$T5 = 72
$T6 = 80
this$ = 112
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT

; 3570 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 18 00 00 00	 mov	 ecx, 24
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 3571 :         const size_type _Alloc_max   = _Alty_traits::max_size(_Getal());

  0001e	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
  00030	48 89 44 24 28	 mov	 QWORD PTR _Alloc_max$[rsp], rax

; 3572 :         const size_type _Storage_max = // can always store small string

  00035	48 c7 44 24 40
	10 00 00 00	 mov	 QWORD PTR $T4[rsp], 16
  0003e	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T4[rsp]
  00043	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Alloc_max$[rsp]
  00048	e8 00 00 00 00	 call	 ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Max_value<unsigned __int64>
  0004d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00050	48 89 44 24 38	 mov	 QWORD PTR _Storage_max$[rsp], rax

; 3573 :             _Max_value(_Alloc_max, static_cast<size_type>(_BUF_SIZE));
; 3574 :         return _Min_value(static_cast<size_type>((numeric_limits<difference_type>::max)()),

  00055	48 8b 44 24 38	 mov	 rax, QWORD PTR _Storage_max$[rsp]
  0005a	48 ff c8	 dec	 rax
  0005d	48 89 44 24 48	 mov	 QWORD PTR $T5[rsp], rax
  00062	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  00067	48 89 44 24 50	 mov	 QWORD PTR $T6[rsp], rax
  0006c	48 8d 54 24 48	 lea	 rdx, QWORD PTR $T5[rsp]
  00071	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T6[rsp]
  00076	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0007b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 3575 :             _Storage_max - 1 // -1 is for null terminator and/or npos
; 3576 :         );
; 3577 :     }

  0007e	48 8b f8	 mov	 rdi, rax
  00081	48 8b cc	 mov	 rcx, rsp
  00084	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcFrameData
  0008b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00090	48 8b c7	 mov	 rax, rdi
  00093	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00097	5f		 pop	 rdi
  00098	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 16
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT

; 3566 :     _NODISCARD size_type size() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 3567 :         return _Mypair._Myval2._Mysize;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]

; 3568 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 48
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT

; 3548 :     _NODISCARD _Ret_z_ const _Elem* c_str() const noexcept { // return pointer to null-terminated immutable array

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3549 :         return _Mypair._Myval2._Myptr();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0002b	90		 npad	 1

; 3550 :     }

  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z
_TEXT	SEGMENT
this$ = 64
_Off$ = 72
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[], COMDAT

; 3474 :     _NODISCARD const_reference operator[](const size_type _Off) const noexcept { // strengthened

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN4@operator:

; 3475 : #if _CONTAINER_DEBUG_LEVEL > 0
; 3476 :         _STL_VERIFY(_Off <= _Mypair._Myval2._Mysize, "string subscript out of range");

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0002c	48 39 44 24 48	 cmp	 QWORD PTR _Off$[rsp], rax
  00031	77 02		 ja	 SHORT $LN7@operator
  00033	eb 6d		 jmp	 SHORT $LN9@operator
$LN7@operator:
  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BO@LFGPDMIB@string?5subscript?5out?5of?5range@
  0003c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00048	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004d	45 33 c9	 xor	 r9d, r9d
  00050	41 b8 94 0d 00
	00		 mov	 r8d, 3476		; 00000d94H
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@KAEHDKAJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0005d	b9 02 00 00 00	 mov	 ecx, 2
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00068	90		 npad	 1
  00069	83 f8 01	 cmp	 eax, 1
  0006c	75 03		 jne	 SHORT $LN11@operator
  0006e	cc		 int	 3
  0006f	33 c0		 xor	 eax, eax
$LN11@operator:
  00071	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0007a	41 b9 94 0d 00
	00		 mov	 r9d, 3476		; 00000d94H
  00080	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@MNJEKPBN@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00087	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LO@NPPEKPAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@
  0008e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EA@OADAPGGK@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
  00095	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009b	90		 npad	 1
  0009c	33 c0		 xor	 eax, eax
  0009e	85 c0		 test	 eax, eax
  000a0	75 93		 jne	 SHORT $LN7@operator
$LN9@operator:
  000a2	33 c0		 xor	 eax, eax
  000a4	85 c0		 test	 eax, eax
  000a6	0f 85 77 ff ff
	ff		 jne	 $LN4@operator

; 3477 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 3478 :         return _Mypair._Myval2._Myptr()[_Off];

  000ac	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000b1	48 8b c8	 mov	 rcx, rax
  000b4	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  000b9	90		 npad	 1
  000ba	48 03 44 24 48	 add	 rax, QWORD PTR _Off$[rsp]

; 3479 :     }

  000bf	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000c3	5f		 pop	 rdi
  000c4	c3		 ret	 0
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z
_TEXT	SEGMENT
this$ = 64
_Off$ = 72
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[], COMDAT

; 3467 :     _NODISCARD reference operator[](const size_type _Off) noexcept { // strengthened

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN4@operator:

; 3468 : #if _CONTAINER_DEBUG_LEVEL > 0
; 3469 :         _STL_VERIFY(_Off <= _Mypair._Myval2._Mysize, "string subscript out of range");

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0002c	48 39 44 24 48	 cmp	 QWORD PTR _Off$[rsp], rax
  00031	77 02		 ja	 SHORT $LN7@operator
  00033	eb 6d		 jmp	 SHORT $LN9@operator
$LN7@operator:
  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BO@LFGPDMIB@string?5subscript?5out?5of?5range@
  0003c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00048	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004d	45 33 c9	 xor	 r9d, r9d
  00050	41 b8 8d 0d 00
	00		 mov	 r8d, 3469		; 00000d8dH
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@KAEHDKAJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0005d	b9 02 00 00 00	 mov	 ecx, 2
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00068	90		 npad	 1
  00069	83 f8 01	 cmp	 eax, 1
  0006c	75 03		 jne	 SHORT $LN11@operator
  0006e	cc		 int	 3
  0006f	33 c0		 xor	 eax, eax
$LN11@operator:
  00071	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0007a	41 b9 8d 0d 00
	00		 mov	 r9d, 3469		; 00000d8dH
  00080	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@MNJEKPBN@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00087	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LO@NPPEKPAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@
  0008e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EA@OADAPGGK@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
  00095	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009b	90		 npad	 1
  0009c	33 c0		 xor	 eax, eax
  0009e	85 c0		 test	 eax, eax
  000a0	75 93		 jne	 SHORT $LN7@operator
$LN9@operator:
  000a2	33 c0		 xor	 eax, eax
  000a4	85 c0		 test	 eax, eax
  000a6	0f 85 77 ff ff
	ff		 jne	 $LN4@operator

; 3470 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 3471 :         return _Mypair._Myval2._Myptr()[_Off];

  000ac	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000b1	48 8b c8	 mov	 rcx, rax
  000b4	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  000b9	90		 npad	 1
  000ba	48 03 44 24 48	 add	 rax, QWORD PTR _Off$[rsp]

; 3472 :     }

  000bf	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000c3	5f		 pop	 rdi
  000c4	c3		 ret	 0
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 2860 :     basic_string& assign(_In_z_ const _Elem* const _Ptr) { // assign [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2861 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00028	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00035	4c 8b c0	 mov	 r8, rax
  00038	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2862 :     }

  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
_TEXT	SEGMENT
_Old_ptr$1 = 32
$T2 = 40
$T3 = 41
this$ = 64
_Ptr$ = 72
_Count$ = 80
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 2841 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2842 :         // assign [_Ptr, _Ptr + _Count)
; 2843 :         if (_Count <= _Mypair._Myval2._Myres) {

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00031	48 39 44 24 50	 cmp	 QWORD PTR _Count$[rsp], rax
  00036	77 5d		 ja	 SHORT $LN2@assign

; 2844 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  00038	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b c8	 mov	 rcx, rax
  00040	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00045	48 89 44 24 20	 mov	 QWORD PTR _Old_ptr$1[rsp], rax

; 2845 :             _Mypair._Myval2._Mysize = _Count;

  0004a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0004f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Count$[rsp]
  00054	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2846 :             _Traits::move(_Old_ptr, _Ptr, _Count);

  00058	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Count$[rsp]
  0005d	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00062	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  00067	e8 00 00 00 00	 call	 ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move

; 2847 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0006c	c6 44 24 28 00	 mov	 BYTE PTR $T2[rsp], 0
  00071	48 8b 44 24 50	 mov	 rax, QWORD PTR _Count$[rsp]
  00076	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  0007b	48 03 c8	 add	 rcx, rax
  0007e	48 8b c1	 mov	 rax, rcx
  00081	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T2[rsp]
  00086	48 8b c8	 mov	 rcx, rax
  00089	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2848 :             return *this;

  0008e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00093	eb 2b		 jmp	 SHORT $LN1@assign
$LN2@assign:

; 2849 :         }
; 2850 : 
; 2851 :         return _Reallocate_for(

  00095	48 8d 44 24 29	 lea	 rax, QWORD PTR $T3[rsp]
  0009a	48 8b f8	 mov	 rdi, rax
  0009d	33 c0		 xor	 eax, eax
  0009f	b9 01 00 00 00	 mov	 ecx, 1
  000a4	f3 aa		 rep stosb
  000a6	4c 8b 4c 24 48	 mov	 r9, QWORD PTR _Ptr$[rsp]
  000ab	44 0f b6 44 24
	29		 movzx	 r8d, BYTE PTR $T3[rsp]
  000b1	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Count$[rsp]
  000b6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000bb	e8 00 00 00 00	 call	 ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
$LN1@assign:

; 2852 :             _Count,
; 2853 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {
; 2854 :                 _Traits::copy(_New_ptr, _Ptr, _Count);
; 2855 :                 _Traits::assign(_New_ptr[_Count], _Elem());
; 2856 :             },
; 2857 :             _Ptr);
; 2858 :     }

  000c0	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000c4	5f		 pop	 rdi
  000c5	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
_TEXT	SEGMENT
_Old_size$ = 48
_Old_ptr$1 = 56
$T2 = 64
$T3 = 65
this$ = 96
_Count$ = 104
_Ch$ = 112
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2760 :     basic_string& append(_CRT_GUARDOVERFLOW const size_type _Count, const _Elem _Ch) { // append _Count * _Ch

$LN4:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 2761 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  00028	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00031	48 89 44 24 30	 mov	 QWORD PTR _Old_size$[rsp], rax

; 2762 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

  00036	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00040	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00044	48 2b c1	 sub	 rax, rcx
  00047	48 39 44 24 68	 cmp	 QWORD PTR _Count$[rsp], rax
  0004c	0f 87 82 00 00
	00		 ja	 $LN2@append

; 2763 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  00052	48 8b 44 24 68	 mov	 rax, QWORD PTR _Count$[rsp]
  00057	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0005c	48 03 c8	 add	 rcx, rax
  0005f	48 8b c1	 mov	 rax, rcx
  00062	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00067	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 2764 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  0006b	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00070	48 8b c8	 mov	 rcx, rax
  00073	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00078	48 89 44 24 38	 mov	 QWORD PTR _Old_ptr$1[rsp], rax

; 2765 :             _Traits::assign(_Old_ptr + _Old_size, _Count, _Ch);

  0007d	48 8b 44 24 30	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00082	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  00087	48 03 c8	 add	 rcx, rax
  0008a	48 8b c1	 mov	 rax, rcx
  0008d	44 0f b6 44 24
	70		 movzx	 r8d, BYTE PTR _Ch$[rsp]
  00093	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Count$[rsp]
  00098	48 8b c8	 mov	 rcx, rax
  0009b	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2766 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

  000a0	c6 44 24 40 00	 mov	 BYTE PTR $T2[rsp], 0
  000a5	48 8b 44 24 68	 mov	 rax, QWORD PTR _Count$[rsp]
  000aa	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  000af	48 03 c8	 add	 rcx, rax
  000b2	48 8b c1	 mov	 rax, rcx
  000b5	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  000ba	48 03 c8	 add	 rcx, rax
  000bd	48 8b c1	 mov	 rax, rcx
  000c0	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T2[rsp]
  000c5	48 8b c8	 mov	 rcx, rax
  000c8	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2767 :             return *this;

  000cd	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  000d2	eb 34		 jmp	 SHORT $LN1@append
$LN2@append:

; 2768 :         }
; 2769 : 
; 2770 :         return _Reallocate_grow_by(

  000d4	48 8d 44 24 41	 lea	 rax, QWORD PTR $T3[rsp]
  000d9	48 8b f8	 mov	 rdi, rax
  000dc	33 c0		 xor	 eax, eax
  000de	b9 01 00 00 00	 mov	 ecx, 1
  000e3	f3 aa		 rep stosb
  000e5	0f b6 44 24 70	 movzx	 eax, BYTE PTR _Ch$[rsp]
  000ea	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  000ee	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Count$[rsp]
  000f3	44 0f b6 44 24
	41		 movzx	 r8d, BYTE PTR $T3[rsp]
  000f9	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Count$[rsp]
  000fe	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00103	e8 00 00 00 00	 call	 ??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>
$LN1@append:

; 2771 :             _Count,
; 2772 :             [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size, const size_type _Count,
; 2773 :                 const _Elem _Ch) {
; 2774 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);
; 2775 :                 _Traits::assign(_New_ptr + _Old_size, _Count, _Ch);
; 2776 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());
; 2777 :             },
; 2778 :             _Count, _Ch);
; 2779 :     }

  00108	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0010c	5f		 pop	 rdi
  0010d	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2756 :     basic_string& append(_In_z_ const _Elem* const _Ptr) { // append [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2757 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00028	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00035	4c 8b c0	 mov	 r8, rax
  00038	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2758 :     }

  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
_TEXT	SEGMENT
_Old_size$ = 48
_Old_ptr$1 = 56
$T2 = 64
$T3 = 65
this$ = 96
_Ptr$ = 104
_Count$ = 112
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2734 :     basic_string& append(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 2735 :         // append [_Ptr, _Ptr + _Count)
; 2736 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  00028	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00031	48 89 44 24 30	 mov	 QWORD PTR _Old_size$[rsp], rax

; 2737 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

  00036	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00040	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00044	48 2b c1	 sub	 rax, rcx
  00047	48 39 44 24 70	 cmp	 QWORD PTR _Count$[rsp], rax
  0004c	0f 87 81 00 00
	00		 ja	 $LN2@append

; 2738 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  00052	48 8b 44 24 70	 mov	 rax, QWORD PTR _Count$[rsp]
  00057	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0005c	48 03 c8	 add	 rcx, rax
  0005f	48 8b c1	 mov	 rax, rcx
  00062	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00067	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 2739 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  0006b	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00070	48 8b c8	 mov	 rcx, rax
  00073	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00078	48 89 44 24 38	 mov	 QWORD PTR _Old_ptr$1[rsp], rax

; 2740 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

  0007d	48 8b 44 24 30	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00082	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  00087	48 03 c8	 add	 rcx, rax
  0008a	48 8b c1	 mov	 rax, rcx
  0008d	4c 8b 44 24 70	 mov	 r8, QWORD PTR _Count$[rsp]
  00092	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00097	48 8b c8	 mov	 rcx, rax
  0009a	e8 00 00 00 00	 call	 ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move

; 2741 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

  0009f	c6 44 24 40 00	 mov	 BYTE PTR $T2[rsp], 0
  000a4	48 8b 44 24 70	 mov	 rax, QWORD PTR _Count$[rsp]
  000a9	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  000ae	48 03 c8	 add	 rcx, rax
  000b1	48 8b c1	 mov	 rax, rcx
  000b4	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  000b9	48 03 c8	 add	 rcx, rax
  000bc	48 8b c1	 mov	 rax, rcx
  000bf	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T2[rsp]
  000c4	48 8b c8	 mov	 rcx, rax
  000c7	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2742 :             return *this;

  000cc	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  000d1	eb 35		 jmp	 SHORT $LN1@append
$LN2@append:

; 2743 :         }
; 2744 : 
; 2745 :         return _Reallocate_grow_by(

  000d3	48 8d 44 24 41	 lea	 rax, QWORD PTR $T3[rsp]
  000d8	48 8b f8	 mov	 rdi, rax
  000db	33 c0		 xor	 eax, eax
  000dd	b9 01 00 00 00	 mov	 ecx, 1
  000e2	f3 aa		 rep stosb
  000e4	48 8b 44 24 70	 mov	 rax, QWORD PTR _Count$[rsp]
  000e9	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000ee	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Ptr$[rsp]
  000f3	44 0f b6 44 24
	41		 movzx	 r8d, BYTE PTR $T3[rsp]
  000f9	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Count$[rsp]
  000fe	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00103	e8 00 00 00 00	 call	 ??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
$LN1@append:

; 2746 :             _Count,
; 2747 :             [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size, const _Elem* const _Ptr,
; 2748 :                 const size_type _Count) {
; 2749 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);
; 2750 :                 _Traits::copy(_New_ptr + _Old_size, _Ptr, _Count);
; 2751 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());
; 2752 :             },
; 2753 :             _Ptr, _Count);
; 2754 :     }

  00108	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0010c	5f		 pop	 rdi
  0010d	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2708 :     basic_string& append(const basic_string& _Right) { // append _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2709 :         return append(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00030	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00035	4c 8b 41 18	 mov	 r8, QWORD PTR [rcx+24]
  00039	48 8b d0	 mov	 rdx, rax
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2710 :     }

  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT

; 2699 :     basic_string& operator+=(_In_z_ const _Elem* const _Ptr) { // append [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2700 :         return append(_Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2701 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT

; 2688 :     basic_string& operator+=(const basic_string& _Right) { // append _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2689 :         return append(_Right);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2690 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT

; 2676 :     basic_string& operator=(_In_z_ const _Elem* const _Ptr) { // assign [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2677 :         return assign(_Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2678 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S14$ = 52
_To_delete$ = 72
this$ = 96
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2597 :     ~basic_string() noexcept { // destroy the string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 2598 :         _Tidy_deallocate();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
  00028	90		 npad	 1

; 2599 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2600 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S14$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S14$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 2601 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;

  0004c	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00051	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00054	48 89 44 24 48	 mov	 QWORD PTR _To_delete$[rsp], rax

; 2602 :         _Mypair._Myval2._Myproxy = nullptr;

  00059	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2603 :         _Delete_plain_internal(_Alproxy, _To_delete);

  00065	48 8b 54 24 48	 mov	 rdx, QWORD PTR _To_delete$[rsp]
  0006a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  0006f	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00074	90		 npad	 1

; 2604 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2605 :     }

  00075	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0007a	48 8b c8	 mov	 rcx, rax
  0007d	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  00082	90		 npad	 1
  00083	48 8b cc	 mov	 rcx, rsp
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcFrameData
  0008d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00092	90		 npad	 1
  00093	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00097	5f		 pop	 rdi
  00098	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S14$ = 52
_To_delete$ = 72
this$ = 96
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S14$ = 52
_To_delete$ = 72
this$ = 96
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
__formal$ = 64
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents, COMDAT

; 2484 :     void _Take_contents(basic_string& _Right, true_type) noexcept {

$LN5:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2485 :         // assign by stealing _Right's buffer, memcpy optimization
; 2486 :         // pre: this != &_Right
; 2487 :         // pre: allocator propagation (POCMA) from _Right, if necessary, is complete
; 2488 :         // pre: *this owns no memory, iterators orphaned (note:
; 2489 :         // _Buf/_Ptr/_Mysize/_Myres may be garbage init)
; 2490 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2491 :         if (_Right._Mypair._Myval2._Large_string_engaged()) {

  00028	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00035	90		 npad	 1
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	74 12		 je	 SHORT $LN2@Take_conte

; 2492 :             // take ownership of _Right's iterators along with its buffer
; 2493 :             _Swap_proxy_and_iterators(_Right);

  0003d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00042	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00047	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
  0004c	90		 npad	 1

; 2494 :         } else {

  0004d	eb 0e		 jmp	 SHORT $LN3@Take_conte
$LN2@Take_conte:

; 2495 :             _Right._Mypair._Myval2._Orphan_all();

  0004f	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1
$LN3@Take_conte:

; 2496 :         }
; 2497 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2498 : 
; 2499 :         _Memcpy_val_from(_Right);

  0005d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00062	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00067	e8 00 00 00 00	 call	 ?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
  0006c	90		 npad	 1

; 2500 :         _Right._Tidy_init();

  0006d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00072	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
  00077	90		 npad	 1

; 2501 :     }

  00078	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007c	5f		 pop	 rdi
  0007d	c3		 ret	 0
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
_TEXT	SEGMENT
_My_data_mem$ = 32
_Right_data_mem$ = 40
this$ = 64
_Right$ = 72
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from, COMDAT

; 2475 :     void _Memcpy_val_from(const basic_string& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2476 :         _STL_INTERNAL_CHECK(_Can_memcpy_val); // TRANSITION, if constexpr
; 2477 :         const auto _My_data_mem =

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
  00030	90		 npad	 1
  00031	48 83 c0 08	 add	 rax, 8
  00035	48 89 44 24 20	 mov	 QWORD PTR _My_data_mem$[rsp], rax

; 2478 :             reinterpret_cast<unsigned char*>(_STD addressof(_Mypair._Myval2)) + _Memcpy_val_offset;
; 2479 :         const auto _Right_data_mem =

  0003a	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
  00047	90		 npad	 1
  00048	48 83 c0 08	 add	 rax, 8
  0004c	48 89 44 24 28	 mov	 QWORD PTR _Right_data_mem$[rsp], rax

; 2480 :             reinterpret_cast<const unsigned char*>(_STD addressof(_Right._Mypair._Myval2)) + _Memcpy_val_offset;
; 2481 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00051	41 b8 20 00 00
	00		 mov	 r8d, 32			; 00000020H
  00057	48 8b 54 24 28	 mov	 rdx, QWORD PTR _Right_data_mem$[rsp]
  0005c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data_mem$[rsp]
  00061	e8 00 00 00 00	 call	 memcpy
  00066	90		 npad	 1

; 2482 :     }

  00067	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2383 :     basic_string(basic_string&& _Right) noexcept : _Mypair(_One_then_variadic_args_t(), _STD move(_Right._Getal())) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0002d	90		 npad	 1
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>
  00036	90		 npad	 1
  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	4c 8b c0	 mov	 r8, rax
  0003f	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
  00049	90		 npad	 1

; 2384 :         // construct by moving _Right
; 2385 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00054	90		 npad	 1
  00055	48 8b d0	 mov	 rdx, rax
  00058	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  0005d	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00062	90		 npad	 1
  00063	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00068	48 8b d0	 mov	 rdx, rax
  0006b	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00070	90		 npad	 1

; 2386 :         _Take_contents(_Right, bool_constant<_Can_memcpy_val>{});

  00071	48 8d 44 24 22	 lea	 rax, QWORD PTR $T3[rsp]
  00076	48 8b f8	 mov	 rdi, rax
  00079	33 c0		 xor	 eax, eax
  0007b	b9 01 00 00 00	 mov	 ecx, 1
  00080	f3 aa		 rep stosb
  00082	44 0f b6 44 24
	22		 movzx	 r8d, BYTE PTR $T3[rsp]
  00088	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  0008d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00092	e8 00 00 00 00	 call	 ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
  00097	90		 npad	 1

; 2387 :     }

  00098	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0009d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a1	5f		 pop	 rdi
  000a2	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S16$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2297 :     basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t()) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  00029	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00031	0f b6 54 24 74	 movzx	 edx, BYTE PTR $T5[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
  0003e	90		 npad	 1

; 2298 :         // construct from [_Ptr, <null>)
; 2299 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  0003f	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00047	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0004c	48 8b d0	 mov	 rdx, rax
  0004f	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S16$[rsp]
  00054	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00059	48 8d 44 24 34	 lea	 rax, QWORD PTR $S16$[rsp]
  0005e	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 2300 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0006b	4c 8b c0	 mov	 r8, rax
  0006e	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  00073	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  00078	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0007d	90		 npad	 1

; 2301 :         _Tidy_init();

  0007e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00086	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2302 :         assign(_Ptr);

  0008b	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00093	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0009b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2303 :         _Proxy._Release();

  000a0	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000a5	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000aa	90		 npad	 1

; 2304 :     }

  000ab	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000b0	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000b5	90		 npad	 1
  000b6	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000be	48 8b f8	 mov	 rdi, rax
  000c1	48 8b cc	 mov	 rcx, rsp
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcFrameData
  000cb	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d0	48 8b c7	 mov	 rax, rdi
  000d3	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  000da	5f		 pop	 rdi
  000db	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S16$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S16$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S16$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S16$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2247 :     basic_string() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t()) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
  00030	90		 npad	 1

; 2248 :         // construct empty string
; 2249 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 2250 :         _Tidy_init();

  00058	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0005d	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
  00062	90		 npad	 1

; 2251 :     }

  00063	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00068	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006c	5f		 pop	 rdi
  0006d	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  0002f	90		 npad	 1
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT

; 2148 :         ~_Bxty() noexcept {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT

; 2146 :         _Bxty() {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv66 = 0
this$ = 32
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT

; 2120 :     bool _Large_string_engaged() const { // returns whether the large string mode (allocated memory) is engaged

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 2121 :         return _BUF_SIZE <= _Myres;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 20 10	 cmp	 QWORD PTR [rax+32], 16
  00028	72 09		 jb	 SHORT $LN3@Large_stri
  0002a	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv66[rsp], 1
  00031	eb 07		 jmp	 SHORT $LN4@Large_stri
$LN3@Large_stri:
  00033	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv66[rsp], 0
$LN4@Large_stri:
  0003a	0f b6 04 24	 movzx	 eax, BYTE PTR tv66[rsp]

; 2122 :     }

  0003e	48 83 c4 10	 add	 rsp, 16
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
_Result$ = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2111 :     const value_type* _Myptr() const { // determine current pointer to buffer for immutable string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2112 :         const value_type* _Result = _Bx._Buf;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax

; 2113 :         if (_Large_string_engaged()) {

  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00031	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	74 13		 je	 SHORT $LN2@Myptr

; 2114 :             _Result = _Unfancy(_Bx._Ptr);

  0003d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00046	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  0004b	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax
$LN2@Myptr:

; 2115 :         }
; 2116 : 
; 2117 :         return _Result;

  00050	48 8b 44 24 20	 mov	 rax, QWORD PTR _Result$[rsp]

; 2118 :     }

  00055	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
_Result$ = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2102 :     value_type* _Myptr() { // determine current pointer to buffer for mutable string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2103 :         value_type* _Result = _Bx._Buf;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax

; 2104 :         if (_Large_string_engaged()) {

  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00031	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	74 13		 je	 SHORT $LN2@Myptr

; 2105 :             _Result = _Unfancy(_Bx._Ptr);

  0003d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00046	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  0004b	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax
$LN2@Myptr:

; 2106 :         }
; 2107 : 
; 2108 :         return _Result;

  00050	48 8b 44 24 20	 mov	 rax, QWORD PTR _Result$[rsp]

; 2109 :     }

  00055	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT

; 2092 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
  00039	90		 npad	 1
  0003a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 c7 40 20 00
	00 00 00	 mov	 QWORD PTR [rax+32], 0
  00054	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1

; 768  :     }

  0000d	5f		 pop	 rdi
  0000e	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z PROC		; std::allocator<char>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$00@std@@YA_K_K@Z ; std::_Get_size_of_n<1>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z PROC	; std::allocator<char>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Count$[rsp]
  0002d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ENDP	; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@D@std@@QEAA@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@D@std@@QEAA@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 16
_Right$ = 24
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z PROC ; std::_Narrow_char_traits<char,int>::assign, COMDAT

; 377  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept { // assign an element

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 378  :         _Left = _Right;

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR _Left$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Right$[rsp]
  00015	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  00018	88 08		 mov	 BYTE PTR [rax], cl

; 379  :     }

  0001a	5f		 pop	 rdi
  0001b	c3		 ret	 0
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ENDP ; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
_Ch$ = 64
?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z PROC ; std::_Narrow_char_traits<char,int>::assign, COMDAT

; 372  :         const _Elem _Ch) noexcept { // strengthened

$LN3:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 373  :         // assign _Count * _Ch to [_First, ...)
; 374  :         return static_cast<_Elem*>(_CSTD memset(_First, _Ch, _Count));

  00028	0f be 44 24 40	 movsx	 eax, BYTE PTR _Ch$[rsp]
  0002d	4c 8b 44 24 38	 mov	 r8, QWORD PTR _Count$[rsp]
  00032	8b d0		 mov	 edx, eax
  00034	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00039	e8 00 00 00 00	 call	 memset
  0003e	90		 npad	 1

; 375  :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z ENDP ; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC ; std::_Narrow_char_traits<char,int>::move, COMDAT

; 366  :         const size_t _Count) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 367  :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 368  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Count$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _First2$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First1$[rsp]
  00037	e8 00 00 00 00	 call	 memmove
  0003c	90		 npad	 1

; 369  :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP ; std::_Narrow_char_traits<char,int>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC ; std::_Narrow_char_traits<char,int>::copy, COMDAT

; 331  :         const size_t _Count) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 332  :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 333  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Count$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _First2$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First1$[rsp]
  00037	e8 00 00 00 00	 call	 memcpy
  0003c	90		 npad	 1

; 334  :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP ; std::_Narrow_char_traits<char,int>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
_TEXT	SEGMENT
_First$ = 48
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT

; 310  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* const _First) noexcept { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 311  :         // find length of null-terminated string
; 312  : #if _HAS_CXX17
; 313  : #if _HAS_CHAR8_T
; 314  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 315  : #if _HAS_U8_INTRINSICS
; 316  :             return __builtin_u8strlen(_First);
; 317  : #else // ^^^ use u8 intrinsics / no u8 intrinsics vvv
; 318  :             return _Char_traits<_Elem, _Int_type>::length(_First);
; 319  : #endif // _HAS_U8_INTRINSICS
; 320  :         } else
; 321  : #endif // _HAS_CHAR8_T
; 322  :         {
; 323  :             return __builtin_strlen(_First);
; 324  :         }
; 325  : #else // _HAS_CXX17
; 326  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00023	e8 00 00 00 00	 call	 strlen
  00028	90		 npad	 1

; 327  : #endif // _HAS_CXX17
; 328  :     }

  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decwref@_Ref_count_base@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Decwref@_Ref_count_base@std@@QEAAXXZ PROC		; std::_Ref_count_base::_Decwref, COMDAT

; 657  :     void _Decwref() noexcept { // decrement weak reference count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 658  :         if (_MT_DECR(_Weaks) == 0) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 0c	 add	 rax, 12
  00027	b9 ff ff ff ff	 mov	 ecx, -1
  0002c	f0 0f c1 08	 lock xadd DWORD PTR [rax], ecx
  00030	ff c9		 dec	 ecx
  00032	8b c1		 mov	 eax, ecx
  00034	85 c0		 test	 eax, eax
  00036	75 10		 jne	 SHORT $LN2@Decwref

; 659  :             _Delete_this();

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00045	ff 50 08	 call	 QWORD PTR [rax+8]
$LN2@Decwref:

; 660  :         }
; 661  :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?_Decwref@_Ref_count_base@std@@QEAAXXZ ENDP		; std::_Ref_count_base::_Decwref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decref@_Ref_count_base@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Decref@_Ref_count_base@std@@QEAAXXZ PROC		; std::_Ref_count_base::_Decref, COMDAT

; 650  :     void _Decref() noexcept { // decrement use count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 651  :         if (_MT_DECR(_Uses) == 0) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	b9 ff ff ff ff	 mov	 ecx, -1
  0002c	f0 0f c1 08	 lock xadd DWORD PTR [rax], ecx
  00030	ff c9		 dec	 ecx
  00032	8b c1		 mov	 eax, ecx
  00034	85 c0		 test	 eax, eax
  00036	75 19		 jne	 SHORT $LN2@Decref

; 652  :             _Destroy();

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00045	ff 10		 call	 QWORD PTR [rax]

; 653  :             _Decwref();

  00047	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004c	e8 00 00 00 00	 call	 ?_Decwref@_Ref_count_base@std@@QEAAXXZ ; std::_Ref_count_base::_Decwref
$LN2@Decref:

; 654  :         }
; 655  :     }

  00051	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?_Decref@_Ref_count_base@std@@QEAAXXZ ENDP		; std::_Ref_count_base::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ PROC ; std::_Basic_container_proxy_ptr12::_Release, COMDAT

; 1348 :     void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1349 :         _Ptr = nullptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1350 :     }

  00012	5f		 pop	 rdi
  00013	c3		 ret	 0
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ENDP ; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Pnext$1 = 48
this$ = 80
?_Orphan_me@_Iterator_base12@std@@QEAAXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT

; 1267 :     void _Orphan_me() noexcept {

$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1268 :         if (_Myproxy) { // adopted, remove self from list

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	0f 84 db 00 00
	00		 je	 $LN10@Orphan_me

; 1269 :             _Iterator_base12** _Pnext = &_Myproxy->_Myfirstiter;

  0002d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00035	48 83 c0 08	 add	 rax, 8
  00039	48 89 44 24 30	 mov	 QWORD PTR _Pnext$1[rsp], rax
$LN2@Orphan_me:

; 1270 :             while (*_Pnext && *_Pnext != this) {

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pnext$1[rsp]
  00043	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00047	74 22		 je	 SHORT $LN6@Orphan_me
  00049	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pnext$1[rsp]
  0004e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00053	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00056	74 13		 je	 SHORT $LN6@Orphan_me

; 1271 :                 _Pnext = &(*_Pnext)->_Mynextiter;

  00058	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pnext$1[rsp]
  0005d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00060	48 83 c0 08	 add	 rax, 8
  00064	48 89 44 24 30	 mov	 QWORD PTR _Pnext$1[rsp], rax

; 1272 :             }

  00069	eb d3		 jmp	 SHORT $LN2@Orphan_me
$LN6@Orphan_me:

; 1273 : 
; 1274 :             _STL_VERIFY(*_Pnext, "ITERATOR LIST CORRUPTED!");

  0006b	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pnext$1[rsp]
  00070	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00074	74 02		 je	 SHORT $LN9@Orphan_me
  00076	eb 6d		 jmp	 SHORT $LN12@Orphan_me
$LN9@Orphan_me:
  00078	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
  0007f	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00084	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0008b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00090	45 33 c9	 xor	 r9d, r9d
  00093	41 b8 fa 04 00
	00		 mov	 r8d, 1274		; 000004faH
  00099	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000a0	b9 02 00 00 00	 mov	 ecx, 2
  000a5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000ab	90		 npad	 1
  000ac	83 f8 01	 cmp	 eax, 1
  000af	75 03		 jne	 SHORT $LN14@Orphan_me
  000b1	cc		 int	 3
  000b2	33 c0		 xor	 eax, eax
$LN14@Orphan_me:
  000b4	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000bd	41 b9 fa 04 00
	00		 mov	 r9d, 1274		; 000004faH
  000c3	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000ca	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@
  000d1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
  000d8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000de	90		 npad	 1
  000df	33 c0		 xor	 eax, eax
  000e1	85 c0		 test	 eax, eax
  000e3	75 93		 jne	 SHORT $LN9@Orphan_me
$LN12@Orphan_me:
  000e5	33 c0		 xor	 eax, eax
  000e7	85 c0		 test	 eax, eax
  000e9	75 80		 jne	 SHORT $LN6@Orphan_me

; 1275 :             *_Pnext  = _Mynextiter;

  000eb	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pnext$1[rsp]
  000f0	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000f5	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000f9	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1276 :             _Myproxy = nullptr;

  000fc	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00101	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN10@Orphan_me:

; 1277 :         }
; 1278 :     }

  00108	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0010c	5f		 pop	 rdi
  0010d	c3		 ret	 0
?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = 0
this$ = 32
?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT

; 1262 :     const _Container_base12* _Getcont() const noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1263 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 11		 je	 SHORT $LN3@Getcont
  00029	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00031	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00034	48 89 04 24	 mov	 QWORD PTR tv68[rsp], rax
  00038	eb 08		 jmp	 SHORT $LN4@Getcont
$LN3@Getcont:
  0003a	48 c7 04 24 00
	00 00 00	 mov	 QWORD PTR tv68[rsp], 0
$LN4@Getcont:
  00042	48 8b 04 24	 mov	 rax, QWORD PTR tv68[rsp]

; 1264 :     }

  00046	48 83 c4 10	 add	 rsp, 16
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
_TEXT	SEGMENT
_Parent_proxy$5 = 32
_Lock$6 = 52
_Lock$7 = 84
this$ = 128
_Parent$ = 136
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT

; 1234 :     void _Adopt(const _Container_base12* _Parent) noexcept {

$LN8:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 1c 00 00 00	 mov	 ecx, 28
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]

; 1235 :         if (_Parent) {

  00026	48 83 bc 24 88
	00 00 00 00	 cmp	 QWORD PTR _Parent$[rsp], 0
  0002f	0f 84 85 00 00
	00		 je	 $LN2@Adopt

; 1236 :             // have a parent, do adoption
; 1237 :             _Container_proxy* _Parent_proxy = _Parent->_Myproxy;

  00035	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR _Parent$[rsp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 89 44 24 20	 mov	 QWORD PTR _Parent_proxy$5[rsp], rax

; 1238 : 
; 1239 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1240 :             if (_Myproxy != _Parent_proxy) { // change parentage

  00045	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0004d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Parent_proxy$5[rsp]
  00052	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00055	74 61		 je	 SHORT $LN4@Adopt

; 1241 :                 _Lockit _Lock(_LOCK_DEBUG);

  00057	ba 03 00 00 00	 mov	 edx, 3
  0005c	48 8d 4c 24 34	 lea	 rcx, QWORD PTR _Lock$6[rsp]
  00061	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00067	90		 npad	 1

; 1242 :                 _Orphan_me();

  00068	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00070	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
  00075	90		 npad	 1

; 1243 :                 _Mynextiter                 = _Parent_proxy->_Myfirstiter;

  00076	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0007e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Parent_proxy$5[rsp]
  00083	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00087	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1244 :                 _Parent_proxy->_Myfirstiter = this;

  0008b	48 8b 44 24 20	 mov	 rax, QWORD PTR _Parent_proxy$5[rsp]
  00090	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00098	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1245 :                 _Myproxy                    = _Parent_proxy;

  0009c	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000a4	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Parent_proxy$5[rsp]
  000a9	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1246 :             }

  000ac	48 8d 4c 24 34	 lea	 rcx, QWORD PTR _Lock$6[rsp]
  000b1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000b7	90		 npad	 1
$LN4@Adopt:

; 1247 : 
; 1248 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1249 :             _Myproxy = _Parent_proxy;
; 1250 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1251 :         } else {

  000b8	eb 2b		 jmp	 SHORT $LN3@Adopt
$LN2@Adopt:

; 1252 :             // no future parent, just disown current parent
; 1253 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1254 :             _Lockit _Lock(_LOCK_DEBUG);

  000ba	ba 03 00 00 00	 mov	 edx, 3
  000bf	48 8d 4c 24 54	 lea	 rcx, QWORD PTR _Lock$7[rsp]
  000c4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  000ca	90		 npad	 1

; 1255 :             _Orphan_me();

  000cb	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000d3	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
  000d8	90		 npad	 1

; 1256 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1257 :             _Myproxy = nullptr;
; 1258 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1259 :         }

  000d9	48 8d 4c 24 54	 lea	 rcx, QWORD PTR _Lock$7[rsp]
  000de	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000e4	90		 npad	 1
$LN3@Adopt:

; 1260 :     }

  000e5	48 8b cc	 mov	 rcx, rsp
  000e8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcFrameData
  000ef	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000f4	90		 npad	 1
  000f5	48 83 c4 70	 add	 rsp, 112		; 00000070H
  000f9	5f		 pop	 rdi
  000fa	c3		 ret	 0
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Parent_proxy$5 = 32
_Lock$6 = 52
_Lock$7 = 84
this$ = 128
_Parent$ = 136
?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA PROC ; `std::_Iterator_base12::_Adopt'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 34	 lea	 rcx, QWORD PTR _Lock$6[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA ENDP ; `std::_Iterator_base12::_Adopt'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Parent_proxy$5 = 32
_Lock$6 = 52
_Lock$7 = 84
this$ = 128
_Parent$ = 136
?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA PROC ; `std::_Iterator_base12::_Adopt'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 54	 lea	 rcx, QWORD PTR _Lock$7[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA ENDP ; `std::_Iterator_base12::_Adopt'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Parent_proxy$5 = 32
_Lock$6 = 52
_Lock$7 = 84
this$ = 128
_Parent$ = 136
?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA PROC ; `std::_Iterator_base12::_Adopt'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 34	 lea	 rcx, QWORD PTR _Lock$6[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA ENDP ; `std::_Iterator_base12::_Adopt'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Parent_proxy$5 = 32
_Lock$6 = 52
_Lock$7 = 84
this$ = 128
_Parent$ = 136
?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA PROC ; `std::_Iterator_base12::_Adopt'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 54	 lea	 rcx, QWORD PTR _Lock$7[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA ENDP ; `std::_Iterator_base12::_Adopt'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1_Iterator_base12@std@@QEAA@XZ
_TEXT	SEGMENT
_Lock$ = 36
this$ = 80
??1_Iterator_base12@std@@QEAA@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT

; 1227 :     ~_Iterator_base12() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1228 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1229 :         _Lockit _Lock(_LOCK_DEBUG);

  0001e	ba 03 00 00 00	 mov	 edx, 3
  00023	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00028	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  0002e	90		 npad	 1

; 1230 :         _Orphan_me();

  0002f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00034	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
  00039	90		 npad	 1

; 1231 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1232 :     }

  0003a	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  0003f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00045	90		 npad	 1
  00046	48 8b cc	 mov	 rcx, rsp
  00049	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1_Iterator_base12@std@@QEAA@XZ$rtcFrameData
  00050	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00055	90		 npad	 1
  00056	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??1_Iterator_base12@std@@QEAA@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
this$ = 80
?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA PROC	; `std::_Iterator_base12::~_Iterator_base12'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA ENDP	; `std::_Iterator_base12::~_Iterator_base12'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
this$ = 80
?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA PROC	; `std::_Iterator_base12::~_Iterator_base12'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA ENDP	; `std::_Iterator_base12::~_Iterator_base12'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
_TEXT	SEGMENT
_Lock$4 = 36
this$ = 80
_Right$ = 88
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z PROC	; std::_Iterator_base12::operator=, COMDAT

; 1210 :     _Iterator_base12& operator=(const _Iterator_base12& _Right) noexcept {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1211 :         if (_Myproxy != _Right._Myproxy) {

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	74 4b		 je	 SHORT $LN2@operator

; 1212 :             if (_Right._Myproxy) {

  00035	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0003e	74 18		 je	 SHORT $LN3@operator

; 1213 :                 _Adopt(_Right._Myproxy->_Mycont);

  00040	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  00045	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00048	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0004b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00050	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
  00055	90		 npad	 1

; 1214 :             } else { // becoming invalid, disown current parent

  00056	eb 28		 jmp	 SHORT $LN2@operator
$LN3@operator:

; 1215 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1216 :                 _Lockit _Lock(_LOCK_DEBUG);

  00058	ba 03 00 00 00	 mov	 edx, 3
  0005d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00068	90		 npad	 1

; 1217 :                 _Orphan_me();

  00069	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0006e	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
  00073	90		 npad	 1

; 1218 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1219 :                 _Myproxy = nullptr;
; 1220 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1221 :             }

  00074	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00079	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0007f	90		 npad	 1
$LN2@operator:

; 1222 :         }
; 1223 : 
; 1224 :         return *this;

  00080	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]

; 1225 :     }

  00085	48 8b f8	 mov	 rdi, rax
  00088	48 8b cc	 mov	 rcx, rsp
  0008b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcFrameData
  00092	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00097	90		 npad	 1
  00098	48 8b c7	 mov	 rax, rdi
  0009b	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0009f	5f		 pop	 rdi
  000a0	c3		 ret	 0
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z ENDP	; std::_Iterator_base12::operator=
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
this$ = 80
_Right$ = 88
?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA PROC ; `std::_Iterator_base12::operator='::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA ENDP ; `std::_Iterator_base12::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
this$ = 80
_Right$ = 88
?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA PROC ; `std::_Iterator_base12::operator='::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA ENDP ; `std::_Iterator_base12::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QEAA@AEBU01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0_Iterator_base12@std@@QEAA@AEBU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT

; 1206 :     _Iterator_base12(const _Iterator_base12& _Right) noexcept : _Myproxy(nullptr), _Mynextiter(nullptr) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1207 :         *this = _Right;

  0003c	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00046	e8 00 00 00 00	 call	 ??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z ; std::_Iterator_base12::operator=

; 1208 :     }

  0004b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
??0_Iterator_base12@std@@QEAA@AEBU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Iterator_base12@std@@QEAA@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT

; 1204 :     _Iterator_base12() noexcept : _Myproxy(nullptr), _Mynextiter(nullptr) {} // construct orphaned iterator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	5f		 pop	 rdi
  00025	c3		 ret	 0
??0_Iterator_base12@std@@QEAA@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
_TEXT	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators, COMDAT

; 1302 : inline void _Container_base12::_Swap_proxy_and_iterators(_Container_base12& _Right) noexcept {

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1303 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1304 :     _Lockit _Lock(_LOCK_DEBUG);

  00023	ba 03 00 00 00	 mov	 edx, 3
  00028	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  0002d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00033	90		 npad	 1

; 1305 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1306 : 
; 1307 :     _Container_proxy* _Temp = _Myproxy;

  00034	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	48 89 44 24 38	 mov	 QWORD PTR _Temp$[rsp], rax

; 1308 :     _Myproxy                = _Right._Myproxy;

  00041	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00046	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0004b	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004e	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1309 :     _Right._Myproxy         = _Temp;

  00051	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  00056	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Temp$[rsp]
  0005b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1310 : 
; 1311 :     if (_Myproxy) {

  0005e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00063	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00067	74 10		 je	 SHORT $LN2@Swap_proxy

; 1312 :         _Myproxy->_Mycont = this;

  00069	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00076	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN2@Swap_proxy:

; 1313 :     }
; 1314 : 
; 1315 :     if (_Right._Myproxy) {

  00079	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  0007e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00082	74 10		 je	 SHORT $LN3@Swap_proxy

; 1316 :         _Right._Myproxy->_Mycont = &_Right;

  00084	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  00089	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008c	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00091	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN3@Swap_proxy:

; 1317 :     }
; 1318 : }

  00094	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00099	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0009f	90		 npad	 1
  000a0	48 8b cc	 mov	 rcx, rsp
  000a3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcFrameData
  000aa	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000af	90		 npad	 1
  000b0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000b4	5f		 pop	 rdi
  000b5	c3		 ret	 0
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA PROC ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA ENDP ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA PROC ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA ENDP ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1288 : inline void _Container_base12::_Orphan_all() noexcept {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1289 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1290 :     if (_Myproxy) { // proxy allocated, drain it

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 70		 je	 SHORT $LN5@Orphan_all

; 1291 :         _Lockit _Lock(_LOCK_DEBUG);

  00029	ba 03 00 00 00	 mov	 edx, 3
  0002e	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00033	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00039	90		 npad	 1

; 1292 : 
; 1293 :         for (auto _Pnext = &_Myproxy->_Myfirstiter; *_Pnext; *_Pnext = (*_Pnext)->_Mynextiter) {

  0003a	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00042	48 83 c0 08	 add	 rax, 8
  00046	48 89 44 24 38	 mov	 QWORD PTR _Pnext$5[rsp], rax
  0004b	eb 14		 jmp	 SHORT $LN4@Orphan_all
$LN2@Orphan_all:
  0004d	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00052	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00055	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$5[rsp]
  0005a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0005e	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN4@Orphan_all:
  00061	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00066	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0006a	74 11		 je	 SHORT $LN3@Orphan_all

; 1294 :             (*_Pnext)->_Myproxy = nullptr;

  0006c	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00071	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00074	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1295 :         }

  0007b	eb d0		 jmp	 SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1296 : 
; 1297 :         _Myproxy->_Myfirstiter = nullptr;

  0007d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00082	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00085	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1298 :     }

  0008d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00092	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00098	90		 npad	 1
$LN5@Orphan_all:

; 1299 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1300 : }

  00099	48 8b cc	 mov	 rcx, rsp
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData
  000a3	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a8	90		 npad	 1
  000a9	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000ad	5f		 pop	 rdi
  000ae	c3		 ret	 0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1175 :     _Container_base12() : _Myproxy(nullptr) {} // construct childless container

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 16
_Mycont_$ = 24
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1167 :     _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_), _Myfirstiter(nullptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Mycont_$[rsp]
  00015	48 89 08	 mov	 QWORD PTR [rax], rcx
  00018	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00025	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002a	5f		 pop	 rdi
  0002b	c3		 ret	 0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Convert_size@_K@std@@YA_K_K@Z
_TEXT	SEGMENT
_Len$ = 16
??$_Convert_size@_K@std@@YA_K_K@Z PROC			; std::_Convert_size<unsigned __int64>, COMDAT

; 1073 : _NODISCARD constexpr size_t _Convert_size<size_t>(const size_t _Len) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1074 :     // convert size_t to size_t, unchanged
; 1075 :     return _Len;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Len$[rsp]

; 1076 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Convert_size@_K@std@@YA_K_K@Z ENDP			; std::_Convert_size<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 48
_Ptr_container$ = 56
_Min_back_shift$ = 64
_Back_shift$ = 72
_Ptr$ = 96
_Bytes$ = 104
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 102  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 103  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 104  :     _Bytes += _Non_user_size;

  00023	48 8b 44 24 68	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  0002f	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00034	48 89 01	 mov	 QWORD PTR [rcx], rax

; 105  : 
; 106  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

  00037	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0003c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Ptr_user$[rsp], rax

; 107  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00044	b8 08 00 00 00	 mov	 eax, 8
  00049	48 6b c0 ff	 imul	 rax, rax, -1
  0004d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr_user$[rsp]
  00052	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00056	48 89 44 24 38	 mov	 QWORD PTR _Ptr_container$[rsp], rax
$LN4@Adjust_man:

; 108  : 
; 109  :     // If the following asserts, it likely means that we are performing
; 110  :     // an aligned delete on memory coming from an unaligned allocation.
; 111  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

  0005b	b8 08 00 00 00	 mov	 eax, 8
  00060	48 6b c0 fe	 imul	 rax, rax, -2
  00064	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr_user$[rsp]
  00069	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  00073	48 39 14 01	 cmp	 QWORD PTR [rcx+rax], rdx
  00077	75 02		 jne	 SHORT $LN14@Adjust_man
  00079	eb 6b		 jmp	 SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
  0007b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00082	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00087	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0008e	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00093	45 33 c9	 xor	 r9d, r9d
  00096	41 b8 6f 00 00
	00		 mov	 r8d, 111		; 0000006fH
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000a3	b9 02 00 00 00	 mov	 ecx, 2
  000a8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000ae	83 f8 01	 cmp	 eax, 1
  000b1	75 03		 jne	 SHORT $LN19@Adjust_man
  000b3	cc		 int	 3
  000b4	33 c0		 xor	 eax, eax
$LN19@Adjust_man:
  000b6	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000bf	41 b9 6f 00 00
	00		 mov	 r9d, 111		; 0000006fH
  000c5	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000cc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  000d3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  000da	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000e0	33 c0		 xor	 eax, eax
  000e2	85 c0		 test	 eax, eax
  000e4	75 95		 jne	 SHORT $LN7@Adjust_man
$LN15@Adjust_man:
  000e6	33 c0		 xor	 eax, eax
  000e8	85 c0		 test	 eax, eax
  000ea	0f 85 6b ff ff
	ff		 jne	 $LN4@Adjust_man

; 112  : 
; 113  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 114  :     // in range [_Min_back_shift, _Non_user_size]
; 115  : #ifdef _DEBUG
; 116  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

  000f0	48 c7 44 24 40
	10 00 00 00	 mov	 QWORD PTR _Min_back_shift$[rsp], 16

; 117  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 118  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 119  : #endif // _DEBUG
; 120  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  000fe	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr_container$[rsp]
  00103	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00106	48 2b c1	 sub	 rax, rcx
  00109	48 89 44 24 48	 mov	 QWORD PTR _Back_shift$[rsp], rax
$LN10@Adjust_man:

; 121  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0010e	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Back_shift$[rsp], 16
  00114	72 0a		 jb	 SHORT $LN16@Adjust_man
  00116	48 83 7c 24 48
	2f		 cmp	 QWORD PTR _Back_shift$[rsp], 47 ; 0000002fH
  0011c	77 02		 ja	 SHORT $LN16@Adjust_man
  0011e	eb 6b		 jmp	 SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
  00120	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00127	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0012c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00133	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00138	45 33 c9	 xor	 r9d, r9d
  0013b	41 b8 79 00 00
	00		 mov	 r8d, 121		; 00000079H
  00141	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00148	b9 02 00 00 00	 mov	 ecx, 2
  0014d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00153	83 f8 01	 cmp	 eax, 1
  00156	75 03		 jne	 SHORT $LN20@Adjust_man
  00158	cc		 int	 3
  00159	33 c0		 xor	 eax, eax
$LN20@Adjust_man:
  0015b	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00164	41 b9 79 00 00
	00		 mov	 r9d, 121		; 00000079H
  0016a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00171	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  00178	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  0017f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00185	33 c0		 xor	 eax, eax
  00187	85 c0		 test	 eax, eax
  00189	75 95		 jne	 SHORT $LN13@Adjust_man
$LN17@Adjust_man:
  0018b	33 c0		 xor	 eax, eax
  0018d	85 c0		 test	 eax, eax
  0018f	0f 85 79 ff ff
	ff		 jne	 $LN10@Adjust_man

; 122  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00195	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0019a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr_container$[rsp]
  0019f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 123  : }

  001a2	48 83 c4 50	 add	 rsp, 80			; 00000050H
  001a6	5f		 pop	 rdi
  001a7	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 46   :     _DECLSPEC_ALLOCATOR static void* _Allocate(const size_t _Bytes) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 47   :         return ::operator new(_Bytes);

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00023	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 48   :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 644  :     _NODISCARD static constexpr long long(max)() noexcept { // return maximum value

$LN3:
  00000	40 57		 push	 rdi

; 645  :         return LLONG_MAX;

  00002	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 646  :     }

  0000c	5f		 pop	 rdi
  0000d	c3		 ret	 0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT sprintf_s
_TEXT	SEGMENT
_Result$ = 48
_ArgList$ = 72
_Buffer$ = 112
_BufferCount$ = 120
_Format$ = 128
sprintf_s PROC						; COMDAT

; 1841 :         {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 1842 :             int _Result;
; 1843 :             va_list _ArgList;
; 1844 :             __crt_va_start(_ArgList, _Format);

  0002d	48 8d 84 24 88
	00 00 00	 lea	 rax, QWORD PTR _Format$[rsp+8]
  00035	48 89 44 24 48	 mov	 QWORD PTR _ArgList$[rsp], rax

; 1845 :             _Result = _vsprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  0003a	48 8b 44 24 48	 mov	 rax, QWORD PTR _ArgList$[rsp]
  0003f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00044	45 33 c9	 xor	 r9d, r9d
  00047	4c 8b 84 24 80
	00 00 00	 mov	 r8, QWORD PTR _Format$[rsp]
  0004f	48 8b 54 24 78	 mov	 rdx, QWORD PTR _BufferCount$[rsp]
  00054	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Buffer$[rsp]
  00059	e8 00 00 00 00	 call	 _vsprintf_s_l
  0005e	89 44 24 30	 mov	 DWORD PTR _Result$[rsp], eax

; 1846 :             __crt_va_end(_ArgList);

  00062	48 c7 44 24 48
	00 00 00 00	 mov	 QWORD PTR _ArgList$[rsp], 0

; 1847 :             return _Result;

  0006b	8b 44 24 30	 mov	 eax, DWORD PTR _Result$[rsp]

; 1848 :         }

  0006f	8b f8		 mov	 edi, eax
  00071	48 8b cc	 mov	 rcx, rsp
  00074	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:sprintf_s$rtcFrameData
  0007b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00080	8b c7		 mov	 eax, edi
  00082	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00086	5f		 pop	 rdi
  00087	c3		 ret	 0
sprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vscprintf
_TEXT	SEGMENT
_Format$ = 48
_ArgList$ = 56
_vscprintf PROC						; COMDAT

; 1675 :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1676 :         return _vscprintf_l(_Format, NULL, _ArgList);

  00023	4c 8b 44 24 38	 mov	 r8, QWORD PTR _ArgList$[rsp]
  00028	33 d2		 xor	 edx, edx
  0002a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Format$[rsp]
  0002f	e8 00 00 00 00	 call	 _vscprintf_l

; 1677 :     }

  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
_vscprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vscprintf_l
_TEXT	SEGMENT
_Result$ = 48
tv74 = 52
_Format$ = 80
_Locale$ = 88
_ArgList$ = 96
_vscprintf_l PROC					; COMDAT

; 1658 :     {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1659 :         int const _Result = __stdio_common_vsprintf(

  00028	e8 00 00 00 00	 call	 __local_stdio_printf_options
  0002d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00030	48 83 c8 02	 or	 rax, 2
  00034	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  00039	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  0003e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Locale$[rsp]
  00043	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00048	4c 8b 4c 24 50	 mov	 r9, QWORD PTR _Format$[rsp]
  0004d	45 33 c0	 xor	 r8d, r8d
  00050	33 d2		 xor	 edx, edx
  00052	48 8b c8	 mov	 rcx, rax
  00055	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___stdio_common_vsprintf
  0005b	89 44 24 30	 mov	 DWORD PTR _Result$[rsp], eax

; 1660 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1661 :             NULL, 0, _Format, _Locale, _ArgList);
; 1662 : 
; 1663 :         return _Result < 0 ? -1 : _Result;

  0005f	83 7c 24 30 00	 cmp	 DWORD PTR _Result$[rsp], 0
  00064	7d 0a		 jge	 SHORT $LN3@vscprintf_
  00066	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR tv74[rsp], -1
  0006e	eb 08		 jmp	 SHORT $LN4@vscprintf_
$LN3@vscprintf_:
  00070	8b 44 24 30	 mov	 eax, DWORD PTR _Result$[rsp]
  00074	89 44 24 34	 mov	 DWORD PTR tv74[rsp], eax
$LN4@vscprintf_:
  00078	8b 44 24 34	 mov	 eax, DWORD PTR tv74[rsp]

; 1664 :     }

  0007c	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00080	5f		 pop	 rdi
  00081	c3		 ret	 0
_vscprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT vsprintf_s
_TEXT	SEGMENT
_Buffer$ = 64
_BufferCount$ = 72
_Format$ = 80
_ArgList$ = 88
vsprintf_s PROC						; COMDAT

; 1519 :         {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1520 :             return _vsprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  0002d	48 8b 44 24 58	 mov	 rax, QWORD PTR _ArgList$[rsp]
  00032	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00037	45 33 c9	 xor	 r9d, r9d
  0003a	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Format$[rsp]
  0003f	48 8b 54 24 48	 mov	 rdx, QWORD PTR _BufferCount$[rsp]
  00044	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Buffer$[rsp]
  00049	e8 00 00 00 00	 call	 _vsprintf_s_l

; 1521 :         }

  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
vsprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vsprintf_s_l
_TEXT	SEGMENT
_Result$ = 48
tv73 = 52
_Buffer$ = 80
_BufferCount$ = 88
_Format$ = 96
_Locale$ = 104
_ArgList$ = 112
_vsprintf_s_l PROC					; COMDAT

; 1497 :     {

$LN5:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1498 :         int const _Result = __stdio_common_vsprintf_s(

  0002d	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00032	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  00037	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  0003c	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Locale$[rsp]
  00041	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00046	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Format$[rsp]
  0004b	4c 8b 44 24 58	 mov	 r8, QWORD PTR _BufferCount$[rsp]
  00050	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Buffer$[rsp]
  00055	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00058	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___stdio_common_vsprintf_s
  0005e	89 44 24 30	 mov	 DWORD PTR _Result$[rsp], eax

; 1499 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1500 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1501 : 
; 1502 :         return _Result < 0 ? -1 : _Result;

  00062	83 7c 24 30 00	 cmp	 DWORD PTR _Result$[rsp], 0
  00067	7d 0a		 jge	 SHORT $LN3@vsprintf_s
  00069	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR tv73[rsp], -1
  00071	eb 08		 jmp	 SHORT $LN4@vsprintf_s
$LN3@vsprintf_s:
  00073	8b 44 24 30	 mov	 eax, DWORD PTR _Result$[rsp]
  00077	89 44 24 34	 mov	 DWORD PTR tv73[rsp], eax
$LN4@vsprintf_s:
  0007b	8b 44 24 34	 mov	 eax, DWORD PTR tv73[rsp]

; 1503 :     }

  0007f	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
_vsprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 86   :     {

$LN3:
  00000	40 57		 push	 rdi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00002	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00009	5f		 pop	 rdi
  0000a	c3		 ret	 0
__local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 10 00 00 00	 mov	 ecx, 16
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 324  :     _THROW(bad_array_new_length{});

  00015	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0001a	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QEAA@XZ ; std::bad_array_new_length::bad_array_new_length
  0001f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
  00026	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002b	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Throw_bad_:

; 325  : }

  00030	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_array_new_length@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QEAA@AEBV01@@Z
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 138  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 137  :         : bad_alloc("bad array new length")

  0001e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002a	e8 00 00 00 00	 call	 ??0bad_alloc@std@@AEAA@QEBD@Z ; std::bad_alloc::bad_alloc
  0002f	90		 npad	 1

; 138  :     {

  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 139  :     }

  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Message$ = 56
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 127  :     {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 126  :         : exception(_Message, 1)

  00023	41 b8 01 00 00
	00		 mov	 r8d, 1
  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Message$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00033	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBDH@Z ; std::exception::exception
  00038	90		 npad	 1

; 127  :     {

  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  00045	48 89 08	 mov	 QWORD PTR [rax], rcx

; 128  :     }

  00048	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00051	5f		 pop	 rdi
  00052	c3		 ret	 0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Message$ = 56
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Message$ = 56
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 0
this$ = 32
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 91   :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 92   :         return _Data._What ? _Data._What : "Unknown exception";

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 0f		 je	 SHORT $LN3@what
  0002a	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00033	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
  00037	eb 0b		 jmp	 SHORT $LN4@what
$LN3@what:
  00039	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  00040	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
$LN4@what:
  00044	48 8b 04 24	 mov	 rax, QWORD PTR tv69[rsp]

; 93   :     }

  00048	48 83 c4 10	 add	 rsp, 16
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 86   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 87   :         __std_exception_destroy(&_Data);

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 __std_exception_destroy
  0003e	90		 npad	 1

; 88   :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 69   :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 68   :         : _Data()

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c0 08	 add	 rax, 8
  0003b	48 8b f8	 mov	 rdi, rax
  0003e	33 c0		 xor	 eax, eax
  00040	b9 10 00 00 00	 mov	 ecx, 16
  00045	f3 aa		 rep stosb

; 70   :         __std_exception_copy(&_Other._Data, &_Data);

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 83 c0 08	 add	 rax, 8
  00050	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Other$[rsp]
  00055	48 83 c1 08	 add	 rcx, 8
  00059	48 8b d0	 mov	 rdx, rax
  0005c	e8 00 00 00 00	 call	 __std_exception_copy
  00061	90		 npad	 1

; 71   :     }

  00062	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00067	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 16
_Message$ = 24
__formal$ = 32
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 63   :     {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0001c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 62   :         : _Data()

  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	48 83 c0 08	 add	 rax, 8
  00028	48 8b f8	 mov	 rdi, rax
  0002b	33 c0		 xor	 eax, eax
  0002d	b9 10 00 00 00	 mov	 ecx, 16
  00032	f3 aa		 rep stosb

; 64   :         _Data._What = _Message;

  00034	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Message$[rsp]
  0003e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 65   :     }

  00042	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 16
_Where$ = 24
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 168  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 169  :         (void)_Size;
; 170  :         return _Where;

  0000b	48 8b 44 24 18	 mov	 rax, QWORD PTR _Where$[rsp]

; 171  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 16
__formal$ = 24
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_output.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 16
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
