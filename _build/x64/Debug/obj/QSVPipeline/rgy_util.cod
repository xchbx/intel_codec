; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG114789 DB	00H, 00H
$SG114821 DB	00H
$SG114829 DB	00H
$SG114803 DB	00H, 00H
$SG114881 DB	00H
$SG114343 DB	00H
$SG114901 DB	00H, 00H
$SG114354 DB	00H
$SG114377 DB	00H
$SG117235 DB	'..', 00H
$SG114385 DB	00H
$SG115554 DB	' ', 00H, 09H, 00H, 0bH, 00H, 0dH, 00H, 0aH, 00H, 00H, 00H
$SG117236 DB	'.', 00H
$SG114414 DB	00H
$SG114422 DB	00H
$SG115558 DB	' ', 00H, 09H, 00H, 0bH, 00H, 0dH, 00H, 0aH, 00H, 00H, 00H
$SG116108 DB	' ', 09H, 0bH, 0dH, 0aH, 00H
	ORG $+2
$SG116112 DB	' ', 09H, 0bH, 0dH, 0aH, 00H
	ORG $+2
$SG117261 DB	'%.3f', 00H
	ORG $+3
$SG117262 DB	'.', 00H
	ORG $+2
$SG117263 DB	'%d:%02d:%02d%s', 00H
	ORG $+1
$SG117281 DB	'%%', 00H
	ORG $+1
$SG117282 DB	'%', 00H
	ORG $+2
$SG117427 DB	'ntdll.dll', 00H
	ORG $+2
$SG150242 DB	'%s', 00H
	ORG $+1
$SG117428 DB	'RtlGetVersion', 00H
	ORG $+2
$SG117453 DB	'Unknown', 00H
$SG117457 DB	'Windows 95', 00H
	ORG $+1
$SG118241 DB	'x64', 00H
$SG117459 DB	'Windows 98', 00H
	ORG $+1
$SG118242 DB	'x86', 00H
$SG117461 DB	'Windows Me', 00H
	ORG $+1
$SG118246 DB	'L1 ', 00H
$SG117471 DB	'Windows NT 3', 00H
	ORG $+3
$SG150241 DB	'invalid argument', 00H
	ORG $+3
$SG118239 DB	'Intel', 00H
	ORG $+2
$SG118247 DB	'L2 ', 00H
$SG117473 DB	'Windows NT 3.1', 00H
	ORG $+1
$SG117477 DB	'Windows NT 3.51', 00H
$SG150246 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG150243 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xmemory', 00H
$SG117475 DB	'Windows NT 3.5', 00H
	ORG $+1
$SG117488 DB	'Windows Server 2003', 00H
	ORG $+4
$SG150244 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H
	DB	'1', 00H, '0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H
$SG150245 DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+2
$SG117481 DB	'Windows NT 4.0', 00H
	ORG $+1
$SG117484 DB	'Windows 2000', 00H
	ORG $+3
$SG117486 DB	'Windows XP', 00H
	ORG $+1
$SG118248 DB	'L3 ', 00H
$SG117492 DB	'Windows Vista', 00H
	ORG $+2
$SG117493 DB	'Windows Server 2008', 00H
$SG118249 DB	'RAM', 00H
$SG117495 DB	'Windows 7', 00H
	ORG $+2
$SG110648 DB	'yuv422', 00H
	ORG $+1
$SG110676 DB	'rgb', 00H
$SG117496 DB	'Windows Server 2008 R2', 00H
	ORG $+1
$SG117498 DB	'Windows 8', 00H
	ORG $+2
$SG110650 DB	'yuv444', 00H
	ORG $+1
$SG110678 DB	'gbr', 00H
$SG117499 DB	'Windows Server 2012', 00H
$SG110681 DB	'y8', 00H
	ORG $+1
$SG117501 DB	'Windows 8.1', 00H
$SG111626 DB	'VP8', 00H
$SG117502 DB	'Windows Server 2012 R2', 00H
	ORG $+1
$SG117504 DB	'Windows 10', 00H
	ORG $+1
$SG111628 DB	'VP9', 00H
$SG117505 DB	'Windows Server 2016', 00H
$SG112239 DB	'fcc', 00H
$SG117508 DB	'Later than Windows 10', 00H
	ORG $+2
$SG117510 DB	'Windows 10', 00H
	ORG $+1
$SG112240 DB	'GBR', 00H
$SG117511 DB	'Windows Server 2016', 00H
$SG112553 DB	'pal', 00H
$SG117514 DB	'Later than Windows 10', 00H
	ORG $+2
$SG150739 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xlocale', 00H
$SG118240 DB	'[DEBUG]--->Environment Info', 0aH, 00H
	ORG $+3
$SG118243 DB	'OS : %s %s (%d)', 0aH, 00H
	ORG $+3
$SG110670 DB	'rgb24r', 00H
	ORG $+1
$SG112555 DB	'mac', 00H
$SG118244 DB	'CPU: %s', 0aH, 00H
	ORG $+3
$SG118250 DB	'    ', 00H
	ORG $+3
$SG118251 DB	'RAM:', 00H
	ORG $+3
$SG110671 DB	'rgb32r', 00H
	ORG $+1
$SG112557 DB	'0', 00H
	ORG $+2
$SG118252 DB	'%s Used %d MB, Total %d MB', 0aH, 00H
$SG112558 DB	'1', 00H
	ORG $+2
$SG118253 DB	'GPU: %s', 0aH, 00H
	ORG $+7
?SAR_LIST@@3QBUsar_option_t@@B DD 00H			; SAR_LIST
	DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	01H
	DD	02H
	DD	0cH
	DD	0bH
	DD	03H
	DD	0aH
	DD	0bH
	DD	04H
	DD	010H
	DD	0bH
	DD	05H
	DD	028H
	DD	021H
	DD	06H
	DD	018H
	DD	0bH
	DD	07H
	DD	014H
	DD	0bH
	DD	08H
	DD	020H
	DD	0bH
	DD	09H
	DD	050H
	DD	021H
	DD	0aH
	DD	012H
	DD	0bH
	DD	0bH
	DD	0fH
	DD	0bH
	DD	0cH
	DD	040H
	DD	021H
	DD	0dH
	DD	0a0H
	DD	063H
	DD	0eH
	DD	04H
	DD	03H
	DD	0fH
	DD	03H
	DD	02H
	DD	010H
	DD	02H
	DD	01H
$SG112559 DB	'2', 00H
	ORG $+2
$SG110644 DB	'Invalid', 00H
$SG110645 DB	'nv12', 00H
	ORG $+3
$SG110646 DB	'yv12', 00H
	ORG $+3
$SG110647 DB	'yuy2', 00H
	ORG $+3
$SG110649 DB	'nv16', 00H
	ORG $+3
$SG110651 DB	'yv12(9bit)', 00H
	ORG $+1
$SG112560 DB	'3', 00H
	ORG $+2
$SG110652 DB	'yv12(10bit)', 00H
$SG112561 DB	'4', 00H
	ORG $+2
$SG110653 DB	'yv12(12bit)', 00H
$SG112562 DB	'5', 00H
	ORG $+2
$SG110654 DB	'yv12(14bit)', 00H
$SG112566 DB	'tv', 00H
	ORG $+1
$SG110655 DB	'yv12(16bit)', 00H
$SG110656 DB	'p010', 00H
	ORG $+3
$SG110672 DB	'rgb24', 00H
	ORG $+2
$SG112391 DB	'bt470m', 00H
	ORG $+1
$SG112567 DB	'pc', 00H
	ORG $+1
$SG110657 DB	'yuv422(9bit)', 00H
	ORG $+3
$SG110658 DB	'yuv422(10bit)', 00H
	ORG $+2
$SG110659 DB	'yuv422(12bit)', 00H
	ORG $+2
$SG110660 DB	'yuv422(14bit)', 00H
	ORG $+2
$SG110661 DB	'yuv422(16bit)', 00H
	ORG $+2
$SG110662 DB	'p210', 00H
	ORG $+3
$SG110663 DB	'yuv444(9bit)', 00H
	ORG $+3
$SG110664 DB	'yuv444(10bit)', 00H
	ORG $+2
$SG110665 DB	'yuv444(12bit)', 00H
	ORG $+2
$SG110666 DB	'yuv444(14bit)', 00H
	ORG $+2
$SG110667 DB	'yuv444(16bit)', 00H
	ORG $+2
$SG110668 DB	'yuva444', 00H
$SG110669 DB	'yuva444(16bit)', 00H
	ORG $+1
$SG110673 DB	'rgb32', 00H
	ORG $+2
$SG110674 DB	'bgr24', 00H
	ORG $+2
$SG110675 DB	'bgr32', 00H
	ORG $+2
$SG110677 DB	'rgba', 00H
	ORG $+3
$SG110679 DB	'gbra', 00H
	ORG $+3
$SG110680 DB	'yc48', 00H
	ORG $+3
$SG110682 DB	'yc16', 00H
	ORG $+3
$SG111614 DB	'H.264/AVC', 00H
	ORG $+2
$SG112394 DB	'linear', 00H
	ORG $+1
$SG113656 DB	'cfr', 00H
$SG111616 DB	'H.265/HEVC', 00H
	ORG $+1
$SG111618 DB	'MPEG2', 00H
	ORG $+2
$SG111620 DB	'MPEG1', 00H
	ORG $+2
$SG111622 DB	'VC-1', 00H
	ORG $+3
$SG111624 DB	'MPEG4', 00H
	ORG $+2
$SG112395 DB	'log100', 00H
	ORG $+1
$SG113657 DB	'vfr', 00H
$SG111630 DB	'unknown', 00H
$SG111737 DB	'unknown', 00H
$SG112232 DB	'undef', 00H
	ORG $+2
?list_colormatrix@@3QBUCX_DESC@@B DQ FLAT:$SG112232	; list_colormatrix
	DD	02H
	ORG $+4
	DQ	FLAT:$SG112233
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG112234
	DD	01H
	ORG $+4
	DQ	FLAT:$SG112235
	DD	06H
	ORG $+4
	DQ	FLAT:$SG112236
	DD	05H
	ORG $+4
	DQ	FLAT:$SG112237
	DD	07H
	ORG $+4
	DQ	FLAT:$SG112238
	DD	08H
	ORG $+4
	DQ	FLAT:$SG112239
	DD	04H
	ORG $+4
	DQ	FLAT:$SG112240
	DD	00H
	ORG $+4
	DQ	FLAT:$SG112241
	DD	09H
	ORG $+4
	DQ	FLAT:$SG112242
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG112243
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG112244
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG112245
	DD	0eH
	ORG $+4
	DQ	FLAT:$SG112246
	DD	0fH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG112233 DB	'auto', 00H
	ORG $+3
$SG112234 DB	'bt709', 00H
	ORG $+2
$SG112235 DB	'smpte170m', 00H
	ORG $+2
$SG112396 DB	'log316', 00H
	ORG $+1
$SG113660 DB	'swr', 00H
$SG112236 DB	'bt470bg', 00H
$SG112237 DB	'smpte240m', 00H
	ORG $+2
$SG112238 DB	'YCgCo', 00H
	ORG $+2
$SG112540 DB	'bt470m', 00H
	ORG $+1
$SG114400 DB	00H, 00H
	ORG $+2
$SG112241 DB	'bt2020nc', 00H
	ORG $+3
$SG112245 DB	'ictco', 00H
	ORG $+2
$SG112544 DB	'bt2020', 00H
	ORG $+5
$SG112242 DB	'bt2020c', 00H
$SG112243 DB	'derived-ncl', 00H
	ORG $+4
$SG112244 DB	'derived-cl', 00H
	ORG $+5
$SG112246 DB	'2100-lms', 00H
	ORG $+3
$SG112387 DB	'undef', 00H
	ORG $+6
?list_transfer@@3QBUCX_DESC@@B DQ FLAT:$SG112387	; list_transfer
	DD	02H
	ORG $+4
	DQ	FLAT:$SG112388
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG112389
	DD	01H
	ORG $+4
	DQ	FLAT:$SG112390
	DD	06H
	ORG $+4
	DQ	FLAT:$SG112391
	DD	04H
	ORG $+4
	DQ	FLAT:$SG112392
	DD	05H
	ORG $+4
	DQ	FLAT:$SG112393
	DD	07H
	ORG $+4
	DQ	FLAT:$SG112394
	DD	08H
	ORG $+4
	DQ	FLAT:$SG112395
	DD	09H
	ORG $+4
	DQ	FLAT:$SG112396
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG112397
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG112398
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG112399
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG112400
	DD	0eH
	ORG $+4
	DQ	FLAT:$SG112401
	DD	0fH
	ORG $+4
	DQ	FLAT:$SG112402
	DD	010H
	ORG $+4
	DQ	FLAT:$SG112403
	DD	011H
	ORG $+4
	DQ	FLAT:$SG112404
	DD	012H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG112388 DB	'auto', 00H
	ORG $+3
$SG112389 DB	'bt709', 00H
	ORG $+2
$SG112390 DB	'smpte170m', 00H
	ORG $+6
$SG112392 DB	'bt470bg', 00H
$SG112393 DB	'smpte240m', 00H
	ORG $+6
$SG112397 DB	'iec61966-2-4', 00H
	ORG $+3
$SG112398 DB	'bt1361e', 00H
$SG112399 DB	'iec61966-2-1', 00H
	ORG $+3
$SG112400 DB	'bt2020-10', 00H
	ORG $+6
$SG112401 DB	'bt2020-12', 00H
	ORG $+6
$SG112402 DB	'smpte2084', 00H
	ORG $+6
$SG112403 DB	'smpte428', 00H
	ORG $+7
$SG112404 DB	'arib-srd-b67', 00H
	ORG $+3
?list_colorprim@@3QBUCX_DESC@@B DQ FLAT:$SG112536	; list_colorprim
	DD	02H
	ORG $+4
	DQ	FLAT:$SG112537
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG112538
	DD	01H
	ORG $+4
	DQ	FLAT:$SG112539
	DD	06H
	ORG $+4
	DQ	FLAT:$SG112540
	DD	04H
	ORG $+4
	DQ	FLAT:$SG112541
	DD	05H
	ORG $+4
	DQ	FLAT:$SG112542
	DD	07H
	ORG $+4
	DQ	FLAT:$SG112543
	DD	08H
	ORG $+4
	DQ	FLAT:$SG112544
	DD	09H
	ORG $+4
	DQ	FLAT:$SG112545
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG112546
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG112547
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG112548
	DD	0dH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG112536 DB	'undef', 00H
	ORG $+2
$SG112537 DB	'auto', 00H
	ORG $+3
$SG112538 DB	'bt709', 00H
	ORG $+2
$SG112539 DB	'smpte170m', 00H
	ORG $+6
$SG112541 DB	'bt470bg', 00H
$SG112542 DB	'smpte240m', 00H
	ORG $+2
$SG112543 DB	'film', 00H
	ORG $+3
$SG112545 DB	'st428', 00H
	ORG $+6
$SG112546 DB	'st431-2', 00H
$SG112547 DB	'st432-1', 00H
$SG112548 DB	'ebu3213-e', 00H
	ORG $+6
?list_videoformat@@3QBUCX_DESC@@B DQ FLAT:$SG112550	; list_videoformat
	DD	05H
	ORG $+4
	DQ	FLAT:$SG112551
	DD	02H
	ORG $+4
	DQ	FLAT:$SG112552
	DD	00H
	ORG $+4
	DQ	FLAT:$SG112553
	DD	01H
	ORG $+4
	DQ	FLAT:$SG112554
	DD	03H
	ORG $+4
	DQ	FLAT:$SG112555
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG112550 DB	'undef', 00H
	ORG $+2
$SG112551 DB	'ntsc', 00H
	ORG $+3
$SG112552 DB	'component', 00H
	ORG $+2
$SG112554 DB	'secam', 00H
	ORG $+6
$SG112564 DB	'limited', 00H
$SG112565 DB	'full', 00H
	ORG $+3
$SG113649 DB	'trace', 00H
	ORG $+2
$SG113650 DB	'debug', 00H
	ORG $+2
$SG113651 DB	'more', 00H
	ORG $+3
$SG113652 DB	'info', 00H
	ORG $+3
$SG113653 DB	'warn', 00H
	ORG $+3
$SG113654 DB	'error', 00H
	ORG $+2
$SG113658 DB	'forcecfr', 00H
	ORG $+3
$SG113661 DB	'soxr', 00H
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	__local_stdio_printf_options
PUBLIC	_vswprintf_c_l
PUBLIC	vswprintf
PUBLIC	_vscwprintf_l
PUBLIC	_vscwprintf
PUBLIC	?vswprintf@@YAHQEA_WQEB_WPEAD@Z			; vswprintf
PUBLIC	_vfprintf_l
PUBLIC	fprintf
PUBLIC	_vsnprintf_l
PUBLIC	vsprintf
PUBLIC	_vscprintf_l
PUBLIC	_vscprintf
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	wmemchr
PUBLIC	wmemcmp
PUBLIC	wmemcpy
PUBLIC	wmemmove
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??$_Convert_size@_K@std@@YA_K_K@Z		; std::_Convert_size<unsigned __int64>
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators
PUBLIC	??0_Iterator_base12@std@@QEAA@XZ		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QEAA@AEBU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??1_Iterator_base12@std@@QEAA@XZ		; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QEAAXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	?compare@?$_WChar_traits@_W@std@@SAHQEB_W0_K@Z	; std::_WChar_traits<wchar_t>::compare
PUBLIC	?length@?$_WChar_traits@_W@std@@SA_KPEB_W@Z	; std::_WChar_traits<wchar_t>::length
PUBLIC	?copy@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z ; std::_WChar_traits<wchar_t>::copy
PUBLIC	?find@?$_WChar_traits@_W@std@@SAPEB_WPEB_W_KAEB_W@Z ; std::_WChar_traits<wchar_t>::find
PUBLIC	?move@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z ; std::_WChar_traits<wchar_t>::move
PUBLIC	?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z	; std::_WChar_traits<wchar_t>::assign
PUBLIC	?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z ; std::_Narrow_char_traits<char,int>::compare
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
PUBLIC	?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy
PUBLIC	?find@?$_Narrow_char_traits@DH@std@@SAPEBDQEBD_KAEBD@Z ; std::_Narrow_char_traits<char,int>::find
PUBLIC	?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	??0?$allocator@D@std@@QEAA@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z	; std::allocator<char>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
PUBLIC	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ; std::_String_val<std::_Simple_types<char> >::_Check_offset
PUBLIC	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
PUBLIC	?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
PUBLIC	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
PUBLIC	?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::clear
PUBLIC	?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace
PUBLIC	?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KAEBV12@_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
PUBLIC	?find_first_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_first_of
PUBLIC	?find_first_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_first_not_of
PUBLIC	?find_last_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_last_not_of
PUBLIC	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
PUBLIC	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??0?$allocator@_W@std@@QEAA@XZ			; std::allocator<wchar_t>::allocator<wchar_t>
PUBLIC	?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z	; std::allocator<wchar_t>::deallocate
PUBLIC	?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z	; std::allocator<wchar_t>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z ; std::_Default_allocator_traits<std::allocator<wchar_t> >::max_size
PUBLIC	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<wchar_t> >::select_on_container_copy_construction
PUBLIC	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
PUBLIC	?_Check_offset@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAX_K@Z ; std::_String_val<std::_Simple_types<wchar_t> >::_Check_offset
PUBLIC	?_Xran@?$_String_val@U?$_Simple_types@_W@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Xran
PUBLIC	?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_K_K0@Z ; std::_String_val<std::_Simple_types<wchar_t> >::_Clamp_suffix_size
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?_Move_assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Move_assign
PUBLIC	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
PUBLIC	?_Memcpy_val_from@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Memcpy_val_from
PUBLIC	?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Take_contents
PUBLIC	?_Construct_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct_lv_contents
PUBLIC	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@QEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?clear@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::clear
PUBLIC	?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0AEBV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace
PUBLIC	?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_KQEB_W0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace
PUBLIC	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
PUBLIC	?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length
PUBLIC	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
PUBLIC	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
PUBLIC	?find@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find
PUBLIC	?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KQEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_not_of
PUBLIC	?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KQEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_last_not_of
PUBLIC	?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr
PUBLIC	?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::get_allocator
PUBLIC	?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
PUBLIC	?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
PUBLIC	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
PUBLIC	?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
PUBLIC	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
PUBLIC	?_Swap_proxy_and_iterators@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Swap_proxy_and_iterators
PUBLIC	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
PUBLIC	?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>
PUBLIC	??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAPEAXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
PUBLIC	_tcschr
PUBLIC	_tcscmp
PUBLIC	_tcsicmp
PUBLIC	?wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; wstring_to_string
PUBLIC	?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z ; wstring_to_string
PUBLIC	?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z ; wstring_to_string
PUBLIC	?char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z ; char_to_wstring
PUBLIC	?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z ; char_to_wstring
PUBLIC	?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; char_to_wstring
PUBLIC	?strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ ; strsprintf
PUBLIC	?str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z ; str_replace
PUBLIC	?GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z ; GetFullPath
PUBLIC	?rgy_get_filesize@@YA_NPEB_WPEA_K@Z		; rgy_get_filesize
PUBLIC	?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; PathRemoveFileSpecFixed
PUBLIC	?PathRemoveExtensionS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@Z ; PathRemoveExtensionS
PUBLIC	?PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z ; PathCombineS
PUBLIC	?PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z ; PathCombineS
PUBLIC	?CreateDirectoryRecursive@@YA_NPEB_W@Z		; CreateDirectoryRecursive
PUBLIC	?get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; get_file_list
PUBLIC	?getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; getExeDir
PUBLIC	?tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; tchar_to_wstring
PUBLIC	?tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z ; tchar_to_wstring
PUBLIC	?tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; tchar_to_string
PUBLIC	?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z ; tchar_to_string
PUBLIC	?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z ; tchar_to_string
PUBLIC	?char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z ; char_to_tstring
PUBLIC	?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z ; char_to_tstring
PUBLIC	?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z ; char_to_tstring
PUBLIC	?wstring_to_tstring@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; wstring_to_tstring
PUBLIC	?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z ; wstring_to_tstring
PUBLIC	?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z ; wstring_to_tstring
PUBLIC	?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
PUBLIC	?split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z ; split
PUBLIC	?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z ; split
PUBLIC	?lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z ; lstrip
PUBLIC	?rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z ; rstrip
PUBLIC	?trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z ; trim
PUBLIC	?lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z ; lstrip
PUBLIC	?rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z ; rstrip
PUBLIC	?trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z ; trim
PUBLIC	?str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z ; str_replace
PUBLIC	?GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ; GetFullPath
PUBLIC	?rgy_get_filesize@@YA_NPEBDPEA_K@Z		; rgy_get_filesize
PUBLIC	?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; PathRemoveFileSpecFixed
PUBLIC	?PathRemoveExtensionS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@Z ; PathRemoveExtensionS
PUBLIC	?CreateDirectoryRecursive@@YA_NPEBD@Z		; CreateDirectoryRecursive
PUBLIC	?print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z ; print_time
PUBLIC	?check_ext@@YA_NPEBDAEBV?$vector@PEBDV?$allocator@PEBD@std@@@std@@@Z ; check_ext
PUBLIC	?check_ext@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@PEBDV?$allocator@PEBD@std@@@2@@Z ; check_ext
PUBLIC	?rgy_print_stderr@@YAHHPEBDPEAX@Z		; rgy_print_stderr
PUBLIC	?getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z ; getOSVersion
PUBLIC	?rgy_is_64bit_os@@YAHXZ				; rgy_is_64bit_os
PUBLIC	?getPhysicalRamSize@@YA_KPEA_K@Z		; getPhysicalRamSize
PUBLIC	?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z ; getEnviromentInfo
PUBLIC	?check_OS_Win8orLater@@YAHXZ			; check_OS_Win8orLater
PUBLIC	?malloc_degeneracy@@YA_KPEAPEAX_K1@Z		; malloc_degeneracy
PUBLIC	??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
PUBLIC	??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
PUBLIC	??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
PUBLIC	?get_dar_pixels@@YAXPEAI0HH@Z			; get_dar_pixels
PUBLIC	?get_sar@@YA?AU?$pair@HH@std@@IIII@Z		; get_sar
PUBLIC	?adjust_sar@@YAXPEAH0HH@Z			; adjust_sar
PUBLIC	?get_h264_sar_idx@@YAHU?$pair@HH@std@@@Z	; get_h264_sar_idx
PUBLIC	?get_h264_sar@@YA?AU?$pair@HH@std@@H@Z		; get_h264_sar
PUBLIC	??0AudioSelect@@QEAA@XZ				; AudioSelect::AudioSelect
PUBLIC	??0SubtitleSelect@@QEAA@XZ			; SubtitleSelect::SubtitleSelect
PUBLIC	??0DataSelect@@QEAA@XZ				; DataSelect::DataSelect
PUBLIC	?rgy_avx_dummy_if_avail@@YAHH@Z			; rgy_avx_dummy_if_avail
PUBLIC	??0?$vector@DV?$allocator@D@std@@@std@@QEAA@_KAEBDAEBV?$allocator@D@1@@Z ; std::vector<char,std::allocator<char> >::vector<char,std::allocator<char> >
PUBLIC	??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ	; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
PUBLIC	?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ ; std::vector<char,std::allocator<char> >::data
PUBLIC	?size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ ; std::vector<char,std::allocator<char> >::size
PUBLIC	?max_size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ ; std::vector<char,std::allocator<char> >::max_size
PUBLIC	?_Ufill@?$vector@DV?$allocator@D@std@@@std@@AEAAPEADPEAD_KAEBD@Z ; std::vector<char,std::allocator<char> >::_Ufill
PUBLIC	?_Destroy@?$vector@DV?$allocator@D@std@@@std@@AEAAXPEAD0@Z ; std::vector<char,std::allocator<char> >::_Destroy
PUBLIC	?_Buy_raw@?$vector@DV?$allocator@D@std@@@std@@AEAAX_K@Z ; std::vector<char,std::allocator<char> >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@DV?$allocator@D@std@@@std@@AEAAX_K@Z ; std::vector<char,std::allocator<char> >::_Buy_nonzero
PUBLIC	?_Tidy@?$vector@DV?$allocator@D@std@@@std@@AEAAXXZ ; std::vector<char,std::allocator<char> >::_Tidy
PUBLIC	?_Xlength@?$vector@DV?$allocator@D@std@@@std@@CAXXZ ; std::vector<char,std::allocator<char> >::_Xlength
PUBLIC	?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::vector<char,std::allocator<char> >::_Getal
PUBLIC	?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::vector<char,std::allocator<char> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<char> >::_Vector_val<std::_Simple_types<char> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	??0?$vector@_WV?$allocator@_W@std@@@std@@QEAA@_KAEB_WAEBV?$allocator@_W@1@@Z ; std::vector<wchar_t,std::allocator<wchar_t> >::vector<wchar_t,std::allocator<wchar_t> >
PUBLIC	??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ ; std::vector<wchar_t,std::allocator<wchar_t> >::~vector<wchar_t,std::allocator<wchar_t> >
PUBLIC	?data@?$vector@_WV?$allocator@_W@std@@@std@@QEAAPEA_WXZ ; std::vector<wchar_t,std::allocator<wchar_t> >::data
PUBLIC	?size@?$vector@_WV?$allocator@_W@std@@@std@@QEBA_KXZ ; std::vector<wchar_t,std::allocator<wchar_t> >::size
PUBLIC	?max_size@?$vector@_WV?$allocator@_W@std@@@std@@QEBA_KXZ ; std::vector<wchar_t,std::allocator<wchar_t> >::max_size
PUBLIC	?_Ufill@?$vector@_WV?$allocator@_W@std@@@std@@AEAAPEA_WPEA_W_KAEB_W@Z ; std::vector<wchar_t,std::allocator<wchar_t> >::_Ufill
PUBLIC	?_Destroy@?$vector@_WV?$allocator@_W@std@@@std@@AEAAXPEA_W0@Z ; std::vector<wchar_t,std::allocator<wchar_t> >::_Destroy
PUBLIC	?_Buy_raw@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_K@Z ; std::vector<wchar_t,std::allocator<wchar_t> >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_K@Z ; std::vector<wchar_t,std::allocator<wchar_t> >::_Buy_nonzero
PUBLIC	?_Tidy@?$vector@_WV?$allocator@_W@std@@@std@@AEAAXXZ ; std::vector<wchar_t,std::allocator<wchar_t> >::_Tidy
PUBLIC	?_Xlength@?$vector@_WV?$allocator@_W@std@@@std@@CAXXZ ; std::vector<wchar_t,std::allocator<wchar_t> >::_Xlength
PUBLIC	?_Getal@?$vector@_WV?$allocator@_W@std@@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::vector<wchar_t,std::allocator<wchar_t> >::_Getal
PUBLIC	?_Getal@?$vector@_WV?$allocator@_W@std@@@std@@AEBAAEBV?$allocator@_W@2@XZ ; std::vector<wchar_t,std::allocator<wchar_t> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<wchar_t> >::_Vector_val<std::_Simple_types<wchar_t> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_Vector_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_Vector_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_Vector_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_Vector_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??$move@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>
PUBLIC	??0?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::deallocate
PUBLIC	?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size
PUBLIC	??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	?_Move_construct@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Move_construct
PUBLIC	??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back
PUBLIC	?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back
PUBLIC	?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size
PUBLIC	?capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::capacity
PUBLIC	?_Umove@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PEAV32@00@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Umove
PUBLIC	?_Umove_if_noexcept1@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@00U?$integral_constant@_N$00@2@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Umove_if_noexcept1
PUBLIC	?_Umove_if_noexcept@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@00@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Umove_if_noexcept
PUBLIC	?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBA_K_K@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K1@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Change_array
PUBLIC	?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Tidy
PUBLIC	?_Xlength@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Xlength
PUBLIC	?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range
PUBLIC	?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Getal
PUBLIC	?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	?_Take_contents@?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXAEAV12@@Z ; std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Take_contents
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_first
PUBLIC	??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
PUBLIC	?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
PUBLIC	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?_Move_construct@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Move_construct
PUBLIC	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
PUBLIC	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
PUBLIC	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
PUBLIC	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
PUBLIC	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
PUBLIC	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
PUBLIC	?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
PUBLIC	?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
PUBLIC	?_Umove@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEAV32@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove
PUBLIC	?_Umove_if_noexcept1@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@00U?$integral_constant@_N$00@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove_if_noexcept1
PUBLIC	?_Umove_if_noexcept@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove_if_noexcept
PUBLIC	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBA_K_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K1@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Change_array
PUBLIC	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
PUBLIC	?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlength
PUBLIC	?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range
PUBLIC	?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
PUBLIC	?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
PUBLIC	?_Make_iterator_offset@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Make_iterator_offset
PUBLIC	??0?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?_Take_contents@?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAXAEAV12@@Z ; std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Take_contents
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first
PUBLIC	?PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ; PathGetRoot
PUBLIC	?PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z ; PathGetRoot
PUBLIC	??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ ; std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$make_pair@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::make_pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	??$make_pair@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::make_pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ ; std::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::~pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$make_pair@HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::make_pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
PUBLIC	??$make_pair@HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::make_pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>
PUBLIC	?_Unchecked_begin@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBAPEBQEBDXZ ; std::vector<char const *,std::allocator<char const *> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBAPEBQEBDXZ ; std::vector<char const *,std::allocator<char const *> >::_Unchecked_end
PUBLIC	??$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z ; vector_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$max@_K@std@@YAAEB_KAEB_K0@Z			; std::max<unsigned __int64>
PUBLIC	?IsWindowsVersionOrGreater@@YA_NGGG@Z		; IsWindowsVersionOrGreater
PUBLIC	?IsWindows8OrGreater@@YA_NXZ			; IsWindows8OrGreater
PUBLIC	?deallocate@?$allocator@N@std@@QEAAXQEAN_K@Z	; std::allocator<double>::deallocate
PUBLIC	??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ	; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
PUBLIC	?begin@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ ; std::vector<double,std::allocator<double> >::begin
PUBLIC	?end@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ ; std::vector<double,std::allocator<double> >::end
PUBLIC	?_Destroy@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN0@Z ; std::vector<double,std::allocator<double> >::_Destroy
PUBLIC	?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ ; std::vector<double,std::allocator<double> >::_Tidy
PUBLIC	?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ ; std::vector<double,std::allocator<double> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAAAEAV?$allocator@N@2@XZ ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Get_first
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEBAAEBNXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::operator*
PUBLIC	?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@1@0@Z ; std::_Verify_range
PUBLIC	?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAAXPEBN@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Seek_to
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEBAAEANXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::operator*
PUBLIC	?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEBAPEANXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Unwrapped
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >
PUBLIC	??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z ; std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >
PUBLIC	??$make_pair@AEBHAEBH@std@@YA?AU?$pair@HH@0@AEBH0@Z ; std::make_pair<int const &,int const &>
PUBLIC	??$make_pair@HH@std@@YA?AU?$pair@HH@0@$$QEAH0@Z	; std::make_pair<int,int>
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@N@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<double> > >
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0N@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@N@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><double>
PUBLIC	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$emplace_back@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::emplace_back<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Emplace_back_with_unused_capacity@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_back_with_unused_capacity<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV31@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$emplace_back@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::emplace_back<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	??$forward@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	??$_Emplace_back_with_unused_capacity@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_back_with_unused_capacity<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBV31@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	??$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$move@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z ; std::move<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > &>
PUBLIC	??$?0V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1><std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1><>
PUBLIC	??$emplace_back@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::emplace_back<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$_Emplace_back_with_unused_capacity@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_back_with_unused_capacity<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$_Unfancy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV31@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_reallocate<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$emplace_back@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::emplace_back<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
PUBLIC	??$forward@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
PUBLIC	??$_Emplace_back_with_unused_capacity@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_back_with_unused_capacity<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
PUBLIC	??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
PUBLIC	??$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_reallocate<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
PUBLIC	??$?0V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$move@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AEAV10@@Z ; std::move<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > &>
PUBLIC	??$?0V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Compressed_pair<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1><std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Compressed_pair<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1><>
PUBLIC	??$_Unfancy_maybe_null@_W@std@@YAPEA_WPEA_W@Z	; std::_Unfancy_maybe_null<wchar_t>
PUBLIC	??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
PUBLIC	??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_Vector_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_Vector_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_Vector_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>
PUBLIC	??$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z ; std::vector<wchar_t,std::allocator<wchar_t> >::_Construct_n_copies_of_ty<wchar_t>
PUBLIC	??$_Unfancy_maybe_null@D@std@@YAPEADPEAD@Z	; std::_Unfancy_maybe_null<char>
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
PUBLIC	??$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z ; std::vector<char,std::allocator<char> >::_Construct_n_copies_of_ty<char>
PUBLIC	??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Min_value<unsigned __int64>
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Traits_find_last_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z ; std::_Traits_find_last_not_of<std::char_traits<wchar_t> >
PUBLIC	??$_Traits_find_last_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$0A@@0@@Z ; std::_Traits_find_last_not_of<std::char_traits<wchar_t> >
PUBLIC	??$_Traits_find_first_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z ; std::_Traits_find_first_not_of<std::char_traits<wchar_t> >
PUBLIC	??$_Traits_find_first_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$0A@@0@@Z ; std::_Traits_find_first_not_of<std::char_traits<wchar_t> >
PUBLIC	??$_Traits_find@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101@Z ; std::_Traits_find<std::char_traits<wchar_t> >
PUBLIC	??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$move@AEAV?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z ; std::move<std::allocator<wchar_t> &>
PUBLIC	??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><>
PUBLIC	??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>
PUBLIC	??$_Traits_find_last_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z ; std::_Traits_find_last_not_of<std::char_traits<char> >
PUBLIC	??$_Traits_find_last_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$0A@@0@@Z ; std::_Traits_find_last_not_of<std::char_traits<char> >
PUBLIC	??$_Traits_find_first_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z ; std::_Traits_find_first_not_of<std::char_traits<char> >
PUBLIC	??$_Traits_find_first_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$0A@@0@@Z ; std::_Traits_find_first_not_of<std::char_traits<char> >
PUBLIC	??$_Traits_find_first_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z ; std::_Traits_find_first_of<std::char_traits<char> >
PUBLIC	??$_Traits_find_first_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$0A@@0@@Z ; std::_Traits_find_first_of<std::char_traits<char> >
PUBLIC	??$_Traits_find@U?$char_traits@D@std@@@std@@YA_KQEBD_K101@Z ; std::_Traits_find<std::char_traits<char> >
PUBLIC	??$_Unfancy@D@std@@YAPEADPEAD@Z			; std::_Unfancy<char>
PUBLIC	??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>
PUBLIC	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@0@Z ; std::_Verify_range
PUBLIC	?_Unwrapped@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Unwrapped
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z	; std::_Destroy_in_place<wchar_t *>
PUBLIC	??R<lambda_07b002202a580d07f308bf60d51244b2>@@QEBAXQEA_WQEB_W_K2212@Z ; <lambda_07b002202a580d07f308bf60d51244b2>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_07b002202a580d07f308bf60d51244b2>@@_K_KPEB_W_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_07b002202a580d07f308bf60d51244b2>@@_K2PEB_W2@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<<lambda_07b002202a580d07f308bf60d51244b2>,unsigned __int64,unsigned __int64,wchar_t const *,unsigned __int64>
PUBLIC	??R<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@QEBAXQEA_W_KQEB_W@Z ; <lambda_3fa8b2c8193a0f3144fc4b1b8f243931>::operator()
PUBLIC	??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_for<<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>,wchar_t const *>
PUBLIC	??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z ; std::_Construct_in_place<wchar_t *,wchar_t * const &>
PUBLIC	??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z		; std::_Unfancy<wchar_t>
PUBLIC	??$_Pocma@V?$allocator@_W@std@@@std@@YAXAEAV?$allocator@_W@0@0@Z ; std::_Pocma<std::allocator<wchar_t> >
PUBLIC	??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Max_value<unsigned __int64>
PUBLIC	??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
PUBLIC	??R<lambda_16d2cb92461ac9818af78a76c749bd7f>@@QEBAXQEADQEBD_K2212@Z ; <lambda_16d2cb92461ac9818af78a76c749bd7f>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K2PEBD2@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_16d2cb92461ac9818af78a76c749bd7f>,unsigned __int64,unsigned __int64,char const *,unsigned __int64>
PUBLIC	??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()
PUBLIC	??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
PUBLIC	??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ; <lambda_65e615be2a453ca0576c979606f46740>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
PUBLIC	??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >
PUBLIC	??$_Get_size_of_n@$00@std@@YA_K_K@Z		; std::_Get_size_of_n<1>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$_Destroy_range@V?$allocator@N@std@@@std@@YAXPEANQEANAEAV?$allocator@N@0@@Z ; std::_Destroy_range<std::allocator<double> >
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	??$_Destroy_range@V?$allocator@_W@std@@@std@@YAXPEA_WQEA_WAEAV?$allocator@_W@0@@Z ; std::_Destroy_range<std::allocator<wchar_t> >
PUBLIC	??$_Destroy_range@V?$allocator@D@std@@@std@@YAXPEADQEADAEAV?$allocator@D@0@@Z ; std::_Destroy_range<std::allocator<char> >
PUBLIC	??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@_W@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > >
PUBLIC	??$addressof@$$CBV?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@_W@std@@@0@AEBV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > const >
PUBLIC	??$_Get_size_of_n@$01@std@@YA_K_K@Z		; std::_Get_size_of_n<2>
PUBLIC	??$forward@H@std@@YA$$QEAHAEAH@Z		; std::forward<int>
PUBLIC	??$?0HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,0>
PUBLIC	??$forward@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??$?0HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>
PUBLIC	??$?0HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > ><int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &,0>
PUBLIC	??$forward@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>
PUBLIC	??$?0HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > ><int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &,0>
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void>
PUBLIC	??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z ; std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,std::less<void> >
PUBLIC	??$forward@AEBH@std@@YAAEBHAEBH@Z		; std::forward<int const &>
PUBLIC	??$?0HH$0A@@?$pair@HH@std@@QEAA@AEBH0@Z		; std::pair<int,int>::pair<int,int><int,int,0>
PUBLIC	??$?0HH$0A@@?$pair@HH@std@@QEAA@$$QEAH0@Z	; std::pair<int,int>::pair<int,int><int,int,0>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$forward@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z ; std::forward<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$forward@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AEAV10@@Z ; std::forward<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	??$forward@AEBV?$allocator@_W@std@@@std@@YAAEBV?$allocator@_W@0@AEBV10@@Z ; std::forward<std::allocator<wchar_t> const &>
PUBLIC	??1?$_Tidy_guard@V?$vector@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<wchar_t,std::allocator<wchar_t> > >::~_Tidy_guard<std::vector<wchar_t,std::allocator<wchar_t> > >
PUBLIC	??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z ; std::forward<std::allocator<char> const &>
PUBLIC	??1?$_Tidy_guard@V?$vector@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<char,std::allocator<char> > >::~_Tidy_guard<std::vector<char,std::allocator<char> > >
PUBLIC	?_Mark@?$_String_bitmap@_W$0A@@std@@QEAA_NPEB_WQEB_W@Z ; std::_String_bitmap<wchar_t,0>::_Mark
PUBLIC	?_Match@?$_String_bitmap@_W$0A@@std@@QEBA_N_W@Z	; std::_String_bitmap<wchar_t,0>::_Match
PUBLIC	??0?$_String_bitmap@_W$0A@@std@@QEAA@XZ		; std::_String_bitmap<wchar_t,0>::_String_bitmap<wchar_t,0>
PUBLIC	??$forward@V?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z ; std::forward<std::allocator<wchar_t> >
PUBLIC	?_Mark@?$_String_bitmap@D$00@std@@QEAA_NPEBDQEBD@Z ; std::_String_bitmap<char,1>::_Mark
PUBLIC	?_Match@?$_String_bitmap@D$00@std@@QEBA_ND@Z	; std::_String_bitmap<char,1>::_Match
PUBLIC	??0?$_String_bitmap@D$00@std@@QEAA@XZ		; std::_String_bitmap<char,1>::_String_bitmap<char,1>
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> >
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z	; std::addressof<wchar_t *>
PUBLIC	??$forward@AEBQEA_W@std@@YAAEBQEA_WAEBQEA_W@Z	; std::forward<wchar_t * const &>
PUBLIC	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z	; std::addressof<char *>
PUBLIC	??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z	; std::forward<char * const &>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEBV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const >
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$_Get_size_of_n@$0CI@@std@@YA_K_K@Z		; std::_Get_size_of_n<40>
PUBLIC	??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	??$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z ; std::_Uninitialized_fill_n<std::allocator<wchar_t> >
PUBLIC	??$_Uninitialized_fill_n@V?$allocator@D@std@@@std@@YAPEADPEAD_KAEBDAEAV?$allocator@D@0@@Z ; std::_Uninitialized_fill_n<std::allocator<char> >
PUBLIC	??$_Adl_verify_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@$0A@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0>
PUBLIC	??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>
PUBLIC	??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >
PUBLIC	??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@$0A@@std@@YAPEANAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,0>
PUBLIC	??$_Pass_fn@U?$less@X@std@@$0A@@std@@YA?AU?$less@X@0@U10@@Z ; std::_Pass_fn<std::less<void>,0>
PUBLIC	??$_Max_element_unchecked@PEANU?$less@X@std@@@std@@YAPEANPEAN0U?$less@X@0@@Z ; std::_Max_element_unchecked<double *,std::less<void> >
PUBLIC	??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@PEAN@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@AEBQEAN@Z ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,double *>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$_Get_unwrapped@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@@Z ; std::_Get_unwrapped<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Release
PUBLIC	??$_Emplace_back@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_back<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Get_unwrapped@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@@Z ; std::_Get_unwrapped<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Release
PUBLIC	??$_Emplace_back@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_back<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAA@PEA_WAEAV?$allocator@_W@1@@Z ; std::_Uninitialized_backout_al<std::allocator<wchar_t> >::_Uninitialized_backout_al<std::allocator<wchar_t> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<wchar_t> >::~_Uninitialized_backout_al<std::allocator<wchar_t> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAAPEA_WXZ ; std::_Uninitialized_backout_al<std::allocator<wchar_t> >::_Release
PUBLIC	??$_Emplace_back@AEB_W@?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAAXAEB_W@Z ; std::_Uninitialized_backout_al<std::allocator<wchar_t> >::_Emplace_back<wchar_t const &>
PUBLIC	??$_Unfancy@N@std@@YAPEANPEAN@Z			; std::_Unfancy<double>
PUBLIC	??$distance@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA_JPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::distance<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>
PUBLIC	??$_Ucopy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBV21@0PEAV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>
PUBLIC	??$_Move_backward_unchecked@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00@Z ; std::_Move_backward_unchecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$_Move_unchecked@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00@Z ; std::_Move_unchecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$_Debug_lt_pred@AEAU?$less@X@std@@AEANAEAN$0A@@std@@YA_NAEAU?$less@X@0@AEAN1@Z ; std::_Debug_lt_pred<std::less<void> &,double &,double &,0>
PUBLIC	??$?RAEANAEAN@?$less@X@std@@QEBA_NAEAN0@Z	; std::less<void>::operator()<double &,double &>
PUBLIC	??$forward@AEB_W@std@@YAAEB_WAEB_W@Z		; std::forward<wchar_t const &>
PUBLIC	??$construct@_WAEB_W@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@QEA_WAEB_W@Z ; std::_Default_allocator_traits<std::allocator<wchar_t> >::construct<wchar_t,wchar_t const &>
PUBLIC	??$_Refancy@PEAN$0A@@std@@YAPEANPEAN@Z		; std::_Refancy<double *,0>
PUBLIC	??$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Uninitialized_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Get_unwrapped@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@@Z ; std::_Get_unwrapped<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
PUBLIC	??$_Emplace_back@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_back<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ ; `string'
PUBLIC	??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@ ; `string'
PUBLIC	??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ ; `string'
PUBLIC	??_C@_0CF@PAGANAHI@?$CFs?3?5Read?3?$CF7?42fGB?1s?0?5Write?3?$CF7?42f@ ; `string'
PUBLIC	??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@ ; `string'
PUBLIC	??_C@_1MK@MNACACDL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@ ; `string'
PUBLIC	??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ ; `string'
PUBLIC	??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@ ; `string'
PUBLIC	??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ ; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position@	; `string'
PUBLIC	??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@ ; `string'
PUBLIC	??_C@_0CF@NNBLLPGF@vector?5insert?5iterator?5outside?5@ ; `string'
PUBLIC	??_C@_1BLK@GBKABDEF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa@ ; `string'
PUBLIC	??_C@_1EO@HCJPCNBE@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5@ ; `string'
PUBLIC	??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@ ; `string'
PUBLIC	??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ ; `string'
PUBLIC	??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@ ; `string'
PUBLIC	??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ ; `string'
PUBLIC	??_C@_1CI@JONCLBEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAb?$AAu?$AAg?$AA_?$AAl?$AAt?$AA_@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3f50000000000000
PUBLIC	__real@3fe0000000000000
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp___acrt_iob_func:PROC
EXTRN	__imp___stdio_common_vswprintf:PROC
EXTRN	__imp_fflush:PROC
EXTRN	__imp___stdio_common_vfprintf:PROC
EXTRN	__imp___stdio_common_vsprintf:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	abs:PROC
EXTRN	__imp_malloc:PROC
EXTRN	__imp__wfullpath:PROC
EXTRN	__imp__fullpath:PROC
EXTRN	memchr:PROC
EXTRN	memcmp:PROC
EXTRN	memcpy:PROC
EXTRN	memmove:PROC
EXTRN	memset:PROC
EXTRN	__imp_wcslen:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	strlen:PROC
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPEBD@Z:PROC		; std::_Xout_of_range
EXTRN	__imp__mbschr:PROC
EXTRN	__imp__mbscmp:PROC
EXTRN	__imp__mbsicmp:PROC
EXTRN	__imp_VerSetConditionMask:PROC
EXTRN	__imp_GetStdHandle:PROC
EXTRN	__imp_CreateDirectoryA:PROC
EXTRN	__imp_CreateDirectoryW:PROC
EXTRN	__imp_FindClose:PROC
EXTRN	__imp_FindFirstFileA:PROC
EXTRN	__imp_FindNextFileA:PROC
EXTRN	__imp_GetFileAttributesExA:PROC
EXTRN	__imp_GetFileAttributesExW:PROC
EXTRN	__imp_GlobalMemoryStatusEx:PROC
EXTRN	__imp_GetVersionExW:PROC
EXTRN	__imp_GetNativeSystemInfo:PROC
EXTRN	__imp_FreeLibrary:PROC
EXTRN	__imp_GetModuleFileNameA:PROC
EXTRN	__imp_GetProcAddress:PROC
EXTRN	__imp_LoadLibraryA:PROC
EXTRN	__imp_VerifyVersionInfoW:PROC
EXTRN	__imp_MultiByteToWideChar:PROC
EXTRN	__imp_WideCharToMultiByte:PROC
EXTRN	__imp_GetConsoleScreenBufferInfo:PROC
EXTRN	__imp_SetConsoleTextAttribute:PROC
EXTRN	__imp_PathCombineA:PROC
EXTRN	__imp_PathCombineW:PROC
EXTRN	__imp_PathFindExtensionA:PROC
EXTRN	__imp_PathFindExtensionW:PROC
EXTRN	__imp_PathFindFileNameA:PROC
EXTRN	__imp_PathFindFileNameW:PROC
EXTRN	__imp_PathIsDirectoryA:PROC
EXTRN	__imp_PathIsDirectoryW:PROC
EXTRN	__imp_PathIsRelativeA:PROC
EXTRN	__imp_PathIsRelativeW:PROC
EXTRN	__imp_PathStripToRootA:PROC
EXTRN	__imp_PathStripToRootW:PROC
EXTRN	?get_cpu_info@@YA_NPEAUcpu_info_t@@@Z:PROC	; get_cpu_info
EXTRN	?getCPUInfo@@YAHPEAD_KPEAVMFXVideoSession@@@Z:PROC ; getCPUInfo
EXTRN	?getGPUInfo@@YAHPEBDPEADI_N@Z:PROC		; getGPUInfo
EXTRN	?ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z:PROC ; ram_speed_mt_list
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?CspMatrixList@@3V?$array@W4CspMatrix@@$0O@@std@@B DB 038H DUP (?) ; CspMatrixList
?CspTransferList@@3V?$array@W4CspTransfer@@$0P@@std@@B DB 03cH DUP (?) ; CspTransferList
?CspColorprimList@@3V?$array@W4CspColorprim@@$0M@@std@@B DB 030H DUP (?) ; CspColorprimList
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$__local_stdio_printf_options DD imagerel $LN3
	DD	imagerel $LN3+11
	DD	imagerel $unwind$__local_stdio_printf_options
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vswprintf_c_l DD imagerel $LN5
	DD	imagerel $LN5+133
	DD	imagerel $unwind$_vswprintf_c_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$vswprintf DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$vswprintf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vscwprintf_l DD imagerel $LN5
	DD	imagerel $LN5+130
	DD	imagerel $unwind$_vscwprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vscwprintf DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$_vscwprintf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?vswprintf@@YAHQEA_WQEB_WPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$?vswprintf@@YAHQEA_WQEB_WPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vfprintf_l DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$_vfprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$fprintf DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$fprintf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsnprintf_l DD imagerel $LN5
	DD	imagerel $LN5+140
	DD	imagerel $unwind$_vsnprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$vsprintf DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$vsprintf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vscprintf_l DD imagerel $LN5
	DD	imagerel $LN5+130
	DD	imagerel $unwind$_vscprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vscprintf DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$_vscprintf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$wmemchr DD imagerel $LN7
	DD	imagerel $LN7+83
	DD	imagerel $unwind$wmemchr
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$wmemcmp DD imagerel $LN9
	DD	imagerel $LN9+162
	DD	imagerel $unwind$wmemcmp
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$wmemcpy DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$wmemcpy
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$wmemmove DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$wmemmove
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+14
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+83
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA DD imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+424
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Convert_size@_K@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Convert_size@_K@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN8
	DD	imagerel $LN8+175
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DD imagerel $LN6
	DD	imagerel $LN6+182
	DD	imagerel $unwind$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA DD imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Iterator_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0_Iterator_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Iterator_base12@std@@QEAA@AEBU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$??0_Iterator_base12@std@@QEAA@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DD imagerel $LN7
	DD	imagerel $LN7+161
	DD	imagerel $unwind$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA DD imagerel ?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA
	DD	imagerel ?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Iterator_base12@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+92
	DD	imagerel $unwind$??1_Iterator_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD imagerel $LN8
	DD	imagerel $LN8+251
	DD	imagerel $unwind$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA DD imagerel ?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA DD imagerel ?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
	DD	imagerel ?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA+36
	DD	imagerel $unwind$?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+76
	DD	imagerel $unwind$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DD imagerel $LN15
	DD	imagerel $LN15+270
	DD	imagerel $unwind$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?compare@?$_WChar_traits@_W@std@@SAHQEB_W0_K@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?compare@?$_WChar_traits@_W@std@@SAHQEB_W0_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$_WChar_traits@_W@std@@SA_KPEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?length@?$_WChar_traits@_W@std@@SA_KPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?copy@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?find@?$_WChar_traits@_W@std@@SAPEB_WPEB_W_KAEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$?find@?$_WChar_traits@_W@std@@SAPEB_WPEB_W_KAEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?move@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?move@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?find@?$_Narrow_char_traits@DH@std@@SAPEBDQEBD_KAEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?find@?$_Narrow_char_traits@DH@std@@SAPEBDQEBD_KAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@D@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@D@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+15
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+95
	DD	imagerel $unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+68
	DD	imagerel $unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+54
	DD	imagerel $unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+233
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+254
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD imagerel $LN5
	DD	imagerel $LN5+220
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+163
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+135
	DD	imagerel $unwind$?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD imagerel $LN5
	DD	imagerel $LN5+126
	DD	imagerel $unwind$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD imagerel $LN4
	DD	imagerel $LN4+381
	DD	imagerel $unwind$?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+153
	DD	imagerel $unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+270
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+133
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+198
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0AEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+101
	DD	imagerel $unwind$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0AEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z DD imagerel $LN11
	DD	imagerel $LN11+1003
	DD	imagerel $unwind$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+153
	DD	imagerel $unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KAEBV12@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+121
	DD	imagerel $unwind$?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KAEBV12@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?find_first_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$?find_first_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?find_first_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$?find_first_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?find_last_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$?find_last_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+122
	DD	imagerel $unwind$?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z@4HA DD imagerel ?dtor$0@?0??substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z@4HA
	DD	imagerel ?dtor$0@?0??substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z@4HA+49
	DD	imagerel $unwind$?dtor$0@?0??substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD imagerel $LN5
	DD	imagerel $LN5+189
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+214
	DD	imagerel $unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+50
	DD	imagerel $unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@_W@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@_W@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@AEBV32@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@AEBV32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+95
	DD	imagerel $unwind$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+68
	DD	imagerel $unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Check_offset@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$?_Check_offset@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xran@?$_String_val@U?$_Simple_types@_W@std@@@std@@SAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xran@?$_String_val@U?$_Simple_types@_W@std@@@std@@SAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_K_K0@Z DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_K_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+54
	DD	imagerel $unwind$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+233
	DD	imagerel $unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+254
	DD	imagerel $unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z DD imagerel $LN5
	DD	imagerel $LN5+220
	DD	imagerel $unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+163
	DD	imagerel $unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Move_assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+135
	DD	imagerel $unwind$?_Move_assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Memcpy_val_from@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$?_Memcpy_val_from@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD imagerel $LN5
	DD	imagerel $LN5+126
	DD	imagerel $unwind$?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Construct_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z DD imagerel $LN4
	DD	imagerel $LN4+381
	DD	imagerel $unwind$?_Construct_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+153
	DD	imagerel $unwind$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@QEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@QEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+137
	DD	imagerel $unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z DD imagerel $LN4
	DD	imagerel $LN4+198
	DD	imagerel $unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?clear@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0AEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+101
	DD	imagerel $unwind$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0AEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_KQEB_W0@Z DD imagerel $LN11
	DD	imagerel $LN11+994
	DD	imagerel $unwind$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_KQEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+153
	DD	imagerel $unwind$?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?find@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+121
	DD	imagerel $unwind$?find@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KQEB_W_K@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KQEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KQEB_W_K@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KQEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+122
	DD	imagerel $unwind$?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z@4HA DD imagerel ?dtor$0@?0??substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z@4HA
	DD	imagerel ?dtor$0@?0??substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z@4HA+49
	DD	imagerel $unwind$?dtor$0@?0??substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$allocator@_W@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$allocator@_W@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z DD imagerel $LN5
	DD	imagerel $LN5+189
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+101
	DD	imagerel $unwind$?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+216
	DD	imagerel $unwind$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?_Swap_proxy_and_iterators@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+50
	DD	imagerel $unwind$??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_tcschr DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$_tcschr
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_tcscmp DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$_tcscmp
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_tcsicmp DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$_tcsicmp
pdata	ENDS
pdata	SEGMENT
$pdata$?wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DD imagerel $LN8
	DD	imagerel $LN8+478
	DD	imagerel $unwind$?wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA DD imagerel ?dtor$0@?0??wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA
	DD	imagerel ?dtor$0@?0??wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z DD imagerel $LN7
	DD	imagerel $LN7+244
	DD	imagerel $unwind$?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA DD imagerel ?dtor$0@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA
	DD	imagerel ?dtor$0@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA+52
	DD	imagerel $unwind$?dtor$0@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA
$pdata$?dtor$1@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA DD imagerel ?dtor$1@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA
	DD	imagerel ?dtor$1@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z DD imagerel $LN6
	DD	imagerel $LN6+199
	DD	imagerel $unwind$?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA DD imagerel ?dtor$0@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA
	DD	imagerel ?dtor$0@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA
$pdata$?dtor$1@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA DD imagerel ?dtor$1@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA
	DD	imagerel ?dtor$1@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA+52
	DD	imagerel $unwind$?dtor$1@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z DD imagerel $LN6
	DD	imagerel $LN6+371
	DD	imagerel $unwind$?char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA DD imagerel ?dtor$0@?0??char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA
	DD	imagerel ?dtor$0@?0??char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z DD imagerel $LN7
	DD	imagerel $LN7+244
	DD	imagerel $unwind$?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA DD imagerel ?dtor$0@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA
	DD	imagerel ?dtor$0@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA+52
	DD	imagerel $unwind$?dtor$0@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA
$pdata$?dtor$1@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA DD imagerel ?dtor$1@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA
	DD	imagerel ?dtor$1@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z DD imagerel $LN6
	DD	imagerel $LN6+199
	DD	imagerel $unwind$?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA DD imagerel ?dtor$0@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA
	DD	imagerel ?dtor$0@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA
$pdata$?dtor$1@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA DD imagerel ?dtor$1@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA
	DD	imagerel ?dtor$1@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA+52
	DD	imagerel $unwind$?dtor$1@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ DD imagerel $LN8
	DD	imagerel $LN8+416
	DD	imagerel $unwind$?strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA DD imagerel ?dtor$0@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA
	DD	imagerel ?dtor$0@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA+58
	DD	imagerel $unwind$?dtor$0@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA
$pdata$?dtor$1@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA DD imagerel ?dtor$1@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA
	DD	imagerel ?dtor$1@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA
$pdata$?dtor$2@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA DD imagerel ?dtor$2@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA
	DD	imagerel ?dtor$2@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z DD imagerel $LN8
	DD	imagerel $LN8+212
	DD	imagerel $unwind$?str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z@4HA DD imagerel ?dtor$0@?0??str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z@4HA
	DD	imagerel ?dtor$0@?0??str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z@4HA
$pdata$?dtor$1@?0??str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z@4HA DD imagerel ?dtor$1@?0??str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z@4HA
	DD	imagerel ?dtor$1@?0??str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z@4HA+49
	DD	imagerel $unwind$?dtor$1@?0??str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z DD imagerel $LN7
	DD	imagerel $LN7+312
	DD	imagerel $unwind$?GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA DD imagerel ?dtor$0@?0??GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA
	DD	imagerel ?dtor$0@?0??GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA+52
	DD	imagerel $unwind$?dtor$0@?0??GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA
$pdata$?dtor$1@?0??GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA DD imagerel ?dtor$1@?0??GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA
	DD	imagerel ?dtor$1@?0??GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?rgy_get_filesize@@YA_NPEB_WPEA_K@Z DD imagerel $LN7
	DD	imagerel $LN7+221
	DD	imagerel $unwind$?rgy_get_filesize@@YA_NPEB_WPEA_K@Z
$pdata$?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z DD imagerel $LN7
	DD	imagerel $LN7+367
	DD	imagerel $unwind$?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA DD imagerel ?dtor$0@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA
	DD	imagerel ?dtor$0@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA+52
	DD	imagerel $unwind$?dtor$0@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA
$pdata$?dtor$1@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA DD imagerel ?dtor$1@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA
	DD	imagerel ?dtor$1@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?PathRemoveExtensionS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@Z DD imagerel $LN7
	DD	imagerel $LN7+192
	DD	imagerel $unwind$?PathRemoveExtensionS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??PathRemoveExtensionS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@Z@4HA DD imagerel ?dtor$0@?0??PathRemoveExtensionS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@Z@4HA
	DD	imagerel ?dtor$0@?0??PathRemoveExtensionS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@Z@4HA+49
	DD	imagerel $unwind$?dtor$0@?0??PathRemoveExtensionS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z DD imagerel $LN6
	DD	imagerel $LN6+304
	DD	imagerel $unwind$?PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z@4HA DD imagerel ?dtor$0@?0??PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z@4HA
	DD	imagerel ?dtor$0@?0??PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z@4HA
$pdata$?dtor$1@?0??PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z@4HA DD imagerel ?dtor$1@?0??PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z@4HA
	DD	imagerel ?dtor$1@?0??PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z@4HA+52
	DD	imagerel $unwind$?dtor$1@?0??PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z DD imagerel $LN6
	DD	imagerel $LN6+302
	DD	imagerel $unwind$?PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z@4HA DD imagerel ?dtor$0@?0??PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z@4HA
	DD	imagerel ?dtor$0@?0??PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z@4HA
$pdata$?dtor$1@?0??PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z@4HA DD imagerel ?dtor$1@?0??PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z@4HA
	DD	imagerel ?dtor$1@?0??PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z@4HA+52
	DD	imagerel $unwind$?dtor$1@?0??PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?CreateDirectoryRecursive@@YA_NPEB_W@Z DD imagerel $LN11
	DD	imagerel $LN11+365
	DD	imagerel $unwind$?CreateDirectoryRecursive@@YA_NPEB_W@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??CreateDirectoryRecursive@@YA_NPEB_W@Z@4HA DD imagerel ?dtor$0@?0??CreateDirectoryRecursive@@YA_NPEB_W@Z@4HA
	DD	imagerel ?dtor$0@?0??CreateDirectoryRecursive@@YA_NPEB_W@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??CreateDirectoryRecursive@@YA_NPEB_W@Z@4HA
$pdata$?dtor$1@?0??CreateDirectoryRecursive@@YA_NPEB_W@Z@4HA DD imagerel ?dtor$1@?0??CreateDirectoryRecursive@@YA_NPEB_W@Z@4HA
	DD	imagerel ?dtor$1@?0??CreateDirectoryRecursive@@YA_NPEB_W@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??CreateDirectoryRecursive@@YA_NPEB_W@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z DD imagerel $LN17
	DD	imagerel $LN17+843
	DD	imagerel $unwind$?get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA DD imagerel ?dtor$0@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA
	DD	imagerel ?dtor$0@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA
$pdata$?dtor$1@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA DD imagerel ?dtor$1@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA
	DD	imagerel ?dtor$1@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA
$pdata$?dtor$2@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA DD imagerel ?dtor$2@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA
	DD	imagerel ?dtor$2@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA+58
	DD	imagerel $unwind$?dtor$2@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA
$pdata$?dtor$3@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA DD imagerel ?dtor$3@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA
	DD	imagerel ?dtor$3@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA
$pdata$?dtor$4@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA DD imagerel ?dtor$4@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA
	DD	imagerel ?dtor$4@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA
$pdata$?dtor$5@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA DD imagerel ?dtor$5@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA
	DD	imagerel ?dtor$5@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA+38
	DD	imagerel $unwind$?dtor$5@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA
$pdata$?dtor$6@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA DD imagerel ?dtor$6@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA
	DD	imagerel ?dtor$6@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA+38
	DD	imagerel $unwind$?dtor$6@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD imagerel $LN7
	DD	imagerel $LN7+316
	DD	imagerel $unwind$?getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$0@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$0@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$1@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$1@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$1@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$pdata$?dtor$2@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD imagerel ?dtor$2@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DD	imagerel ?dtor$2@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA+58
	DD	imagerel $unwind$?dtor$2@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z DD imagerel $LN5
	DD	imagerel $LN5+92
	DD	imagerel $unwind$?tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA DD imagerel ?dtor$0@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA
	DD	imagerel ?dtor$0@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA+49
	DD	imagerel $unwind$?dtor$0@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z DD imagerel $LN7
	DD	imagerel $LN7+227
	DD	imagerel $unwind$?tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA DD imagerel ?dtor$0@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA
	DD	imagerel ?dtor$0@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA+52
	DD	imagerel $unwind$?dtor$0@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA
$pdata$?dtor$1@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA DD imagerel ?dtor$1@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA
	DD	imagerel ?dtor$1@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DD imagerel $LN11
	DD	imagerel $LN11+372
	DD	imagerel $unwind$?tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA DD imagerel ?dtor$0@?0??tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA
	DD	imagerel ?dtor$0@?0??tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA+55
	DD	imagerel $unwind$?dtor$0@?0??tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA
$pdata$?dtor$1@?0??tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA DD imagerel ?dtor$1@?0??tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA
	DD	imagerel ?dtor$1@?0??tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA+55
	DD	imagerel $unwind$?dtor$1@?0??tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z DD imagerel $LN7
	DD	imagerel $LN7+244
	DD	imagerel $unwind$?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA DD imagerel ?dtor$0@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA
	DD	imagerel ?dtor$0@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA+52
	DD	imagerel $unwind$?dtor$0@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA
$pdata$?dtor$1@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA DD imagerel ?dtor$1@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA
	DD	imagerel ?dtor$1@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z DD imagerel $LN6
	DD	imagerel $LN6+199
	DD	imagerel $unwind$?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA DD imagerel ?dtor$0@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA
	DD	imagerel ?dtor$0@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA
$pdata$?dtor$1@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA DD imagerel ?dtor$1@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA
	DD	imagerel ?dtor$1@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA+52
	DD	imagerel $unwind$?dtor$1@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z DD imagerel $LN11
	DD	imagerel $LN11+372
	DD	imagerel $unwind$?char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA DD imagerel ?dtor$0@?0??char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA
	DD	imagerel ?dtor$0@?0??char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA+55
	DD	imagerel $unwind$?dtor$0@?0??char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA
$pdata$?dtor$1@?0??char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA DD imagerel ?dtor$1@?0??char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA
	DD	imagerel ?dtor$1@?0??char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA+55
	DD	imagerel $unwind$?dtor$1@?0??char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z DD imagerel $LN7
	DD	imagerel $LN7+244
	DD	imagerel $unwind$?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA DD imagerel ?dtor$0@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA
	DD	imagerel ?dtor$0@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA+52
	DD	imagerel $unwind$?dtor$0@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA
$pdata$?dtor$1@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA DD imagerel ?dtor$1@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA
	DD	imagerel ?dtor$1@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z DD imagerel $LN6
	DD	imagerel $LN6+199
	DD	imagerel $unwind$?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA DD imagerel ?dtor$0@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA
	DD	imagerel ?dtor$0@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA
$pdata$?dtor$1@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA DD imagerel ?dtor$1@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA
	DD	imagerel ?dtor$1@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA+52
	DD	imagerel $unwind$?dtor$1@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?wstring_to_tstring@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DD imagerel $LN4
	DD	imagerel $LN4+107
	DD	imagerel $unwind$?wstring_to_tstring@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
$pdata$?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z DD imagerel $LN7
	DD	imagerel $LN7+244
	DD	imagerel $unwind$?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA DD imagerel ?dtor$0@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA
	DD	imagerel ?dtor$0@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA+52
	DD	imagerel $unwind$?dtor$0@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA
$pdata$?dtor$1@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA DD imagerel ?dtor$1@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA
	DD	imagerel ?dtor$1@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z DD imagerel $LN6
	DD	imagerel $LN6+199
	DD	imagerel $unwind$?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA DD imagerel ?dtor$0@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA
	DD	imagerel ?dtor$0@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA
$pdata$?dtor$1@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA DD imagerel ?dtor$1@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA
	DD	imagerel ?dtor$1@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA+52
	DD	imagerel $unwind$?dtor$1@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ DD imagerel $LN8
	DD	imagerel $LN8+414
	DD	imagerel $unwind$?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA DD imagerel ?dtor$0@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA
	DD	imagerel ?dtor$0@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA+58
	DD	imagerel $unwind$?dtor$0@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA
$pdata$?dtor$1@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA DD imagerel ?dtor$1@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA
	DD	imagerel ?dtor$1@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA
$pdata$?dtor$2@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA DD imagerel ?dtor$2@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA
	DD	imagerel ?dtor$2@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z DD imagerel $LN19
	DD	imagerel $LN19+821
	DD	imagerel $unwind$?split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA DD imagerel ?dtor$0@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA
	DD	imagerel ?dtor$0@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA
$pdata$?dtor$1@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA DD imagerel ?dtor$1@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA
	DD	imagerel ?dtor$1@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA
$pdata$?dtor$2@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA DD imagerel ?dtor$2@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA
	DD	imagerel ?dtor$2@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA
$pdata$?dtor$3@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA DD imagerel ?dtor$3@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA
	DD	imagerel ?dtor$3@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA
$pdata$?dtor$4@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA DD imagerel ?dtor$4@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA
	DD	imagerel ?dtor$4@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA
$pdata$?dtor$5@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA DD imagerel ?dtor$5@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA
	DD	imagerel ?dtor$5@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA+38
	DD	imagerel $unwind$?dtor$5@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA
$pdata$?dtor$6@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA DD imagerel ?dtor$6@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA
	DD	imagerel ?dtor$6@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA+58
	DD	imagerel $unwind$?dtor$6@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z DD imagerel $LN19
	DD	imagerel $LN19+821
	DD	imagerel $unwind$?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA DD imagerel ?dtor$0@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA
	DD	imagerel ?dtor$0@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA
$pdata$?dtor$1@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA DD imagerel ?dtor$1@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA
	DD	imagerel ?dtor$1@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA
$pdata$?dtor$2@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA DD imagerel ?dtor$2@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA
	DD	imagerel ?dtor$2@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA
$pdata$?dtor$3@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA DD imagerel ?dtor$3@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA
	DD	imagerel ?dtor$3@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA
$pdata$?dtor$4@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA DD imagerel ?dtor$4@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA
	DD	imagerel ?dtor$4@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA
$pdata$?dtor$5@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA DD imagerel ?dtor$5@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA
	DD	imagerel ?dtor$5@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA+38
	DD	imagerel $unwind$?dtor$5@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA
$pdata$?dtor$6@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA DD imagerel ?dtor$6@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA
	DD	imagerel ?dtor$6@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA+58
	DD	imagerel $unwind$?dtor$6@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z DD imagerel $LN8
	DD	imagerel $LN8+310
	DD	imagerel $unwind$?lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA DD imagerel ?dtor$0@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
$pdata$?dtor$1@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA DD imagerel ?dtor$1@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
	DD	imagerel ?dtor$1@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
$pdata$?dtor$2@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA DD imagerel ?dtor$2@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
	DD	imagerel ?dtor$2@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA+58
	DD	imagerel $unwind$?dtor$2@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z DD imagerel $LN8
	DD	imagerel $LN8+314
	DD	imagerel $unwind$?rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA DD imagerel ?dtor$0@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
$pdata$?dtor$1@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA DD imagerel ?dtor$1@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
	DD	imagerel ?dtor$1@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
$pdata$?dtor$2@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA DD imagerel ?dtor$2@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
	DD	imagerel ?dtor$2@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA+58
	DD	imagerel $unwind$?dtor$2@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z DD imagerel $LN8
	DD	imagerel $LN8+366
	DD	imagerel $unwind$?trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA DD imagerel ?dtor$0@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
$pdata$?dtor$1@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA DD imagerel ?dtor$1@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
	DD	imagerel ?dtor$1@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
$pdata$?dtor$2@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA DD imagerel ?dtor$2@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
	DD	imagerel ?dtor$2@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA+58
	DD	imagerel $unwind$?dtor$2@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z DD imagerel $LN8
	DD	imagerel $LN8+310
	DD	imagerel $unwind$?lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA DD imagerel ?dtor$0@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
	DD	imagerel ?dtor$0@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
$pdata$?dtor$1@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA DD imagerel ?dtor$1@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
	DD	imagerel ?dtor$1@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
$pdata$?dtor$2@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA DD imagerel ?dtor$2@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
	DD	imagerel ?dtor$2@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA+58
	DD	imagerel $unwind$?dtor$2@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z DD imagerel $LN8
	DD	imagerel $LN8+314
	DD	imagerel $unwind$?rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA DD imagerel ?dtor$0@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
	DD	imagerel ?dtor$0@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
$pdata$?dtor$1@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA DD imagerel ?dtor$1@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
	DD	imagerel ?dtor$1@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
$pdata$?dtor$2@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA DD imagerel ?dtor$2@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
	DD	imagerel ?dtor$2@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA+58
	DD	imagerel $unwind$?dtor$2@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z DD imagerel $LN8
	DD	imagerel $LN8+366
	DD	imagerel $unwind$?trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA DD imagerel ?dtor$0@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
	DD	imagerel ?dtor$0@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
$pdata$?dtor$1@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA DD imagerel ?dtor$1@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
	DD	imagerel ?dtor$1@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
$pdata$?dtor$2@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA DD imagerel ?dtor$2@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
	DD	imagerel ?dtor$2@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA+58
	DD	imagerel $unwind$?dtor$2@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z DD imagerel $LN8
	DD	imagerel $LN8+212
	DD	imagerel $unwind$?str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z@4HA DD imagerel ?dtor$0@?0??str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z@4HA
	DD	imagerel ?dtor$0@?0??str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z@4HA
$pdata$?dtor$1@?0??str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z@4HA DD imagerel ?dtor$1@?0??str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z@4HA
	DD	imagerel ?dtor$1@?0??str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z@4HA+49
	DD	imagerel $unwind$?dtor$1@?0??str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z DD imagerel $LN7
	DD	imagerel $LN7+309
	DD	imagerel $unwind$?GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD imagerel ?dtor$0@?0??GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0??GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA+52
	DD	imagerel $unwind$?dtor$0@?0??GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
$pdata$?dtor$1@?0??GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD imagerel ?dtor$1@?0??GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	imagerel ?dtor$1@?0??GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?rgy_get_filesize@@YA_NPEBDPEA_K@Z DD imagerel $LN7
	DD	imagerel $LN7+221
	DD	imagerel $unwind$?rgy_get_filesize@@YA_NPEBDPEA_K@Z
$pdata$?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD imagerel $LN7
	DD	imagerel $LN7+364
	DD	imagerel $unwind$?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA DD imagerel ?dtor$0@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
	DD	imagerel ?dtor$0@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA+52
	DD	imagerel $unwind$?dtor$0@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
$pdata$?dtor$1@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA DD imagerel ?dtor$1@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
	DD	imagerel ?dtor$1@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?PathRemoveExtensionS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@Z DD imagerel $LN7
	DD	imagerel $LN7+189
	DD	imagerel $unwind$?PathRemoveExtensionS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??PathRemoveExtensionS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@Z@4HA DD imagerel ?dtor$0@?0??PathRemoveExtensionS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@Z@4HA
	DD	imagerel ?dtor$0@?0??PathRemoveExtensionS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@Z@4HA+49
	DD	imagerel $unwind$?dtor$0@?0??PathRemoveExtensionS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?CreateDirectoryRecursive@@YA_NPEBD@Z DD imagerel $LN11
	DD	imagerel $LN11+365
	DD	imagerel $unwind$?CreateDirectoryRecursive@@YA_NPEBD@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??CreateDirectoryRecursive@@YA_NPEBD@Z@4HA DD imagerel ?dtor$0@?0??CreateDirectoryRecursive@@YA_NPEBD@Z@4HA
	DD	imagerel ?dtor$0@?0??CreateDirectoryRecursive@@YA_NPEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??CreateDirectoryRecursive@@YA_NPEBD@Z@4HA
$pdata$?dtor$1@?0??CreateDirectoryRecursive@@YA_NPEBD@Z@4HA DD imagerel ?dtor$1@?0??CreateDirectoryRecursive@@YA_NPEBD@Z@4HA
	DD	imagerel ?dtor$1@?0??CreateDirectoryRecursive@@YA_NPEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??CreateDirectoryRecursive@@YA_NPEBD@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z DD imagerel $LN7
	DD	imagerel $LN7+431
	DD	imagerel $unwind$?print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA DD imagerel ?dtor$0@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA
	DD	imagerel ?dtor$0@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA
$pdata$?dtor$1@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA DD imagerel ?dtor$1@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA
	DD	imagerel ?dtor$1@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA
$pdata$?dtor$2@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA DD imagerel ?dtor$2@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA
	DD	imagerel ?dtor$2@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA+58
	DD	imagerel $unwind$?dtor$2@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?check_ext@@YA_NPEBDAEBV?$vector@PEBDV?$allocator@PEBD@std@@@std@@@Z DD imagerel $LN11
	DD	imagerel $LN11+344
	DD	imagerel $unwind$?check_ext@@YA_NPEBDAEBV?$vector@PEBDV?$allocator@PEBD@std@@@std@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??check_ext@@YA_NPEBDAEBV?$vector@PEBDV?$allocator@PEBD@std@@@std@@@Z@4HA DD imagerel ?dtor$0@?0??check_ext@@YA_NPEBDAEBV?$vector@PEBDV?$allocator@PEBD@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0??check_ext@@YA_NPEBDAEBV?$vector@PEBDV?$allocator@PEBD@std@@@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??check_ext@@YA_NPEBDAEBV?$vector@PEBDV?$allocator@PEBD@std@@@std@@@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?check_ext@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@PEBDV?$allocator@PEBD@std@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?check_ext@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@PEBDV?$allocator@PEBD@std@@@2@@Z
$pdata$?rgy_print_stderr@@YAHHPEBDPEAX@Z DD imagerel $LN22
	DD	imagerel $LN22+810
	DD	imagerel $unwind$?rgy_print_stderr@@YAHHPEBDPEAX@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA DD imagerel ?dtor$0@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA
	DD	imagerel ?dtor$0@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA+55
	DD	imagerel $unwind$?dtor$0@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA
$pdata$?dtor$1@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA DD imagerel ?dtor$1@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA
	DD	imagerel ?dtor$1@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA+55
	DD	imagerel $unwind$?dtor$1@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA
$pdata$?dtor$2@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA DD imagerel ?dtor$2@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA
	DD	imagerel ?dtor$2@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA
$pdata$?dtor$3@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA DD imagerel ?dtor$3@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA
	DD	imagerel ?dtor$3@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA+58
	DD	imagerel $unwind$?dtor$3@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z DD imagerel $LN66
	DD	imagerel $LN66+1320
	DD	imagerel $unwind$?getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z@4HA DD imagerel ?dtor$0@?0??getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z@4HA
	DD	imagerel ?dtor$0@?0??getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z@4HA+58
	DD	imagerel $unwind$?dtor$0@?0??getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?rgy_is_64bit_os@@YAHXZ DD imagerel $LN5
	DD	imagerel $LN5+106
	DD	imagerel $unwind$?rgy_is_64bit_os@@YAHXZ
$pdata$?getPhysicalRamSize@@YA_KPEA_K@Z DD imagerel $LN4
	DD	imagerel $LN4+179
	DD	imagerel $unwind$?getPhysicalRamSize@@YA_KPEA_K@Z
$pdata$?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z DD imagerel $LN18
	DD	imagerel $LN18+1317
	DD	imagerel $unwind$?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA DD imagerel ?dtor$0@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA
	DD	imagerel ?dtor$0@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA
$pdata$?dtor$1@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA DD imagerel ?dtor$1@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA
	DD	imagerel ?dtor$1@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA
$pdata$?dtor$2@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA DD imagerel ?dtor$2@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA
	DD	imagerel ?dtor$2@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA
$pdata$?dtor$3@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA DD imagerel ?dtor$3@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA
	DD	imagerel ?dtor$3@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA
$pdata$?dtor$4@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA DD imagerel ?dtor$4@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA
	DD	imagerel ?dtor$4@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA
$pdata$?dtor$5@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA DD imagerel ?dtor$5@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA
	DD	imagerel ?dtor$5@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA+38
	DD	imagerel $unwind$?dtor$5@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA
$pdata$?dtor$6@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA DD imagerel ?dtor$6@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA
	DD	imagerel ?dtor$6@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA+58
	DD	imagerel $unwind$?dtor$6@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?check_OS_Win8orLater@@YAHXZ DD imagerel $LN3
	DD	imagerel $LN3+35
	DD	imagerel $unwind$?check_OS_Win8orLater@@YAHXZ
$pdata$?malloc_degeneracy@@YA_KPEAPEAX_K1@Z DD imagerel $LN9
	DD	imagerel $LN9+241
	DD	imagerel $unwind$?malloc_degeneracy@@YA_KPEAPEAX_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+297
	DD	imagerel $unwind$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspMatrixList@@YAXXZ DD imagerel ??__ECspMatrixList@@YAXXZ
	DD	imagerel ??__ECspMatrixList@@YAXXZ+452
	DD	imagerel $unwind$??__ECspMatrixList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+311
	DD	imagerel $unwind$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspTransferList@@YAXXZ DD imagerel ??__ECspTransferList@@YAXXZ
	DD	imagerel ??__ECspTransferList@@YAXXZ+476
	DD	imagerel $unwind$??__ECspTransferList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+263
	DD	imagerel $unwind$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspColorprimList@@YAXXZ DD imagerel ??__ECspColorprimList@@YAXXZ
	DD	imagerel ??__ECspColorprimList@@YAXXZ+398
	DD	imagerel $unwind$??__ECspColorprimList@@YAXXZ
pdata	ENDS
pdata	SEGMENT
$pdata$?get_dar_pixels@@YAXPEAI0HH@Z DD imagerel $LN8
	DD	imagerel $LN8+334
	DD	imagerel $unwind$?get_dar_pixels@@YAXPEAI0HH@Z
$pdata$?get_sar@@YA?AU?$pair@HH@std@@IIII@Z DD imagerel $LN5
	DD	imagerel $LN5+183
	DD	imagerel $unwind$?get_sar@@YA?AU?$pair@HH@std@@IIII@Z
$pdata$?adjust_sar@@YAXPEAH0HH@Z DD imagerel $LN13
	DD	imagerel $LN13+392
	DD	imagerel $unwind$?adjust_sar@@YAXPEAH0HH@Z
$pdata$?get_h264_sar_idx@@YAHU?$pair@HH@std@@@Z DD imagerel $LN8
	DD	imagerel $LN8+201
	DD	imagerel $unwind$?get_h264_sar_idx@@YAHU?$pair@HH@std@@@Z
$pdata$?get_h264_sar@@YA?AU?$pair@HH@std@@H@Z DD imagerel $LN7
	DD	imagerel $LN7+237
	DD	imagerel $unwind$?get_h264_sar@@YA?AU?$pair@HH@std@@H@Z
$pdata$??0AudioSelect@@QEAA@XZ DD imagerel $LN10
	DD	imagerel $LN10+317
	DD	imagerel $unwind$??0AudioSelect@@QEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???0AudioSelect@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0AudioSelect@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0AudioSelect@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0AudioSelect@@QEAA@XZ@4HA
$pdata$?dtor$1@?0???0AudioSelect@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0AudioSelect@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0AudioSelect@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???0AudioSelect@@QEAA@XZ@4HA
$pdata$?dtor$2@?0???0AudioSelect@@QEAA@XZ@4HA DD imagerel ?dtor$2@?0???0AudioSelect@@QEAA@XZ@4HA
	DD	imagerel ?dtor$2@?0???0AudioSelect@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$2@?0???0AudioSelect@@QEAA@XZ@4HA
$pdata$?dtor$3@?0???0AudioSelect@@QEAA@XZ@4HA DD imagerel ?dtor$3@?0???0AudioSelect@@QEAA@XZ@4HA
	DD	imagerel ?dtor$3@?0???0AudioSelect@@QEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$3@?0???0AudioSelect@@QEAA@XZ@4HA
$pdata$?dtor$4@?0???0AudioSelect@@QEAA@XZ@4HA DD imagerel ?dtor$4@?0???0AudioSelect@@QEAA@XZ@4HA
	DD	imagerel ?dtor$4@?0???0AudioSelect@@QEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$4@?0???0AudioSelect@@QEAA@XZ@4HA
$pdata$?dtor$5@?0???0AudioSelect@@QEAA@XZ@4HA DD imagerel ?dtor$5@?0???0AudioSelect@@QEAA@XZ@4HA
	DD	imagerel ?dtor$5@?0???0AudioSelect@@QEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$5@?0???0AudioSelect@@QEAA@XZ@4HA
$pdata$?dtor$6@?0???0AudioSelect@@QEAA@XZ@4HA DD imagerel ?dtor$6@?0???0AudioSelect@@QEAA@XZ@4HA
	DD	imagerel ?dtor$6@?0???0AudioSelect@@QEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$6@?0???0AudioSelect@@QEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$??0SubtitleSelect@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+118
	DD	imagerel $unwind$??0SubtitleSelect@@QEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???0SubtitleSelect@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0SubtitleSelect@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0SubtitleSelect@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0SubtitleSelect@@QEAA@XZ@4HA
$pdata$?dtor$1@?0???0SubtitleSelect@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0SubtitleSelect@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0SubtitleSelect@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???0SubtitleSelect@@QEAA@XZ@4HA
$pdata$?dtor$2@?0???0SubtitleSelect@@QEAA@XZ@4HA DD imagerel ?dtor$2@?0???0SubtitleSelect@@QEAA@XZ@4HA
	DD	imagerel ?dtor$2@?0???0SubtitleSelect@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$2@?0???0SubtitleSelect@@QEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$??0DataSelect@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$??0DataSelect@@QEAA@XZ
$pdata$?rgy_avx_dummy_if_avail@@YAHH@Z DD imagerel $LN4
	DD	imagerel $LN4+210
	DD	imagerel $unwind$?rgy_avx_dummy_if_avail@@YAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@DV?$allocator@D@std@@@std@@QEAA@_KAEBDAEBV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$vector@DV?$allocator@D@std@@@std@@QEAA@_KAEBDAEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?max_size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Ufill@?$vector@DV?$allocator@D@std@@@std@@AEAAPEADPEAD_KAEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Ufill@?$vector@DV?$allocator@D@std@@@std@@AEAAPEADPEAD_KAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@DV?$allocator@D@std@@@std@@AEAAXPEAD0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@DV?$allocator@D@std@@@std@@AEAAXPEAD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@DV?$allocator@D@std@@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+171
	DD	imagerel $unwind$?_Buy_raw@?$vector@DV?$allocator@D@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@DV?$allocator@D@std@@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@DV?$allocator@D@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@DV?$allocator@D@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+233
	DD	imagerel $unwind$?_Tidy@?$vector@DV?$allocator@D@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@DV?$allocator@D@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlength@?$vector@DV?$allocator@D@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@_WV?$allocator@_W@std@@@std@@QEAA@_KAEB_WAEBV?$allocator@_W@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$vector@_WV?$allocator@_W@std@@@std@@QEAA@_KAEB_WAEBV?$allocator@_W@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?data@?$vector@_WV?$allocator@_W@std@@@std@@QEAAPEA_WXZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?data@?$vector@_WV?$allocator@_W@std@@@std@@QEAAPEA_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@_WV?$allocator@_W@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?size@?$vector@_WV?$allocator@_W@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@_WV?$allocator@_W@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?max_size@?$vector@_WV?$allocator@_W@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Ufill@?$vector@_WV?$allocator@_W@std@@@std@@AEAAPEA_WPEA_W_KAEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Ufill@?$vector@_WV?$allocator@_W@std@@@std@@AEAAPEA_WPEA_W_KAEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@_WV?$allocator@_W@std@@@std@@AEAAXPEA_W0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@_WV?$allocator@_W@std@@@std@@AEAAXPEA_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+169
	DD	imagerel $unwind$?_Buy_raw@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@_WV?$allocator@_W@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+236
	DD	imagerel $unwind$?_Tidy@?$vector@_WV?$allocator@_W@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@_WV?$allocator@_W@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlength@?$vector@_WV?$allocator@_W@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@_WV?$allocator@_W@std@@@std@@AEAAAEAV?$allocator@_W@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@_WV?$allocator@_W@std@@@std@@AEAAAEAV?$allocator@_W@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@_WV?$allocator@_W@std@@@std@@AEBAAEBV?$allocator@_W@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@_WV?$allocator@_W@std@@@std@@AEBAAEBV?$allocator@_W@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_Vector_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_Vector_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_Vector_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_Vector_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Move_construct@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?_Move_construct@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+163
	DD	imagerel $unwind$??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PEAV32@00@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Umove@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PEAV32@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept1@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@00U?$integral_constant@_N$00@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Umove_if_noexcept1@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@00U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@00@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?_Umove_if_noexcept@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+166
	DD	imagerel $unwind$?_Calculate_growth@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+281
	DD	imagerel $unwind$?_Change_array@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+247
	DD	imagerel $unwind$?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlength@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z DD imagerel $LN9
	DD	imagerel $LN9+214
	DD	imagerel $unwind$?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Take_contents@?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+149
	DD	imagerel $unwind$?_Take_contents@?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Move_construct@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?_Move_construct@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+163
	DD	imagerel $unwind$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+110
	DD	imagerel $unwind$?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA DD imagerel ?dtor$0@?0??begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA
	DD	imagerel ?dtor$0@?0??begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA+49
	DD	imagerel $unwind$?dtor$0@?0??begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+110
	DD	imagerel $unwind$?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA DD imagerel ?dtor$0@?0??end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA
	DD	imagerel ?dtor$0@?0??end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA+49
	DD	imagerel $unwind$?dtor$0@?0??end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+110
	DD	imagerel $unwind$?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA DD imagerel ?dtor$0@?0??end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA
	DD	imagerel ?dtor$0@?0??end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA+49
	DD	imagerel $unwind$?dtor$0@?0??end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEAV32@00@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Umove@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEAV32@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept1@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@00U?$integral_constant@_N$00@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Umove_if_noexcept1@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@00U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@00@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?_Umove_if_noexcept@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+166
	DD	imagerel $unwind$?_Calculate_growth@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+281
	DD	imagerel $unwind$?_Change_array@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+247
	DD	imagerel $unwind$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z DD imagerel $LN9
	DD	imagerel $LN9+214
	DD	imagerel $unwind$?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Make_iterator_offset@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@_K@Z DD imagerel $LN5
	DD	imagerel $LN5+124
	DD	imagerel $unwind$?_Make_iterator_offset@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Make_iterator_offset@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@_K@Z@4HA DD imagerel ?dtor$0@?0??_Make_iterator_offset@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@_K@Z@4HA
	DD	imagerel ?dtor$0@?0??_Make_iterator_offset@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@_K@Z@4HA+49
	DD	imagerel $unwind$?dtor$0@?0??_Make_iterator_offset@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Take_contents@?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+149
	DD	imagerel $unwind$?_Take_contents@?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z DD imagerel $LN7
	DD	imagerel $LN7+378
	DD	imagerel $unwind$?PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD imagerel ?dtor$0@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
$pdata$?dtor$1@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD imagerel ?dtor$1@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	imagerel ?dtor$1@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
$pdata$?dtor$2@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD imagerel ?dtor$2@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	imagerel ?dtor$2@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA+58
	DD	imagerel $unwind$?dtor$2@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z DD imagerel $LN7
	DD	imagerel $LN7+383
	DD	imagerel $unwind$?PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA DD imagerel ?dtor$0@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA
	DD	imagerel ?dtor$0@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA
$pdata$?dtor$1@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA DD imagerel ?dtor$1@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA
	DD	imagerel ?dtor$1@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA
$pdata$?dtor$2@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA DD imagerel ?dtor$2@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA
	DD	imagerel ?dtor$2@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA+58
	DD	imagerel $unwind$?dtor$2@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?PathRootExists@@YA_NPEBD@Z DD imagerel ?PathRootExists@@YA_NPEBD@Z
	DD	imagerel ?PathRootExists@@YA_NPEBD@Z+186
	DD	imagerel $unwind$?PathRootExists@@YA_NPEBD@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??PathRootExists@@YA_NPEBD@Z@4HA DD imagerel ?dtor$0@?0??PathRootExists@@YA_NPEBD@Z@4HA
	DD	imagerel ?dtor$0@?0??PathRootExists@@YA_NPEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??PathRootExists@@YA_NPEBD@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?PathRootExists@@YA_NPEB_W@Z DD imagerel ?PathRootExists@@YA_NPEB_W@Z
	DD	imagerel ?PathRootExists@@YA_NPEB_W@Z+186
	DD	imagerel $unwind$?PathRootExists@@YA_NPEB_W@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??PathRootExists@@YA_NPEB_W@Z@4HA DD imagerel ?dtor$0@?0??PathRootExists@@YA_NPEB_W@Z@4HA
	DD	imagerel ?dtor$0@?0??PathRootExists@@YA_NPEB_W@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??PathRootExists@@YA_NPEB_W@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+54
	DD	imagerel $unwind$??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_pair@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+118
	DD	imagerel $unwind$??$make_pair@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$make_pair@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA DD imagerel ?dtor$0@?0???$make_pair@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$make_pair@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA+49
	DD	imagerel $unwind$?dtor$0@?0???$make_pair@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_pair@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+118
	DD	imagerel $unwind$??$make_pair@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$make_pair@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA DD imagerel ?dtor$0@?0???$make_pair@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$make_pair@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA+49
	DD	imagerel $unwind$?dtor$0@?0???$make_pair@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+54
	DD	imagerel $unwind$??1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_pair@HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+118
	DD	imagerel $unwind$??$make_pair@HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$make_pair@HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA DD imagerel ?dtor$0@?0???$make_pair@HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$make_pair@HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA+49
	DD	imagerel $unwind$?dtor$0@?0???$make_pair@HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_pair@HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+118
	DD	imagerel $unwind$??$make_pair@HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$make_pair@HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA DD imagerel ?dtor$0@?0???$make_pair@HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$make_pair@HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA+49
	DD	imagerel $unwind$?dtor$0@?0???$make_pair@HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBAPEBQEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBAPEBQEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBAPEBQEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?_Unchecked_end@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBAPEBQEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z DD imagerel $LN9
	DD	imagerel $LN9+356
	DD	imagerel $unwind$??$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA DD imagerel ?dtor$1@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA
	DD	imagerel ?dtor$1@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA DD imagerel ?dtor$2@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA
	DD	imagerel ?dtor$2@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA DD imagerel ?dtor$3@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA
	DD	imagerel ?dtor$3@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$max@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN13
	DD	imagerel $LN13+214
	DD	imagerel $unwind$??$max@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsWindowsVersionOrGreater@@YA_NGGG@Z DD imagerel $LN5
	DD	imagerel $LN5+364
	DD	imagerel $unwind$?IsWindowsVersionOrGreater@@YA_NGGG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsWindows8OrGreater@@YA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$?IsWindows8OrGreater@@YA_NXZ
pdata	ENDS
pdata	SEGMENT
$pdata$?getRealWindowsVersion@@YAHPEAK00@Z DD imagerel ?getRealWindowsVersion@@YAHPEAK00@Z
	DD	imagerel ?getRealWindowsVersion@@YAHPEAK00@Z+340
	DD	imagerel $unwind$?getRealWindowsVersion@@YAHPEAK00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z DD imagerel ??R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z
	DD	imagerel ??R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z+788
	DD	imagerel $unwind$??R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA DD imagerel ?dtor$0@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
	DD	imagerel ?dtor$0@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA DD imagerel ?dtor$1@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
	DD	imagerel ?dtor$1@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA DD imagerel ?dtor$2@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
	DD	imagerel ?dtor$2@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA DD imagerel ?dtor$3@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
	DD	imagerel ?dtor$3@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA DD imagerel ?dtor$4@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
	DD	imagerel ?dtor$4@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$5@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA DD imagerel ?dtor$5@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
	DD	imagerel ?dtor$5@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA+38
	DD	imagerel $unwind$?dtor$5@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$6@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA DD imagerel ?dtor$6@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
	DD	imagerel ?dtor$6@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA+38
	DD	imagerel $unwind$?dtor$6@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$7@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA DD imagerel ?dtor$7@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
	DD	imagerel ?dtor$7@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA+38
	DD	imagerel $unwind$?dtor$7@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$8@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA DD imagerel ?dtor$8@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
	DD	imagerel ?dtor$8@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA+38
	DD	imagerel $unwind$?dtor$8@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel ??0<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel ??0<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z+31
	DD	imagerel $unwind$??0<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@N@std@@QEAAXQEAN_K@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?deallocate@?$allocator@N@std@@QEAAXQEAN_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+110
	DD	imagerel $unwind$?begin@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??begin@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ@4HA DD imagerel ?dtor$0@?0??begin@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ@4HA
	DD	imagerel ?dtor$0@?0??begin@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ@4HA+49
	DD	imagerel $unwind$?dtor$0@?0??begin@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+110
	DD	imagerel $unwind$?end@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??end@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ@4HA DD imagerel ?dtor$0@?0??end@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ@4HA
	DD	imagerel ?dtor$0@?0??end@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ@4HA+49
	DD	imagerel $unwind$?dtor$0@?0??end@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+237
	DD	imagerel $unwind$?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAAAEAV?$allocator@N@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAAAEAV?$allocator@N@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+92
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEBAAEBNXZ DD imagerel $LN21
	DD	imagerel $LN21+346
	DD	imagerel $unwind$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEBAAEBNXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@1@0@Z DD imagerel $LN21
	DD	imagerel $LN21+334
	DD	imagerel $unwind$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAAXPEBN@Z DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAAXPEBN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+80
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+80
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEBAAEANXZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEBAAEANXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEBAPEANXZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEBAPEANXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z DD imagerel $LN9
	DD	imagerel $LN9+237
	DD	imagerel $unwind$??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA DD imagerel ?dtor$0@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA
	DD	imagerel ?dtor$0@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA DD imagerel ?dtor$1@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA
	DD	imagerel ?dtor$1@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA DD imagerel ?dtor$2@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA
	DD	imagerel ?dtor$2@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA+35
	DD	imagerel $unwind$?dtor$2@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA DD imagerel ?dtor$3@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA
	DD	imagerel ?dtor$3@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA+35
	DD	imagerel $unwind$?dtor$3@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA DD imagerel ?dtor$4@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA
	DD	imagerel ?dtor$4@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA+52
	DD	imagerel $unwind$?dtor$4@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_pair@AEBHAEBH@std@@YA?AU?$pair@HH@0@AEBH0@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$make_pair@AEBHAEBH@std@@YA?AU?$pair@HH@0@AEBH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_pair@HH@std@@YA?AU?$pair@HH@0@$$QEAH0@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$make_pair@HH@std@@YA?AU?$pair@HH@0@$$QEAH0@Z
pdata	ENDS
pdata	SEGMENT
$pdata$??$rgy_reduce@H@@YAXAEAU?$pair@HH@std@@@Z DD imagerel ??$rgy_reduce@H@@YAXAEAU?$pair@HH@std@@@Z
	DD	imagerel ??$rgy_reduce@H@@YAXAEAU?$pair@HH@std@@@Z+58
	DD	imagerel $unwind$??$rgy_reduce@H@@YAXAEAU?$pair@HH@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@N@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@N@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0N@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@N@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0N@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@N@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+145
	DD	imagerel $unwind$??$emplace_back@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+191
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV31@@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV31@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z DD imagerel $LN13
	DD	imagerel $LN13+574
	DD	imagerel $unwind$??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z@4HA+81
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+145
	DD	imagerel $unwind$??$emplace_back@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+191
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBV31@@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBV31@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z DD imagerel $LN13
	DD	imagerel $LN13+574
	DD	imagerel $unwind$??$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z@4HA+81
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$?0V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+145
	DD	imagerel $unwind$??$emplace_back@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+191
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV31@@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV31@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z DD imagerel $LN13
	DD	imagerel $LN13+574
	DD	imagerel $unwind$??$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z@4HA+81
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+145
	DD	imagerel $unwind$??$emplace_back@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+191
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z DD imagerel $LN13
	DD	imagerel $LN13+574
	DD	imagerel $unwind$??$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z@4HA+81
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$?0V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy_maybe_null@_W@std@@YAPEA_WPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy_maybe_null@_W@std@@YAPEA_WPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_Vector_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_Vector_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z DD imagerel $LN6
	DD	imagerel $LN6+281
	DD	imagerel $unwind$??$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z@4HA DD imagerel ?dtor$0@?0???$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z@4HA DD imagerel ?dtor$1@?0???$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z@4HA
	DD	imagerel ?dtor$1@?0???$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy_maybe_null@D@std@@YAPEADPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy_maybe_null@D@std@@YAPEADPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+281
	DD	imagerel $unwind$??$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z@4HA DD imagerel ?dtor$0@?0???$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z@4HA DD imagerel ?dtor$1@?0???$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z@4HA
	DD	imagerel ?dtor$1@?0???$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+145
	DD	imagerel $unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Traits_find_last_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z DD imagerel $LN10
	DD	imagerel $LN10+451
	DD	imagerel $unwind$??$_Traits_find_last_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Traits_find_last_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$0A@@0@@Z DD imagerel $LN9
	DD	imagerel $LN9+189
	DD	imagerel $unwind$??$_Traits_find_last_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Traits_find_first_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z DD imagerel $LN9
	DD	imagerel $LN9+448
	DD	imagerel $unwind$??$_Traits_find_first_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Traits_find_first_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$0A@@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+184
	DD	imagerel $unwind$??$_Traits_find_first_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Traits_find@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101@Z DD imagerel $LN11
	DD	imagerel $LN11+288
	DD	imagerel $unwind$??$_Traits_find@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Traits_find_last_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z DD imagerel $LN10
	DD	imagerel $LN10+451
	DD	imagerel $unwind$??$_Traits_find_last_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Traits_find_last_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$0A@@0@@Z DD imagerel $LN9
	DD	imagerel $LN9+187
	DD	imagerel $unwind$??$_Traits_find_last_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Traits_find_first_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z DD imagerel $LN9
	DD	imagerel $LN9+450
	DD	imagerel $unwind$??$_Traits_find_first_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Traits_find_first_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$0A@@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+184
	DD	imagerel $unwind$??$_Traits_find_first_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Traits_find_first_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z DD imagerel $LN9
	DD	imagerel $LN9+465
	DD	imagerel $unwind$??$_Traits_find_first_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Traits_find_first_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$0A@@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+192
	DD	imagerel $unwind$??$_Traits_find_first_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Traits_find@U?$char_traits@D@std@@@std@@YA_KQEBD_K101@Z DD imagerel $LN11
	DD	imagerel $LN11+283
	DD	imagerel $unwind$??$_Traits_find@U?$char_traits@D@std@@@std@@YA_KQEBD_K101@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@D@std@@YAPEADPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+92
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@0@Z DD imagerel $LN21
	DD	imagerel $LN21+334
	DD	imagerel $unwind$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unwrapped@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?_Unwrapped@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+80
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+80
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_07b002202a580d07f308bf60d51244b2>@@QEBAXQEA_WQEB_W_K2212@Z DD imagerel $LN3
	DD	imagerel $LN3+197
	DD	imagerel $unwind$??R<lambda_07b002202a580d07f308bf60d51244b2>@@QEBAXQEA_WQEB_W_K2212@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_07b002202a580d07f308bf60d51244b2>@@_K_KPEB_W_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_07b002202a580d07f308bf60d51244b2>@@_K2PEB_W2@Z DD imagerel $LN6
	DD	imagerel $LN6+590
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_07b002202a580d07f308bf60d51244b2>@@_K_KPEB_W_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_07b002202a580d07f308bf60d51244b2>@@_K2PEB_W2@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@QEBAXQEA_W_KQEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??R<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@QEBAXQEA_W_KQEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z DD imagerel $LN6
	DD	imagerel $LN6+330
	DD	imagerel $unwind$??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Pocma@V?$allocator@_W@std@@@std@@YAXAEAV?$allocator@_W@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$_Pocma@V?$allocator@_W@std@@@std@@YAXAEAV?$allocator@_W@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_16d2cb92461ac9818af78a76c749bd7f>@@QEBAXQEADQEBD_K2212@Z DD imagerel $LN3
	DD	imagerel $LN3+195
	DD	imagerel $unwind$??R<lambda_16d2cb92461ac9818af78a76c749bd7f>@@QEBAXQEADQEBD_K2212@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K2PEBD2@Z DD imagerel $LN6
	DD	imagerel $LN6+590
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K2PEBD2@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+330
	DD	imagerel $unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z DD imagerel $LN3
	DD	imagerel $LN3+150
	DD	imagerel $unwind$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z DD imagerel $LN6
	DD	imagerel $LN6+525
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+81
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@N@std@@@std@@YAXPEANQEANAEAV?$allocator@N@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@N@std@@@std@@YAXPEANQEANAEAV?$allocator@N@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+101
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+101
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@_W@std@@@std@@YAXPEA_WQEA_WAEAV?$allocator@_W@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@_W@std@@@std@@YAXPEA_WQEA_WAEAV?$allocator@_W@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@D@std@@@std@@YAXPEADQEADAEAV?$allocator@D@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@D@std@@@std@@YAXPEADQEADAEAV?$allocator@D@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@_W@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@_W@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBV?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@_W@std@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@$$CBV?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@_W@std@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$01@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+86
	DD	imagerel $unwind$??$_Get_size_of_n@$01@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@H@std@@YA$$QEAHAEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@H@std@@YA$$QEAHAEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+98
	DD	imagerel $unwind$??$?0HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???$?0HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+98
	DD	imagerel $unwind$??$?0HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???$?0HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+98
	DD	imagerel $unwind$??$?0HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???$?0HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+98
	DD	imagerel $unwind$??$?0HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???$?0HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z DD imagerel $LN18
	DD	imagerel $LN18+588
	DD	imagerel $unwind$??$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA DD imagerel ?dtor$0@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA
	DD	imagerel ?dtor$0@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA DD imagerel ?dtor$1@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA
	DD	imagerel ?dtor$1@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA DD imagerel ?dtor$2@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA
	DD	imagerel ?dtor$2@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA DD imagerel ?dtor$3@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA
	DD	imagerel ?dtor$3@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA+35
	DD	imagerel $unwind$?dtor$3@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA DD imagerel ?dtor$4@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA
	DD	imagerel ?dtor$4@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA+52
	DD	imagerel $unwind$?dtor$4@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+208
	DD	imagerel $unwind$??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA DD imagerel ?dtor$0@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA DD imagerel ?dtor$1@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA
	DD	imagerel ?dtor$1@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA DD imagerel ?dtor$2@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA
	DD	imagerel ?dtor$2@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA+49
	DD	imagerel $unwind$?dtor$2@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBH@std@@YAAEBHAEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBH@std@@YAAEBHAEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HH$0A@@?$pair@HH@std@@QEAA@AEBH0@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$?0HH$0A@@?$pair@HH@std@@QEAA@AEBH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HH$0A@@?$pair@HH@std@@QEAA@$$QEAH0@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$?0HH$0A@@?$pair@HH@std@@QEAA@$$QEAH0@Z
pdata	ENDS
pdata	SEGMENT
$pdata$??$rgy_reduce@H@@YAXAEAH0@Z DD imagerel ??$rgy_reduce@H@@YAXAEAH0@Z
	DD	imagerel ??$rgy_reduce@H@@YAXAEAH0@Z+124
	DD	imagerel $unwind$??$rgy_reduce@H@@YAXAEAH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@_W@std@@@std@@YAAEBV?$allocator@_W@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBV?$allocator@_W@std@@@std@@YAAEBV?$allocator@_W@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+60
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+60
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mark@?$_String_bitmap@_W$0A@@std@@QEAA_NPEB_WQEB_W@Z DD imagerel $LN7
	DD	imagerel $LN7+118
	DD	imagerel $unwind$?_Mark@?$_String_bitmap@_W$0A@@std@@QEAA_NPEB_WQEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Match@?$_String_bitmap@_W$0A@@std@@QEBA_N_W@Z DD imagerel $LN5
	DD	imagerel $LN5+91
	DD	imagerel $unwind$?_Match@?$_String_bitmap@_W$0A@@std@@QEBA_N_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_bitmap@_W$0A@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+32
	DD	imagerel $unwind$??0?$_String_bitmap@_W$0A@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@V?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mark@?$_String_bitmap@D$00@std@@QEAA_NPEBDQEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+66
	DD	imagerel $unwind$?_Mark@?$_String_bitmap@D$00@std@@QEAA_NPEBDQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Match@?$_String_bitmap@D$00@std@@QEBA_ND@Z DD imagerel $LN3
	DD	imagerel $LN3+26
	DD	imagerel $unwind$?_Match@?$_String_bitmap@D$00@std@@QEBA_ND@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_bitmap@D$00@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+32
	DD	imagerel $unwind$??0?$_String_bitmap@D$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBQEA_W@std@@YAAEBQEA_WAEBQEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBQEA_W@std@@YAAEBQEA_WAEBQEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+279
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+212
	DD	imagerel $unwind$??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0CI@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Get_size_of_n@$0CI@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+212
	DD	imagerel $unwind$??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+163
	DD	imagerel $unwind$??$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_fill_n@V?$allocator@D@std@@@std@@YAPEADPEAD_KAEBDAEAV?$allocator@D@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+108
	DD	imagerel $unwind$??$_Uninitialized_fill_n@V?$allocator@D@std@@@std@@YAPEADPEAD_KAEBDAEAV?$allocator@D@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Adl_verify_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Adl_verify_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@$0A@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@$0A@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z DD imagerel $LN44
	DD	imagerel $LN44+1075
	DD	imagerel $unwind$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA DD imagerel ?dtor$0@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA DD imagerel ?catch$1@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
	DD	imagerel ?catch$1@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA+98
	DD	imagerel $unwind$?catch$1@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$3@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA DD imagerel ?catch$3@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
	DD	imagerel ?catch$3@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA+190
	DD	imagerel $unwind$?catch$3@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$2@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA DD imagerel ?catch$2@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
	DD	imagerel ?catch$2@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA+112
	DD	imagerel $unwind$?catch$2@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$5@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA DD imagerel ?catch$5@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
	DD	imagerel ?catch$5@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA+114
	DD	imagerel $unwind$?catch$5@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$4@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA DD imagerel ?catch$4@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
	DD	imagerel ?catch$4@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA+101
	DD	imagerel $unwind$?catch$4@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@$0A@@std@@YAPEANAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@$0A@@std@@YAPEANAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Pass_fn@U?$less@X@std@@$0A@@std@@YA?AU?$less@X@0@U10@@Z DD imagerel $LN3
	DD	imagerel $LN3+12
	DD	imagerel $unwind$??$_Pass_fn@U?$less@X@std@@$0A@@std@@YA?AU?$less@X@0@U10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Max_element_unchecked@PEANU?$less@X@std@@@std@@YAPEANPEAN0U?$less@X@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+138
	DD	imagerel $unwind$??$_Max_element_unchecked@PEANU?$less@X@std@@@std@@YAPEANPEAN0U?$less@X@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@PEAN@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@AEBQEAN@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@PEAN@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@AEBQEAN@Z
pdata	ENDS
pdata	SEGMENT
$pdata$??$rgy_gcd@H@@YAHHH@Z DD imagerel ??$rgy_gcd@H@@YAHHH@Z
	DD	imagerel ??$rgy_gcd@H@@YAHHH@Z+105
	DD	imagerel $unwind$??$rgy_gcd@H@@YAHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Get_unwrapped@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+117
	DD	imagerel $unwind$??$_Emplace_back@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Get_unwrapped@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+117
	DD	imagerel $unwind$??$_Emplace_back@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAA@PEA_WAEAV?$allocator@_W@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAA@PEA_WAEAV?$allocator@_W@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAAPEA_WXZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAAPEA_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@AEB_W@?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAAXAEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+117
	DD	imagerel $unwind$??$_Emplace_back@AEB_W@?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAAXAEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@N@std@@YAPEANPEAN@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@N@std@@YAPEANPEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$distance@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA_JPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$??$distance@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA_JPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ucopy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBV21@0PEAV21@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$??$_Ucopy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBV21@0PEAV21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Move_backward_unchecked@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00@Z DD imagerel $LN5
	DD	imagerel $LN5+116
	DD	imagerel $unwind$??$_Move_backward_unchecked@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Move_unchecked@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00@Z DD imagerel $LN6
	DD	imagerel $LN6+118
	DD	imagerel $unwind$??$_Move_unchecked@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Debug_lt_pred@AEAU?$less@X@std@@AEANAEAN$0A@@std@@YA_NAEAU?$less@X@0@AEAN1@Z DD imagerel $LN13
	DD	imagerel $LN13+238
	DD	imagerel $unwind$??$_Debug_lt_pred@AEAU?$less@X@std@@AEANAEAN$0A@@std@@YA_NAEAU?$less@X@0@AEAN1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?RAEANAEAN@?$less@X@std@@QEBA_NAEAN0@Z DD imagerel $LN5
	DD	imagerel $LN5+86
	DD	imagerel $unwind$??$?RAEANAEAN@?$less@X@std@@QEBA_NAEAN0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEB_W@std@@YAAEB_WAEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEB_W@std@@YAAEB_WAEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@_WAEB_W@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@QEA_WAEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$??$construct@_WAEB_W@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@QEA_WAEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Refancy@PEAN$0A@@std@@YAPEANPEAN@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Refancy@PEAN$0A@@std@@YAPEANPEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+210
	DD	imagerel $unwind$??$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Get_unwrapped@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+117
	DD	imagerel $unwind$??$_Emplace_back@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
CRT$XCU	SEGMENT
?CspMatrixList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspMatrixList@@YAXXZ ; CspMatrixList$initializer$
CRT$XCU	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3f50000000000000
CONST	SEGMENT
__real@3f50000000000000 DQ 03f50000000000000r	; 0.000976563
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1CI@JONCLBEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAb?$AAu?$AAg?$AA_?$AAl?$AAt?$AA_@
CONST	SEGMENT
??_C@_1CI@JONCLBEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAb?$AAu?$AAg?$AA_?$AAl?$AAt?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'D', 00H
	DB	'e', 00H, 'b', 00H, 'u', 00H, 'g', 00H, '_', 00H, 'l', 00H, 't'
	DB	00H, '_', 00H, 'p', 00H, 'r', 00H, 'e', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
CONST	SEGMENT
??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, ' ', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 's', 00H, 'p', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'd', 00H
	DB	'"', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@
CONST	SEGMENT
??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@ DB 'vector iterato'
	DB	'r range transposed', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
CONST	SEGMENT
??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, ' '
	DB	00H, 'a', 00H, 'r', 00H, 'e', 00H, ' ', 00H, 'f', 00H, 'r', 00H
	DB	'o', 00H, 'm', 00H, ' ', 00H, 'd', 00H, 'i', 00H, 'f', 00H, 'f'
	DB	00H, 'e', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n'
	DB	00H, 'e', 00H, 'r', 00H, 's', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@
CONST	SEGMENT
??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@ DB 'vector itera'
	DB	'tors in range are from different containers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@HCJPCNBE@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5@
CONST	SEGMENT
??_C@_1EO@HCJPCNBE@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'i', 00H, 'n', 00H, 's', 00H, 'e', 00H, 'r', 00H, 't'
	DB	00H, ' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't'
	DB	00H, 's', 00H, 'i', 00H, 'd', 00H, 'e', 00H, ' ', 00H, 'r', 00H
	DB	'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BLK@GBKABDEF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa@
CONST	SEGMENT
??_C@_1BLK@GBKABDEF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'i'
	DB	00H, 'c', 00H, '_', 00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H
	DB	't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':'
	DB	00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't', 00H
	DB	'r', 00H, 'a', 00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H, 'c'
	DB	00H, 'h', 00H, 'a', 00H, 'r', 00H, '>', 00H, ',', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':'
	DB	00H, ':', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'i', 00H, 'c', 00H
	DB	'_', 00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, ',', 00H
	DB	's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't', 00H, 'r', 00H, 'a'
	DB	00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H, 'c', 00H, 'h', 00H
	DB	'a', 00H, 'r', 00H, '>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, '>', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'i', 00H
	DB	'n', 00H, 's', 00H, 'e', 00H, 'r', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@NNBLLPGF@vector?5insert?5iterator?5outside?5@
CONST	SEGMENT
??_C@_0CF@NNBLLPGF@vector?5insert?5iterator?5outside?5@ DB 'vector insert'
	DB	' iterator outside range', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
CONST	SEGMENT
??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'r', 00H, 'i', 00H, 'f', 00H, 'y', 00H, '_', 00H, 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@ DB 'vector<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H
	DB	't', 00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position@ DB 'invalid string position'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
CONST	SEGMENT
??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'o', 00H
	DB	'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, ' ', 00H, 'v', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'i'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '"', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@
CONST	SEGMENT
??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@ DB 'can''t dere'
	DB	'ference out of range vector iterator', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
CONST	SEGMENT
??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'v', 00H
	DB	'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, '-', 00H, 'i', 00H, 'n'
	DB	00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1MK@MNACACDL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
CONST	SEGMENT
??_C@_1MK@MNACACDL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'd', 00H, 'o'
	DB	00H, 'u', 00H, 'b', 00H, 'l', 00H, 'e', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p'
	DB	00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, '*', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@
CONST	SEGMENT
??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@ DB 'can''t derefe'
	DB	'rence value-initialized vector iterator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xutility', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Prog'
	DB	'ram Files (x86)\Microsoft Visual Studio\2019\Community\VC\Too'
	DB	'ls\MSVC\14.23.28105\include\vector', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@PAGANAHI@?$CFs?3?5Read?3?$CF7?42fGB?1s?0?5Write?3?$CF7?42f@
CONST	SEGMENT
??_C@_0CF@PAGANAHI@?$CFs?3?5Read?3?$CF7?42fGB?1s?0?5Write?3?$CF7?42f@ DB '%'
	DB	's: Read:%7.2fGB/s, Write:%7.2fGB/s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ?LOG_COLOR@?1??rgy_print_stderr@@YAHHPEBDPEAX@Z@4QBGB
CONST	SEGMENT
?LOG_COLOR@?1??rgy_print_stderr@@YAHHPEBDPEAX@Z@4QBGB DW 0bH ; `rgy_print_stderr'::`2'::LOG_COLOR
	DW	0aH
	DW	0fH
	DW	0fH
	DW	0eH
	DW	0cH
CONST	ENDS
;	COMDAT ??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
CONST	SEGMENT
??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ DB '"'
	DB	00H, 'I', 00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H
	DB	'O', 00H, 'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T'
	DB	00H, ' ', 00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H
	DB	'P', 00H, 'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@
CONST	SEGMENT
??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'I', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '_', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '1', 00H
	DB	'2', 00H, ':', 00H, ':', 00H, '_', 00H, 'O', 00H, 'r', 00H, 'p'
	DB	00H, 'h', 00H, 'a', 00H, 'n', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
CONST	SEGMENT
??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ DB 'ITERATOR LIST CORRU'
	DB	'PTED!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xmemory', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	0ccH
	DB	02H
	DB	'~'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DD 022d11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Refancy@PEAN$0A@@std@@YAPEANPEAN@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@_WAEB_W@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@QEA_WAEB_W@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEB_W@std@@YAAEB_WAEB_W@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?RAEANAEAN@?$less@X@std@@QEBA_NAEAN0@Z DD 022801H
	DD	070101214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Debug_lt_pred@AEAU?$less@X@std@@AEANAEAN$0A@@std@@YA_NAEAU?$less@X@0@AEAN1@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Debug_lt_pred@AEAU?$less@X@std@@AEANAEAN$0A@@std@@YA_NAEAU?$less@X@0@AEAN1@Z DB 040H
	DD	imagerel $ip2state$??$_Debug_lt_pred@AEAU?$less@X@std@@AEANAEAN$0A@@std@@YA_NAEAU?$less@X@0@AEAN1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Debug_lt_pred@AEAU?$less@X@std@@AEANAEAN$0A@@std@@YA_NAEAU?$less@X@0@AEAN1@Z DD 022819H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Debug_lt_pred@AEAU?$less@X@std@@AEANAEAN$0A@@std@@YA_NAEAU?$less@X@0@AEAN1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Move_unchecked@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Move_backward_unchecked@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ucopy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBV21@0PEAV21@@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$distance@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA_JPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@N@std@@YAPEANPEAN@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@AEB_W@?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAAXAEB_W@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAAPEA_WXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAA@PEA_WAEAV?$allocator@_W@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@PEAN@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@AEBQEAN@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Max_element_unchecked@PEANU?$less@X@std@@@std@@YAPEANPEAN0U?$less@X@0@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Pass_fn@U?$less@X@std@@$0A@@std@@YA?AU?$less@X@0@U10@@Z DD 010501H
	DD	07005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@$0A@@std@@YAPEANAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@0@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$4@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?catch$5@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA DB 08H
	DB	00H
	DB	02H
	DB	'&'
	DB	04H
	DB	'>'
	DB	02H
	DB	'b'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$?catch$5@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA DB 02H
	DB	00H
	DD	imagerel ?catch$4@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?catch$5@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA DB 02H
	DB	02H
	DB	02H
	DB	04H
	DD	imagerel $handlerMap$?catch$5@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?catch$5@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA DB 06H
	DB	08H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?catch$5@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA DB 019H
	DD	imagerel $stateUnwindMap$?catch$5@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
	DD	imagerel $tryMap$?catch$5@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
	DD	imagerel $ip2state$?catch$5@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
	DB	090H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$5@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA DD 031019H
	DD	0700c4210H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?catch$5@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$2@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?catch$3@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA DB 08H
	DB	00H
	DB	02H
	DB	'&'
	DB	04H
	DB	'v'
	DB	02H
	DB	0c2H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$?catch$3@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA DB 02H
	DB	00H
	DD	imagerel ?catch$2@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?catch$3@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA DB 02H
	DB	02H
	DB	02H
	DB	04H
	DD	imagerel $handlerMap$?catch$3@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?catch$3@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA DB 06H
	DB	08H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?catch$3@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA DB 019H
	DD	imagerel $stateUnwindMap$?catch$3@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
	DD	imagerel $tryMap$?catch$3@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
	DD	imagerel $ip2state$?catch$3@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
	DB	090H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$3@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA DD 031019H
	DD	0700c4210H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?catch$3@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z DB 012H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	0fdH, 05H
	DB	04H
	DB	'i', 03H
	DB	02H
	DB	'U', 03H
	DB	08H
	DB	'F'
	DB	02H
	DB	0b8H
	DB	0cH
	DB	'F'
	DB	02H
	DB	'4'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$1$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z DB 02H
	DB	00H
	DD	imagerel ?catch$5@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z DB 02H
	DB	00H
	DD	imagerel ?catch$3@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z DB 02H
	DB	00H
	DD	imagerel ?catch$1@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z DB 06H
	DB	02H
	DB	02H
	DB	04H
	DD	imagerel $handlerMap$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z
	DB	06H
	DB	06H
	DB	08H
	DD	imagerel $handlerMap$0$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z
	DB	0aH
	DB	0aH
	DB	0cH
	DD	imagerel $handlerMap$1$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z DB 0eH
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA
	DB	028H
	DB	030H
	DB	038H
	DB	048H
	DB	048H
	DB	058H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z DB 018H
	DD	imagerel $stateUnwindMap$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z
	DD	imagerel $tryMap$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z
	DD	imagerel $ip2state$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z DD 033319H
	DD	014011cH
	DD	07015H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@$0A@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Adl_verify_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@0@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_fill_n@V?$allocator@D@std@@@std@@YAPEADPEAD_KAEBDAEAV?$allocator@D@0@@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	084H
	DB	02H
	DB	'n'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z DD 022d11H
	DD	070159219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_fill_n<std::allocator<wchar_t> >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z$rtcVarDesc DD 028H ; std::_Uninitialized_fill_n<std::allocator<wchar_t> >
	DD	018H
	DQ	FLAT:??$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_fill_n<std::allocator<wchar_t> >
	DD	00H
	DQ	FLAT:??$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	0ccH
	DB	02H
	DB	088H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z DD 022d11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0CI@@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	0ccH
	DB	02H
	DB	088H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DD 022d11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 021e01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBQEA_W@std@@YAAEBQEA_WAEBQEA_W@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_bitmap@D$00@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Match@?$_String_bitmap@D$00@std@@QEBA_ND@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mark@?$_String_bitmap@D$00@std@@QEAA_NPEBDQEBD@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_bitmap@_W$0A@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Match@?$_String_bitmap@_W$0A@@std@@QEBA_N_W@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mark@?$_String_bitmap@_W$0A@@std@@QEAA_NPEB_WQEB_W@Z DD 022801H
	DD	070101214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@_W@std@@@std@@YAAEBV?$allocator@_W@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HH$0A@@?$pair@HH@std@@QEAA@$$QEAH0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HH$0A@@?$pair@HH@std@@QEAA@AEBH0@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBH@std@@YAAEBHAEBH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z DB 08H
	DB	00H
	DB	00H
	DB	'j'
	DB	06H
	DB	0f4H
	DB	04H
	DB	016H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$2@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z
	DD	imagerel $ip2state$??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z DD 022d11H
	DD	070157219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z DB 0aH
	DB	00H
	DB	00H
	DB	'v'
	DB	08H
	DB	'Y', 07H
	DB	06H
	DB	01cH
	DB	04H
	DB	01cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z DB 0aH
	DB	0eH
	DD	imagerel ?dtor$4@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z DB 08H
	DD	imagerel $stateUnwindMap$??$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z
	DD	imagerel $ip2state$??$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z DD 033311H
	DD	016011cH
	DD	07015H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z
	DD	imagerel $ip2state$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z DD 022811H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
	DD	imagerel $ip2state$??$?0HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD 022811H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
	DD	imagerel $ip2state$??$?0HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD 022811H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	imagerel $ip2state$??$?0HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 022811H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	imagerel $ip2state$??$?0HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 022811H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@H@std@@YA$$QEAHAEAH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$01@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBV?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@_W@std@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@_W@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@D@std@@@std@@YAXPEADQEADAEAV?$allocator@D@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@_W@std@@@std@@YAXPEA_WQEA_WAEAV?$allocator@_W@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@N@std@@@std@@YAXPEANQEANAEAV?$allocator@N@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z DD 033301H
	DD	012011cH
	DD	07015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcVarDesc DD 068H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
	DD	08H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcName$0
	ORG $+48
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
	DD	00H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD 022d01H
	DD	07015b219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcVarDesc DD 048H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DD	08H
	DQ	FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcName$0
	ORG $+48
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DD	00H
	DQ	FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K2PEBD2@Z DD 033301H
	DD	014011cH
	DD	07015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_grow_by@V<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K2PEBD2@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_16d2cb92461ac9818af78a76c749bd7f>,unsigned __int64,unsigned __int64,char const *,unsigned __int64>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_grow_by@V<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K2PEBD2@Z$rtcVarDesc DD 078H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_16d2cb92461ac9818af78a76c749bd7f>,unsigned __int64,unsigned __int64,char const *,unsigned __int64>
	DD	08H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K2PEBD2@Z$rtcName$0
	ORG $+48
??$_Reallocate_grow_by@V<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K2PEBD2@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_16d2cb92461ac9818af78a76c749bd7f>,unsigned __int64,unsigned __int64,char const *,unsigned __int64>
	DD	00H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K2PEBD2@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_16d2cb92461ac9818af78a76c749bd7f>@@QEBAXQEADQEBD_K2212@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Pocma@V?$allocator@_W@std@@@std@@YAXAEAV?$allocator@_W@0@0@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z DD 022d01H
	DD	07015b219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z$rtcName$0 DB 05fH ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_for<<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>,wchar_t const *>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z$rtcVarDesc DD 048H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_for<<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>,wchar_t const *>
	DD	08H
	DQ	FLAT:??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z$rtcName$0
	ORG $+48
??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z$rtcFrameData DD 01H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_for<<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>,wchar_t const *>
	DD	00H
	DQ	FLAT:??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@QEBAXQEA_W_KQEB_W@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_07b002202a580d07f308bf60d51244b2>@@_K_KPEB_W_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_07b002202a580d07f308bf60d51244b2>@@_K2PEB_W2@Z DD 033301H
	DD	014011cH
	DD	07015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_grow_by@V<lambda_07b002202a580d07f308bf60d51244b2>@@_K_KPEB_W_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_07b002202a580d07f308bf60d51244b2>@@_K2PEB_W2@Z$rtcName$0 DB 05fH ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<<lambda_07b002202a580d07f308bf60d51244b2>,unsigned __int64,unsigned __int64,wchar_t const *,unsigned __int64>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_grow_by@V<lambda_07b002202a580d07f308bf60d51244b2>@@_K_KPEB_W_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_07b002202a580d07f308bf60d51244b2>@@_K2PEB_W2@Z$rtcVarDesc DD 078H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<<lambda_07b002202a580d07f308bf60d51244b2>,unsigned __int64,unsigned __int64,wchar_t const *,unsigned __int64>
	DD	08H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_07b002202a580d07f308bf60d51244b2>@@_K_KPEB_W_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_07b002202a580d07f308bf60d51244b2>@@_K2PEB_W2@Z$rtcName$0
	ORG $+48
??$_Reallocate_grow_by@V<lambda_07b002202a580d07f308bf60d51244b2>@@_K_KPEB_W_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_07b002202a580d07f308bf60d51244b2>@@_K2PEB_W2@Z$rtcFrameData DD 01H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<<lambda_07b002202a580d07f308bf60d51244b2>,unsigned __int64,unsigned __int64,wchar_t const *,unsigned __int64>
	DD	00H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_07b002202a580d07f308bf60d51244b2>@@_K_KPEB_W_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_07b002202a580d07f308bf60d51244b2>@@_K2PEB_W2@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_07b002202a580d07f308bf60d51244b2>@@QEBAXQEA_WQEB_W_K2212@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
	DD	imagerel $ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unwrapped@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@0@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	'<'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z
	DD	imagerel $ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z DD 022811H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
	DD	imagerel $ip2state$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DD 022711H
	DD	0700f3213H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	imagerel $ip2state$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022211H
	DD	0700a320eH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
	DD	imagerel $ip2state$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DD 022711H
	DD	0700f3213H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Traits_find@U?$char_traits@D@std@@@std@@YA_KQEBD_K101@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Traits_find_first_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$0A@@0@@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Traits_find_first_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Traits_find_first_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Traits_find_first_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Traits_find_first_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z DD 034519H
	DD	02e011cH
	DD	07015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Traits_find_first_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z
	DD	016bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Traits_find_first_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z$rtcName$0 DB 05fH ; std::_Traits_find_first_of<std::char_traits<char> >
	DB	04dH
	DB	061H
	DB	074H
	DB	063H
	DB	068H
	DB	065H
	DB	073H
	DB	00H
	ORG $+7
??$_Traits_find_first_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z$rtcVarDesc DD 040H ; std::_Traits_find_first_of<std::char_traits<char> >
	DD	0100H
	DQ	FLAT:??$_Traits_find_first_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z$rtcName$0
	ORG $+48
??$_Traits_find_first_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z$rtcFrameData DD 01H ; std::_Traits_find_first_of<std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$_Traits_find_first_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Traits_find_first_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$0A@@0@@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Traits_find_first_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Traits_find_first_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Traits_find_first_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Traits_find_first_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z DD 034519H
	DD	02e011cH
	DD	07015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Traits_find_first_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z
	DD	016bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Traits_find_first_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z$rtcName$0 DB 05fH ; std::_Traits_find_first_not_of<std::char_traits<char> >
	DB	04dH
	DB	061H
	DB	074H
	DB	063H
	DB	068H
	DB	065H
	DB	073H
	DB	00H
	ORG $+7
??$_Traits_find_first_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z$rtcVarDesc DD 040H ; std::_Traits_find_first_not_of<std::char_traits<char> >
	DD	0100H
	DQ	FLAT:??$_Traits_find_first_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z$rtcName$0
	ORG $+48
??$_Traits_find_first_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z$rtcFrameData DD 01H ; std::_Traits_find_first_not_of<std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$_Traits_find_first_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Traits_find_last_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$0A@@0@@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Traits_find_last_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Traits_find_last_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Traits_find_last_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Traits_find_last_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z DD 034519H
	DD	02e011cH
	DD	07015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Traits_find_last_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z
	DD	016bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Traits_find_last_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z$rtcName$0 DB 05fH ; std::_Traits_find_last_not_of<std::char_traits<char> >
	DB	04dH
	DB	061H
	DB	074H
	DB	063H
	DB	068H
	DB	065H
	DB	073H
	DB	00H
	ORG $+7
??$_Traits_find_last_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z$rtcVarDesc DD 040H ; std::_Traits_find_last_not_of<std::char_traits<char> >
	DD	0100H
	DQ	FLAT:??$_Traits_find_last_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z$rtcName$0
	ORG $+48
??$_Traits_find_last_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z$rtcFrameData DD 01H ; std::_Traits_find_last_not_of<std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$_Traits_find_last_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z
	DD	imagerel $ip2state$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z DD 022711H
	DD	0700f3213H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	imagerel $ip2state$??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022211H
	DD	0700a320eH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z
	DD	imagerel $ip2state$??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z DD 022711H
	DD	0700f3213H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Traits_find@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Traits_find_first_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$0A@@0@@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Traits_find_first_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Traits_find_first_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Traits_find_first_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Traits_find_first_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z DD 034519H
	DD	02e011cH
	DD	07015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Traits_find_first_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z
	DD	016bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Traits_find_first_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z$rtcName$0 DB 05fH ; std::_Traits_find_first_not_of<std::char_traits<wchar_t> >
	DB	04dH
	DB	061H
	DB	074H
	DB	063H
	DB	068H
	DB	065H
	DB	073H
	DB	00H
	ORG $+7
??$_Traits_find_first_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z$rtcVarDesc DD 040H ; std::_Traits_find_first_not_of<std::char_traits<wchar_t> >
	DD	0100H
	DQ	FLAT:??$_Traits_find_first_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z$rtcName$0
	ORG $+48
??$_Traits_find_first_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z$rtcFrameData DD 01H ; std::_Traits_find_first_not_of<std::char_traits<wchar_t> >
	DD	00H
	DQ	FLAT:??$_Traits_find_first_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Traits_find_last_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$0A@@0@@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Traits_find_last_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Traits_find_last_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Traits_find_last_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Traits_find_last_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z DD 034519H
	DD	02e011cH
	DD	07015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Traits_find_last_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z
	DD	016bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Traits_find_last_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z$rtcName$0 DB 05fH ; std::_Traits_find_last_not_of<std::char_traits<wchar_t> >
	DB	04dH
	DB	061H
	DB	074H
	DB	063H
	DB	068H
	DB	065H
	DB	073H
	DB	00H
	ORG $+7
??$_Traits_find_last_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z$rtcVarDesc DD 040H ; std::_Traits_find_last_not_of<std::char_traits<wchar_t> >
	DD	0100H
	DQ	FLAT:??$_Traits_find_last_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z$rtcName$0
	ORG $+48
??$_Traits_find_last_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z$rtcFrameData DD 01H ; std::_Traits_find_last_not_of<std::char_traits<wchar_t> >
	DD	00H
	DQ	FLAT:??$_Traits_find_last_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z DB 0aH
	DB	00H
	DB	00H
	DB	0e8H
	DB	02H
	DB	'`'
	DB	04H
	DB	'v'
	DB	02H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z
	DD	imagerel $ip2state$??$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z DD 032e11H
	DD	0140117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z$rtcName$0 DB 024H ; std::vector<char,std::allocator<char> >::_Construct_n_copies_of_ty<char>
	DB	053H
	DB	032H
	DB	033H
	DB	00H
	ORG $+3
??$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z$rtcName$1 DB 05fH ; std::vector<char,std::allocator<char> >::_Construct_n_copies_of_ty<char>
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z$rtcName$2 DB 05fH ; std::vector<char,std::allocator<char> >::_Construct_n_copies_of_ty<char>
	DB	047H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+1
??$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z$rtcFrameData DD 03H ; std::vector<char,std::allocator<char> >::_Construct_n_copies_of_ty<char>
	DD	00H
	DQ	FLAT:??$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z$rtcVarDesc
	ORG $+8
??$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z$rtcVarDesc DD 088H ; std::vector<char,std::allocator<char> >::_Construct_n_copies_of_ty<char>
	DD	08H
	DQ	FLAT:??$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z$rtcName$2
	DD	058H
	DD	010H
	DQ	FLAT:??$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z$rtcName$0
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy_maybe_null@D@std@@YAPEADPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z DB 0aH
	DB	00H
	DB	00H
	DB	0e8H
	DB	02H
	DB	'`'
	DB	04H
	DB	'v'
	DB	02H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z
	DD	imagerel $ip2state$??$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z DD 032e11H
	DD	0140117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z$rtcName$0 DB 024H ; std::vector<wchar_t,std::allocator<wchar_t> >::_Construct_n_copies_of_ty<wchar_t>
	DB	053H
	DB	032H
	DB	032H
	DB	00H
	ORG $+3
??$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z$rtcName$1 DB 05fH ; std::vector<wchar_t,std::allocator<wchar_t> >::_Construct_n_copies_of_ty<wchar_t>
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z$rtcName$2 DB 05fH ; std::vector<wchar_t,std::allocator<wchar_t> >::_Construct_n_copies_of_ty<wchar_t>
	DB	047H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+1
??$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z$rtcFrameData DD 03H ; std::vector<wchar_t,std::allocator<wchar_t> >::_Construct_n_copies_of_ty<wchar_t>
	DD	00H
	DQ	FLAT:??$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z$rtcVarDesc
	ORG $+8
??$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z$rtcVarDesc DD 088H ; std::vector<wchar_t,std::allocator<wchar_t> >::_Construct_n_copies_of_ty<wchar_t>
	DD	08H
	DQ	FLAT:??$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z$rtcName$2
	DD	058H
	DD	010H
	DQ	FLAT:??$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z$rtcName$0
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_Vector_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy_maybe_null@_W@std@@YAPEA_WPEA_W@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z DB 06H
	DB	00H
	DB	00H
	DB	081H, 04H
	DB	02H
	DB	099H, 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z DB 02H
	DB	00H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z DB 018H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z DD 022e19H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z DB 06H
	DB	00H
	DB	00H
	DB	081H, 04H
	DB	02H
	DB	099H, 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z DB 02H
	DB	00H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z DB 018H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z DD 022e19H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV31@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z DB 06H
	DB	00H
	DB	00H
	DB	081H, 04H
	DB	02H
	DB	099H, 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z DB 02H
	DB	00H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z DB 018H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z DD 022e19H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBV31@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z DB 06H
	DB	00H
	DB	00H
	DB	081H, 04H
	DB	02H
	DB	099H, 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z DB 02H
	DB	00H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z DB 018H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z DD 022e19H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV31@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0N@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@N@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@N@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_pair@HH@std@@YA?AU?$pair@HH@0@$$QEAH0@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_pair@AEBHAEBH@std@@YA?AU?$pair@HH@0@AEBH0@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z DB 0cH
	DB	00H
	DB	00H
	DB	'l'
	DB	06H
	DB	'j'
	DB	08H
	DB	'T'
	DB	06H
	DB	'V'
	DB	04H
	DB	01cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z DB 0aH
	DB	0eH
	DD	imagerel ?dtor$4@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z DB 08H
	DD	imagerel $stateUnwindMap$??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z
	DD	imagerel $ip2state$??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z DD 032e11H
	DD	0120117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z
	DD	imagerel $ip2state$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEBAPEANXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEBAAEANXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z
	DD	imagerel $ip2state$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z DD 022811H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z
	DD	imagerel $ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAAXPEBN@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@1@0@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEBAAEBNXZ DD 021e01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	'<'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z
	DD	imagerel $ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z DD 022811H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAAAEAV?$allocator@N@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??end@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?end@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ DB 04H
	DB	00H
	DB	00H
	DB	0aeH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?end@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??end@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?end@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ DB 048H
	DD	imagerel $stateUnwindMap$?end@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ
	DD	imagerel $ip2state$?end@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?end@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??begin@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?begin@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ DB 04H
	DB	00H
	DB	00H
	DB	0aeH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?begin@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??begin@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?begin@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ DB 048H
	DD	imagerel $stateUnwindMap$?begin@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ
	DD	imagerel $ip2state$?begin@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?begin@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
	DB	053H
	DB	031H
	DB	00H
	ORG $+12
??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
	DD	01H
	DQ	FLAT:??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
	DD	00H
	DQ	FLAT:??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@N@std@@QEAAXQEAN_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$8@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$7@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$6@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$5@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z DB 01eH
	DB	00H
	DB	00H
	DB	0ccH
	DB	02H
	DB	'6'
	DB	04H
	DB	094H
	DB	06H
	DB	'T'
	DB	04H
	DB	'j'
	DB	0aH
	DB	'D'
	DB	04H
	DB	0aeH
	DB	0cH
	DB	'T'
	DB	04H
	DB	'j'
	DB	010H
	DB	'D'
	DB	04H
	DB	0bcH
	DB	012H
	DB	'2'
	DB	04H
	DB	01cH
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z DB 012H
	DB	0eH
	DD	imagerel ?dtor$0@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
	DB	07eH
	DD	imagerel ?dtor$4@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
	DB	0a6H
	DD	imagerel ?dtor$5@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
	DB	0f6H
	DD	imagerel ?dtor$7@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
	DB	03dH
	DB	02H
	DD	imagerel ?dtor$8@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z DB 08H
	DD	imagerel $stateUnwindMap$??R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z
	DD	imagerel $ip2state$??R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z DD 034019H
	DD	0440117H
	DD	07010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z
	DD	0212H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z$rtcName$0 DB 072H ; <lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()
	DB	061H
	DB	06dH
	DB	05fH
	DB	072H
	DB	065H
	DB	061H
	DB	064H
	DB	05fH
	DB	073H
	DB	070H
	DB	065H
	DB	065H
	DB	064H
	DB	05fH
	DB	06cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+4
??R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z$rtcName$1 DB 072H ; <lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()
	DB	061H
	DB	06dH
	DB	05fH
	DB	077H
	DB	072H
	DB	069H
	DB	074H
	DB	065H
	DB	05fH
	DB	073H
	DB	070H
	DB	065H
	DB	065H
	DB	064H
	DB	05fH
	DB	06cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+3
??R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z$rtcVarDesc DD 078H ; <lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()
	DD	020H
	DQ	FLAT:??R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z$rtcName$1
	DD	038H
	DD	020H
	DQ	FLAT:??R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z$rtcName$0
	ORG $+96
??R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z$rtcFrameData DD 02H ; <lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()
	DD	00H
	DQ	FLAT:??R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsWindows8OrGreater@@YA_NXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsWindowsVersionOrGreater@@YA_NGGG@Z DD 034119H
	DD	0300118H
	DD	07011H
	DD	imagerel __GSHandlerCheck
	DD	0170H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?IsWindowsVersionOrGreater@@YA_NGGG@Z$rtcName$0 DB 06fH	; IsWindowsVersionOrGreater
	DB	073H
	DB	076H
	DB	069H
	DB	00H
	ORG $+11
?IsWindowsVersionOrGreater@@YA_NGGG@Z$rtcVarDesc DD 030H ; IsWindowsVersionOrGreater
	DD	011cH
	DQ	FLAT:?IsWindowsVersionOrGreater@@YA_NGGG@Z$rtcName$0
	ORG $+48
?IsWindowsVersionOrGreater@@YA_NGGG@Z$rtcFrameData DD 01H ; IsWindowsVersionOrGreater
	DD	00H
	DQ	FLAT:?IsWindowsVersionOrGreater@@YA_NGGG@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$max@_K@std@@YAAEB_KAEB_K0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$max@_K@std@@YAAEB_KAEB_K0@Z DB 040H
	DD	imagerel $ip2state$??$max@_K@std@@YAAEB_KAEB_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$max@_K@std@@YAAEB_KAEB_K0@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$max@_K@std@@YAAEB_KAEB_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z DB 0cH
	DB	00H
	DB	00H
	DB	')', 02H
	DB	02H
	DB	'T'
	DB	04H
	DB	'Z'
	DB	06H
	DB	'Z'
	DB	0aH
	DB	080H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z DB 0aH
	DB	0eH
	DD	imagerel ?dtor$0@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA
	DB	0aeH
	DD	imagerel ?dtor$2@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z
	DD	imagerel $ip2state$??$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z DD 032911H
	DD	0200112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBAPEBQEBDXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBAPEBQEBDXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$make_pair@HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$make_pair@HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z DB 04H
	DB	00H
	DB	00H
	DB	0beH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$make_pair@HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$make_pair@HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$make_pair@HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$make_pair@HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
	DD	imagerel $ip2state$??$make_pair@HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_pair@HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z DD 022811H
	DD	070105214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$make_pair@HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$make_pair@HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$make_pair@HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z DB 04H
	DB	00H
	DB	00H
	DB	0beH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$make_pair@HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$make_pair@HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$make_pair@HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$make_pair@HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
	DD	imagerel $ip2state$??$make_pair@HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_pair@HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z DD 022811H
	DD	070105214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$make_pair@HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$make_pair@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$make_pair@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DB 04H
	DB	00H
	DB	00H
	DB	0beH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$make_pair@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$make_pair@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$make_pair@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$make_pair@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	DD	imagerel $ip2state$??$make_pair@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_pair@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 022811H
	DD	070105214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$make_pair@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$make_pair@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$make_pair@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DB 04H
	DB	00H
	DB	00H
	DB	0beH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$make_pair@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$make_pair@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$make_pair@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$make_pair@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	DD	imagerel $ip2state$??$make_pair@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_pair@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 022811H
	DD	070105214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$make_pair@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Take_contents@?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Make_iterator_offset@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Make_iterator_offset@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@_K@Z DB 04H
	DB	00H
	DB	00H
	DB	0caH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Make_iterator_offset@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@_K@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Make_iterator_offset@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Make_iterator_offset@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@_K@Z DB 048H
	DD	imagerel $stateUnwindMap$?_Make_iterator_offset@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@_K@Z
	DD	imagerel $ip2state$?_Make_iterator_offset@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Make_iterator_offset@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@_K@Z DD 022819H
	DD	070105214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Make_iterator_offset@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	0faH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z DB 08H
	DD	imagerel $stateUnwindMap$?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
	DD	imagerel $ip2state$?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z DD 022811H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z$rtcName$0 DB 05fH ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z$rtcVarDesc DD 024H ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range
	DD	04H
	DQ	FLAT:?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z$rtcName$0
	ORG $+48
?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z$rtcFrameData DD 01H ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range
	DD	00H
	DQ	FLAT:?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K1@Z DD 022d01H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBA_K_K@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@00@Z DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept1@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@00U?$integral_constant@_N$00@2@@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEAV32@00@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ DB 04H
	DB	00H
	DB	00H
	DB	0aeH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ DB 048H
	DD	imagerel $stateUnwindMap$?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
	DD	imagerel $ip2state$?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ DB 04H
	DB	00H
	DB	00H
	DB	0aeH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ DB 048H
	DD	imagerel $stateUnwindMap$?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
	DD	imagerel $ip2state$?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ DB 04H
	DB	00H
	DB	00H
	DB	0aeH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ DB 048H
	DD	imagerel $stateUnwindMap$?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
	DD	imagerel $ip2state$?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	DB	053H
	DB	032H
	DB	00H
	ORG $+12
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	DD	01H
	DQ	FLAT:??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	DD	00H
	DQ	FLAT:??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z DB 040H
	DD	imagerel $ip2state$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Move_construct@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Take_contents@?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	0faH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z DB 08H
	DD	imagerel $stateUnwindMap$?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z
	DD	imagerel $ip2state$?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z DD 022811H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z$rtcName$0 DB 05fH ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z$rtcVarDesc DD 024H ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range
	DD	04H
	DQ	FLAT:?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z$rtcName$0
	ORG $+48
?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z$rtcFrameData DD 01H ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range
	DD	00H
	DQ	FLAT:?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K1@Z DD 022d01H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBA_K_K@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@00@Z DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept1@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@00U?$integral_constant@_N$00@2@@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PEAV32@00@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
	DB	053H
	DB	033H
	DB	00H
	ORG $+12
??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
	DD	01H
	DQ	FLAT:??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
	DD	00H
	DQ	FLAT:??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z DB 040H
	DD	imagerel $ip2state$??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Move_construct@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_Vector_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_Vector_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@_WV?$allocator@_W@std@@@std@@AEBAAEBV?$allocator@_W@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@_WV?$allocator@_W@std@@@std@@AEAAAEAV?$allocator@_W@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@_WV?$allocator@_W@std@@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@_WV?$allocator@_W@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@_WV?$allocator@_W@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@_WV?$allocator@_W@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@_WV?$allocator@_W@std@@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@_WV?$allocator@_W@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@_WV?$allocator@_W@std@@@std@@AEAAXPEA_W0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Ufill@?$vector@_WV?$allocator@_W@std@@@std@@AEAAPEA_WPEA_W_KAEB_W@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@_WV?$allocator@_W@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@_WV?$allocator@_W@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?data@?$vector@_WV?$allocator@_W@std@@@std@@QEAAPEA_WXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?data@?$vector@_WV?$allocator@_W@std@@@std@@QEAAPEA_WXZ DB 040H
	DD	imagerel $ip2state$?data@?$vector@_WV?$allocator@_W@std@@@std@@QEAAPEA_WXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?data@?$vector@_WV?$allocator@_W@std@@@std@@QEAAPEA_WXZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?data@?$vector@_WV?$allocator@_W@std@@@std@@QEAAPEA_WXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<wchar_t,std::allocator<wchar_t> >::~vector<wchar_t,std::allocator<wchar_t> >
	DB	053H
	DB	034H
	DB	00H
	ORG $+12
??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<wchar_t,std::allocator<wchar_t> >::~vector<wchar_t,std::allocator<wchar_t> >
	DD	01H
	DQ	FLAT:??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<wchar_t,std::allocator<wchar_t> >::~vector<wchar_t,std::allocator<wchar_t> >
	DD	00H
	DQ	FLAT:??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@_WV?$allocator@_W@std@@@std@@QEAA@_KAEB_WAEBV?$allocator@_W@1@@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEBAAEBV?$allocator@D@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEAAAEAV?$allocator@D@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@DV?$allocator@D@std@@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@DV?$allocator@D@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@DV?$allocator@D@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@DV?$allocator@D@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@DV?$allocator@D@std@@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@DV?$allocator@D@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@DV?$allocator@D@std@@@std@@AEAAX_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@DV?$allocator@D@std@@@std@@AEAAX_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@DV?$allocator@D@std@@@std@@AEAAXPEAD0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Ufill@?$vector@DV?$allocator@D@std@@@std@@AEAAPEADPEAD_KAEBD@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ DB 040H
	DD	imagerel $ip2state$?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
	DB	053H
	DB	035H
	DB	00H
	ORG $+12
??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
	DD	01H
	DQ	FLAT:??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
	DD	00H
	DQ	FLAT:??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@DV?$allocator@D@std@@@std@@QEAA@_KAEBDAEBV?$allocator@D@1@@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspColorprimList@@YAXXZ DD 042b19H
	DD	023010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0108H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z DD 033d19H
	DD	07016821aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspTransferList@@YAXXZ DD 042b19H
	DD	02b010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0148H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z DD 033d19H
	DD	07016a21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspMatrixList@@YAXXZ DD 042b19H
	DD	029010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0130H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z DD 033d19H
	DD	07016a21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	040H
xdata	ENDS
xdata	SEGMENT
$unwind$?wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DD 032e11H
	DD	0140117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
$cppxdata$?wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DB 08H
	DD	imagerel $stateUnwindMap$?wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
	DD	imagerel $ip2state$?wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
$stateUnwindMap$?wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA
$ip2state$?wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DB 0aH
	DB	00H
	DB	00H
	DB	0f5H, 03H
	DB	02H
	DB	0f4H
	DB	00H
	DB	'&'
	DB	02H
	DB	'J'
	DB	00H
$cppxdata$?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z DB 08H
	DD	imagerel $stateUnwindMap$?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z
	DD	imagerel $ip2state$?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z
$unwind$?dtor$0@?0??wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z DD 023a19H
	DD	07010d214H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z
	DD	06aH
$stateUnwindMap$?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA
$ip2state$?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z DB 0aH
	DB	00H
	DB	00H
	DB	0c4H
	DB	02H
	DB	'*'
	DB	00H
	DB	016H
	DB	04H
	DB	'n'
	DB	02H
$cppxdata$?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z DB 08H
	DD	imagerel $stateUnwindMap$?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z
	DD	imagerel $ip2state$?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z
$cppxdata$?char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z DB 08H
	DD	imagerel $stateUnwindMap$?char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z
	DD	imagerel $ip2state$?char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z
$unwind$?dtor$0@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z DD 023a19H
	DD	07010d214H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z
	DD	06aH
$stateUnwindMap$?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA
$ip2state$?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z DB 06H
	DB	00H
	DB	00H
	DB	09aH
	DB	04H
	DB	'~'
	DB	02H
$stateUnwindMap$?char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA
$unwind$?dtor$0@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z DD 032e11H
	DD	0120117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z
$ip2state$?char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z DB 0aH
	DB	00H
	DB	00H
	DB	0c9H, 02H
	DB	02H
	DB	0c6H
	DB	00H
	DB	' '
	DB	02H
	DB	'D'
	DB	00H
$unwind$?dtor$0@?0??char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z DD 023a19H
	DD	07010d214H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z
	DD	06aH
$cppxdata$?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z DB 08H
	DD	imagerel $stateUnwindMap$?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z
	DD	imagerel $ip2state$?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z
$stateUnwindMap$?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA
$ip2state$?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z DB 0aH
	DB	00H
	DB	00H
	DB	0c4H
	DB	02H
	DB	'*'
	DB	00H
	DB	016H
	DB	04H
	DB	'n'
	DB	02H
$cppxdata$?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z DB 08H
	DD	imagerel $stateUnwindMap$?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
	DD	imagerel $ip2state$?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
$unwind$?dtor$0@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z DD 023a19H
	DD	07010d214H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
	DD	06aH
$stateUnwindMap$?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA
$ip2state$?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z DB 06H
	DB	00H
	DB	00H
	DB	09aH
	DB	04H
	DB	'~'
	DB	02H
$cppxdata$?strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ DB 08H
	DD	imagerel $stateUnwindMap$?strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ
	DD	imagerel $ip2state$?strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ
$cppxdata$?str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z DB 08H
	DD	imagerel $stateUnwindMap$?str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z
	DD	imagerel $ip2state$?str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z
$unwind$?dtor$0@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ DD 034519H
	DD	01a011cH
	DD	07015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ
	DD	0caH
$stateUnwindMap$?strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA
$ip2state$?strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ DB 0eH
	DB	00H
	DB	00H
	DB	0e0H
	DB	02H
	DB	'<'
	DB	00H
	DB	0b4H
	DB	04H
	DB	086H
	DB	06H
	DB	'L'
	DB	04H
	DB	01cH
	DB	02H
$cppxdata$?GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z DB 08H
	DD	imagerel $stateUnwindMap$?GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z
	DD	imagerel $ip2state$?GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z
$unwind$?dtor$0@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z DD 022d11H
	DD	070155219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z
$stateUnwindMap$?str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0??str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z@4HA
$ip2state$?str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z DB 06H
	DB	00H
	DB	00H
	DB	'j'
	DB	04H
	DB	'%', 02H
	DB	02H
$cppxdata$?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z DB 08H
	DD	imagerel $stateUnwindMap$?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
	DD	imagerel $ip2state$?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
$unwind$?dtor$0@?0??str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z DD 022611H
	DD	0700bd20fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z
$stateUnwindMap$?GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA
$ip2state$?GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z DB 0aH
	DB	00H
	DB	00H
	DB	0acH
	DB	02H
	DB	'0'
	DB	00H
	DB	08aH
	DB	04H
	DB	0aeH
	DB	02H
$cppxdata$?PathRemoveExtensionS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@Z DB 08H
	DD	imagerel $stateUnwindMap$?PathRemoveExtensionS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@Z
	DD	imagerel $ip2state$?PathRemoveExtensionS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@Z
$ip2state$?PathRemoveExtensionS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@Z DB 08H
	DB	00H
	DB	00H
	DB	0dcH
	DB	02H
	DB	'$'
	DB	00H
	DB	'R'
	DB	02H
$unwind$?dtor$0@?0??GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?rgy_get_filesize@@YA_NPEB_WPEA_K@Z DD 023819H
	DD	0700bf212H
	DD	imagerel __GSHandlerCheck
	DD	070H
$unwind$?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z DD 033b19H
	DD	0120112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
	DD	08aH
$stateUnwindMap$?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA
$ip2state$?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'Q', 02H
	DB	02H
	DB	'0'
	DB	00H
	DB	'^'
	DB	04H
	DB	0a6H
	DB	02H
$cppxdata$?PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z DB 08H
	DD	imagerel $stateUnwindMap$?PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z
	DD	imagerel $ip2state$?PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z
$unwind$?dtor$0@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?PathRemoveExtensionS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@Z DD 022311H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?PathRemoveExtensionS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@Z
$stateUnwindMap$?PathRemoveExtensionS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??PathRemoveExtensionS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@Z@4HA
$cppxdata$?PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z DB 08H
	DD	imagerel $stateUnwindMap$?PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z
	DD	imagerel $ip2state$?PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z
$cppxdata$?CreateDirectoryRecursive@@YA_NPEB_W@Z DB 08H
	DD	imagerel $stateUnwindMap$?CreateDirectoryRecursive@@YA_NPEB_W@Z
	DD	imagerel $ip2state$?CreateDirectoryRecursive@@YA_NPEB_W@Z
$unwind$?dtor$0@?0??PathRemoveExtensionS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z DD 022e11H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z
$stateUnwindMap$?PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0??PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z@4HA
$ip2state$?PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z DB 06H
	DB	00H
	DB	00H
	DB	'M', 02H
	DB	04H
	DB	0d8H
	DB	02H
$ip2state$?CreateDirectoryRecursive@@YA_NPEB_W@Z DB 010H
	DB	00H
	DB	00H
	DB	0faH
	DB	02H
	DB	' '
	DB	06H
	DB	'2'
	DB	00H
	DB	'.'
	DB	06H
	DB	'B'
	DB	00H
	DB	'('
	DB	06H
	DB	'v'
	DB	00H
$unwind$?dtor$0@?0??PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z DD 022e11H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z
$stateUnwindMap$?PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0??PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z@4HA
$ip2state$?PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z DB 06H
	DB	00H
	DB	00H
	DB	'E', 02H
	DB	04H
	DB	0d8H
	DB	02H
$cppxdata$?get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z DB 08H
	DD	imagerel $stateUnwindMap$?get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
	DD	imagerel $ip2state$?get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
$unwind$?dtor$0@?0??PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?CreateDirectoryRecursive@@YA_NPEB_W@Z DD 033619H
	DD	016010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?CreateDirectoryRecursive@@YA_NPEB_W@Z
	DD	0a2H
$stateUnwindMap$?CreateDirectoryRecursive@@YA_NPEB_W@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0??CreateDirectoryRecursive@@YA_NPEB_W@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??CreateDirectoryRecursive@@YA_NPEB_W@Z@4HA
	DB	05eH
	DD	imagerel ?dtor$1@?0??CreateDirectoryRecursive@@YA_NPEB_W@Z@4HA
$unwind$?dtor$0@?0??CreateDirectoryRecursive@@YA_NPEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??CreateDirectoryRecursive@@YA_NPEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z DD 034019H
	DD	01600117H
	DD	07010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
	DD	0afaH
$stateUnwindMap$?get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z DB 0eH
	DB	0eH
	DD	imagerel ?dtor$2@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA
	DB	056H
	DD	imagerel ?dtor$3@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA
	DB	0a6H
	DD	imagerel ?dtor$5@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA
	DB	0ceH
	DD	imagerel ?dtor$6@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA
$ip2state$?get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z DB 01eH
	DB	00H
	DB	00H
	DB	0acH
	DB	04H
	DB	094H
	DB	06H
	DB	'N'
	DB	04H
	DB	0acH
	DB	02H
	DB	'.'
	DB	04H
	DB	019H, 02H
	DB	08H
	DB	'j'
	DB	0aH
	DB	'&'
	DB	08H
	DB	01cH
	DB	04H
	DB	08eH
	DB	0cH
	DB	'H'
	DB	04H
	DB	'@'
	DB	0eH
	DB	'&'
	DB	04H
	DB	0b8H
	DB	02H
$unwind$?dtor$0@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$5@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$6@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 033619H
	DD	09a010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	04c2H
$cppxdata$?getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DB 08H
	DD	imagerel $stateUnwindMap$?getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	imagerel $ip2state$?getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
$stateUnwindMap$?getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DB 06H
	DB	0eH
	DD	imagerel ?dtor$2@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA
$ip2state$?getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DB 0aH
	DB	00H
	DB	00H
	DB	'A', 02H
	DB	04H
	DB	'Z'
	DB	06H
	DB	'Z'
	DB	04H
	DB	01cH
	DB	02H
$cppxdata$?tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z DB 08H
	DD	imagerel $stateUnwindMap$?tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
	DD	imagerel $ip2state$?tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
$stateUnwindMap$?tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA
$unwind$?dtor$0@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z DD 022811H
	DD	070105214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
$ip2state$?tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z DB 04H
	DB	00H
	DB	00H
	DB	08aH
	DB	02H
$cppxdata$?tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z DB 08H
	DD	imagerel $stateUnwindMap$?tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z
	DD	imagerel $ip2state$?tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z
$cppxdata$?tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DB 08H
	DD	imagerel $stateUnwindMap$?tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
	DD	imagerel $ip2state$?tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
$cppxdata$?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z DB 08H
	DD	imagerel $stateUnwindMap$?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z
	DD	imagerel $ip2state$?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z
$unwind$?dtor$0@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z DD 023a19H
	DD	07010d214H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z
	DD	06aH
$stateUnwindMap$?tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA
$ip2state$?tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z DB 0aH
	DB	00H
	DB	00H
	DB	0c4H
	DB	02H
	DB	'*'
	DB	00H
	DB	'B'
	DB	04H
	DB	'J'
	DB	02H
$ip2state$?tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DB 0cH
	DB	00H
	DB	00H
	DB	01H, 02H
	DB	02H
	DB	'F'
	DB	00H
	DB	'R'
	DB	04H
	DB	082H
	DB	02H
	DB	'B'
	DB	00H
$unwind$?dtor$0@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DD 034019H
	DD	0180117H
	DD	07010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
	DD	0b2H
$stateUnwindMap$?tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA
$cppxdata$?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z DB 08H
	DD	imagerel $stateUnwindMap$?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z
	DD	imagerel $ip2state$?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z
$unwind$?dtor$0@?0??tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z DD 023a19H
	DD	07010d214H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z
	DD	06aH
$stateUnwindMap$?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA
$ip2state$?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z DB 0aH
	DB	00H
	DB	00H
	DB	0c4H
	DB	02H
	DB	'*'
	DB	00H
	DB	016H
	DB	04H
	DB	'n'
	DB	02H
$cppxdata$?char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z DB 08H
	DD	imagerel $stateUnwindMap$?char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z
	DD	imagerel $ip2state$?char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z
$cppxdata$?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z DB 08H
	DD	imagerel $stateUnwindMap$?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z
	DD	imagerel $ip2state$?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z
$unwind$?dtor$0@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z DD 023a19H
	DD	07010d214H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z
	DD	06aH
$stateUnwindMap$?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA
$ip2state$?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z DB 06H
	DB	00H
	DB	00H
	DB	09aH
	DB	04H
	DB	'~'
	DB	02H
$ip2state$?char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z DB 0cH
	DB	00H
	DB	00H
	DB	01H, 02H
	DB	02H
	DB	'F'
	DB	00H
	DB	'R'
	DB	04H
	DB	082H
	DB	02H
	DB	'B'
	DB	00H
$unwind$?dtor$0@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z DD 034019H
	DD	0180117H
	DD	07010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z
	DD	0b2H
$stateUnwindMap$?char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA
$cppxdata$?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z DB 08H
	DD	imagerel $stateUnwindMap$?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z
	DD	imagerel $ip2state$?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z
$unwind$?dtor$0@?0??char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z DD 023a19H
	DD	07010d214H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z
	DD	06aH
$stateUnwindMap$?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA
$ip2state$?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z DB 0aH
	DB	00H
	DB	00H
	DB	0c4H
	DB	02H
	DB	'*'
	DB	00H
	DB	016H
	DB	04H
	DB	'n'
	DB	02H
$cppxdata$?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z DB 08H
	DD	imagerel $stateUnwindMap$?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z
	DD	imagerel $ip2state$?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z
$cppxdata$?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z DB 08H
	DD	imagerel $stateUnwindMap$?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z
	DD	imagerel $ip2state$?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z
$unwind$?dtor$0@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z DD 023a19H
	DD	07010d214H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z
	DD	06aH
$stateUnwindMap$?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA
$ip2state$?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z DB 06H
	DB	00H
	DB	00H
	DB	09aH
	DB	04H
	DB	'~'
	DB	02H
$cppxdata$?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ DB 08H
	DD	imagerel $stateUnwindMap$?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ
	DD	imagerel $ip2state$?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ
$cppxdata$?split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z DB 08H
	DD	imagerel $stateUnwindMap$?split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z
	DD	imagerel $ip2state$?split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z
$unwind$?dtor$0@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?wstring_to_tstring@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DD 022801H
	DD	070103214H
$unwind$?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z DD 023a19H
	DD	07010d214H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z
	DD	06aH
$stateUnwindMap$?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA
$ip2state$?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z DB 0aH
	DB	00H
	DB	00H
	DB	0c4H
	DB	02H
	DB	'*'
	DB	00H
	DB	016H
	DB	04H
	DB	'n'
	DB	02H
$cppxdata$?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z DB 08H
	DD	imagerel $stateUnwindMap$?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z
	DD	imagerel $ip2state$?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z
$cppxdata$?lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z DB 08H
	DD	imagerel $stateUnwindMap$?lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z
	DD	imagerel $ip2state$?lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z
$unwind$?dtor$0@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z DD 023a19H
	DD	07010d214H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z
	DD	06aH
$stateUnwindMap$?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA
$ip2state$?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z DB 06H
	DB	00H
	DB	00H
	DB	09aH
	DB	04H
	DB	'~'
	DB	02H
$cppxdata$?rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z DB 08H
	DD	imagerel $stateUnwindMap$?rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z
	DD	imagerel $ip2state$?rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z
$cppxdata$?trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z DB 08H
	DD	imagerel $stateUnwindMap$?trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z
	DD	imagerel $ip2state$?trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z
$unwind$?dtor$0@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ DD 034519H
	DD	01a011cH
	DD	07015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ
	DD	0caH
$stateUnwindMap$?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA
$ip2state$?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ DB 0eH
	DB	00H
	DB	00H
	DB	0e0H
	DB	02H
	DB	'<'
	DB	00H
	DB	0b0H
	DB	04H
	DB	086H
	DB	06H
	DB	'L'
	DB	04H
	DB	01cH
	DB	02H
$cppxdata$?lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z DB 08H
	DD	imagerel $stateUnwindMap$?lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z
	DD	imagerel $ip2state$?lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z
$unwind$?dtor$0@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z DD 034519H
	DD	038011cH
	DD	07015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z
	DD	01b2H
$stateUnwindMap$?split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z DB 0eH
	DB	0eH
	DD	imagerel ?dtor$6@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA
	DB	07eH
	DD	imagerel ?dtor$3@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA
	DB	056H
	DD	imagerel ?dtor$5@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA
$ip2state$?split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z DB 01aH
	DB	00H
	DB	00H
	DB	0b6H
	DB	04H
	DB	019H, 02H
	DB	06H
	DB	080H
	DB	08H
	DB	','
	DB	06H
	DB	0a4H
	DB	04H
	DB	0c8H
	DB	0aH
	DB	080H
	DB	0cH
	DB	','
	DB	0aH
	DB	0c0H
	DB	0eH
	DB	'&'
	DB	0aH
	DB	'`'
	DB	04H
	DB	01cH
	DB	02H
$unwind$?dtor$0@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$5@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$6@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z DD 034519H
	DD	038011cH
	DD	07015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z
	DD	01b2H
$stateUnwindMap$?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z DB 0eH
	DB	0eH
	DD	imagerel ?dtor$6@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA
	DB	07eH
	DD	imagerel ?dtor$3@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA
	DB	056H
	DD	imagerel ?dtor$5@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA
$ip2state$?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z DB 01aH
	DB	00H
	DB	00H
	DB	0b6H
	DB	04H
	DB	019H, 02H
	DB	06H
	DB	080H
	DB	08H
	DB	','
	DB	06H
	DB	0a4H
	DB	04H
	DB	0c8H
	DB	0aH
	DB	080H
	DB	0cH
	DB	','
	DB	0aH
	DB	0c0H
	DB	0eH
	DB	'&'
	DB	0aH
	DB	'`'
	DB	04H
	DB	01cH
	DB	02H
$unwind$?dtor$0@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$5@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$6@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z DD 034019H
	DD	0160117H
	DD	07010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z
	DD	0aaH
$stateUnwindMap$?lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$2@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
$ip2state$?lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z DB 0aH
	DB	00H
	DB	00H
	DB	0bcH
	DB	04H
	DB	0aeH
	DB	06H
	DB	'&'
	DB	04H
	DB	'Z'
	DB	02H
$cppxdata$?rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z DB 08H
	DD	imagerel $stateUnwindMap$?rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z
	DD	imagerel $ip2state$?rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z
$unwind$?dtor$0@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z DD 034019H
	DD	0160117H
	DD	07010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z
	DD	0aaH
$stateUnwindMap$?rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$2@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
$ip2state$?rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z DB 0aH
	DB	00H
	DB	00H
	DB	0bcH
	DB	04H
	DB	0b6H
	DB	06H
	DB	'&'
	DB	04H
	DB	'Z'
	DB	02H
$cppxdata$?trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z DB 08H
	DD	imagerel $stateUnwindMap$?trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z
	DD	imagerel $ip2state$?trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z
$unwind$?dtor$0@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z DD 034019H
	DD	0180117H
	DD	07010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z
	DD	0b2H
$stateUnwindMap$?trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$2@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA
$ip2state$?trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z DB 0aH
	DB	00H
	DB	00H
	DB	0bcH
	DB	04H
	DB	'=', 02H
	DB	06H
	DB	'&'
	DB	04H
	DB	'Z'
	DB	02H
$unwind$?dtor$0@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z DD 034019H
	DD	0160117H
	DD	07010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z
	DD	0aaH
$stateUnwindMap$?lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$2@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
$ip2state$?lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z DB 0aH
	DB	00H
	DB	00H
	DB	0bcH
	DB	04H
	DB	0aeH
	DB	06H
	DB	'&'
	DB	04H
	DB	'Z'
	DB	02H
$cppxdata$?str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z DB 08H
	DD	imagerel $stateUnwindMap$?str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z
	DD	imagerel $ip2state$?str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z
$unwind$?dtor$0@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z DD 034019H
	DD	0160117H
	DD	07010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z
	DD	0aaH
$stateUnwindMap$?rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$2@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
$ip2state$?rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z DB 0aH
	DB	00H
	DB	00H
	DB	0bcH
	DB	04H
	DB	0b6H
	DB	06H
	DB	'&'
	DB	04H
	DB	'Z'
	DB	02H
$cppxdata$?GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z DB 08H
	DD	imagerel $stateUnwindMap$?GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z
	DD	imagerel $ip2state$?GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z
$unwind$?dtor$0@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z DD 034019H
	DD	0180117H
	DD	07010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z
	DD	0b2H
$stateUnwindMap$?trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$2@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA
$ip2state$?trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z DB 0aH
	DB	00H
	DB	00H
	DB	0bcH
	DB	04H
	DB	'=', 02H
	DB	06H
	DB	'&'
	DB	04H
	DB	'Z'
	DB	02H
$unwind$?dtor$0@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z DD 022d11H
	DD	070155219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z
$stateUnwindMap$?str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0??str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z@4HA
$ip2state$?str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z DB 06H
	DB	00H
	DB	00H
	DB	'j'
	DB	04H
	DB	'%', 02H
	DB	02H
$cppxdata$?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DB 08H
	DD	imagerel $stateUnwindMap$?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	DD	imagerel $ip2state$?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
$unwind$?dtor$0@?0??str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z DD 022611H
	DD	0700bd20fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z
$stateUnwindMap$?GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
$ip2state$?GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z DB 0aH
	DB	00H
	DB	00H
	DB	0acH
	DB	02H
	DB	'0'
	DB	00H
	DB	084H
	DB	04H
	DB	0aeH
	DB	02H
$cppxdata$?PathRemoveExtensionS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@Z DB 08H
	DD	imagerel $stateUnwindMap$?PathRemoveExtensionS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@Z
	DD	imagerel $ip2state$?PathRemoveExtensionS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@Z
$ip2state$?PathRemoveExtensionS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@Z DB 08H
	DB	00H
	DB	00H
	DB	0dcH
	DB	02H
	DB	'$'
	DB	00H
	DB	'L'
	DB	02H
$unwind$?dtor$0@?0??GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?rgy_get_filesize@@YA_NPEBDPEA_K@Z DD 023819H
	DD	0700bf212H
	DD	imagerel __GSHandlerCheck
	DD	070H
$unwind$?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 033b19H
	DD	0120112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	DD	08aH
$stateUnwindMap$?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
$ip2state$?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'Q', 02H
	DB	02H
	DB	'0'
	DB	00H
	DB	'X'
	DB	04H
	DB	0a6H
	DB	02H
$cppxdata$?CreateDirectoryRecursive@@YA_NPEBD@Z DB 08H
	DD	imagerel $stateUnwindMap$?CreateDirectoryRecursive@@YA_NPEBD@Z
	DD	imagerel $ip2state$?CreateDirectoryRecursive@@YA_NPEBD@Z
$unwind$?dtor$0@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?PathRemoveExtensionS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@Z DD 022311H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?PathRemoveExtensionS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@Z
$stateUnwindMap$?PathRemoveExtensionS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??PathRemoveExtensionS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@Z@4HA
$ip2state$?CreateDirectoryRecursive@@YA_NPEBD@Z DB 010H
	DB	00H
	DB	00H
	DB	0faH
	DB	02H
	DB	' '
	DB	06H
	DB	'2'
	DB	00H
	DB	'.'
	DB	06H
	DB	'B'
	DB	00H
	DB	'('
	DB	06H
	DB	'v'
	DB	00H
$cppxdata$?print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z DB 08H
	DD	imagerel $stateUnwindMap$?print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z
	DD	imagerel $ip2state$?print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z
$unwind$?dtor$0@?0??PathRemoveExtensionS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?CreateDirectoryRecursive@@YA_NPEBD@Z DD 033619H
	DD	016010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?CreateDirectoryRecursive@@YA_NPEBD@Z
	DD	0a2H
$stateUnwindMap$?CreateDirectoryRecursive@@YA_NPEBD@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0??CreateDirectoryRecursive@@YA_NPEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??CreateDirectoryRecursive@@YA_NPEBD@Z@4HA
	DB	05eH
	DD	imagerel ?dtor$1@?0??CreateDirectoryRecursive@@YA_NPEBD@Z@4HA
$unwind$?dtor$0@?0??CreateDirectoryRecursive@@YA_NPEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??CreateDirectoryRecursive@@YA_NPEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z DD 033c19H
	DD	01a0113H
	DD	0700cH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z
	DD	0c2H
$stateUnwindMap$?print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$2@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA
$ip2state$?print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z DB 0aH
	DB	00H
	DB	00H
	DB	'U', 03H
	DB	04H
	DB	08aH
	DB	06H
	DB	092H
	DB	04H
	DB	016H
	DB	02H
$unwind$?dtor$0@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?check_ext@@YA_NPEBDAEBV?$vector@PEBDV?$allocator@PEBD@std@@@std@@@Z DD 033b19H
	DD	0140112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?check_ext@@YA_NPEBDAEBV?$vector@PEBDV?$allocator@PEBD@std@@@std@@@Z
	DD	09aH
$cppxdata$?check_ext@@YA_NPEBDAEBV?$vector@PEBDV?$allocator@PEBD@std@@@std@@@Z DB 08H
	DD	imagerel $stateUnwindMap$?check_ext@@YA_NPEBDAEBV?$vector@PEBDV?$allocator@PEBD@std@@@std@@@Z
	DD	imagerel $ip2state$?check_ext@@YA_NPEBDAEBV?$vector@PEBDV?$allocator@PEBD@std@@@std@@@Z
$stateUnwindMap$?check_ext@@YA_NPEBDAEBV?$vector@PEBDV?$allocator@PEBD@std@@@std@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??check_ext@@YA_NPEBDAEBV?$vector@PEBDV?$allocator@PEBD@std@@@std@@@Z@4HA
$ip2state$?check_ext@@YA_NPEBDAEBV?$vector@PEBDV?$allocator@PEBD@std@@@std@@@Z DB 06H
	DB	00H
	DB	00H
	DB	'}', 03H
	DB	02H
	DB	084H
	DB	00H
$cppxdata$?rgy_print_stderr@@YAHHPEBDPEAX@Z DB 08H
	DD	imagerel $stateUnwindMap$?rgy_print_stderr@@YAHHPEBDPEAX@Z
	DD	imagerel $ip2state$?rgy_print_stderr@@YAHHPEBDPEAX@Z
$unwind$?dtor$0@?0??check_ext@@YA_NPEBDAEBV?$vector@PEBDV?$allocator@PEBD@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?check_ext@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@PEBDV?$allocator@PEBD@std@@@2@@Z DD 022301H
	DD	0700b320fH
$unwind$?rgy_print_stderr@@YAHHPEBDPEAX@Z DD 033e19H
	DD	0280116H
	DD	0700fH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?rgy_print_stderr@@YAHHPEBDPEAX@Z
	DD	0132H
$stateUnwindMap$?rgy_print_stderr@@YAHHPEBDPEAX@Z DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA
	DB	056H
	DD	imagerel ?dtor$3@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA
$ip2state$?rgy_print_stderr@@YAHHPEBDPEAX@Z DB 0eH
	DB	00H
	DB	00H
	DB	0b1H, 05H
	DB	02H
	DB	'F'
	DB	04H
	DB	015H, 02H
	DB	08H
	DB	08aH
	DB	04H
	DB	'H'
	DB	02H
	DB	'B'
	DB	00H
$cppxdata$?getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z DB 08H
	DD	imagerel $stateUnwindMap$?getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z
	DD	imagerel $ip2state$?getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z
$cppxdata$?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z DB 08H
	DD	imagerel $stateUnwindMap$?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z
	DD	imagerel $ip2state$?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z
$unwind$?dtor$0@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z DD 033b19H
	DD	0620112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z
	DD	0302H
$stateUnwindMap$?getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z@4HA
$ip2state$?getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z DB 04H
	DB	00H
	DB	00H
	DB	081H, 013H
	DB	02H
$unwind$?dtor$0@?0??getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?rgy_is_64bit_os@@YAHXZ DD 021501H
	DD	07002d206H
$unwind$?getPhysicalRamSize@@YA_KPEA_K@Z DD 033619H
	DD	012010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck
	DD	080H
$unwind$?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z DD 033a19H
	DD	01840111H
	DD	0700aH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z
	DD	0c12H
$stateUnwindMap$?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z DB 0eH
	DB	0eH
	DD	imagerel ?dtor$6@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA
	DB	056H
	DD	imagerel ?dtor$3@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA
	DB	07eH
	DD	imagerel ?dtor$4@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA
	DB	0a6H
	DD	imagerel ?dtor$5@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA
$ip2state$?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z DB 01aH
	DB	00H
	DB	00H
	DB	0a0H
	DB	04H
	DB	0d9H, 02H
	DB	06H
	DB	0f0H
	DB	08H
	DB	'&'
	DB	06H
	DB	082H
	DB	0aH
	DB	'&'
	DB	06H
	DB	'i', 09H
	DB	0cH
	DB	'&'
	DB	06H
	DB	082H
	DB	0eH
	DB	'&'
	DB	06H
	DB	'`'
	DB	04H
	DB	01cH
	DB	02H
$cppxdata$??0AudioSelect@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0AudioSelect@@QEAA@XZ
	DD	imagerel $ip2state$??0AudioSelect@@QEAA@XZ
$cppxdata$??0SubtitleSelect@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0SubtitleSelect@@QEAA@XZ
	DD	imagerel $ip2state$??0SubtitleSelect@@QEAA@XZ
$cppxdata$?PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z DB 08H
	DD	imagerel $stateUnwindMap$?PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z
	DD	imagerel $ip2state$?PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z
$unwind$?dtor$0@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$5@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$6@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?check_OS_Win8orLater@@YAHXZ DD 021501H
	DD	070023206H
$unwind$?malloc_degeneracy@@YA_KPEAPEAX_K1@Z DD 022801H
	DD	070107214H
$unwind$?get_dar_pixels@@YAXPEAI0HH@Z DD 022d01H
	DD	070155219H
$unwind$?get_sar@@YA?AU?$pair@HH@std@@IIII@Z DD 022c01H
	DD	070147218H
$unwind$?adjust_sar@@YAXPEAH0HH@Z DD 022d01H
	DD	070159219H
$unwind$?get_h264_sar_idx@@YAHU?$pair@HH@std@@@Z DD 021e01H
	DD	07006520aH
$unwind$?get_h264_sar@@YA?AU?$pair@HH@std@@H@Z DD 022201H
	DD	0700a520eH
$unwind$??0AudioSelect@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0AudioSelect@@QEAA@XZ
$stateUnwindMap$??0AudioSelect@@QEAA@XZ DB 0eH
	DB	0eH
	DD	imagerel ?dtor$0@?0???0AudioSelect@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0AudioSelect@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0AudioSelect@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???0AudioSelect@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???0AudioSelect@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???0AudioSelect@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0???0AudioSelect@@QEAA@XZ@4HA
$ip2state$??0AudioSelect@@QEAA@XZ DB 012H
	DB	00H
	DB	00H
	DB	'v'
	DB	02H
	DB	'$'
	DB	04H
	DB	'$'
	DB	06H
	DB	'('
	DB	08H
	DB	'd'
	DB	0aH
	DB	'('
	DB	0cH
	DB	'('
	DB	0eH
	DB	0caH
	DB	00H
$cppxdata$?PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z DB 08H
	DD	imagerel $stateUnwindMap$?PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z
	DD	imagerel $ip2state$?PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z
$unwind$?dtor$0@?0???0AudioSelect@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0???0AudioSelect@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0???0AudioSelect@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0???0AudioSelect@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0???0AudioSelect@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$5@?0???0AudioSelect@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$6@?0???0AudioSelect@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$??0SubtitleSelect@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0SubtitleSelect@@QEAA@XZ
$stateUnwindMap$??0SubtitleSelect@@QEAA@XZ DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0SubtitleSelect@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0SubtitleSelect@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0SubtitleSelect@@QEAA@XZ@4HA
$ip2state$??0SubtitleSelect@@QEAA@XZ DB 0aH
	DB	00H
	DB	00H
	DB	'v'
	DB	02H
	DB	'$'
	DB	04H
	DB	'$'
	DB	06H
	DB	018H
	DB	00H
$cppxdata$?PathRootExists@@YA_NPEBD@Z DB 08H
	DD	imagerel $stateUnwindMap$?PathRootExists@@YA_NPEBD@Z
	DD	imagerel $ip2state$?PathRootExists@@YA_NPEBD@Z
$unwind$?dtor$0@?0???0SubtitleSelect@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0???0SubtitleSelect@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0???0SubtitleSelect@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$??0DataSelect@@QEAA@XZ DD 010601H
	DD	07006H
$unwind$?rgy_avx_dummy_if_avail@@YAHH@Z DD 042c01H
	DD	023010dH
	DD	050057006H
$unwind$?PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z DD 033b19H
	DD	01a0112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z
	DD	0c2H
$stateUnwindMap$?PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$2@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
$ip2state$?PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z DB 0aH
	DB	00H
	DB	00H
	DB	0b2H
	DB	04H
	DB	096H
	DB	06H
	DB	')', 02H
	DB	04H
	DB	016H
	DB	02H
$unwind$?dtor$0@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z DD 033b19H
	DD	01a0112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z
	DD	0c2H
$stateUnwindMap$?PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$2@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA
$ip2state$?PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z DB 0aH
	DB	00H
	DB	00H
	DB	0b2H
	DB	04H
	DB	09aH
	DB	06H
	DB	'5', 02H
	DB	04H
	DB	016H
	DB	02H
$unwind$?dtor$0@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?PathRootExists@@YA_NPEBD@Z DD 023319H
	DD	07006f20dH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?PathRootExists@@YA_NPEBD@Z
	DD	072H
$stateUnwindMap$?PathRootExists@@YA_NPEBD@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??PathRootExists@@YA_NPEBD@Z@4HA
$ip2state$?PathRootExists@@YA_NPEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	0c6H
	DB	02H
	DB	'd'
	DB	00H
$cppxdata$?PathRootExists@@YA_NPEB_W@Z DB 08H
	DD	imagerel $stateUnwindMap$?PathRootExists@@YA_NPEB_W@Z
	DD	imagerel $ip2state$?PathRootExists@@YA_NPEB_W@Z
$stateUnwindMap$?PathRootExists@@YA_NPEB_W@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??PathRootExists@@YA_NPEB_W@Z@4HA
$unwind$?dtor$0@?0??PathRootExists@@YA_NPEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?PathRootExists@@YA_NPEB_W@Z DD 023319H
	DD	07006f20dH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?PathRootExists@@YA_NPEB_W@Z
	DD	072H
$ip2state$?PathRootExists@@YA_NPEB_W@Z DB 06H
	DB	00H
	DB	00H
	DB	0c6H
	DB	02H
	DB	'd'
	DB	00H
	ORG $+1
$unwind$?dtor$0@?0??PathRootExists@@YA_NPEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?getRealWindowsVersion@@YAHPEAK00@Z DD 034019H
	DD	0300117H
	DD	07010H
	DD	imagerel __GSHandlerCheck
	DD	0178H
$unwind$??$rgy_reduce@H@@YAXAEAU?$pair@HH@std@@@Z DD 021e01H
	DD	07006320aH
$unwind$??$rgy_reduce@H@@YAXAEAH0@Z DD 022301H
	DD	0700b520fH
$unwind$??$rgy_gcd@H@@YAHHH@Z DD 022001H
	DD	07009120dH
xdata	ENDS
CONST	SEGMENT
	ORG $+3
?wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$rtcName$0 DB 074H ; wstring_to_string
	DB	06dH
	DB	070H
	DB	00H
?wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$rtcVarDesc DD 058H ; wstring_to_string
	DD	020H
	DQ	FLAT:?wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$rtcName$0
	ORG $+48
?wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$rtcFrameData DD 01H ; wstring_to_string
	DD	00H
	DQ	FLAT:?wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$rtcVarDesc
?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z$rtcName$0 DB 073H ; wstring_to_string
	DB	074H
	DB	072H
	DB	00H
?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z$rtcName$0 DB 073H ; wstring_to_string
	DB	074H
	DB	072H
	DB	00H
?char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z$rtcName$0 DB 074H ; char_to_wstring
	DB	06dH
	DB	070H
	DB	00H
	ORG $+4
?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z$rtcVarDesc DD 028H ; wstring_to_string
	DD	028H
	DQ	FLAT:?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z$rtcName$0
	ORG $+48
?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z$rtcFrameData DD 01H ; wstring_to_string
	DD	00H
	DQ	FLAT:?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z$rtcVarDesc
?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z$rtcVarDesc DD 028H ; wstring_to_string
	DD	028H
	DQ	FLAT:?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z$rtcName$0
	ORG $+48
?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z$rtcFrameData DD 01H ; wstring_to_string
	DD	00H
	DQ	FLAT:?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z$rtcVarDesc
?char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z$rtcVarDesc DD 048H ; char_to_wstring
	DD	020H
	DQ	FLAT:?char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z$rtcName$0
	ORG $+48
?char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z$rtcFrameData DD 01H ; char_to_wstring
	DD	00H
	DQ	FLAT:?char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z$rtcVarDesc
?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z$rtcName$0 DB 077H ; char_to_wstring
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+3
?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z$rtcFrameData DD 01H ; char_to_wstring
	DD	00H
	DQ	FLAT:?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z$rtcVarDesc
?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z$rtcName$0 DB 077H ; char_to_wstring
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+3
?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z$rtcVarDesc DD 028H ; char_to_wstring
	DD	028H
	DQ	FLAT:?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z$rtcName$0
	ORG $+48
?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z$rtcVarDesc DD 028H ; char_to_wstring
	DD	028H
	DQ	FLAT:?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z$rtcName$0
	ORG $+48
?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z$rtcFrameData DD 01H ; char_to_wstring
	DD	00H
	DQ	FLAT:?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z$rtcVarDesc
?strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ$rtcName$0 DB 061H ; strsprintf
	DB	072H
	DB	067H
	DB	073H
	DB	00H
	ORG $+3
?strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ$rtcName$1 DB 062H ; strsprintf
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
?strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ$rtcName$2 DB 072H ; strsprintf
	DB	065H
	DB	074H
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+1
?strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ$rtcFrameData DD 03H ; strsprintf
	DD	00H
	DQ	FLAT:?strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ$rtcVarDesc
?GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z$rtcName$0 DB 062H ; GetFullPath
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
?strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ$rtcVarDesc DD 088H ; strsprintf
	DD	028H
	DQ	FLAT:?strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ$rtcName$2
	DD	048H
	DD	020H
	DQ	FLAT:?strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:?strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ$rtcName$0
	ORG $+144
?GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z$rtcVarDesc DD 028H ; GetFullPath
	DD	020H
	DQ	FLAT:?GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z$rtcName$0
	ORG $+48
?GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z$rtcFrameData DD 01H ; GetFullPath
	DD	00H
	DQ	FLAT:?GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z$rtcVarDesc
?rgy_get_filesize@@YA_NPEB_WPEA_K@Z$rtcName$0 DB 066H	; rgy_get_filesize
	DB	064H
	DB	00H
	ORG $+5
?rgy_get_filesize@@YA_NPEB_WPEA_K@Z$rtcFrameData DD 01H	; rgy_get_filesize
	DD	00H
	DQ	FLAT:?rgy_get_filesize@@YA_NPEB_WPEA_K@Z$rtcVarDesc
?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z$rtcName$0 DB 06eH ; PathRemoveFileSpecFixed
	DB	065H
	DB	077H
	DB	050H
	DB	061H
	DB	074H
	DB	068H
	DB	00H
?rgy_get_filesize@@YA_NPEB_WPEA_K@Z$rtcVarDesc DD 028H	; rgy_get_filesize
	DD	024H
	DQ	FLAT:?rgy_get_filesize@@YA_NPEB_WPEA_K@Z$rtcName$0
	ORG $+48
?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z$rtcVarDesc DD 038H ; PathRemoveFileSpecFixed
	DD	028H
	DQ	FLAT:?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z$rtcName$0
	ORG $+48
?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z$rtcFrameData DD 01H ; PathRemoveFileSpecFixed
	DD	00H
	DQ	FLAT:?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z$rtcVarDesc
?PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z$rtcName$0 DB 062H ; PathCombineS
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
?PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z$rtcFrameData DD 01H ; PathCombineS
	DD	00H
	DQ	FLAT:?PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z$rtcVarDesc
?PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z$rtcName$0 DB 062H ; PathCombineS
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
?PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z$rtcVarDesc DD 028H ; PathCombineS
	DD	020H
	DQ	FLAT:?PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z$rtcName$0
	ORG $+48
?PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z$rtcVarDesc DD 028H ; PathCombineS
	DD	020H
	DQ	FLAT:?PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z$rtcName$0
	ORG $+48
?PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z$rtcFrameData DD 01H ; PathCombineS
	DD	00H
	DQ	FLAT:?PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z$rtcVarDesc
?CreateDirectoryRecursive@@YA_NPEB_W@Z$rtcName$0 DB 072H ; CreateDirectoryRecursive
	DB	065H
	DB	074H
	DB	00H
?get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z$rtcName$0 DB 06cH ; get_file_list
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+7
?CreateDirectoryRecursive@@YA_NPEB_W@Z$rtcVarDesc DD 028H ; CreateDirectoryRecursive
	DD	030H
	DQ	FLAT:?CreateDirectoryRecursive@@YA_NPEB_W@Z$rtcName$0
	ORG $+48
?CreateDirectoryRecursive@@YA_NPEB_W@Z$rtcFrameData DD 01H ; CreateDirectoryRecursive
	DD	00H
	DQ	FLAT:?CreateDirectoryRecursive@@YA_NPEB_W@Z$rtcVarDesc
?get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z$rtcName$1 DB 062H ; get_file_list
	DB	075H
	DB	066H
	DB	00H
?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z$rtcName$0 DB 073H ; tchar_to_string
	DB	074H
	DB	072H
	DB	00H
?get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z$rtcName$2 DB 077H ; get_file_list
	DB	069H
	DB	06eH
	DB	033H
	DB	032H
	DB	066H
	DB	064H
	DB	00H
?get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z$rtcName$3 DB 062H ; get_file_list
	DB	075H
	DB	066H
	DB	032H
	DB	00H
	ORG $+3
?get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z$rtcFrameData DD 04H ; get_file_list
	DD	00H
	DQ	FLAT:?get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z$rtcVarDesc
?getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcName$0 DB 065H ; getExeDir
	DB	078H
	DB	065H
	DB	050H
	DB	061H
	DB	074H
	DB	068H
	DB	00H
?get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z$rtcVarDesc DD 0610H ; get_file_list
	DD	0400H
	DQ	FLAT:?get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z$rtcName$3
	DD	04b0H
	DD	0140H
	DQ	FLAT:?get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z$rtcName$2
	DD	070H
	DD	0400H
	DQ	FLAT:?get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z$rtcName$1
	DD	028H
	DD	020H
	DQ	FLAT:?get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z$rtcName$0
	ORG $+192
?getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcVarDesc DD 030H ; getExeDir
	DD	0400H
	DQ	FLAT:?getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcName$0
	ORG $+48
?getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcFrameData DD 01H ; getExeDir
	DD	00H
	DQ	FLAT:?getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcVarDesc
?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z$rtcVarDesc DD 028H ; tchar_to_string
	DD	028H
	DQ	FLAT:?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z$rtcName$0
	ORG $+48
?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z$rtcFrameData DD 01H ; tchar_to_string
	DD	00H
	DQ	FLAT:?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z$rtcVarDesc
?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z$rtcName$0 DB 073H ; tchar_to_string
	DB	074H
	DB	072H
	DB	00H
?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z$rtcName$0 DB 074H ; char_to_tstring
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z$rtcVarDesc DD 028H ; tchar_to_string
	DD	028H
	DQ	FLAT:?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z$rtcName$0
	ORG $+48
?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z$rtcFrameData DD 01H ; tchar_to_string
	DD	00H
	DQ	FLAT:?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z$rtcVarDesc
?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z$rtcVarDesc DD 028H ; char_to_tstring
	DD	028H
	DQ	FLAT:?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z$rtcName$0
	ORG $+48
?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z$rtcFrameData DD 01H ; char_to_tstring
	DD	00H
	DQ	FLAT:?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z$rtcVarDesc
?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z$rtcName$0 DB 074H ; char_to_tstring
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+3
?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z$rtcFrameData DD 01H ; char_to_tstring
	DD	00H
	DQ	FLAT:?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z$rtcVarDesc
?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z$rtcName$0 DB 074H ; wstring_to_tstring
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+3
?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z$rtcVarDesc DD 028H ; char_to_tstring
	DD	028H
	DQ	FLAT:?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z$rtcName$0
	ORG $+48
?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z$rtcVarDesc DD 028H ; wstring_to_tstring
	DD	028H
	DQ	FLAT:?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z$rtcName$0
	ORG $+48
?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z$rtcFrameData DD 01H ; wstring_to_tstring
	DD	00H
	DQ	FLAT:?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z$rtcVarDesc
?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z$rtcName$0 DB 074H ; wstring_to_tstring
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+3
?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z$rtcFrameData DD 01H ; wstring_to_tstring
	DD	00H
	DQ	FLAT:?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z$rtcVarDesc
?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ$rtcName$0 DB 061H ; strsprintf
	DB	072H
	DB	067H
	DB	073H
	DB	00H
	ORG $+3
?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z$rtcVarDesc DD 028H ; wstring_to_tstring
	DD	028H
	DQ	FLAT:?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z$rtcName$0
	ORG $+48
?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ$rtcName$1 DB 062H ; strsprintf
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ$rtcName$2 DB 072H ; strsprintf
	DB	065H
	DB	074H
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+1
?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ$rtcVarDesc DD 088H ; strsprintf
	DD	028H
	DQ	FLAT:?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ$rtcName$2
	DD	048H
	DD	020H
	DQ	FLAT:?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ$rtcName$0
	ORG $+144
?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ$rtcFrameData DD 03H ; strsprintf
	DD	00H
	DQ	FLAT:?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ$rtcVarDesc
?split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z$rtcName$0 DB 072H ; split
	DB	065H
	DB	073H
	DB	00H
?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z$rtcName$0 DB 072H ; split
	DB	065H
	DB	073H
	DB	00H
?split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z$rtcName$1 DB 073H ; split
	DB	065H
	DB	067H
	DB	06dH
	DB	065H
	DB	06eH
	DB	074H
	DB	00H
?split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z$rtcName$2 DB 073H ; split
	DB	065H
	DB	067H
	DB	06dH
	DB	065H
	DB	06eH
	DB	074H
	DB	00H
?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z$rtcName$1 DB 073H ; split
	DB	065H
	DB	067H
	DB	06dH
	DB	065H
	DB	06eH
	DB	074H
	DB	00H
?split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z$rtcVarDesc DD 0e8H ; split
	DD	028H
	DQ	FLAT:?split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z$rtcName$2
	DD	088H
	DD	028H
	DQ	FLAT:?split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z$rtcName$1
	DD	038H
	DD	020H
	DQ	FLAT:?split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z$rtcName$0
	ORG $+144
?split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z$rtcFrameData DD 03H ; split
	DD	00H
	DQ	FLAT:?split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z$rtcVarDesc
?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z$rtcName$2 DB 073H ; split
	DB	065H
	DB	067H
	DB	06dH
	DB	065H
	DB	06eH
	DB	074H
	DB	00H
?lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z$rtcName$0 DB 072H ; lstrip
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+1
?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z$rtcVarDesc DD 0e8H ; split
	DD	028H
	DQ	FLAT:?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z$rtcName$2
	DD	088H
	DD	028H
	DQ	FLAT:?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z$rtcName$1
	DD	038H
	DD	020H
	DQ	FLAT:?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z$rtcName$0
	ORG $+144
?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z$rtcFrameData DD 03H ; split
	DD	00H
	DQ	FLAT:?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z$rtcVarDesc
?lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z$rtcVarDesc DD 028H ; lstrip
	DD	028H
	DQ	FLAT:?lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z$rtcName$0
	ORG $+48
?lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z$rtcFrameData DD 01H ; lstrip
	DD	00H
	DQ	FLAT:?lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z$rtcVarDesc
?rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z$rtcName$0 DB 072H ; rstrip
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+1
?rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z$rtcFrameData DD 01H ; rstrip
	DD	00H
	DQ	FLAT:?rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z$rtcVarDesc
?trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z$rtcName$0 DB 072H ; trim
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+1
?rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z$rtcVarDesc DD 028H ; rstrip
	DD	028H
	DQ	FLAT:?rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z$rtcName$0
	ORG $+48
?trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z$rtcVarDesc DD 028H ; trim
	DD	028H
	DQ	FLAT:?trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z$rtcName$0
	ORG $+48
?trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z$rtcFrameData DD 01H ; trim
	DD	00H
	DQ	FLAT:?trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z$rtcVarDesc
?lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z$rtcName$0 DB 072H ; lstrip
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+1
?lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z$rtcFrameData DD 01H ; lstrip
	DD	00H
	DQ	FLAT:?lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z$rtcVarDesc
?rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z$rtcName$0 DB 072H ; rstrip
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+1
?lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z$rtcVarDesc DD 028H ; lstrip
	DD	028H
	DQ	FLAT:?lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z$rtcName$0
	ORG $+48
?rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z$rtcVarDesc DD 028H ; rstrip
	DD	028H
	DQ	FLAT:?rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z$rtcName$0
	ORG $+48
?rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z$rtcFrameData DD 01H ; rstrip
	DD	00H
	DQ	FLAT:?rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z$rtcVarDesc
?trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z$rtcName$0 DB 072H ; trim
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+1
?trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z$rtcFrameData DD 01H ; trim
	DD	00H
	DQ	FLAT:?trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z$rtcVarDesc
?GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z$rtcName$0 DB 062H ; GetFullPath
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
?trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z$rtcVarDesc DD 028H ; trim
	DD	028H
	DQ	FLAT:?trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z$rtcName$0
	ORG $+48
?GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z$rtcVarDesc DD 028H ; GetFullPath
	DD	020H
	DQ	FLAT:?GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z$rtcName$0
	ORG $+48
?GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z$rtcFrameData DD 01H ; GetFullPath
	DD	00H
	DQ	FLAT:?GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z$rtcVarDesc
?rgy_get_filesize@@YA_NPEBDPEA_K@Z$rtcName$0 DB 066H	; rgy_get_filesize
	DB	064H
	DB	00H
	ORG $+5
?rgy_get_filesize@@YA_NPEBDPEA_K@Z$rtcFrameData DD 01H	; rgy_get_filesize
	DD	00H
	DQ	FLAT:?rgy_get_filesize@@YA_NPEBDPEA_K@Z$rtcVarDesc
?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$rtcName$0 DB 06eH ; PathRemoveFileSpecFixed
	DB	065H
	DB	077H
	DB	050H
	DB	061H
	DB	074H
	DB	068H
	DB	00H
?rgy_get_filesize@@YA_NPEBDPEA_K@Z$rtcVarDesc DD 028H	; rgy_get_filesize
	DD	024H
	DQ	FLAT:?rgy_get_filesize@@YA_NPEBDPEA_K@Z$rtcName$0
	ORG $+48
?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$rtcVarDesc DD 038H ; PathRemoveFileSpecFixed
	DD	028H
	DQ	FLAT:?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$rtcName$0
	ORG $+48
?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$rtcFrameData DD 01H ; PathRemoveFileSpecFixed
	DD	00H
	DQ	FLAT:?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$rtcVarDesc
?CreateDirectoryRecursive@@YA_NPEBD@Z$rtcName$0 DB 072H	; CreateDirectoryRecursive
	DB	065H
	DB	074H
	DB	00H
?print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z$rtcName$0 DB 066H ; print_time
	DB	072H
	DB	061H
	DB	063H
	DB	00H
	ORG $+7
?CreateDirectoryRecursive@@YA_NPEBD@Z$rtcVarDesc DD 028H ; CreateDirectoryRecursive
	DD	030H
	DQ	FLAT:?CreateDirectoryRecursive@@YA_NPEBD@Z$rtcName$0
	ORG $+48
?CreateDirectoryRecursive@@YA_NPEBD@Z$rtcFrameData DD 01H ; CreateDirectoryRecursive
	DD	00H
	DQ	FLAT:?CreateDirectoryRecursive@@YA_NPEBD@Z$rtcVarDesc
?print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z$rtcVarDesc DD 048H ; print_time
	DD	028H
	DQ	FLAT:?print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z$rtcName$0
	ORG $+48
?print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z$rtcFrameData DD 01H ; print_time
	DD	00H
	DQ	FLAT:?print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z$rtcVarDesc
?rgy_print_stderr@@YAHHPEBDPEAX@Z$rtcName$0 DB 063H	; rgy_print_stderr
	DB	073H
	DB	062H
	DB	069H
	DB	00H
	ORG $+3
?rgy_print_stderr@@YAHHPEBDPEAX@Z$rtcFrameData DD 01H	; rgy_print_stderr
	DD	00H
	DQ	FLAT:?rgy_print_stderr@@YAHHPEBDPEAX@Z$rtcVarDesc
?getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z$rtcName$0 DB 069H ; getOSVersion
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+3
?rgy_print_stderr@@YAHHPEBDPEAX@Z$rtcVarDesc DD 028H	; rgy_print_stderr
	DD	016H
	DQ	FLAT:?rgy_print_stderr@@YAHHPEBDPEAX@Z$rtcName$0
	ORG $+48
?getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z$rtcName$1 DB 069H ; getOSVersion
	DB	06eH
	DB	066H
	DB	06fH
	DB	065H
	DB	078H
	DB	00H
	ORG $+1
?getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z$rtcFrameData DD 02H ; getOSVersion
	DD	00H
	DQ	FLAT:?getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z$rtcVarDesc
?rgy_is_64bit_os@@YAHXZ$rtcName$0 DB 073H		; rgy_is_64bit_os
	DB	069H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+2
?getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z$rtcVarDesc DD 0180H ; getOSVersion
	DD	011cH
	DQ	FLAT:?getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z$rtcName$1
	DD	040H
	DD	0114H
	DQ	FLAT:?getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z$rtcName$0
	ORG $+96
?rgy_is_64bit_os@@YAHXZ$rtcVarDesc DD 028H		; rgy_is_64bit_os
	DD	030H
	DQ	FLAT:?rgy_is_64bit_os@@YAHXZ$rtcName$0
	ORG $+48
?rgy_is_64bit_os@@YAHXZ$rtcFrameData DD 01H		; rgy_is_64bit_os
	DD	00H
	DQ	FLAT:?rgy_is_64bit_os@@YAHXZ$rtcVarDesc
?getPhysicalRamSize@@YA_KPEA_K@Z$rtcName$0 DB 06dH	; getPhysicalRamSize
	DB	073H
	DB	065H
	DB	078H
	DB	00H
	ORG $+3
?getPhysicalRamSize@@YA_KPEA_K@Z$rtcFrameData DD 01H	; getPhysicalRamSize
	DD	00H
	DQ	FLAT:?getPhysicalRamSize@@YA_KPEA_K@Z$rtcVarDesc
?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$rtcName$0 DB 062H ; getEnviromentInfo
	DB	075H
	DB	066H
	DB	00H
	ORG $+4
?getPhysicalRamSize@@YA_KPEA_K@Z$rtcVarDesc DD 030H	; getPhysicalRamSize
	DD	040H
	DQ	FLAT:?getPhysicalRamSize@@YA_KPEA_K@Z$rtcName$0
	ORG $+48
?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$rtcName$1 DB 063H ; getEnviromentInfo
	DB	070H
	DB	075H
	DB	05fH
	DB	069H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+3
?PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z$rtcName$1 DB 062H ; PathGetRoot
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+5
?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$rtcName$2 DB 067H ; getEnviromentInfo
	DB	070H
	DB	075H
	DB	05fH
	DB	069H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+3
?PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z$rtcName$1 DB 062H ; PathGetRoot
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+5
?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$rtcName$3 DB 055H ; getEnviromentInfo
	DB	073H
	DB	065H
	DB	064H
	DB	052H
	DB	061H
	DB	06dH
	DB	053H
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+4
?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$rtcName$4 DB 06fH ; getEnviromentInfo
	DB	073H
	DB	076H
	DB	065H
	DB	072H
	DB	073H
	DB	069H
	DB	06fH
	DB	06eH
	DB	069H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+2
?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$rtcName$5 DB 06fH ; getEnviromentInfo
	DB	073H
	DB	076H
	DB	065H
	DB	072H
	DB	073H
	DB	069H
	DB	06fH
	DB	06eH
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+3
?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$rtcName$6 DB 063H ; getEnviromentInfo
	DB	070H
	DB	075H
	DB	069H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$rtcName$7 DB 077H ; getEnviromentInfo
	DB	072H
	DB	069H
	DB	074H
	DB	065H
	DB	05fH
	DB	072H
	DB	077H
	DB	05fH
	DB	073H
	DB	070H
	DB	065H
	DB	065H
	DB	064H
	DB	00H
	ORG $+1
?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$rtcFrameData DD 08H ; getEnviromentInfo
	DD	00H
	DQ	FLAT:?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$rtcVarDesc
?getRealWindowsVersion@@YAHPEAK00@Z$rtcName$0 DB 06fH	; getRealWindowsVersion
	DB	073H
	DB	076H
	DB	065H
	DB	072H
	DB	00H
	ORG $+2
?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$rtcVarDesc DD 0b38H ; getEnviromentInfo
	DD	08H
	DQ	FLAT:?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$rtcName$7
	DD	0ab0H
	DD	070H
	DQ	FLAT:?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$rtcName$6
	DD	0a18H
	DD	028H
	DQ	FLAT:?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$rtcName$5
	DD	08e0H
	DD	011cH
	DQ	FLAT:?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$rtcName$4
	DD	08b8H
	DD	08H
	DQ	FLAT:?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$rtcName$3
	DD	04a0H
	DD	0400H
	DQ	FLAT:?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$rtcName$2
	DD	080H
	DD	0400H
	DQ	FLAT:?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$rtcName$1
	DD	038H
	DD	028H
	DQ	FLAT:?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$rtcName$0
	ORG $+384
?PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z$rtcName$0 DB 066H ; PathGetRoot
	DB	075H
	DB	06cH
	DB	06cH
	DB	070H
	DB	061H
	DB	074H
	DB	068H
	DB	00H
	ORG $+7
?PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z$rtcVarDesc DD 068H ; PathGetRoot
	DD	020H
	DQ	FLAT:?PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z$rtcName$1
	DD	028H
	DD	028H
	DQ	FLAT:?PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z$rtcName$0
	ORG $+96
?PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z$rtcFrameData DD 02H ; PathGetRoot
	DD	00H
	DQ	FLAT:?PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z$rtcVarDesc
?PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z$rtcName$0 DB 066H ; PathGetRoot
	DB	075H
	DB	06cH
	DB	06cH
	DB	070H
	DB	061H
	DB	074H
	DB	068H
	DB	00H
	ORG $+7
?PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z$rtcVarDesc DD 068H ; PathGetRoot
	DD	020H
	DQ	FLAT:?PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z$rtcName$1
	DD	028H
	DD	028H
	DQ	FLAT:?PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z$rtcName$0
	ORG $+96
?PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z$rtcFrameData DD 02H ; PathGetRoot
	DD	00H
	DQ	FLAT:?PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z$rtcVarDesc
?getRealWindowsVersion@@YAHPEAK00@Z$rtcVarDesc DD 030H	; getRealWindowsVersion
	DD	011cH
	DQ	FLAT:?getRealWindowsVersion@@YAHPEAK00@Z$rtcName$0
	ORG $+48
?getRealWindowsVersion@@YAHPEAK00@Z$rtcFrameData DD 01H	; getRealWindowsVersion
	DD	00H
	DQ	FLAT:?getRealWindowsVersion@@YAHPEAK00@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_tcsicmp DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_tcscmp DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_tcschr DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAX_K@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z$rtcName$0 DB 05fH ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
	DB	04dH
	DB	061H
	DB	073H
	DB	06bH
	DB	065H
	DB	064H
	DB	00H
	ORG $+8
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z$rtcVarDesc DD 028H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
	DD	08H
	DQ	FLAT:?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z$rtcName$0
	ORG $+48
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z$rtcFrameData DD 01H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
	DD	00H
	DQ	FLAT:?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$allocator@_W@2@XZ DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z DB 04H
	DB	00H
	DB	00H
	DB	0c6H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z DB 08H
	DD	imagerel $stateUnwindMap$?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z
	DD	imagerel $ip2state$?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z DD 022d11H
	DD	070157219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KQEB_W_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KQEB_W_K@Z DB 040H
	DD	imagerel $ip2state$?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KQEB_W_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KQEB_W_K@Z DD 022819H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KQEB_W_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KQEB_W_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KQEB_W_K@Z DB 040H
	DD	imagerel $ip2state$?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KQEB_W_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KQEB_W_K@Z DD 022819H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KQEB_W_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?find@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?find@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z DB 040H
	DD	imagerel $ip2state$?find@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?find@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z DD 022819H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?find@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006b20aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ$rtcName$0 DB 05fH ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	DB	041H
	DB	06cH
	DB	06cH
	DB	06fH
	DB	063H
	DB	05fH
	DB	06dH
	DB	061H
	DB	078H
	DB	00H
	ORG $+5
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ$rtcVarDesc DD 028H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	DD	08H
	DQ	FLAT:?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ$rtcName$0
	ORG $+48
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ$rtcFrameData DD 01H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	DD	00H
	DQ	FLAT:?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ DB 040H
	DD	imagerel $ip2state$?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_KQEB_W0@Z DD 033301H
	DD	014011cH
	DD	07015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0AEBV12@@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?clear@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?clear@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ DB 040H
	DD	imagerel $ip2state$?clear@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?clear@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@QEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'<'
	DB	02H
	DB	0aeH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DD 021e11H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	DB	053H
	DB	031H
	DB	030H
	DB	00H
	ORG $+11
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	DD	01H
	DQ	FLAT:??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	DD	00H
	DQ	FLAT:??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Construct_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z DD 022901H
	DD	0700bf212H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Construct_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z$rtcName$0 DB 05fH ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct_lv_contents
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	061H
	DB	072H
	DB	072H
	DB	061H
	DB	079H
	DB	00H
	ORG $+5
?_Construct_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z$rtcVarDesc DD 058H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct_lv_contents
	DD	08H
	DQ	FLAT:?_Construct_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z$rtcName$0
	ORG $+48
?_Construct_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z$rtcFrameData DD 01H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct_lv_contents
	DD	00H
	DQ	FLAT:?_Construct_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DB 040H
	DD	imagerel $ip2state$?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Memcpy_val_from@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Memcpy_val_from@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z DB 040H
	DD	imagerel $ip2state$?_Memcpy_val_from@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Memcpy_val_from@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Memcpy_val_from@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@$$QEAV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Move_assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	094H
	DB	02H
	DB	09cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z
	DD	imagerel $ip2state$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z DB 0aH
	DB	00H
	DB	00H
	DB	'~'
	DB	02H
	DB	'~'
	DB	04H
	DB	'Z'
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z
	DD	imagerel $ip2state$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z DD 022911H
	DD	0700bf212H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z$rtcName$0 DB 024H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	DB	053H
	DB	031H
	DB	032H
	DB	00H
	ORG $+3
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z$rtcName$1 DB 05fH ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z$rtcVarDesc DD 058H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	DD	010H
	DQ	FLAT:??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z$rtcName$0
	ORG $+96
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z$rtcFrameData DD 02H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	DD	00H
	DQ	FLAT:??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	0a2H
	DB	02H
	DB	'~'
	DB	04H
	DB	'z'
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z
	DD	imagerel $ip2state$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z DD 023311H
	DD	07015f21cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z$rtcName$0 DB 024H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	DB	053H
	DB	031H
	DB	034H
	DB	00H
	ORG $+3
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z$rtcName$1 DB 05fH ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z$rtcVarDesc DD 058H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	DD	010H
	DQ	FLAT:??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z$rtcName$0
	ORG $+96
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z$rtcFrameData DD 02H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	DD	00H
	DQ	FLAT:??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'b'
	DB	02H
	DB	'd'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DD	imagerel $ip2state$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z DB 0aH
	DB	00H
	DB	00H
	DB	0b2H
	DB	02H
	DB	'~'
	DB	04H
	DB	'@'
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z DD 022911H
	DD	0700bf212H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z$rtcName$0 DB 024H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	DB	053H
	DB	031H
	DB	035H
	DB	00H
	ORG $+3
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z$rtcName$1 DB 05fH ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z$rtcVarDesc DD 058H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	DD	010H
	DQ	FLAT:??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z$rtcName$0
	ORG $+96
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z$rtcFrameData DD 02H ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	DD	00H
	DQ	FLAT:??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_K_K0@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xran@?$_String_val@U?$_Simple_types@_W@std@@@std@@SAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Check_offset@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAX_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	't'
	DB	02H
	DB	'4'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@AEBV32@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@_W@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DB	04dH
	DB	061H
	DB	073H
	DB	06bH
	DB	065H
	DB	064H
	DB	00H
	ORG $+8
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcVarDesc DD 028H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DD	08H
	DQ	FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcName$0
	ORG $+48
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DD	00H
	DQ	FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z DB 04H
	DB	00H
	DB	00H
	DB	0c6H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z DB 08H
	DD	imagerel $stateUnwindMap$?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z
	DD	imagerel $ip2state$?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z DD 022d11H
	DD	070157219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?find_last_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?find_last_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z DB 040H
	DD	imagerel $ip2state$?find_last_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?find_last_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z DD 022819H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?find_last_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?find_first_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?find_first_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z DB 040H
	DD	imagerel $ip2state$?find_first_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?find_first_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z DD 022819H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?find_first_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?find_first_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?find_first_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z DB 040H
	DD	imagerel $ip2state$?find_first_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?find_first_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z DD 022819H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?find_first_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KAEBV12@_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KAEBV12@_K@Z DB 040H
	DD	imagerel $ip2state$?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KAEBV12@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KAEBV12@_K@Z DD 022819H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KAEBV12@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006b20aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DB	041H
	DB	06cH
	DB	06cH
	DB	06fH
	DB	063H
	DB	05fH
	DB	06dH
	DB	061H
	DB	078H
	DB	00H
	ORG $+5
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcVarDesc DD 028H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DD	08H
	DQ	FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcName$0
	ORG $+48
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DD	00H
	DQ	FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DB 040H
	DD	imagerel $ip2state$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z DD 033301H
	DD	014011cH
	DD	07015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0AEBV12@@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ DB 040H
	DD	imagerel $ip2state$?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 022801H
	DD	070109214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'<'
	DB	02H
	DB	0aeH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 021e11H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	031H
	DB	036H
	DB	00H
	ORG $+11
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	01H
	DQ	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD 022901H
	DD	0700bf212H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	061H
	DB	072H
	DB	072H
	DB	061H
	DB	079H
	DB	00H
	ORG $+5
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcVarDesc DD 058H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
	DD	08H
	DQ	FLAT:?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcName$0
	ORG $+48
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
	DD	00H
	DQ	FLAT:?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DB 040H
	DD	imagerel $ip2state$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DB 040H
	DD	imagerel $ip2state$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	094H
	DB	02H
	DB	09cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 0aH
	DB	00H
	DB	00H
	DB	'~'
	DB	02H
	DB	'~'
	DB	04H
	DB	'Z'
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD 022911H
	DD	0700bf212H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	031H
	DB	038H
	DB	00H
	ORG $+3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$1 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcVarDesc DD 058H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	010H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$0
	ORG $+96
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcFrameData DD 02H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	0a2H
	DB	02H
	DB	'~'
	DB	04H
	DB	'z'
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z DD 023311H
	DD	07015f21cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	032H
	DB	030H
	DB	00H
	ORG $+3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z$rtcName$1 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z$rtcVarDesc DD 058H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	010H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z$rtcName$0
	ORG $+96
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z$rtcFrameData DD 02H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'b'
	DB	02H
	DB	'd'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DB 0aH
	DB	00H
	DB	00H
	DB	0b2H
	DB	02H
	DB	'~'
	DB	04H
	DB	'@'
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD 022911H
	DD	0700bf212H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	032H
	DB	031H
	DB	00H
	ORG $+3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcName$1 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcVarDesc DD 058H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	010H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcName$0
	ORG $+96
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcFrameData DD 02H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	't'
	DB	02H
	DB	'4'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@D@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 040H
	DD	imagerel $ip2state$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?find@?$_Narrow_char_traits@DH@std@@SAPEBDQEBD_KAEBD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?find@?$_Narrow_char_traits@DH@std@@SAPEBDQEBD_KAEBD@Z DB 040H
	DD	imagerel $ip2state$?find@?$_Narrow_char_traits@DH@std@@SAPEBDQEBD_KAEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?find@?$_Narrow_char_traits@DH@std@@SAPEBDQEBD_KAEBD@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?find@?$_Narrow_char_traits@DH@std@@SAPEBDQEBD_KAEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 040H
	DD	imagerel $ip2state$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DB 040H
	DD	imagerel $ip2state$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z DB 040H
	DD	imagerel $ip2state$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?move@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?move@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z DB 040H
	DD	imagerel $ip2state$?move@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?move@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?move@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?find@?$_WChar_traits@_W@std@@SAPEB_WPEB_W_KAEB_W@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?find@?$_WChar_traits@_W@std@@SAPEB_WPEB_W_KAEB_W@Z DB 040H
	DD	imagerel $ip2state$?find@?$_WChar_traits@_W@std@@SAPEB_WPEB_W_KAEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?find@?$_WChar_traits@_W@std@@SAPEB_WPEB_W_KAEB_W@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?find@?$_WChar_traits@_W@std@@SAPEB_WPEB_W_KAEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?copy@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?copy@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z DB 040H
	DD	imagerel $ip2state$?copy@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?copy@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?length@?$_WChar_traits@_W@std@@SA_KPEB_W@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?length@?$_WChar_traits@_W@std@@SA_KPEB_W@Z DB 040H
	DD	imagerel $ip2state$?length@?$_WChar_traits@_W@std@@SA_KPEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$_WChar_traits@_W@std@@SA_KPEB_W@Z DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?length@?$_WChar_traits@_W@std@@SA_KPEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?compare@?$_WChar_traits@_W@std@@SAHQEB_W0_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?compare@?$_WChar_traits@_W@std@@SAHQEB_W0_K@Z DB 040H
	DD	imagerel $ip2state$?compare@?$_WChar_traits@_W@std@@SAHQEB_W0_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?compare@?$_WChar_traits@_W@std@@SAHQEB_W0_K@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?compare@?$_WChar_traits@_W@std@@SAHQEB_W0_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DB 0aH
	DB	00H
	DB	00H
	DB	0d0H
	DB	02H
	DB	088H
	DB	00H
	DB	'>'
	DB	04H
	DB	01cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
	DB	036H
	DD	imagerel ?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DB 048H
	DD	imagerel $stateUnwindMap$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
	DD	imagerel $ip2state$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD 022619H
	DD	0700bd20fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$0 DB 05fH ; std::_Iterator_base12::_Adopt
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+2
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$1 DB 05fH ; std::_Iterator_base12::_Adopt
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+2
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcVarDesc DD 054H ; std::_Iterator_base12::_Adopt
	DD	04H
	DQ	FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$1
	DD	034H
	DD	04H
	DQ	FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$0
	ORG $+96
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcFrameData DD 02H ; std::_Iterator_base12::_Adopt
	DD	00H
	DQ	FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Iterator_base12@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'^'
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1_Iterator_base12@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Iterator_base12@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1_Iterator_base12@std@@QEAA@XZ
	DD	imagerel $ip2state$??1_Iterator_base12@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Iterator_base12@std@@QEAA@XZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Iterator_base12@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1_Iterator_base12@std@@QEAA@XZ$rtcName$0 DB 05fH	; std::_Iterator_base12::~_Iterator_base12
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
??1_Iterator_base12@std@@QEAA@XZ$rtcVarDesc DD 024H	; std::_Iterator_base12::~_Iterator_base12
	DD	04H
	DQ	FLAT:??1_Iterator_base12@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1_Iterator_base12@std@@QEAA@XZ$rtcFrameData DD 01H	; std::_Iterator_base12::~_Iterator_base12
	DD	00H
	DQ	FLAT:??1_Iterator_base12@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DB 06H
	DB	00H
	DB	00H
	DB	0d2H
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
	DD	imagerel $ip2state$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DD 022319H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcName$0 DB 05fH ; std::_Iterator_base12::operator=
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcVarDesc DD 024H ; std::_Iterator_base12::operator=
	DD	04H
	DQ	FLAT:??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcName$0
	ORG $+48
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcFrameData DD 01H ; std::_Iterator_base12::operator=
	DD	00H
	DQ	FLAT:??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Iterator_base12@std@@QEAA@AEBU01@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Iterator_base12@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 06H
	DB	00H
	DB	00H
	DB	'h'
	DB	02H
	DB	0c0H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 048H
	DD	imagerel $stateUnwindMap$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
	DD	imagerel $ip2state$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DD 022319H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcName$0 DB 05fH ; std::_Container_base12::_Swap_proxy_and_iterators
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcVarDesc DD 024H ; std::_Container_base12::_Swap_proxy_and_iterators
	DD	04H
	DQ	FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcName$0
	ORG $+48
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcFrameData DD 01H ; std::_Container_base12::_Swap_proxy_and_iterators
	DD	00H
	DQ	FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	't'
	DB	02H
	DB	0a6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 048H
	DD	imagerel $stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	imagerel $ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all
	DD	04H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all
	DD	00H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Convert_size@_K@std@@YA_K_K@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 021501H
	DD	070027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_array_new_length@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'`'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_alloc@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_alloc@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@AEAA@QEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DB 040H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception@std@@QEAA@AEBV01@@Z DB 040H
	DD	imagerel $ip2state$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$wmemmove DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$wmemcpy DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$wmemcmp DD 022801H
	DD	070101214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$wmemchr DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vscprintf DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vscprintf_l DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$vsprintf DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsnprintf_l DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$fprintf DD 022d01H
	DD	070159219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
fprintf$rtcName$0 DB 05fH
	DB	041H
	DB	072H
	DB	067H
	DB	04cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+7
fprintf$rtcVarDesc DD 038H
	DD	08H
	DQ	FLAT:fprintf$rtcName$0
	ORG $+48
fprintf$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:fprintf$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vfprintf_l DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?vswprintf@@YAHQEA_WQEB_WPEAD@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vscwprintf DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vscwprintf_l DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$vswprintf DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vswprintf_c_l DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__local_stdio_printf_options DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 010601H
	DD	07006H
xdata	ENDS
CRT$XCU	SEGMENT
?CspTransferList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspTransferList@@YAXXZ ; CspTransferList$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?CspColorprimList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspColorprimList@@YAXXZ ; CspColorprimList$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Emplace_back@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_back<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT

; 1580 :     void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1581 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Vals_0>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv64[rsp], rax
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	e8 00 00 00 00	 call	 ??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv64[rsp]
  00045	4c 8b c1	 mov	 r8, rcx
  00048	48 8b d0	 mov	 rdx, rax
  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00054	e8 00 00 00 00	 call	 ??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBV31@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>

; 1582 :         ++_Last;

  00059	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00062	48 83 c0 28	 add	 rax, 40			; 00000028H
  00066	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006b	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1583 :     }

  0006f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00073	5f		 pop	 rdi
  00074	c3		 ret	 0
??$_Emplace_back@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_back<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Get_unwrapped@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@@Z PROC ; std::_Get_unwrapped<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 276  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 277  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Get_unwrapped@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@@Z ENDP ; std::_Get_unwrapped<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Uninitialized_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 1600 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 1601 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1602 :     // note: only called internally from elsewhere in the STL
; 1603 :     using _Ptrval = typename _Alloc::value_type*;
; 1604 : 
; 1605 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _First$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Get_unwrapped@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@@Z ; std::_Get_unwrapped<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
  00037	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax

; 1606 :     const auto _ULast = _Get_unwrapped(_Last);

  0003c	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Last$[rsp]
  00041	e8 00 00 00 00	 call	 ??$_Get_unwrapped@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@@Z ; std::_Get_unwrapped<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
  00046	48 89 44 24 28	 mov	 QWORD PTR _ULast$[rsp], rax

; 1607 : 
; 1608 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1609 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1610 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1611 :         _Dest += _ULast - _UFirst;
; 1612 :         (void) _Al;
; 1613 :     } else {
; 1614 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

  0004b	4c 8b 84 24 88
	00 00 00	 mov	 r8, QWORD PTR _Al$[rsp]
  00053	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Dest$[rsp]
  0005b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00060	e8 00 00 00 00	 call	 ??0?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00065	90		 npad	 1

; 1615 :         for (; _UFirst != _ULast; ++_UFirst) {

  00066	eb 0e		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  00068	48 8b 44 24 20	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0006d	48 83 c0 28	 add	 rax, 40			; 00000028H
  00071	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
  00076	48 8b 44 24 28	 mov	 rax, QWORD PTR _ULast$[rsp]
  0007b	48 39 44 24 20	 cmp	 QWORD PTR _UFirst$[rsp], rax
  00080	74 11		 je	 SHORT $LN3@Uninitiali

; 1616 :             _Backout._Emplace_back(*_UFirst);

  00082	48 8b 54 24 20	 mov	 rdx, QWORD PTR _UFirst$[rsp]
  00087	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  0008c	e8 00 00 00 00	 call	 ??$_Emplace_back@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_back<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>

; 1617 :         }

  00091	eb d5		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1618 : 
; 1619 :         _Dest = _Backout._Release();

  00093	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00098	e8 00 00 00 00	 call	 ?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Release
  0009d	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR _Dest$[rsp], rax

; 1620 :     }

  000a5	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  000aa	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1621 : 
; 1622 :     return _Dest;

  000af	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR _Dest$[rsp]

; 1623 : }

  000b7	48 8b f8	 mov	 rdi, rax
  000ba	48 8b cc	 mov	 rcx, rsp
  000bd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z$rtcFrameData
  000c4	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000c9	48 8b c7	 mov	 rax, rdi
  000cc	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000d0	5f		 pop	 rdi
  000d1	c3		 ret	 0
??$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Uninitialized_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Refancy@PEAN$0A@@std@@YAPEANPEAN@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Refancy@PEAN$0A@@std@@YAPEANPEAN@Z PROC		; std::_Refancy<double *,0>, COMDAT

; 315  : _Pointer _Refancy(_Pointer _Ptr) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 316  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 317  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Refancy@PEAN$0A@@std@@YAPEANPEAN@Z ENDP		; std::_Refancy<double *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@_WAEB_W@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@QEA_WAEB_W@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@_WAEB_W@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@QEA_WAEB_W@Z PROC ; std::_Default_allocator_traits<std::allocator<wchar_t> >::construct<wchar_t,wchar_t const &>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00028	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	b9 02 00 00 00	 mov	 ecx, 2
  00032	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00037	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00041	e8 00 00 00 00	 call	 ??$forward@AEB_W@std@@YAAEB_WAEB_W@Z ; std::forward<wchar_t const &>
  00046	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004b	0f b7 00	 movzx	 eax, WORD PTR [rax]
  0004e	66 89 01	 mov	 WORD PTR [rcx], ax

; 759  :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
??$construct@_WAEB_W@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@QEA_WAEB_W@Z ENDP ; std::_Default_allocator_traits<std::allocator<wchar_t> >::construct<wchar_t,wchar_t const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEB_W@std@@YAAEB_WAEB_W@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEB_W@std@@YAAEB_WAEB_W@Z PROC		; std::forward<wchar_t const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEB_W@std@@YAAEB_WAEB_W@Z ENDP		; std::forward<wchar_t const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$?RAEANAEAN@?$less@X@std@@QEBA_NAEAN0@Z
_TEXT	SEGMENT
tv65 = 0
this$ = 32
_Left$ = 40
_Right$ = 48
??$?RAEANAEAN@?$less@X@std@@QEBA_NAEAN0@Z PROC		; std::less<void>::operator()<double &,double &>, COMDAT

; 244  :             static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right)) { // transparently apply operator< to operands

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 10	 sub	 rsp, 16
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 04 00 00 00	 mov	 ecx, 4
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 245  :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR _Right$[rsp]
  0002d	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Left$[rsp]
  00032	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [rax]
  00036	66 0f 2f 01	 comisd	 xmm0, QWORD PTR [rcx]
  0003a	76 09		 jbe	 SHORT $LN3@operator
  0003c	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv65[rsp], 1
  00043	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00045	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv65[rsp], 0
$LN4@operator:
  0004c	0f b6 04 24	 movzx	 eax, BYTE PTR tv65[rsp]

; 246  :     }

  00050	48 83 c4 10	 add	 rsp, 16
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
??$?RAEANAEAN@?$less@X@std@@QEBA_NAEAN0@Z ENDP		; std::less<void>::operator()<double &,double &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Debug_lt_pred@AEAU?$less@X@std@@AEANAEAN$0A@@std@@YA_NAEAU?$less@X@0@AEAN1@Z
_TEXT	SEGMENT
_Result$ = 48
_Pred$ = 80
_Left$ = 88
_Right$ = 96
??$_Debug_lt_pred@AEAU?$less@X@std@@AEANAEAN$0A@@std@@YA_NAEAU?$less@X@0@AEAN1@Z PROC ; std::_Debug_lt_pred<std::less<void> &,double &,double &,0>, COMDAT

; 617  :     _NOEXCEPT_COND(noexcept(_Pred(_Left, _Right)) && noexcept(_Pred(_Right, _Left))) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 618  :     // test if _Pred(_Left, _Right) and _Pred is strict weak ordering, when the arguments are the cv-same-type
; 619  :     const auto _Result = static_cast<bool>(_Pred(_Left, _Right));

  00028	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Right$[rsp]
  0002d	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Left$[rsp]
  00032	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Pred$[rsp]
  00037	e8 00 00 00 00	 call	 ??$?RAEANAEAN@?$less@X@std@@QEBA_NAEAN0@Z ; std::less<void>::operator()<double &,double &>
  0003c	90		 npad	 1
  0003d	88 44 24 30	 mov	 BYTE PTR _Result$[rsp], al

; 620  :     if (_Result) {

  00041	0f b6 44 24 30	 movzx	 eax, BYTE PTR _Result$[rsp]
  00046	85 c0		 test	 eax, eax
  00048	0f 84 95 00 00
	00		 je	 $LN8@Debug_lt_p
$LN4@Debug_lt_p:

; 621  :         _STL_VERIFY(!_Pred(_Right, _Left), "invalid comparator");

  0004e	4c 8b 44 24 58	 mov	 r8, QWORD PTR _Left$[rsp]
  00053	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Right$[rsp]
  00058	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Pred$[rsp]
  0005d	e8 00 00 00 00	 call	 ??$?RAEANAEAN@?$less@X@std@@QEBA_NAEAN0@Z ; std::less<void>::operator()<double &,double &>
  00062	90		 npad	 1
  00063	0f b6 c0	 movzx	 eax, al
  00066	85 c0		 test	 eax, eax
  00068	75 02		 jne	 SHORT $LN7@Debug_lt_p
  0006a	eb 6d		 jmp	 SHORT $LN10@Debug_lt_p
$LN7@Debug_lt_p:
  0006c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00073	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00078	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0007f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00084	45 33 c9	 xor	 r9d, r9d
  00087	41 b8 6d 02 00
	00		 mov	 r8d, 621		; 0000026dH
  0008d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00094	b9 02 00 00 00	 mov	 ecx, 2
  00099	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0009f	90		 npad	 1
  000a0	83 f8 01	 cmp	 eax, 1
  000a3	75 03		 jne	 SHORT $LN12@Debug_lt_p
  000a5	cc		 int	 3
  000a6	33 c0		 xor	 eax, eax
$LN12@Debug_lt_p:
  000a8	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000b1	41 b9 6d 02 00
	00		 mov	 r9d, 621		; 0000026dH
  000b7	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000be	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CI@JONCLBEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAb?$AAu?$AAg?$AA_?$AAl?$AAt?$AA_@
  000c5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  000cc	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000d2	90		 npad	 1
  000d3	33 c0		 xor	 eax, eax
  000d5	85 c0		 test	 eax, eax
  000d7	75 93		 jne	 SHORT $LN7@Debug_lt_p
$LN10@Debug_lt_p:
  000d9	33 c0		 xor	 eax, eax
  000db	85 c0		 test	 eax, eax
  000dd	0f 85 6b ff ff
	ff		 jne	 $LN4@Debug_lt_p
$LN8@Debug_lt_p:

; 622  :     }
; 623  : 
; 624  :     return _Result;

  000e3	0f b6 44 24 30	 movzx	 eax, BYTE PTR _Result$[rsp]

; 625  : }

  000e8	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000ec	5f		 pop	 rdi
  000ed	c3		 ret	 0
??$_Debug_lt_pred@AEAU?$less@X@std@@AEANAEAN$0A@@std@@YA_NAEAU?$less@X@0@AEAN1@Z ENDP ; std::_Debug_lt_pred<std::less<void> &,double &,double &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Move_unchecked@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Move_unchecked@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00@Z PROC ; std::_Move_unchecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT

; 2056 : _OutIt _Move_unchecked(_InIt _First, _InIt _Last, _OutIt _Dest) {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2057 :     // move [_First, _Last) to [_Dest, ...)
; 2058 :     // note: _Move_unchecked is called directly from elsewhere in the STL
; 2059 :     if constexpr (_Ptr_move_cat<_InIt, _OutIt>::_Trivially_copyable) {
; 2060 :         return _Copy_memmove(_First, _Last, _Dest);
; 2061 :     } else {
; 2062 :         for (; _First != _Last; ++_Dest, (void) ++_First) {

  00028	eb 1c		 jmp	 SHORT $LN4@Move_unche
$LN2@Move_unche:
  0002a	48 8b 44 24 40	 mov	 rax, QWORD PTR _Dest$[rsp]
  0002f	48 83 c0 28	 add	 rax, 40			; 00000028H
  00033	48 89 44 24 40	 mov	 QWORD PTR _Dest$[rsp], rax
  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR _First$[rsp]
  0003d	48 83 c0 28	 add	 rax, 40			; 00000028H
  00041	48 89 44 24 30	 mov	 QWORD PTR _First$[rsp], rax
$LN4@Move_unche:
  00046	48 8b 44 24 38	 mov	 rax, QWORD PTR _Last$[rsp]
  0004b	48 39 44 24 30	 cmp	 QWORD PTR _First$[rsp], rax
  00050	74 19		 je	 SHORT $LN3@Move_unche

; 2063 :             *_Dest = _STD move(*_First);

  00052	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00057	e8 00 00 00 00	 call	 ??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  0005c	48 8b d0	 mov	 rdx, rax
  0005f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00064	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

; 2064 :         }

  00069	eb bf		 jmp	 SHORT $LN2@Move_unche
$LN3@Move_unche:

; 2065 : 
; 2066 :         return _Dest;

  0006b	48 8b 44 24 40	 mov	 rax, QWORD PTR _Dest$[rsp]

; 2067 :     }
; 2068 : }

  00070	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00074	5f		 pop	 rdi
  00075	c3		 ret	 0
??$_Move_unchecked@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00@Z ENDP ; std::_Move_unchecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Move_backward_unchecked@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Move_backward_unchecked@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00@Z PROC ; std::_Move_backward_unchecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT

; 2136 : _BidIt2 _Move_backward_unchecked(_BidIt1 _First, _BidIt1 _Last, _BidIt2 _Dest) {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
$LN2@Move_backw:

; 2137 :     // move [_First, _Last) backwards to [..., _Dest)
; 2138 :     // note: _Move_backward_unchecked is called directly from elsewhere in the STL
; 2139 :     if constexpr (_Ptr_move_cat<_BidIt1, _BidIt2>::_Trivially_copyable) {
; 2140 :         return _Copy_backward_memmove(_First, _Last, _Dest);
; 2141 :     } else {
; 2142 :         while (_First != _Last) {

  00028	48 8b 44 24 38	 mov	 rax, QWORD PTR _Last$[rsp]
  0002d	48 39 44 24 30	 cmp	 QWORD PTR _First$[rsp], rax
  00032	74 35		 je	 SHORT $LN3@Move_backw

; 2143 :             *--_Dest = _STD move(*--_Last);

  00034	48 8b 44 24 38	 mov	 rax, QWORD PTR _Last$[rsp]
  00039	48 83 e8 28	 sub	 rax, 40			; 00000028H
  0003d	48 89 44 24 38	 mov	 QWORD PTR _Last$[rsp], rax
  00042	48 8b 44 24 40	 mov	 rax, QWORD PTR _Dest$[rsp]
  00047	48 83 e8 28	 sub	 rax, 40			; 00000028H
  0004b	48 89 44 24 40	 mov	 QWORD PTR _Dest$[rsp], rax
  00050	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Last$[rsp]
  00055	e8 00 00 00 00	 call	 ??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  0005a	48 8b d0	 mov	 rdx, rax
  0005d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00062	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

; 2144 :         }

  00067	eb bf		 jmp	 SHORT $LN2@Move_backw
$LN3@Move_backw:

; 2145 : 
; 2146 :         return _Dest;

  00069	48 8b 44 24 40	 mov	 rax, QWORD PTR _Dest$[rsp]

; 2147 :     }
; 2148 : }

  0006e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00072	5f		 pop	 rdi
  00073	c3		 ret	 0
??$_Move_backward_unchecked@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00@Z ENDP ; std::_Move_backward_unchecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Ucopy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBV21@0PEAV21@@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
??$_Ucopy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBV21@0PEAV21@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>, COMDAT

; 1543 :     pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Dest) { // copy [_First, _Last) to raw _Dest, using allocator

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1544 :         return _Uninitialized_copy(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_copy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Uninitialized_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1545 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Ucopy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBV21@0PEAV21@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$distance@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA_JPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
??$distance@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA_JPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::distance<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>, COMDAT

; 781  : _NODISCARD _CONSTEXPR17 _Iter_diff_t<_InIt> distance(_InIt _First, _InIt _Last) { // return distance between iterators

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 782  :     if constexpr (_Is_random_iter_v<_InIt>) {
; 783  :         return _Last - _First; // assume the iterator will do debug checking

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR _First$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Last$[rsp]
  00015	48 2b c8	 sub	 rcx, rax
  00018	48 8b c1	 mov	 rax, rcx
  0001b	48 99		 cdq
  0001d	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00022	48 f7 f9	 idiv	 rcx

; 784  :     } else {
; 785  :         _Adl_verify_range(_First, _Last);
; 786  :         auto _UFirst             = _Get_unwrapped(_First);
; 787  :         const auto _ULast        = _Get_unwrapped(_Last);
; 788  :         _Iter_diff_t<_InIt> _Off = 0;
; 789  :         for (; _UFirst != _ULast; ++_UFirst) {
; 790  :             ++_Off;
; 791  :         }
; 792  : 
; 793  :         return _Off;
; 794  :     }
; 795  : }

  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
??$distance@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA_JPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::distance<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@N@std@@YAPEANPEAN@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@N@std@@YAPEANPEAN@Z PROC			; std::_Unfancy<double>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@N@std@@YAPEANPEAN@Z ENDP			; std::_Unfancy<double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Emplace_back@AEB_W@?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAAXAEB_W@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@AEB_W@?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAAXAEB_W@Z PROC ; std::_Uninitialized_backout_al<std::allocator<wchar_t> >::_Emplace_back<wchar_t const &>, COMDAT

; 1580 :     void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1581 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Vals_0>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@AEB_W@std@@YAAEB_WAEB_W@Z ; std::forward<wchar_t const &>
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv64[rsp], rax
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	e8 00 00 00 00	 call	 ??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z ; std::_Unfancy<wchar_t>
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv64[rsp]
  00045	4c 8b c1	 mov	 r8, rcx
  00048	48 8b d0	 mov	 rdx, rax
  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00054	e8 00 00 00 00	 call	 ??$construct@_WAEB_W@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@QEA_WAEB_W@Z ; std::_Default_allocator_traits<std::allocator<wchar_t> >::construct<wchar_t,wchar_t const &>

; 1582 :         ++_Last;

  00059	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00062	48 83 c0 02	 add	 rax, 2
  00066	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006b	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1583 :     }

  0006f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00073	5f		 pop	 rdi
  00074	c3		 ret	 0
??$_Emplace_back@AEB_W@?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAAXAEB_W@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<wchar_t> >::_Emplace_back<wchar_t const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAAPEA_WXZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAAPEA_WXZ PROC ; std::_Uninitialized_backout_al<std::allocator<wchar_t> >::_Release, COMDAT

; 1585 :     pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1586 :         _First = _Last;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00010	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00014	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1587 :         return _Last;

  00017	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1588 :     }

  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
?_Release@?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAAPEA_WXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<wchar_t> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<wchar_t> >::~_Uninitialized_backout_al<std::allocator<wchar_t> >, COMDAT

; 1575 :     ~_Uninitialized_backout_al() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1576 :         _Destroy_range(_First, _Last, _Al);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	4c 8b 40 10	 mov	 r8, QWORD PTR [rax+16]
  00027	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00038	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@_W@std@@@std@@YAXPEA_WQEA_WAEAV?$allocator@_W@0@@Z ; std::_Destroy_range<std::allocator<wchar_t> >

; 1577 :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<wchar_t> >::~_Uninitialized_backout_al<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAA@PEA_WAEAV?$allocator@_W@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAA@PEA_WAEAV?$allocator@_W@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<wchar_t> >::_Uninitialized_backout_al<std::allocator<wchar_t> >, COMDAT

; 1570 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00027	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  0002b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00035	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00039	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
??0?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAA@PEA_WAEAV?$allocator@_W@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<wchar_t> >::_Uninitialized_backout_al<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Emplace_back@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_back<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 1580 :     void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1581 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Vals_0>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv64[rsp], rax
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	e8 00 00 00 00	 call	 ??$_Unfancy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv64[rsp]
  00045	4c 8b c1	 mov	 r8, rcx
  00048	48 8b d0	 mov	 rdx, rax
  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00054	e8 00 00 00 00	 call	 ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV31@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >

; 1582 :         ++_Last;

  00059	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00062	48 83 c0 28	 add	 rax, 40			; 00000028H
  00066	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006b	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1583 :     }

  0006f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00073	5f		 pop	 rdi
  00074	c3		 ret	 0
??$_Emplace_back@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_back<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Release, COMDAT

; 1585 :     pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1586 :         _First = _Last;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00010	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00014	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1587 :         return _Last;

  00017	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1588 :     }

  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 1575 :     ~_Uninitialized_backout_al() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1576 :         _Destroy_range(_First, _Last, _Al);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	4c 8b 40 10	 mov	 r8, QWORD PTR [rax+16]
  00027	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00038	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >

; 1577 :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 1570 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00027	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  0002b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00035	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00039	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
??0?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Get_unwrapped@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@@Z PROC ; std::_Get_unwrapped<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 276  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 277  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Get_unwrapped@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@@Z ENDP ; std::_Get_unwrapped<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Emplace_back@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_back<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 1580 :     void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1581 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Vals_0>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv64[rsp], rax
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	e8 00 00 00 00	 call	 ??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv64[rsp]
  00045	4c 8b c1	 mov	 r8, rcx
  00048	48 8b d0	 mov	 rdx, rax
  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00054	e8 00 00 00 00	 call	 ??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV31@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 1582 :         ++_Last;

  00059	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00062	48 83 c0 28	 add	 rax, 40			; 00000028H
  00066	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006b	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1583 :     }

  0006f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00073	5f		 pop	 rdi
  00074	c3		 ret	 0
??$_Emplace_back@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_back<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Release, COMDAT

; 1585 :     pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1586 :         _First = _Last;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00010	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00014	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1587 :         return _Last;

  00017	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1588 :     }

  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 1575 :     ~_Uninitialized_backout_al() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1576 :         _Destroy_range(_First, _Last, _Al);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	4c 8b 40 10	 mov	 r8, QWORD PTR [rax+16]
  00027	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00038	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1577 :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 1570 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00027	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  0002b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00035	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00039	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
??0?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Get_unwrapped@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@@Z PROC ; std::_Get_unwrapped<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 276  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 277  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Get_unwrapped@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@@Z ENDP ; std::_Get_unwrapped<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 751  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 752  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 753  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00028	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 754  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
_TEXT	SEGMENT
c$ = 0
a$ = 32
b$ = 40
??$rgy_gcd@H@@YAHHH@Z PROC				; rgy_gcd<int>

; 208  : static inline T rgy_gcd(T a, T b) {

  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00008	57		 push	 rdi
  00009	48 83 ec 10	 sub	 rsp, 16
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 04 00 00 00	 mov	 ecx, 4
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	8b 4c 24 20	 mov	 ecx, DWORD PTR [rsp+32]

; 209  :     static_assert(std::is_integral<T>::value, "rgy_gcd is defined only for integer.");
; 210  :     if (a == 0) return b;

  00020	83 7c 24 20 00	 cmp	 DWORD PTR a$[rsp], 0
  00025	75 06		 jne	 SHORT $LN4@rgy_gcd
  00027	8b 44 24 28	 mov	 eax, DWORD PTR b$[rsp]
  0002b	eb 36		 jmp	 SHORT $LN1@rgy_gcd
$LN4@rgy_gcd:

; 211  :     if (b == 0) return a;

  0002d	83 7c 24 28 00	 cmp	 DWORD PTR b$[rsp], 0
  00032	75 06		 jne	 SHORT $LN5@rgy_gcd
  00034	8b 44 24 20	 mov	 eax, DWORD PTR a$[rsp]
  00038	eb 29		 jmp	 SHORT $LN1@rgy_gcd
$LN5@rgy_gcd:
$LN2@rgy_gcd:

; 212  :     T c;
; 213  :     while ((c = a % b) != 0)

  0003a	8b 44 24 20	 mov	 eax, DWORD PTR a$[rsp]
  0003e	99		 cdq
  0003f	f7 7c 24 28	 idiv	 DWORD PTR b$[rsp]
  00043	8b c2		 mov	 eax, edx
  00045	89 04 24	 mov	 DWORD PTR c$[rsp], eax
  00048	83 3c 24 00	 cmp	 DWORD PTR c$[rsp], 0
  0004c	74 11		 je	 SHORT $LN3@rgy_gcd

; 214  :         a = b, b = c;

  0004e	8b 44 24 28	 mov	 eax, DWORD PTR b$[rsp]
  00052	89 44 24 20	 mov	 DWORD PTR a$[rsp], eax
  00056	8b 04 24	 mov	 eax, DWORD PTR c$[rsp]
  00059	89 44 24 28	 mov	 DWORD PTR b$[rsp], eax
  0005d	eb db		 jmp	 SHORT $LN2@rgy_gcd
$LN3@rgy_gcd:

; 215  :     return b;

  0005f	8b 44 24 28	 mov	 eax, DWORD PTR b$[rsp]
$LN1@rgy_gcd:

; 216  : }

  00063	48 83 c4 10	 add	 rsp, 16
  00067	5f		 pop	 rdi
  00068	c3		 ret	 0
??$rgy_gcd@H@@YAHHH@Z ENDP				; rgy_gcd<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@PEAN@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@AEBQEAN@Z
_TEXT	SEGMENT
_It$ = 48
_UIt$ = 56
??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@PEAN@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@AEBQEAN@Z PROC ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,double *>, COMDAT

; 415  : constexpr void _Seek_wrapped(_Iter& _It, const _UIter& _UIt) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 416  :     if constexpr (_Wrapped_seekable_v<_Iter, _UIter>) {
; 417  :         _It._Seek_to(_UIt);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _UIt$[rsp]
  00028	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0002b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _It$[rsp]
  00030	e8 00 00 00 00	 call	 ?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAAXPEBN@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Seek_to

; 418  :     } else {
; 419  :         _It = _UIt;
; 420  :     }
; 421  : }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@PEAN@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@AEBQEAN@Z ENDP ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,double *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$_Max_element_unchecked@PEANU?$less@X@std@@@std@@YAPEANPEAN0U?$less@X@0@@Z
_TEXT	SEGMENT
_Found$ = 32
_First$ = 64
_Last$ = 72
_Pred$ = 80
??$_Max_element_unchecked@PEANU?$less@X@std@@@std@@YAPEANPEAN0U?$less@X@0@@Z PROC ; std::_Max_element_unchecked<double *,std::less<void> >, COMDAT

; 4280 : constexpr _FwdIt _Max_element_unchecked(_FwdIt _First, _FwdIt _Last, _Pr _Pred) { // find largest element, using _Pred

$LN7:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4281 :     _FwdIt _Found = _First;

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR _First$[rsp]
  0002d	48 89 44 24 20	 mov	 QWORD PTR _Found$[rsp], rax

; 4282 :     if (_First != _Last) {

  00032	48 8b 44 24 48	 mov	 rax, QWORD PTR _Last$[rsp]
  00037	48 39 44 24 40	 cmp	 QWORD PTR _First$[rsp], rax
  0003c	74 41		 je	 SHORT $LN4@Max_elemen
$LN2@Max_elemen:

; 4283 :         while (++_First != _Last) {

  0003e	48 8b 44 24 40	 mov	 rax, QWORD PTR _First$[rsp]
  00043	48 83 c0 08	 add	 rax, 8
  00047	48 89 44 24 40	 mov	 QWORD PTR _First$[rsp], rax
  0004c	48 8b 44 24 48	 mov	 rax, QWORD PTR _Last$[rsp]
  00051	48 39 44 24 40	 cmp	 QWORD PTR _First$[rsp], rax
  00056	74 27		 je	 SHORT $LN3@Max_elemen

; 4284 :             if (_DEBUG_LT_PRED(_Pred, *_Found, *_First)) {

  00058	4c 8b 44 24 40	 mov	 r8, QWORD PTR _First$[rsp]
  0005d	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Found$[rsp]
  00062	48 8d 4c 24 50	 lea	 rcx, QWORD PTR _Pred$[rsp]
  00067	e8 00 00 00 00	 call	 ??$_Debug_lt_pred@AEAU?$less@X@std@@AEANAEAN$0A@@std@@YA_NAEAU?$less@X@0@AEAN1@Z ; std::_Debug_lt_pred<std::less<void> &,double &,double &,0>
  0006c	0f b6 c0	 movzx	 eax, al
  0006f	85 c0		 test	 eax, eax
  00071	74 0a		 je	 SHORT $LN5@Max_elemen

; 4285 :                 _Found = _First;

  00073	48 8b 44 24 40	 mov	 rax, QWORD PTR _First$[rsp]
  00078	48 89 44 24 20	 mov	 QWORD PTR _Found$[rsp], rax
$LN5@Max_elemen:

; 4286 :             }
; 4287 :         }

  0007d	eb bf		 jmp	 SHORT $LN2@Max_elemen
$LN3@Max_elemen:
$LN4@Max_elemen:

; 4288 :     }
; 4289 : 
; 4290 :     return _Found;

  0007f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Found$[rsp]

; 4291 : }

  00084	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00088	5f		 pop	 rdi
  00089	c3		 ret	 0
??$_Max_element_unchecked@PEANU?$less@X@std@@@std@@YAPEANPEAN0U?$less@X@0@@Z ENDP ; std::_Max_element_unchecked<double *,std::less<void> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Pass_fn@U?$less@X@std@@$0A@@std@@YA?AU?$less@X@0@U10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$_Pass_fn@U?$less@X@std@@$0A@@std@@YA?AU?$less@X@0@U10@@Z PROC ; std::_Pass_fn<std::less<void>,0>, COMDAT

; 55   : constexpr _Fn _Pass_fn(_Fn _Val) { // pass functor by value

$LN3:
  00000	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00004	57		 push	 rdi

; 56   :     return _Val;

  00005	0f b6 44 24 10	 movzx	 eax, BYTE PTR _Val$[rsp]

; 57   : }

  0000a	5f		 pop	 rdi
  0000b	c3		 ret	 0
??$_Pass_fn@U?$less@X@std@@$0A@@std@@YA?AU?$less@X@0@U10@@Z ENDP ; std::_Pass_fn<std::less<void>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@$0A@@std@@YAPEANAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@@Z
_TEXT	SEGMENT
_It$ = 48
??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@$0A@@std@@YAPEANAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@@Z PROC ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,0>, COMDAT

; 257  : _NODISCARD constexpr auto _Get_unwrapped(const _Iter& _It) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 258  :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 259  :     return _It._Unwrapped();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _It$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEBAPEANXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Unwrapped

; 260  : }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@$0A@@std@@YAPEANAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@@Z ENDP ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@0@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@0@Z PROC ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >, COMDAT

; 217  :     const _Iter& _First, const _Sentinel& _Last) { // check that [_First, _Last) forms an iterator range

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 218  :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 219  :         _Verify_range(_First, _Last);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Last$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@1@0@Z ; std::_Verify_range

; 220  :     } else {
; 221  :         (void) _First; // TRANSITION, VSO#486357
; 222  :         (void) _Last; // TRANSITION, VSO#486357
; 223  :     }
; 224  : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@0@Z ENDP ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
_Whereptr$ = 32
_Count$ = 40
_My_data$ = 48
_Mylast$ = 56
_Oldfirst$ = 64
_Oldlast$ = 72
_Unused_capacity$ = 80
_Oldsize$1 = 88
_Newsize$2 = 96
_Newcapacity$3 = 104
_Newvec$4 = 112
_Whereoff$5 = 120
_Constructed_last$6 = 128
_Constructed_first$7 = 136
_Affected_elements$8 = 144
_Relocated$9 = 152
this$ = 176
_Where$ = 184
_First$ = 192
_Last$ = 200
__formal$ = 208
??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>, COMDAT

; 859  :     void _Insert_range(const_iterator _Where, _Iter _First, _Iter _Last, forward_iterator_tag) {

$LN44:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+176]

; 860  :         // insert forward range [_First, _Last) at _Where
; 861  :         const pointer _Whereptr = _Where._Ptr;

  00033	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR _Where$[rsp]
  0003b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0003f	48 89 44 24 20	 mov	 QWORD PTR _Whereptr$[rsp], rax

; 862  :         const auto _Count       = _Convert_size<size_type>(static_cast<size_t>(_STD distance(_First, _Last)));

  00044	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR _Last$[rsp]
  0004c	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  00054	e8 00 00 00 00	 call	 ??$distance@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA_JPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::distance<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>
  00059	48 8b c8	 mov	 rcx, rax
  0005c	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00061	48 89 44 24 28	 mov	 QWORD PTR _Count$[rsp], rax

; 863  : 
; 864  :         auto& _My_data   = _Mypair._Myval2;

  00066	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0006e	48 89 44 24 30	 mov	 QWORD PTR _My_data$[rsp], rax

; 865  :         pointer& _Mylast = _My_data._Mylast;

  00073	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00078	48 83 c0 10	 add	 rax, 16
  0007c	48 89 44 24 38	 mov	 QWORD PTR _Mylast$[rsp], rax

; 866  : 
; 867  :         const pointer _Oldfirst     = _My_data._Myfirst;

  00081	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00086	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0008a	48 89 44 24 40	 mov	 QWORD PTR _Oldfirst$[rsp], rax

; 868  :         const pointer _Oldlast      = _Mylast;

  0008f	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00094	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00097	48 89 44 24 48	 mov	 QWORD PTR _Oldlast$[rsp], rax

; 869  :         const auto _Unused_capacity = static_cast<size_type>(_My_data._Myend - _Oldlast);

  0009c	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000a1	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Oldlast$[rsp]
  000a6	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  000aa	48 2b c1	 sub	 rax, rcx
  000ad	48 99		 cdq
  000af	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  000b4	48 f7 f9	 idiv	 rcx
  000b7	48 89 44 24 50	 mov	 QWORD PTR _Unused_capacity$[rsp], rax

; 870  : 
; 871  :         if (_Count == 0) { // nothing to do, avoid invalidating iterators

  000bc	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  000c2	75 05		 jne	 SHORT $LN2@Insert_ran
  000c4	e9 54 03 00 00	 jmp	 $LN3@Insert_ran
$LN2@Insert_ran:

; 872  :         } else if (_Count > _Unused_capacity) { // reallocate

  000c9	48 8b 44 24 50	 mov	 rax, QWORD PTR _Unused_capacity$[rsp]
  000ce	48 39 44 24 28	 cmp	 QWORD PTR _Count$[rsp], rax
  000d3	0f 86 d6 01 00
	00		 jbe	 $LN4@Insert_ran

; 873  :             const auto _Oldsize = static_cast<size_type>(_Oldlast - _Oldfirst);

  000d9	48 8b 44 24 40	 mov	 rax, QWORD PTR _Oldfirst$[rsp]
  000de	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Oldlast$[rsp]
  000e3	48 2b c8	 sub	 rcx, rax
  000e6	48 8b c1	 mov	 rax, rcx
  000e9	48 99		 cdq
  000eb	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  000f0	48 f7 f9	 idiv	 rcx
  000f3	48 89 44 24 58	 mov	 QWORD PTR _Oldsize$1[rsp], rax

; 874  : 
; 875  :             if (_Count > max_size() - _Oldsize) {

  000f8	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00100	e8 00 00 00 00	 call	 ?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
  00105	48 2b 44 24 58	 sub	 rax, QWORD PTR _Oldsize$1[rsp]
  0010a	48 39 44 24 28	 cmp	 QWORD PTR _Count$[rsp], rax
  0010f	76 05		 jbe	 SHORT $LN6@Insert_ran

; 876  :                 _Xlength();

  00111	e8 00 00 00 00	 call	 ?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlength
$LN6@Insert_ran:

; 877  :             }
; 878  : 
; 879  :             const size_type _Newsize     = _Oldsize + _Count;

  00116	48 8b 44 24 28	 mov	 rax, QWORD PTR _Count$[rsp]
  0011b	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Oldsize$1[rsp]
  00120	48 03 c8	 add	 rcx, rax
  00123	48 8b c1	 mov	 rax, rcx
  00126	48 89 44 24 60	 mov	 QWORD PTR _Newsize$2[rsp], rax

; 880  :             const size_type _Newcapacity = _Calculate_growth(_Newsize);

  0012b	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newsize$2[rsp]
  00130	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00138	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBA_K_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Calculate_growth
  0013d	48 89 44 24 68	 mov	 QWORD PTR _Newcapacity$3[rsp], rax

; 881  : 
; 882  :             const pointer _Newvec           = _Getal().allocate(_Newcapacity);

  00142	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0014a	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  0014f	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Newcapacity$3[rsp]
  00154	48 8b c8	 mov	 rcx, rax
  00157	e8 00 00 00 00	 call	 ?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate
  0015c	48 89 44 24 70	 mov	 QWORD PTR _Newvec$4[rsp], rax

; 883  :             const auto _Whereoff            = static_cast<size_type>(_Whereptr - _Oldfirst);

  00161	48 8b 44 24 40	 mov	 rax, QWORD PTR _Oldfirst$[rsp]
  00166	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Whereptr$[rsp]
  0016b	48 2b c8	 sub	 rcx, rax
  0016e	48 8b c1	 mov	 rax, rcx
  00171	48 99		 cdq
  00173	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00178	48 f7 f9	 idiv	 rcx
  0017b	48 89 44 24 78	 mov	 QWORD PTR _Whereoff$5[rsp], rax

; 884  :             const pointer _Constructed_last = _Newvec + _Whereoff + _Count;

  00180	48 6b 44 24 78
	28		 imul	 rax, QWORD PTR _Whereoff$5[rsp], 40 ; 00000028H
  00186	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Newvec$4[rsp]
  0018b	48 03 c8	 add	 rcx, rax
  0018e	48 8b c1	 mov	 rax, rcx
  00191	48 6b 4c 24 28
	28		 imul	 rcx, QWORD PTR _Count$[rsp], 40 ; 00000028H
  00197	48 03 c1	 add	 rax, rcx
  0019a	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR _Constructed_last$6[rsp], rax

; 885  :             pointer _Constructed_first      = _Constructed_last;

  001a2	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR _Constructed_last$6[rsp]
  001aa	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR _Constructed_first$7[rsp], rax

; 886  : 
; 887  :             _TRY_BEGIN
; 888  :             _Ucopy(_First, _Last, _Newvec + _Whereoff);

  001b2	48 6b 44 24 78
	28		 imul	 rax, QWORD PTR _Whereoff$5[rsp], 40 ; 00000028H
  001b8	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Newvec$4[rsp]
  001bd	48 03 c8	 add	 rcx, rax
  001c0	48 8b c1	 mov	 rax, rcx
  001c3	4c 8b c8	 mov	 r9, rax
  001c6	4c 8b 84 24 c8
	00 00 00	 mov	 r8, QWORD PTR _Last$[rsp]
  001ce	48 8b 94 24 c0
	00 00 00	 mov	 rdx, QWORD PTR _First$[rsp]
  001d6	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001de	e8 00 00 00 00	 call	 ??$_Ucopy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBV21@0PEAV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>

; 889  :             _Constructed_first = _Newvec + _Whereoff;

  001e3	48 6b 44 24 78
	28		 imul	 rax, QWORD PTR _Whereoff$5[rsp], 40 ; 00000028H
  001e9	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Newvec$4[rsp]
  001ee	48 03 c8	 add	 rcx, rax
  001f1	48 8b c1	 mov	 rax, rcx
  001f4	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR _Constructed_first$7[rsp], rax

; 890  : 
; 891  :             if (_Count == 1 && _Whereptr == _Oldlast) { // one at back, provide strong guarantee

  001fc	48 83 7c 24 28
	01		 cmp	 QWORD PTR _Count$[rsp], 1
  00202	75 2a		 jne	 SHORT $LN8@Insert_ran
  00204	48 8b 44 24 48	 mov	 rax, QWORD PTR _Oldlast$[rsp]
  00209	48 39 44 24 20	 cmp	 QWORD PTR _Whereptr$[rsp], rax
  0020e	75 1e		 jne	 SHORT $LN8@Insert_ran

; 892  :                 _Umove_if_noexcept(_Oldfirst, _Oldlast, _Newvec);

  00210	4c 8b 4c 24 70	 mov	 r9, QWORD PTR _Newvec$4[rsp]
  00215	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Oldlast$[rsp]
  0021a	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Oldfirst$[rsp]
  0021f	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00227	e8 00 00 00 00	 call	 ?_Umove_if_noexcept@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove_if_noexcept

; 893  :             } else { // provide basic guarantee

  0022c	eb 5e		 jmp	 SHORT $LN9@Insert_ran
$LN8@Insert_ran:

; 894  :                 _Umove(_Oldfirst, _Whereptr, _Newvec);

  0022e	4c 8b 4c 24 70	 mov	 r9, QWORD PTR _Newvec$4[rsp]
  00233	4c 8b 44 24 20	 mov	 r8, QWORD PTR _Whereptr$[rsp]
  00238	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Oldfirst$[rsp]
  0023d	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00245	e8 00 00 00 00	 call	 ?_Umove@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEAV32@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove

; 895  :                 _Constructed_first = _Newvec;

  0024a	48 8b 44 24 70	 mov	 rax, QWORD PTR _Newvec$4[rsp]
  0024f	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR _Constructed_first$7[rsp], rax

; 896  :                 _Umove(_Whereptr, _Oldlast, _Newvec + _Whereoff + _Count);

  00257	48 6b 44 24 78
	28		 imul	 rax, QWORD PTR _Whereoff$5[rsp], 40 ; 00000028H
  0025d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Newvec$4[rsp]
  00262	48 03 c8	 add	 rcx, rax
  00265	48 8b c1	 mov	 rax, rcx
  00268	48 6b 4c 24 28
	28		 imul	 rcx, QWORD PTR _Count$[rsp], 40 ; 00000028H
  0026e	48 03 c1	 add	 rax, rcx
  00271	4c 8b c8	 mov	 r9, rax
  00274	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Oldlast$[rsp]
  00279	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Whereptr$[rsp]
  0027e	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00286	e8 00 00 00 00	 call	 ?_Umove@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEAV32@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove
  0028b	90		 npad	 1
$LN9@Insert_ran:
  0028c	eb 00		 jmp	 SHORT $LN28@Insert_ran
$LN29@Insert_ran:
$LN28@Insert_ran:

; 897  :             }
; 898  :             _CATCH_ALL
; 899  :             _Destroy(_Constructed_first, _Constructed_last);
; 900  :             _Getal().deallocate(_Newvec, _Newcapacity);
; 901  :             _RERAISE;
; 902  :             _CATCH_END
; 903  : 
; 904  :             _Change_array(_Newvec, _Newsize, _Newcapacity);

  0028e	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Newcapacity$3[rsp]
  00293	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Newsize$2[rsp]
  00298	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Newvec$4[rsp]
  0029d	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  002a5	e8 00 00 00 00	 call	 ?_Change_array@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K1@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Change_array

; 905  :         } else { // Attempt to provide the strong guarantee for EmplaceConstructible failure.

  002aa	e9 6e 01 00 00	 jmp	 $LN3@Insert_ran
$LN4@Insert_ran:

; 906  :                  // If we encounter copy/move construction/assignment failure, provide the basic guarantee.
; 907  :                  // (For one-at-back, this provides the strong guarantee.)
; 908  : 
; 909  :             const auto _Affected_elements = static_cast<size_type>(_Oldlast - _Whereptr);

  002af	48 8b 44 24 20	 mov	 rax, QWORD PTR _Whereptr$[rsp]
  002b4	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Oldlast$[rsp]
  002b9	48 2b c8	 sub	 rcx, rax
  002bc	48 8b c1	 mov	 rax, rcx
  002bf	48 99		 cdq
  002c1	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  002c6	48 f7 f9	 idiv	 rcx
  002c9	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR _Affected_elements$8[rsp], rax

; 910  : 
; 911  :             if (_Count < _Affected_elements) { // some affected elements must be assigned

  002d1	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR _Affected_elements$8[rsp]
  002d9	48 39 44 24 28	 cmp	 QWORD PTR _Count$[rsp], rax
  002de	0f 83 a4 00 00
	00		 jae	 $LN10@Insert_ran

; 912  :                 _Mylast = _Umove(_Oldlast - _Count, _Oldlast, _Oldlast);

  002e4	48 6b 44 24 28
	28		 imul	 rax, QWORD PTR _Count$[rsp], 40 ; 00000028H
  002ea	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Oldlast$[rsp]
  002ef	48 2b c8	 sub	 rcx, rax
  002f2	48 8b c1	 mov	 rax, rcx
  002f5	4c 8b 4c 24 48	 mov	 r9, QWORD PTR _Oldlast$[rsp]
  002fa	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Oldlast$[rsp]
  002ff	48 8b d0	 mov	 rdx, rax
  00302	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0030a	e8 00 00 00 00	 call	 ?_Umove@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEAV32@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove
  0030f	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  00314	48 89 01	 mov	 QWORD PTR [rcx], rax

; 913  :                 _Move_backward_unchecked(_Whereptr, _Oldlast - _Count, _Oldlast);

  00317	48 6b 44 24 28
	28		 imul	 rax, QWORD PTR _Count$[rsp], 40 ; 00000028H
  0031d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Oldlast$[rsp]
  00322	48 2b c8	 sub	 rcx, rax
  00325	48 8b c1	 mov	 rax, rcx
  00328	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Oldlast$[rsp]
  0032d	48 8b d0	 mov	 rdx, rax
  00330	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Whereptr$[rsp]
  00335	e8 00 00 00 00	 call	 ??$_Move_backward_unchecked@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00@Z ; std::_Move_backward_unchecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>

; 914  :                 _Destroy(_Whereptr, _Whereptr + _Count);

  0033a	48 6b 44 24 28
	28		 imul	 rax, QWORD PTR _Count$[rsp], 40 ; 00000028H
  00340	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Whereptr$[rsp]
  00345	48 03 c8	 add	 rcx, rax
  00348	48 8b c1	 mov	 rax, rcx
  0034b	4c 8b c0	 mov	 r8, rax
  0034e	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Whereptr$[rsp]
  00353	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0035b	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
  00360	90		 npad	 1

; 915  : 
; 916  :                 _TRY_BEGIN
; 917  :                 _Ucopy(_First, _Last, _Whereptr);

  00361	4c 8b 4c 24 20	 mov	 r9, QWORD PTR _Whereptr$[rsp]
  00366	4c 8b 84 24 c8
	00 00 00	 mov	 r8, QWORD PTR _Last$[rsp]
  0036e	48 8b 94 24 c0
	00 00 00	 mov	 rdx, QWORD PTR _First$[rsp]
  00376	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0037e	e8 00 00 00 00	 call	 ??$_Ucopy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBV21@0PEAV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>
  00383	90		 npad	 1
  00384	eb 00		 jmp	 SHORT $LN32@Insert_ran
$LN33@Insert_ran:
$LN32@Insert_ran:

; 918  :                 _CATCH_ALL
; 919  :                 // glue the broken pieces back together
; 920  : 
; 921  :                 _TRY_BEGIN
; 922  :                 _Umove(_Whereptr + _Count, _Whereptr + 2 * _Count, _Whereptr);
; 923  :                 _CATCH_ALL
; 924  :                 // vaporize the detached piece
; 925  :                 _Orphan_range(_Whereptr, _Oldlast);
; 926  :                 _Destroy(_Whereptr + _Count, _Mylast);
; 927  :                 _Mylast = _Whereptr;
; 928  :                 _RERAISE;
; 929  :                 _CATCH_END
; 930  : 
; 931  :                 _Move_unchecked(_Whereptr + 2 * _Count, _Mylast, _Whereptr + _Count);
; 932  :                 _Destroy(_Oldlast, _Mylast);
; 933  :                 _Mylast = _Oldlast;
; 934  :                 _RERAISE;
; 935  :                 _CATCH_END
; 936  :             } else { // affected elements don't overlap before/after

  00386	eb 7d		 jmp	 SHORT $LN11@Insert_ran
$LN10@Insert_ran:

; 937  :                 const pointer _Relocated = _Whereptr + _Count;

  00388	48 6b 44 24 28
	28		 imul	 rax, QWORD PTR _Count$[rsp], 40 ; 00000028H
  0038e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Whereptr$[rsp]
  00393	48 03 c8	 add	 rcx, rax
  00396	48 8b c1	 mov	 rax, rcx
  00399	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR _Relocated$9[rsp], rax

; 938  :                 _Mylast                  = _Umove(_Whereptr, _Oldlast, _Relocated);

  003a1	4c 8b 8c 24 98
	00 00 00	 mov	 r9, QWORD PTR _Relocated$9[rsp]
  003a9	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Oldlast$[rsp]
  003ae	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Whereptr$[rsp]
  003b3	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  003bb	e8 00 00 00 00	 call	 ?_Umove@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEAV32@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove
  003c0	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  003c5	48 89 01	 mov	 QWORD PTR [rcx], rax

; 939  :                 _Destroy(_Whereptr, _Oldlast);

  003c8	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Oldlast$[rsp]
  003cd	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Whereptr$[rsp]
  003d2	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  003da	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
  003df	90		 npad	 1

; 940  : 
; 941  :                 _TRY_BEGIN
; 942  :                 _Ucopy(_First, _Last, _Whereptr);

  003e0	4c 8b 4c 24 20	 mov	 r9, QWORD PTR _Whereptr$[rsp]
  003e5	4c 8b 84 24 c8
	00 00 00	 mov	 r8, QWORD PTR _Last$[rsp]
  003ed	48 8b 94 24 c0
	00 00 00	 mov	 rdx, QWORD PTR _First$[rsp]
  003f5	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  003fd	e8 00 00 00 00	 call	 ??$_Ucopy@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBV21@0PEAV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>
  00402	90		 npad	 1
  00403	eb 00		 jmp	 SHORT $LN11@Insert_ran
$LN37@Insert_ran:
$LN11@Insert_ran:

; 943  :                 _CATCH_ALL
; 944  :                 // glue the broken pieces back together
; 945  : 
; 946  :                 _TRY_BEGIN
; 947  :                 _Umove(_Relocated, _Mylast, _Whereptr);
; 948  :                 _CATCH_ALL
; 949  :                 // vaporize the detached piece
; 950  :                 _Orphan_range(_Whereptr, _Oldlast);
; 951  :                 _Destroy(_Relocated, _Mylast);
; 952  :                 _Mylast = _Whereptr;
; 953  :                 _RERAISE;
; 954  :                 _CATCH_END
; 955  : 
; 956  :                 _Destroy(_Relocated, _Mylast);
; 957  :                 _Mylast = _Oldlast;
; 958  :                 _RERAISE;
; 959  :                 _CATCH_END
; 960  :             }
; 961  : 
; 962  :             _Orphan_range(_Whereptr, _Oldlast);

  00405	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Oldlast$[rsp]
  0040a	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Whereptr$[rsp]
  0040f	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00417	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range
  0041c	90		 npad	 1
$LN3@Insert_ran:

; 963  :         }
; 964  :     }

  0041d	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR _Where$[rsp]
  00425	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0042a	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  00431	5f		 pop	 rdi
  00432	c3		 ret	 0
$LN38@Insert_ran:
??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 32
_Count$ = 40
_My_data$ = 48
_Mylast$ = 56
_Oldfirst$ = 64
_Oldlast$ = 72
_Unused_capacity$ = 80
_Oldsize$1 = 88
_Newsize$2 = 96
_Newcapacity$3 = 104
_Newvec$4 = 112
_Whereoff$5 = 120
_Constructed_last$6 = 128
_Constructed_first$7 = 136
_Affected_elements$8 = 144
_Relocated$9 = 152
this$ = 176
_Where$ = 184
_First$ = 192
_Last$ = 200
__formal$ = 208
?dtor$0@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d b8 00
	00 00		 mov	 rcx, QWORD PTR _Where$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 32
_Count$ = 40
_My_data$ = 48
_Mylast$ = 56
_Oldfirst$ = 64
_Oldlast$ = 72
_Unused_capacity$ = 80
_Oldsize$1 = 88
_Newsize$2 = 96
_Newcapacity$3 = 104
_Newvec$4 = 112
_Whereoff$5 = 120
_Constructed_last$6 = 128
_Constructed_first$7 = 136
_Affected_elements$8 = 144
_Relocated$9 = 152
this$ = 176
_Where$ = 184
_First$ = 192
_Last$ = 200
__formal$ = 208
?catch$1@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>'::`1'::catch$1

; 897  :             }
; 898  :             _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z$0:

; 897  :             }
; 898  :             _CATCH_ALL
; 899  :             _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 85 80 00
	00 00		 mov	 r8, QWORD PTR _Constructed_last$6[rbp]
  0001a	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR _Constructed_first$7[rbp]
  00021	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00028	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy

; 897  :             }
; 898  :             _CATCH_ALL
; 899  :             _Destroy(_Constructed_first, _Constructed_last);
; 900  :             _Getal().deallocate(_Newvec, _Newcapacity);

  0002d	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00034	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  00039	4c 8b 45 68	 mov	 r8, QWORD PTR _Newcapacity$3[rbp]
  0003d	48 8b 55 70	 mov	 rdx, QWORD PTR _Newvec$4[rbp]
  00041	48 8b c8	 mov	 rcx, rax
  00044	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate

; 897  :             }
; 898  :             _CATCH_ALL
; 899  :             _Destroy(_Constructed_first, _Constructed_last);
; 900  :             _Getal().deallocate(_Newvec, _Newcapacity);
; 901  :             _RERAISE;

  00049	33 d2		 xor	 edx, edx
  0004b	33 c9		 xor	 ecx, ecx
  0004d	e8 00 00 00 00	 call	 _CxxThrowException
  00052	90		 npad	 1

; 897  :             }
; 898  :             _CATCH_ALL
; 899  :             _Destroy(_Constructed_first, _Constructed_last);
; 900  :             _Getal().deallocate(_Newvec, _Newcapacity);
; 901  :             _RERAISE;
; 902  :             _CATCH_END

  00053	48 8d 05 00 00
	00 00		 lea	 rax, $LN29@catch$1
  0005a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0005e	5f		 pop	 rdi
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
  00061	cc		 int	 3
?catch$1@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>'::`1'::catch$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 32
_Count$ = 40
_My_data$ = 48
_Mylast$ = 56
_Oldfirst$ = 64
_Oldlast$ = 72
_Unused_capacity$ = 80
_Oldsize$1 = 88
_Newsize$2 = 96
_Newcapacity$3 = 104
_Newvec$4 = 112
_Whereoff$5 = 120
_Constructed_last$6 = 128
_Constructed_first$7 = 136
_Affected_elements$8 = 144
_Relocated$9 = 152
this$ = 176
_Where$ = 184
_First$ = 192
_Last$ = 200
__formal$ = 208
?catch$3@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>'::`1'::catch$3

; 918  :                 _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z$2:

; 918  :                 _CATCH_ALL
; 919  :                 // glue the broken pieces back together
; 920  : 
; 921  :                 _TRY_BEGIN
; 922  :                 _Umove(_Whereptr + _Count, _Whereptr + 2 * _Count, _Whereptr);

  00013	48 8b 45 28	 mov	 rax, QWORD PTR _Count$[rbp]
  00017	48 d1 e0	 shl	 rax, 1
  0001a	48 6b c0 28	 imul	 rax, rax, 40		; 00000028H
  0001e	48 8b 4d 20	 mov	 rcx, QWORD PTR _Whereptr$[rbp]
  00022	48 03 c8	 add	 rcx, rax
  00025	48 8b c1	 mov	 rax, rcx
  00028	48 6b 4d 28 28	 imul	 rcx, QWORD PTR _Count$[rbp], 40 ; 00000028H
  0002d	48 8b 55 20	 mov	 rdx, QWORD PTR _Whereptr$[rbp]
  00031	48 03 d1	 add	 rdx, rcx
  00034	48 8b ca	 mov	 rcx, rdx
  00037	4c 8b 4d 20	 mov	 r9, QWORD PTR _Whereptr$[rbp]
  0003b	4c 8b c0	 mov	 r8, rax
  0003e	48 8b d1	 mov	 rdx, rcx
  00041	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00048	e8 00 00 00 00	 call	 ?_Umove@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEAV32@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove
  0004d	90		 npad	 1
  0004e	eb 00		 jmp	 SHORT $LN30@catch$3
$LN31@catch$3:
$LN30@catch$3:

; 918  :                 _CATCH_ALL
; 919  :                 // glue the broken pieces back together
; 920  : 
; 921  :                 _TRY_BEGIN
; 922  :                 _Umove(_Whereptr + _Count, _Whereptr + 2 * _Count, _Whereptr);
; 923  :                 _CATCH_ALL
; 924  :                 // vaporize the detached piece
; 925  :                 _Orphan_range(_Whereptr, _Oldlast);
; 926  :                 _Destroy(_Whereptr + _Count, _Mylast);
; 927  :                 _Mylast = _Whereptr;
; 928  :                 _RERAISE;
; 929  :                 _CATCH_END
; 930  : 
; 931  :                 _Move_unchecked(_Whereptr + 2 * _Count, _Mylast, _Whereptr + _Count);

  00050	48 6b 45 28 28	 imul	 rax, QWORD PTR _Count$[rbp], 40 ; 00000028H
  00055	48 8b 4d 20	 mov	 rcx, QWORD PTR _Whereptr$[rbp]
  00059	48 03 c8	 add	 rcx, rax
  0005c	48 8b c1	 mov	 rax, rcx
  0005f	48 8b 4d 28	 mov	 rcx, QWORD PTR _Count$[rbp]
  00063	48 d1 e1	 shl	 rcx, 1
  00066	48 6b c9 28	 imul	 rcx, rcx, 40		; 00000028H
  0006a	48 8b 55 20	 mov	 rdx, QWORD PTR _Whereptr$[rbp]
  0006e	48 03 d1	 add	 rdx, rcx
  00071	48 8b ca	 mov	 rcx, rdx
  00074	4c 8b c0	 mov	 r8, rax
  00077	48 8b 45 38	 mov	 rax, QWORD PTR _Mylast$[rbp]
  0007b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007e	e8 00 00 00 00	 call	 ??$_Move_unchecked@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00@Z ; std::_Move_unchecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>

; 918  :                 _CATCH_ALL
; 919  :                 // glue the broken pieces back together
; 920  : 
; 921  :                 _TRY_BEGIN
; 922  :                 _Umove(_Whereptr + _Count, _Whereptr + 2 * _Count, _Whereptr);
; 923  :                 _CATCH_ALL
; 924  :                 // vaporize the detached piece
; 925  :                 _Orphan_range(_Whereptr, _Oldlast);
; 926  :                 _Destroy(_Whereptr + _Count, _Mylast);
; 927  :                 _Mylast = _Whereptr;
; 928  :                 _RERAISE;
; 929  :                 _CATCH_END
; 930  : 
; 931  :                 _Move_unchecked(_Whereptr + 2 * _Count, _Mylast, _Whereptr + _Count);
; 932  :                 _Destroy(_Oldlast, _Mylast);

  00083	48 8b 45 38	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00087	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0008a	48 8b 55 48	 mov	 rdx, QWORD PTR _Oldlast$[rbp]
  0008e	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00095	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy

; 918  :                 _CATCH_ALL
; 919  :                 // glue the broken pieces back together
; 920  : 
; 921  :                 _TRY_BEGIN
; 922  :                 _Umove(_Whereptr + _Count, _Whereptr + 2 * _Count, _Whereptr);
; 923  :                 _CATCH_ALL
; 924  :                 // vaporize the detached piece
; 925  :                 _Orphan_range(_Whereptr, _Oldlast);
; 926  :                 _Destroy(_Whereptr + _Count, _Mylast);
; 927  :                 _Mylast = _Whereptr;
; 928  :                 _RERAISE;
; 929  :                 _CATCH_END
; 930  : 
; 931  :                 _Move_unchecked(_Whereptr + 2 * _Count, _Mylast, _Whereptr + _Count);
; 932  :                 _Destroy(_Oldlast, _Mylast);
; 933  :                 _Mylast = _Oldlast;

  0009a	48 8b 45 38	 mov	 rax, QWORD PTR _Mylast$[rbp]
  0009e	48 8b 4d 48	 mov	 rcx, QWORD PTR _Oldlast$[rbp]
  000a2	48 89 08	 mov	 QWORD PTR [rax], rcx

; 918  :                 _CATCH_ALL
; 919  :                 // glue the broken pieces back together
; 920  : 
; 921  :                 _TRY_BEGIN
; 922  :                 _Umove(_Whereptr + _Count, _Whereptr + 2 * _Count, _Whereptr);
; 923  :                 _CATCH_ALL
; 924  :                 // vaporize the detached piece
; 925  :                 _Orphan_range(_Whereptr, _Oldlast);
; 926  :                 _Destroy(_Whereptr + _Count, _Mylast);
; 927  :                 _Mylast = _Whereptr;
; 928  :                 _RERAISE;
; 929  :                 _CATCH_END
; 930  : 
; 931  :                 _Move_unchecked(_Whereptr + 2 * _Count, _Mylast, _Whereptr + _Count);
; 932  :                 _Destroy(_Oldlast, _Mylast);
; 933  :                 _Mylast = _Oldlast;
; 934  :                 _RERAISE;

  000a5	33 d2		 xor	 edx, edx
  000a7	33 c9		 xor	 ecx, ecx
  000a9	e8 00 00 00 00	 call	 _CxxThrowException
  000ae	90		 npad	 1

; 918  :                 _CATCH_ALL
; 919  :                 // glue the broken pieces back together
; 920  : 
; 921  :                 _TRY_BEGIN
; 922  :                 _Umove(_Whereptr + _Count, _Whereptr + 2 * _Count, _Whereptr);
; 923  :                 _CATCH_ALL
; 924  :                 // vaporize the detached piece
; 925  :                 _Orphan_range(_Whereptr, _Oldlast);
; 926  :                 _Destroy(_Whereptr + _Count, _Mylast);
; 927  :                 _Mylast = _Whereptr;
; 928  :                 _RERAISE;
; 929  :                 _CATCH_END
; 930  : 
; 931  :                 _Move_unchecked(_Whereptr + 2 * _Count, _Mylast, _Whereptr + _Count);
; 932  :                 _Destroy(_Oldlast, _Mylast);
; 933  :                 _Mylast = _Oldlast;
; 934  :                 _RERAISE;
; 935  :                 _CATCH_END

  000af	48 8d 05 00 00
	00 00		 lea	 rax, $LN33@catch$3
  000b6	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000ba	5f		 pop	 rdi
  000bb	5d		 pop	 rbp
  000bc	c3		 ret	 0
  000bd	cc		 int	 3
?catch$3@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>'::`1'::catch$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 32
_Count$ = 40
_My_data$ = 48
_Mylast$ = 56
_Oldfirst$ = 64
_Oldlast$ = 72
_Unused_capacity$ = 80
_Oldsize$1 = 88
_Newsize$2 = 96
_Newcapacity$3 = 104
_Newvec$4 = 112
_Whereoff$5 = 120
_Constructed_last$6 = 128
_Constructed_first$7 = 136
_Affected_elements$8 = 144
_Relocated$9 = 152
this$ = 176
_Where$ = 184
_First$ = 192
_Last$ = 200
__formal$ = 208
?catch$2@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>'::`1'::catch$2

; 918  :                 _CATCH_ALL
; 919  :                 // glue the broken pieces back together
; 920  : 
; 921  :                 _TRY_BEGIN
; 922  :                 _Umove(_Whereptr + _Count, _Whereptr + 2 * _Count, _Whereptr);
; 923  :                 _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z$3:

; 918  :                 _CATCH_ALL
; 919  :                 // glue the broken pieces back together
; 920  : 
; 921  :                 _TRY_BEGIN
; 922  :                 _Umove(_Whereptr + _Count, _Whereptr + 2 * _Count, _Whereptr);
; 923  :                 _CATCH_ALL
; 924  :                 // vaporize the detached piece
; 925  :                 _Orphan_range(_Whereptr, _Oldlast);

  00013	4c 8b 45 48	 mov	 r8, QWORD PTR _Oldlast$[rbp]
  00017	48 8b 55 20	 mov	 rdx, QWORD PTR _Whereptr$[rbp]
  0001b	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range

; 918  :                 _CATCH_ALL
; 919  :                 // glue the broken pieces back together
; 920  : 
; 921  :                 _TRY_BEGIN
; 922  :                 _Umove(_Whereptr + _Count, _Whereptr + 2 * _Count, _Whereptr);
; 923  :                 _CATCH_ALL
; 924  :                 // vaporize the detached piece
; 925  :                 _Orphan_range(_Whereptr, _Oldlast);
; 926  :                 _Destroy(_Whereptr + _Count, _Mylast);

  00027	48 6b 45 28 28	 imul	 rax, QWORD PTR _Count$[rbp], 40 ; 00000028H
  0002c	48 8b 4d 20	 mov	 rcx, QWORD PTR _Whereptr$[rbp]
  00030	48 03 c8	 add	 rcx, rax
  00033	48 8b c1	 mov	 rax, rcx
  00036	48 8b 4d 38	 mov	 rcx, QWORD PTR _Mylast$[rbp]
  0003a	4c 8b 01	 mov	 r8, QWORD PTR [rcx]
  0003d	48 8b d0	 mov	 rdx, rax
  00040	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00047	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy

; 918  :                 _CATCH_ALL
; 919  :                 // glue the broken pieces back together
; 920  : 
; 921  :                 _TRY_BEGIN
; 922  :                 _Umove(_Whereptr + _Count, _Whereptr + 2 * _Count, _Whereptr);
; 923  :                 _CATCH_ALL
; 924  :                 // vaporize the detached piece
; 925  :                 _Orphan_range(_Whereptr, _Oldlast);
; 926  :                 _Destroy(_Whereptr + _Count, _Mylast);
; 927  :                 _Mylast = _Whereptr;

  0004c	48 8b 45 38	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00050	48 8b 4d 20	 mov	 rcx, QWORD PTR _Whereptr$[rbp]
  00054	48 89 08	 mov	 QWORD PTR [rax], rcx

; 918  :                 _CATCH_ALL
; 919  :                 // glue the broken pieces back together
; 920  : 
; 921  :                 _TRY_BEGIN
; 922  :                 _Umove(_Whereptr + _Count, _Whereptr + 2 * _Count, _Whereptr);
; 923  :                 _CATCH_ALL
; 924  :                 // vaporize the detached piece
; 925  :                 _Orphan_range(_Whereptr, _Oldlast);
; 926  :                 _Destroy(_Whereptr + _Count, _Mylast);
; 927  :                 _Mylast = _Whereptr;
; 928  :                 _RERAISE;

  00057	33 d2		 xor	 edx, edx
  00059	33 c9		 xor	 ecx, ecx
  0005b	e8 00 00 00 00	 call	 _CxxThrowException
  00060	90		 npad	 1

; 918  :                 _CATCH_ALL
; 919  :                 // glue the broken pieces back together
; 920  : 
; 921  :                 _TRY_BEGIN
; 922  :                 _Umove(_Whereptr + _Count, _Whereptr + 2 * _Count, _Whereptr);
; 923  :                 _CATCH_ALL
; 924  :                 // vaporize the detached piece
; 925  :                 _Orphan_range(_Whereptr, _Oldlast);
; 926  :                 _Destroy(_Whereptr + _Count, _Mylast);
; 927  :                 _Mylast = _Whereptr;
; 928  :                 _RERAISE;
; 929  :                 _CATCH_END

  00061	48 8d 05 00 00
	00 00		 lea	 rax, $LN31@catch$2
  00068	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006c	5f		 pop	 rdi
  0006d	5d		 pop	 rbp
  0006e	c3		 ret	 0
  0006f	cc		 int	 3
?catch$2@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>'::`1'::catch$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 32
_Count$ = 40
_My_data$ = 48
_Mylast$ = 56
_Oldfirst$ = 64
_Oldlast$ = 72
_Unused_capacity$ = 80
_Oldsize$1 = 88
_Newsize$2 = 96
_Newcapacity$3 = 104
_Newvec$4 = 112
_Whereoff$5 = 120
_Constructed_last$6 = 128
_Constructed_first$7 = 136
_Affected_elements$8 = 144
_Relocated$9 = 152
this$ = 176
_Where$ = 184
_First$ = 192
_Last$ = 200
__formal$ = 208
?catch$5@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>'::`1'::catch$5

; 943  :                 _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z$6:

; 943  :                 _CATCH_ALL
; 944  :                 // glue the broken pieces back together
; 945  : 
; 946  :                 _TRY_BEGIN
; 947  :                 _Umove(_Relocated, _Mylast, _Whereptr);

  00013	4c 8b 4d 20	 mov	 r9, QWORD PTR _Whereptr$[rbp]
  00017	48 8b 45 38	 mov	 rax, QWORD PTR _Mylast$[rbp]
  0001b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0001e	48 8b 95 98 00
	00 00		 mov	 rdx, QWORD PTR _Relocated$9[rbp]
  00025	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0002c	e8 00 00 00 00	 call	 ?_Umove@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEAV32@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove
  00031	90		 npad	 1
  00032	eb 00		 jmp	 SHORT $LN34@catch$5
$LN35@catch$5:
$LN34@catch$5:

; 943  :                 _CATCH_ALL
; 944  :                 // glue the broken pieces back together
; 945  : 
; 946  :                 _TRY_BEGIN
; 947  :                 _Umove(_Relocated, _Mylast, _Whereptr);
; 948  :                 _CATCH_ALL
; 949  :                 // vaporize the detached piece
; 950  :                 _Orphan_range(_Whereptr, _Oldlast);
; 951  :                 _Destroy(_Relocated, _Mylast);
; 952  :                 _Mylast = _Whereptr;
; 953  :                 _RERAISE;
; 954  :                 _CATCH_END
; 955  : 
; 956  :                 _Destroy(_Relocated, _Mylast);

  00034	48 8b 45 38	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00038	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0003b	48 8b 95 98 00
	00 00		 mov	 rdx, QWORD PTR _Relocated$9[rbp]
  00042	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00049	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy

; 943  :                 _CATCH_ALL
; 944  :                 // glue the broken pieces back together
; 945  : 
; 946  :                 _TRY_BEGIN
; 947  :                 _Umove(_Relocated, _Mylast, _Whereptr);
; 948  :                 _CATCH_ALL
; 949  :                 // vaporize the detached piece
; 950  :                 _Orphan_range(_Whereptr, _Oldlast);
; 951  :                 _Destroy(_Relocated, _Mylast);
; 952  :                 _Mylast = _Whereptr;
; 953  :                 _RERAISE;
; 954  :                 _CATCH_END
; 955  : 
; 956  :                 _Destroy(_Relocated, _Mylast);
; 957  :                 _Mylast = _Oldlast;

  0004e	48 8b 45 38	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00052	48 8b 4d 48	 mov	 rcx, QWORD PTR _Oldlast$[rbp]
  00056	48 89 08	 mov	 QWORD PTR [rax], rcx

; 943  :                 _CATCH_ALL
; 944  :                 // glue the broken pieces back together
; 945  : 
; 946  :                 _TRY_BEGIN
; 947  :                 _Umove(_Relocated, _Mylast, _Whereptr);
; 948  :                 _CATCH_ALL
; 949  :                 // vaporize the detached piece
; 950  :                 _Orphan_range(_Whereptr, _Oldlast);
; 951  :                 _Destroy(_Relocated, _Mylast);
; 952  :                 _Mylast = _Whereptr;
; 953  :                 _RERAISE;
; 954  :                 _CATCH_END
; 955  : 
; 956  :                 _Destroy(_Relocated, _Mylast);
; 957  :                 _Mylast = _Oldlast;
; 958  :                 _RERAISE;

  00059	33 d2		 xor	 edx, edx
  0005b	33 c9		 xor	 ecx, ecx
  0005d	e8 00 00 00 00	 call	 _CxxThrowException
  00062	90		 npad	 1

; 943  :                 _CATCH_ALL
; 944  :                 // glue the broken pieces back together
; 945  : 
; 946  :                 _TRY_BEGIN
; 947  :                 _Umove(_Relocated, _Mylast, _Whereptr);
; 948  :                 _CATCH_ALL
; 949  :                 // vaporize the detached piece
; 950  :                 _Orphan_range(_Whereptr, _Oldlast);
; 951  :                 _Destroy(_Relocated, _Mylast);
; 952  :                 _Mylast = _Whereptr;
; 953  :                 _RERAISE;
; 954  :                 _CATCH_END
; 955  : 
; 956  :                 _Destroy(_Relocated, _Mylast);
; 957  :                 _Mylast = _Oldlast;
; 958  :                 _RERAISE;
; 959  :                 _CATCH_END

  00063	48 8d 05 00 00
	00 00		 lea	 rax, $LN37@catch$5
  0006a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006e	5f		 pop	 rdi
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
  00071	cc		 int	 3
?catch$5@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>'::`1'::catch$5
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 32
_Count$ = 40
_My_data$ = 48
_Mylast$ = 56
_Oldfirst$ = 64
_Oldlast$ = 72
_Unused_capacity$ = 80
_Oldsize$1 = 88
_Newsize$2 = 96
_Newcapacity$3 = 104
_Newvec$4 = 112
_Whereoff$5 = 120
_Constructed_last$6 = 128
_Constructed_first$7 = 136
_Affected_elements$8 = 144
_Relocated$9 = 152
this$ = 176
_Where$ = 184
_First$ = 192
_Last$ = 200
__formal$ = 208
?catch$4@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>'::`1'::catch$4

; 943  :                 _CATCH_ALL
; 944  :                 // glue the broken pieces back together
; 945  : 
; 946  :                 _TRY_BEGIN
; 947  :                 _Umove(_Relocated, _Mylast, _Whereptr);
; 948  :                 _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z$7:

; 943  :                 _CATCH_ALL
; 944  :                 // glue the broken pieces back together
; 945  : 
; 946  :                 _TRY_BEGIN
; 947  :                 _Umove(_Relocated, _Mylast, _Whereptr);
; 948  :                 _CATCH_ALL
; 949  :                 // vaporize the detached piece
; 950  :                 _Orphan_range(_Whereptr, _Oldlast);

  00013	4c 8b 45 48	 mov	 r8, QWORD PTR _Oldlast$[rbp]
  00017	48 8b 55 20	 mov	 rdx, QWORD PTR _Whereptr$[rbp]
  0001b	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range

; 943  :                 _CATCH_ALL
; 944  :                 // glue the broken pieces back together
; 945  : 
; 946  :                 _TRY_BEGIN
; 947  :                 _Umove(_Relocated, _Mylast, _Whereptr);
; 948  :                 _CATCH_ALL
; 949  :                 // vaporize the detached piece
; 950  :                 _Orphan_range(_Whereptr, _Oldlast);
; 951  :                 _Destroy(_Relocated, _Mylast);

  00027	48 8b 45 38	 mov	 rax, QWORD PTR _Mylast$[rbp]
  0002b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0002e	48 8b 95 98 00
	00 00		 mov	 rdx, QWORD PTR _Relocated$9[rbp]
  00035	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003c	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy

; 943  :                 _CATCH_ALL
; 944  :                 // glue the broken pieces back together
; 945  : 
; 946  :                 _TRY_BEGIN
; 947  :                 _Umove(_Relocated, _Mylast, _Whereptr);
; 948  :                 _CATCH_ALL
; 949  :                 // vaporize the detached piece
; 950  :                 _Orphan_range(_Whereptr, _Oldlast);
; 951  :                 _Destroy(_Relocated, _Mylast);
; 952  :                 _Mylast = _Whereptr;

  00041	48 8b 45 38	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00045	48 8b 4d 20	 mov	 rcx, QWORD PTR _Whereptr$[rbp]
  00049	48 89 08	 mov	 QWORD PTR [rax], rcx

; 943  :                 _CATCH_ALL
; 944  :                 // glue the broken pieces back together
; 945  : 
; 946  :                 _TRY_BEGIN
; 947  :                 _Umove(_Relocated, _Mylast, _Whereptr);
; 948  :                 _CATCH_ALL
; 949  :                 // vaporize the detached piece
; 950  :                 _Orphan_range(_Whereptr, _Oldlast);
; 951  :                 _Destroy(_Relocated, _Mylast);
; 952  :                 _Mylast = _Whereptr;
; 953  :                 _RERAISE;

  0004c	33 d2		 xor	 edx, edx
  0004e	33 c9		 xor	 ecx, ecx
  00050	e8 00 00 00 00	 call	 _CxxThrowException
  00055	90		 npad	 1

; 943  :                 _CATCH_ALL
; 944  :                 // glue the broken pieces back together
; 945  : 
; 946  :                 _TRY_BEGIN
; 947  :                 _Umove(_Relocated, _Mylast, _Whereptr);
; 948  :                 _CATCH_ALL
; 949  :                 // vaporize the detached piece
; 950  :                 _Orphan_range(_Whereptr, _Oldlast);
; 951  :                 _Destroy(_Relocated, _Mylast);
; 952  :                 _Mylast = _Whereptr;
; 953  :                 _RERAISE;
; 954  :                 _CATCH_END

  00056	48 8d 05 00 00
	00 00		 lea	 rax, $LN35@catch$4
  0005d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00061	5f		 pop	 rdi
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
  00064	cc		 int	 3
?catch$4@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>'::`1'::catch$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 32
_Count$ = 40
_My_data$ = 48
_Mylast$ = 56
_Oldfirst$ = 64
_Oldlast$ = 72
_Unused_capacity$ = 80
_Oldsize$1 = 88
_Newsize$2 = 96
_Newcapacity$3 = 104
_Newvec$4 = 112
_Whereoff$5 = 120
_Constructed_last$6 = 128
_Constructed_first$7 = 136
_Affected_elements$8 = 144
_Relocated$9 = 152
this$ = 176
_Where$ = 184
_First$ = 192
_Last$ = 200
__formal$ = 208
?dtor$0@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d b8 00
	00 00		 mov	 rcx, QWORD PTR _Where$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 32
_Count$ = 40
_My_data$ = 48
_Mylast$ = 56
_Oldfirst$ = 64
_Oldlast$ = 72
_Unused_capacity$ = 80
_Oldsize$1 = 88
_Newsize$2 = 96
_Newcapacity$3 = 104
_Newvec$4 = 112
_Whereoff$5 = 120
_Constructed_last$6 = 128
_Constructed_first$7 = 136
_Affected_elements$8 = 144
_Relocated$9 = 152
this$ = 176
_Where$ = 184
_First$ = 192
_Last$ = 200
__formal$ = 208
?catch$1@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>'::`1'::catch$1

; 898  :             _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z$0:

; 899  :             _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 85 80 00
	00 00		 mov	 r8, QWORD PTR _Constructed_last$6[rbp]
  0001a	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR _Constructed_first$7[rbp]
  00021	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00028	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy

; 900  :             _Getal().deallocate(_Newvec, _Newcapacity);

  0002d	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00034	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  00039	4c 8b 45 68	 mov	 r8, QWORD PTR _Newcapacity$3[rbp]
  0003d	48 8b 55 70	 mov	 rdx, QWORD PTR _Newvec$4[rbp]
  00041	48 8b c8	 mov	 rcx, rax
  00044	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate

; 901  :             _RERAISE;

  00049	33 d2		 xor	 edx, edx
  0004b	33 c9		 xor	 ecx, ecx
  0004d	e8 00 00 00 00	 call	 _CxxThrowException
  00052	90		 npad	 1

; 902  :             _CATCH_END

  00053	48 8d 05 00 00
	00 00		 lea	 rax, $LN29@catch$1
  0005a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0005e	5f		 pop	 rdi
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
  00061	cc		 int	 3
?catch$1@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 32
_Count$ = 40
_My_data$ = 48
_Mylast$ = 56
_Oldfirst$ = 64
_Oldlast$ = 72
_Unused_capacity$ = 80
_Oldsize$1 = 88
_Newsize$2 = 96
_Newcapacity$3 = 104
_Newvec$4 = 112
_Whereoff$5 = 120
_Constructed_last$6 = 128
_Constructed_first$7 = 136
_Affected_elements$8 = 144
_Relocated$9 = 152
this$ = 176
_Where$ = 184
_First$ = 192
_Last$ = 200
__formal$ = 208
?catch$3@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>'::`1'::catch$3

; 918  :                 _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z$2:

; 919  :                 // glue the broken pieces back together
; 920  : 
; 921  :                 _TRY_BEGIN
; 922  :                 _Umove(_Whereptr + _Count, _Whereptr + 2 * _Count, _Whereptr);

  00013	48 8b 45 28	 mov	 rax, QWORD PTR _Count$[rbp]
  00017	48 d1 e0	 shl	 rax, 1
  0001a	48 6b c0 28	 imul	 rax, rax, 40		; 00000028H
  0001e	48 8b 4d 20	 mov	 rcx, QWORD PTR _Whereptr$[rbp]
  00022	48 03 c8	 add	 rcx, rax
  00025	48 8b c1	 mov	 rax, rcx
  00028	48 6b 4d 28 28	 imul	 rcx, QWORD PTR _Count$[rbp], 40 ; 00000028H
  0002d	48 8b 55 20	 mov	 rdx, QWORD PTR _Whereptr$[rbp]
  00031	48 03 d1	 add	 rdx, rcx
  00034	48 8b ca	 mov	 rcx, rdx
  00037	4c 8b 4d 20	 mov	 r9, QWORD PTR _Whereptr$[rbp]
  0003b	4c 8b c0	 mov	 r8, rax
  0003e	48 8b d1	 mov	 rdx, rcx
  00041	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00048	e8 00 00 00 00	 call	 ?_Umove@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEAV32@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove
  0004d	90		 npad	 1
  0004e	eb 00		 jmp	 SHORT $LN30@catch$3
$LN31@catch$3:
$LN30@catch$3:

; 923  :                 _CATCH_ALL
; 924  :                 // vaporize the detached piece
; 925  :                 _Orphan_range(_Whereptr, _Oldlast);
; 926  :                 _Destroy(_Whereptr + _Count, _Mylast);
; 927  :                 _Mylast = _Whereptr;
; 928  :                 _RERAISE;
; 929  :                 _CATCH_END
; 930  : 
; 931  :                 _Move_unchecked(_Whereptr + 2 * _Count, _Mylast, _Whereptr + _Count);

  00050	48 6b 45 28 28	 imul	 rax, QWORD PTR _Count$[rbp], 40 ; 00000028H
  00055	48 8b 4d 20	 mov	 rcx, QWORD PTR _Whereptr$[rbp]
  00059	48 03 c8	 add	 rcx, rax
  0005c	48 8b c1	 mov	 rax, rcx
  0005f	48 8b 4d 28	 mov	 rcx, QWORD PTR _Count$[rbp]
  00063	48 d1 e1	 shl	 rcx, 1
  00066	48 6b c9 28	 imul	 rcx, rcx, 40		; 00000028H
  0006a	48 8b 55 20	 mov	 rdx, QWORD PTR _Whereptr$[rbp]
  0006e	48 03 d1	 add	 rdx, rcx
  00071	48 8b ca	 mov	 rcx, rdx
  00074	4c 8b c0	 mov	 r8, rax
  00077	48 8b 45 38	 mov	 rax, QWORD PTR _Mylast$[rbp]
  0007b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007e	e8 00 00 00 00	 call	 ??$_Move_unchecked@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00@Z ; std::_Move_unchecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>

; 932  :                 _Destroy(_Oldlast, _Mylast);

  00083	48 8b 45 38	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00087	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0008a	48 8b 55 48	 mov	 rdx, QWORD PTR _Oldlast$[rbp]
  0008e	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00095	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy

; 933  :                 _Mylast = _Oldlast;

  0009a	48 8b 45 38	 mov	 rax, QWORD PTR _Mylast$[rbp]
  0009e	48 8b 4d 48	 mov	 rcx, QWORD PTR _Oldlast$[rbp]
  000a2	48 89 08	 mov	 QWORD PTR [rax], rcx

; 934  :                 _RERAISE;

  000a5	33 d2		 xor	 edx, edx
  000a7	33 c9		 xor	 ecx, ecx
  000a9	e8 00 00 00 00	 call	 _CxxThrowException
  000ae	90		 npad	 1

; 935  :                 _CATCH_END

  000af	48 8d 05 00 00
	00 00		 lea	 rax, $LN33@catch$3
  000b6	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000ba	5f		 pop	 rdi
  000bb	5d		 pop	 rbp
  000bc	c3		 ret	 0
  000bd	cc		 int	 3
?catch$3@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>'::`1'::catch$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 32
_Count$ = 40
_My_data$ = 48
_Mylast$ = 56
_Oldfirst$ = 64
_Oldlast$ = 72
_Unused_capacity$ = 80
_Oldsize$1 = 88
_Newsize$2 = 96
_Newcapacity$3 = 104
_Newvec$4 = 112
_Whereoff$5 = 120
_Constructed_last$6 = 128
_Constructed_first$7 = 136
_Affected_elements$8 = 144
_Relocated$9 = 152
this$ = 176
_Where$ = 184
_First$ = 192
_Last$ = 200
__formal$ = 208
?catch$2@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>'::`1'::catch$2

; 923  :                 _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z$3:

; 924  :                 // vaporize the detached piece
; 925  :                 _Orphan_range(_Whereptr, _Oldlast);

  00013	4c 8b 45 48	 mov	 r8, QWORD PTR _Oldlast$[rbp]
  00017	48 8b 55 20	 mov	 rdx, QWORD PTR _Whereptr$[rbp]
  0001b	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range

; 926  :                 _Destroy(_Whereptr + _Count, _Mylast);

  00027	48 6b 45 28 28	 imul	 rax, QWORD PTR _Count$[rbp], 40 ; 00000028H
  0002c	48 8b 4d 20	 mov	 rcx, QWORD PTR _Whereptr$[rbp]
  00030	48 03 c8	 add	 rcx, rax
  00033	48 8b c1	 mov	 rax, rcx
  00036	48 8b 4d 38	 mov	 rcx, QWORD PTR _Mylast$[rbp]
  0003a	4c 8b 01	 mov	 r8, QWORD PTR [rcx]
  0003d	48 8b d0	 mov	 rdx, rax
  00040	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00047	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy

; 927  :                 _Mylast = _Whereptr;

  0004c	48 8b 45 38	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00050	48 8b 4d 20	 mov	 rcx, QWORD PTR _Whereptr$[rbp]
  00054	48 89 08	 mov	 QWORD PTR [rax], rcx

; 928  :                 _RERAISE;

  00057	33 d2		 xor	 edx, edx
  00059	33 c9		 xor	 ecx, ecx
  0005b	e8 00 00 00 00	 call	 _CxxThrowException
  00060	90		 npad	 1

; 929  :                 _CATCH_END

  00061	48 8d 05 00 00
	00 00		 lea	 rax, $LN31@catch$2
  00068	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006c	5f		 pop	 rdi
  0006d	5d		 pop	 rbp
  0006e	c3		 ret	 0
  0006f	cc		 int	 3
?catch$2@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>'::`1'::catch$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 32
_Count$ = 40
_My_data$ = 48
_Mylast$ = 56
_Oldfirst$ = 64
_Oldlast$ = 72
_Unused_capacity$ = 80
_Oldsize$1 = 88
_Newsize$2 = 96
_Newcapacity$3 = 104
_Newvec$4 = 112
_Whereoff$5 = 120
_Constructed_last$6 = 128
_Constructed_first$7 = 136
_Affected_elements$8 = 144
_Relocated$9 = 152
this$ = 176
_Where$ = 184
_First$ = 192
_Last$ = 200
__formal$ = 208
?catch$5@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>'::`1'::catch$5

; 943  :                 _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z$6:

; 944  :                 // glue the broken pieces back together
; 945  : 
; 946  :                 _TRY_BEGIN
; 947  :                 _Umove(_Relocated, _Mylast, _Whereptr);

  00013	4c 8b 4d 20	 mov	 r9, QWORD PTR _Whereptr$[rbp]
  00017	48 8b 45 38	 mov	 rax, QWORD PTR _Mylast$[rbp]
  0001b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0001e	48 8b 95 98 00
	00 00		 mov	 rdx, QWORD PTR _Relocated$9[rbp]
  00025	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0002c	e8 00 00 00 00	 call	 ?_Umove@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEAV32@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove
  00031	90		 npad	 1
  00032	eb 00		 jmp	 SHORT $LN34@catch$5
$LN35@catch$5:
$LN34@catch$5:

; 948  :                 _CATCH_ALL
; 949  :                 // vaporize the detached piece
; 950  :                 _Orphan_range(_Whereptr, _Oldlast);
; 951  :                 _Destroy(_Relocated, _Mylast);
; 952  :                 _Mylast = _Whereptr;
; 953  :                 _RERAISE;
; 954  :                 _CATCH_END
; 955  : 
; 956  :                 _Destroy(_Relocated, _Mylast);

  00034	48 8b 45 38	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00038	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0003b	48 8b 95 98 00
	00 00		 mov	 rdx, QWORD PTR _Relocated$9[rbp]
  00042	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00049	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy

; 957  :                 _Mylast = _Oldlast;

  0004e	48 8b 45 38	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00052	48 8b 4d 48	 mov	 rcx, QWORD PTR _Oldlast$[rbp]
  00056	48 89 08	 mov	 QWORD PTR [rax], rcx

; 958  :                 _RERAISE;

  00059	33 d2		 xor	 edx, edx
  0005b	33 c9		 xor	 ecx, ecx
  0005d	e8 00 00 00 00	 call	 _CxxThrowException
  00062	90		 npad	 1

; 959  :                 _CATCH_END

  00063	48 8d 05 00 00
	00 00		 lea	 rax, $LN37@catch$5
  0006a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006e	5f		 pop	 rdi
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
  00071	cc		 int	 3
?catch$5@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>'::`1'::catch$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 32
_Count$ = 40
_My_data$ = 48
_Mylast$ = 56
_Oldfirst$ = 64
_Oldlast$ = 72
_Unused_capacity$ = 80
_Oldsize$1 = 88
_Newsize$2 = 96
_Newcapacity$3 = 104
_Newvec$4 = 112
_Whereoff$5 = 120
_Constructed_last$6 = 128
_Constructed_first$7 = 136
_Affected_elements$8 = 144
_Relocated$9 = 152
this$ = 176
_Where$ = 184
_First$ = 192
_Last$ = 200
__formal$ = 208
?catch$4@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>'::`1'::catch$4

; 948  :                 _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z$7:

; 949  :                 // vaporize the detached piece
; 950  :                 _Orphan_range(_Whereptr, _Oldlast);

  00013	4c 8b 45 48	 mov	 r8, QWORD PTR _Oldlast$[rbp]
  00017	48 8b 55 20	 mov	 rdx, QWORD PTR _Whereptr$[rbp]
  0001b	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range

; 951  :                 _Destroy(_Relocated, _Mylast);

  00027	48 8b 45 38	 mov	 rax, QWORD PTR _Mylast$[rbp]
  0002b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0002e	48 8b 95 98 00
	00 00		 mov	 rdx, QWORD PTR _Relocated$9[rbp]
  00035	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003c	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy

; 952  :                 _Mylast = _Whereptr;

  00041	48 8b 45 38	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00045	48 8b 4d 20	 mov	 rcx, QWORD PTR _Whereptr$[rbp]
  00049	48 89 08	 mov	 QWORD PTR [rax], rcx

; 953  :                 _RERAISE;

  0004c	33 d2		 xor	 edx, edx
  0004e	33 c9		 xor	 ecx, ecx
  00050	e8 00 00 00 00	 call	 _CxxThrowException
  00055	90		 npad	 1

; 954  :                 _CATCH_END

  00056	48 8d 05 00 00
	00 00		 lea	 rax, $LN35@catch$4
  0005d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00061	5f		 pop	 rdi
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
  00064	cc		 int	 3
?catch$4@?0???$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>'::`1'::catch$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@$0A@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
_It$ = 48
??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@$0A@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@@Z PROC ; std::_Get_unwrapped<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0>, COMDAT

; 257  : _NODISCARD constexpr auto _Get_unwrapped(const _Iter& _It) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 258  :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 259  :     return _It._Unwrapped();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _It$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Unwrapped@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Unwrapped

; 260  : }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@$0A@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@@Z ENDP ; std::_Get_unwrapped<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Adl_verify_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
??$_Adl_verify_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@0@Z PROC ; std::_Adl_verify_range<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT

; 217  :     const _Iter& _First, const _Sentinel& _Last) { // check that [_First, _Last) forms an iterator range

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 218  :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 219  :         _Verify_range(_First, _Last);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Last$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@0@Z ; std::_Verify_range

; 220  :     } else {
; 221  :         (void) _First; // TRANSITION, VSO#486357
; 222  :         (void) _Last; // TRANSITION, VSO#486357
; 223  :     }
; 224  : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Adl_verify_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@0@Z ENDP ; std::_Adl_verify_range<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_fill_n@V?$allocator@D@std@@@std@@YAPEADPEAD_KAEBDAEAV?$allocator@D@0@@Z
_TEXT	SEGMENT
tv66 = 32
_First$ = 64
_Count$ = 72
_Val$ = 80
_Al$ = 88
??$_Uninitialized_fill_n@V?$allocator@D@std@@@std@@YAPEADPEAD_KAEBDAEAV?$allocator@D@0@@Z PROC ; std::_Uninitialized_fill_n<std::allocator<char> >, COMDAT

; 1795 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, const typename _Alloc::value_type& _Val, _Alloc& _Al) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1796 :     // copy _Count copies of _Val to raw _First, using _Al
; 1797 :     using _Ty = typename _Alloc::value_type;
; 1798 :     if constexpr (_Fill_memset_is_safe<_Ty*, _Ty> && _Uses_default_construct<_Alloc, _Ty*, _Ty>::value) {
; 1799 :         (void) _Al;
; 1800 :         _CSTD memset(_Unfancy(_First), static_cast<unsigned char>(_Val), static_cast<size_t>(_Count));

  0002d	48 8b 44 24 50	 mov	 rax, QWORD PTR _Val$[rsp]
  00032	0f b6 00	 movzx	 eax, BYTE PTR [rax]
  00035	89 44 24 20	 mov	 DWORD PTR tv66[rsp], eax
  00039	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _First$[rsp]
  0003e	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00043	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Count$[rsp]
  00048	8b 4c 24 20	 mov	 ecx, DWORD PTR tv66[rsp]
  0004c	8b d1		 mov	 edx, ecx
  0004e	48 8b c8	 mov	 rcx, rax
  00051	e8 00 00 00 00	 call	 memset

; 1801 :         return _First + _Count;

  00056	48 8b 44 24 48	 mov	 rax, QWORD PTR _Count$[rsp]
  0005b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _First$[rsp]
  00060	48 03 c8	 add	 rcx, rax
  00063	48 8b c1	 mov	 rax, rcx

; 1802 :     } else {
; 1803 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1804 :         for (; 0 < _Count; --_Count) {
; 1805 :             _Backout._Emplace_back(_Val);
; 1806 :         }
; 1807 : 
; 1808 :         return _Backout._Release();
; 1809 :     }
; 1810 : }

  00066	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006a	5f		 pop	 rdi
  0006b	c3		 ret	 0
??$_Uninitialized_fill_n@V?$allocator@D@std@@@std@@YAPEADPEAD_KAEBDAEAV?$allocator@D@0@@Z ENDP ; std::_Uninitialized_fill_n<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z
_TEXT	SEGMENT
_Backout$4 = 40
$T5 = 72
_First$ = 96
_Count$ = 104
_Val$ = 112
_Al$ = 120
??$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z PROC ; std::_Uninitialized_fill_n<std::allocator<wchar_t> >, COMDAT

; 1795 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, const typename _Alloc::value_type& _Val, _Alloc& _Al) {

$LN7:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1796 :     // copy _Count copies of _Val to raw _First, using _Al
; 1797 :     using _Ty = typename _Alloc::value_type;
; 1798 :     if constexpr (_Fill_memset_is_safe<_Ty*, _Ty> && _Uses_default_construct<_Alloc, _Ty*, _Ty>::value) {
; 1799 :         (void) _Al;
; 1800 :         _CSTD memset(_Unfancy(_First), static_cast<unsigned char>(_Val), static_cast<size_t>(_Count));
; 1801 :         return _First + _Count;
; 1802 :     } else {
; 1803 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};

  0002d	4c 8b 44 24 78	 mov	 r8, QWORD PTR _Al$[rsp]
  00032	48 8b 54 24 60	 mov	 rdx, QWORD PTR _First$[rsp]
  00037	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  0003c	e8 00 00 00 00	 call	 ??0?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAA@PEA_WAEAV?$allocator@_W@1@@Z ; std::_Uninitialized_backout_al<std::allocator<wchar_t> >::_Uninitialized_backout_al<std::allocator<wchar_t> >
  00041	90		 npad	 1

; 1804 :         for (; 0 < _Count; --_Count) {

  00042	eb 0d		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  00044	48 8b 44 24 68	 mov	 rax, QWORD PTR _Count$[rsp]
  00049	48 ff c8	 dec	 rax
  0004c	48 89 44 24 68	 mov	 QWORD PTR _Count$[rsp], rax
$LN4@Uninitiali:
  00051	48 83 7c 24 68
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  00057	76 11		 jbe	 SHORT $LN3@Uninitiali

; 1805 :             _Backout._Emplace_back(_Val);

  00059	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Val$[rsp]
  0005e	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00063	e8 00 00 00 00	 call	 ??$_Emplace_back@AEB_W@?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAAXAEB_W@Z ; std::_Uninitialized_backout_al<std::allocator<wchar_t> >::_Emplace_back<wchar_t const &>

; 1806 :         }

  00068	eb da		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1807 : 
; 1808 :         return _Backout._Release();

  0006a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  0006f	e8 00 00 00 00	 call	 ?_Release@?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAAPEA_WXZ ; std::_Uninitialized_backout_al<std::allocator<wchar_t> >::_Release
  00074	48 89 44 24 48	 mov	 QWORD PTR $T5[rsp], rax
  00079	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  0007e	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<wchar_t> >::~_Uninitialized_backout_al<std::allocator<wchar_t> >
  00083	48 8b 44 24 48	 mov	 rax, QWORD PTR $T5[rsp]

; 1809 :     }
; 1810 : }

  00088	48 8b f8	 mov	 rdi, rax
  0008b	48 8b cc	 mov	 rcx, rsp
  0008e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z$rtcFrameData
  00095	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0009a	48 8b c7	 mov	 rax, rdi
  0009d	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000a1	5f		 pop	 rdi
  000a2	c3		 ret	 0
??$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z ENDP ; std::_Uninitialized_fill_n<std::allocator<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$4 = 40
$T5 = 72
_First$ = 96
_Count$ = 104
_Val$ = 112
_Al$ = 120
?dtor$0@?0???$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z@4HA PROC ; `std::_Uninitialized_fill_n<std::allocator<wchar_t> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<wchar_t> >::~_Uninitialized_backout_al<std::allocator<wchar_t> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z@4HA ENDP ; `std::_Uninitialized_fill_n<std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Backout$4 = 40
$T5 = 72
_First$ = 96
_Count$ = 104
_Val$ = 112
_Al$ = 120
?dtor$0@?0???$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z@4HA PROC ; `std::_Uninitialized_fill_n<std::allocator<wchar_t> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@_W@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<wchar_t> >::~_Uninitialized_backout_al<std::allocator<wchar_t> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z@4HA ENDP ; `std::_Uninitialized_fill_n<std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 1729 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 1730 :     // move [_First, _Last) to raw _Dest, using _Al
; 1731 :     // note: only called internally from elsewhere in the STL
; 1732 :     using _Ptrval     = typename _Alloc::value_type*;
; 1733 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _First$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@@Z ; std::_Get_unwrapped<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  00037	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax

; 1734 :     const auto _ULast = _Get_unwrapped(_Last);

  0003c	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Last$[rsp]
  00041	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@@Z ; std::_Get_unwrapped<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  00046	48 89 44 24 28	 mov	 QWORD PTR _ULast$[rsp], rax

; 1735 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1736 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1737 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1738 :         return _Dest + (_ULast - _UFirst);
; 1739 :         (void) _Al;
; 1740 :     } else {
; 1741 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

  0004b	4c 8b 84 24 88
	00 00 00	 mov	 r8, QWORD PTR _Al$[rsp]
  00053	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Dest$[rsp]
  0005b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00060	e8 00 00 00 00	 call	 ??0?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
  00065	90		 npad	 1

; 1742 :         for (; _UFirst != _ULast; ++_UFirst) {

  00066	eb 0e		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  00068	48 8b 44 24 20	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0006d	48 83 c0 28	 add	 rax, 40			; 00000028H
  00071	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
  00076	48 8b 44 24 28	 mov	 rax, QWORD PTR _ULast$[rsp]
  0007b	48 39 44 24 20	 cmp	 QWORD PTR _UFirst$[rsp], rax
  00080	74 19		 je	 SHORT $LN3@Uninitiali

; 1743 :             _Backout._Emplace_back(_STD move(*_UFirst));

  00082	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _UFirst$[rsp]
  00087	e8 00 00 00 00	 call	 ??$move@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>
  0008c	48 8b d0	 mov	 rdx, rax
  0008f	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00094	e8 00 00 00 00	 call	 ??$_Emplace_back@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_back<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >

; 1744 :         }

  00099	eb cd		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1745 : 
; 1746 :         return _Backout._Release();

  0009b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  000a0	e8 00 00 00 00	 call	 ?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Release
  000a5	48 89 44 24 58	 mov	 QWORD PTR $T5[rsp], rax
  000aa	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  000af	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
  000b4	48 8b 44 24 58	 mov	 rax, QWORD PTR $T5[rsp]

; 1747 :     }
; 1748 : }

  000b9	48 8b f8	 mov	 rdi, rax
  000bc	48 8b cc	 mov	 rcx, rsp
  000bf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z$rtcFrameData
  000c6	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000cb	48 8b c7	 mov	 rax, rdi
  000ce	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000d2	5f		 pop	 rdi
  000d3	c3		 ret	 0
??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~_Uninitialized_backout_al<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0CI@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0CI@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<40>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 66 66 66
	66 66 66 66 06	 mov	 rax, 461168601842738790	; 0666666666666666H
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 66 66 66
	66 66 66 66 06	 mov	 rax, 461168601842738790	; 0666666666666666H
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Count$[rsp], 40 ; 00000028H
$LN3@Get_size_o:

; 36   : }

  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Get_size_of_n@$0CI@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<40>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEBV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEBV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 1729 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 1730 :     // move [_First, _Last) to raw _Dest, using _Al
; 1731 :     // note: only called internally from elsewhere in the STL
; 1732 :     using _Ptrval     = typename _Alloc::value_type*;
; 1733 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _First$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@@Z ; std::_Get_unwrapped<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00037	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax

; 1734 :     const auto _ULast = _Get_unwrapped(_Last);

  0003c	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Last$[rsp]
  00041	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@@Z ; std::_Get_unwrapped<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00046	48 89 44 24 28	 mov	 QWORD PTR _ULast$[rsp], rax

; 1735 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1736 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1737 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1738 :         return _Dest + (_ULast - _UFirst);
; 1739 :         (void) _Al;
; 1740 :     } else {
; 1741 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

  0004b	4c 8b 84 24 88
	00 00 00	 mov	 r8, QWORD PTR _Al$[rsp]
  00053	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Dest$[rsp]
  0005b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00060	e8 00 00 00 00	 call	 ??0?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00065	90		 npad	 1

; 1742 :         for (; _UFirst != _ULast; ++_UFirst) {

  00066	eb 0e		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  00068	48 8b 44 24 20	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0006d	48 83 c0 28	 add	 rax, 40			; 00000028H
  00071	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
  00076	48 8b 44 24 28	 mov	 rax, QWORD PTR _ULast$[rsp]
  0007b	48 39 44 24 20	 cmp	 QWORD PTR _UFirst$[rsp], rax
  00080	74 19		 je	 SHORT $LN3@Uninitiali

; 1743 :             _Backout._Emplace_back(_STD move(*_UFirst));

  00082	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _UFirst$[rsp]
  00087	e8 00 00 00 00	 call	 ??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  0008c	48 8b d0	 mov	 rdx, rax
  0008f	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00094	e8 00 00 00 00	 call	 ??$_Emplace_back@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_back<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 1744 :         }

  00099	eb cd		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1745 : 
; 1746 :         return _Backout._Release();

  0009b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  000a0	e8 00 00 00 00	 call	 ?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Release
  000a5	48 89 44 24 58	 mov	 QWORD PTR $T5[rsp], rax
  000aa	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  000af	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  000b4	48 8b 44 24 58	 mov	 rax, QWORD PTR $T5[rsp]

; 1747 :     }
; 1748 : }

  000b9	48 8b f8	 mov	 rdi, rax
  000bc	48 8b cc	 mov	 rcx, rsp
  000bf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z$rtcFrameData
  000c6	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000cb	48 8b c7	 mov	 rax, rdi
  000ce	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000d2	5f		 pop	 rdi
  000d3	c3		 ret	 0
??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Uninitialized_backout_al<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 762  :     static void destroy(_Alloc&, _Uty* const _Ptr) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 763  :         _Ptr->~_Uty();

  00023	33 d2		 xor	 edx, edx
  00025	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0002a	e8 00 00 00 00	 call	 ??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAPEAXI@Z

; 764  :     }

  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 762  :     static void destroy(_Alloc&, _Uty* const _Ptr) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 763  :         _Ptr->~_Uty();

  00023	33 d2		 xor	 edx, edx
  00025	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0002a	e8 00 00 00 00	 call	 ??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z

; 764  :     }

  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 48
_Ptr_container$ = 56
_Ptr$ = 64
_Bytes$ = 96
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 83   : _DECLSPEC_ALLOCATOR void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 84   :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 85   :     const size_t _Block_size = _Non_user_size + _Bytes;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00023	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  00027	48 89 44 24 30	 mov	 QWORD PTR _Block_size$[rsp], rax

; 86   :     if (_Block_size <= _Bytes) {

  0002c	48 8b 44 24 60	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00031	48 39 44 24 30	 cmp	 QWORD PTR _Block_size$[rsp], rax
  00036	77 05		 ja	 SHORT $LN8@Allocate_m

; 87   :         _Throw_bad_array_new_length(); // add overflow

  00038	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 88   :     }
; 89   : 
; 90   :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Block_size$[rsp]
  00042	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00047	48 89 44 24 38	 mov	 QWORD PTR _Ptr_container$[rsp], rax
$LN4@Allocate_m:

; 91   :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0004c	48 83 7c 24 38
	00		 cmp	 QWORD PTR _Ptr_container$[rsp], 0
  00052	74 02		 je	 SHORT $LN9@Allocate_m
  00054	eb 6b		 jmp	 SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
  00056	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG150241
  0005d	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00062	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG150242
  00069	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0006e	45 33 c9	 xor	 r9d, r9d
  00071	41 b8 5b 00 00
	00		 mov	 r8d, 91			; 0000005bH
  00077	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG150243
  0007e	b9 02 00 00 00	 mov	 ecx, 2
  00083	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 03		 jne	 SHORT $LN12@Allocate_m
  0008e	cc		 int	 3
  0008f	33 c0		 xor	 eax, eax
$LN12@Allocate_m:
  00091	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0009a	41 b9 5b 00 00
	00		 mov	 r9d, 91			; 0000005bH
  000a0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG150244
  000a7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG150245
  000ae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG150246
  000b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000bb	33 c0		 xor	 eax, eax
  000bd	85 c0		 test	 eax, eax
  000bf	75 95		 jne	 SHORT $LN7@Allocate_m
$LN10@Allocate_m:
  000c1	33 c0		 xor	 eax, eax
  000c3	85 c0		 test	 eax, eax
  000c5	75 85		 jne	 SHORT $LN4@Allocate_m

; 92   :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  000c7	48 8b 44 24 38	 mov	 rax, QWORD PTR _Ptr_container$[rsp]
  000cc	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  000d0	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H
  000d4	48 89 44 24 40	 mov	 QWORD PTR _Ptr$[rsp], rax

; 93   :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  000d9	b8 08 00 00 00	 mov	 eax, 8
  000de	48 6b c0 ff	 imul	 rax, rax, -1
  000e2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000e7	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr_container$[rsp]
  000ec	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 94   : 
; 95   : #ifdef _DEBUG
; 96   :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

  000f0	b8 08 00 00 00	 mov	 eax, 8
  000f5	48 6b c0 fe	 imul	 rax, rax, -2
  000f9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000fe	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  00108	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 97   : #endif // _DEBUG
; 98   :     return _Ptr;

  0010c	48 8b 44 24 40	 mov	 rax, QWORD PTR _Ptr$[rsp]
$LN11@Allocate_m:

; 99   : }

  00111	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00115	5f		 pop	 rdi
  00116	c3		 ret	 0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z PROC		; std::forward<char * const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ENDP		; std::forward<char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z PROC		; std::addressof<char *>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBQEA_W@std@@YAAEBQEA_WAEBQEA_W@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBQEA_W@std@@YAAEBQEA_WAEBQEA_W@Z PROC	; std::forward<wchar_t * const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBQEA_W@std@@YAAEBQEA_WAEBQEA_W@Z ENDP	; std::forward<wchar_t * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z PROC	; std::addressof<wchar_t *>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z ENDP	; std::addressof<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::forward<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_String_bitmap@D$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$_String_bitmap@D$00@std@@QEAA@XZ PROC		; std::_String_bitmap<char,1>::_String_bitmap<char,1>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 7c 24 10	 mov	 rdi, QWORD PTR this$[rsp]
  00010	33 c0		 xor	 eax, eax
  00012	b9 00 01 00 00	 mov	 ecx, 256		; 00000100H
  00017	f3 aa		 rep stosb
  00019	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001e	5f		 pop	 rdi
  0001f	c3		 ret	 0
??0?$_String_bitmap@D$00@std@@QEAA@XZ ENDP		; std::_String_bitmap<char,1>::_String_bitmap<char,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Match@?$_String_bitmap@D$00@std@@QEBA_ND@Z
_TEXT	SEGMENT
this$ = 16
_Ch$ = 24
?_Match@?$_String_bitmap@D$00@std@@QEBA_ND@Z PROC	; std::_String_bitmap<char,1>::_Match, COMDAT

; 643  :     constexpr bool _Match(const _Elem _Ch) const { // test if _Ch is in the bitmap

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi

; 644  :         return _Matches[static_cast<unsigned char>(_Ch)];

  0000a	0f b6 44 24 18	 movzx	 eax, BYTE PTR _Ch$[rsp]
  0000f	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00014	0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+rax]

; 645  :     }

  00018	5f		 pop	 rdi
  00019	c3		 ret	 0
?_Match@?$_String_bitmap@D$00@std@@QEBA_ND@Z ENDP	; std::_String_bitmap<char,1>::_Match
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Mark@?$_String_bitmap@D$00@std@@QEAA_NPEBDQEBD@Z
_TEXT	SEGMENT
this$ = 16
_First$ = 24
_Last$ = 32
?_Mark@?$_String_bitmap@D$00@std@@QEAA_NPEBDQEBD@Z PROC	; std::_String_bitmap<char,1>::_Mark, COMDAT

; 633  :     constexpr bool _Mark(const _Elem* _First, const _Elem* const _Last) {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 634  :         // mark this bitmap such that the characters in [_First, _Last) are intended to match
; 635  :         // returns whether all inputs can be placed in the bitmap
; 636  :         for (; _First != _Last; ++_First) {

  00010	eb 0d		 jmp	 SHORT $LN4@Mark
$LN2@Mark:
  00012	48 8b 44 24 18	 mov	 rax, QWORD PTR _First$[rsp]
  00017	48 ff c0	 inc	 rax
  0001a	48 89 44 24 18	 mov	 QWORD PTR _First$[rsp], rax
$LN4@Mark:
  0001f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Last$[rsp]
  00024	48 39 44 24 18	 cmp	 QWORD PTR _First$[rsp], rax
  00029	74 13		 je	 SHORT $LN3@Mark

; 637  :             _Matches[static_cast<unsigned char>(*_First)] = true;

  0002b	48 8b 44 24 18	 mov	 rax, QWORD PTR _First$[rsp]
  00030	0f b6 00	 movzx	 eax, BYTE PTR [rax]
  00033	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00038	c6 04 01 01	 mov	 BYTE PTR [rcx+rax], 1

; 638  :         }

  0003c	eb d4		 jmp	 SHORT $LN2@Mark
$LN3@Mark:

; 639  : 
; 640  :         return true;

  0003e	b0 01		 mov	 al, 1

; 641  :     }

  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
?_Mark@?$_String_bitmap@D$00@std@@QEAA_NPEBDQEBD@Z ENDP	; std::_String_bitmap<char,1>::_Mark
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@V?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z PROC ; std::forward<std::allocator<wchar_t> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@V?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z ENDP ; std::forward<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_String_bitmap@_W$0A@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$_String_bitmap@_W$0A@@std@@QEAA@XZ PROC		; std::_String_bitmap<wchar_t,0>::_String_bitmap<wchar_t,0>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 7c 24 10	 mov	 rdi, QWORD PTR this$[rsp]
  00010	33 c0		 xor	 eax, eax
  00012	b9 00 01 00 00	 mov	 ecx, 256		; 00000100H
  00017	f3 aa		 rep stosb
  00019	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001e	5f		 pop	 rdi
  0001f	c3		 ret	 0
??0?$_String_bitmap@_W$0A@@std@@QEAA@XZ ENDP		; std::_String_bitmap<wchar_t,0>::_String_bitmap<wchar_t,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Match@?$_String_bitmap@_W$0A@@std@@QEBA_N_W@Z
_TEXT	SEGMENT
tv72 = 0
this$ = 32
_Ch$ = 40
?_Match@?$_String_bitmap@_W$0A@@std@@QEBA_N_W@Z PROC	; std::_String_bitmap<wchar_t,0>::_Match, COMDAT

; 673  :     constexpr bool _Match(const _Elem _Ch) const { // test if _Ch is in the bitmap

$LN5:
  00000	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 674  :         return _Ch < 256U && _Matches[_Ch];

  00023	0f b7 44 24 28	 movzx	 eax, WORD PTR _Ch$[rsp]
  00028	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H
  0002d	73 1b		 jae	 SHORT $LN3@Match
  0002f	0f b7 44 24 28	 movzx	 eax, WORD PTR _Ch$[rsp]
  00034	48 8b 4c 24 20	 mov	 rcx, QWORD PTR this$[rsp]
  00039	0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+rax]
  0003d	85 c0		 test	 eax, eax
  0003f	74 09		 je	 SHORT $LN3@Match
  00041	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv72[rsp], 1
  00048	eb 07		 jmp	 SHORT $LN4@Match
$LN3@Match:
  0004a	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv72[rsp], 0
$LN4@Match:
  00051	0f b6 04 24	 movzx	 eax, BYTE PTR tv72[rsp]

; 675  :     }

  00055	48 83 c4 10	 add	 rsp, 16
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
?_Match@?$_String_bitmap@_W$0A@@std@@QEBA_N_W@Z ENDP	; std::_String_bitmap<wchar_t,0>::_Match
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Mark@?$_String_bitmap@_W$0A@@std@@QEAA_NPEB_WQEB_W@Z
_TEXT	SEGMENT
_Ch$1 = 0
this$ = 32
_First$ = 40
_Last$ = 48
?_Mark@?$_String_bitmap@_W$0A@@std@@QEAA_NPEB_WQEB_W@Z PROC ; std::_String_bitmap<wchar_t,0>::_Mark, COMDAT

; 658  :     constexpr bool _Mark(const _Elem* _First, const _Elem* const _Last) {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 10	 sub	 rsp, 16
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 04 00 00 00	 mov	 ecx, 4
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 659  :         // mark this bitmap such that the characters in [_First, _Last) are intended to match
; 660  :         // returns whether all inputs can be placed in the bitmap
; 661  :         for (; _First != _Last; ++_First) {

  00028	eb 0e		 jmp	 SHORT $LN4@Mark
$LN2@Mark:
  0002a	48 8b 44 24 28	 mov	 rax, QWORD PTR _First$[rsp]
  0002f	48 83 c0 02	 add	 rax, 2
  00033	48 89 44 24 28	 mov	 QWORD PTR _First$[rsp], rax
$LN4@Mark:
  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR _Last$[rsp]
  0003d	48 39 44 24 28	 cmp	 QWORD PTR _First$[rsp], rax
  00042	74 2a		 je	 SHORT $LN3@Mark

; 662  :             const auto _Ch = *_First;

  00044	48 8b 44 24 28	 mov	 rax, QWORD PTR _First$[rsp]
  00049	0f b7 00	 movzx	 eax, WORD PTR [rax]
  0004c	66 89 04 24	 mov	 WORD PTR _Ch$1[rsp], ax

; 663  :             if (_Ch >= 256U) {

  00050	0f b7 04 24	 movzx	 eax, WORD PTR _Ch$1[rsp]
  00054	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H
  00059	72 04		 jb	 SHORT $LN5@Mark

; 664  :                 return false;

  0005b	32 c0		 xor	 al, al
  0005d	eb 11		 jmp	 SHORT $LN1@Mark
$LN5@Mark:

; 665  :             }
; 666  : 
; 667  :             _Matches[static_cast<unsigned char>(_Ch)] = true;

  0005f	0f b6 04 24	 movzx	 eax, BYTE PTR _Ch$1[rsp]
  00063	48 8b 4c 24 20	 mov	 rcx, QWORD PTR this$[rsp]
  00068	c6 04 01 01	 mov	 BYTE PTR [rcx+rax], 1

; 668  :         }

  0006c	eb bc		 jmp	 SHORT $LN2@Mark
$LN3@Mark:

; 669  : 
; 670  :         return true;

  0006e	b0 01		 mov	 al, 1
$LN1@Mark:

; 671  :     }

  00070	48 83 c4 10	 add	 rsp, 16
  00074	5f		 pop	 rdi
  00075	c3		 ret	 0
?_Mark@?$_String_bitmap@_W$0A@@std@@QEAA_NPEB_WQEB_W@Z ENDP ; std::_String_bitmap<wchar_t,0>::_Mark
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??1?$_Tidy_guard@V?$vector@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tidy_guard@V?$vector@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<char,std::allocator<char> > >::~_Tidy_guard<std::vector<char,std::allocator<char> > >, COMDAT

; 3526 :     ~_Tidy_guard() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3527 :         if (_Target) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 0d		 je	 SHORT $LN2@Tidy_guard

; 3528 :             _Target->_Tidy();

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00031	e8 00 00 00 00	 call	 ?_Tidy@?$vector@DV?$allocator@D@std@@@std@@AEAAXXZ ; std::vector<char,std::allocator<char> >::_Tidy
$LN2@Tidy_guard:

; 3529 :         }
; 3530 :     }

  00036	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??1?$_Tidy_guard@V?$vector@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<char,std::allocator<char> > >::~_Tidy_guard<std::vector<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z PROC ; std::forward<std::allocator<char> const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z ENDP ; std::forward<std::allocator<char> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??1?$_Tidy_guard@V?$vector@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tidy_guard@V?$vector@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<wchar_t,std::allocator<wchar_t> > >::~_Tidy_guard<std::vector<wchar_t,std::allocator<wchar_t> > >, COMDAT

; 3526 :     ~_Tidy_guard() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3527 :         if (_Target) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 0d		 je	 SHORT $LN2@Tidy_guard

; 3528 :             _Target->_Tidy();

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00031	e8 00 00 00 00	 call	 ?_Tidy@?$vector@_WV?$allocator@_W@std@@@std@@AEAAXXZ ; std::vector<wchar_t,std::allocator<wchar_t> >::_Tidy
$LN2@Tidy_guard:

; 3529 :         }
; 3530 :     }

  00036	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??1?$_Tidy_guard@V?$vector@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<wchar_t,std::allocator<wchar_t> > >::~_Tidy_guard<std::vector<wchar_t,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@_W@std@@@std@@YAAEBV?$allocator@_W@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$allocator@_W@std@@@std@@YAAEBV?$allocator@_W@0@AEBV10@@Z PROC ; std::forward<std::allocator<wchar_t> const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBV?$allocator@_W@std@@@std@@YAAEBV?$allocator@_W@0@AEBV10@@Z ENDP ; std::forward<std::allocator<wchar_t> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AEAV10@@Z PROC ; std::forward<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AEAV10@@Z ENDP ; std::forward<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z PROC ; std::forward<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z ENDP ; std::forward<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 1081 : void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1082 :     // deallocate a plain pointer using an allocator
; 1083 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1084 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1085 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

  00023	41 b8 01 00 00
	00		 mov	 r8d, 1
  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
  00038	90		 npad	 1

; 1086 :     } else {
; 1087 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1088 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1089 :     }
; 1090 : }

  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5f		 pop	 rdi
  0003e	c3		 ret	 0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
_TEXT	SEGMENT
gcd$ = 32
a$ = 64
b$ = 72
??$rgy_reduce@H@@YAXAEAH0@Z PROC			; rgy_reduce<int>

; 240  : static inline void rgy_reduce(T& a, T& b) {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 241  :     static_assert(std::is_integral<T>::value, "rgy_reduce is defined only for integer.");
; 242  :     if (a == 0 || b == 0) return;

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR a$[rsp]
  00028	83 38 00	 cmp	 DWORD PTR [rax], 0
  0002b	74 0a		 je	 SHORT $LN3@rgy_reduce
  0002d	48 8b 44 24 48	 mov	 rax, QWORD PTR b$[rsp]
  00032	83 38 00	 cmp	 DWORD PTR [rax], 0
  00035	75 02		 jne	 SHORT $LN2@rgy_reduce
$LN3@rgy_reduce:
  00037	eb 3d		 jmp	 SHORT $LN1@rgy_reduce
$LN2@rgy_reduce:

; 243  :     T gcd = rgy_gcd(a, b);

  00039	48 8b 44 24 48	 mov	 rax, QWORD PTR b$[rsp]
  0003e	8b 10		 mov	 edx, DWORD PTR [rax]
  00040	48 8b 44 24 40	 mov	 rax, QWORD PTR a$[rsp]
  00045	8b 08		 mov	 ecx, DWORD PTR [rax]
  00047	e8 00 00 00 00	 call	 ??$rgy_gcd@H@@YAHHH@Z	; rgy_gcd<int>
  0004c	89 44 24 20	 mov	 DWORD PTR gcd$[rsp], eax

; 244  :     a /= gcd;

  00050	48 8b 44 24 40	 mov	 rax, QWORD PTR a$[rsp]
  00055	8b 00		 mov	 eax, DWORD PTR [rax]
  00057	99		 cdq
  00058	f7 7c 24 20	 idiv	 DWORD PTR gcd$[rsp]
  0005c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR a$[rsp]
  00061	89 01		 mov	 DWORD PTR [rcx], eax

; 245  :     b /= gcd;

  00063	48 8b 44 24 48	 mov	 rax, QWORD PTR b$[rsp]
  00068	8b 00		 mov	 eax, DWORD PTR [rax]
  0006a	99		 cdq
  0006b	f7 7c 24 20	 idiv	 DWORD PTR gcd$[rsp]
  0006f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR b$[rsp]
  00074	89 01		 mov	 DWORD PTR [rcx], eax
$LN1@rgy_reduce:

; 246  : }

  00076	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0007a	5f		 pop	 rdi
  0007b	c3		 ret	 0
??$rgy_reduce@H@@YAXAEAH0@Z ENDP			; rgy_reduce<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0HH$0A@@?$pair@HH@std@@QEAA@$$QEAH0@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0HH$0A@@?$pair@HH@std@@QEAA@$$QEAH0@Z PROC		; std::pair<int,int>::pair<int,int><int,int,0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	8b 00		 mov	 eax, DWORD PTR [rax]
  00039	89 01		 mov	 DWORD PTR [rcx], eax
  0003b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00045	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004a	8b 00		 mov	 eax, DWORD PTR [rax]
  0004c	89 41 04	 mov	 DWORD PTR [rcx+4], eax
  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??$?0HH$0A@@?$pair@HH@std@@QEAA@$$QEAH0@Z ENDP		; std::pair<int,int>::pair<int,int><int,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0HH$0A@@?$pair@HH@std@@QEAA@AEBH0@Z
_TEXT	SEGMENT
this$ = 16
_Val1$ = 24
_Val2$ = 32
??$?0HH$0A@@?$pair@HH@std@@QEAA@AEBH0@Z PROC		; std::pair<int,int>::pair<int,int><int,int,0>, COMDAT

; 110  :         : first(_Val1), second(_Val2) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0001a	8b 09		 mov	 ecx, DWORD PTR [rcx]
  0001c	89 08		 mov	 DWORD PTR [rax], ecx
  0001e	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00028	8b 09		 mov	 ecx, DWORD PTR [rcx]
  0002a	89 48 04	 mov	 DWORD PTR [rax+4], ecx
  0002d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00032	5f		 pop	 rdi
  00033	c3		 ret	 0
??$?0HH$0A@@?$pair@HH@std@@QEAA@AEBH0@Z ENDP		; std::pair<int,int>::pair<int,int><int,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBH@std@@YAAEBHAEBH@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBH@std@@YAAEBHAEBH@Z PROC			; std::forward<int const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBH@std@@YAAEBHAEBH@Z ENDP			; std::forward<int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 44
tv72 = 48
__$ReturnUdt$ = 80
_First$ = 88
_Last$ = 96
_Pred$ = 104
??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z PROC ; std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,std::less<void> >, COMDAT

; 4294 : _NODISCARD constexpr _FwdIt max_element(_FwdIt _First, _FwdIt _Last, _Pr _Pred) { // find largest element, using _Pred

$LN7:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
  0002d	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T3[rsp], 0

; 4295 :     _Adl_verify_range(_First, _Last);

  00035	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >

; 4296 :     _Seek_wrapped(_First, _Max_element_unchecked(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Pass_fn(_Pred)));

  00044	0f b6 4c 24 68	 movzx	 ecx, BYTE PTR _Pred$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Pass_fn@U?$less@X@std@@$0A@@std@@YA?AU?$less@X@0@U10@@Z ; std::_Pass_fn<std::less<void>,0>
  0004e	88 44 24 28	 mov	 BYTE PTR $T2[rsp], al
  00052	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Last$[rsp]
  00057	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@$0A@@std@@YAPEANAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,0>
  0005c	48 89 44 24 30	 mov	 QWORD PTR tv72[rsp], rax
  00061	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _First$[rsp]
  00066	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@$0A@@std@@YAPEANAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,0>
  0006b	44 0f b6 44 24
	28		 movzx	 r8d, BYTE PTR $T2[rsp]
  00071	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv72[rsp]
  00076	48 8b d1	 mov	 rdx, rcx
  00079	48 8b c8	 mov	 rcx, rax
  0007c	e8 00 00 00 00	 call	 ??$_Max_element_unchecked@PEANU?$less@X@std@@@std@@YAPEANPEAN0U?$less@X@0@@Z ; std::_Max_element_unchecked<double *,std::less<void> >
  00081	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00086	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  0008b	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _First$[rsp]
  00090	e8 00 00 00 00	 call	 ??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@PEAN@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@AEBQEAN@Z ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,double *>

; 4297 :     return _First;

  00095	48 8b 54 24 58	 mov	 rdx, QWORD PTR _First$[rsp]
  0009a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0009f	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z
  000a4	8b 44 24 2c	 mov	 eax, DWORD PTR $T3[rsp]
  000a8	83 c8 01	 or	 eax, 1
  000ab	89 44 24 2c	 mov	 DWORD PTR $T3[rsp], eax
  000af	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _First$[rsp]
  000b4	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  000b9	90		 npad	 1
  000ba	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Last$[rsp]
  000bf	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  000c4	48 8b 44 24 50	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 4298 : }

  000c9	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000cd	5f		 pop	 rdi
  000ce	c3		 ret	 0
  000cf	cc		 int	 3
??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z ENDP ; std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,std::less<void> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 44
tv72 = 48
__$ReturnUdt$ = 80
_First$ = 88
_Last$ = 96
_Pred$ = 104
?dtor$0@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA PROC ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,std::less<void> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 60	 mov	 rcx, QWORD PTR _Last$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA ENDP ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,std::less<void> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 44
tv72 = 48
__$ReturnUdt$ = 80
_First$ = 88
_Last$ = 96
_Pred$ = 104
?dtor$1@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA PROC ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,std::less<void> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 58	 mov	 rcx, QWORD PTR _First$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA ENDP ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,std::less<void> >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 44
tv72 = 48
__$ReturnUdt$ = 80
_First$ = 88
_Last$ = 96
_Pred$ = 104
?dtor$2@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA PROC ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,std::less<void> >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 2c	 mov	 eax, DWORD PTR $T3[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN6@dtor$2
  0001d	83 65 2c fe	 and	 DWORD PTR $T3[rbp], -2
  00021	48 8b 4d 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
$LN6@dtor$2:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$2@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA ENDP ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,std::less<void> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 44
tv72 = 48
__$ReturnUdt$ = 80
_First$ = 88
_Last$ = 96
_Pred$ = 104
?dtor$0@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA PROC ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,std::less<void> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 60	 mov	 rcx, QWORD PTR _Last$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA ENDP ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,std::less<void> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 44
tv72 = 48
__$ReturnUdt$ = 80
_First$ = 88
_Last$ = 96
_Pred$ = 104
?dtor$1@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA PROC ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,std::less<void> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 58	 mov	 rcx, QWORD PTR _First$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA ENDP ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,std::less<void> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 44
tv72 = 48
__$ReturnUdt$ = 80
_First$ = 88
_Last$ = 96
_Pred$ = 104
?dtor$2@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA PROC ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,std::less<void> >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 2c	 mov	 eax, DWORD PTR $T3[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN6@dtor$2
  0001d	83 65 2c fe	 and	 DWORD PTR $T3[rbp], -2
  00021	48 8b 4d 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
$LN6@dtor$2:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$2@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z@4HA ENDP ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,std::less<void> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z
_TEXT	SEGMENT
_Whereptr$ = 48
_My_data$ = 56
_Oldfirst$ = 64
_Whereoff$ = 72
$T1 = 81
$T2 = 88
$T3 = 112
$T4 = 120
tv76 = 128
tv145 = 136
tv148 = 144
tv178 = 152
tv170 = 160
this$ = 192
__$ReturnUdt$ = 200
_Where$ = 208
_First$ = 216
_Last$ = 224
??$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void>, COMDAT

; 968  :     iterator insert(const_iterator _Where, _Iter _First, _Iter _Last) { // insert [_First, _Last) at _Where

$LN18:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+192]
  00033	c7 44 24 78 00
	00 00 00	 mov	 DWORD PTR $T4[rsp], 0

; 969  :         const pointer _Whereptr = _Where._Ptr;

  0003b	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR _Where$[rsp]
  00043	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00047	48 89 44 24 30	 mov	 QWORD PTR _Whereptr$[rsp], rax

; 970  :         auto& _My_data          = _Mypair._Myval2;

  0004c	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 89 44 24 38	 mov	 QWORD PTR _My_data$[rsp], rax

; 971  :         const pointer _Oldfirst = _My_data._Myfirst;

  00059	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  0005e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00062	48 89 44 24 40	 mov	 QWORD PTR _Oldfirst$[rsp], rax
$LN4@insert:

; 972  : #if _ITERATOR_DEBUG_LEVEL == 2
; 973  :         _STL_VERIFY(

  00067	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR _Where$[rsp]
  0006f	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00074	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR tv76[rsp], rax
  0007c	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00081	e8 00 00 00 00	 call	 ??$addressof@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  00086	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR tv76[rsp]
  0008e	48 3b c8	 cmp	 rcx, rax
  00091	75 1e		 jne	 SHORT $LN7@insert
  00093	48 8b 44 24 40	 mov	 rax, QWORD PTR _Oldfirst$[rsp]
  00098	48 39 44 24 30	 cmp	 QWORD PTR _Whereptr$[rsp], rax
  0009d	72 12		 jb	 SHORT $LN7@insert
  0009f	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  000a4	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Whereptr$[rsp]
  000a9	48 39 48 10	 cmp	 QWORD PTR [rax+16], rcx
  000ad	72 02		 jb	 SHORT $LN7@insert
  000af	eb 6b		 jmp	 SHORT $LN9@insert
$LN7@insert:
  000b1	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CF@NNBLLPGF@vector?5insert?5iterator?5outside?5@
  000b8	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000bd	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  000c4	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000c9	45 33 c9	 xor	 r9d, r9d
  000cc	41 b8 cf 03 00
	00		 mov	 r8d, 975		; 000003cfH
  000d2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000d9	b9 02 00 00 00	 mov	 ecx, 2
  000de	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000e4	83 f8 01	 cmp	 eax, 1
  000e7	75 03		 jne	 SHORT $LN11@insert
  000e9	cc		 int	 3
  000ea	33 c0		 xor	 eax, eax
$LN11@insert:
  000ec	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000f5	41 b9 cf 03 00
	00		 mov	 r9d, 975		; 000003cfH
  000fb	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00102	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BLK@GBKABDEF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa@
  00109	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EO@HCJPCNBE@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5@
  00110	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter

; 974  :             _Where._Getcont() == _STD addressof(_My_data) && _Whereptr >= _Oldfirst && _My_data._Mylast >= _Whereptr,
; 975  :             "vector insert iterator outside range");

  00116	33 c0		 xor	 eax, eax
  00118	85 c0		 test	 eax, eax
  0011a	75 95		 jne	 SHORT $LN7@insert
$LN9@insert:
  0011c	33 c0		 xor	 eax, eax
  0011e	85 c0		 test	 eax, eax
  00120	0f 85 41 ff ff
	ff		 jne	 $LN4@insert

; 976  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 977  : 
; 978  :         _Adl_verify_range(_First, _Last);

  00126	48 8b 94 24 e0
	00 00 00	 mov	 rdx, QWORD PTR _Last$[rsp]
  0012e	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  00136	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >

; 979  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Oldfirst);

  0013b	48 8b 44 24 40	 mov	 rax, QWORD PTR _Oldfirst$[rsp]
  00140	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Whereptr$[rsp]
  00145	48 2b c8	 sub	 rcx, rax
  00148	48 8b c1	 mov	 rax, rcx
  0014b	48 99		 cdq
  0014d	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00152	48 f7 f9	 idiv	 rcx
  00155	48 89 44 24 48	 mov	 QWORD PTR _Whereoff$[rsp], rax

; 980  :         _Insert_range(_Where, _Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>{});

  0015a	48 8d 44 24 58	 lea	 rax, QWORD PTR $T2[rsp]
  0015f	48 89 44 24 70	 mov	 QWORD PTR $T3[rsp], rax
  00164	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR _Last$[rsp]
  0016c	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@$0A@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0>
  00171	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR tv145[rsp], rax
  00179	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  00181	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@$0A@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,0>
  00186	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR tv148[rsp], rax
  0018e	48 8b 94 24 d0
	00 00 00	 mov	 rdx, QWORD PTR _Where$[rsp]
  00196	48 8b 4c 24 70	 mov	 rcx, QWORD PTR $T3[rsp]
  0019b	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z
  001a0	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR tv178[rsp], rax
  001a8	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR tv178[rsp]
  001b0	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR tv170[rsp], rax
  001b8	0f b6 44 24 51	 movzx	 eax, BYTE PTR $T1[rsp]
  001bd	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  001c1	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR tv145[rsp]
  001c9	4c 8b c8	 mov	 r9, rax
  001cc	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR tv148[rsp]
  001d4	4c 8b c0	 mov	 r8, rax
  001d7	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR tv170[rsp]
  001df	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001e7	e8 00 00 00 00	 call	 ??$_Insert_range@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@PEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@1Uforward_iterator_tag@1@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Insert_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const *>

; 981  :         return _Make_iterator_offset(_Whereoff);

  001ec	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Whereoff$[rsp]
  001f1	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR __$ReturnUdt$[rsp]
  001f9	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00201	e8 00 00 00 00	 call	 ?_Make_iterator_offset@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Make_iterator_offset
  00206	8b 44 24 78	 mov	 eax, DWORD PTR $T4[rsp]
  0020a	83 c8 01	 or	 eax, 1
  0020d	89 44 24 78	 mov	 DWORD PTR $T4[rsp], eax
  00211	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR _Where$[rsp]
  00219	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0021e	90		 npad	 1
  0021f	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  00227	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0022c	90		 npad	 1
  0022d	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR _Last$[rsp]
  00235	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0023a	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 982  :     }

  00242	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  00249	5f		 pop	 rdi
  0024a	c3		 ret	 0
  0024b	cc		 int	 3
??$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 48
_My_data$ = 56
_Oldfirst$ = 64
_Whereoff$ = 72
$T1 = 81
$T2 = 88
$T3 = 112
$T4 = 120
tv76 = 128
tv145 = 136
tv148 = 144
tv178 = 152
tv170 = 160
this$ = 192
__$ReturnUdt$ = 200
_Where$ = 208
_First$ = 216
_Last$ = 224
?dtor$0@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 48
_My_data$ = 56
_Oldfirst$ = 64
_Whereoff$ = 72
$T1 = 81
$T2 = 88
$T3 = 112
$T4 = 120
tv76 = 128
tv145 = 136
tv148 = 144
tv178 = 152
tv170 = 160
this$ = 192
__$ReturnUdt$ = 200
_Where$ = 208
_First$ = 216
_Last$ = 224
?dtor$1@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void>'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 48
_My_data$ = 56
_Oldfirst$ = 64
_Whereoff$ = 72
$T1 = 81
$T2 = 88
$T3 = 112
$T4 = 120
tv76 = 128
tv145 = 136
tv148 = 144
tv178 = 152
tv170 = 160
this$ = 192
__$ReturnUdt$ = 200
_Where$ = 208
_First$ = 216
_Last$ = 224
?dtor$2@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void>'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR _Where$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$2@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void>'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 48
_My_data$ = 56
_Oldfirst$ = 64
_Whereoff$ = 72
$T1 = 81
$T2 = 88
$T3 = 112
$T4 = 120
tv76 = 128
tv145 = 136
tv148 = 144
tv178 = 152
tv170 = 160
this$ = 192
__$ReturnUdt$ = 200
_Where$ = 208
_First$ = 216
_Last$ = 224
?dtor$3@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void>'::`1'::dtor$3
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 70	 mov	 rcx, QWORD PTR $T3[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$3@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void>'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 48
_My_data$ = 56
_Oldfirst$ = 64
_Whereoff$ = 72
$T1 = 81
$T2 = 88
$T3 = 112
$T4 = 120
tv76 = 128
tv145 = 136
tv148 = 144
tv178 = 152
tv170 = 160
this$ = 192
__$ReturnUdt$ = 200
_Where$ = 208
_First$ = 216
_Last$ = 224
?dtor$4@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void>'::`1'::dtor$4
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 78	 mov	 eax, DWORD PTR $T4[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN17@dtor$4
  0001d	83 65 78 fe	 and	 DWORD PTR $T4[rbp], -2
  00021	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
$LN17@dtor$4:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$4@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void>'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 48
_My_data$ = 56
_Oldfirst$ = 64
_Whereoff$ = 72
$T1 = 81
$T2 = 88
$T3 = 112
$T4 = 120
tv76 = 128
tv145 = 136
tv148 = 144
tv178 = 152
tv170 = 160
this$ = 192
__$ReturnUdt$ = 200
_Where$ = 208
_First$ = 216
_Last$ = 224
?dtor$0@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 48
_My_data$ = 56
_Oldfirst$ = 64
_Whereoff$ = 72
$T1 = 81
$T2 = 88
$T3 = 112
$T4 = 120
tv76 = 128
tv145 = 136
tv148 = 144
tv178 = 152
tv170 = 160
this$ = 192
__$ReturnUdt$ = 200
_Where$ = 208
_First$ = 216
_Last$ = 224
?dtor$1@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 48
_My_data$ = 56
_Oldfirst$ = 64
_Whereoff$ = 72
$T1 = 81
$T2 = 88
$T3 = 112
$T4 = 120
tv76 = 128
tv145 = 136
tv148 = 144
tv178 = 152
tv170 = 160
this$ = 192
__$ReturnUdt$ = 200
_Where$ = 208
_First$ = 216
_Last$ = 224
?dtor$2@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void>'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR _Where$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$2@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void>'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 48
_My_data$ = 56
_Oldfirst$ = 64
_Whereoff$ = 72
$T1 = 81
$T2 = 88
$T3 = 112
$T4 = 120
tv76 = 128
tv145 = 136
tv148 = 144
tv178 = 152
tv170 = 160
this$ = 192
__$ReturnUdt$ = 200
_Where$ = 208
_First$ = 216
_Last$ = 224
?dtor$3@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void>'::`1'::dtor$3
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 70	 mov	 rcx, QWORD PTR $T3[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$3@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void>'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 48
_My_data$ = 56
_Oldfirst$ = 64
_Whereoff$ = 72
$T1 = 81
$T2 = 88
$T3 = 112
$T4 = 120
tv76 = 128
tv145 = 136
tv148 = 144
tv178 = 152
tv170 = 160
this$ = 192
__$ReturnUdt$ = 200
_Where$ = 208
_First$ = 216
_Last$ = 224
?dtor$4@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void>'::`1'::dtor$4
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 78	 mov	 eax, DWORD PTR $T4[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN17@dtor$4
  0001d	83 65 78 fe	 and	 DWORD PTR $T4[rbp], -2
  00021	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
$LN17@dtor$4:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$4@?0???$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void>'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 216  :     _Vector_iterator(pointer _Parg, const _Container_base* _Pvector) : _Mybase(_Parg, _Pvector) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Pvector$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Parg$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  0003c	90		 npad	 1
  0003d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00046	5f		 pop	 rdi
  00047	c3		 ret	 0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z PROC ; std::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > ><int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &,0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	8b 00		 mov	 eax, DWORD PTR [rax]
  00039	89 01		 mov	 DWORD PTR [rcx], eax
  0003b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>
  00045	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004a	48 83 c1 08	 add	 rcx, 8
  0004e	48 8b d0	 mov	 rdx, rax
  00051	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00056	90		 npad	 1
  00057	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00060	5f		 pop	 rdi
  00061	c3		 ret	 0
??$?0HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ENDP ; std::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > ><int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
?dtor$0@?0???$?0HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z@4HA PROC ; `std::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > ><int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$?0HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z@4HA ENDP ; `std::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > ><int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
?dtor$0@?0???$?0HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z@4HA PROC ; `std::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > ><int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$?0HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z@4HA ENDP ; `std::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > ><int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z PROC ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ENDP ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z PROC ; std::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > ><int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &,0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	8b 00		 mov	 eax, DWORD PTR [rax]
  00039	89 01		 mov	 DWORD PTR [rcx], eax
  0003b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
  00045	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004a	48 83 c1 08	 add	 rcx, 8
  0004e	48 8b d0	 mov	 rdx, rax
  00051	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00056	90		 npad	 1
  00057	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00060	5f		 pop	 rdi
  00061	c3		 ret	 0
??$?0HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ENDP ; std::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > ><int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
?dtor$0@?0???$?0HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z@4HA PROC ; `std::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > ><int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$?0HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z@4HA ENDP ; `std::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > ><int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
?dtor$0@?0???$?0HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z@4HA PROC ; `std::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > ><int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$?0HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z@4HA ENDP ; `std::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > ><int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	8b 00		 mov	 eax, DWORD PTR [rax]
  00039	89 01		 mov	 DWORD PTR [rcx], eax
  0003b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  00045	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004a	48 83 c1 08	 add	 rcx, 8
  0004e	48 8b d0	 mov	 rdx, rax
  00051	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00056	90		 npad	 1
  00057	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00060	5f		 pop	 rdi
  00061	c3		 ret	 0
??$?0HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
?dtor$0@?0???$?0HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$?0HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
?dtor$0@?0???$?0HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$?0HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	8b 00		 mov	 eax, DWORD PTR [rax]
  00039	89 01		 mov	 DWORD PTR [rcx], eax
  0003b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
  00045	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004a	48 83 c1 08	 add	 rcx, 8
  0004e	48 8b d0	 mov	 rdx, rax
  00051	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00056	90		 npad	 1
  00057	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00060	5f		 pop	 rdi
  00061	c3		 ret	 0
??$?0HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
?dtor$0@?0???$?0HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$?0HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
?dtor$0@?0???$?0HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$?0HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@H@std@@YA$$QEAHAEAH@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@H@std@@YA$$QEAHAEAH@Z PROC			; std::forward<int>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@H@std@@YA$$QEAHAEAH@Z ENDP			; std::forward<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$01@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$01@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<2>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 8b 44 24 40	 mov	 rax, QWORD PTR _Count$[rsp]
  0004d	48 d1 e0	 shl	 rax, 1
$LN3@Get_size_o:

; 36   : }

  00050	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
??$_Get_size_of_n@$01@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@_W@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@$$CBV?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@_W@std@@@0@AEBV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > const >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@$$CBV?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@_W@std@@@0@AEBV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@_W@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@_W@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@_W@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@D@std@@@std@@YAXPEADQEADAEAV?$allocator@D@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@D@std@@@std@@YAXPEADQEADAEAV?$allocator@D@0@@Z PROC ; std::_Destroy_range<std::allocator<char> >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {
; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1039 :         }
; 1040 :     }
; 1041 : }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$_Destroy_range@V?$allocator@D@std@@@std@@YAXPEADQEADAEAV?$allocator@D@0@@Z ENDP ; std::_Destroy_range<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@_W@std@@@std@@YAXPEA_WQEA_WAEAV?$allocator@_W@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@_W@std@@@std@@YAXPEA_WQEA_WAEAV?$allocator@_W@0@@Z PROC ; std::_Destroy_range<std::allocator<wchar_t> >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {
; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1039 :         }
; 1040 :     }
; 1041 : }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$_Destroy_range@V?$allocator@_W@std@@@std@@YAXPEA_WQEA_WAEAV?$allocator@_W@0@@Z ENDP ; std::_Destroy_range<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$ = 64
??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {

  00028	eb 0e		 jmp	 SHORT $LN4@Destroy_ra
$LN2@Destroy_ra:
  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR _First$[rsp]
  0002f	48 83 c0 28	 add	 rax, 40			; 00000028H
  00033	48 89 44 24 30	 mov	 QWORD PTR _First$[rsp], rax
$LN4@Destroy_ra:
  00038	48 8b 44 24 38	 mov	 rax, QWORD PTR _Last$[rsp]
  0003d	48 39 44 24 30	 cmp	 QWORD PTR _First$[rsp], rax
  00042	74 1b		 je	 SHORT $LN3@Destroy_ra

; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));

  00044	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Unfancy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  0004e	90		 npad	 1
  0004f	48 8b d0	 mov	 rdx, rax
  00052	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Al$[rsp]
  00057	e8 00 00 00 00	 call	 ??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  0005c	90		 npad	 1

; 1039 :         }

  0005d	eb cb		 jmp	 SHORT $LN2@Destroy_ra
$LN3@Destroy_ra:

; 1040 :     }
; 1041 : }

  0005f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$ = 64
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {

  00028	eb 0e		 jmp	 SHORT $LN4@Destroy_ra
$LN2@Destroy_ra:
  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR _First$[rsp]
  0002f	48 83 c0 28	 add	 rax, 40			; 00000028H
  00033	48 89 44 24 30	 mov	 QWORD PTR _First$[rsp], rax
$LN4@Destroy_ra:
  00038	48 8b 44 24 38	 mov	 rax, QWORD PTR _Last$[rsp]
  0003d	48 39 44 24 30	 cmp	 QWORD PTR _First$[rsp], rax
  00042	74 1b		 je	 SHORT $LN3@Destroy_ra

; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));

  00044	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0004e	90		 npad	 1
  0004f	48 8b d0	 mov	 rdx, rax
  00052	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Al$[rsp]
  00057	e8 00 00 00 00	 call	 ??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0005c	90		 npad	 1

; 1039 :         }

  0005d	eb cb		 jmp	 SHORT $LN2@Destroy_ra
$LN3@Destroy_ra:

; 1040 :     }
; 1041 : }

  0005f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@N@std@@@std@@YAXPEANQEANAEAV?$allocator@N@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@N@std@@@std@@YAXPEANQEANAEAV?$allocator@N@0@@Z PROC ; std::_Destroy_range<std::allocator<double> >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {
; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1039 :         }
; 1040 :     }
; 1041 : }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$_Destroy_range@V?$allocator@N@std@@@std@@YAXPEANQEANAEAV?$allocator@N@0@@Z ENDP ; std::_Destroy_range<std::allocator<double> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
$LN3@Get_size_o:

; 36   : }

  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Bytes$ = 56
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 183  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 184  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 185  : #if defined(_M_IX86) || defined(_M_X64)
; 186  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00023	48 81 7c 24 38
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  0002c	72 10		 jb	 SHORT $LN2@Deallocate

; 187  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  0002e	48 8d 54 24 38	 lea	 rdx, QWORD PTR _Bytes$[rsp]
  00033	48 8d 4c 24 30	 lea	 rcx, QWORD PTR _Ptr$[rsp]
  00038	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
  0003d	90		 npad	 1
$LN2@Deallocate:

; 188  :     }
; 189  : #endif // defined(_M_IX86) || defined(_M_X64)
; 190  : 
; 191  :     ::operator delete(_Ptr, _Bytes);

  0003e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Bytes$[rsp]
  00043	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00048	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0004d	90		 npad	 1

; 192  : }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 167  : _DECLSPEC_ALLOCATOR void* _Allocate(const size_t _Bytes) {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 168  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 169  : #if defined(_M_IX86) || defined(_M_X64)
; 170  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001e	48 81 7c 24 30
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  00027	72 0c		 jb	 SHORT $LN2@Allocate

; 171  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00029	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  0002e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00033	eb 16		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 172  :     }
; 173  : #endif // defined(_M_IX86) || defined(_M_X64)
; 174  : 
; 175  :     if (_Bytes != 0) {

  00035	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Bytes$[rsp], 0
  0003b	74 0c		 je	 SHORT $LN3@Allocate

; 176  :         return _Traits::_Allocate(_Bytes);

  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00042	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00047	eb 02		 jmp	 SHORT $LN1@Allocate
$LN3@Allocate:

; 177  :     }
; 178  : 
; 179  :     return nullptr;

  00049	33 c0		 xor	 eax, eax
$LN1@Allocate:

; 180  : }

  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$00@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 0
_Count$ = 32
??$_Get_size_of_n@$00@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<1>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 04 24 00	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 0

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 30   :             if (_Count > _Max_possible) {
; 31   :                 _Throw_bad_array_new_length(); // multiply overflow
; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00022	48 8b 44 24 20	 mov	 rax, QWORD PTR _Count$[rsp]

; 36   : }

  00027	48 83 c4 10	 add	 rsp, 16
  0002b	5f		 pop	 rdi
  0002c	c3		 ret	 0
??$_Get_size_of_n@$00@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z
_TEXT	SEGMENT
_Left$ = 48
_Right$ = 56
??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z PROC ; std::_Pocma<std::allocator<char> >, COMDAT

; 968  : void _Pocma(_Alloc& _Left, _Alloc& _Right) noexcept { // (maybe) propagate on container move assignment

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 969  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_move_assignment::value) {
; 970  :         _Left = _STD move(_Right);

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>

; 971  :     } else {
; 972  :         (void) _Left; // TRANSITION, VSO#486357
; 973  :         (void) _Right; // TRANSITION, VSO#486357
; 974  :     }
; 975  : }

  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z ENDP ; std::_Pocma<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ; std::addressof<char *>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	b9 08 00 00 00	 mov	 ecx, 8
  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0003a	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ; std::forward<char * const &>
  00049	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00051	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00054	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z
_TEXT	SEGMENT
_My_data$ = 48
_Old_size$ = 56
_New_size$ = 64
_Old_capacity$ = 72
_New_capacity$ = 80
_Al$ = 88
_New_ptr$ = 104
_Raw_new$ = 120
_Old_ptr$4 = 128
this$ = 160
_Size_increase$ = 168
_Fn$ = 176
<_Args_0>$ = 184
<_Args_1>$ = 192
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>, COMDAT

; 4108 :     basic_string& _Reallocate_grow_by(const size_type _Size_increase, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+160]

; 4109 :         // reallocate to increase size by _Size_increase elements, new buffer prepared by
; 4110 :         // _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 4111 :         auto& _My_data            = _Mypair._Myval2;

  00033	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 89 44 24 30	 mov	 QWORD PTR _My_data$[rsp], rax

; 4112 :         const size_type _Old_size = _My_data._Mysize;

  00040	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00045	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00049	48 89 44 24 38	 mov	 QWORD PTR _Old_size$[rsp], rax

; 4113 :         if (max_size() - _Old_size < _Size_increase) {

  0004e	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00056	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0005b	48 2b 44 24 38	 sub	 rax, QWORD PTR _Old_size$[rsp]
  00060	48 3b 84 24 a8
	00 00 00	 cmp	 rax, QWORD PTR _Size_increase$[rsp]
  00068	73 05		 jae	 SHORT $LN2@Reallocate

; 4114 :             _Xlen(); // result too long

  0006a	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4115 :         }
; 4116 : 
; 4117 :         const size_type _New_size     = _Old_size + _Size_increase;

  0006f	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR _Size_increase$[rsp]
  00077	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0007c	48 03 c8	 add	 rcx, rax
  0007f	48 8b c1	 mov	 rax, rcx
  00082	48 89 44 24 40	 mov	 QWORD PTR _New_size$[rsp], rax

; 4118 :         const size_type _Old_capacity = _My_data._Myres;

  00087	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0008c	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00090	48 89 44 24 48	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4119 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00095	48 8b 54 24 40	 mov	 rdx, QWORD PTR _New_size$[rsp]
  0009a	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000a2	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  000a7	48 89 44 24 50	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4120 :         auto& _Al                     = _Getal();

  000ac	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000b4	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000b9	48 89 44 24 58	 mov	 QWORD PTR _Al$[rsp], rax

; 4121 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000be	48 8b 44 24 50	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  000c3	48 ff c0	 inc	 rax
  000c6	48 8b d0	 mov	 rdx, rax
  000c9	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Al$[rsp]
  000ce	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  000d3	48 89 44 24 68	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4122 :         _My_data._Orphan_all();

  000d8	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000dd	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4123 :         _My_data._Mysize      = _New_size;

  000e2	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000e7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000ec	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4124 :         _My_data._Myres       = _New_capacity;

  000f0	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000f5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000fa	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4125 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

  000fe	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00103	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00108	48 89 44 24 78	 mov	 QWORD PTR _Raw_new$[rsp], rax

; 4126 :         if (_BUF_SIZE <= _Old_capacity) {

  0010d	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Old_capacity$[rsp], 16
  00113	72 7f		 jb	 SHORT $LN3@Reallocate

; 4127 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00115	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0011a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0011e	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR _Old_ptr$4[rsp], rax

; 4128 :             _Fn(_Raw_new, _Unfancy(_Old_ptr), _Old_size, _Args...);

  00126	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _Old_ptr$4[rsp]
  0012e	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00133	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR <_Args_1>$[rsp]
  0013b	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00140	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00148	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0014d	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _Old_size$[rsp]
  00152	4c 8b c0	 mov	 r8, rax
  00155	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  0015a	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  00162	e8 00 00 00 00	 call	 ??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ; <lambda_65e615be2a453ca0576c979606f46740>::operator()

; 4129 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  00167	48 8b 44 24 48	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  0016c	48 ff c0	 inc	 rax
  0016f	4c 8b c0	 mov	 r8, rax
  00172	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Old_ptr$4[rsp]
  0017a	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Al$[rsp]
  0017f	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4130 :             _My_data._Bx._Ptr = _New_ptr;

  00184	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00189	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0018e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4131 :         } else {

  00192	eb 53		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4132 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);

  00194	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00199	48 83 c0 08	 add	 rax, 8
  0019d	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR <_Args_1>$[rsp]
  001a5	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  001aa	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  001b2	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  001b7	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _Old_size$[rsp]
  001bc	4c 8b c0	 mov	 r8, rax
  001bf	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  001c4	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  001cc	e8 00 00 00 00	 call	 ??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ; <lambda_65e615be2a453ca0576c979606f46740>::operator()

; 4133 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  001d1	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  001d6	48 83 c0 08	 add	 rax, 8
  001da	48 8d 54 24 68	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  001df	48 8b c8	 mov	 rcx, rax
  001e2	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4134 :         }
; 4135 : 
; 4136 :         return *this;

  001e7	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4137 :     }

  001ef	48 8b f8	 mov	 rdi, rax
  001f2	48 8b cc	 mov	 rcx, rsp
  001f5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcFrameData
  001fc	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00201	48 8b c7	 mov	 rax, rdi
  00204	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  0020b	5f		 pop	 rdi
  0020c	c3		 ret	 0
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_New_ptr$ = 72
_Old_ptr$ = 80
_Old_size$ = 88
_Ptr$ = 96
_Count$ = 104
??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z PROC ; <lambda_65e615be2a453ca0576c979606f46740>::operator(), COMDAT

; 2748 :                 const size_type _Count) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2749 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);

  0002d	4c 8b 44 24 58	 mov	 r8, QWORD PTR _Old_size$[rsp]
  00032	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Old_ptr$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0003c	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2750 :                 _Traits::copy(_New_ptr + _Old_size, _Ptr, _Count);

  00041	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00046	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0004b	48 03 c8	 add	 rcx, rax
  0004e	48 8b c1	 mov	 rax, rcx
  00051	4c 8b 44 24 68	 mov	 r8, QWORD PTR _Count$[rsp]
  00056	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0005b	48 8b c8	 mov	 rcx, rax
  0005e	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2751 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  00063	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  00068	48 8b 44 24 68	 mov	 rax, QWORD PTR _Count$[rsp]
  0006d	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00072	48 03 c8	 add	 rcx, rax
  00075	48 8b c1	 mov	 rax, rcx
  00078	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0007d	48 03 c8	 add	 rcx, rax
  00080	48 8b c1	 mov	 rax, rcx
  00083	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00088	48 8b c8	 mov	 rcx, rax
  0008b	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2752 :             },

  00090	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00094	5f		 pop	 rdi
  00095	c3		 ret	 0
??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ENDP ; <lambda_65e615be2a453ca0576c979606f46740>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
_TEXT	SEGMENT
_Old_capacity$ = 32
_New_capacity$ = 40
_Al$ = 48
_New_ptr$ = 72
this$ = 112
_New_size$ = 120
_Fn$ = 128
<_Args_0>$ = 136
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>, COMDAT

; 4082 :     basic_string& _Reallocate_for(const size_type _New_size, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 4083 :         // reallocate to store exactly _New_size elements, new buffer prepared by
; 4084 :         // _Fn(_New_ptr, _New_size, _Args...)
; 4085 :         if (_New_size > max_size()) {

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00037	48 39 44 24 78	 cmp	 QWORD PTR _New_size$[rsp], rax
  0003c	76 05		 jbe	 SHORT $LN2@Reallocate

; 4086 :             _Xlen(); // result too long

  0003e	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4087 :         }
; 4088 : 
; 4089 :         const size_type _Old_capacity = _Mypair._Myval2._Myres;

  00043	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0004c	48 89 44 24 20	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4090 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00051	48 8b 54 24 78	 mov	 rdx, QWORD PTR _New_size$[rsp]
  00056	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  00060	48 89 44 24 28	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4091 :         auto& _Al                     = _Getal();

  00065	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0006a	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0006f	48 89 44 24 30	 mov	 QWORD PTR _Al$[rsp], rax

; 4092 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  00079	48 ff c0	 inc	 rax
  0007c	48 8b d0	 mov	 rdx, rax
  0007f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  00084	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  00089	48 89 44 24 48	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4093 :         _Mypair._Myval2._Orphan_all();

  0008e	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00093	48 8b c8	 mov	 rcx, rax
  00096	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4094 :         _Mypair._Myval2._Mysize = _New_size;

  0009b	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000a0	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000a5	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4095 :         _Mypair._Myval2._Myres  = _New_capacity;

  000a9	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000ae	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000b3	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4096 :         _Fn(_Unfancy(_New_ptr), _New_size, _Args...);

  000b7	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  000bc	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  000c1	4c 8b 8c 24 88
	00 00 00	 mov	 r9, QWORD PTR <_Args_0>$[rsp]
  000c9	4c 8b 44 24 78	 mov	 r8, QWORD PTR _New_size$[rsp]
  000ce	48 8b d0	 mov	 rdx, rax
  000d1	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  000d9	e8 00 00 00 00	 call	 ??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()

; 4097 :         if (_BUF_SIZE <= _Old_capacity) {

  000de	48 83 7c 24 20
	10		 cmp	 QWORD PTR _Old_capacity$[rsp], 16
  000e4	72 2e		 jb	 SHORT $LN3@Reallocate

; 4098 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000e6	48 8b 44 24 20	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  000eb	48 ff c0	 inc	 rax
  000ee	4c 8b c0	 mov	 r8, rax
  000f1	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000f6	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  000fa	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  000ff	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4099 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  00104	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00109	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0010e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4100 :         } else {

  00112	eb 16		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4101 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  00114	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00119	48 83 c0 08	 add	 rax, 8
  0011d	48 8d 54 24 48	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  00122	48 8b c8	 mov	 rcx, rax
  00125	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4102 :         }
; 4103 : 
; 4104 :         return *this;

  0012a	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4105 :     }

  0012f	48 8b f8	 mov	 rdi, rax
  00132	48 8b cc	 mov	 rcx, rsp
  00135	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcFrameData
  0013c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00141	48 8b c7	 mov	 rax, rdi
  00144	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00148	5f		 pop	 rdi
  00149	c3		 ret	 0
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_New_ptr$ = 72
_Count$ = 80
_Ptr$ = 88
??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z PROC ; <lambda_66f57f934f28d61049862f64df852ff0>::operator(), COMDAT

; 2853 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2854 :                 _Traits::copy(_New_ptr, _Ptr, _Count);

  0002d	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Count$[rsp]
  00032	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0003c	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2855 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00041	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  00046	48 8b 44 24 50	 mov	 rax, QWORD PTR _Count$[rsp]
  0004b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00050	48 03 c8	 add	 rcx, rax
  00053	48 8b c1	 mov	 rax, rcx
  00056	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  0005b	48 8b c8	 mov	 rcx, rax
  0005e	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2856 :             },

  00063	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00067	5f		 pop	 rdi
  00068	c3		 ret	 0
??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z ENDP ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K2PEBD2@Z
_TEXT	SEGMENT
_My_data$ = 64
_Old_size$ = 72
_New_size$ = 80
_Old_capacity$ = 88
_New_capacity$ = 96
_Al$ = 104
_New_ptr$ = 120
_Raw_new$ = 136
_Old_ptr$4 = 144
this$ = 176
_Size_increase$ = 184
_Fn$ = 192
<_Args_0>$ = 200
<_Args_1>$ = 208
<_Args_2>$ = 216
<_Args_3>$ = 224
??$_Reallocate_grow_by@V<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K2PEBD2@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_16d2cb92461ac9818af78a76c749bd7f>,unsigned __int64,unsigned __int64,char const *,unsigned __int64>, COMDAT

; 4108 :     basic_string& _Reallocate_grow_by(const size_type _Size_increase, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+176]

; 4109 :         // reallocate to increase size by _Size_increase elements, new buffer prepared by
; 4110 :         // _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 4111 :         auto& _My_data            = _Mypair._Myval2;

  00033	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 89 44 24 40	 mov	 QWORD PTR _My_data$[rsp], rax

; 4112 :         const size_type _Old_size = _My_data._Mysize;

  00040	48 8b 44 24 40	 mov	 rax, QWORD PTR _My_data$[rsp]
  00045	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00049	48 89 44 24 48	 mov	 QWORD PTR _Old_size$[rsp], rax

; 4113 :         if (max_size() - _Old_size < _Size_increase) {

  0004e	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00056	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0005b	48 2b 44 24 48	 sub	 rax, QWORD PTR _Old_size$[rsp]
  00060	48 3b 84 24 b8
	00 00 00	 cmp	 rax, QWORD PTR _Size_increase$[rsp]
  00068	73 05		 jae	 SHORT $LN2@Reallocate

; 4114 :             _Xlen(); // result too long

  0006a	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4115 :         }
; 4116 : 
; 4117 :         const size_type _New_size     = _Old_size + _Size_increase;

  0006f	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR _Size_increase$[rsp]
  00077	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0007c	48 03 c8	 add	 rcx, rax
  0007f	48 8b c1	 mov	 rax, rcx
  00082	48 89 44 24 50	 mov	 QWORD PTR _New_size$[rsp], rax

; 4118 :         const size_type _Old_capacity = _My_data._Myres;

  00087	48 8b 44 24 40	 mov	 rax, QWORD PTR _My_data$[rsp]
  0008c	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00090	48 89 44 24 58	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4119 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00095	48 8b 54 24 50	 mov	 rdx, QWORD PTR _New_size$[rsp]
  0009a	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000a2	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  000a7	48 89 44 24 60	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4120 :         auto& _Al                     = _Getal();

  000ac	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000b4	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000b9	48 89 44 24 68	 mov	 QWORD PTR _Al$[rsp], rax

; 4121 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000be	48 8b 44 24 60	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  000c3	48 ff c0	 inc	 rax
  000c6	48 8b d0	 mov	 rdx, rax
  000c9	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Al$[rsp]
  000ce	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  000d3	48 89 44 24 78	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4122 :         _My_data._Orphan_all();

  000d8	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000dd	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4123 :         _My_data._Mysize      = _New_size;

  000e2	48 8b 44 24 40	 mov	 rax, QWORD PTR _My_data$[rsp]
  000e7	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000ec	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4124 :         _My_data._Myres       = _New_capacity;

  000f0	48 8b 44 24 40	 mov	 rax, QWORD PTR _My_data$[rsp]
  000f5	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000fa	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4125 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

  000fe	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00103	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00108	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR _Raw_new$[rsp], rax

; 4126 :         if (_BUF_SIZE <= _Old_capacity) {

  00110	48 83 7c 24 58
	10		 cmp	 QWORD PTR _Old_capacity$[rsp], 16
  00116	0f 82 9c 00 00
	00		 jb	 $LN3@Reallocate

; 4127 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  0011c	48 8b 44 24 40	 mov	 rax, QWORD PTR _My_data$[rsp]
  00121	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00125	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR _Old_ptr$4[rsp], rax

; 4128 :             _Fn(_Raw_new, _Unfancy(_Old_ptr), _Old_size, _Args...);

  0012d	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR _Old_ptr$4[rsp]
  00135	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  0013a	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR <_Args_3>$[rsp]
  00142	48 89 4c 24 38	 mov	 QWORD PTR [rsp+56], rcx
  00147	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_2>$[rsp]
  0014f	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  00154	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR <_Args_1>$[rsp]
  0015c	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00161	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00169	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0016e	4c 8b 4c 24 48	 mov	 r9, QWORD PTR _Old_size$[rsp]
  00173	4c 8b c0	 mov	 r8, rax
  00176	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  0017e	48 8d 8c 24 c0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  00186	e8 00 00 00 00	 call	 ??R<lambda_16d2cb92461ac9818af78a76c749bd7f>@@QEBAXQEADQEBD_K2212@Z ; <lambda_16d2cb92461ac9818af78a76c749bd7f>::operator()

; 4129 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  0018b	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  00190	48 ff c0	 inc	 rax
  00193	4c 8b c0	 mov	 r8, rax
  00196	48 8b 94 24 90
	00 00 00	 mov	 rdx, QWORD PTR _Old_ptr$4[rsp]
  0019e	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Al$[rsp]
  001a3	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4130 :             _My_data._Bx._Ptr = _New_ptr;

  001a8	48 8b 44 24 40	 mov	 rax, QWORD PTR _My_data$[rsp]
  001ad	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  001b2	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4131 :         } else {

  001b6	eb 70		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4132 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);

  001b8	48 8b 44 24 40	 mov	 rax, QWORD PTR _My_data$[rsp]
  001bd	48 83 c0 08	 add	 rax, 8
  001c1	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR <_Args_3>$[rsp]
  001c9	48 89 4c 24 38	 mov	 QWORD PTR [rsp+56], rcx
  001ce	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_2>$[rsp]
  001d6	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  001db	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR <_Args_1>$[rsp]
  001e3	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  001e8	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  001f0	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  001f5	4c 8b 4c 24 48	 mov	 r9, QWORD PTR _Old_size$[rsp]
  001fa	4c 8b c0	 mov	 r8, rax
  001fd	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  00205	48 8d 8c 24 c0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  0020d	e8 00 00 00 00	 call	 ??R<lambda_16d2cb92461ac9818af78a76c749bd7f>@@QEBAXQEADQEBD_K2212@Z ; <lambda_16d2cb92461ac9818af78a76c749bd7f>::operator()

; 4133 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  00212	48 8b 44 24 40	 mov	 rax, QWORD PTR _My_data$[rsp]
  00217	48 83 c0 08	 add	 rax, 8
  0021b	48 8d 54 24 78	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  00220	48 8b c8	 mov	 rcx, rax
  00223	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4134 :         }
; 4135 : 
; 4136 :         return *this;

  00228	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4137 :     }

  00230	48 8b f8	 mov	 rdi, rax
  00233	48 8b cc	 mov	 rcx, rsp
  00236	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_grow_by@V<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K2PEBD2@Z$rtcFrameData
  0023d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00242	48 8b c7	 mov	 rax, rdi
  00245	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  0024c	5f		 pop	 rdi
  0024d	c3		 ret	 0
??$_Reallocate_grow_by@V<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K2PEBD2@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_16d2cb92461ac9818af78a76c749bd7f>,unsigned __int64,unsigned __int64,char const *,unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_16d2cb92461ac9818af78a76c749bd7f>@@QEBAXQEADQEBD_K2212@Z
_TEXT	SEGMENT
tv80 = 32
this$ = 64
_New_ptr$ = 72
_Old_ptr$ = 80
_Old_size$ = 88
_Off$ = 96
_N0$ = 104
_Ptr$ = 112
_Count$ = 120
??R<lambda_16d2cb92461ac9818af78a76c749bd7f>@@QEBAXQEADQEBD_K2212@Z PROC ; <lambda_16d2cb92461ac9818af78a76c749bd7f>::operator(), COMDAT

; 3211 :                 const size_type _N0, const _Elem* const _Ptr, const size_type _Count) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 3212 :                 _Traits::copy(_New_ptr, _Old_ptr, _Off);

  0002d	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Off$[rsp]
  00032	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Old_ptr$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0003c	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 3213 :                 _Traits::copy(_New_ptr + _Off, _Ptr, _Count);

  00041	48 8b 44 24 60	 mov	 rax, QWORD PTR _Off$[rsp]
  00046	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0004b	48 03 c8	 add	 rcx, rax
  0004e	48 8b c1	 mov	 rax, rcx
  00051	4c 8b 44 24 78	 mov	 r8, QWORD PTR _Count$[rsp]
  00056	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0005b	48 8b c8	 mov	 rcx, rax
  0005e	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 3214 :                 _Traits::copy(_New_ptr + _Off + _Count, _Old_ptr + _Off + _N0, _Old_size - _N0 - _Off + 1);

  00063	48 8b 44 24 68	 mov	 rax, QWORD PTR _N0$[rsp]
  00068	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0006d	48 2b c8	 sub	 rcx, rax
  00070	48 8b c1	 mov	 rax, rcx
  00073	48 2b 44 24 60	 sub	 rax, QWORD PTR _Off$[rsp]
  00078	48 ff c0	 inc	 rax
  0007b	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Off$[rsp]
  00080	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Old_ptr$[rsp]
  00085	48 03 d1	 add	 rdx, rcx
  00088	48 8b ca	 mov	 rcx, rdx
  0008b	48 03 4c 24 68	 add	 rcx, QWORD PTR _N0$[rsp]
  00090	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Off$[rsp]
  00095	4c 8b 44 24 48	 mov	 r8, QWORD PTR _New_ptr$[rsp]
  0009a	4c 03 c2	 add	 r8, rdx
  0009d	49 8b d0	 mov	 rdx, r8
  000a0	48 03 54 24 78	 add	 rdx, QWORD PTR _Count$[rsp]
  000a5	48 89 54 24 20	 mov	 QWORD PTR tv80[rsp], rdx
  000aa	4c 8b c0	 mov	 r8, rax
  000ad	48 8b d1	 mov	 rdx, rcx
  000b0	48 8b 44 24 20	 mov	 rax, QWORD PTR tv80[rsp]
  000b5	48 8b c8	 mov	 rcx, rax
  000b8	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 3215 :             },

  000bd	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000c1	5f		 pop	 rdi
  000c2	c3		 ret	 0
??R<lambda_16d2cb92461ac9818af78a76c749bd7f>@@QEBAXQEADQEBD_K2212@Z ENDP ; <lambda_16d2cb92461ac9818af78a76c749bd7f>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > const >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Max_value<unsigned __int64>, COMDAT

; 32   :     _NOEXCEPT_COND(noexcept(_Left < _Right)) { // return larger of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 33   :     return _Left < _Right ? _Right : _Left;

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00028	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	73 0c		 jae	 SHORT $LN3@Max_value
  00035	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
  0003f	eb 0a		 jmp	 SHORT $LN4@Max_value
$LN3@Max_value:
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00046	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
$LN4@Max_value:
  0004b	48 8b 44 24 08	 mov	 rax, QWORD PTR tv65[rsp]
  00050	48 89 04 24	 mov	 QWORD PTR $T1[rsp], rax
  00054	48 8b 04 24	 mov	 rax, QWORD PTR $T1[rsp]

; 34   : }

  00058	48 83 c4 10	 add	 rsp, 16
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Max_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
_TEXT	SEGMENT
_Obj$ = 16
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z PROC	; std::_Destroy_in_place<char *>, COMDAT

; 321  : void _Destroy_in_place(_Ty& _Obj) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 322  :     _Obj.~_Ty();
; 323  : }

  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ENDP	; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Pocma@V?$allocator@_W@std@@@std@@YAXAEAV?$allocator@_W@0@0@Z
_TEXT	SEGMENT
_Left$ = 48
_Right$ = 56
??$_Pocma@V?$allocator@_W@std@@@std@@YAXAEAV?$allocator@_W@0@0@Z PROC ; std::_Pocma<std::allocator<wchar_t> >, COMDAT

; 968  : void _Pocma(_Alloc& _Left, _Alloc& _Right) noexcept { // (maybe) propagate on container move assignment

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 969  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_move_assignment::value) {
; 970  :         _Left = _STD move(_Right);

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAV?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z ; std::move<std::allocator<wchar_t> &>

; 971  :     } else {
; 972  :         (void) _Left; // TRANSITION, VSO#486357
; 973  :         (void) _Right; // TRANSITION, VSO#486357
; 974  :     }
; 975  : }

  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??$_Pocma@V?$allocator@_W@std@@@std@@YAXAEAV?$allocator@_W@0@0@Z ENDP ; std::_Pocma<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z PROC			; std::_Unfancy<wchar_t>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z ENDP			; std::_Unfancy<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z PROC ; std::_Construct_in_place<wchar_t *,wchar_t * const &>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z ; std::addressof<wchar_t *>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	b9 08 00 00 00	 mov	 ecx, 8
  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0003a	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@AEBQEA_W@std@@YAAEBQEA_WAEBQEA_W@Z ; std::forward<wchar_t * const &>
  00049	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00051	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00054	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z ENDP ; std::_Construct_in_place<wchar_t *,wchar_t * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z
_TEXT	SEGMENT
_Old_capacity$ = 32
_New_capacity$ = 40
_Al$ = 48
_New_ptr$ = 72
this$ = 112
_New_size$ = 120
_Fn$ = 128
<_Args_0>$ = 136
??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_for<<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>,wchar_t const *>, COMDAT

; 4082 :     basic_string& _Reallocate_for(const size_type _New_size, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 4083 :         // reallocate to store exactly _New_size elements, new buffer prepared by
; 4084 :         // _Fn(_New_ptr, _New_size, _Args...)
; 4085 :         if (_New_size > max_size()) {

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
  00037	48 39 44 24 78	 cmp	 QWORD PTR _New_size$[rsp], rax
  0003c	76 05		 jbe	 SHORT $LN2@Reallocate

; 4086 :             _Xlen(); // result too long

  0003e	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
$LN2@Reallocate:

; 4087 :         }
; 4088 : 
; 4089 :         const size_type _Old_capacity = _Mypair._Myval2._Myres;

  00043	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0004c	48 89 44 24 20	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4090 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00051	48 8b 54 24 78	 mov	 rdx, QWORD PTR _New_size$[rsp]
  00056	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
  00060	48 89 44 24 28	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4091 :         auto& _Al                     = _Getal();

  00065	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0006a	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  0006f	48 89 44 24 30	 mov	 QWORD PTR _Al$[rsp], rax

; 4092 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  00079	48 ff c0	 inc	 rax
  0007c	48 8b d0	 mov	 rdx, rax
  0007f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  00084	e8 00 00 00 00	 call	 ?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ; std::allocator<wchar_t>::allocate
  00089	48 89 44 24 48	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4093 :         _Mypair._Myval2._Orphan_all();

  0008e	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00093	48 8b c8	 mov	 rcx, rax
  00096	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4094 :         _Mypair._Myval2._Mysize = _New_size;

  0009b	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000a0	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000a5	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4095 :         _Mypair._Myval2._Myres  = _New_capacity;

  000a9	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000ae	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000b3	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4096 :         _Fn(_Unfancy(_New_ptr), _New_size, _Args...);

  000b7	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  000bc	e8 00 00 00 00	 call	 ??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z ; std::_Unfancy<wchar_t>
  000c1	4c 8b 8c 24 88
	00 00 00	 mov	 r9, QWORD PTR <_Args_0>$[rsp]
  000c9	4c 8b 44 24 78	 mov	 r8, QWORD PTR _New_size$[rsp]
  000ce	48 8b d0	 mov	 rdx, rax
  000d1	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  000d9	e8 00 00 00 00	 call	 ??R<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@QEBAXQEA_W_KQEB_W@Z ; <lambda_3fa8b2c8193a0f3144fc4b1b8f243931>::operator()

; 4097 :         if (_BUF_SIZE <= _Old_capacity) {

  000de	48 83 7c 24 20
	08		 cmp	 QWORD PTR _Old_capacity$[rsp], 8
  000e4	72 2e		 jb	 SHORT $LN3@Reallocate

; 4098 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000e6	48 8b 44 24 20	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  000eb	48 ff c0	 inc	 rax
  000ee	4c 8b c0	 mov	 r8, rax
  000f1	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000f6	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  000fa	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  000ff	e8 00 00 00 00	 call	 ?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z ; std::allocator<wchar_t>::deallocate

; 4099 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  00104	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00109	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0010e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4100 :         } else {

  00112	eb 16		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4101 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  00114	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00119	48 83 c0 08	 add	 rax, 8
  0011d	48 8d 54 24 48	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  00122	48 8b c8	 mov	 rcx, rax
  00125	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z ; std::_Construct_in_place<wchar_t *,wchar_t * const &>
$LN4@Reallocate:

; 4102 :         }
; 4103 : 
; 4104 :         return *this;

  0012a	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4105 :     }

  0012f	48 8b f8	 mov	 rdi, rax
  00132	48 8b cc	 mov	 rcx, rsp
  00135	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z$rtcFrameData
  0013c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00141	48 8b c7	 mov	 rax, rdi
  00144	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00148	5f		 pop	 rdi
  00149	c3		 ret	 0
??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_for<<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>,wchar_t const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@QEBAXQEA_W_KQEB_W@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_New_ptr$ = 72
_Count$ = 80
_Ptr$ = 88
??R<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@QEBAXQEA_W_KQEB_W@Z PROC ; <lambda_3fa8b2c8193a0f3144fc4b1b8f243931>::operator(), COMDAT

; 2853 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2854 :                 _Traits::copy(_New_ptr, _Ptr, _Count);

  0002d	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Count$[rsp]
  00032	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0003c	e8 00 00 00 00	 call	 ?copy@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z ; std::_WChar_traits<wchar_t>::copy

; 2855 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00041	33 c0		 xor	 eax, eax
  00043	66 89 44 24 20	 mov	 WORD PTR $T1[rsp], ax
  00048	48 8b 44 24 48	 mov	 rax, QWORD PTR _New_ptr$[rsp]
  0004d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Count$[rsp]
  00052	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  00056	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  0005b	48 8b c8	 mov	 rcx, rax
  0005e	e8 00 00 00 00	 call	 ?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z ; std::_WChar_traits<wchar_t>::assign

; 2856 :             },

  00063	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00067	5f		 pop	 rdi
  00068	c3		 ret	 0
??R<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@QEBAXQEA_W_KQEB_W@Z ENDP ; <lambda_3fa8b2c8193a0f3144fc4b1b8f243931>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_07b002202a580d07f308bf60d51244b2>@@_K_KPEB_W_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_07b002202a580d07f308bf60d51244b2>@@_K2PEB_W2@Z
_TEXT	SEGMENT
_My_data$ = 64
_Old_size$ = 72
_New_size$ = 80
_Old_capacity$ = 88
_New_capacity$ = 96
_Al$ = 104
_New_ptr$ = 120
_Raw_new$ = 136
_Old_ptr$4 = 144
this$ = 176
_Size_increase$ = 184
_Fn$ = 192
<_Args_0>$ = 200
<_Args_1>$ = 208
<_Args_2>$ = 216
<_Args_3>$ = 224
??$_Reallocate_grow_by@V<lambda_07b002202a580d07f308bf60d51244b2>@@_K_KPEB_W_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_07b002202a580d07f308bf60d51244b2>@@_K2PEB_W2@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<<lambda_07b002202a580d07f308bf60d51244b2>,unsigned __int64,unsigned __int64,wchar_t const *,unsigned __int64>, COMDAT

; 4108 :     basic_string& _Reallocate_grow_by(const size_type _Size_increase, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+176]

; 4109 :         // reallocate to increase size by _Size_increase elements, new buffer prepared by
; 4110 :         // _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 4111 :         auto& _My_data            = _Mypair._Myval2;

  00033	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 89 44 24 40	 mov	 QWORD PTR _My_data$[rsp], rax

; 4112 :         const size_type _Old_size = _My_data._Mysize;

  00040	48 8b 44 24 40	 mov	 rax, QWORD PTR _My_data$[rsp]
  00045	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00049	48 89 44 24 48	 mov	 QWORD PTR _Old_size$[rsp], rax

; 4113 :         if (max_size() - _Old_size < _Size_increase) {

  0004e	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00056	e8 00 00 00 00	 call	 ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
  0005b	48 2b 44 24 48	 sub	 rax, QWORD PTR _Old_size$[rsp]
  00060	48 3b 84 24 b8
	00 00 00	 cmp	 rax, QWORD PTR _Size_increase$[rsp]
  00068	73 05		 jae	 SHORT $LN2@Reallocate

; 4114 :             _Xlen(); // result too long

  0006a	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
$LN2@Reallocate:

; 4115 :         }
; 4116 : 
; 4117 :         const size_type _New_size     = _Old_size + _Size_increase;

  0006f	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR _Size_increase$[rsp]
  00077	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0007c	48 03 c8	 add	 rcx, rax
  0007f	48 8b c1	 mov	 rax, rcx
  00082	48 89 44 24 50	 mov	 QWORD PTR _New_size$[rsp], rax

; 4118 :         const size_type _Old_capacity = _My_data._Myres;

  00087	48 8b 44 24 40	 mov	 rax, QWORD PTR _My_data$[rsp]
  0008c	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00090	48 89 44 24 58	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4119 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00095	48 8b 54 24 50	 mov	 rdx, QWORD PTR _New_size$[rsp]
  0009a	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000a2	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
  000a7	48 89 44 24 60	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4120 :         auto& _Al                     = _Getal();

  000ac	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000b4	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  000b9	48 89 44 24 68	 mov	 QWORD PTR _Al$[rsp], rax

; 4121 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000be	48 8b 44 24 60	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  000c3	48 ff c0	 inc	 rax
  000c6	48 8b d0	 mov	 rdx, rax
  000c9	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Al$[rsp]
  000ce	e8 00 00 00 00	 call	 ?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ; std::allocator<wchar_t>::allocate
  000d3	48 89 44 24 78	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4122 :         _My_data._Orphan_all();

  000d8	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000dd	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4123 :         _My_data._Mysize      = _New_size;

  000e2	48 8b 44 24 40	 mov	 rax, QWORD PTR _My_data$[rsp]
  000e7	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000ec	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4124 :         _My_data._Myres       = _New_capacity;

  000f0	48 8b 44 24 40	 mov	 rax, QWORD PTR _My_data$[rsp]
  000f5	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000fa	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4125 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

  000fe	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00103	e8 00 00 00 00	 call	 ??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z ; std::_Unfancy<wchar_t>
  00108	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR _Raw_new$[rsp], rax

; 4126 :         if (_BUF_SIZE <= _Old_capacity) {

  00110	48 83 7c 24 58
	08		 cmp	 QWORD PTR _Old_capacity$[rsp], 8
  00116	0f 82 9c 00 00
	00		 jb	 $LN3@Reallocate

; 4127 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  0011c	48 8b 44 24 40	 mov	 rax, QWORD PTR _My_data$[rsp]
  00121	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00125	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR _Old_ptr$4[rsp], rax

; 4128 :             _Fn(_Raw_new, _Unfancy(_Old_ptr), _Old_size, _Args...);

  0012d	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR _Old_ptr$4[rsp]
  00135	e8 00 00 00 00	 call	 ??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z ; std::_Unfancy<wchar_t>
  0013a	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR <_Args_3>$[rsp]
  00142	48 89 4c 24 38	 mov	 QWORD PTR [rsp+56], rcx
  00147	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_2>$[rsp]
  0014f	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  00154	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR <_Args_1>$[rsp]
  0015c	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00161	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00169	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0016e	4c 8b 4c 24 48	 mov	 r9, QWORD PTR _Old_size$[rsp]
  00173	4c 8b c0	 mov	 r8, rax
  00176	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  0017e	48 8d 8c 24 c0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  00186	e8 00 00 00 00	 call	 ??R<lambda_07b002202a580d07f308bf60d51244b2>@@QEBAXQEA_WQEB_W_K2212@Z ; <lambda_07b002202a580d07f308bf60d51244b2>::operator()

; 4129 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  0018b	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  00190	48 ff c0	 inc	 rax
  00193	4c 8b c0	 mov	 r8, rax
  00196	48 8b 94 24 90
	00 00 00	 mov	 rdx, QWORD PTR _Old_ptr$4[rsp]
  0019e	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Al$[rsp]
  001a3	e8 00 00 00 00	 call	 ?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z ; std::allocator<wchar_t>::deallocate

; 4130 :             _My_data._Bx._Ptr = _New_ptr;

  001a8	48 8b 44 24 40	 mov	 rax, QWORD PTR _My_data$[rsp]
  001ad	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  001b2	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4131 :         } else {

  001b6	eb 70		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4132 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);

  001b8	48 8b 44 24 40	 mov	 rax, QWORD PTR _My_data$[rsp]
  001bd	48 83 c0 08	 add	 rax, 8
  001c1	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR <_Args_3>$[rsp]
  001c9	48 89 4c 24 38	 mov	 QWORD PTR [rsp+56], rcx
  001ce	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_2>$[rsp]
  001d6	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  001db	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR <_Args_1>$[rsp]
  001e3	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  001e8	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  001f0	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  001f5	4c 8b 4c 24 48	 mov	 r9, QWORD PTR _Old_size$[rsp]
  001fa	4c 8b c0	 mov	 r8, rax
  001fd	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  00205	48 8d 8c 24 c0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  0020d	e8 00 00 00 00	 call	 ??R<lambda_07b002202a580d07f308bf60d51244b2>@@QEBAXQEA_WQEB_W_K2212@Z ; <lambda_07b002202a580d07f308bf60d51244b2>::operator()

; 4133 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  00212	48 8b 44 24 40	 mov	 rax, QWORD PTR _My_data$[rsp]
  00217	48 83 c0 08	 add	 rax, 8
  0021b	48 8d 54 24 78	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  00220	48 8b c8	 mov	 rcx, rax
  00223	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z ; std::_Construct_in_place<wchar_t *,wchar_t * const &>
$LN4@Reallocate:

; 4134 :         }
; 4135 : 
; 4136 :         return *this;

  00228	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4137 :     }

  00230	48 8b f8	 mov	 rdi, rax
  00233	48 8b cc	 mov	 rcx, rsp
  00236	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_grow_by@V<lambda_07b002202a580d07f308bf60d51244b2>@@_K_KPEB_W_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_07b002202a580d07f308bf60d51244b2>@@_K2PEB_W2@Z$rtcFrameData
  0023d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00242	48 8b c7	 mov	 rax, rdi
  00245	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  0024c	5f		 pop	 rdi
  0024d	c3		 ret	 0
??$_Reallocate_grow_by@V<lambda_07b002202a580d07f308bf60d51244b2>@@_K_KPEB_W_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_07b002202a580d07f308bf60d51244b2>@@_K2PEB_W2@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<<lambda_07b002202a580d07f308bf60d51244b2>,unsigned __int64,unsigned __int64,wchar_t const *,unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_07b002202a580d07f308bf60d51244b2>@@QEBAXQEA_WQEB_W_K2212@Z
_TEXT	SEGMENT
tv85 = 32
this$ = 64
_New_ptr$ = 72
_Old_ptr$ = 80
_Old_size$ = 88
_Off$ = 96
_N0$ = 104
_Ptr$ = 112
_Count$ = 120
??R<lambda_07b002202a580d07f308bf60d51244b2>@@QEBAXQEA_WQEB_W_K2212@Z PROC ; <lambda_07b002202a580d07f308bf60d51244b2>::operator(), COMDAT

; 3211 :                 const size_type _N0, const _Elem* const _Ptr, const size_type _Count) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 3212 :                 _Traits::copy(_New_ptr, _Old_ptr, _Off);

  0002d	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Off$[rsp]
  00032	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Old_ptr$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0003c	e8 00 00 00 00	 call	 ?copy@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z ; std::_WChar_traits<wchar_t>::copy

; 3213 :                 _Traits::copy(_New_ptr + _Off, _Ptr, _Count);

  00041	48 8b 44 24 48	 mov	 rax, QWORD PTR _New_ptr$[rsp]
  00046	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Off$[rsp]
  0004b	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  0004f	4c 8b 44 24 78	 mov	 r8, QWORD PTR _Count$[rsp]
  00054	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00059	48 8b c8	 mov	 rcx, rax
  0005c	e8 00 00 00 00	 call	 ?copy@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z ; std::_WChar_traits<wchar_t>::copy

; 3214 :                 _Traits::copy(_New_ptr + _Off + _Count, _Old_ptr + _Off + _N0, _Old_size - _N0 - _Off + 1);

  00061	48 8b 44 24 68	 mov	 rax, QWORD PTR _N0$[rsp]
  00066	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0006b	48 2b c8	 sub	 rcx, rax
  0006e	48 8b c1	 mov	 rax, rcx
  00071	48 2b 44 24 60	 sub	 rax, QWORD PTR _Off$[rsp]
  00076	48 ff c0	 inc	 rax
  00079	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Old_ptr$[rsp]
  0007e	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Off$[rsp]
  00083	48 8d 0c 51	 lea	 rcx, QWORD PTR [rcx+rdx*2]
  00087	48 8b 54 24 68	 mov	 rdx, QWORD PTR _N0$[rsp]
  0008c	48 8d 0c 51	 lea	 rcx, QWORD PTR [rcx+rdx*2]
  00090	48 8b 54 24 48	 mov	 rdx, QWORD PTR _New_ptr$[rsp]
  00095	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Off$[rsp]
  0009a	4a 8d 14 42	 lea	 rdx, QWORD PTR [rdx+r8*2]
  0009e	4c 8b 44 24 78	 mov	 r8, QWORD PTR _Count$[rsp]
  000a3	4a 8d 14 42	 lea	 rdx, QWORD PTR [rdx+r8*2]
  000a7	48 89 54 24 20	 mov	 QWORD PTR tv85[rsp], rdx
  000ac	4c 8b c0	 mov	 r8, rax
  000af	48 8b d1	 mov	 rdx, rcx
  000b2	48 8b 44 24 20	 mov	 rax, QWORD PTR tv85[rsp]
  000b7	48 8b c8	 mov	 rcx, rax
  000ba	e8 00 00 00 00	 call	 ?copy@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z ; std::_WChar_traits<wchar_t>::copy

; 3215 :             },

  000bf	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000c3	5f		 pop	 rdi
  000c4	c3		 ret	 0
??R<lambda_07b002202a580d07f308bf60d51244b2>@@QEBAXQEA_WQEB_W_K2212@Z ENDP ; <lambda_07b002202a580d07f308bf60d51244b2>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z
_TEXT	SEGMENT
_Obj$ = 16
??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z PROC	; std::_Destroy_in_place<wchar_t *>, COMDAT

; 321  : void _Destroy_in_place(_Ty& _Obj) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 322  :     _Obj.~_Ty();
; 323  : }

  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z ENDP	; std::_Destroy_in_place<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QEAA@AEBU01@@Z ; std::_Iterator_base12::_Iterator_base12
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __that$[rsp]
  0003d	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00041	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00045	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004e	5f		 pop	 rdi
  0004f	c3		 ret	 0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QEAA@AEBU01@@Z ; std::_Iterator_base12::_Iterator_base12
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __that$[rsp]
  0003d	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00041	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00045	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004e	5f		 pop	 rdi
  0004f	c3		 ret	 0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unwrapped@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Unwrapped@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Unwrapped, COMDAT

; 184  :     _NODISCARD const value_type* _Unwrapped() const {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 185  :         return _Unfancy(_Ptr);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00027	e8 00 00 00 00	 call	 ??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 186  :     }

  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
?_Unwrapped@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Unwrapped
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
tv69 = 48
_First$ = 80
_Last$ = 88
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@0@Z PROC ; std::_Verify_range, COMDAT

; 176  :     friend void _Verify_range(const _Vector_const_iterator& _First, const _Vector_const_iterator& _Last) {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
$LN4@Verify_ran:

; 177  :         _STL_VERIFY(_First._Getcont() == _Last._Getcont(), "vector iterators in range are from different containers");

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _First$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002d	48 89 44 24 30	 mov	 QWORD PTR tv69[rsp], rax
  00032	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Last$[rsp]
  00037	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv69[rsp]
  00041	48 3b c8	 cmp	 rcx, rax
  00044	75 02		 jne	 SHORT $LN14@Verify_ran
  00046	eb 6b		 jmp	 SHORT $LN15@Verify_ran
$LN14@Verify_ran:
$LN7@Verify_ran:
  00048	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@
  0004f	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00054	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0005b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00060	45 33 c9	 xor	 r9d, r9d
  00063	41 b8 b1 00 00
	00		 mov	 r8d, 177		; 000000b1H
  00069	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00070	b9 02 00 00 00	 mov	 ecx, 2
  00075	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0007b	83 f8 01	 cmp	 eax, 1
  0007e	75 03		 jne	 SHORT $LN19@Verify_ran
  00080	cc		 int	 3
  00081	33 c0		 xor	 eax, eax
$LN19@Verify_ran:
  00083	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0008c	41 b9 b1 00 00
	00		 mov	 r9d, 177		; 000000b1H
  00092	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00099	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
  000a0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
  000a7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000ad	33 c0		 xor	 eax, eax
  000af	85 c0		 test	 eax, eax
  000b1	75 95		 jne	 SHORT $LN7@Verify_ran
$LN15@Verify_ran:
  000b3	33 c0		 xor	 eax, eax
  000b5	85 c0		 test	 eax, eax
  000b7	0f 85 66 ff ff
	ff		 jne	 $LN4@Verify_ran
$LN10@Verify_ran:

; 178  :         _STL_VERIFY(_First._Ptr <= _Last._Ptr, "vector iterator range transposed");

  000bd	48 8b 44 24 50	 mov	 rax, QWORD PTR _First$[rsp]
  000c2	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Last$[rsp]
  000c7	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000cb	48 39 48 10	 cmp	 QWORD PTR [rax+16], rcx
  000cf	77 02		 ja	 SHORT $LN16@Verify_ran
  000d1	eb 6b		 jmp	 SHORT $LN17@Verify_ran
$LN16@Verify_ran:
$LN13@Verify_ran:
  000d3	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@
  000da	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000df	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  000e6	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000eb	45 33 c9	 xor	 r9d, r9d
  000ee	41 b8 b2 00 00
	00		 mov	 r8d, 178		; 000000b2H
  000f4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000fb	b9 02 00 00 00	 mov	 ecx, 2
  00100	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00106	83 f8 01	 cmp	 eax, 1
  00109	75 03		 jne	 SHORT $LN20@Verify_ran
  0010b	cc		 int	 3
  0010c	33 c0		 xor	 eax, eax
$LN20@Verify_ran:
  0010e	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00117	41 b9 b2 00 00
	00		 mov	 r9d, 178		; 000000b2H
  0011d	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00124	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
  0012b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
  00132	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00138	33 c0		 xor	 eax, eax
  0013a	85 c0		 test	 eax, eax
  0013c	75 95		 jne	 SHORT $LN13@Verify_ran
$LN17@Verify_ran:
  0013e	33 c0		 xor	 eax, eax
  00140	85 c0		 test	 eax, eax
  00142	0f 85 75 ff ff
	ff		 jne	 $LN10@Verify_ran

; 179  :     }

  00148	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0014c	5f		 pop	 rdi
  0014d	c3		 ret	 0
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@0@Z ENDP ; std::_Verify_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 36   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) : _Ptr(_Parg) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::_Iterator_base12
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Parg$[rsp]
  0003d	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 37   :         this->_Adopt(_Pvector);

  00041	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Pvector$[rsp]
  00046	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
  00050	90		 npad	 1

; 38   :     }

  00051	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00056	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	b9 10 00 00 00	 mov	 ecx, 16
  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0003a	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
  00049	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0004c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00051	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00056	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z ; std::forward<std::allocator<char> const &>
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  0003e	90		 npad	 1
  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@XZ ; std::allocator<char>::allocator<char>
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  00039	90		 npad	 1
  0003a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> >
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  0003e	90		 npad	 1
  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z PROC ; std::move<std::allocator<char> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::move<std::allocator<char> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z PROC ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ENDP ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@D@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@D@std@@YAPEADPEAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@D@std@@YAPEADPEAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Traits_find@U?$char_traits@D@std@@@std@@YA_KQEBD_K101@Z
_TEXT	SEGMENT
_Possible_matches_end$ = 32
_Match_try$1 = 40
_Haystack$ = 64
_Hay_size$ = 72
_Start_at$ = 80
_Needle$ = 88
_Needle_size$ = 96
??$_Traits_find@U?$char_traits@D@std@@@std@@YA_KQEBD_K101@Z PROC ; std::_Traits_find<std::char_traits<char> >, COMDAT

; 541  :     const size_t _Needle_size) noexcept { // search [_Haystack, _Haystack + _Hay_size) for [_Needle, _Needle +

$LN11:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 542  :                                           // _Needle_size), at/after _Start_at
; 543  :     if (_Needle_size > _Hay_size
; 544  :         || _Start_at > _Hay_size - _Needle_size) { // xpos cannot exist, report failure

  0002d	48 8b 44 24 48	 mov	 rax, QWORD PTR _Hay_size$[rsp]
  00032	48 39 44 24 60	 cmp	 QWORD PTR _Needle_size$[rsp], rax
  00037	77 17		 ja	 SHORT $LN6@Traits_fin
  00039	48 8b 44 24 60	 mov	 rax, QWORD PTR _Needle_size$[rsp]
  0003e	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Hay_size$[rsp]
  00043	48 2b c8	 sub	 rcx, rax
  00046	48 8b c1	 mov	 rax, rcx
  00049	48 39 44 24 50	 cmp	 QWORD PTR _Start_at$[rsp], rax
  0004e	76 0c		 jbe	 SHORT $LN5@Traits_fin
$LN6@Traits_fin:

; 545  :                                                    // N4659 24.3.2.7.2 [string.find]/1 says:
; 546  :                                                    // 1. _Start_at <= xpos
; 547  :                                                    // 2. xpos + _Needle_size <= _Hay_size;
; 548  :                                                    // therefore:
; 549  :                                                    // 3. _Needle_size <= _Hay_size (by 2) (checked above)
; 550  :                                                    // 4. _Start_at + _Needle_size <= _Hay_size (substitute 1 into 2)
; 551  :                                                    // 5. _Start_at <= _Hay_size - _Needle_size (4, move _Needle_size to
; 552  :                                                    // other side) (also checked above)
; 553  :         return static_cast<size_t>(-1);

  00050	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
  00057	e9 b9 00 00 00	 jmp	 $LN1@Traits_fin
$LN5@Traits_fin:

; 554  :     }
; 555  : 
; 556  :     if (_Needle_size == 0) { // empty string always matches if xpos is possible

  0005c	48 83 7c 24 60
	00		 cmp	 QWORD PTR _Needle_size$[rsp], 0
  00062	75 0a		 jne	 SHORT $LN7@Traits_fin

; 557  :         return _Start_at;

  00064	48 8b 44 24 50	 mov	 rax, QWORD PTR _Start_at$[rsp]
  00069	e9 a7 00 00 00	 jmp	 $LN1@Traits_fin
$LN7@Traits_fin:

; 558  :     }
; 559  : 
; 560  :     const auto _Possible_matches_end = _Haystack + (_Hay_size - _Needle_size) + 1;

  0006e	48 8b 44 24 60	 mov	 rax, QWORD PTR _Needle_size$[rsp]
  00073	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Hay_size$[rsp]
  00078	48 2b c8	 sub	 rcx, rax
  0007b	48 8b c1	 mov	 rax, rcx
  0007e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Haystack$[rsp]
  00083	48 8d 44 01 01	 lea	 rax, QWORD PTR [rcx+rax+1]
  00088	48 89 44 24 20	 mov	 QWORD PTR _Possible_matches_end$[rsp], rax

; 561  :     for (auto _Match_try = _Haystack + _Start_at;; ++_Match_try) {

  0008d	48 8b 44 24 50	 mov	 rax, QWORD PTR _Start_at$[rsp]
  00092	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Haystack$[rsp]
  00097	48 03 c8	 add	 rcx, rax
  0009a	48 8b c1	 mov	 rax, rcx
  0009d	48 89 44 24 28	 mov	 QWORD PTR _Match_try$1[rsp], rax
  000a2	eb 0d		 jmp	 SHORT $LN4@Traits_fin
$LN2@Traits_fin:
  000a4	48 8b 44 24 28	 mov	 rax, QWORD PTR _Match_try$1[rsp]
  000a9	48 ff c0	 inc	 rax
  000ac	48 89 44 24 28	 mov	 QWORD PTR _Match_try$1[rsp], rax
$LN4@Traits_fin:

; 562  :         _Match_try = _Traits::find(_Match_try, static_cast<size_t>(_Possible_matches_end - _Match_try), *_Needle);

  000b1	48 8b 44 24 28	 mov	 rax, QWORD PTR _Match_try$1[rsp]
  000b6	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Possible_matches_end$[rsp]
  000bb	48 2b c8	 sub	 rcx, rax
  000be	48 8b c1	 mov	 rax, rcx
  000c1	4c 8b 44 24 58	 mov	 r8, QWORD PTR _Needle$[rsp]
  000c6	48 8b d0	 mov	 rdx, rax
  000c9	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Match_try$1[rsp]
  000ce	e8 00 00 00 00	 call	 ?find@?$_Narrow_char_traits@DH@std@@SAPEBDQEBD_KAEBD@Z ; std::_Narrow_char_traits<char,int>::find
  000d3	48 89 44 24 28	 mov	 QWORD PTR _Match_try$1[rsp], rax

; 563  :         if (!_Match_try) { // didn't find first character; report failure

  000d8	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Match_try$1[rsp], 0
  000de	75 09		 jne	 SHORT $LN8@Traits_fin

; 564  :             return static_cast<size_t>(-1);

  000e0	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
  000e7	eb 2c		 jmp	 SHORT $LN1@Traits_fin
$LN8@Traits_fin:

; 565  :         }
; 566  : 
; 567  :         if (_Traits::compare(_Match_try, _Needle, _Needle_size) == 0) { // found match

  000e9	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Needle_size$[rsp]
  000ee	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Needle$[rsp]
  000f3	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Match_try$1[rsp]
  000f8	e8 00 00 00 00	 call	 ?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z ; std::_Narrow_char_traits<char,int>::compare
  000fd	85 c0		 test	 eax, eax
  000ff	75 12		 jne	 SHORT $LN9@Traits_fin

; 568  :             return static_cast<size_t>(_Match_try - _Haystack);

  00101	48 8b 44 24 40	 mov	 rax, QWORD PTR _Haystack$[rsp]
  00106	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Match_try$1[rsp]
  0010b	48 2b c8	 sub	 rcx, rax
  0010e	48 8b c1	 mov	 rax, rcx
  00111	eb 02		 jmp	 SHORT $LN1@Traits_fin
$LN9@Traits_fin:

; 569  :         }
; 570  :     }

  00113	eb 8f		 jmp	 SHORT $LN2@Traits_fin
$LN1@Traits_fin:

; 571  : }

  00115	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00119	5f		 pop	 rdi
  0011a	c3		 ret	 0
??$_Traits_find@U?$char_traits@D@std@@@std@@YA_KQEBD_K101@Z ENDP ; std::_Traits_find<std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Traits_find_first_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
_End$1 = 32
_Match_try$2 = 40
_Haystack$ = 64
_Hay_size$ = 72
_Start_at$ = 80
_Needle$ = 88
_Needle_size$ = 96
__formal$ = 104
??$_Traits_find_first_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Traits_find_first_of<std::char_traits<char> >, COMDAT

; 684  :     const size_t _Needle_size, false_type) noexcept {

$LN8:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 685  :     // in [_Haystack, _Haystack + _Hay_size), look for one of [_Needle, _Needle + _Needle_size), at/after _Start_at
; 686  :     // general algorithm
; 687  :     if (_Needle_size != 0 && _Start_at < _Hay_size) { // room for match, look for it

  0002d	48 83 7c 24 60
	00		 cmp	 QWORD PTR _Needle_size$[rsp], 0
  00033	74 7e		 je	 SHORT $LN5@Traits_fin
  00035	48 8b 44 24 48	 mov	 rax, QWORD PTR _Hay_size$[rsp]
  0003a	48 39 44 24 50	 cmp	 QWORD PTR _Start_at$[rsp], rax
  0003f	73 72		 jae	 SHORT $LN5@Traits_fin

; 688  :         const auto _End = _Haystack + _Hay_size;

  00041	48 8b 44 24 48	 mov	 rax, QWORD PTR _Hay_size$[rsp]
  00046	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Haystack$[rsp]
  0004b	48 03 c8	 add	 rcx, rax
  0004e	48 8b c1	 mov	 rax, rcx
  00051	48 89 44 24 20	 mov	 QWORD PTR _End$1[rsp], rax

; 689  :         for (auto _Match_try = _Haystack + _Start_at; _Match_try < _End; ++_Match_try) {

  00056	48 8b 44 24 50	 mov	 rax, QWORD PTR _Start_at$[rsp]
  0005b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Haystack$[rsp]
  00060	48 03 c8	 add	 rcx, rax
  00063	48 8b c1	 mov	 rax, rcx
  00066	48 89 44 24 28	 mov	 QWORD PTR _Match_try$2[rsp], rax
  0006b	eb 0d		 jmp	 SHORT $LN4@Traits_fin
$LN2@Traits_fin:
  0006d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Match_try$2[rsp]
  00072	48 ff c0	 inc	 rax
  00075	48 89 44 24 28	 mov	 QWORD PTR _Match_try$2[rsp], rax
$LN4@Traits_fin:
  0007a	48 8b 44 24 20	 mov	 rax, QWORD PTR _End$1[rsp]
  0007f	48 39 44 24 28	 cmp	 QWORD PTR _Match_try$2[rsp], rax
  00084	73 2d		 jae	 SHORT $LN3@Traits_fin

; 690  :             if (_Traits::find(_Needle, _Needle_size, *_Match_try)) {

  00086	4c 8b 44 24 28	 mov	 r8, QWORD PTR _Match_try$2[rsp]
  0008b	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Needle_size$[rsp]
  00090	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Needle$[rsp]
  00095	e8 00 00 00 00	 call	 ?find@?$_Narrow_char_traits@DH@std@@SAPEBDQEBD_KAEBD@Z ; std::_Narrow_char_traits<char,int>::find
  0009a	48 85 c0	 test	 rax, rax
  0009d	74 12		 je	 SHORT $LN6@Traits_fin

; 691  :                 return static_cast<size_t>(_Match_try - _Haystack); // found a match

  0009f	48 8b 44 24 40	 mov	 rax, QWORD PTR _Haystack$[rsp]
  000a4	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Match_try$2[rsp]
  000a9	48 2b c8	 sub	 rcx, rax
  000ac	48 8b c1	 mov	 rax, rcx
  000af	eb 09		 jmp	 SHORT $LN1@Traits_fin
$LN6@Traits_fin:

; 692  :             }
; 693  :         }

  000b1	eb ba		 jmp	 SHORT $LN2@Traits_fin
$LN3@Traits_fin:
$LN5@Traits_fin:

; 694  :     }
; 695  : 
; 696  :     return static_cast<size_t>(-1); // no match

  000b3	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
$LN1@Traits_fin:

; 697  : }

  000ba	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000be	5f		 pop	 rdi
  000bf	c3		 ret	 0
??$_Traits_find_first_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Traits_find_first_of<std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Traits_find_first_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
_Matches$4 = 64
_End$5 = 328
_Match_try$6 = 336
$T7 = 352
__$ArrayPad$ = 360
_Haystack$ = 384
_Hay_size$ = 392
_Start_at$ = 400
_Needle$ = 408
_Needle_size$ = 416
__formal$ = 424
??$_Traits_find_first_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z PROC ; std::_Traits_find_first_of<std::char_traits<char> >, COMDAT

; 702  :     const size_t _Needle_size, true_type) noexcept {

$LN9:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 70 01
	00 00		 sub	 rsp, 368		; 00000170H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 5c 00 00 00	 mov	 ecx, 92			; 0000005cH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 80
	01 00 00	 mov	 rcx, QWORD PTR [rsp+384]
  00033	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003a	48 33 c4	 xor	 rax, rsp
  0003d	48 89 84 24 68
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 703  :     // in [_Haystack, _Haystack + _Hay_size), look for one of [_Needle, _Needle + _Needle_size), at/after _Start_at
; 704  :     // special case for std::char_traits
; 705  :     if (_Needle_size != 0 && _Start_at < _Hay_size) { // room for match, look for it

  00045	48 83 bc 24 a0
	01 00 00 00	 cmp	 QWORD PTR _Needle_size$[rsp], 0
  0004e	0f 84 46 01 00
	00		 je	 $LN5@Traits_fin
  00054	48 8b 84 24 88
	01 00 00	 mov	 rax, QWORD PTR _Hay_size$[rsp]
  0005c	48 39 84 24 90
	01 00 00	 cmp	 QWORD PTR _Start_at$[rsp], rax
  00064	0f 83 30 01 00
	00		 jae	 $LN5@Traits_fin

; 706  :         _String_bitmap<typename _Traits::char_type> _Matches;

  0006a	48 8d 4c 24 40	 lea	 rcx, QWORD PTR _Matches$4[rsp]
  0006f	e8 00 00 00 00	 call	 ??0?$_String_bitmap@D$00@std@@QEAA@XZ
  00074	90		 npad	 1

; 707  :         if (!_Matches._Mark(_Needle, _Needle + _Needle_size)) { // couldn't put one of the characters into the bitmap,

  00075	48 8b 84 24 a0
	01 00 00	 mov	 rax, QWORD PTR _Needle_size$[rsp]
  0007d	48 8b 8c 24 98
	01 00 00	 mov	 rcx, QWORD PTR _Needle$[rsp]
  00085	48 03 c8	 add	 rcx, rax
  00088	48 8b c1	 mov	 rax, rcx
  0008b	4c 8b c0	 mov	 r8, rax
  0008e	48 8b 94 24 98
	01 00 00	 mov	 rdx, QWORD PTR _Needle$[rsp]
  00096	48 8d 4c 24 40	 lea	 rcx, QWORD PTR _Matches$4[rsp]
  0009b	e8 00 00 00 00	 call	 ?_Mark@?$_String_bitmap@D$00@std@@QEAA_NPEBDQEBD@Z ; std::_String_bitmap<char,1>::_Mark
  000a0	90		 npad	 1
  000a1	0f b6 c0	 movzx	 eax, al
  000a4	85 c0		 test	 eax, eax
  000a6	75 58		 jne	 SHORT $LN6@Traits_fin

; 708  :                                                                 // fall back to the serial algorithm
; 709  :             return _Traits_find_first_of<_Traits>(_Haystack, _Hay_size, _Start_at, _Needle, _Needle_size, false_type{});

  000a8	48 8d 84 24 60
	01 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  000b0	48 8b f8	 mov	 rdi, rax
  000b3	33 c0		 xor	 eax, eax
  000b5	b9 01 00 00 00	 mov	 ecx, 1
  000ba	f3 aa		 rep stosb
  000bc	0f b6 84 24 60
	01 00 00	 movzx	 eax, BYTE PTR $T7[rsp]
  000c4	88 44 24 28	 mov	 BYTE PTR [rsp+40], al
  000c8	48 8b 84 24 a0
	01 00 00	 mov	 rax, QWORD PTR _Needle_size$[rsp]
  000d0	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000d5	4c 8b 8c 24 98
	01 00 00	 mov	 r9, QWORD PTR _Needle$[rsp]
  000dd	4c 8b 84 24 90
	01 00 00	 mov	 r8, QWORD PTR _Start_at$[rsp]
  000e5	48 8b 94 24 88
	01 00 00	 mov	 rdx, QWORD PTR _Hay_size$[rsp]
  000ed	48 8b 8c 24 80
	01 00 00	 mov	 rcx, QWORD PTR _Haystack$[rsp]
  000f5	e8 00 00 00 00	 call	 ??$_Traits_find_first_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$0A@@0@@Z ; std::_Traits_find_first_of<std::char_traits<char> >
  000fa	90		 npad	 1
  000fb	e9 a1 00 00 00	 jmp	 $LN1@Traits_fin
$LN6@Traits_fin:

; 710  :         }
; 711  : 
; 712  :         const auto _End = _Haystack + _Hay_size;

  00100	48 8b 84 24 88
	01 00 00	 mov	 rax, QWORD PTR _Hay_size$[rsp]
  00108	48 8b 8c 24 80
	01 00 00	 mov	 rcx, QWORD PTR _Haystack$[rsp]
  00110	48 03 c8	 add	 rcx, rax
  00113	48 8b c1	 mov	 rax, rcx
  00116	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR _End$5[rsp], rax

; 713  :         for (auto _Match_try = _Haystack + _Start_at; _Match_try < _End; ++_Match_try) {

  0011e	48 8b 84 24 90
	01 00 00	 mov	 rax, QWORD PTR _Start_at$[rsp]
  00126	48 8b 8c 24 80
	01 00 00	 mov	 rcx, QWORD PTR _Haystack$[rsp]
  0012e	48 03 c8	 add	 rcx, rax
  00131	48 8b c1	 mov	 rax, rcx
  00134	48 89 84 24 50
	01 00 00	 mov	 QWORD PTR _Match_try$6[rsp], rax
  0013c	eb 13		 jmp	 SHORT $LN4@Traits_fin
$LN2@Traits_fin:
  0013e	48 8b 84 24 50
	01 00 00	 mov	 rax, QWORD PTR _Match_try$6[rsp]
  00146	48 ff c0	 inc	 rax
  00149	48 89 84 24 50
	01 00 00	 mov	 QWORD PTR _Match_try$6[rsp], rax
$LN4@Traits_fin:
  00151	48 8b 84 24 48
	01 00 00	 mov	 rax, QWORD PTR _End$5[rsp]
  00159	48 39 84 24 50
	01 00 00	 cmp	 QWORD PTR _Match_try$6[rsp], rax
  00161	73 37		 jae	 SHORT $LN5@Traits_fin

; 714  :             if (_Matches._Match(*_Match_try)) {

  00163	48 8b 84 24 50
	01 00 00	 mov	 rax, QWORD PTR _Match_try$6[rsp]
  0016b	0f b6 10	 movzx	 edx, BYTE PTR [rax]
  0016e	48 8d 4c 24 40	 lea	 rcx, QWORD PTR _Matches$4[rsp]
  00173	e8 00 00 00 00	 call	 ?_Match@?$_String_bitmap@D$00@std@@QEBA_ND@Z ; std::_String_bitmap<char,1>::_Match
  00178	90		 npad	 1
  00179	0f b6 c0	 movzx	 eax, al
  0017c	85 c0		 test	 eax, eax
  0017e	74 18		 je	 SHORT $LN7@Traits_fin

; 715  :                 return static_cast<size_t>(_Match_try - _Haystack); // found a match

  00180	48 8b 84 24 80
	01 00 00	 mov	 rax, QWORD PTR _Haystack$[rsp]
  00188	48 8b 8c 24 50
	01 00 00	 mov	 rcx, QWORD PTR _Match_try$6[rsp]
  00190	48 2b c8	 sub	 rcx, rax
  00193	48 8b c1	 mov	 rax, rcx
  00196	eb 09		 jmp	 SHORT $LN1@Traits_fin
$LN7@Traits_fin:

; 716  :             }
; 717  :         }

  00198	eb a4		 jmp	 SHORT $LN2@Traits_fin
$LN5@Traits_fin:

; 718  :     }
; 719  : 
; 720  :     return static_cast<size_t>(-1); // no match

  0019a	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
$LN1@Traits_fin:

; 721  : }

  001a1	48 8b f8	 mov	 rdi, rax
  001a4	48 8b cc	 mov	 rcx, rsp
  001a7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Traits_find_first_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z$rtcFrameData
  001ae	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001b3	90		 npad	 1
  001b4	48 8b c7	 mov	 rax, rdi
  001b7	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001bf	48 33 cc	 xor	 rcx, rsp
  001c2	e8 00 00 00 00	 call	 __security_check_cookie
  001c7	90		 npad	 1
  001c8	48 81 c4 70 01
	00 00		 add	 rsp, 368		; 00000170H
  001cf	5f		 pop	 rdi
  001d0	c3		 ret	 0
??$_Traits_find_first_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z ENDP ; std::_Traits_find_first_of<std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Traits_find_first_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
_End$1 = 32
_Match_try$2 = 40
_Haystack$ = 64
_Hay_size$ = 72
_Start_at$ = 80
_Needle$ = 88
_Needle_size$ = 96
__formal$ = 104
??$_Traits_find_first_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Traits_find_first_not_of<std::char_traits<char> >, COMDAT

; 774  :     const size_t _Needle_size, false_type) noexcept {

$LN8:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 775  :     // in [_Haystack, _Haystack + _Hay_size), look for none of [_Needle, _Needle + _Needle_size), at/after _Start_at
; 776  :     // general algorithm
; 777  :     if (_Start_at < _Hay_size) { // room for match, look for it

  0002d	48 8b 44 24 48	 mov	 rax, QWORD PTR _Hay_size$[rsp]
  00032	48 39 44 24 50	 cmp	 QWORD PTR _Start_at$[rsp], rax
  00037	73 72		 jae	 SHORT $LN5@Traits_fin

; 778  :         const auto _End = _Haystack + _Hay_size;

  00039	48 8b 44 24 48	 mov	 rax, QWORD PTR _Hay_size$[rsp]
  0003e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Haystack$[rsp]
  00043	48 03 c8	 add	 rcx, rax
  00046	48 8b c1	 mov	 rax, rcx
  00049	48 89 44 24 20	 mov	 QWORD PTR _End$1[rsp], rax

; 779  :         for (auto _Match_try = _Haystack + _Start_at; _Match_try < _End; ++_Match_try) {

  0004e	48 8b 44 24 50	 mov	 rax, QWORD PTR _Start_at$[rsp]
  00053	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Haystack$[rsp]
  00058	48 03 c8	 add	 rcx, rax
  0005b	48 8b c1	 mov	 rax, rcx
  0005e	48 89 44 24 28	 mov	 QWORD PTR _Match_try$2[rsp], rax
  00063	eb 0d		 jmp	 SHORT $LN4@Traits_fin
$LN2@Traits_fin:
  00065	48 8b 44 24 28	 mov	 rax, QWORD PTR _Match_try$2[rsp]
  0006a	48 ff c0	 inc	 rax
  0006d	48 89 44 24 28	 mov	 QWORD PTR _Match_try$2[rsp], rax
$LN4@Traits_fin:
  00072	48 8b 44 24 20	 mov	 rax, QWORD PTR _End$1[rsp]
  00077	48 39 44 24 28	 cmp	 QWORD PTR _Match_try$2[rsp], rax
  0007c	73 2d		 jae	 SHORT $LN3@Traits_fin

; 780  :             if (!_Traits::find(_Needle, _Needle_size, *_Match_try)) {

  0007e	4c 8b 44 24 28	 mov	 r8, QWORD PTR _Match_try$2[rsp]
  00083	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Needle_size$[rsp]
  00088	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Needle$[rsp]
  0008d	e8 00 00 00 00	 call	 ?find@?$_Narrow_char_traits@DH@std@@SAPEBDQEBD_KAEBD@Z ; std::_Narrow_char_traits<char,int>::find
  00092	48 85 c0	 test	 rax, rax
  00095	75 12		 jne	 SHORT $LN6@Traits_fin

; 781  :                 return static_cast<size_t>(_Match_try - _Haystack); // found a match

  00097	48 8b 44 24 40	 mov	 rax, QWORD PTR _Haystack$[rsp]
  0009c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Match_try$2[rsp]
  000a1	48 2b c8	 sub	 rcx, rax
  000a4	48 8b c1	 mov	 rax, rcx
  000a7	eb 09		 jmp	 SHORT $LN1@Traits_fin
$LN6@Traits_fin:

; 782  :             }
; 783  :         }

  000a9	eb ba		 jmp	 SHORT $LN2@Traits_fin
$LN3@Traits_fin:
$LN5@Traits_fin:

; 784  :     }
; 785  : 
; 786  :     return static_cast<size_t>(-1); // no match

  000ab	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
$LN1@Traits_fin:

; 787  : }

  000b2	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000b6	5f		 pop	 rdi
  000b7	c3		 ret	 0
??$_Traits_find_first_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Traits_find_first_not_of<std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Traits_find_first_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
_Matches$4 = 64
_End$5 = 328
_Match_try$6 = 336
$T7 = 352
__$ArrayPad$ = 360
_Haystack$ = 384
_Hay_size$ = 392
_Start_at$ = 400
_Needle$ = 408
_Needle_size$ = 416
__formal$ = 424
??$_Traits_find_first_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z PROC ; std::_Traits_find_first_not_of<std::char_traits<char> >, COMDAT

; 792  :     const size_t _Needle_size, true_type) noexcept {

$LN9:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 70 01
	00 00		 sub	 rsp, 368		; 00000170H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 5c 00 00 00	 mov	 ecx, 92			; 0000005cH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 80
	01 00 00	 mov	 rcx, QWORD PTR [rsp+384]
  00033	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003a	48 33 c4	 xor	 rax, rsp
  0003d	48 89 84 24 68
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 793  :     // in [_Haystack, _Haystack + _Hay_size), look for none of [_Needle, _Needle + _Needle_size), at/after _Start_at
; 794  :     // special case for std::char_traits
; 795  :     if (_Start_at < _Hay_size) { // room for match, look for it

  00045	48 8b 84 24 88
	01 00 00	 mov	 rax, QWORD PTR _Hay_size$[rsp]
  0004d	48 39 84 24 90
	01 00 00	 cmp	 QWORD PTR _Start_at$[rsp], rax
  00055	0f 83 30 01 00
	00		 jae	 $LN5@Traits_fin

; 796  :         _String_bitmap<typename _Traits::char_type> _Matches;

  0005b	48 8d 4c 24 40	 lea	 rcx, QWORD PTR _Matches$4[rsp]
  00060	e8 00 00 00 00	 call	 ??0?$_String_bitmap@D$00@std@@QEAA@XZ
  00065	90		 npad	 1

; 797  :         if (!_Matches._Mark(_Needle, _Needle + _Needle_size)) { // couldn't put one of the characters into the bitmap,

  00066	48 8b 84 24 a0
	01 00 00	 mov	 rax, QWORD PTR _Needle_size$[rsp]
  0006e	48 8b 8c 24 98
	01 00 00	 mov	 rcx, QWORD PTR _Needle$[rsp]
  00076	48 03 c8	 add	 rcx, rax
  00079	48 8b c1	 mov	 rax, rcx
  0007c	4c 8b c0	 mov	 r8, rax
  0007f	48 8b 94 24 98
	01 00 00	 mov	 rdx, QWORD PTR _Needle$[rsp]
  00087	48 8d 4c 24 40	 lea	 rcx, QWORD PTR _Matches$4[rsp]
  0008c	e8 00 00 00 00	 call	 ?_Mark@?$_String_bitmap@D$00@std@@QEAA_NPEBDQEBD@Z ; std::_String_bitmap<char,1>::_Mark
  00091	90		 npad	 1
  00092	0f b6 c0	 movzx	 eax, al
  00095	85 c0		 test	 eax, eax
  00097	75 58		 jne	 SHORT $LN6@Traits_fin

; 798  :                                                                 // fall back to the serial algorithm
; 799  :             return _Traits_find_first_not_of<_Traits>(

  00099	48 8d 84 24 60
	01 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  000a1	48 8b f8	 mov	 rdi, rax
  000a4	33 c0		 xor	 eax, eax
  000a6	b9 01 00 00 00	 mov	 ecx, 1
  000ab	f3 aa		 rep stosb
  000ad	0f b6 84 24 60
	01 00 00	 movzx	 eax, BYTE PTR $T7[rsp]
  000b5	88 44 24 28	 mov	 BYTE PTR [rsp+40], al
  000b9	48 8b 84 24 a0
	01 00 00	 mov	 rax, QWORD PTR _Needle_size$[rsp]
  000c1	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000c6	4c 8b 8c 24 98
	01 00 00	 mov	 r9, QWORD PTR _Needle$[rsp]
  000ce	4c 8b 84 24 90
	01 00 00	 mov	 r8, QWORD PTR _Start_at$[rsp]
  000d6	48 8b 94 24 88
	01 00 00	 mov	 rdx, QWORD PTR _Hay_size$[rsp]
  000de	48 8b 8c 24 80
	01 00 00	 mov	 rcx, QWORD PTR _Haystack$[rsp]
  000e6	e8 00 00 00 00	 call	 ??$_Traits_find_first_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$0A@@0@@Z ; std::_Traits_find_first_not_of<std::char_traits<char> >
  000eb	90		 npad	 1
  000ec	e9 a1 00 00 00	 jmp	 $LN1@Traits_fin
$LN6@Traits_fin:

; 800  :                 _Haystack, _Hay_size, _Start_at, _Needle, _Needle_size, false_type{});
; 801  :         }
; 802  : 
; 803  :         const auto _End = _Haystack + _Hay_size;

  000f1	48 8b 84 24 88
	01 00 00	 mov	 rax, QWORD PTR _Hay_size$[rsp]
  000f9	48 8b 8c 24 80
	01 00 00	 mov	 rcx, QWORD PTR _Haystack$[rsp]
  00101	48 03 c8	 add	 rcx, rax
  00104	48 8b c1	 mov	 rax, rcx
  00107	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR _End$5[rsp], rax

; 804  :         for (auto _Match_try = _Haystack + _Start_at; _Match_try < _End; ++_Match_try) {

  0010f	48 8b 84 24 90
	01 00 00	 mov	 rax, QWORD PTR _Start_at$[rsp]
  00117	48 8b 8c 24 80
	01 00 00	 mov	 rcx, QWORD PTR _Haystack$[rsp]
  0011f	48 03 c8	 add	 rcx, rax
  00122	48 8b c1	 mov	 rax, rcx
  00125	48 89 84 24 50
	01 00 00	 mov	 QWORD PTR _Match_try$6[rsp], rax
  0012d	eb 13		 jmp	 SHORT $LN4@Traits_fin
$LN2@Traits_fin:
  0012f	48 8b 84 24 50
	01 00 00	 mov	 rax, QWORD PTR _Match_try$6[rsp]
  00137	48 ff c0	 inc	 rax
  0013a	48 89 84 24 50
	01 00 00	 mov	 QWORD PTR _Match_try$6[rsp], rax
$LN4@Traits_fin:
  00142	48 8b 84 24 48
	01 00 00	 mov	 rax, QWORD PTR _End$5[rsp]
  0014a	48 39 84 24 50
	01 00 00	 cmp	 QWORD PTR _Match_try$6[rsp], rax
  00152	73 37		 jae	 SHORT $LN5@Traits_fin

; 805  :             if (!_Matches._Match(*_Match_try)) {

  00154	48 8b 84 24 50
	01 00 00	 mov	 rax, QWORD PTR _Match_try$6[rsp]
  0015c	0f b6 10	 movzx	 edx, BYTE PTR [rax]
  0015f	48 8d 4c 24 40	 lea	 rcx, QWORD PTR _Matches$4[rsp]
  00164	e8 00 00 00 00	 call	 ?_Match@?$_String_bitmap@D$00@std@@QEBA_ND@Z ; std::_String_bitmap<char,1>::_Match
  00169	90		 npad	 1
  0016a	0f b6 c0	 movzx	 eax, al
  0016d	85 c0		 test	 eax, eax
  0016f	75 18		 jne	 SHORT $LN7@Traits_fin

; 806  :                 return static_cast<size_t>(_Match_try - _Haystack); // found a match

  00171	48 8b 84 24 80
	01 00 00	 mov	 rax, QWORD PTR _Haystack$[rsp]
  00179	48 8b 8c 24 50
	01 00 00	 mov	 rcx, QWORD PTR _Match_try$6[rsp]
  00181	48 2b c8	 sub	 rcx, rax
  00184	48 8b c1	 mov	 rax, rcx
  00187	eb 09		 jmp	 SHORT $LN1@Traits_fin
$LN7@Traits_fin:

; 807  :             }
; 808  :         }

  00189	eb a4		 jmp	 SHORT $LN2@Traits_fin
$LN5@Traits_fin:

; 809  :     }
; 810  : 
; 811  :     return static_cast<size_t>(-1); // no match

  0018b	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
$LN1@Traits_fin:

; 812  : }

  00192	48 8b f8	 mov	 rdi, rax
  00195	48 8b cc	 mov	 rcx, rsp
  00198	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Traits_find_first_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z$rtcFrameData
  0019f	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001a4	90		 npad	 1
  001a5	48 8b c7	 mov	 rax, rdi
  001a8	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001b0	48 33 cc	 xor	 rcx, rsp
  001b3	e8 00 00 00 00	 call	 __security_check_cookie
  001b8	90		 npad	 1
  001b9	48 81 c4 70 01
	00 00		 add	 rsp, 368		; 00000170H
  001c0	5f		 pop	 rdi
  001c1	c3		 ret	 0
??$_Traits_find_first_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z ENDP ; std::_Traits_find_first_not_of<std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Traits_find_last_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
_Match_try$1 = 32
$T2 = 40
_Haystack$ = 64
_Hay_size$ = 72
_Start_at$ = 80
_Needle$ = 88
_Needle_size$ = 96
__formal$ = 104
??$_Traits_find_last_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Traits_find_last_not_of<std::char_traits<char> >, COMDAT

; 833  :     const size_t _Needle_size, false_type) noexcept {

$LN9:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 834  :     // in [_Haystack, _Haystack + _Hay_size), look for none of [_Needle, _Needle + _Needle_size), before _Start_at
; 835  :     // general algorithm
; 836  :     if (_Hay_size != 0) { // worth searching, do it

  0002d	48 83 7c 24 48
	00		 cmp	 QWORD PTR _Hay_size$[rsp], 0
  00033	74 79		 je	 SHORT $LN5@Traits_fin

; 837  :         for (auto _Match_try = _Haystack + _Min_value(_Start_at, _Hay_size - 1);; --_Match_try) {

  00035	48 8b 44 24 48	 mov	 rax, QWORD PTR _Hay_size$[rsp]
  0003a	48 ff c8	 dec	 rax
  0003d	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  00042	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T2[rsp]
  00047	48 8d 4c 24 50	 lea	 rcx, QWORD PTR _Start_at$[rsp]
  0004c	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  00051	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00054	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Haystack$[rsp]
  00059	48 03 c8	 add	 rcx, rax
  0005c	48 8b c1	 mov	 rax, rcx
  0005f	48 89 44 24 20	 mov	 QWORD PTR _Match_try$1[rsp], rax
  00064	eb 0d		 jmp	 SHORT $LN4@Traits_fin
$LN2@Traits_fin:
  00066	48 8b 44 24 20	 mov	 rax, QWORD PTR _Match_try$1[rsp]
  0006b	48 ff c8	 dec	 rax
  0006e	48 89 44 24 20	 mov	 QWORD PTR _Match_try$1[rsp], rax
$LN4@Traits_fin:

; 838  :             if (!_Traits::find(_Needle, _Needle_size, *_Match_try)) {

  00073	4c 8b 44 24 20	 mov	 r8, QWORD PTR _Match_try$1[rsp]
  00078	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Needle_size$[rsp]
  0007d	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Needle$[rsp]
  00082	e8 00 00 00 00	 call	 ?find@?$_Narrow_char_traits@DH@std@@SAPEBDQEBD_KAEBD@Z ; std::_Narrow_char_traits<char,int>::find
  00087	48 85 c0	 test	 rax, rax
  0008a	75 12		 jne	 SHORT $LN6@Traits_fin

; 839  :                 return static_cast<size_t>(_Match_try - _Haystack); // found a match

  0008c	48 8b 44 24 40	 mov	 rax, QWORD PTR _Haystack$[rsp]
  00091	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Match_try$1[rsp]
  00096	48 2b c8	 sub	 rcx, rax
  00099	48 8b c1	 mov	 rax, rcx
  0009c	eb 17		 jmp	 SHORT $LN1@Traits_fin
$LN6@Traits_fin:

; 840  :             }
; 841  : 
; 842  :             if (_Match_try == _Haystack) {

  0009e	48 8b 44 24 40	 mov	 rax, QWORD PTR _Haystack$[rsp]
  000a3	48 39 44 24 20	 cmp	 QWORD PTR _Match_try$1[rsp], rax
  000a8	75 02		 jne	 SHORT $LN7@Traits_fin

; 843  :                 break; // at beginning, no more chance for match

  000aa	eb 02		 jmp	 SHORT $LN3@Traits_fin
$LN7@Traits_fin:

; 844  :             }
; 845  :         }

  000ac	eb b8		 jmp	 SHORT $LN2@Traits_fin
$LN3@Traits_fin:
$LN5@Traits_fin:

; 846  :     }
; 847  : 
; 848  :     return static_cast<size_t>(-1); // no match

  000ae	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
$LN1@Traits_fin:

; 849  : }

  000b5	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000b9	5f		 pop	 rdi
  000ba	c3		 ret	 0
??$_Traits_find_last_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Traits_find_last_not_of<std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Traits_find_last_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
_Matches$4 = 64
_Match_try$5 = 328
$T6 = 344
$T7 = 352
__$ArrayPad$ = 360
_Haystack$ = 384
_Hay_size$ = 392
_Start_at$ = 400
_Needle$ = 408
_Needle_size$ = 416
__formal$ = 424
??$_Traits_find_last_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z PROC ; std::_Traits_find_last_not_of<std::char_traits<char> >, COMDAT

; 854  :     const size_t _Needle_size, true_type) noexcept {

$LN10:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 70 01
	00 00		 sub	 rsp, 368		; 00000170H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 5c 00 00 00	 mov	 ecx, 92			; 0000005cH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 80
	01 00 00	 mov	 rcx, QWORD PTR [rsp+384]
  00033	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003a	48 33 c4	 xor	 rax, rsp
  0003d	48 89 84 24 68
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 855  :     // in [_Haystack, _Haystack + _Hay_size), look for none of [_Needle, _Needle + _Needle_size), before _Start_at
; 856  :     // special case for std::char_traits
; 857  :     if (_Hay_size != 0) { // worth searching, do it

  00045	48 83 bc 24 88
	01 00 00 00	 cmp	 QWORD PTR _Hay_size$[rsp], 0
  0004e	0f 84 38 01 00
	00		 je	 $LN5@Traits_fin

; 858  :         _String_bitmap<typename _Traits::char_type> _Matches;

  00054	48 8d 4c 24 40	 lea	 rcx, QWORD PTR _Matches$4[rsp]
  00059	e8 00 00 00 00	 call	 ??0?$_String_bitmap@D$00@std@@QEAA@XZ
  0005e	90		 npad	 1

; 859  :         if (!_Matches._Mark(_Needle, _Needle + _Needle_size)) { // couldn't put one of the characters into the bitmap,

  0005f	48 8b 84 24 a0
	01 00 00	 mov	 rax, QWORD PTR _Needle_size$[rsp]
  00067	48 8b 8c 24 98
	01 00 00	 mov	 rcx, QWORD PTR _Needle$[rsp]
  0006f	48 03 c8	 add	 rcx, rax
  00072	48 8b c1	 mov	 rax, rcx
  00075	4c 8b c0	 mov	 r8, rax
  00078	48 8b 94 24 98
	01 00 00	 mov	 rdx, QWORD PTR _Needle$[rsp]
  00080	48 8d 4c 24 40	 lea	 rcx, QWORD PTR _Matches$4[rsp]
  00085	e8 00 00 00 00	 call	 ?_Mark@?$_String_bitmap@D$00@std@@QEAA_NPEBDQEBD@Z ; std::_String_bitmap<char,1>::_Mark
  0008a	90		 npad	 1
  0008b	0f b6 c0	 movzx	 eax, al
  0008e	85 c0		 test	 eax, eax
  00090	75 58		 jne	 SHORT $LN6@Traits_fin

; 860  :                                                                 // fall back to the serial algorithm
; 861  :             return _Traits_find_last_not_of<_Traits>(

  00092	48 8d 84 24 58
	01 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  0009a	48 8b f8	 mov	 rdi, rax
  0009d	33 c0		 xor	 eax, eax
  0009f	b9 01 00 00 00	 mov	 ecx, 1
  000a4	f3 aa		 rep stosb
  000a6	0f b6 84 24 58
	01 00 00	 movzx	 eax, BYTE PTR $T6[rsp]
  000ae	88 44 24 28	 mov	 BYTE PTR [rsp+40], al
  000b2	48 8b 84 24 a0
	01 00 00	 mov	 rax, QWORD PTR _Needle_size$[rsp]
  000ba	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000bf	4c 8b 8c 24 98
	01 00 00	 mov	 r9, QWORD PTR _Needle$[rsp]
  000c7	4c 8b 84 24 90
	01 00 00	 mov	 r8, QWORD PTR _Start_at$[rsp]
  000cf	48 8b 94 24 88
	01 00 00	 mov	 rdx, QWORD PTR _Hay_size$[rsp]
  000d7	48 8b 8c 24 80
	01 00 00	 mov	 rcx, QWORD PTR _Haystack$[rsp]
  000df	e8 00 00 00 00	 call	 ??$_Traits_find_last_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$0A@@0@@Z ; std::_Traits_find_last_not_of<std::char_traits<char> >
  000e4	90		 npad	 1
  000e5	e9 a9 00 00 00	 jmp	 $LN1@Traits_fin
$LN6@Traits_fin:

; 862  :                 _Haystack, _Hay_size, _Start_at, _Needle, _Needle_size, false_type{});
; 863  :         }
; 864  : 
; 865  :         for (auto _Match_try = _Haystack + _Min_value(_Start_at, _Hay_size - 1);; --_Match_try) {

  000ea	48 8b 84 24 88
	01 00 00	 mov	 rax, QWORD PTR _Hay_size$[rsp]
  000f2	48 ff c8	 dec	 rax
  000f5	48 89 84 24 60
	01 00 00	 mov	 QWORD PTR $T7[rsp], rax
  000fd	48 8d 94 24 60
	01 00 00	 lea	 rdx, QWORD PTR $T7[rsp]
  00105	48 8d 8c 24 90
	01 00 00	 lea	 rcx, QWORD PTR _Start_at$[rsp]
  0010d	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  00112	90		 npad	 1
  00113	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00116	48 8b 8c 24 80
	01 00 00	 mov	 rcx, QWORD PTR _Haystack$[rsp]
  0011e	48 03 c8	 add	 rcx, rax
  00121	48 8b c1	 mov	 rax, rcx
  00124	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR _Match_try$5[rsp], rax
  0012c	eb 13		 jmp	 SHORT $LN4@Traits_fin
$LN2@Traits_fin:
  0012e	48 8b 84 24 48
	01 00 00	 mov	 rax, QWORD PTR _Match_try$5[rsp]
  00136	48 ff c8	 dec	 rax
  00139	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR _Match_try$5[rsp], rax
$LN4@Traits_fin:

; 866  :             if (!_Matches._Match(*_Match_try)) {

  00141	48 8b 84 24 48
	01 00 00	 mov	 rax, QWORD PTR _Match_try$5[rsp]
  00149	0f b6 10	 movzx	 edx, BYTE PTR [rax]
  0014c	48 8d 4c 24 40	 lea	 rcx, QWORD PTR _Matches$4[rsp]
  00151	e8 00 00 00 00	 call	 ?_Match@?$_String_bitmap@D$00@std@@QEBA_ND@Z ; std::_String_bitmap<char,1>::_Match
  00156	90		 npad	 1
  00157	0f b6 c0	 movzx	 eax, al
  0015a	85 c0		 test	 eax, eax
  0015c	75 18		 jne	 SHORT $LN7@Traits_fin

; 867  :                 return static_cast<size_t>(_Match_try - _Haystack); // found a match

  0015e	48 8b 84 24 80
	01 00 00	 mov	 rax, QWORD PTR _Haystack$[rsp]
  00166	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR _Match_try$5[rsp]
  0016e	48 2b c8	 sub	 rcx, rax
  00171	48 8b c1	 mov	 rax, rcx
  00174	eb 1d		 jmp	 SHORT $LN1@Traits_fin
$LN7@Traits_fin:

; 868  :             }
; 869  : 
; 870  :             if (_Match_try == _Haystack) {

  00176	48 8b 84 24 80
	01 00 00	 mov	 rax, QWORD PTR _Haystack$[rsp]
  0017e	48 39 84 24 48
	01 00 00	 cmp	 QWORD PTR _Match_try$5[rsp], rax
  00186	75 02		 jne	 SHORT $LN8@Traits_fin

; 871  :                 break; // at beginning, no more chance for match

  00188	eb 02		 jmp	 SHORT $LN5@Traits_fin
$LN8@Traits_fin:

; 872  :             }
; 873  :         }

  0018a	eb a2		 jmp	 SHORT $LN2@Traits_fin
$LN5@Traits_fin:

; 874  :     }
; 875  : 
; 876  :     return static_cast<size_t>(-1); // no match

  0018c	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
$LN1@Traits_fin:

; 877  : }

  00193	48 8b f8	 mov	 rdi, rax
  00196	48 8b cc	 mov	 rcx, rsp
  00199	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Traits_find_last_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z$rtcFrameData
  001a0	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001a5	90		 npad	 1
  001a6	48 8b c7	 mov	 rax, rdi
  001a9	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001b1	48 33 cc	 xor	 rcx, rsp
  001b4	e8 00 00 00 00	 call	 __security_check_cookie
  001b9	90		 npad	 1
  001ba	48 81 c4 70 01
	00 00		 add	 rsp, 368		; 00000170H
  001c1	5f		 pop	 rdi
  001c2	c3		 ret	 0
??$_Traits_find_last_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z ENDP ; std::_Traits_find_last_not_of<std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEBV?$allocator@_W@std@@@std@@YAAEBV?$allocator@_W@0@AEBV10@@Z ; std::forward<std::allocator<wchar_t> const &>
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
  0003e	90		 npad	 1
  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
?dtor$0@?0???$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
?dtor$0@?0???$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@_W@std@@QEAA@XZ ; std::allocator<wchar_t>::allocator<wchar_t>
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
  00039	90		 npad	 1
  0003a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> >, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@V?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z ; std::forward<std::allocator<wchar_t> >
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
  0003e	90		 npad	 1
  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
?dtor$0@?0???$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
?dtor$0@?0???$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z PROC ; std::move<std::allocator<wchar_t> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z ENDP ; std::move<std::allocator<wchar_t> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z PROC ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ENDP ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Traits_find@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101@Z
_TEXT	SEGMENT
_Possible_matches_end$ = 32
_Match_try$1 = 40
_Haystack$ = 64
_Hay_size$ = 72
_Start_at$ = 80
_Needle$ = 88
_Needle_size$ = 96
??$_Traits_find@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101@Z PROC ; std::_Traits_find<std::char_traits<wchar_t> >, COMDAT

; 541  :     const size_t _Needle_size) noexcept { // search [_Haystack, _Haystack + _Hay_size) for [_Needle, _Needle +

$LN11:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 542  :                                           // _Needle_size), at/after _Start_at
; 543  :     if (_Needle_size > _Hay_size
; 544  :         || _Start_at > _Hay_size - _Needle_size) { // xpos cannot exist, report failure

  0002d	48 8b 44 24 48	 mov	 rax, QWORD PTR _Hay_size$[rsp]
  00032	48 39 44 24 60	 cmp	 QWORD PTR _Needle_size$[rsp], rax
  00037	77 17		 ja	 SHORT $LN6@Traits_fin
  00039	48 8b 44 24 60	 mov	 rax, QWORD PTR _Needle_size$[rsp]
  0003e	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Hay_size$[rsp]
  00043	48 2b c8	 sub	 rcx, rax
  00046	48 8b c1	 mov	 rax, rcx
  00049	48 39 44 24 50	 cmp	 QWORD PTR _Start_at$[rsp], rax
  0004e	76 0c		 jbe	 SHORT $LN5@Traits_fin
$LN6@Traits_fin:

; 545  :                                                    // N4659 24.3.2.7.2 [string.find]/1 says:
; 546  :                                                    // 1. _Start_at <= xpos
; 547  :                                                    // 2. xpos + _Needle_size <= _Hay_size;
; 548  :                                                    // therefore:
; 549  :                                                    // 3. _Needle_size <= _Hay_size (by 2) (checked above)
; 550  :                                                    // 4. _Start_at + _Needle_size <= _Hay_size (substitute 1 into 2)
; 551  :                                                    // 5. _Start_at <= _Hay_size - _Needle_size (4, move _Needle_size to
; 552  :                                                    // other side) (also checked above)
; 553  :         return static_cast<size_t>(-1);

  00050	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
  00057	e9 be 00 00 00	 jmp	 $LN1@Traits_fin
$LN5@Traits_fin:

; 554  :     }
; 555  : 
; 556  :     if (_Needle_size == 0) { // empty string always matches if xpos is possible

  0005c	48 83 7c 24 60
	00		 cmp	 QWORD PTR _Needle_size$[rsp], 0
  00062	75 0a		 jne	 SHORT $LN7@Traits_fin

; 557  :         return _Start_at;

  00064	48 8b 44 24 50	 mov	 rax, QWORD PTR _Start_at$[rsp]
  00069	e9 ac 00 00 00	 jmp	 $LN1@Traits_fin
$LN7@Traits_fin:

; 558  :     }
; 559  : 
; 560  :     const auto _Possible_matches_end = _Haystack + (_Hay_size - _Needle_size) + 1;

  0006e	48 8b 44 24 60	 mov	 rax, QWORD PTR _Needle_size$[rsp]
  00073	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Hay_size$[rsp]
  00078	48 2b c8	 sub	 rcx, rax
  0007b	48 8b c1	 mov	 rax, rcx
  0007e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Haystack$[rsp]
  00083	48 8d 44 41 02	 lea	 rax, QWORD PTR [rcx+rax*2+2]
  00088	48 89 44 24 20	 mov	 QWORD PTR _Possible_matches_end$[rsp], rax

; 561  :     for (auto _Match_try = _Haystack + _Start_at;; ++_Match_try) {

  0008d	48 8b 44 24 40	 mov	 rax, QWORD PTR _Haystack$[rsp]
  00092	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Start_at$[rsp]
  00097	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  0009b	48 89 44 24 28	 mov	 QWORD PTR _Match_try$1[rsp], rax
  000a0	eb 0e		 jmp	 SHORT $LN4@Traits_fin
$LN2@Traits_fin:
  000a2	48 8b 44 24 28	 mov	 rax, QWORD PTR _Match_try$1[rsp]
  000a7	48 83 c0 02	 add	 rax, 2
  000ab	48 89 44 24 28	 mov	 QWORD PTR _Match_try$1[rsp], rax
$LN4@Traits_fin:

; 562  :         _Match_try = _Traits::find(_Match_try, static_cast<size_t>(_Possible_matches_end - _Match_try), *_Needle);

  000b0	48 8b 44 24 28	 mov	 rax, QWORD PTR _Match_try$1[rsp]
  000b5	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Possible_matches_end$[rsp]
  000ba	48 2b c8	 sub	 rcx, rax
  000bd	48 8b c1	 mov	 rax, rcx
  000c0	48 d1 f8	 sar	 rax, 1
  000c3	4c 8b 44 24 58	 mov	 r8, QWORD PTR _Needle$[rsp]
  000c8	48 8b d0	 mov	 rdx, rax
  000cb	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Match_try$1[rsp]
  000d0	e8 00 00 00 00	 call	 ?find@?$_WChar_traits@_W@std@@SAPEB_WPEB_W_KAEB_W@Z ; std::_WChar_traits<wchar_t>::find
  000d5	48 89 44 24 28	 mov	 QWORD PTR _Match_try$1[rsp], rax

; 563  :         if (!_Match_try) { // didn't find first character; report failure

  000da	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Match_try$1[rsp], 0
  000e0	75 09		 jne	 SHORT $LN8@Traits_fin

; 564  :             return static_cast<size_t>(-1);

  000e2	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
  000e9	eb 2f		 jmp	 SHORT $LN1@Traits_fin
$LN8@Traits_fin:

; 565  :         }
; 566  : 
; 567  :         if (_Traits::compare(_Match_try, _Needle, _Needle_size) == 0) { // found match

  000eb	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Needle_size$[rsp]
  000f0	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Needle$[rsp]
  000f5	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Match_try$1[rsp]
  000fa	e8 00 00 00 00	 call	 ?compare@?$_WChar_traits@_W@std@@SAHQEB_W0_K@Z ; std::_WChar_traits<wchar_t>::compare
  000ff	85 c0		 test	 eax, eax
  00101	75 15		 jne	 SHORT $LN9@Traits_fin

; 568  :             return static_cast<size_t>(_Match_try - _Haystack);

  00103	48 8b 44 24 40	 mov	 rax, QWORD PTR _Haystack$[rsp]
  00108	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Match_try$1[rsp]
  0010d	48 2b c8	 sub	 rcx, rax
  00110	48 8b c1	 mov	 rax, rcx
  00113	48 d1 f8	 sar	 rax, 1
  00116	eb 02		 jmp	 SHORT $LN1@Traits_fin
$LN9@Traits_fin:

; 569  :         }
; 570  :     }

  00118	eb 88		 jmp	 SHORT $LN2@Traits_fin
$LN1@Traits_fin:

; 571  : }

  0011a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0011e	5f		 pop	 rdi
  0011f	c3		 ret	 0
??$_Traits_find@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101@Z ENDP ; std::_Traits_find<std::char_traits<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Traits_find_first_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
_End$1 = 32
_Match_try$2 = 40
_Haystack$ = 64
_Hay_size$ = 72
_Start_at$ = 80
_Needle$ = 88
_Needle_size$ = 96
__formal$ = 104
??$_Traits_find_first_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Traits_find_first_not_of<std::char_traits<wchar_t> >, COMDAT

; 774  :     const size_t _Needle_size, false_type) noexcept {

$LN8:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 775  :     // in [_Haystack, _Haystack + _Hay_size), look for none of [_Needle, _Needle + _Needle_size), at/after _Start_at
; 776  :     // general algorithm
; 777  :     if (_Start_at < _Hay_size) { // room for match, look for it

  0002d	48 8b 44 24 48	 mov	 rax, QWORD PTR _Hay_size$[rsp]
  00032	48 39 44 24 50	 cmp	 QWORD PTR _Start_at$[rsp], rax
  00037	73 72		 jae	 SHORT $LN5@Traits_fin

; 778  :         const auto _End = _Haystack + _Hay_size;

  00039	48 8b 44 24 40	 mov	 rax, QWORD PTR _Haystack$[rsp]
  0003e	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Hay_size$[rsp]
  00043	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  00047	48 89 44 24 20	 mov	 QWORD PTR _End$1[rsp], rax

; 779  :         for (auto _Match_try = _Haystack + _Start_at; _Match_try < _End; ++_Match_try) {

  0004c	48 8b 44 24 40	 mov	 rax, QWORD PTR _Haystack$[rsp]
  00051	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Start_at$[rsp]
  00056	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  0005a	48 89 44 24 28	 mov	 QWORD PTR _Match_try$2[rsp], rax
  0005f	eb 0e		 jmp	 SHORT $LN4@Traits_fin
$LN2@Traits_fin:
  00061	48 8b 44 24 28	 mov	 rax, QWORD PTR _Match_try$2[rsp]
  00066	48 83 c0 02	 add	 rax, 2
  0006a	48 89 44 24 28	 mov	 QWORD PTR _Match_try$2[rsp], rax
$LN4@Traits_fin:
  0006f	48 8b 44 24 20	 mov	 rax, QWORD PTR _End$1[rsp]
  00074	48 39 44 24 28	 cmp	 QWORD PTR _Match_try$2[rsp], rax
  00079	73 30		 jae	 SHORT $LN3@Traits_fin

; 780  :             if (!_Traits::find(_Needle, _Needle_size, *_Match_try)) {

  0007b	4c 8b 44 24 28	 mov	 r8, QWORD PTR _Match_try$2[rsp]
  00080	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Needle_size$[rsp]
  00085	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Needle$[rsp]
  0008a	e8 00 00 00 00	 call	 ?find@?$_WChar_traits@_W@std@@SAPEB_WPEB_W_KAEB_W@Z ; std::_WChar_traits<wchar_t>::find
  0008f	48 85 c0	 test	 rax, rax
  00092	75 15		 jne	 SHORT $LN6@Traits_fin

; 781  :                 return static_cast<size_t>(_Match_try - _Haystack); // found a match

  00094	48 8b 44 24 40	 mov	 rax, QWORD PTR _Haystack$[rsp]
  00099	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Match_try$2[rsp]
  0009e	48 2b c8	 sub	 rcx, rax
  000a1	48 8b c1	 mov	 rax, rcx
  000a4	48 d1 f8	 sar	 rax, 1
  000a7	eb 09		 jmp	 SHORT $LN1@Traits_fin
$LN6@Traits_fin:

; 782  :             }
; 783  :         }

  000a9	eb b6		 jmp	 SHORT $LN2@Traits_fin
$LN3@Traits_fin:
$LN5@Traits_fin:

; 784  :     }
; 785  : 
; 786  :     return static_cast<size_t>(-1); // no match

  000ab	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
$LN1@Traits_fin:

; 787  : }

  000b2	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000b6	5f		 pop	 rdi
  000b7	c3		 ret	 0
??$_Traits_find_first_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Traits_find_first_not_of<std::char_traits<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Traits_find_first_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
_Matches$4 = 64
_End$5 = 328
_Match_try$6 = 336
$T7 = 352
__$ArrayPad$ = 360
_Haystack$ = 384
_Hay_size$ = 392
_Start_at$ = 400
_Needle$ = 408
_Needle_size$ = 416
__formal$ = 424
??$_Traits_find_first_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z PROC ; std::_Traits_find_first_not_of<std::char_traits<wchar_t> >, COMDAT

; 792  :     const size_t _Needle_size, true_type) noexcept {

$LN9:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 70 01
	00 00		 sub	 rsp, 368		; 00000170H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 5c 00 00 00	 mov	 ecx, 92			; 0000005cH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 80
	01 00 00	 mov	 rcx, QWORD PTR [rsp+384]
  00033	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003a	48 33 c4	 xor	 rax, rsp
  0003d	48 89 84 24 68
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 793  :     // in [_Haystack, _Haystack + _Hay_size), look for none of [_Needle, _Needle + _Needle_size), at/after _Start_at
; 794  :     // special case for std::char_traits
; 795  :     if (_Start_at < _Hay_size) { // room for match, look for it

  00045	48 8b 84 24 88
	01 00 00	 mov	 rax, QWORD PTR _Hay_size$[rsp]
  0004d	48 39 84 24 90
	01 00 00	 cmp	 QWORD PTR _Start_at$[rsp], rax
  00055	0f 83 2e 01 00
	00		 jae	 $LN5@Traits_fin

; 796  :         _String_bitmap<typename _Traits::char_type> _Matches;

  0005b	48 8d 4c 24 40	 lea	 rcx, QWORD PTR _Matches$4[rsp]
  00060	e8 00 00 00 00	 call	 ??0?$_String_bitmap@_W$0A@@std@@QEAA@XZ
  00065	90		 npad	 1

; 797  :         if (!_Matches._Mark(_Needle, _Needle + _Needle_size)) { // couldn't put one of the characters into the bitmap,

  00066	48 8b 84 24 98
	01 00 00	 mov	 rax, QWORD PTR _Needle$[rsp]
  0006e	48 8b 8c 24 a0
	01 00 00	 mov	 rcx, QWORD PTR _Needle_size$[rsp]
  00076	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  0007a	4c 8b c0	 mov	 r8, rax
  0007d	48 8b 94 24 98
	01 00 00	 mov	 rdx, QWORD PTR _Needle$[rsp]
  00085	48 8d 4c 24 40	 lea	 rcx, QWORD PTR _Matches$4[rsp]
  0008a	e8 00 00 00 00	 call	 ?_Mark@?$_String_bitmap@_W$0A@@std@@QEAA_NPEB_WQEB_W@Z ; std::_String_bitmap<wchar_t,0>::_Mark
  0008f	90		 npad	 1
  00090	0f b6 c0	 movzx	 eax, al
  00093	85 c0		 test	 eax, eax
  00095	75 58		 jne	 SHORT $LN6@Traits_fin

; 798  :                                                                 // fall back to the serial algorithm
; 799  :             return _Traits_find_first_not_of<_Traits>(

  00097	48 8d 84 24 60
	01 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  0009f	48 8b f8	 mov	 rdi, rax
  000a2	33 c0		 xor	 eax, eax
  000a4	b9 01 00 00 00	 mov	 ecx, 1
  000a9	f3 aa		 rep stosb
  000ab	0f b6 84 24 60
	01 00 00	 movzx	 eax, BYTE PTR $T7[rsp]
  000b3	88 44 24 28	 mov	 BYTE PTR [rsp+40], al
  000b7	48 8b 84 24 a0
	01 00 00	 mov	 rax, QWORD PTR _Needle_size$[rsp]
  000bf	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000c4	4c 8b 8c 24 98
	01 00 00	 mov	 r9, QWORD PTR _Needle$[rsp]
  000cc	4c 8b 84 24 90
	01 00 00	 mov	 r8, QWORD PTR _Start_at$[rsp]
  000d4	48 8b 94 24 88
	01 00 00	 mov	 rdx, QWORD PTR _Hay_size$[rsp]
  000dc	48 8b 8c 24 80
	01 00 00	 mov	 rcx, QWORD PTR _Haystack$[rsp]
  000e4	e8 00 00 00 00	 call	 ??$_Traits_find_first_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$0A@@0@@Z ; std::_Traits_find_first_not_of<std::char_traits<wchar_t> >
  000e9	90		 npad	 1
  000ea	e9 a1 00 00 00	 jmp	 $LN1@Traits_fin
$LN6@Traits_fin:

; 800  :                 _Haystack, _Hay_size, _Start_at, _Needle, _Needle_size, false_type{});
; 801  :         }
; 802  : 
; 803  :         const auto _End = _Haystack + _Hay_size;

  000ef	48 8b 84 24 80
	01 00 00	 mov	 rax, QWORD PTR _Haystack$[rsp]
  000f7	48 8b 8c 24 88
	01 00 00	 mov	 rcx, QWORD PTR _Hay_size$[rsp]
  000ff	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  00103	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR _End$5[rsp], rax

; 804  :         for (auto _Match_try = _Haystack + _Start_at; _Match_try < _End; ++_Match_try) {

  0010b	48 8b 84 24 80
	01 00 00	 mov	 rax, QWORD PTR _Haystack$[rsp]
  00113	48 8b 8c 24 90
	01 00 00	 mov	 rcx, QWORD PTR _Start_at$[rsp]
  0011b	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  0011f	48 89 84 24 50
	01 00 00	 mov	 QWORD PTR _Match_try$6[rsp], rax
  00127	eb 14		 jmp	 SHORT $LN4@Traits_fin
$LN2@Traits_fin:
  00129	48 8b 84 24 50
	01 00 00	 mov	 rax, QWORD PTR _Match_try$6[rsp]
  00131	48 83 c0 02	 add	 rax, 2
  00135	48 89 84 24 50
	01 00 00	 mov	 QWORD PTR _Match_try$6[rsp], rax
$LN4@Traits_fin:
  0013d	48 8b 84 24 48
	01 00 00	 mov	 rax, QWORD PTR _End$5[rsp]
  00145	48 39 84 24 50
	01 00 00	 cmp	 QWORD PTR _Match_try$6[rsp], rax
  0014d	73 3a		 jae	 SHORT $LN5@Traits_fin

; 805  :             if (!_Matches._Match(*_Match_try)) {

  0014f	48 8b 84 24 50
	01 00 00	 mov	 rax, QWORD PTR _Match_try$6[rsp]
  00157	0f b7 10	 movzx	 edx, WORD PTR [rax]
  0015a	48 8d 4c 24 40	 lea	 rcx, QWORD PTR _Matches$4[rsp]
  0015f	e8 00 00 00 00	 call	 ?_Match@?$_String_bitmap@_W$0A@@std@@QEBA_N_W@Z ; std::_String_bitmap<wchar_t,0>::_Match
  00164	90		 npad	 1
  00165	0f b6 c0	 movzx	 eax, al
  00168	85 c0		 test	 eax, eax
  0016a	75 1b		 jne	 SHORT $LN7@Traits_fin

; 806  :                 return static_cast<size_t>(_Match_try - _Haystack); // found a match

  0016c	48 8b 84 24 80
	01 00 00	 mov	 rax, QWORD PTR _Haystack$[rsp]
  00174	48 8b 8c 24 50
	01 00 00	 mov	 rcx, QWORD PTR _Match_try$6[rsp]
  0017c	48 2b c8	 sub	 rcx, rax
  0017f	48 8b c1	 mov	 rax, rcx
  00182	48 d1 f8	 sar	 rax, 1
  00185	eb 09		 jmp	 SHORT $LN1@Traits_fin
$LN7@Traits_fin:

; 807  :             }
; 808  :         }

  00187	eb a0		 jmp	 SHORT $LN2@Traits_fin
$LN5@Traits_fin:

; 809  :     }
; 810  : 
; 811  :     return static_cast<size_t>(-1); // no match

  00189	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
$LN1@Traits_fin:

; 812  : }

  00190	48 8b f8	 mov	 rdi, rax
  00193	48 8b cc	 mov	 rcx, rsp
  00196	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Traits_find_first_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z$rtcFrameData
  0019d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001a2	90		 npad	 1
  001a3	48 8b c7	 mov	 rax, rdi
  001a6	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001ae	48 33 cc	 xor	 rcx, rsp
  001b1	e8 00 00 00 00	 call	 __security_check_cookie
  001b6	90		 npad	 1
  001b7	48 81 c4 70 01
	00 00		 add	 rsp, 368		; 00000170H
  001be	5f		 pop	 rdi
  001bf	c3		 ret	 0
??$_Traits_find_first_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z ENDP ; std::_Traits_find_first_not_of<std::char_traits<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Traits_find_last_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
_Match_try$1 = 32
$T2 = 40
_Haystack$ = 64
_Hay_size$ = 72
_Start_at$ = 80
_Needle$ = 88
_Needle_size$ = 96
__formal$ = 104
??$_Traits_find_last_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Traits_find_last_not_of<std::char_traits<wchar_t> >, COMDAT

; 833  :     const size_t _Needle_size, false_type) noexcept {

$LN9:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 834  :     // in [_Haystack, _Haystack + _Hay_size), look for none of [_Needle, _Needle + _Needle_size), before _Start_at
; 835  :     // general algorithm
; 836  :     if (_Hay_size != 0) { // worth searching, do it

  0002d	48 83 7c 24 48
	00		 cmp	 QWORD PTR _Hay_size$[rsp], 0
  00033	74 7b		 je	 SHORT $LN5@Traits_fin

; 837  :         for (auto _Match_try = _Haystack + _Min_value(_Start_at, _Hay_size - 1);; --_Match_try) {

  00035	48 8b 44 24 48	 mov	 rax, QWORD PTR _Hay_size$[rsp]
  0003a	48 ff c8	 dec	 rax
  0003d	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  00042	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T2[rsp]
  00047	48 8d 4c 24 50	 lea	 rcx, QWORD PTR _Start_at$[rsp]
  0004c	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  00051	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00054	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Haystack$[rsp]
  00059	48 8d 04 41	 lea	 rax, QWORD PTR [rcx+rax*2]
  0005d	48 89 44 24 20	 mov	 QWORD PTR _Match_try$1[rsp], rax
  00062	eb 0e		 jmp	 SHORT $LN4@Traits_fin
$LN2@Traits_fin:
  00064	48 8b 44 24 20	 mov	 rax, QWORD PTR _Match_try$1[rsp]
  00069	48 83 e8 02	 sub	 rax, 2
  0006d	48 89 44 24 20	 mov	 QWORD PTR _Match_try$1[rsp], rax
$LN4@Traits_fin:

; 838  :             if (!_Traits::find(_Needle, _Needle_size, *_Match_try)) {

  00072	4c 8b 44 24 20	 mov	 r8, QWORD PTR _Match_try$1[rsp]
  00077	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Needle_size$[rsp]
  0007c	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Needle$[rsp]
  00081	e8 00 00 00 00	 call	 ?find@?$_WChar_traits@_W@std@@SAPEB_WPEB_W_KAEB_W@Z ; std::_WChar_traits<wchar_t>::find
  00086	48 85 c0	 test	 rax, rax
  00089	75 15		 jne	 SHORT $LN6@Traits_fin

; 839  :                 return static_cast<size_t>(_Match_try - _Haystack); // found a match

  0008b	48 8b 44 24 40	 mov	 rax, QWORD PTR _Haystack$[rsp]
  00090	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Match_try$1[rsp]
  00095	48 2b c8	 sub	 rcx, rax
  00098	48 8b c1	 mov	 rax, rcx
  0009b	48 d1 f8	 sar	 rax, 1
  0009e	eb 17		 jmp	 SHORT $LN1@Traits_fin
$LN6@Traits_fin:

; 840  :             }
; 841  : 
; 842  :             if (_Match_try == _Haystack) {

  000a0	48 8b 44 24 40	 mov	 rax, QWORD PTR _Haystack$[rsp]
  000a5	48 39 44 24 20	 cmp	 QWORD PTR _Match_try$1[rsp], rax
  000aa	75 02		 jne	 SHORT $LN7@Traits_fin

; 843  :                 break; // at beginning, no more chance for match

  000ac	eb 02		 jmp	 SHORT $LN3@Traits_fin
$LN7@Traits_fin:

; 844  :             }
; 845  :         }

  000ae	eb b4		 jmp	 SHORT $LN2@Traits_fin
$LN3@Traits_fin:
$LN5@Traits_fin:

; 846  :     }
; 847  : 
; 848  :     return static_cast<size_t>(-1); // no match

  000b0	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
$LN1@Traits_fin:

; 849  : }

  000b7	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000bb	5f		 pop	 rdi
  000bc	c3		 ret	 0
??$_Traits_find_last_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Traits_find_last_not_of<std::char_traits<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Traits_find_last_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
_Matches$4 = 64
_Match_try$5 = 328
$T6 = 344
$T7 = 352
__$ArrayPad$ = 360
_Haystack$ = 384
_Hay_size$ = 392
_Start_at$ = 400
_Needle$ = 408
_Needle_size$ = 416
__formal$ = 424
??$_Traits_find_last_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z PROC ; std::_Traits_find_last_not_of<std::char_traits<wchar_t> >, COMDAT

; 854  :     const size_t _Needle_size, true_type) noexcept {

$LN10:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 70 01
	00 00		 sub	 rsp, 368		; 00000170H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 5c 00 00 00	 mov	 ecx, 92			; 0000005cH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 80
	01 00 00	 mov	 rcx, QWORD PTR [rsp+384]
  00033	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003a	48 33 c4	 xor	 rax, rsp
  0003d	48 89 84 24 68
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 855  :     // in [_Haystack, _Haystack + _Hay_size), look for none of [_Needle, _Needle + _Needle_size), before _Start_at
; 856  :     // special case for std::char_traits
; 857  :     if (_Hay_size != 0) { // worth searching, do it

  00045	48 83 bc 24 88
	01 00 00 00	 cmp	 QWORD PTR _Hay_size$[rsp], 0
  0004e	0f 84 38 01 00
	00		 je	 $LN5@Traits_fin

; 858  :         _String_bitmap<typename _Traits::char_type> _Matches;

  00054	48 8d 4c 24 40	 lea	 rcx, QWORD PTR _Matches$4[rsp]
  00059	e8 00 00 00 00	 call	 ??0?$_String_bitmap@_W$0A@@std@@QEAA@XZ
  0005e	90		 npad	 1

; 859  :         if (!_Matches._Mark(_Needle, _Needle + _Needle_size)) { // couldn't put one of the characters into the bitmap,

  0005f	48 8b 84 24 98
	01 00 00	 mov	 rax, QWORD PTR _Needle$[rsp]
  00067	48 8b 8c 24 a0
	01 00 00	 mov	 rcx, QWORD PTR _Needle_size$[rsp]
  0006f	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  00073	4c 8b c0	 mov	 r8, rax
  00076	48 8b 94 24 98
	01 00 00	 mov	 rdx, QWORD PTR _Needle$[rsp]
  0007e	48 8d 4c 24 40	 lea	 rcx, QWORD PTR _Matches$4[rsp]
  00083	e8 00 00 00 00	 call	 ?_Mark@?$_String_bitmap@_W$0A@@std@@QEAA_NPEB_WQEB_W@Z ; std::_String_bitmap<wchar_t,0>::_Mark
  00088	90		 npad	 1
  00089	0f b6 c0	 movzx	 eax, al
  0008c	85 c0		 test	 eax, eax
  0008e	75 58		 jne	 SHORT $LN6@Traits_fin

; 860  :                                                                 // fall back to the serial algorithm
; 861  :             return _Traits_find_last_not_of<_Traits>(

  00090	48 8d 84 24 58
	01 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  00098	48 8b f8	 mov	 rdi, rax
  0009b	33 c0		 xor	 eax, eax
  0009d	b9 01 00 00 00	 mov	 ecx, 1
  000a2	f3 aa		 rep stosb
  000a4	0f b6 84 24 58
	01 00 00	 movzx	 eax, BYTE PTR $T6[rsp]
  000ac	88 44 24 28	 mov	 BYTE PTR [rsp+40], al
  000b0	48 8b 84 24 a0
	01 00 00	 mov	 rax, QWORD PTR _Needle_size$[rsp]
  000b8	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000bd	4c 8b 8c 24 98
	01 00 00	 mov	 r9, QWORD PTR _Needle$[rsp]
  000c5	4c 8b 84 24 90
	01 00 00	 mov	 r8, QWORD PTR _Start_at$[rsp]
  000cd	48 8b 94 24 88
	01 00 00	 mov	 rdx, QWORD PTR _Hay_size$[rsp]
  000d5	48 8b 8c 24 80
	01 00 00	 mov	 rcx, QWORD PTR _Haystack$[rsp]
  000dd	e8 00 00 00 00	 call	 ??$_Traits_find_last_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$0A@@0@@Z ; std::_Traits_find_last_not_of<std::char_traits<wchar_t> >
  000e2	90		 npad	 1
  000e3	e9 ab 00 00 00	 jmp	 $LN1@Traits_fin
$LN6@Traits_fin:

; 862  :                 _Haystack, _Hay_size, _Start_at, _Needle, _Needle_size, false_type{});
; 863  :         }
; 864  : 
; 865  :         for (auto _Match_try = _Haystack + _Min_value(_Start_at, _Hay_size - 1);; --_Match_try) {

  000e8	48 8b 84 24 88
	01 00 00	 mov	 rax, QWORD PTR _Hay_size$[rsp]
  000f0	48 ff c8	 dec	 rax
  000f3	48 89 84 24 60
	01 00 00	 mov	 QWORD PTR $T7[rsp], rax
  000fb	48 8d 94 24 60
	01 00 00	 lea	 rdx, QWORD PTR $T7[rsp]
  00103	48 8d 8c 24 90
	01 00 00	 lea	 rcx, QWORD PTR _Start_at$[rsp]
  0010b	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  00110	90		 npad	 1
  00111	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00114	48 8b 8c 24 80
	01 00 00	 mov	 rcx, QWORD PTR _Haystack$[rsp]
  0011c	48 8d 04 41	 lea	 rax, QWORD PTR [rcx+rax*2]
  00120	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR _Match_try$5[rsp], rax
  00128	eb 14		 jmp	 SHORT $LN4@Traits_fin
$LN2@Traits_fin:
  0012a	48 8b 84 24 48
	01 00 00	 mov	 rax, QWORD PTR _Match_try$5[rsp]
  00132	48 83 e8 02	 sub	 rax, 2
  00136	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR _Match_try$5[rsp], rax
$LN4@Traits_fin:

; 866  :             if (!_Matches._Match(*_Match_try)) {

  0013e	48 8b 84 24 48
	01 00 00	 mov	 rax, QWORD PTR _Match_try$5[rsp]
  00146	0f b7 10	 movzx	 edx, WORD PTR [rax]
  00149	48 8d 4c 24 40	 lea	 rcx, QWORD PTR _Matches$4[rsp]
  0014e	e8 00 00 00 00	 call	 ?_Match@?$_String_bitmap@_W$0A@@std@@QEBA_N_W@Z ; std::_String_bitmap<wchar_t,0>::_Match
  00153	90		 npad	 1
  00154	0f b6 c0	 movzx	 eax, al
  00157	85 c0		 test	 eax, eax
  00159	75 1b		 jne	 SHORT $LN7@Traits_fin

; 867  :                 return static_cast<size_t>(_Match_try - _Haystack); // found a match

  0015b	48 8b 84 24 80
	01 00 00	 mov	 rax, QWORD PTR _Haystack$[rsp]
  00163	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR _Match_try$5[rsp]
  0016b	48 2b c8	 sub	 rcx, rax
  0016e	48 8b c1	 mov	 rax, rcx
  00171	48 d1 f8	 sar	 rax, 1
  00174	eb 1d		 jmp	 SHORT $LN1@Traits_fin
$LN7@Traits_fin:

; 868  :             }
; 869  : 
; 870  :             if (_Match_try == _Haystack) {

  00176	48 8b 84 24 80
	01 00 00	 mov	 rax, QWORD PTR _Haystack$[rsp]
  0017e	48 39 84 24 48
	01 00 00	 cmp	 QWORD PTR _Match_try$5[rsp], rax
  00186	75 02		 jne	 SHORT $LN8@Traits_fin

; 871  :                 break; // at beginning, no more chance for match

  00188	eb 02		 jmp	 SHORT $LN5@Traits_fin
$LN8@Traits_fin:

; 872  :             }
; 873  :         }

  0018a	eb 9e		 jmp	 SHORT $LN2@Traits_fin
$LN5@Traits_fin:

; 874  :     }
; 875  : 
; 876  :     return static_cast<size_t>(-1); // no match

  0018c	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
$LN1@Traits_fin:

; 877  : }

  00193	48 8b f8	 mov	 rdi, rax
  00196	48 8b cc	 mov	 rcx, rsp
  00199	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Traits_find_last_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z$rtcFrameData
  001a0	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001a5	90		 npad	 1
  001a6	48 8b c7	 mov	 rax, rdi
  001a9	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001b1	48 33 cc	 xor	 rcx, rsp
  001b4	e8 00 00 00 00	 call	 __security_check_cookie
  001b9	90		 npad	 1
  001ba	48 81 c4 70 01
	00 00		 add	 rsp, 368		; 00000170H
  001c1	5f		 pop	 rdi
  001c2	c3		 ret	 0
??$_Traits_find_last_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z ENDP ; std::_Traits_find_last_not_of<std::char_traits<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1382 :     ~_Container_proxy_ptr12() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1383 :         if (_Ptr) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 16		 je	 SHORT $LN2@Container_

; 1384 :             _Delete_plain_internal(_Al, _Ptr);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0003a	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
$LN2@Container_:

; 1385 :         }
; 1386 :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Al_$ = 72
_Mycont$ = 80
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1368 :     _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1369 :         : _Al(_Al_) { // create a new _Container_proxy pointing at _Mycont

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00032	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1370 :         _Ptr = _Unfancy(_Al_.allocate(1));

  00036	ba 01 00 00 00	 mov	 edx, 1
  0003b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00040	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00045	48 8b c8	 mov	 rcx, rax
  00048	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0004d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00052	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1371 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

  00055	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Mycont$[rsp]
  0005a	e8 00 00 00 00	 call	 ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
  0005f	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00064	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00069	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0006e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00071	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1372 :         _Mycont._Myproxy = _Ptr;

  00076	48 8b 44 24 50	 mov	 rax, QWORD PTR _Mycont$[rsp]
  0007b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00080	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00083	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1373 :     }

  00086	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0008b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Min_value<unsigned __int64>, COMDAT

; 25   :     _NOEXCEPT_COND(noexcept(_Right < _Left)) { // return smaller of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 26   :     return _Right < _Left ? _Right : _Left;

  00023	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Left$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	73 0c		 jae	 SHORT $LN3@Min_value
  00035	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
  0003f	eb 0a		 jmp	 SHORT $LN4@Min_value
$LN3@Min_value:
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00046	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
$LN4@Min_value:
  0004b	48 8b 44 24 08	 mov	 rax, QWORD PTR tv65[rsp]
  00050	48 89 04 24	 mov	 QWORD PTR $T1[rsp], rax
  00054	48 8b 04 24	 mov	 rax, QWORD PTR $T1[rsp]

; 27   : }

  00058	48 83 c4 10	 add	 rsp, 16
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Min_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S23$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
_Val$ = 192
??$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z PROC ; std::vector<char,std::allocator<char> >::_Construct_n_copies_of_ty<char>, COMDAT

; 397  :     void _Construct_n_copies_of_ty(_CRT_GUARDOVERFLOW const size_type _Count, const _Ty2& _Val) {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+176]

; 398  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  0002e	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::vector<char,std::allocator<char> >::_Getal
  0003b	48 8b d0	 mov	 rdx, rax
  0003e	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S23$[rsp]
  00043	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00048	48 8d 44 24 34	 lea	 rax, QWORD PTR $S23$[rsp]
  0004d	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 399  :         auto& _My_data  = _Mypair._Myval2;

  00052	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 89 44 24 48	 mov	 QWORD PTR _My_data$[rsp], rax

; 400  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);

  0005f	4c 8b 44 24 48	 mov	 r8, QWORD PTR _My_data$[rsp]
  00064	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  00069	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  0006e	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00073	90		 npad	 1

; 401  :         if (_Count != 0) {

  00074	48 83 bc 24 b8
	00 00 00 00	 cmp	 QWORD PTR _Count$[rsp], 0
  0007d	74 6d		 je	 SHORT $LN2@Construct_

; 402  :             _Buy_nonzero(_Count);

  0007f	48 8b 94 24 b8
	00 00 00	 mov	 rdx, QWORD PTR _Count$[rsp]
  00087	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0008f	e8 00 00 00 00	 call	 ?_Buy_nonzero@?$vector@DV?$allocator@D@std@@@std@@AEAAX_K@Z ; std::vector<char,std::allocator<char> >::_Buy_nonzero

; 403  :             _Tidy_guard<vector> _Guard{this};

  00094	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0009c	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR _Guard$6[rsp], rax

; 404  :             _My_data._Mylast = _Ufill(_My_data._Myfirst, _Count, _Val);

  000a4	4c 8b 8c 24 c0
	00 00 00	 mov	 r9, QWORD PTR _Val$[rsp]
  000ac	4c 8b 84 24 b8
	00 00 00	 mov	 r8, QWORD PTR _Count$[rsp]
  000b4	48 8b 44 24 48	 mov	 rax, QWORD PTR _My_data$[rsp]
  000b9	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  000bd	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000c5	e8 00 00 00 00	 call	 ?_Ufill@?$vector@DV?$allocator@D@std@@@std@@AEAAPEADPEAD_KAEBD@Z ; std::vector<char,std::allocator<char> >::_Ufill
  000ca	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000cf	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 405  :             _Guard._Target   = nullptr;

  000d3	48 c7 84 24 88
	00 00 00 00 00
	00 00		 mov	 QWORD PTR _Guard$6[rsp], 0

; 406  :         }

  000df	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR _Guard$6[rsp]
  000e7	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<char,std::allocator<char> > >::~_Tidy_guard<std::vector<char,std::allocator<char> > >
$LN2@Construct_:

; 407  : 
; 408  :         _Proxy._Release();

  000ec	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000f1	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000f6	90		 npad	 1

; 409  :     }

  000f7	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000fc	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00101	48 8b cc	 mov	 rcx, rsp
  00104	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z$rtcFrameData
  0010b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00110	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  00117	5f		 pop	 rdi
  00118	c3		 ret	 0
??$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z ENDP ; std::vector<char,std::allocator<char> >::_Construct_n_copies_of_ty<char>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S23$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
_Val$ = 192
?dtor$0@?0???$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z@4HA PROC ; `std::vector<char,std::allocator<char> >::_Construct_n_copies_of_ty<char>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z@4HA ENDP ; `std::vector<char,std::allocator<char> >::_Construct_n_copies_of_ty<char>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S23$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
_Val$ = 192
?dtor$1@?0???$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z@4HA PROC ; `std::vector<char,std::allocator<char> >::_Construct_n_copies_of_ty<char>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR _Guard$6[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<char,std::allocator<char> > >::~_Tidy_guard<std::vector<char,std::allocator<char> > >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z@4HA ENDP ; `std::vector<char,std::allocator<char> >::_Construct_n_copies_of_ty<char>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S23$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
_Val$ = 192
?dtor$0@?0???$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z@4HA PROC ; `std::vector<char,std::allocator<char> >::_Construct_n_copies_of_ty<char>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z@4HA ENDP ; `std::vector<char,std::allocator<char> >::_Construct_n_copies_of_ty<char>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S23$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
_Val$ = 192
?dtor$1@?0???$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z@4HA PROC ; `std::vector<char,std::allocator<char> >::_Construct_n_copies_of_ty<char>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR _Guard$6[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<char,std::allocator<char> > >::~_Tidy_guard<std::vector<char,std::allocator<char> > >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z@4HA ENDP ; `std::vector<char,std::allocator<char> >::_Construct_n_copies_of_ty<char>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1><std::allocator<char> const &>, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z ; std::forward<std::allocator<char> const &>
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<char> >::_Vector_val<std::_Simple_types<char> >
  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Unfancy_maybe_null@D@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy_maybe_null@D@std@@YAPEADPEAD@Z PROC		; std::_Unfancy_maybe_null<char>, COMDAT

; 347  : _Ty* _Unfancy_maybe_null(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 348  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 349  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy_maybe_null@D@std@@YAPEADPEAD@Z ENDP		; std::_Unfancy_maybe_null<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S22$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
_Val$ = 192
??$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z PROC ; std::vector<wchar_t,std::allocator<wchar_t> >::_Construct_n_copies_of_ty<wchar_t>, COMDAT

; 397  :     void _Construct_n_copies_of_ty(_CRT_GUARDOVERFLOW const size_type _Count, const _Ty2& _Val) {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+176]

; 398  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  0002e	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@_WV?$allocator@_W@std@@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::vector<wchar_t,std::allocator<wchar_t> >::_Getal
  0003b	48 8b d0	 mov	 rdx, rax
  0003e	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S22$[rsp]
  00043	e8 00 00 00 00	 call	 ??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
  00048	48 8d 44 24 34	 lea	 rax, QWORD PTR $S22$[rsp]
  0004d	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 399  :         auto& _My_data  = _Mypair._Myval2;

  00052	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 89 44 24 48	 mov	 QWORD PTR _My_data$[rsp], rax

; 400  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);

  0005f	4c 8b 44 24 48	 mov	 r8, QWORD PTR _My_data$[rsp]
  00064	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  00069	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  0006e	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00073	90		 npad	 1

; 401  :         if (_Count != 0) {

  00074	48 83 bc 24 b8
	00 00 00 00	 cmp	 QWORD PTR _Count$[rsp], 0
  0007d	74 6d		 je	 SHORT $LN2@Construct_

; 402  :             _Buy_nonzero(_Count);

  0007f	48 8b 94 24 b8
	00 00 00	 mov	 rdx, QWORD PTR _Count$[rsp]
  00087	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0008f	e8 00 00 00 00	 call	 ?_Buy_nonzero@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_K@Z ; std::vector<wchar_t,std::allocator<wchar_t> >::_Buy_nonzero

; 403  :             _Tidy_guard<vector> _Guard{this};

  00094	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0009c	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR _Guard$6[rsp], rax

; 404  :             _My_data._Mylast = _Ufill(_My_data._Myfirst, _Count, _Val);

  000a4	4c 8b 8c 24 c0
	00 00 00	 mov	 r9, QWORD PTR _Val$[rsp]
  000ac	4c 8b 84 24 b8
	00 00 00	 mov	 r8, QWORD PTR _Count$[rsp]
  000b4	48 8b 44 24 48	 mov	 rax, QWORD PTR _My_data$[rsp]
  000b9	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  000bd	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000c5	e8 00 00 00 00	 call	 ?_Ufill@?$vector@_WV?$allocator@_W@std@@@std@@AEAAPEA_WPEA_W_KAEB_W@Z ; std::vector<wchar_t,std::allocator<wchar_t> >::_Ufill
  000ca	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000cf	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 405  :             _Guard._Target   = nullptr;

  000d3	48 c7 84 24 88
	00 00 00 00 00
	00 00		 mov	 QWORD PTR _Guard$6[rsp], 0

; 406  :         }

  000df	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR _Guard$6[rsp]
  000e7	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<wchar_t,std::allocator<wchar_t> > >::~_Tidy_guard<std::vector<wchar_t,std::allocator<wchar_t> > >
$LN2@Construct_:

; 407  : 
; 408  :         _Proxy._Release();

  000ec	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000f1	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000f6	90		 npad	 1

; 409  :     }

  000f7	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000fc	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00101	48 8b cc	 mov	 rcx, rsp
  00104	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z$rtcFrameData
  0010b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00110	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  00117	5f		 pop	 rdi
  00118	c3		 ret	 0
??$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z ENDP ; std::vector<wchar_t,std::allocator<wchar_t> >::_Construct_n_copies_of_ty<wchar_t>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S22$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
_Val$ = 192
?dtor$0@?0???$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z@4HA PROC ; `std::vector<wchar_t,std::allocator<wchar_t> >::_Construct_n_copies_of_ty<wchar_t>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z@4HA ENDP ; `std::vector<wchar_t,std::allocator<wchar_t> >::_Construct_n_copies_of_ty<wchar_t>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S22$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
_Val$ = 192
?dtor$1@?0???$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z@4HA PROC ; `std::vector<wchar_t,std::allocator<wchar_t> >::_Construct_n_copies_of_ty<wchar_t>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR _Guard$6[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<wchar_t,std::allocator<wchar_t> > >::~_Tidy_guard<std::vector<wchar_t,std::allocator<wchar_t> > >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z@4HA ENDP ; `std::vector<wchar_t,std::allocator<wchar_t> >::_Construct_n_copies_of_ty<wchar_t>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S22$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
_Val$ = 192
?dtor$0@?0???$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z@4HA PROC ; `std::vector<wchar_t,std::allocator<wchar_t> >::_Construct_n_copies_of_ty<wchar_t>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z@4HA ENDP ; `std::vector<wchar_t,std::allocator<wchar_t> >::_Construct_n_copies_of_ty<wchar_t>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S22$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
_Val$ = 192
?dtor$1@?0???$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z@4HA PROC ; `std::vector<wchar_t,std::allocator<wchar_t> >::_Construct_n_copies_of_ty<wchar_t>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR _Guard$6[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<wchar_t,std::allocator<wchar_t> > >::~_Tidy_guard<std::vector<wchar_t,std::allocator<wchar_t> > >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z@4HA ENDP ; `std::vector<wchar_t,std::allocator<wchar_t> >::_Construct_n_copies_of_ty<wchar_t>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_Vector_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_Vector_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_Vector_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_Vector_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEBV?$allocator@_W@std@@@std@@YAAEBV?$allocator@_W@0@AEBV10@@Z ; std::forward<std::allocator<wchar_t> const &>
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<wchar_t> >::_Vector_val<std::_Simple_types<wchar_t> >
  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_Vector_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_Vector_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_Vector_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Unfancy_maybe_null@_W@std@@YAPEA_WPEA_W@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy_maybe_null@_W@std@@YAPEA_WPEA_W@Z PROC	; std::_Unfancy_maybe_null<wchar_t>, COMDAT

; 347  : _Ty* _Unfancy_maybe_null(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 348  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 349  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy_maybe_null@_W@std@@YAPEA_WPEA_W@Z ENDP	; std::_Unfancy_maybe_null<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Compressed_pair<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Compressed_pair<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Compressed_pair<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1><std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AEAV10@@Z ; std::forward<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$?0V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Compressed_pair<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1><std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AEAV10@@Z PROC ; std::move<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AEAV10@@Z ENDP ; std::move<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
??$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_reallocate<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>, COMDAT

; 676  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 677  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 678  :         _Alty& _Al        = _Getal();

  0002e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Getal
  0003b	48 89 44 24 20	 mov	 QWORD PTR _Al$[rsp], rax

; 679  :         auto& _My_data    = _Mypair._Myval2;

  00040	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 89 44 24 28	 mov	 QWORD PTR _My_data$[rsp], rax

; 680  :         pointer& _Myfirst = _My_data._Myfirst;

  0004d	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00052	48 83 c0 08	 add	 rax, 8
  00056	48 89 44 24 30	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 681  :         pointer& _Mylast  = _My_data._Mylast;

  0005b	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00060	48 83 c0 10	 add	 rax, 16
  00064	48 89 44 24 38	 mov	 QWORD PTR _Mylast$[rsp], rax

; 682  : 
; 683  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 684  : 
; 685  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00069	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Whereptr$[rsp]
  00079	48 2b c8	 sub	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx
  0007f	48 99		 cdq
  00081	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00086	48 f7 f9	 idiv	 rcx
  00089	48 89 44 24 40	 mov	 QWORD PTR _Whereoff$[rsp], rax

; 686  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  0008e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00093	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00098	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0009b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0009e	48 2b c1	 sub	 rax, rcx
  000a1	48 99		 cdq
  000a3	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  000a8	48 f7 f9	 idiv	 rcx
  000ab	48 89 44 24 48	 mov	 QWORD PTR _Oldsize$[rsp], rax

; 687  : 
; 688  :         if (_Oldsize == max_size()) {

  000b0	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000b8	e8 00 00 00 00	 call	 ?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size
  000bd	48 39 44 24 48	 cmp	 QWORD PTR _Oldsize$[rsp], rax
  000c2	75 05		 jne	 SHORT $LN2@Emplace_re

; 689  :             _Xlength();

  000c4	e8 00 00 00 00	 call	 ?_Xlength@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Xlength
$LN2@Emplace_re:

; 690  :         }
; 691  : 
; 692  :         const size_type _Newsize     = _Oldsize + 1;

  000c9	48 8b 44 24 48	 mov	 rax, QWORD PTR _Oldsize$[rsp]
  000ce	48 ff c0	 inc	 rax
  000d1	48 89 44 24 50	 mov	 QWORD PTR _Newsize$[rsp], rax

; 693  :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

  000d6	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  000db	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000e3	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBA_K_K@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Calculate_growth
  000e8	48 89 44 24 58	 mov	 QWORD PTR _Newcapacity$[rsp], rax

; 694  : 
; 695  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

  000ed	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  000f2	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  000f7	e8 00 00 00 00	 call	 ?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocate
  000fc	48 89 44 24 60	 mov	 QWORD PTR _Newvec$[rsp], rax

; 696  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  00101	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Whereoff$[rsp], 40 ; 00000028H
  00107	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0010c	48 8d 44 01 28	 lea	 rax, QWORD PTR [rcx+rax+40]
  00111	48 89 44 24 68	 mov	 QWORD PTR _Constructed_last$[rsp], rax

; 697  :         pointer _Constructed_first      = _Constructed_last;

  00116	48 8b 44 24 68	 mov	 rax, QWORD PTR _Constructed_last$[rsp]
  0011b	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 698  : 
; 699  :         _TRY_BEGIN
; 700  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00120	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00128	e8 00 00 00 00	 call	 ??$forward@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
  0012d	48 89 44 24 78	 mov	 QWORD PTR tv90[rsp], rax
  00132	48 6b 4c 24 40
	28		 imul	 rcx, QWORD PTR _Whereoff$[rsp], 40 ; 00000028H
  00138	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  0013d	48 03 d1	 add	 rdx, rcx
  00140	48 8b ca	 mov	 rcx, rdx
  00143	e8 00 00 00 00	 call	 ??$_Unfancy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  00148	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv90[rsp]
  0014d	4c 8b c1	 mov	 r8, rcx
  00150	48 8b d0	 mov	 rdx, rax
  00153	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  00158	e8 00 00 00 00	 call	 ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>

; 701  :         _Constructed_first = _Newvec + _Whereoff;

  0015d	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Whereoff$[rsp], 40 ; 00000028H
  00163	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  00168	48 03 c8	 add	 rcx, rax
  0016b	48 8b c1	 mov	 rax, rcx
  0016e	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 702  : 
; 703  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00173	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00178	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0017b	48 39 84 24 98
	00 00 00	 cmp	 QWORD PTR _Whereptr$[rsp], rax
  00183	75 24		 jne	 SHORT $LN4@Emplace_re

; 704  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  00185	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  0018a	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0018f	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00192	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00197	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0019a	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001a2	e8 00 00 00 00	 call	 ?_Umove_if_noexcept@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@00@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Umove_if_noexcept

; 705  :         } else { // provide basic guarantee

  001a7	eb 5d		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 706  :             _Umove(_Myfirst, _Whereptr, _Newvec);

  001a9	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  001ae	4c 8b 84 24 98
	00 00 00	 mov	 r8, QWORD PTR _Whereptr$[rsp]
  001b6	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  001bb	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001be	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001c6	e8 00 00 00 00	 call	 ?_Umove@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PEAV32@00@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Umove

; 707  :             _Constructed_first = _Newvec;

  001cb	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  001d0	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 708  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  001d5	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Whereoff$[rsp], 40 ; 00000028H
  001db	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  001e0	48 8d 44 01 28	 lea	 rax, QWORD PTR [rcx+rax+40]
  001e5	4c 8b c8	 mov	 r9, rax
  001e8	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  001ed	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  001f0	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Whereptr$[rsp]
  001f8	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00200	e8 00 00 00 00	 call	 ?_Umove@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PEAV32@00@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Umove
  00205	90		 npad	 1
$LN5@Emplace_re:
  00206	eb 00		 jmp	 SHORT $LN9@Emplace_re
$LN10@Emplace_re:
$LN9@Emplace_re:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END
; 715  : 
; 716  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  00208	4c 8b 4c 24 58	 mov	 r9, QWORD PTR _Newcapacity$[rsp]
  0020d	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Newsize$[rsp]
  00212	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  00217	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0021f	e8 00 00 00 00	 call	 ?_Change_array@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K1@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Change_array

; 717  :         return _Newvec + _Whereoff;

  00224	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Whereoff$[rsp], 40 ; 00000028H
  0022a	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0022f	48 03 c8	 add	 rcx, rax
  00232	48 8b c1	 mov	 rax, rcx

; 718  :     }

  00235	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0023c	5f		 pop	 rdi
  0023d	c3		 ret	 0
$LN11@Emplace_re:
??$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_reallocate<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z@4HA PROC ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_reallocate<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>'::`1'::catch$0

; 709  :         }
; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z$0:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Destroy

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::deallocate

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z@4HA ENDP ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_reallocate<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z@4HA PROC ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_reallocate<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>'::`1'::catch$0

; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z$0:

; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Destroy

; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::deallocate

; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z@4HA ENDP ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_reallocate<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00028	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00032	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00037	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00041	e8 00 00 00 00	 call	 ??$forward@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
  00046	48 8b d0	 mov	 rdx, rax
  00049	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004e	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >

; 759  :     }

  00053	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
tv67 = 56
tv70 = 64
this$ = 96
<_Val_0>$ = 104
??$_Emplace_back_with_unused_capacity@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_back_with_unused_capacity<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>, COMDAT

; 633  :     decltype(auto) _Emplace_back_with_unused_capacity(_Valty&&... _Val) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 634  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 635  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 636  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 637  :         _STL_INTERNAL_CHECK(_Mylast != _My_data._Myend); // check that we have unused capacity
; 638  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0003b	48 8b 4c 24 68	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
  00045	48 89 44 24 38	 mov	 QWORD PTR tv67[rsp], rax
  0004a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  0004f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00052	e8 00 00 00 00	 call	 ??$_Unfancy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  00057	48 89 44 24 40	 mov	 QWORD PTR tv70[rsp], rax
  0005c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00061	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Getal
  00066	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv67[rsp]
  0006b	4c 8b c1	 mov	 r8, rcx
  0006e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv70[rsp]
  00073	48 8b d1	 mov	 rdx, rcx
  00076	48 8b c8	 mov	 rcx, rax
  00079	e8 00 00 00 00	 call	 ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@AEBV31@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>

; 639  :         _Orphan_range(_Mylast, _Mylast);

  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00083	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00086	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0008e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00093	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range

; 640  :         _Ty& _Result = *_Mylast;

  00098	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax

; 641  :         ++_Mylast;

  000a5	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000aa	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ad	48 83 c0 28	 add	 rax, 40			; 00000028H
  000b1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000b6	48 89 01	 mov	 QWORD PTR [rcx], rax

; 642  : #if _HAS_CXX17
; 643  :         return _Result;
; 644  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 645  :         (void) _Result;
; 646  : #endif // _HAS_CXX17
; 647  :     }

  000b9	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000bd	5f		 pop	 rdi
  000be	c3		 ret	 0
??$_Emplace_back_with_unused_capacity@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_back_with_unused_capacity<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBV10@@Z PROC ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBV10@@Z ENDP ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$emplace_back@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
this$ = 80
<_Val_0>$ = 88
??$emplace_back@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::emplace_back<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>, COMDAT

; 651  :     decltype(auto) emplace_back(_Valty&&... _Val) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 652  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 653  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 654  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 655  :         if (_Mylast != _My_data._Myend) {

  0003b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00045	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00049	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0004c	74 19		 je	 SHORT $LN2@emplace_ba

; 656  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0004e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00053	e8 00 00 00 00	 call	 ??$forward@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00060	e8 00 00 00 00	 call	 ??$_Emplace_back_with_unused_capacity@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_back_with_unused_capacity<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
  00065	eb 24		 jmp	 SHORT $LN1@emplace_ba
$LN2@emplace_ba:

; 657  :         }
; 658  : 
; 659  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00067	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0006c	e8 00 00 00 00	 call	 ??$forward@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
  00071	4c 8b c0	 mov	 r8, rax
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@AEBV21@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_reallocate<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
  00086	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax
$LN1@emplace_ba:

; 660  : #if _HAS_CXX17
; 661  :         return _Result;
; 662  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 663  :         (void) _Result;
; 664  : #endif // _HAS_CXX17
; 665  :     }

  0008b	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??$emplace_back@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::emplace_back<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
??$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_reallocate<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 676  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 677  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 678  :         _Alty& _Al        = _Getal();

  0002e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Getal
  0003b	48 89 44 24 20	 mov	 QWORD PTR _Al$[rsp], rax

; 679  :         auto& _My_data    = _Mypair._Myval2;

  00040	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 89 44 24 28	 mov	 QWORD PTR _My_data$[rsp], rax

; 680  :         pointer& _Myfirst = _My_data._Myfirst;

  0004d	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00052	48 83 c0 08	 add	 rax, 8
  00056	48 89 44 24 30	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 681  :         pointer& _Mylast  = _My_data._Mylast;

  0005b	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00060	48 83 c0 10	 add	 rax, 16
  00064	48 89 44 24 38	 mov	 QWORD PTR _Mylast$[rsp], rax

; 682  : 
; 683  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 684  : 
; 685  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00069	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Whereptr$[rsp]
  00079	48 2b c8	 sub	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx
  0007f	48 99		 cdq
  00081	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00086	48 f7 f9	 idiv	 rcx
  00089	48 89 44 24 40	 mov	 QWORD PTR _Whereoff$[rsp], rax

; 686  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  0008e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00093	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00098	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0009b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0009e	48 2b c1	 sub	 rax, rcx
  000a1	48 99		 cdq
  000a3	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  000a8	48 f7 f9	 idiv	 rcx
  000ab	48 89 44 24 48	 mov	 QWORD PTR _Oldsize$[rsp], rax

; 687  : 
; 688  :         if (_Oldsize == max_size()) {

  000b0	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000b8	e8 00 00 00 00	 call	 ?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size
  000bd	48 39 44 24 48	 cmp	 QWORD PTR _Oldsize$[rsp], rax
  000c2	75 05		 jne	 SHORT $LN2@Emplace_re

; 689  :             _Xlength();

  000c4	e8 00 00 00 00	 call	 ?_Xlength@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Xlength
$LN2@Emplace_re:

; 690  :         }
; 691  : 
; 692  :         const size_type _Newsize     = _Oldsize + 1;

  000c9	48 8b 44 24 48	 mov	 rax, QWORD PTR _Oldsize$[rsp]
  000ce	48 ff c0	 inc	 rax
  000d1	48 89 44 24 50	 mov	 QWORD PTR _Newsize$[rsp], rax

; 693  :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

  000d6	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  000db	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000e3	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBA_K_K@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Calculate_growth
  000e8	48 89 44 24 58	 mov	 QWORD PTR _Newcapacity$[rsp], rax

; 694  : 
; 695  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

  000ed	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  000f2	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  000f7	e8 00 00 00 00	 call	 ?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocate
  000fc	48 89 44 24 60	 mov	 QWORD PTR _Newvec$[rsp], rax

; 696  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  00101	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Whereoff$[rsp], 40 ; 00000028H
  00107	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0010c	48 8d 44 01 28	 lea	 rax, QWORD PTR [rcx+rax+40]
  00111	48 89 44 24 68	 mov	 QWORD PTR _Constructed_last$[rsp], rax

; 697  :         pointer _Constructed_first      = _Constructed_last;

  00116	48 8b 44 24 68	 mov	 rax, QWORD PTR _Constructed_last$[rsp]
  0011b	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 698  : 
; 699  :         _TRY_BEGIN
; 700  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00120	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00128	e8 00 00 00 00	 call	 ??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  0012d	48 89 44 24 78	 mov	 QWORD PTR tv90[rsp], rax
  00132	48 6b 4c 24 40
	28		 imul	 rcx, QWORD PTR _Whereoff$[rsp], 40 ; 00000028H
  00138	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  0013d	48 03 d1	 add	 rdx, rcx
  00140	48 8b ca	 mov	 rcx, rdx
  00143	e8 00 00 00 00	 call	 ??$_Unfancy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  00148	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv90[rsp]
  0014d	4c 8b c1	 mov	 r8, rcx
  00150	48 8b d0	 mov	 rdx, rax
  00153	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  00158	e8 00 00 00 00	 call	 ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV31@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >

; 701  :         _Constructed_first = _Newvec + _Whereoff;

  0015d	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Whereoff$[rsp], 40 ; 00000028H
  00163	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  00168	48 03 c8	 add	 rcx, rax
  0016b	48 8b c1	 mov	 rax, rcx
  0016e	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 702  : 
; 703  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00173	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00178	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0017b	48 39 84 24 98
	00 00 00	 cmp	 QWORD PTR _Whereptr$[rsp], rax
  00183	75 24		 jne	 SHORT $LN4@Emplace_re

; 704  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  00185	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  0018a	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0018f	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00192	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00197	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0019a	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001a2	e8 00 00 00 00	 call	 ?_Umove_if_noexcept@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@00@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Umove_if_noexcept

; 705  :         } else { // provide basic guarantee

  001a7	eb 5d		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 706  :             _Umove(_Myfirst, _Whereptr, _Newvec);

  001a9	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  001ae	4c 8b 84 24 98
	00 00 00	 mov	 r8, QWORD PTR _Whereptr$[rsp]
  001b6	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  001bb	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001be	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001c6	e8 00 00 00 00	 call	 ?_Umove@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PEAV32@00@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Umove

; 707  :             _Constructed_first = _Newvec;

  001cb	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  001d0	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 708  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  001d5	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Whereoff$[rsp], 40 ; 00000028H
  001db	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  001e0	48 8d 44 01 28	 lea	 rax, QWORD PTR [rcx+rax+40]
  001e5	4c 8b c8	 mov	 r9, rax
  001e8	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  001ed	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  001f0	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Whereptr$[rsp]
  001f8	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00200	e8 00 00 00 00	 call	 ?_Umove@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PEAV32@00@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Umove
  00205	90		 npad	 1
$LN5@Emplace_re:
  00206	eb 00		 jmp	 SHORT $LN9@Emplace_re
$LN10@Emplace_re:
$LN9@Emplace_re:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END
; 715  : 
; 716  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  00208	4c 8b 4c 24 58	 mov	 r9, QWORD PTR _Newcapacity$[rsp]
  0020d	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Newsize$[rsp]
  00212	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  00217	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0021f	e8 00 00 00 00	 call	 ?_Change_array@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K1@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Change_array

; 717  :         return _Newvec + _Whereoff;

  00224	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Whereoff$[rsp], 40 ; 00000028H
  0022a	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0022f	48 03 c8	 add	 rcx, rax
  00232	48 8b c1	 mov	 rax, rcx

; 718  :     }

  00235	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0023c	5f		 pop	 rdi
  0023d	c3		 ret	 0
$LN11@Emplace_re:
??$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_reallocate<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z@4HA PROC ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_reallocate<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >'::`1'::catch$0

; 709  :         }
; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z$0:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Destroy

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::deallocate

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z@4HA ENDP ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_reallocate<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z@4HA PROC ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_reallocate<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >'::`1'::catch$0

; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z$0:

; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Destroy

; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::deallocate

; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z@4HA ENDP ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_reallocate<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV31@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV31@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00028	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00032	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00037	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00041	e8 00 00 00 00	 call	 ??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  00046	48 8b d0	 mov	 rdx, rax
  00049	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004e	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >

; 759  :     }

  00053	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV31@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z PROC ; std::_Unfancy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z ENDP ; std::_Unfancy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
tv67 = 56
tv70 = 64
this$ = 96
<_Val_0>$ = 104
??$_Emplace_back_with_unused_capacity@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_back_with_unused_capacity<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 633  :     decltype(auto) _Emplace_back_with_unused_capacity(_Valty&&... _Val) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 634  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 635  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 636  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 637  :         _STL_INTERNAL_CHECK(_Mylast != _My_data._Myend); // check that we have unused capacity
; 638  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0003b	48 8b 4c 24 68	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  00045	48 89 44 24 38	 mov	 QWORD PTR tv67[rsp], rax
  0004a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  0004f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00052	e8 00 00 00 00	 call	 ??$_Unfancy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  00057	48 89 44 24 40	 mov	 QWORD PTR tv70[rsp], rax
  0005c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00061	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Getal
  00066	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv67[rsp]
  0006b	4c 8b c1	 mov	 r8, rcx
  0006e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv70[rsp]
  00073	48 8b d1	 mov	 rdx, rcx
  00076	48 8b c8	 mov	 rcx, rax
  00079	e8 00 00 00 00	 call	 ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV31@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >

; 639  :         _Orphan_range(_Mylast, _Mylast);

  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00083	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00086	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0008e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00093	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range

; 640  :         _Ty& _Result = *_Mylast;

  00098	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax

; 641  :         ++_Mylast;

  000a5	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000aa	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ad	48 83 c0 28	 add	 rax, 40			; 00000028H
  000b1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000b6	48 89 01	 mov	 QWORD PTR [rcx], rax

; 642  : #if _HAS_CXX17
; 643  :         return _Result;
; 644  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 645  :         (void) _Result;
; 646  : #endif // _HAS_CXX17
; 647  :     }

  000b9	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000bd	5f		 pop	 rdi
  000be	c3		 ret	 0
??$_Emplace_back_with_unused_capacity@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_back_with_unused_capacity<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z PROC ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ENDP ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$emplace_back@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
this$ = 80
<_Val_0>$ = 88
??$emplace_back@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::emplace_back<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 651  :     decltype(auto) emplace_back(_Valty&&... _Val) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 652  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 653  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 654  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 655  :         if (_Mylast != _My_data._Myend) {

  0003b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00045	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00049	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0004c	74 19		 je	 SHORT $LN2@emplace_ba

; 656  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0004e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00053	e8 00 00 00 00	 call	 ??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00060	e8 00 00 00 00	 call	 ??$_Emplace_back_with_unused_capacity@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_back_with_unused_capacity<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  00065	eb 24		 jmp	 SHORT $LN1@emplace_ba
$LN2@emplace_ba:

; 657  :         }
; 658  : 
; 659  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00067	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0006c	e8 00 00 00 00	 call	 ??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  00071	4c 8b c0	 mov	 r8, rax
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@QEAV21@$$QEAV21@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Emplace_reallocate<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  00086	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax
$LN1@emplace_ba:

; 660  : #if _HAS_CXX17
; 661  :         return _Result;
; 662  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 663  :         (void) _Result;
; 664  : #endif // _HAS_CXX17
; 665  :     }

  0008b	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??$emplace_back@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::emplace_back<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
_New_proxy$ = 32
$T1 = 40
this$ = 64
_Al$ = 72
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT

; 1184 :     void _Alloc_proxy(_Alloc&& _Al) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1185 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

  00023	ba 01 00 00 00	 mov	 edx, 1
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al$[rsp]
  0002d	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0003a	48 89 44 24 20	 mov	 QWORD PTR _New_proxy$[rsp], rax

; 1186 :         _Construct_in_place(*_New_proxy, this);

  0003f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 89 44 24 28	 mov	 QWORD PTR $T1[rsp], rax
  00049	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T1[rsp]
  0004e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _New_proxy$[rsp]
  00053	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1187 :         _Myproxy            = _New_proxy;

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _New_proxy$[rsp]
  00062	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1188 :         _New_proxy->_Mycont = this;

  00065	48 8b 44 24 20	 mov	 rax, QWORD PTR _New_proxy$[rsp]
  0006a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1189 :     }

  00072	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1><std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z ; std::forward<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$?0V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1><std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z PROC ; std::move<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z ENDP ; std::move<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
??$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT

; 676  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 677  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 678  :         _Alty& _Al        = _Getal();

  0002e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  0003b	48 89 44 24 20	 mov	 QWORD PTR _Al$[rsp], rax

; 679  :         auto& _My_data    = _Mypair._Myval2;

  00040	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 89 44 24 28	 mov	 QWORD PTR _My_data$[rsp], rax

; 680  :         pointer& _Myfirst = _My_data._Myfirst;

  0004d	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00052	48 83 c0 08	 add	 rax, 8
  00056	48 89 44 24 30	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 681  :         pointer& _Mylast  = _My_data._Mylast;

  0005b	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00060	48 83 c0 10	 add	 rax, 16
  00064	48 89 44 24 38	 mov	 QWORD PTR _Mylast$[rsp], rax

; 682  : 
; 683  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 684  : 
; 685  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00069	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Whereptr$[rsp]
  00079	48 2b c8	 sub	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx
  0007f	48 99		 cdq
  00081	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00086	48 f7 f9	 idiv	 rcx
  00089	48 89 44 24 40	 mov	 QWORD PTR _Whereoff$[rsp], rax

; 686  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  0008e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00093	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00098	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0009b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0009e	48 2b c1	 sub	 rax, rcx
  000a1	48 99		 cdq
  000a3	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  000a8	48 f7 f9	 idiv	 rcx
  000ab	48 89 44 24 48	 mov	 QWORD PTR _Oldsize$[rsp], rax

; 687  : 
; 688  :         if (_Oldsize == max_size()) {

  000b0	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000b8	e8 00 00 00 00	 call	 ?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
  000bd	48 39 44 24 48	 cmp	 QWORD PTR _Oldsize$[rsp], rax
  000c2	75 05		 jne	 SHORT $LN2@Emplace_re

; 689  :             _Xlength();

  000c4	e8 00 00 00 00	 call	 ?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlength
$LN2@Emplace_re:

; 690  :         }
; 691  : 
; 692  :         const size_type _Newsize     = _Oldsize + 1;

  000c9	48 8b 44 24 48	 mov	 rax, QWORD PTR _Oldsize$[rsp]
  000ce	48 ff c0	 inc	 rax
  000d1	48 89 44 24 50	 mov	 QWORD PTR _Newsize$[rsp], rax

; 693  :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

  000d6	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  000db	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000e3	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBA_K_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Calculate_growth
  000e8	48 89 44 24 58	 mov	 QWORD PTR _Newcapacity$[rsp], rax

; 694  : 
; 695  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

  000ed	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  000f2	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  000f7	e8 00 00 00 00	 call	 ?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate
  000fc	48 89 44 24 60	 mov	 QWORD PTR _Newvec$[rsp], rax

; 696  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  00101	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Whereoff$[rsp], 40 ; 00000028H
  00107	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0010c	48 8d 44 01 28	 lea	 rax, QWORD PTR [rcx+rax+40]
  00111	48 89 44 24 68	 mov	 QWORD PTR _Constructed_last$[rsp], rax

; 697  :         pointer _Constructed_first      = _Constructed_last;

  00116	48 8b 44 24 68	 mov	 rax, QWORD PTR _Constructed_last$[rsp]
  0011b	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 698  : 
; 699  :         _TRY_BEGIN
; 700  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00120	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00128	e8 00 00 00 00	 call	 ??$forward@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
  0012d	48 89 44 24 78	 mov	 QWORD PTR tv90[rsp], rax
  00132	48 6b 4c 24 40
	28		 imul	 rcx, QWORD PTR _Whereoff$[rsp], 40 ; 00000028H
  00138	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  0013d	48 03 d1	 add	 rdx, rcx
  00140	48 8b ca	 mov	 rcx, rdx
  00143	e8 00 00 00 00	 call	 ??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00148	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv90[rsp]
  0014d	4c 8b c1	 mov	 r8, rcx
  00150	48 8b d0	 mov	 rdx, rax
  00153	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  00158	e8 00 00 00 00	 call	 ??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBV31@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>

; 701  :         _Constructed_first = _Newvec + _Whereoff;

  0015d	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Whereoff$[rsp], 40 ; 00000028H
  00163	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  00168	48 03 c8	 add	 rcx, rax
  0016b	48 8b c1	 mov	 rax, rcx
  0016e	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 702  : 
; 703  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00173	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00178	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0017b	48 39 84 24 98
	00 00 00	 cmp	 QWORD PTR _Whereptr$[rsp], rax
  00183	75 24		 jne	 SHORT $LN4@Emplace_re

; 704  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  00185	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  0018a	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0018f	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00192	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00197	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0019a	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001a2	e8 00 00 00 00	 call	 ?_Umove_if_noexcept@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove_if_noexcept

; 705  :         } else { // provide basic guarantee

  001a7	eb 5d		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 706  :             _Umove(_Myfirst, _Whereptr, _Newvec);

  001a9	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  001ae	4c 8b 84 24 98
	00 00 00	 mov	 r8, QWORD PTR _Whereptr$[rsp]
  001b6	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  001bb	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001be	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001c6	e8 00 00 00 00	 call	 ?_Umove@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEAV32@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove

; 707  :             _Constructed_first = _Newvec;

  001cb	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  001d0	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 708  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  001d5	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Whereoff$[rsp], 40 ; 00000028H
  001db	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  001e0	48 8d 44 01 28	 lea	 rax, QWORD PTR [rcx+rax+40]
  001e5	4c 8b c8	 mov	 r9, rax
  001e8	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  001ed	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  001f0	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Whereptr$[rsp]
  001f8	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00200	e8 00 00 00 00	 call	 ?_Umove@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEAV32@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove
  00205	90		 npad	 1
$LN5@Emplace_re:
  00206	eb 00		 jmp	 SHORT $LN9@Emplace_re
$LN10@Emplace_re:
$LN9@Emplace_re:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END
; 715  : 
; 716  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  00208	4c 8b 4c 24 58	 mov	 r9, QWORD PTR _Newcapacity$[rsp]
  0020d	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Newsize$[rsp]
  00212	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  00217	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0021f	e8 00 00 00 00	 call	 ?_Change_array@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K1@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Change_array

; 717  :         return _Newvec + _Whereoff;

  00224	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Whereoff$[rsp], 40 ; 00000028H
  0022a	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0022f	48 03 c8	 add	 rcx, rax
  00232	48 8b c1	 mov	 rax, rcx

; 718  :     }

  00235	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0023c	5f		 pop	 rdi
  0023d	c3		 ret	 0
$LN11@Emplace_re:
??$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::catch$0

; 709  :         }
; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z$0:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::catch$0

; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z$0:

; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy

; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate

; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBV31@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBV31@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00028	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00032	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00037	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00041	e8 00 00 00 00	 call	 ??$forward@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
  00046	48 8b d0	 mov	 rdx, rax
  00049	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 759  :     }

  00053	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBV31@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
tv67 = 56
tv70 = 64
this$ = 96
<_Val_0>$ = 104
??$_Emplace_back_with_unused_capacity@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_back_with_unused_capacity<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT

; 633  :     decltype(auto) _Emplace_back_with_unused_capacity(_Valty&&... _Val) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 634  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 635  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 636  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 637  :         _STL_INTERNAL_CHECK(_Mylast != _My_data._Myend); // check that we have unused capacity
; 638  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0003b	48 8b 4c 24 68	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
  00045	48 89 44 24 38	 mov	 QWORD PTR tv67[rsp], rax
  0004a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  0004f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00052	e8 00 00 00 00	 call	 ??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00057	48 89 44 24 40	 mov	 QWORD PTR tv70[rsp], rax
  0005c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00061	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  00066	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv67[rsp]
  0006b	4c 8b c1	 mov	 r8, rcx
  0006e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv70[rsp]
  00073	48 8b d1	 mov	 rdx, rcx
  00076	48 8b c8	 mov	 rcx, rax
  00079	e8 00 00 00 00	 call	 ??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBV31@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>

; 639  :         _Orphan_range(_Mylast, _Mylast);

  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00083	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00086	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0008e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00093	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range

; 640  :         _Ty& _Result = *_Mylast;

  00098	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax

; 641  :         ++_Mylast;

  000a5	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000aa	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ad	48 83 c0 28	 add	 rax, 40			; 00000028H
  000b1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000b6	48 89 01	 mov	 QWORD PTR [rcx], rax

; 642  : #if _HAS_CXX17
; 643  :         return _Result;
; 644  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 645  :         (void) _Result;
; 646  : #endif // _HAS_CXX17
; 647  :     }

  000b9	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000bd	5f		 pop	 rdi
  000be	c3		 ret	 0
??$_Emplace_back_with_unused_capacity@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_back_with_unused_capacity<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$emplace_back@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
this$ = 80
<_Val_0>$ = 88
??$emplace_back@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::emplace_back<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT

; 651  :     decltype(auto) emplace_back(_Valty&&... _Val) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 652  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 653  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 654  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 655  :         if (_Mylast != _My_data._Myend) {

  0003b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00045	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00049	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0004c	74 19		 je	 SHORT $LN2@emplace_ba

; 656  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0004e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00053	e8 00 00 00 00	 call	 ??$forward@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00060	e8 00 00 00 00	 call	 ??$_Emplace_back_with_unused_capacity@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_back_with_unused_capacity<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
  00065	eb 24		 jmp	 SHORT $LN1@emplace_ba
$LN2@emplace_ba:

; 657  :         }
; 658  : 
; 659  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00067	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0006c	e8 00 00 00 00	 call	 ??$forward@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
  00071	4c 8b c0	 mov	 r8, rax
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@AEBV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
  00086	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax
$LN1@emplace_ba:

; 660  : #if _HAS_CXX17
; 661  :         return _Result;
; 662  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 663  :         (void) _Result;
; 664  : #endif // _HAS_CXX17
; 665  :     }

  0008b	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??$emplace_back@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::emplace_back<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 676  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 677  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 678  :         _Alty& _Al        = _Getal();

  0002e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  0003b	48 89 44 24 20	 mov	 QWORD PTR _Al$[rsp], rax

; 679  :         auto& _My_data    = _Mypair._Myval2;

  00040	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 89 44 24 28	 mov	 QWORD PTR _My_data$[rsp], rax

; 680  :         pointer& _Myfirst = _My_data._Myfirst;

  0004d	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00052	48 83 c0 08	 add	 rax, 8
  00056	48 89 44 24 30	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 681  :         pointer& _Mylast  = _My_data._Mylast;

  0005b	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00060	48 83 c0 10	 add	 rax, 16
  00064	48 89 44 24 38	 mov	 QWORD PTR _Mylast$[rsp], rax

; 682  : 
; 683  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 684  : 
; 685  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00069	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Whereptr$[rsp]
  00079	48 2b c8	 sub	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx
  0007f	48 99		 cdq
  00081	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00086	48 f7 f9	 idiv	 rcx
  00089	48 89 44 24 40	 mov	 QWORD PTR _Whereoff$[rsp], rax

; 686  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  0008e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00093	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00098	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0009b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0009e	48 2b c1	 sub	 rax, rcx
  000a1	48 99		 cdq
  000a3	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  000a8	48 f7 f9	 idiv	 rcx
  000ab	48 89 44 24 48	 mov	 QWORD PTR _Oldsize$[rsp], rax

; 687  : 
; 688  :         if (_Oldsize == max_size()) {

  000b0	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000b8	e8 00 00 00 00	 call	 ?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
  000bd	48 39 44 24 48	 cmp	 QWORD PTR _Oldsize$[rsp], rax
  000c2	75 05		 jne	 SHORT $LN2@Emplace_re

; 689  :             _Xlength();

  000c4	e8 00 00 00 00	 call	 ?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlength
$LN2@Emplace_re:

; 690  :         }
; 691  : 
; 692  :         const size_type _Newsize     = _Oldsize + 1;

  000c9	48 8b 44 24 48	 mov	 rax, QWORD PTR _Oldsize$[rsp]
  000ce	48 ff c0	 inc	 rax
  000d1	48 89 44 24 50	 mov	 QWORD PTR _Newsize$[rsp], rax

; 693  :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

  000d6	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  000db	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000e3	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBA_K_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Calculate_growth
  000e8	48 89 44 24 58	 mov	 QWORD PTR _Newcapacity$[rsp], rax

; 694  : 
; 695  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

  000ed	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  000f2	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  000f7	e8 00 00 00 00	 call	 ?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate
  000fc	48 89 44 24 60	 mov	 QWORD PTR _Newvec$[rsp], rax

; 696  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  00101	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Whereoff$[rsp], 40 ; 00000028H
  00107	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0010c	48 8d 44 01 28	 lea	 rax, QWORD PTR [rcx+rax+40]
  00111	48 89 44 24 68	 mov	 QWORD PTR _Constructed_last$[rsp], rax

; 697  :         pointer _Constructed_first      = _Constructed_last;

  00116	48 8b 44 24 68	 mov	 rax, QWORD PTR _Constructed_last$[rsp]
  0011b	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 698  : 
; 699  :         _TRY_BEGIN
; 700  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00120	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00128	e8 00 00 00 00	 call	 ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0012d	48 89 44 24 78	 mov	 QWORD PTR tv90[rsp], rax
  00132	48 6b 4c 24 40
	28		 imul	 rcx, QWORD PTR _Whereoff$[rsp], 40 ; 00000028H
  00138	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  0013d	48 03 d1	 add	 rdx, rcx
  00140	48 8b ca	 mov	 rcx, rdx
  00143	e8 00 00 00 00	 call	 ??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00148	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv90[rsp]
  0014d	4c 8b c1	 mov	 r8, rcx
  00150	48 8b d0	 mov	 rdx, rax
  00153	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  00158	e8 00 00 00 00	 call	 ??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV31@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 701  :         _Constructed_first = _Newvec + _Whereoff;

  0015d	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Whereoff$[rsp], 40 ; 00000028H
  00163	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  00168	48 03 c8	 add	 rcx, rax
  0016b	48 8b c1	 mov	 rax, rcx
  0016e	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 702  : 
; 703  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00173	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00178	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0017b	48 39 84 24 98
	00 00 00	 cmp	 QWORD PTR _Whereptr$[rsp], rax
  00183	75 24		 jne	 SHORT $LN4@Emplace_re

; 704  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  00185	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  0018a	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0018f	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00192	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00197	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0019a	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001a2	e8 00 00 00 00	 call	 ?_Umove_if_noexcept@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove_if_noexcept

; 705  :         } else { // provide basic guarantee

  001a7	eb 5d		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 706  :             _Umove(_Myfirst, _Whereptr, _Newvec);

  001a9	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  001ae	4c 8b 84 24 98
	00 00 00	 mov	 r8, QWORD PTR _Whereptr$[rsp]
  001b6	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  001bb	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001be	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001c6	e8 00 00 00 00	 call	 ?_Umove@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEAV32@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove

; 707  :             _Constructed_first = _Newvec;

  001cb	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  001d0	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 708  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  001d5	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Whereoff$[rsp], 40 ; 00000028H
  001db	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  001e0	48 8d 44 01 28	 lea	 rax, QWORD PTR [rcx+rax+40]
  001e5	4c 8b c8	 mov	 r9, rax
  001e8	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  001ed	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  001f0	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Whereptr$[rsp]
  001f8	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00200	e8 00 00 00 00	 call	 ?_Umove@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEAV32@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove
  00205	90		 npad	 1
$LN5@Emplace_re:
  00206	eb 00		 jmp	 SHORT $LN9@Emplace_re
$LN10@Emplace_re:
$LN9@Emplace_re:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END
; 715  : 
; 716  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  00208	4c 8b 4c 24 58	 mov	 r9, QWORD PTR _Newcapacity$[rsp]
  0020d	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Newsize$[rsp]
  00212	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  00217	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0021f	e8 00 00 00 00	 call	 ?_Change_array@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K1@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Change_array

; 717  :         return _Newvec + _Whereoff;

  00224	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Whereoff$[rsp], 40 ; 00000028H
  0022a	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0022f	48 03 c8	 add	 rcx, rax
  00232	48 8b c1	 mov	 rax, rcx

; 718  :     }

  00235	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0023c	5f		 pop	 rdi
  0023d	c3		 ret	 0
$LN11@Emplace_re:
??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::catch$0

; 709  :         }
; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z$0:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::catch$0

; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z$0:

; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy

; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate

; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV31@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV31@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00028	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00032	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00037	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00041	e8 00 00 00 00	 call	 ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00046	48 8b d0	 mov	 rdx, rax
  00049	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 759  :     }

  00053	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV31@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z PROC ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z ENDP ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
tv67 = 56
tv70 = 64
this$ = 96
<_Val_0>$ = 104
??$_Emplace_back_with_unused_capacity@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_back_with_unused_capacity<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 633  :     decltype(auto) _Emplace_back_with_unused_capacity(_Valty&&... _Val) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 634  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 635  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 636  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 637  :         _STL_INTERNAL_CHECK(_Mylast != _My_data._Myend); // check that we have unused capacity
; 638  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0003b	48 8b 4c 24 68	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00045	48 89 44 24 38	 mov	 QWORD PTR tv67[rsp], rax
  0004a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  0004f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00052	e8 00 00 00 00	 call	 ??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00057	48 89 44 24 40	 mov	 QWORD PTR tv70[rsp], rax
  0005c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00061	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  00066	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv67[rsp]
  0006b	4c 8b c1	 mov	 r8, rcx
  0006e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv70[rsp]
  00073	48 8b d1	 mov	 rdx, rcx
  00076	48 8b c8	 mov	 rcx, rax
  00079	e8 00 00 00 00	 call	 ??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAV31@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 639  :         _Orphan_range(_Mylast, _Mylast);

  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00083	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00086	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0008e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00093	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range

; 640  :         _Ty& _Result = *_Mylast;

  00098	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax

; 641  :         ++_Mylast;

  000a5	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000aa	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ad	48 83 c0 28	 add	 rax, 40			; 00000028H
  000b1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000b6	48 89 01	 mov	 QWORD PTR [rcx], rax

; 642  : #if _HAS_CXX17
; 643  :         return _Result;
; 644  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 645  :         (void) _Result;
; 646  : #endif // _HAS_CXX17
; 647  :     }

  000b9	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000bd	5f		 pop	 rdi
  000be	c3		 ret	 0
??$_Emplace_back_with_unused_capacity@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_back_with_unused_capacity<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$emplace_back@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
this$ = 80
<_Val_0>$ = 88
??$emplace_back@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::emplace_back<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 651  :     decltype(auto) emplace_back(_Valty&&... _Val) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 652  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 653  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 654  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 655  :         if (_Mylast != _My_data._Myend) {

  0003b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00045	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00049	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0004c	74 19		 je	 SHORT $LN2@emplace_ba

; 656  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0004e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00053	e8 00 00 00 00	 call	 ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00060	e8 00 00 00 00	 call	 ??$_Emplace_back_with_unused_capacity@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_back_with_unused_capacity<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00065	eb 24		 jmp	 SHORT $LN1@emplace_ba
$LN2@emplace_ba:

; 657  :         }
; 658  : 
; 659  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00067	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0006c	e8 00 00 00 00	 call	 ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00071	4c 8b c0	 mov	 r8, rax
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00086	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax
$LN1@emplace_ba:

; 660  : #if _HAS_CXX17
; 661  :         return _Result;
; 662  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 663  :         (void) _Result;
; 664  : #endif // _HAS_CXX17
; 665  :     }

  0008b	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??$emplace_back@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::emplace_back<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1109 : void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1110 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1111 :     using _Ty = typename _Alloc::value_type;
; 1112 :     _Ptr->~_Ty();
; 1113 :     _Deallocate_plain(_Al, _Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >

; 1114 : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0N@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@N@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0N@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@N@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><double>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0N@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@N@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ; std::_Get_size_of_n<16>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@N@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@N@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<double> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@N@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<double> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
_TEXT	SEGMENT
int2$ = 48
??$rgy_reduce@H@@YAXAEAU?$pair@HH@std@@@Z PROC		; rgy_reduce<int>

; 249  : static inline void rgy_reduce(std::pair<T, T>& int2) {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 250  :     rgy_reduce(int2.first, int2.second);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR int2$[rsp]
  00023	48 83 c0 04	 add	 rax, 4
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR int2$[rsp]
  0002c	48 8b d0	 mov	 rdx, rax
  0002f	e8 00 00 00 00	 call	 ??$rgy_reduce@H@@YAXAEAH0@Z ; rgy_reduce<int>

; 251  : }

  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??$rgy_reduce@H@@YAXAEAU?$pair@HH@std@@@Z ENDP		; rgy_reduce<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$make_pair@HH@std@@YA?AU?$pair@HH@0@$$QEAH0@Z
_TEXT	SEGMENT
tv66 = 32
__$ReturnUdt$ = 64
_Val1$ = 72
_Val2$ = 80
??$make_pair@HH@std@@YA?AU?$pair@HH@0@$$QEAH0@Z PROC	; std::make_pair<int,int>, COMDAT

; 309  :             is_nothrow_constructible_v<_Unrefwrap_t<_Ty2>, _Ty2>) { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 310  :     // return pair composed from arguments
; 311  :     using _Mypair = pair<_Unrefwrap_t<_Ty1>, _Unrefwrap_t<_Ty2>>;
; 312  :     return _Mypair(_STD forward<_Ty1>(_Val1), _STD forward<_Ty2>(_Val2));

  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Val2$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00032	48 89 44 24 20	 mov	 QWORD PTR tv66[rsp], rax
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00041	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv66[rsp]
  00046	4c 8b c1	 mov	 r8, rcx
  00049	48 8b d0	 mov	 rdx, rax
  0004c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00051	e8 00 00 00 00	 call	 ??$?0HH$0A@@?$pair@HH@std@@QEAA@$$QEAH0@Z ; std::pair<int,int>::pair<int,int><int,int,0>
  00056	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 313  : }

  0005b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005f	5f		 pop	 rdi
  00060	c3		 ret	 0
??$make_pair@HH@std@@YA?AU?$pair@HH@0@$$QEAH0@Z ENDP	; std::make_pair<int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$make_pair@AEBHAEBH@std@@YA?AU?$pair@HH@0@AEBH0@Z
_TEXT	SEGMENT
tv66 = 32
__$ReturnUdt$ = 64
_Val1$ = 72
_Val2$ = 80
??$make_pair@AEBHAEBH@std@@YA?AU?$pair@HH@0@AEBH0@Z PROC ; std::make_pair<int const &,int const &>, COMDAT

; 309  :             is_nothrow_constructible_v<_Unrefwrap_t<_Ty2>, _Ty2>) { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 310  :     // return pair composed from arguments
; 311  :     using _Mypair = pair<_Unrefwrap_t<_Ty1>, _Unrefwrap_t<_Ty2>>;
; 312  :     return _Mypair(_STD forward<_Ty1>(_Val1), _STD forward<_Ty2>(_Val2));

  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Val2$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@AEBH@std@@YAAEBHAEBH@Z ; std::forward<int const &>
  00032	48 89 44 24 20	 mov	 QWORD PTR tv66[rsp], rax
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$forward@AEBH@std@@YAAEBHAEBH@Z ; std::forward<int const &>
  00041	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv66[rsp]
  00046	4c 8b c1	 mov	 r8, rcx
  00049	48 8b d0	 mov	 rdx, rax
  0004c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00051	e8 00 00 00 00	 call	 ??$?0HH$0A@@?$pair@HH@std@@QEAA@AEBH0@Z ; std::pair<int,int>::pair<int,int><int,int,0>
  00056	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 313  : }

  0005b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005f	5f		 pop	 rdi
  00060	c3		 ret	 0
??$make_pair@AEBHAEBH@std@@YA?AU?$pair@HH@0@AEBH0@Z ENDP ; std::make_pair<int const &,int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 64
$T4 = 72
$T5 = 96
$T6 = 104
tv133 = 112
tv92 = 120
tv134 = 128
tv94 = 136
__$ReturnUdt$ = 160
_First$ = 168
_Last$ = 176
??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z PROC ; std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >, COMDAT

; 4301 : _NODISCARD constexpr _FwdIt max_element(_FwdIt _First, _FwdIt _Last) { // find largest element, using operator<

$LN9:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+160]
  0002e	c7 44 24 68 00
	00 00 00	 mov	 DWORD PTR $T6[rsp], 0

; 4302 :     return _STD max_element(_First, _Last, less<>());

  00036	48 8d 44 24 28	 lea	 rax, QWORD PTR $T2[rsp]
  0003b	48 89 44 24 40	 mov	 QWORD PTR $T3[rsp], rax
  00040	48 8d 44 24 48	 lea	 rax, QWORD PTR $T4[rsp]
  00045	48 89 44 24 60	 mov	 QWORD PTR $T5[rsp], rax
  0004a	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR _Last$[rsp]
  00052	48 8b 4c 24 40	 mov	 rcx, QWORD PTR $T3[rsp]
  00057	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z
  0005c	48 89 44 24 70	 mov	 QWORD PTR tv133[rsp], rax
  00061	48 8b 44 24 70	 mov	 rax, QWORD PTR tv133[rsp]
  00066	48 89 44 24 78	 mov	 QWORD PTR tv92[rsp], rax
  0006b	48 8b 94 24 a8
	00 00 00	 mov	 rdx, QWORD PTR _First$[rsp]
  00073	48 8b 4c 24 60	 mov	 rcx, QWORD PTR $T5[rsp]
  00078	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z
  0007d	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR tv134[rsp], rax
  00085	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR tv134[rsp]
  0008d	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR tv94[rsp], rax
  00095	44 0f b6 4c 24
	20		 movzx	 r9d, BYTE PTR $T1[rsp]
  0009b	4c 8b 44 24 78	 mov	 r8, QWORD PTR tv92[rsp]
  000a0	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR tv94[rsp]
  000a8	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000b0	e8 00 00 00 00	 call	 ??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0U?$less@X@0@@Z ; std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >,std::less<void> >
  000b5	8b 44 24 68	 mov	 eax, DWORD PTR $T6[rsp]
  000b9	83 c8 01	 or	 eax, 1
  000bc	89 44 24 68	 mov	 DWORD PTR $T6[rsp], eax
  000c0	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  000c8	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  000cd	90		 npad	 1
  000ce	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Last$[rsp]
  000d6	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  000db	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 4303 : }

  000e3	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  000ea	5f		 pop	 rdi
  000eb	c3		 ret	 0
  000ec	cc		 int	 3
??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z ENDP ; std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 64
$T4 = 72
$T5 = 96
$T6 = 104
tv133 = 112
tv92 = 120
tv134 = 128
tv94 = 136
__$ReturnUdt$ = 160
_First$ = 168
_Last$ = 176
?dtor$0@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA PROC ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA ENDP ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 64
$T4 = 72
$T5 = 96
$T6 = 104
tv133 = 112
tv92 = 120
tv134 = 128
tv94 = 136
__$ReturnUdt$ = 160
_First$ = 168
_Last$ = 176
?dtor$1@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA PROC ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA ENDP ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 64
$T4 = 72
$T5 = 96
$T6 = 104
tv133 = 112
tv92 = 120
tv134 = 128
tv94 = 136
__$ReturnUdt$ = 160
_First$ = 168
_Last$ = 176
?dtor$2@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA PROC ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR $T3[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$2@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA ENDP ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 64
$T4 = 72
$T5 = 96
$T6 = 104
tv133 = 112
tv92 = 120
tv134 = 128
tv94 = 136
__$ReturnUdt$ = 160
_First$ = 168
_Last$ = 176
?dtor$3@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA PROC ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >'::`1'::dtor$3
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 60	 mov	 rcx, QWORD PTR $T5[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$3@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA ENDP ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 64
$T4 = 72
$T5 = 96
$T6 = 104
tv133 = 112
tv92 = 120
tv134 = 128
tv94 = 136
__$ReturnUdt$ = 160
_First$ = 168
_Last$ = 176
?dtor$4@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA PROC ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >'::`1'::dtor$4
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 68	 mov	 eax, DWORD PTR $T6[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN8@dtor$4
  0001d	83 65 68 fe	 and	 DWORD PTR $T6[rbp], -2
  00021	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
$LN8@dtor$4:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$4@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA ENDP ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 64
$T4 = 72
$T5 = 96
$T6 = 104
tv133 = 112
tv92 = 120
tv134 = 128
tv94 = 136
__$ReturnUdt$ = 160
_First$ = 168
_Last$ = 176
?dtor$0@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA PROC ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA ENDP ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 64
$T4 = 72
$T5 = 96
$T6 = 104
tv133 = 112
tv92 = 120
tv134 = 128
tv94 = 136
__$ReturnUdt$ = 160
_First$ = 168
_Last$ = 176
?dtor$1@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA PROC ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA ENDP ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 64
$T4 = 72
$T5 = 96
$T6 = 104
tv133 = 112
tv92 = 120
tv134 = 128
tv94 = 136
__$ReturnUdt$ = 160
_First$ = 168
_Last$ = 176
?dtor$2@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA PROC ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR $T3[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$2@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA ENDP ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 64
$T4 = 72
$T5 = 96
$T6 = 104
tv133 = 112
tv92 = 120
tv134 = 128
tv94 = 136
__$ReturnUdt$ = 160
_First$ = 168
_Last$ = 176
?dtor$3@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA PROC ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >'::`1'::dtor$3
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 60	 mov	 rcx, QWORD PTR $T5[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$3@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA ENDP ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 64
$T4 = 72
$T5 = 96
$T6 = 104
tv133 = 112
tv92 = 120
tv134 = 128
tv94 = 136
__$ReturnUdt$ = 160
_First$ = 168
_Last$ = 176
?dtor$4@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA PROC ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >'::`1'::dtor$4
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 68	 mov	 eax, DWORD PTR $T6[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN8@dtor$4
  0001d	83 65 68 fe	 and	 DWORD PTR $T6[rbp], -2
  00021	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
$LN8@dtor$4:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$4@?0???$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z@4HA ENDP ; `std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEBAPEANXZ
_TEXT	SEGMENT
this$ = 48
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEBAPEANXZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Unwrapped, COMDAT

; 276  :     _NODISCARD value_type* _Unwrapped() const {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 277  :         return _Unfancy(this->_Ptr);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00027	e8 00 00 00 00	 call	 ??$_Unfancy@N@std@@YAPEANPEAN@Z ; std::_Unfancy<double>

; 278  :     }

  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEBAPEANXZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Unwrapped
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEBAAEANXZ
_TEXT	SEGMENT
this$ = 48
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEBAAEANXZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::operator*, COMDAT

; 218  :     _NODISCARD reference operator*() const {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 219  :         return const_cast<reference>(_Mybase::operator*());

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEBAAEBNXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::operator*

; 220  :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEBAAEANXZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >, COMDAT

; 216  :     _Vector_iterator(pointer _Parg, const _Container_base* _Pvector) : _Mybase(_Parg, _Pvector) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Pvector$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Parg$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >
  0003c	90		 npad	 1
  0003d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00046	5f		 pop	 rdi
  00047	c3		 ret	 0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QEAA@AEBU01@@Z ; std::_Iterator_base12::_Iterator_base12
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __that$[rsp]
  0003d	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00041	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00045	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004e	5f		 pop	 rdi
  0004f	c3		 ret	 0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QEAA@AEBU01@@Z ; std::_Iterator_base12::_Iterator_base12
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __that$[rsp]
  0003d	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00041	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00045	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004e	5f		 pop	 rdi
  0004f	c3		 ret	 0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAAXPEBN@Z
_TEXT	SEGMENT
this$ = 48
_It$ = 56
?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAAXPEBN@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Seek_to, COMDAT

; 188  :     void _Seek_to(const value_type* _It) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 189  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _It$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Refancy@PEAN$0A@@std@@YAPEANPEAN@Z ; std::_Refancy<double *,0>
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 190  :     }

  00036	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAAXPEBN@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Seek_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@1@0@Z
_TEXT	SEGMENT
tv69 = 48
_First$ = 80
_Last$ = 88
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@1@0@Z PROC ; std::_Verify_range, COMDAT

; 176  :     friend void _Verify_range(const _Vector_const_iterator& _First, const _Vector_const_iterator& _Last) {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
$LN4@Verify_ran:

; 177  :         _STL_VERIFY(_First._Getcont() == _Last._Getcont(), "vector iterators in range are from different containers");

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _First$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002d	48 89 44 24 30	 mov	 QWORD PTR tv69[rsp], rax
  00032	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Last$[rsp]
  00037	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv69[rsp]
  00041	48 3b c8	 cmp	 rcx, rax
  00044	75 02		 jne	 SHORT $LN14@Verify_ran
  00046	eb 6b		 jmp	 SHORT $LN15@Verify_ran
$LN14@Verify_ran:
$LN7@Verify_ran:
  00048	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@
  0004f	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00054	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0005b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00060	45 33 c9	 xor	 r9d, r9d
  00063	41 b8 b1 00 00
	00		 mov	 r8d, 177		; 000000b1H
  00069	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00070	b9 02 00 00 00	 mov	 ecx, 2
  00075	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0007b	83 f8 01	 cmp	 eax, 1
  0007e	75 03		 jne	 SHORT $LN19@Verify_ran
  00080	cc		 int	 3
  00081	33 c0		 xor	 eax, eax
$LN19@Verify_ran:
  00083	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0008c	41 b9 b1 00 00
	00		 mov	 r9d, 177		; 000000b1H
  00092	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00099	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
  000a0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
  000a7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000ad	33 c0		 xor	 eax, eax
  000af	85 c0		 test	 eax, eax
  000b1	75 95		 jne	 SHORT $LN7@Verify_ran
$LN15@Verify_ran:
  000b3	33 c0		 xor	 eax, eax
  000b5	85 c0		 test	 eax, eax
  000b7	0f 85 66 ff ff
	ff		 jne	 $LN4@Verify_ran
$LN10@Verify_ran:

; 178  :         _STL_VERIFY(_First._Ptr <= _Last._Ptr, "vector iterator range transposed");

  000bd	48 8b 44 24 50	 mov	 rax, QWORD PTR _First$[rsp]
  000c2	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Last$[rsp]
  000c7	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000cb	48 39 48 10	 cmp	 QWORD PTR [rax+16], rcx
  000cf	77 02		 ja	 SHORT $LN16@Verify_ran
  000d1	eb 6b		 jmp	 SHORT $LN17@Verify_ran
$LN16@Verify_ran:
$LN13@Verify_ran:
  000d3	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@
  000da	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000df	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  000e6	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000eb	45 33 c9	 xor	 r9d, r9d
  000ee	41 b8 b2 00 00
	00		 mov	 r8d, 178		; 000000b2H
  000f4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000fb	b9 02 00 00 00	 mov	 ecx, 2
  00100	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00106	83 f8 01	 cmp	 eax, 1
  00109	75 03		 jne	 SHORT $LN20@Verify_ran
  0010b	cc		 int	 3
  0010c	33 c0		 xor	 eax, eax
$LN20@Verify_ran:
  0010e	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00117	41 b9 b2 00 00
	00		 mov	 r9d, 178		; 000000b2H
  0011d	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00124	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
  0012b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
  00132	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00138	33 c0		 xor	 eax, eax
  0013a	85 c0		 test	 eax, eax
  0013c	75 95		 jne	 SHORT $LN13@Verify_ran
$LN17@Verify_ran:
  0013e	33 c0		 xor	 eax, eax
  00140	85 c0		 test	 eax, eax
  00142	0f 85 75 ff ff
	ff		 jne	 $LN10@Verify_ran

; 179  :     }

  00148	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0014c	5f		 pop	 rdi
  0014d	c3		 ret	 0
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@1@0@Z ENDP ; std::_Verify_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEBAAEBNXZ
_TEXT	SEGMENT
_Mycont$ = 48
this$ = 80
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEBAAEBNXZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::operator*, COMDAT

; 40   :     _NODISCARD reference operator*() const {

$LN21:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 41   : #if _ITERATOR_DEBUG_LEVEL != 0
; 42   :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());

  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00028	48 89 44 24 30	 mov	 QWORD PTR _Mycont$[rsp], rax
$LN4@operator:

; 43   :         _STL_VERIFY(_Ptr, "can't dereference value-initialized vector iterator");

  0002d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 78 10 00	 cmp	 QWORD PTR [rax+16], 0
  00037	74 02		 je	 SHORT $LN14@operator
  00039	eb 6b		 jmp	 SHORT $LN15@operator
$LN14@operator:
$LN7@operator:
  0003b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@
  00042	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00047	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0004e	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00053	45 33 c9	 xor	 r9d, r9d
  00056	41 b8 2b 00 00
	00		 mov	 r8d, 43			; 0000002bH
  0005c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00063	b9 02 00 00 00	 mov	 ecx, 2
  00068	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0006e	83 f8 01	 cmp	 eax, 1
  00071	75 03		 jne	 SHORT $LN19@operator
  00073	cc		 int	 3
  00074	33 c0		 xor	 eax, eax
$LN19@operator:
  00076	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0007f	41 b9 2b 00 00
	00		 mov	 r9d, 43			; 0000002bH
  00085	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0008c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1MK@MNACACDL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
  00093	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
  0009a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000a0	33 c0		 xor	 eax, eax
  000a2	85 c0		 test	 eax, eax
  000a4	75 95		 jne	 SHORT $LN7@operator
$LN15@operator:
  000a6	33 c0		 xor	 eax, eax
  000a8	85 c0		 test	 eax, eax
  000aa	75 81		 jne	 SHORT $LN4@operator
$LN10@operator:

; 44   :         _STL_VERIFY(

  000ac	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mycont$[rsp]
  000b1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000b6	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000ba	48 39 48 08	 cmp	 QWORD PTR [rax+8], rcx
  000be	77 16		 ja	 SHORT $LN16@operator
  000c0	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000c5	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Mycont$[rsp]
  000ca	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000ce	48 39 48 10	 cmp	 QWORD PTR [rax+16], rcx
  000d2	73 02		 jae	 SHORT $LN16@operator
  000d4	eb 6b		 jmp	 SHORT $LN17@operator
$LN16@operator:
$LN13@operator:
  000d6	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@
  000dd	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000e2	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  000e9	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000ee	45 33 c9	 xor	 r9d, r9d
  000f1	41 b8 2d 00 00
	00		 mov	 r8d, 45			; 0000002dH
  000f7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000fe	b9 02 00 00 00	 mov	 ecx, 2
  00103	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00109	83 f8 01	 cmp	 eax, 1
  0010c	75 03		 jne	 SHORT $LN20@operator
  0010e	cc		 int	 3
  0010f	33 c0		 xor	 eax, eax
$LN20@operator:
  00111	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0011a	41 b9 2d 00 00
	00		 mov	 r9d, 45			; 0000002dH
  00120	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00127	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1MK@MNACACDL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
  0012e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
  00135	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter

; 45   :             _Mycont->_Myfirst <= _Ptr && _Ptr < _Mycont->_Mylast, "can't dereference out of range vector iterator");

  0013b	33 c0		 xor	 eax, eax
  0013d	85 c0		 test	 eax, eax
  0013f	75 95		 jne	 SHORT $LN13@operator
$LN17@operator:
  00141	33 c0		 xor	 eax, eax
  00143	85 c0		 test	 eax, eax
  00145	0f 85 61 ff ff
	ff		 jne	 $LN10@operator

; 46   : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 47   : 
; 48   :         return *_Ptr;

  0014b	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00150	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 49   :     }

  00154	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00158	5f		 pop	 rdi
  00159	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEBAAEBNXZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >, COMDAT

; 36   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) : _Ptr(_Parg) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::_Iterator_base12
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Parg$[rsp]
  0003d	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 37   :         this->_Adopt(_Pvector);

  00041	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Pvector$[rsp]
  00046	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
  00050	90		 npad	 1

; 38   :     }

  00051	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00056	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<double> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAAAEAV?$allocator@N@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAAAEAV?$allocator@N@2@XZ PROC ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAAAEAV?$allocator@N@2@XZ ENDP ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ PROC ; std::vector<double,std::allocator<double> >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAAAEAV?$allocator@N@2@XZ ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ ENDP ; std::vector<double,std::allocator<double> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ PROC	; std::vector<double,std::allocator<double> >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	74 7f		 je	 SHORT $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  00068	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006d	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00070	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00075	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0007d	e8 00 00 00 00	 call	 ?_Destroy@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN0@Z ; std::vector<double,std::allocator<double> >::_Destroy
  00082	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00083	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00088	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0008d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 2b c1	 sub	 rax, rcx
  00096	48 c1 f8 03	 sar	 rax, 3
  0009a	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  0009f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000a4	e8 00 00 00 00	 call	 ?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ ; std::vector<double,std::allocator<double> >::_Getal
  000a9	90		 npad	 1
  000aa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000af	4c 8b c1	 mov	 r8, rcx
  000b2	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000b7	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000ba	48 8b c8	 mov	 rcx, rax
  000bd	e8 00 00 00 00	 call	 ?deallocate@?$allocator@N@std@@QEAAXQEAN_K@Z ; std::allocator<double>::deallocate
  000c2	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000c3	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000c8	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000cf	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000d4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000db	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000e0	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000e7	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000eb	5f		 pop	 rdi
  000ec	c3		 ret	 0
?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ ENDP	; std::vector<double,std::allocator<double> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN0@Z PROC ; std::vector<double,std::allocator<double> >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ ; std::vector<double,std::allocator<double> >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@N@std@@@std@@YAXPEANQEANAEAV?$allocator@N@0@@Z ; std::_Destroy_range<std::allocator<double> >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN0@Z ENDP ; std::vector<double,std::allocator<double> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?end@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?end@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ PROC ; std::vector<double,std::allocator<double> >::end, COMDAT

; 1370 :     _NODISCARD iterator end() noexcept { // return iterator for end of mutable sequence

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 1371 :         auto& _My_data = _Mypair._Myval2;

  0002b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1372 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  00035	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$addressof@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@N@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<double> > >
  0003f	90		 npad	 1
  00040	4c 8b c0	 mov	 r8, rax
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00048	48 8b 50 10	 mov	 rdx, QWORD PTR [rax+16]
  0004c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00051	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >
  00056	90		 npad	 1
  00057	8b 44 24 28	 mov	 eax, DWORD PTR $T1[rsp]
  0005b	83 c8 01	 or	 eax, 1
  0005e	89 44 24 28	 mov	 DWORD PTR $T1[rsp], eax
  00062	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1373 :     }

  00067	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
  0006d	cc		 int	 3
?end@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ ENDP ; std::vector<double,std::allocator<double> >::end
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??end@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ@4HA PROC ; `std::vector<double,std::allocator<double> >::end'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??end@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<double,std::allocator<double> >::end'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??end@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ@4HA PROC ; `std::vector<double,std::allocator<double> >::end'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??end@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<double,std::allocator<double> >::end'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?begin@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?begin@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ PROC ; std::vector<double,std::allocator<double> >::begin, COMDAT

; 1360 :     _NODISCARD iterator begin() noexcept { // return iterator for beginning of mutable sequence

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 1361 :         auto& _My_data = _Mypair._Myval2;

  0002b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1362 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00035	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$addressof@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@N@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<double> > >
  0003f	90		 npad	 1
  00040	4c 8b c0	 mov	 r8, rax
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00048	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  0004c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00051	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@PEANPEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >
  00056	90		 npad	 1
  00057	8b 44 24 28	 mov	 eax, DWORD PTR $T1[rsp]
  0005b	83 c8 01	 or	 eax, 1
  0005e	89 44 24 28	 mov	 DWORD PTR $T1[rsp], eax
  00062	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1363 :     }

  00067	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
  0006d	cc		 int	 3
?begin@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ ENDP ; std::vector<double,std::allocator<double> >::begin
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??begin@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ@4HA PROC ; `std::vector<double,std::allocator<double> >::begin'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??begin@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<double,std::allocator<double> >::begin'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??begin@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ@4HA PROC ; `std::vector<double,std::allocator<double> >::begin'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??begin@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<double,std::allocator<double> >::begin'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S1$ = 52
$T4 = 68
this$ = 96
??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ PROC	; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ ; std::vector<double,std::allocator<double> >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ ; std::vector<double,std::allocator<double> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S1$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0N@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@N@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><double>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S1$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ ENDP	; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@N@std@@QEAAXQEAN_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@N@std@@QEAAXQEAN_K@Z PROC	; std::allocator<double>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR _Count$[rsp]
  0002d	48 c1 e0 03	 shl	 rax, 3
  00031	48 8b d0	 mov	 rdx, rax
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00039	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?deallocate@?$allocator@N@std@@QEAAXQEAN_K@Z ENDP	; std::allocator<double>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
;	COMDAT ??0<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
this$ = 16
<buf>$ = 24
??0<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; <lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>, COMDAT

; 908  :         };

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR <buf>$[rsp]
  00015	48 89 08	 mov	 QWORD PTR [rax], rcx
  00018	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001d	5f		 pop	 rdi
  0001e	c3		 ret	 0
??0<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; <lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
;	COMDAT ??R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z
_TEXT	SEGMENT
ram_read_speed_list$5 = 56
ram_write_speed_list$6 = 120
max_read$7 = 168
max_write$8 = 176
$T9 = 184
$T10 = 232
$T11 = 256
$T12 = 264
$T13 = 288
$T14 = 296
$T15 = 320
$T16 = 344
$T17 = 352
$T18 = 376
$T19 = 384
tv71 = 408
tv178 = 416
tv65 = 424
tv180 = 432
tv191 = 440
tv182 = 448
tv192 = 456
tv184 = 464
tv193 = 472
tv186 = 480
tv194 = 488
tv188 = 496
tv195 = 504
tv190 = 512
tv173 = 520
__$ArrayPad$ = 528
this$ = 560
type$ = 568
test_size$ = 576
??R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z PROC ; <lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator(), COMDAT

; 899  :         auto write_rw_speed = [&](const TCHAR *type, int test_size) {

  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 20 02
	00 00		 sub	 rsp, 544		; 00000220H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 88 00 00 00	 mov	 ecx, 136		; 00000088H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 30
	02 00 00	 mov	 rcx, QWORD PTR [rsp+560]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 84 24 10
	02 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 900  :             if (test_size) {

  00040	83 bc 24 40 02
	00 00 00	 cmp	 DWORD PTR test_size$[rsp], 0
  00048	0f 84 70 02 00
	00		 je	 $LN2@operator

; 901  :                 auto ram_read_speed_list = ram_speed_mt_list(test_size, RAM_SPEED_MODE_READ);

  0004e	45 33 c9	 xor	 r9d, r9d
  00051	45 33 c0	 xor	 r8d, r8d
  00054	8b 94 24 40 02
	00 00		 mov	 edx, DWORD PTR test_size$[rsp]
  0005b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR ram_read_speed_list$5[rsp]
  00060	e8 00 00 00 00	 call	 ?ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z ; ram_speed_mt_list
  00065	90		 npad	 1

; 902  :                 auto ram_write_speed_list = ram_speed_mt_list(test_size, RAM_SPEED_MODE_WRITE);

  00066	45 33 c9	 xor	 r9d, r9d
  00069	41 b8 01 00 00
	00		 mov	 r8d, 1
  0006f	8b 94 24 40 02
	00 00		 mov	 edx, DWORD PTR test_size$[rsp]
  00076	48 8d 4c 24 78	 lea	 rcx, QWORD PTR ram_write_speed_list$6[rsp]
  0007b	e8 00 00 00 00	 call	 ?ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z ; ram_speed_mt_list
  00080	90		 npad	 1

; 903  :                 double max_read  = *std::max_element(ram_read_speed_list.begin(), ram_read_speed_list.end())  * (1.0 / 1024.0);

  00081	48 8d 84 24 e8
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  00089	48 89 84 24 00
	01 00 00	 mov	 QWORD PTR $T11[rsp], rax
  00091	48 8d 84 24 08
	01 00 00	 lea	 rax, QWORD PTR $T12[rsp]
  00099	48 89 84 24 20
	01 00 00	 mov	 QWORD PTR $T13[rsp], rax
  000a1	48 8b 94 24 00
	01 00 00	 mov	 rdx, QWORD PTR $T11[rsp]
  000a9	48 8d 4c 24 38	 lea	 rcx, QWORD PTR ram_read_speed_list$5[rsp]
  000ae	e8 00 00 00 00	 call	 ?end@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ ; std::vector<double,std::allocator<double> >::end
  000b3	48 89 84 24 98
	01 00 00	 mov	 QWORD PTR tv71[rsp], rax
  000bb	48 8b 84 24 98
	01 00 00	 mov	 rax, QWORD PTR tv71[rsp]
  000c3	48 89 84 24 a0
	01 00 00	 mov	 QWORD PTR tv178[rsp], rax
  000cb	48 8b 94 24 20
	01 00 00	 mov	 rdx, QWORD PTR $T13[rsp]
  000d3	48 8d 4c 24 38	 lea	 rcx, QWORD PTR ram_read_speed_list$5[rsp]
  000d8	e8 00 00 00 00	 call	 ?begin@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ ; std::vector<double,std::allocator<double> >::begin
  000dd	48 89 84 24 a8
	01 00 00	 mov	 QWORD PTR tv65[rsp], rax
  000e5	48 8b 84 24 a8
	01 00 00	 mov	 rax, QWORD PTR tv65[rsp]
  000ed	48 89 84 24 b0
	01 00 00	 mov	 QWORD PTR tv180[rsp], rax
  000f5	4c 8b 84 24 a0
	01 00 00	 mov	 r8, QWORD PTR tv178[rsp]
  000fd	48 8b 94 24 b0
	01 00 00	 mov	 rdx, QWORD PTR tv180[rsp]
  00105	48 8d 8c 24 28
	01 00 00	 lea	 rcx, QWORD PTR $T14[rsp]
  0010d	e8 00 00 00 00	 call	 ??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z ; std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >
  00112	48 89 84 24 b8
	01 00 00	 mov	 QWORD PTR tv191[rsp], rax
  0011a	48 8b 84 24 b8
	01 00 00	 mov	 rax, QWORD PTR tv191[rsp]
  00122	48 89 84 24 c0
	01 00 00	 mov	 QWORD PTR tv182[rsp], rax
  0012a	48 8b 8c 24 c0
	01 00 00	 mov	 rcx, QWORD PTR tv182[rsp]
  00132	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEBAAEANXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::operator*
  00137	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [rax]
  0013b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f50000000000000
  00143	f2 0f 11 84 24
	a8 00 00 00	 movsd	 QWORD PTR max_read$7[rsp], xmm0
  0014c	48 8d 8c 24 28
	01 00 00	 lea	 rcx, QWORD PTR $T14[rsp]
  00154	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ

; 904  :                 double max_write = *std::max_element(ram_write_speed_list.begin(), ram_write_speed_list.end()) * (1.0 / 1024.0);

  00159	48 8d 84 24 40
	01 00 00	 lea	 rax, QWORD PTR $T15[rsp]
  00161	48 89 84 24 58
	01 00 00	 mov	 QWORD PTR $T16[rsp], rax
  00169	48 8d 84 24 60
	01 00 00	 lea	 rax, QWORD PTR $T17[rsp]
  00171	48 89 84 24 78
	01 00 00	 mov	 QWORD PTR $T18[rsp], rax
  00179	48 8b 94 24 58
	01 00 00	 mov	 rdx, QWORD PTR $T16[rsp]
  00181	48 8d 4c 24 78	 lea	 rcx, QWORD PTR ram_write_speed_list$6[rsp]
  00186	e8 00 00 00 00	 call	 ?end@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ ; std::vector<double,std::allocator<double> >::end
  0018b	48 89 84 24 c8
	01 00 00	 mov	 QWORD PTR tv192[rsp], rax
  00193	48 8b 84 24 c8
	01 00 00	 mov	 rax, QWORD PTR tv192[rsp]
  0019b	48 89 84 24 d0
	01 00 00	 mov	 QWORD PTR tv184[rsp], rax
  001a3	48 8b 94 24 78
	01 00 00	 mov	 rdx, QWORD PTR $T18[rsp]
  001ab	48 8d 4c 24 78	 lea	 rcx, QWORD PTR ram_write_speed_list$6[rsp]
  001b0	e8 00 00 00 00	 call	 ?begin@?$vector@NV?$allocator@N@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@2@XZ ; std::vector<double,std::allocator<double> >::begin
  001b5	48 89 84 24 d8
	01 00 00	 mov	 QWORD PTR tv193[rsp], rax
  001bd	48 8b 84 24 d8
	01 00 00	 mov	 rax, QWORD PTR tv193[rsp]
  001c5	48 89 84 24 e0
	01 00 00	 mov	 QWORD PTR tv186[rsp], rax
  001cd	4c 8b 84 24 d0
	01 00 00	 mov	 r8, QWORD PTR tv184[rsp]
  001d5	48 8b 94 24 e0
	01 00 00	 mov	 rdx, QWORD PTR tv186[rsp]
  001dd	48 8d 8c 24 80
	01 00 00	 lea	 rcx, QWORD PTR $T19[rsp]
  001e5	e8 00 00 00 00	 call	 ??$max_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@0@V10@0@Z ; std::max_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > > >
  001ea	48 89 84 24 e8
	01 00 00	 mov	 QWORD PTR tv194[rsp], rax
  001f2	48 8b 84 24 e8
	01 00 00	 mov	 rax, QWORD PTR tv194[rsp]
  001fa	48 89 84 24 f0
	01 00 00	 mov	 QWORD PTR tv188[rsp], rax
  00202	48 8b 8c 24 f0
	01 00 00	 mov	 rcx, QWORD PTR tv188[rsp]
  0020a	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEBAAEANXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double> > >::operator*
  0020f	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [rax]
  00213	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f50000000000000
  0021b	f2 0f 11 84 24
	b0 00 00 00	 movsd	 QWORD PTR max_write$8[rsp], xmm0
  00224	48 8d 8c 24 80
	01 00 00	 lea	 rcx, QWORD PTR $T19[rsp]
  0022c	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ

; 905  :                 buf += strsprintf(_T("%s: Read:%7.2fGB/s, Write:%7.2fGB/s\n"), type, max_read, max_write);

  00231	f2 0f 10 84 24
	b0 00 00 00	 movsd	 xmm0, QWORD PTR max_write$8[rsp]
  0023a	f2 0f 11 44 24
	20		 movsd	 QWORD PTR [rsp+32], xmm0
  00240	f2 0f 10 9c 24
	a8 00 00 00	 movsd	 xmm3, QWORD PTR max_read$7[rsp]
  00249	66 49 0f 7e d9	 movq	 r9, xmm3
  0024e	4c 8b 84 24 38
	02 00 00	 mov	 r8, QWORD PTR type$[rsp]
  00256	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CF@PAGANAHI@?$CFs?3?5Read?3?$CF7?42fGB?1s?0?5Write?3?$CF7?42f@
  0025d	48 8d 8c 24 b8
	00 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  00265	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  0026a	48 89 84 24 f8
	01 00 00	 mov	 QWORD PTR tv195[rsp], rax
  00272	48 8b 84 24 f8
	01 00 00	 mov	 rax, QWORD PTR tv195[rsp]
  0027a	48 89 84 24 00
	02 00 00	 mov	 QWORD PTR tv190[rsp], rax
  00282	48 8b 94 24 00
	02 00 00	 mov	 rdx, QWORD PTR tv190[rsp]
  0028a	48 8b 84 24 30
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00292	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00295	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  0029a	90		 npad	 1
  0029b	48 8d 8c 24 b8
	00 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  002a3	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002a8	90		 npad	 1

; 906  :             }

  002a9	48 8d 4c 24 78	 lea	 rcx, QWORD PTR ram_write_speed_list$6[rsp]
  002ae	e8 00 00 00 00	 call	 ??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
  002b3	90		 npad	 1
  002b4	48 8d 4c 24 38	 lea	 rcx, QWORD PTR ram_read_speed_list$5[rsp]
  002b9	e8 00 00 00 00	 call	 ??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
$LN2@operator:

; 907  :             return test_size > 0;

  002be	83 bc 24 40 02
	00 00 00	 cmp	 DWORD PTR test_size$[rsp], 0
  002c6	7e 0d		 jle	 SHORT $LN4@operator
  002c8	c7 84 24 08 02
	00 00 01 00 00
	00		 mov	 DWORD PTR tv173[rsp], 1
  002d3	eb 0b		 jmp	 SHORT $LN5@operator
$LN4@operator:
  002d5	c7 84 24 08 02
	00 00 00 00 00
	00		 mov	 DWORD PTR tv173[rsp], 0
$LN5@operator:
  002e0	0f b6 84 24 08
	02 00 00	 movzx	 eax, BYTE PTR tv173[rsp]

; 908  :         };

  002e8	8b f8		 mov	 edi, eax
  002ea	48 8b cc	 mov	 rcx, rsp
  002ed	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z$rtcFrameData
  002f4	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  002f9	8b c7		 mov	 eax, edi
  002fb	48 8b 8c 24 10
	02 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00303	48 33 cc	 xor	 rcx, rsp
  00306	e8 00 00 00 00	 call	 __security_check_cookie
  0030b	48 81 c4 20 02
	00 00		 add	 rsp, 544		; 00000220H
  00312	5f		 pop	 rdi
  00313	c3		 ret	 0
??R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z ENDP ; <lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ram_read_speed_list$5 = 56
ram_write_speed_list$6 = 120
max_read$7 = 168
max_write$8 = 176
$T9 = 184
$T10 = 232
$T11 = 256
$T12 = 264
$T13 = 288
$T14 = 296
$T15 = 320
$T16 = 344
$T17 = 352
$T18 = 376
$T19 = 384
tv71 = 408
tv178 = 416
tv65 = 424
tv180 = 432
tv191 = 440
tv182 = 448
tv192 = 456
tv184 = 464
tv193 = 472
tv186 = 480
tv194 = 488
tv188 = 496
tv195 = 504
tv190 = 512
tv173 = 520
__$ArrayPad$ = 528
this$ = 560
type$ = 568
test_size$ = 576
?dtor$0@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA PROC ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR ram_read_speed_list$5[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA ENDP ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
ram_read_speed_list$5 = 56
ram_write_speed_list$6 = 120
max_read$7 = 168
max_write$8 = 176
$T9 = 184
$T10 = 232
$T11 = 256
$T12 = 264
$T13 = 288
$T14 = 296
$T15 = 320
$T16 = 344
$T17 = 352
$T18 = 376
$T19 = 384
tv71 = 408
tv178 = 416
tv65 = 424
tv180 = 432
tv191 = 440
tv182 = 448
tv192 = 456
tv184 = 464
tv193 = 472
tv186 = 480
tv194 = 488
tv188 = 496
tv195 = 504
tv190 = 512
tv173 = 520
__$ArrayPad$ = 528
this$ = 560
type$ = 568
test_size$ = 576
?dtor$1@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA PROC ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 78	 lea	 rcx, QWORD PTR ram_write_speed_list$6[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA ENDP ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
ram_read_speed_list$5 = 56
ram_write_speed_list$6 = 120
max_read$7 = 168
max_write$8 = 176
$T9 = 184
$T10 = 232
$T11 = 256
$T12 = 264
$T13 = 288
$T14 = 296
$T15 = 320
$T16 = 344
$T17 = 352
$T18 = 376
$T19 = 384
tv71 = 408
tv178 = 416
tv65 = 424
tv180 = 432
tv191 = 440
tv182 = 448
tv192 = 456
tv184 = 464
tv193 = 472
tv186 = 480
tv194 = 488
tv188 = 496
tv195 = 504
tv190 = 512
tv173 = 520
__$ArrayPad$ = 528
this$ = 560
type$ = 568
test_size$ = 576
?dtor$2@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA PROC ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR $T11[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$2@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA ENDP ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
ram_read_speed_list$5 = 56
ram_write_speed_list$6 = 120
max_read$7 = 168
max_write$8 = 176
$T9 = 184
$T10 = 232
$T11 = 256
$T12 = 264
$T13 = 288
$T14 = 296
$T15 = 320
$T16 = 344
$T17 = 352
$T18 = 376
$T19 = 384
tv71 = 408
tv178 = 416
tv65 = 424
tv180 = 432
tv191 = 440
tv182 = 448
tv192 = 456
tv184 = 464
tv193 = 472
tv186 = 480
tv194 = 488
tv188 = 496
tv195 = 504
tv190 = 512
tv173 = 520
__$ArrayPad$ = 528
this$ = 560
type$ = 568
test_size$ = 576
?dtor$3@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA PROC ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$3
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR $T13[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$3@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA ENDP ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
ram_read_speed_list$5 = 56
ram_write_speed_list$6 = 120
max_read$7 = 168
max_write$8 = 176
$T9 = 184
$T10 = 232
$T11 = 256
$T12 = 264
$T13 = 288
$T14 = 296
$T15 = 320
$T16 = 344
$T17 = 352
$T18 = 376
$T19 = 384
tv71 = 408
tv178 = 416
tv65 = 424
tv180 = 432
tv191 = 440
tv182 = 448
tv192 = 456
tv184 = 464
tv193 = 472
tv186 = 480
tv194 = 488
tv188 = 496
tv195 = 504
tv190 = 512
tv173 = 520
__$ArrayPad$ = 528
this$ = 560
type$ = 568
test_size$ = 576
?dtor$4@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA PROC ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$4
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d 28 01
	00 00		 lea	 rcx, QWORD PTR $T14[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$4@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA ENDP ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$4
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
ram_read_speed_list$5 = 56
ram_write_speed_list$6 = 120
max_read$7 = 168
max_write$8 = 176
$T9 = 184
$T10 = 232
$T11 = 256
$T12 = 264
$T13 = 288
$T14 = 296
$T15 = 320
$T16 = 344
$T17 = 352
$T18 = 376
$T19 = 384
tv71 = 408
tv178 = 416
tv65 = 424
tv180 = 432
tv191 = 440
tv182 = 448
tv192 = 456
tv184 = 464
tv193 = 472
tv186 = 480
tv194 = 488
tv188 = 496
tv195 = 504
tv190 = 512
tv173 = 520
__$ArrayPad$ = 528
this$ = 560
type$ = 568
test_size$ = 576
?dtor$5@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA PROC ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$5
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 58 01
	00 00		 mov	 rcx, QWORD PTR $T16[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$5@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA ENDP ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$5
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
ram_read_speed_list$5 = 56
ram_write_speed_list$6 = 120
max_read$7 = 168
max_write$8 = 176
$T9 = 184
$T10 = 232
$T11 = 256
$T12 = 264
$T13 = 288
$T14 = 296
$T15 = 320
$T16 = 344
$T17 = 352
$T18 = 376
$T19 = 384
tv71 = 408
tv178 = 416
tv65 = 424
tv180 = 432
tv191 = 440
tv182 = 448
tv192 = 456
tv184 = 464
tv193 = 472
tv186 = 480
tv194 = 488
tv188 = 496
tv195 = 504
tv190 = 512
tv173 = 520
__$ArrayPad$ = 528
this$ = 560
type$ = 568
test_size$ = 576
?dtor$6@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA PROC ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$6
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 78 01
	00 00		 mov	 rcx, QWORD PTR $T18[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$6@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA ENDP ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$6
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
ram_read_speed_list$5 = 56
ram_write_speed_list$6 = 120
max_read$7 = 168
max_write$8 = 176
$T9 = 184
$T10 = 232
$T11 = 256
$T12 = 264
$T13 = 288
$T14 = 296
$T15 = 320
$T16 = 344
$T17 = 352
$T18 = 376
$T19 = 384
tv71 = 408
tv178 = 416
tv65 = 424
tv180 = 432
tv191 = 440
tv182 = 448
tv192 = 456
tv184 = 464
tv193 = 472
tv186 = 480
tv194 = 488
tv188 = 496
tv195 = 504
tv190 = 512
tv173 = 520
__$ArrayPad$ = 528
this$ = 560
type$ = 568
test_size$ = 576
?dtor$7@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA PROC ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$7
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d 80 01
	00 00		 lea	 rcx, QWORD PTR $T19[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$7@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA ENDP ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$7
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
ram_read_speed_list$5 = 56
ram_write_speed_list$6 = 120
max_read$7 = 168
max_write$8 = 176
$T9 = 184
$T10 = 232
$T11 = 256
$T12 = 264
$T13 = 288
$T14 = 296
$T15 = 320
$T16 = 344
$T17 = 352
$T18 = 376
$T19 = 384
tv71 = 408
tv178 = 416
tv65 = 424
tv180 = 432
tv191 = 440
tv182 = 448
tv192 = 456
tv184 = 464
tv193 = 472
tv186 = 480
tv194 = 488
tv188 = 496
tv195 = 504
tv190 = 512
tv173 = 520
__$ArrayPad$ = 528
this$ = 560
type$ = 568
test_size$ = 576
?dtor$8@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA PROC ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$8
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d b8 00
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$8@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA ENDP ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ram_read_speed_list$5 = 56
ram_write_speed_list$6 = 120
max_read$7 = 168
max_write$8 = 176
$T9 = 184
$T10 = 232
$T11 = 256
$T12 = 264
$T13 = 288
$T14 = 296
$T15 = 320
$T16 = 344
$T17 = 352
$T18 = 376
$T19 = 384
tv71 = 408
tv178 = 416
tv65 = 424
tv180 = 432
tv191 = 440
tv182 = 448
tv192 = 456
tv184 = 464
tv193 = 472
tv186 = 480
tv194 = 488
tv188 = 496
tv195 = 504
tv190 = 512
tv173 = 520
__$ArrayPad$ = 528
this$ = 560
type$ = 568
test_size$ = 576
?dtor$0@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA PROC ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR ram_read_speed_list$5[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA ENDP ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ram_read_speed_list$5 = 56
ram_write_speed_list$6 = 120
max_read$7 = 168
max_write$8 = 176
$T9 = 184
$T10 = 232
$T11 = 256
$T12 = 264
$T13 = 288
$T14 = 296
$T15 = 320
$T16 = 344
$T17 = 352
$T18 = 376
$T19 = 384
tv71 = 408
tv178 = 416
tv65 = 424
tv180 = 432
tv191 = 440
tv182 = 448
tv192 = 456
tv184 = 464
tv193 = 472
tv186 = 480
tv194 = 488
tv188 = 496
tv195 = 504
tv190 = 512
tv173 = 520
__$ArrayPad$ = 528
this$ = 560
type$ = 568
test_size$ = 576
?dtor$1@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA PROC ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 78	 lea	 rcx, QWORD PTR ram_write_speed_list$6[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA ENDP ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ram_read_speed_list$5 = 56
ram_write_speed_list$6 = 120
max_read$7 = 168
max_write$8 = 176
$T9 = 184
$T10 = 232
$T11 = 256
$T12 = 264
$T13 = 288
$T14 = 296
$T15 = 320
$T16 = 344
$T17 = 352
$T18 = 376
$T19 = 384
tv71 = 408
tv178 = 416
tv65 = 424
tv180 = 432
tv191 = 440
tv182 = 448
tv192 = 456
tv184 = 464
tv193 = 472
tv186 = 480
tv194 = 488
tv188 = 496
tv195 = 504
tv190 = 512
tv173 = 520
__$ArrayPad$ = 528
this$ = 560
type$ = 568
test_size$ = 576
?dtor$2@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA PROC ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR $T11[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$2@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA ENDP ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ram_read_speed_list$5 = 56
ram_write_speed_list$6 = 120
max_read$7 = 168
max_write$8 = 176
$T9 = 184
$T10 = 232
$T11 = 256
$T12 = 264
$T13 = 288
$T14 = 296
$T15 = 320
$T16 = 344
$T17 = 352
$T18 = 376
$T19 = 384
tv71 = 408
tv178 = 416
tv65 = 424
tv180 = 432
tv191 = 440
tv182 = 448
tv192 = 456
tv184 = 464
tv193 = 472
tv186 = 480
tv194 = 488
tv188 = 496
tv195 = 504
tv190 = 512
tv173 = 520
__$ArrayPad$ = 528
this$ = 560
type$ = 568
test_size$ = 576
?dtor$3@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA PROC ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$3
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR $T13[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$3@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA ENDP ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ram_read_speed_list$5 = 56
ram_write_speed_list$6 = 120
max_read$7 = 168
max_write$8 = 176
$T9 = 184
$T10 = 232
$T11 = 256
$T12 = 264
$T13 = 288
$T14 = 296
$T15 = 320
$T16 = 344
$T17 = 352
$T18 = 376
$T19 = 384
tv71 = 408
tv178 = 416
tv65 = 424
tv180 = 432
tv191 = 440
tv182 = 448
tv192 = 456
tv184 = 464
tv193 = 472
tv186 = 480
tv194 = 488
tv188 = 496
tv195 = 504
tv190 = 512
tv173 = 520
__$ArrayPad$ = 528
this$ = 560
type$ = 568
test_size$ = 576
?dtor$4@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA PROC ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$4
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d 28 01
	00 00		 lea	 rcx, QWORD PTR $T14[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$4@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA ENDP ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ram_read_speed_list$5 = 56
ram_write_speed_list$6 = 120
max_read$7 = 168
max_write$8 = 176
$T9 = 184
$T10 = 232
$T11 = 256
$T12 = 264
$T13 = 288
$T14 = 296
$T15 = 320
$T16 = 344
$T17 = 352
$T18 = 376
$T19 = 384
tv71 = 408
tv178 = 416
tv65 = 424
tv180 = 432
tv191 = 440
tv182 = 448
tv192 = 456
tv184 = 464
tv193 = 472
tv186 = 480
tv194 = 488
tv188 = 496
tv195 = 504
tv190 = 512
tv173 = 520
__$ArrayPad$ = 528
this$ = 560
type$ = 568
test_size$ = 576
?dtor$5@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA PROC ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$5
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 58 01
	00 00		 mov	 rcx, QWORD PTR $T16[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$5@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA ENDP ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ram_read_speed_list$5 = 56
ram_write_speed_list$6 = 120
max_read$7 = 168
max_write$8 = 176
$T9 = 184
$T10 = 232
$T11 = 256
$T12 = 264
$T13 = 288
$T14 = 296
$T15 = 320
$T16 = 344
$T17 = 352
$T18 = 376
$T19 = 384
tv71 = 408
tv178 = 416
tv65 = 424
tv180 = 432
tv191 = 440
tv182 = 448
tv192 = 456
tv184 = 464
tv193 = 472
tv186 = 480
tv194 = 488
tv188 = 496
tv195 = 504
tv190 = 512
tv173 = 520
__$ArrayPad$ = 528
this$ = 560
type$ = 568
test_size$ = 576
?dtor$6@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA PROC ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$6
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 78 01
	00 00		 mov	 rcx, QWORD PTR $T18[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$6@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA ENDP ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ram_read_speed_list$5 = 56
ram_write_speed_list$6 = 120
max_read$7 = 168
max_write$8 = 176
$T9 = 184
$T10 = 232
$T11 = 256
$T12 = 264
$T13 = 288
$T14 = 296
$T15 = 320
$T16 = 344
$T17 = 352
$T18 = 376
$T19 = 384
tv71 = 408
tv178 = 416
tv65 = 424
tv180 = 432
tv191 = 440
tv182 = 448
tv192 = 456
tv184 = 464
tv193 = 472
tv186 = 480
tv194 = 488
tv188 = 496
tv195 = 504
tv190 = 512
tv173 = 520
__$ArrayPad$ = 528
this$ = 560
type$ = 568
test_size$ = 576
?dtor$7@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA PROC ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$7
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d 80 01
	00 00		 lea	 rcx, QWORD PTR $T19[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@N@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$7@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA ENDP ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ram_read_speed_list$5 = 56
ram_write_speed_list$6 = 120
max_read$7 = 168
max_write$8 = 176
$T9 = 184
$T10 = 232
$T11 = 256
$T12 = 264
$T13 = 288
$T14 = 296
$T15 = 320
$T16 = 344
$T17 = 352
$T18 = 376
$T19 = 384
tv71 = 408
tv178 = 416
tv65 = 424
tv180 = 432
tv191 = 440
tv182 = 448
tv192 = 456
tv184 = 464
tv193 = 472
tv186 = 480
tv194 = 488
tv188 = 496
tv195 = 504
tv190 = 512
tv173 = 520
__$ArrayPad$ = 528
this$ = 560
type$ = 568
test_size$ = 576
?dtor$8@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA PROC ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$8
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d b8 00
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$8@?0???R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z@4HA ENDP ; `<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
osver$ = 48
hModule$ = 344
func$ = 352
ret$ = 360
__$ArrayPad$ = 376
major$ = 400
minor$ = 408
build$ = 416
?getRealWindowsVersion@@YAHPEAK00@Z PROC		; getRealWindowsVersion

; 688  : static int getRealWindowsVersion(DWORD *major, DWORD *minor, DWORD *build) {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 01
	00 00		 sub	 rsp, 384		; 00000180H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 60 00 00 00	 mov	 ecx, 96			; 00000060H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	01 00 00	 mov	 rcx, QWORD PTR [rsp+400]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 84 24 78
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 689  :     *major = 0;

  00040	48 8b 84 24 90
	01 00 00	 mov	 rax, QWORD PTR major$[rsp]
  00048	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 690  :     *minor = 0;

  0004e	48 8b 84 24 98
	01 00 00	 mov	 rax, QWORD PTR minor$[rsp]
  00056	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 691  :     OSVERSIONINFOEXW osver;
; 692  :     HMODULE hModule = NULL;

  0005c	48 c7 84 24 58
	01 00 00 00 00
	00 00		 mov	 QWORD PTR hModule$[rsp], 0

; 693  :     RtlGetVersion_FUNC func = NULL;

  00068	48 c7 84 24 60
	01 00 00 00 00
	00 00		 mov	 QWORD PTR func$[rsp], 0

; 694  :     int ret = 1;

  00074	c7 84 24 68 01
	00 00 01 00 00
	00		 mov	 DWORD PTR ret$[rsp], 1

; 695  :     if (   NULL != (hModule = LoadLibrary(_T("ntdll.dll")))
; 696  :         && NULL != (func = (RtlGetVersion_FUNC)GetProcAddress(hModule, "RtlGetVersion"))) {

  0007f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG117427
  00086	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_LoadLibraryA
  0008c	48 89 84 24 58
	01 00 00	 mov	 QWORD PTR hModule$[rsp], rax
  00094	48 83 bc 24 58
	01 00 00 00	 cmp	 QWORD PTR hModule$[rsp], 0
  0009d	74 69		 je	 SHORT $LN2@getRealWin
  0009f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117428
  000a6	48 8b 8c 24 58
	01 00 00	 mov	 rcx, QWORD PTR hModule$[rsp]
  000ae	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetProcAddress
  000b4	48 89 84 24 60
	01 00 00	 mov	 QWORD PTR func$[rsp], rax
  000bc	48 83 bc 24 60
	01 00 00 00	 cmp	 QWORD PTR func$[rsp], 0
  000c5	74 41		 je	 SHORT $LN2@getRealWin

; 697  :         func(&osver);

  000c7	48 8d 4c 24 30	 lea	 rcx, QWORD PTR osver$[rsp]
  000cc	ff 94 24 60 01
	00 00		 call	 QWORD PTR func$[rsp]

; 698  :         *major = osver.dwMajorVersion;

  000d3	48 8b 84 24 90
	01 00 00	 mov	 rax, QWORD PTR major$[rsp]
  000db	8b 4c 24 34	 mov	 ecx, DWORD PTR osver$[rsp+4]
  000df	89 08		 mov	 DWORD PTR [rax], ecx

; 699  :         *minor = osver.dwMinorVersion;

  000e1	48 8b 84 24 98
	01 00 00	 mov	 rax, QWORD PTR minor$[rsp]
  000e9	8b 4c 24 38	 mov	 ecx, DWORD PTR osver$[rsp+8]
  000ed	89 08		 mov	 DWORD PTR [rax], ecx

; 700  :         *build = osver.dwBuildNumber;

  000ef	48 8b 84 24 a0
	01 00 00	 mov	 rax, QWORD PTR build$[rsp]
  000f7	8b 4c 24 3c	 mov	 ecx, DWORD PTR osver$[rsp+12]
  000fb	89 08		 mov	 DWORD PTR [rax], ecx

; 701  :         ret = 0;

  000fd	c7 84 24 68 01
	00 00 00 00 00
	00		 mov	 DWORD PTR ret$[rsp], 0
$LN2@getRealWin:

; 702  :     }
; 703  :     if (hModule) {

  00108	48 83 bc 24 58
	01 00 00 00	 cmp	 QWORD PTR hModule$[rsp], 0
  00111	74 0e		 je	 SHORT $LN3@getRealWin

; 704  :         FreeLibrary(hModule);

  00113	48 8b 8c 24 58
	01 00 00	 mov	 rcx, QWORD PTR hModule$[rsp]
  0011b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_FreeLibrary
$LN3@getRealWin:

; 705  :     }
; 706  :     return ret;

  00121	8b 84 24 68 01
	00 00		 mov	 eax, DWORD PTR ret$[rsp]

; 707  : }

  00128	8b f8		 mov	 edi, eax
  0012a	48 8b cc	 mov	 rcx, rsp
  0012d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?getRealWindowsVersion@@YAHPEAK00@Z$rtcFrameData
  00134	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00139	8b c7		 mov	 eax, edi
  0013b	48 8b 8c 24 78
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00143	48 33 cc	 xor	 rcx, rsp
  00146	e8 00 00 00 00	 call	 __security_check_cookie
  0014b	48 81 c4 80 01
	00 00		 add	 rsp, 384		; 00000180H
  00152	5f		 pop	 rdi
  00153	c3		 ret	 0
?getRealWindowsVersion@@YAHPEAK00@Z ENDP		; getRealWindowsVersion
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\VersionHelpers.h
;	COMDAT ?IsWindows8OrGreater@@YA_NXZ
_TEXT	SEGMENT
?IsWindows8OrGreater@@YA_NXZ PROC			; IsWindows8OrGreater, COMDAT

; 113  : {

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 114  :     return IsWindowsVersionOrGreater(HIBYTE(_WIN32_WINNT_WIN8), LOBYTE(_WIN32_WINNT_WIN8), 0);

  00015	45 33 c0	 xor	 r8d, r8d
  00018	66 ba 02 00	 mov	 dx, 2
  0001c	66 b9 06 00	 mov	 cx, 6
  00020	e8 00 00 00 00	 call	 ?IsWindowsVersionOrGreater@@YA_NGGG@Z ; IsWindowsVersionOrGreater

; 115  : }

  00025	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00029	5f		 pop	 rdi
  0002a	c3		 ret	 0
?IsWindows8OrGreater@@YA_NXZ ENDP			; IsWindows8OrGreater
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\VersionHelpers.h
;	COMDAT ?IsWindowsVersionOrGreater@@YA_NGGG@Z
_TEXT	SEGMENT
osvi$ = 48
dwlConditionMask$ = 344
tv91 = 360
__$ArrayPad$ = 368
wMajorVersion$ = 400
wMinorVersion$ = 408
wServicePackMajor$ = 416
?IsWindowsVersionOrGreater@@YA_NGGG@Z PROC		; IsWindowsVersionOrGreater, COMDAT

; 41   : {

$LN5:
  00000	66 44 89 44 24
	18		 mov	 WORD PTR [rsp+24], r8w
  00006	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  0000b	66 89 4c 24 08	 mov	 WORD PTR [rsp+8], cx
  00010	57		 push	 rdi
  00011	48 81 ec 80 01
	00 00		 sub	 rsp, 384		; 00000180H
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 60 00 00 00	 mov	 ecx, 96			; 00000060H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	0f b7 8c 24 90
	01 00 00	 movzx	 ecx, WORD PTR [rsp+400]
  0002f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00036	48 33 c4	 xor	 rax, rsp
  00039	48 89 84 24 70
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 42   :     OSVERSIONINFOEXW osvi = { sizeof(osvi), 0, 0, 0, 0, {0}, 0, 0 };

  00041	c7 44 24 30 1c
	01 00 00	 mov	 DWORD PTR osvi$[rsp], 284 ; 0000011cH
  00049	c7 44 24 34 00
	00 00 00	 mov	 DWORD PTR osvi$[rsp+4], 0
  00051	c7 44 24 38 00
	00 00 00	 mov	 DWORD PTR osvi$[rsp+8], 0
  00059	c7 44 24 3c 00
	00 00 00	 mov	 DWORD PTR osvi$[rsp+12], 0
  00061	c7 44 24 40 00
	00 00 00	 mov	 DWORD PTR osvi$[rsp+16], 0
  00069	48 8d 44 24 44	 lea	 rax, QWORD PTR osvi$[rsp+20]
  0006e	48 8b f8	 mov	 rdi, rax
  00071	33 c0		 xor	 eax, eax
  00073	b9 00 01 00 00	 mov	 ecx, 256		; 00000100H
  00078	f3 aa		 rep stosb
  0007a	33 c0		 xor	 eax, eax
  0007c	66 89 84 24 44
	01 00 00	 mov	 WORD PTR osvi$[rsp+276], ax
  00084	33 c0		 xor	 eax, eax
  00086	66 89 84 24 46
	01 00 00	 mov	 WORD PTR osvi$[rsp+278], ax
  0008e	48 8d 84 24 48
	01 00 00	 lea	 rax, QWORD PTR osvi$[rsp+280]
  00096	48 8b f8	 mov	 rdi, rax
  00099	33 c0		 xor	 eax, eax
  0009b	b9 04 00 00 00	 mov	 ecx, 4
  000a0	f3 aa		 rep stosb

; 43   :     DWORDLONG        const dwlConditionMask = VerSetConditionMask(

  000a2	41 b0 03	 mov	 r8b, 3
  000a5	ba 02 00 00 00	 mov	 edx, 2
  000aa	33 c9		 xor	 ecx, ecx
  000ac	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_VerSetConditionMask
  000b2	41 b0 03	 mov	 r8b, 3
  000b5	ba 01 00 00 00	 mov	 edx, 1
  000ba	48 8b c8	 mov	 rcx, rax
  000bd	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_VerSetConditionMask
  000c3	41 b0 03	 mov	 r8b, 3
  000c6	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  000cb	48 8b c8	 mov	 rcx, rax
  000ce	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_VerSetConditionMask
  000d4	48 89 84 24 58
	01 00 00	 mov	 QWORD PTR dwlConditionMask$[rsp], rax

; 44   :         VerSetConditionMask(
; 45   :         VerSetConditionMask(
; 46   :             0, VER_MAJORVERSION, VER_GREATER_EQUAL),
; 47   :                VER_MINORVERSION, VER_GREATER_EQUAL),
; 48   :                VER_SERVICEPACKMAJOR, VER_GREATER_EQUAL);
; 49   : 
; 50   :     osvi.dwMajorVersion = wMajorVersion;

  000dc	0f b7 84 24 90
	01 00 00	 movzx	 eax, WORD PTR wMajorVersion$[rsp]
  000e4	89 44 24 34	 mov	 DWORD PTR osvi$[rsp+4], eax

; 51   :     osvi.dwMinorVersion = wMinorVersion;

  000e8	0f b7 84 24 98
	01 00 00	 movzx	 eax, WORD PTR wMinorVersion$[rsp]
  000f0	89 44 24 38	 mov	 DWORD PTR osvi$[rsp+8], eax

; 52   :     osvi.wServicePackMajor = wServicePackMajor;

  000f4	0f b7 84 24 a0
	01 00 00	 movzx	 eax, WORD PTR wServicePackMajor$[rsp]
  000fc	66 89 84 24 44
	01 00 00	 mov	 WORD PTR osvi$[rsp+276], ax

; 53   : 
; 54   :     return VerifyVersionInfoW(&osvi, VER_MAJORVERSION | VER_MINORVERSION | VER_SERVICEPACKMAJOR, dwlConditionMask) != FALSE;

  00104	4c 8b 84 24 58
	01 00 00	 mov	 r8, QWORD PTR dwlConditionMask$[rsp]
  0010c	ba 23 00 00 00	 mov	 edx, 35			; 00000023H
  00111	48 8d 4c 24 30	 lea	 rcx, QWORD PTR osvi$[rsp]
  00116	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_VerifyVersionInfoW
  0011c	85 c0		 test	 eax, eax
  0011e	74 0d		 je	 SHORT $LN3@IsWindowsV
  00120	c7 84 24 68 01
	00 00 01 00 00
	00		 mov	 DWORD PTR tv91[rsp], 1
  0012b	eb 0b		 jmp	 SHORT $LN4@IsWindowsV
$LN3@IsWindowsV:
  0012d	c7 84 24 68 01
	00 00 00 00 00
	00		 mov	 DWORD PTR tv91[rsp], 0
$LN4@IsWindowsV:
  00138	0f b6 84 24 68
	01 00 00	 movzx	 eax, BYTE PTR tv91[rsp]

; 55   : }

  00140	8b f8		 mov	 edi, eax
  00142	48 8b cc	 mov	 rcx, rsp
  00145	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?IsWindowsVersionOrGreater@@YA_NGGG@Z$rtcFrameData
  0014c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00151	8b c7		 mov	 eax, edi
  00153	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0015b	48 33 cc	 xor	 rcx, rsp
  0015e	e8 00 00 00 00	 call	 __security_check_cookie
  00163	48 81 c4 80 01
	00 00		 add	 rsp, 384		; 00000180H
  0016a	5f		 pop	 rdi
  0016b	c3		 ret	 0
?IsWindowsVersionOrGreater@@YA_NGGG@Z ENDP		; IsWindowsVersionOrGreater
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$max@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
_Left$ = 64
_Right$ = 72
??$max@_K@std@@YAAEB_KAEB_K0@Z PROC			; std::max<unsigned __int64>, COMDAT

; 4454 :     const _Ty& _Left, const _Ty& _Right) _NOEXCEPT_COND(noexcept(_Left < _Right)) { // strengthened

$LN13:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4455 :     // return larger of _Left and _Right
; 4456 :     if (_Left < _Right) {

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR _Left$[rsp]
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	0f 83 92 00 00
	00		 jae	 $LN8@max
$LN4@max:

; 4457 :         _STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00039	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  0003e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Left$[rsp]
  00043	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00046	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00049	72 02		 jb	 SHORT $LN7@max
  0004b	eb 6d		 jmp	 SHORT $LN10@max
$LN7@max:
  0004d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00054	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00059	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00060	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00065	45 33 c9	 xor	 r9d, r9d
  00068	41 b8 69 11 00
	00		 mov	 r8d, 4457		; 00001169H
  0006e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00075	b9 02 00 00 00	 mov	 ecx, 2
  0007a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00080	90		 npad	 1
  00081	83 f8 01	 cmp	 eax, 1
  00084	75 03		 jne	 SHORT $LN12@max
  00086	cc		 int	 3
  00087	33 c0		 xor	 eax, eax
$LN12@max:
  00089	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00092	41 b9 69 11 00
	00		 mov	 r9d, 4457		; 00001169H
  00098	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0009f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  000a6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  000ad	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000b3	90		 npad	 1
  000b4	33 c0		 xor	 eax, eax
  000b6	85 c0		 test	 eax, eax
  000b8	75 93		 jne	 SHORT $LN7@max
$LN10@max:
  000ba	33 c0		 xor	 eax, eax
  000bc	85 c0		 test	 eax, eax
  000be	0f 85 75 ff ff
	ff		 jne	 $LN4@max

; 4458 :         return _Right;

  000c4	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  000c9	eb 05		 jmp	 SHORT $LN1@max
$LN8@max:

; 4459 :     }
; 4460 : 
; 4461 :     return _Left;

  000cb	48 8b 44 24 40	 mov	 rax, QWORD PTR _Left$[rsp]
$LN1@max:

; 4462 : }

  000d0	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
??$max@_K@std@@YAAEB_KAEB_K0@Z ENDP			; std::max<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 72
$T3 = 80
$T4 = 104
$T5 = 112
$T6 = 136
$T7 = 144
$T8 = 168
tv68 = 192
tv141 = 200
tv149 = 208
tv143 = 216
tv150 = 224
tv145 = 232
tv151 = 240
tv147 = 248
v1$ = 272
v2$ = 280
??$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z PROC ; vector_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 141  : void vector_cat(vector<T>& v1, const vector<T>& v2) {

$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 00 01
	00 00		 sub	 rsp, 256		; 00000100H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 10
	01 00 00	 mov	 rcx, QWORD PTR [rsp+272]

; 142  :     if (v2.size()) {

  00029	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR v2$[rsp]
  00031	e8 00 00 00 00	 call	 ?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
  00036	48 85 c0	 test	 rax, rax
  00039	0f 84 1c 01 00
	00		 je	 $LN2@vector_cat

; 143  :         v1.insert(v1.end(), v2.begin(), v2.end());

  0003f	48 8d 44 24 30	 lea	 rax, QWORD PTR $T1[rsp]
  00044	48 89 44 24 48	 mov	 QWORD PTR $T2[rsp], rax
  00049	48 8d 44 24 50	 lea	 rax, QWORD PTR $T3[rsp]
  0004e	48 89 44 24 68	 mov	 QWORD PTR $T4[rsp], rax
  00053	48 8d 44 24 70	 lea	 rax, QWORD PTR $T5[rsp]
  00058	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR $T6[rsp], rax
  00060	48 8b 54 24 48	 mov	 rdx, QWORD PTR $T2[rsp]
  00065	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR v2$[rsp]
  0006d	e8 00 00 00 00	 call	 ?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
  00072	48 89 84 24 c0
	00 00 00	 mov	 QWORD PTR tv68[rsp], rax
  0007a	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR tv68[rsp]
  00082	48 89 84 24 c8
	00 00 00	 mov	 QWORD PTR tv141[rsp], rax
  0008a	48 8b 54 24 68	 mov	 rdx, QWORD PTR $T4[rsp]
  0008f	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR v2$[rsp]
  00097	e8 00 00 00 00	 call	 ?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
  0009c	48 89 84 24 d0
	00 00 00	 mov	 QWORD PTR tv149[rsp], rax
  000a4	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR tv149[rsp]
  000ac	48 89 84 24 d8
	00 00 00	 mov	 QWORD PTR tv143[rsp], rax
  000b4	48 8d 94 24 90
	00 00 00	 lea	 rdx, QWORD PTR $T7[rsp]
  000bc	48 8b 8c 24 10
	01 00 00	 mov	 rcx, QWORD PTR v1$[rsp]
  000c4	e8 00 00 00 00	 call	 ?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
  000c9	48 89 84 24 e0
	00 00 00	 mov	 QWORD PTR tv150[rsp], rax
  000d1	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR tv150[rsp]
  000d9	48 89 84 24 e8
	00 00 00	 mov	 QWORD PTR tv145[rsp], rax
  000e1	48 8b 94 24 e8
	00 00 00	 mov	 rdx, QWORD PTR tv145[rsp]
  000e9	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR $T6[rsp]
  000f1	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
  000f6	48 89 84 24 f0
	00 00 00	 mov	 QWORD PTR tv151[rsp], rax
  000fe	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR tv151[rsp]
  00106	48 89 84 24 f8
	00 00 00	 mov	 QWORD PTR tv147[rsp], rax
  0010e	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR tv141[rsp]
  00116	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0011b	4c 8b 8c 24 d8
	00 00 00	 mov	 r9, QWORD PTR tv143[rsp]
  00123	4c 8b 84 24 f8
	00 00 00	 mov	 r8, QWORD PTR tv147[rsp]
  0012b	48 8d 94 24 a8
	00 00 00	 lea	 rdx, QWORD PTR $T8[rsp]
  00133	48 8b 8c 24 10
	01 00 00	 mov	 rcx, QWORD PTR v1$[rsp]
  0013b	e8 00 00 00 00	 call	 ??$insert@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@X@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@1@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::insert<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,void>
  00140	48 8d 8c 24 a8
	00 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  00148	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0014d	90		 npad	 1
  0014e	48 8d 8c 24 90
	00 00 00	 lea	 rcx, QWORD PTR $T7[rsp]
  00156	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
$LN2@vector_cat:

; 144  :     }
; 145  : }

  0015b	48 81 c4 00 01
	00 00		 add	 rsp, 256		; 00000100H
  00162	5f		 pop	 rdi
  00163	c3		 ret	 0
??$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z ENDP ; vector_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 72
$T3 = 80
$T4 = 104
$T5 = 112
$T6 = 136
$T7 = 144
$T8 = 168
tv68 = 192
tv141 = 200
tv149 = 208
tv143 = 216
tv150 = 224
tv145 = 232
tv151 = 240
tv147 = 248
v1$ = 272
v2$ = 280
?dtor$0@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA PROC ; `vector_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 48	 mov	 rcx, QWORD PTR $T2[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA ENDP ; `vector_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 72
$T3 = 80
$T4 = 104
$T5 = 112
$T6 = 136
$T7 = 144
$T8 = 168
tv68 = 192
tv141 = 200
tv149 = 208
tv143 = 216
tv150 = 224
tv145 = 232
tv151 = 240
tv147 = 248
v1$ = 272
v2$ = 280
?dtor$1@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA PROC ; `vector_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 68	 mov	 rcx, QWORD PTR $T4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA ENDP ; `vector_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 72
$T3 = 80
$T4 = 104
$T5 = 112
$T6 = 136
$T7 = 144
$T8 = 168
tv68 = 192
tv141 = 200
tv149 = 208
tv143 = 216
tv150 = 224
tv145 = 232
tv151 = 240
tv147 = 248
v1$ = 272
v2$ = 280
?dtor$2@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA PROC ; `vector_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d 90 00
	00 00		 lea	 rcx, QWORD PTR $T7[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$2@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA ENDP ; `vector_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 72
$T3 = 80
$T4 = 104
$T5 = 112
$T6 = 136
$T7 = 144
$T8 = 168
tv68 = 192
tv141 = 200
tv149 = 208
tv143 = 216
tv150 = 224
tv145 = 232
tv151 = 240
tv147 = 248
v1$ = 272
v2$ = 280
?dtor$3@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA PROC ; `vector_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$3
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR $T6[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$3@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA ENDP ; `vector_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 72
$T3 = 80
$T4 = 104
$T5 = 112
$T6 = 136
$T7 = 144
$T8 = 168
tv68 = 192
tv141 = 200
tv149 = 208
tv143 = 216
tv150 = 224
tv145 = 232
tv151 = 240
tv147 = 248
v1$ = 272
v2$ = 280
?dtor$0@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA PROC ; `vector_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 48	 mov	 rcx, QWORD PTR $T2[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA ENDP ; `vector_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 72
$T3 = 80
$T4 = 104
$T5 = 112
$T6 = 136
$T7 = 144
$T8 = 168
tv68 = 192
tv141 = 200
tv149 = 208
tv143 = 216
tv150 = 224
tv145 = 232
tv151 = 240
tv147 = 248
v1$ = 272
v2$ = 280
?dtor$1@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA PROC ; `vector_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 68	 mov	 rcx, QWORD PTR $T4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA ENDP ; `vector_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 72
$T3 = 80
$T4 = 104
$T5 = 112
$T6 = 136
$T7 = 144
$T8 = 168
tv68 = 192
tv141 = 200
tv149 = 208
tv143 = 216
tv150 = 224
tv145 = 232
tv151 = 240
tv147 = 248
v1$ = 272
v2$ = 280
?dtor$2@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA PROC ; `vector_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d 90 00
	00 00		 lea	 rcx, QWORD PTR $T7[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$2@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA ENDP ; `vector_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 72
$T3 = 80
$T4 = 104
$T5 = 112
$T6 = 136
$T7 = 144
$T8 = 168
tv68 = 192
tv141 = 200
tv149 = 208
tv143 = 216
tv150 = 224
tv145 = 232
tv151 = 240
tv147 = 248
v1$ = 272
v2$ = 280
?dtor$3@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA PROC ; `vector_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$3
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR $T6[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$3@?0???$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z@4HA ENDP ; `vector_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_end@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBAPEBQEBDXZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_end@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBAPEBQEBDXZ PROC ; std::vector<char const *,std::allocator<char const *> >::_Unchecked_end, COMDAT

; 1427 :     const_pointer _Unchecked_end() const noexcept { // return pointer for end of nonmutable sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1428 :         return _Mypair._Myval2._Mylast;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 1429 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_end@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBAPEBQEBDXZ ENDP ; std::vector<char const *,std::allocator<char const *> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBAPEBQEBDXZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_begin@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBAPEBQEBDXZ PROC ; std::vector<char const *,std::allocator<char const *> >::_Unchecked_begin, COMDAT

; 1419 :     const_pointer _Unchecked_begin() const noexcept { // return pointer for beginning of nonmutable sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1420 :         return _Mypair._Myval2._Myfirst;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1421 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_begin@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBAPEBQEBDXZ ENDP ; std::vector<char const *,std::allocator<char const *> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$make_pair@HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
_TEXT	SEGMENT
$T1 = 32
tv66 = 40
__$ReturnUdt$ = 64
_Val1$ = 72
_Val2$ = 80
??$make_pair@HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z PROC ; std::make_pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>, COMDAT

; 309  :             is_nothrow_constructible_v<_Unrefwrap_t<_Ty2>, _Ty2>) { // strengthened

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00028	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 310  :     // return pair composed from arguments
; 311  :     using _Mypair = pair<_Unrefwrap_t<_Ty1>, _Unrefwrap_t<_Ty2>>;
; 312  :     return _Mypair(_STD forward<_Ty1>(_Val1), _STD forward<_Ty2>(_Val2));

  00030	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00035	e8 00 00 00 00	 call	 ??$forward@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>
  0003a	48 89 44 24 28	 mov	 QWORD PTR tv66[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Val1$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00049	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv66[rsp]
  0004e	4c 8b c1	 mov	 r8, rcx
  00051	48 8b d0	 mov	 rdx, rax
  00054	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00059	e8 00 00 00 00	 call	 ??$?0HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > ><int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &,0>
  0005e	90		 npad	 1
  0005f	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  00063	83 c8 01	 or	 eax, 1
  00066	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  0006a	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 313  : }

  0006f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00073	5f		 pop	 rdi
  00074	c3		 ret	 0
  00075	cc		 int	 3
??$make_pair@HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ENDP ; std::make_pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv66 = 40
__$ReturnUdt$ = 64
_Val1$ = 72
_Val2$ = 80
?dtor$0@?0???$make_pair@HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA PROC ; `std::make_pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$make_pair@HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA ENDP ; `std::make_pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv66 = 40
__$ReturnUdt$ = 64
_Val1$ = 72
_Val2$ = 80
?dtor$0@?0???$make_pair@HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA PROC ; `std::make_pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$make_pair@HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA ENDP ; `std::make_pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$make_pair@HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z
_TEXT	SEGMENT
$T1 = 32
tv66 = 40
__$ReturnUdt$ = 64
_Val1$ = 72
_Val2$ = 80
??$make_pair@HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z PROC ; std::make_pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>, COMDAT

; 309  :             is_nothrow_constructible_v<_Unrefwrap_t<_Ty2>, _Ty2>) { // strengthened

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00028	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 310  :     // return pair composed from arguments
; 311  :     using _Mypair = pair<_Unrefwrap_t<_Ty1>, _Unrefwrap_t<_Ty2>>;
; 312  :     return _Mypair(_STD forward<_Ty1>(_Val1), _STD forward<_Ty2>(_Val2));

  00030	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00035	e8 00 00 00 00	 call	 ??$forward@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEBV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
  0003a	48 89 44 24 28	 mov	 QWORD PTR tv66[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Val1$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00049	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv66[rsp]
  0004e	4c 8b c1	 mov	 r8, rcx
  00051	48 8b d0	 mov	 rdx, rax
  00054	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00059	e8 00 00 00 00	 call	 ??$?0HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$0A@@?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > ><int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &,0>
  0005e	90		 npad	 1
  0005f	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  00063	83 c8 01	 or	 eax, 1
  00066	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  0006a	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 313  : }

  0006f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00073	5f		 pop	 rdi
  00074	c3		 ret	 0
  00075	cc		 int	 3
??$make_pair@HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ENDP ; std::make_pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv66 = 40
__$ReturnUdt$ = 64
_Val1$ = 72
_Val2$ = 80
?dtor$0@?0???$make_pair@HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA PROC ; `std::make_pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$make_pair@HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA ENDP ; `std::make_pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv66 = 40
__$ReturnUdt$ = 64
_Val1$ = 72
_Val2$ = 80
?dtor$0@?0???$make_pair@HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA PROC ; `std::make_pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$make_pair@HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z@4HA ENDP ; `std::make_pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ PROC ; std::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::~pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0002f	90		 npad	 1
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
??1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ ENDP ; std::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::~pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ@4HA PROC ; `std::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::~pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::~pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ@4HA PROC ; `std::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::~pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::~pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$make_pair@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
$T1 = 32
tv66 = 40
__$ReturnUdt$ = 64
_Val1$ = 72
_Val2$ = 80
??$make_pair@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::make_pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT

; 309  :             is_nothrow_constructible_v<_Unrefwrap_t<_Ty2>, _Ty2>) { // strengthened

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00028	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 310  :     // return pair composed from arguments
; 311  :     using _Mypair = pair<_Unrefwrap_t<_Ty1>, _Unrefwrap_t<_Ty2>>;
; 312  :     return _Mypair(_STD forward<_Ty1>(_Val1), _STD forward<_Ty2>(_Val2));

  00030	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00035	e8 00 00 00 00	 call	 ??$forward@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  0003a	48 89 44 24 28	 mov	 QWORD PTR tv66[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Val1$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00049	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv66[rsp]
  0004e	4c 8b c1	 mov	 r8, rcx
  00051	48 8b d0	 mov	 rdx, rax
  00054	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00059	e8 00 00 00 00	 call	 ??$?0HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0>
  0005e	90		 npad	 1
  0005f	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  00063	83 c8 01	 or	 eax, 1
  00066	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  0006a	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 313  : }

  0006f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00073	5f		 pop	 rdi
  00074	c3		 ret	 0
  00075	cc		 int	 3
??$make_pair@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::make_pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv66 = 40
__$ReturnUdt$ = 64
_Val1$ = 72
_Val2$ = 80
?dtor$0@?0???$make_pair@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA PROC ; `std::make_pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$make_pair@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA ENDP ; `std::make_pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv66 = 40
__$ReturnUdt$ = 64
_Val1$ = 72
_Val2$ = 80
?dtor$0@?0???$make_pair@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA PROC ; `std::make_pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$make_pair@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA ENDP ; `std::make_pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$make_pair@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
$T1 = 32
tv66 = 40
__$ReturnUdt$ = 64
_Val1$ = 72
_Val2$ = 80
??$make_pair@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::make_pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT

; 309  :             is_nothrow_constructible_v<_Unrefwrap_t<_Ty2>, _Ty2>) { // strengthened

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00028	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 310  :     // return pair composed from arguments
; 311  :     using _Mypair = pair<_Unrefwrap_t<_Ty1>, _Unrefwrap_t<_Ty2>>;
; 312  :     return _Mypair(_STD forward<_Ty1>(_Val1), _STD forward<_Ty2>(_Val2));

  00030	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00035	e8 00 00 00 00	 call	 ??$forward@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
  0003a	48 89 44 24 28	 mov	 QWORD PTR tv66[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Val1$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00049	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv66[rsp]
  0004e	4c 8b c1	 mov	 r8, rcx
  00051	48 8b d0	 mov	 rdx, rax
  00054	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00059	e8 00 00 00 00	 call	 ??$?0HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > ><int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,0>
  0005e	90		 npad	 1
  0005f	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  00063	83 c8 01	 or	 eax, 1
  00066	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  0006a	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 313  : }

  0006f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00073	5f		 pop	 rdi
  00074	c3		 ret	 0
  00075	cc		 int	 3
??$make_pair@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::make_pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv66 = 40
__$ReturnUdt$ = 64
_Val1$ = 72
_Val2$ = 80
?dtor$0@?0???$make_pair@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA PROC ; `std::make_pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$make_pair@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA ENDP ; `std::make_pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv66 = 40
__$ReturnUdt$ = 64
_Val1$ = 72
_Val2$ = 80
?dtor$0@?0???$make_pair@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA PROC ; `std::make_pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$make_pair@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@4HA ENDP ; `std::make_pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ PROC ; std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0002f	90		 npad	 1
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ ENDP ; std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ@4HA PROC ; `std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ@4HA PROC ; `std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
$T1 = 32
$T2 = 80
tv79 = 88
tv78 = 96
tv75 = 104
__$ArrayPad$ = 112
path$ = 144
?PathRootExists@@YA_NPEB_W@Z PROC			; PathRootExists

; 436  : static bool PathRootExists(const WCHAR *path) {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  00024	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002b	48 33 c4	 xor	 rax, rsp
  0002e	48 89 44 24 70	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 437  :     if (path == nullptr)

  00033	48 83 bc 24 90
	00 00 00 00	 cmp	 QWORD PTR path$[rsp], 0
  0003c	75 04		 jne	 SHORT $LN2@PathRootEx

; 438  :         return false;

  0003e	32 c0		 xor	 al, al
  00040	eb 62		 jmp	 SHORT $LN1@PathRootEx
$LN2@PathRootEx:

; 439  :     return PathIsDirectoryW(PathGetRoot(path).c_str()) != 0;

  00042	48 8b 94 24 90
	00 00 00	 mov	 rdx, QWORD PTR path$[rsp]
  0004a	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0004f	e8 00 00 00 00	 call	 ?PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z ; PathGetRoot
  00054	48 89 44 24 58	 mov	 QWORD PTR tv79[rsp], rax
  00059	48 8b 44 24 58	 mov	 rax, QWORD PTR tv79[rsp]
  0005e	48 89 44 24 60	 mov	 QWORD PTR tv78[rsp], rax
  00063	48 8b 4c 24 60	 mov	 rcx, QWORD PTR tv78[rsp]
  00068	e8 00 00 00 00	 call	 ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
  0006d	48 8b c8	 mov	 rcx, rax
  00070	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathIsDirectoryW
  00076	85 c0		 test	 eax, eax
  00078	74 0a		 je	 SHORT $LN4@PathRootEx
  0007a	c7 44 24 68 01
	00 00 00	 mov	 DWORD PTR tv75[rsp], 1
  00082	eb 08		 jmp	 SHORT $LN5@PathRootEx
$LN4@PathRootEx:
  00084	c7 44 24 68 00
	00 00 00	 mov	 DWORD PTR tv75[rsp], 0
$LN5@PathRootEx:
  0008c	0f b6 44 24 68	 movzx	 eax, BYTE PTR tv75[rsp]
  00091	88 44 24 50	 mov	 BYTE PTR $T2[rsp], al
  00095	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0009a	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0009f	0f b6 44 24 50	 movzx	 eax, BYTE PTR $T2[rsp]
$LN1@PathRootEx:

; 440  : }

  000a4	48 8b 4c 24 70	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000a9	48 33 cc	 xor	 rcx, rsp
  000ac	e8 00 00 00 00	 call	 __security_check_cookie
  000b1	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  000b8	5f		 pop	 rdi
  000b9	c3		 ret	 0
?PathRootExists@@YA_NPEB_W@Z ENDP			; PathRootExists
_TEXT	ENDS
text$x	SEGMENT
$T1 = 32
$T2 = 80
tv79 = 88
tv78 = 96
tv75 = 104
__$ArrayPad$ = 112
path$ = 144
?dtor$0@?0??PathRootExists@@YA_NPEB_W@Z@4HA PROC	; `PathRootExists'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??PathRootExists@@YA_NPEB_W@Z@4HA ENDP	; `PathRootExists'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
$T1 = 32
$T2 = 80
tv79 = 88
tv78 = 96
tv75 = 104
__$ArrayPad$ = 112
path$ = 144
?dtor$0@?0??PathRootExists@@YA_NPEB_W@Z@4HA PROC	; `PathRootExists'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??PathRootExists@@YA_NPEB_W@Z@4HA ENDP	; `PathRootExists'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
$T1 = 32
$T2 = 80
tv79 = 88
tv78 = 96
tv75 = 104
__$ArrayPad$ = 112
path$ = 144
?PathRootExists@@YA_NPEBD@Z PROC			; PathRootExists

; 431  : static bool PathRootExists(const char *path) {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  00024	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002b	48 33 c4	 xor	 rax, rsp
  0002e	48 89 44 24 70	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 432  :     if (path == nullptr)

  00033	48 83 bc 24 90
	00 00 00 00	 cmp	 QWORD PTR path$[rsp], 0
  0003c	75 04		 jne	 SHORT $LN2@PathRootEx

; 433  :         return false;

  0003e	32 c0		 xor	 al, al
  00040	eb 62		 jmp	 SHORT $LN1@PathRootEx
$LN2@PathRootEx:

; 434  :     return PathIsDirectoryA(PathGetRoot(path).c_str()) != 0;

  00042	48 8b 94 24 90
	00 00 00	 mov	 rdx, QWORD PTR path$[rsp]
  0004a	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0004f	e8 00 00 00 00	 call	 ?PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ; PathGetRoot
  00054	48 89 44 24 58	 mov	 QWORD PTR tv79[rsp], rax
  00059	48 8b 44 24 58	 mov	 rax, QWORD PTR tv79[rsp]
  0005e	48 89 44 24 60	 mov	 QWORD PTR tv78[rsp], rax
  00063	48 8b 4c 24 60	 mov	 rcx, QWORD PTR tv78[rsp]
  00068	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0006d	48 8b c8	 mov	 rcx, rax
  00070	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathIsDirectoryA
  00076	85 c0		 test	 eax, eax
  00078	74 0a		 je	 SHORT $LN4@PathRootEx
  0007a	c7 44 24 68 01
	00 00 00	 mov	 DWORD PTR tv75[rsp], 1
  00082	eb 08		 jmp	 SHORT $LN5@PathRootEx
$LN4@PathRootEx:
  00084	c7 44 24 68 00
	00 00 00	 mov	 DWORD PTR tv75[rsp], 0
$LN5@PathRootEx:
  0008c	0f b6 44 24 68	 movzx	 eax, BYTE PTR tv75[rsp]
  00091	88 44 24 50	 mov	 BYTE PTR $T2[rsp], al
  00095	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0009a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0009f	0f b6 44 24 50	 movzx	 eax, BYTE PTR $T2[rsp]
$LN1@PathRootEx:

; 435  : }

  000a4	48 8b 4c 24 70	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000a9	48 33 cc	 xor	 rcx, rsp
  000ac	e8 00 00 00 00	 call	 __security_check_cookie
  000b1	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  000b8	5f		 pop	 rdi
  000b9	c3		 ret	 0
?PathRootExists@@YA_NPEBD@Z ENDP			; PathRootExists
_TEXT	ENDS
text$x	SEGMENT
$T1 = 32
$T2 = 80
tv79 = 88
tv78 = 96
tv75 = 104
__$ArrayPad$ = 112
path$ = 144
?dtor$0@?0??PathRootExists@@YA_NPEBD@Z@4HA PROC		; `PathRootExists'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??PathRootExists@@YA_NPEBD@Z@4HA ENDP		; `PathRootExists'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
$T1 = 32
$T2 = 80
tv79 = 88
tv78 = 96
tv75 = 104
__$ArrayPad$ = 112
path$ = 144
?dtor$0@?0??PathRootExists@@YA_NPEBD@Z@4HA PROC		; `PathRootExists'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??PathRootExists@@YA_NPEBD@Z@4HA ENDP		; `PathRootExists'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
fullpath$ = 40
buffer$ = 104
$T5 = 160
$T6 = 162
$T7 = 164
tv71 = 168
tv82 = 176
tv85 = 184
__$ArrayPad$ = 192
__$ReturnUdt$ = 224
path$ = 232
?PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z PROC ; PathGetRoot

; 422  : std::wstring PathGetRoot(const WCHAR *path) {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec d0 00
	00 00		 sub	 rsp, 208		; 000000d0H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+224]
  00029	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00030	48 33 c4	 xor	 rax, rsp
  00033	48 89 84 24 c0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003b	c7 84 24 a4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T7[rsp], 0

; 423  :     auto fullpath = GetFullPath(path);

  00046	48 8b 94 24 e8
	00 00 00	 mov	 rdx, QWORD PTR path$[rsp]
  0004e	48 8d 4c 24 28	 lea	 rcx, QWORD PTR fullpath$[rsp]
  00053	e8 00 00 00 00	 call	 ?GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z ; GetFullPath
  00058	90		 npad	 1

; 424  :     std::vector<WCHAR> buffer(fullpath.length() + 1, 0);

  00059	33 c0		 xor	 eax, eax
  0005b	66 89 84 24 a2
	00 00 00	 mov	 WORD PTR $T6[rsp], ax
  00063	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR $T5[rsp]
  0006b	e8 00 00 00 00	 call	 ??0?$allocator@_W@std@@QEAA@XZ ; std::allocator<wchar_t>::allocator<wchar_t>
  00070	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR tv71[rsp], rax
  00078	48 8d 4c 24 28	 lea	 rcx, QWORD PTR fullpath$[rsp]
  0007d	e8 00 00 00 00	 call	 ?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length
  00082	48 ff c0	 inc	 rax
  00085	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR tv71[rsp]
  0008d	4c 8b c9	 mov	 r9, rcx
  00090	4c 8d 84 24 a2
	00 00 00	 lea	 r8, QWORD PTR $T6[rsp]
  00098	48 8b d0	 mov	 rdx, rax
  0009b	48 8d 4c 24 68	 lea	 rcx, QWORD PTR buffer$[rsp]
  000a0	e8 00 00 00 00	 call	 ??0?$vector@_WV?$allocator@_W@std@@@std@@QEAA@_KAEB_WAEBV?$allocator@_W@1@@Z ; std::vector<wchar_t,std::allocator<wchar_t> >::vector<wchar_t,std::allocator<wchar_t> >
  000a5	90		 npad	 1

; 425  :     memcpy(buffer.data(), fullpath.c_str(), fullpath.length() * sizeof(fullpath[0]));

  000a6	48 8d 4c 24 28	 lea	 rcx, QWORD PTR fullpath$[rsp]
  000ab	e8 00 00 00 00	 call	 ?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length
  000b0	48 d1 e0	 shl	 rax, 1
  000b3	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR tv82[rsp], rax
  000bb	48 8d 4c 24 28	 lea	 rcx, QWORD PTR fullpath$[rsp]
  000c0	e8 00 00 00 00	 call	 ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
  000c5	48 89 84 24 b8
	00 00 00	 mov	 QWORD PTR tv85[rsp], rax
  000cd	48 8d 4c 24 68	 lea	 rcx, QWORD PTR buffer$[rsp]
  000d2	e8 00 00 00 00	 call	 ?data@?$vector@_WV?$allocator@_W@std@@@std@@QEAAPEA_WXZ ; std::vector<wchar_t,std::allocator<wchar_t> >::data
  000d7	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR tv82[rsp]
  000df	4c 8b c1	 mov	 r8, rcx
  000e2	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR tv85[rsp]
  000ea	48 8b d1	 mov	 rdx, rcx
  000ed	48 8b c8	 mov	 rcx, rax
  000f0	e8 00 00 00 00	 call	 memcpy

; 426  :     PathStripToRootW(buffer.data());

  000f5	48 8d 4c 24 68	 lea	 rcx, QWORD PTR buffer$[rsp]
  000fa	e8 00 00 00 00	 call	 ?data@?$vector@_WV?$allocator@_W@std@@@std@@QEAAPEA_WXZ ; std::vector<wchar_t,std::allocator<wchar_t> >::data
  000ff	48 8b c8	 mov	 rcx, rax
  00102	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathStripToRootW

; 427  :     return buffer.data();

  00108	48 8d 4c 24 68	 lea	 rcx, QWORD PTR buffer$[rsp]
  0010d	e8 00 00 00 00	 call	 ?data@?$vector@_WV?$allocator@_W@std@@@std@@QEAAPEA_WXZ ; std::vector<wchar_t,std::allocator<wchar_t> >::data
  00112	48 8b d0	 mov	 rdx, rax
  00115	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0011d	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00122	8b 84 24 a4 00
	00 00		 mov	 eax, DWORD PTR $T7[rsp]
  00129	83 c8 01	 or	 eax, 1
  0012c	89 84 24 a4 00
	00 00		 mov	 DWORD PTR $T7[rsp], eax
  00133	48 8d 4c 24 68	 lea	 rcx, QWORD PTR buffer$[rsp]
  00138	e8 00 00 00 00	 call	 ??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ ; std::vector<wchar_t,std::allocator<wchar_t> >::~vector<wchar_t,std::allocator<wchar_t> >
  0013d	90		 npad	 1
  0013e	48 8d 4c 24 28	 lea	 rcx, QWORD PTR fullpath$[rsp]
  00143	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00148	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 428  : }

  00150	48 8b f8	 mov	 rdi, rax
  00153	48 8b cc	 mov	 rcx, rsp
  00156	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z$rtcFrameData
  0015d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00162	48 8b c7	 mov	 rax, rdi
  00165	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0016d	48 33 cc	 xor	 rcx, rsp
  00170	e8 00 00 00 00	 call	 __security_check_cookie
  00175	48 81 c4 d0 00
	00 00		 add	 rsp, 208		; 000000d0H
  0017c	5f		 pop	 rdi
  0017d	c3		 ret	 0
  0017e	cc		 int	 3
?PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z ENDP ; PathGetRoot
_TEXT	ENDS
text$x	SEGMENT
fullpath$ = 40
buffer$ = 104
$T5 = 160
$T6 = 162
$T7 = 164
tv71 = 168
tv82 = 176
tv85 = 184
__$ArrayPad$ = 192
__$ReturnUdt$ = 224
path$ = 232
?dtor$0@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA PROC ; `PathGetRoot'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR fullpath$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA ENDP ; `PathGetRoot'::`1'::dtor$0
fullpath$ = 40
buffer$ = 104
$T5 = 160
$T6 = 162
$T7 = 164
tv71 = 168
tv82 = 176
tv85 = 184
__$ArrayPad$ = 192
__$ReturnUdt$ = 224
path$ = 232
?dtor$1@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA PROC ; `PathGetRoot'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 68	 lea	 rcx, QWORD PTR buffer$[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ ; std::vector<wchar_t,std::allocator<wchar_t> >::~vector<wchar_t,std::allocator<wchar_t> >
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA ENDP ; `PathGetRoot'::`1'::dtor$1
fullpath$ = 40
buffer$ = 104
$T5 = 160
$T6 = 162
$T7 = 164
tv71 = 168
tv82 = 176
tv85 = 184
__$ArrayPad$ = 192
__$ReturnUdt$ = 224
path$ = 232
?dtor$2@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA PROC ; `PathGetRoot'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	8b 85 a4 00 00
	00		 mov	 eax, DWORD PTR $T7[rbp]
  0005f	83 e0 01	 and	 eax, 1
  00062	85 c0		 test	 eax, eax
  00064	74 13		 je	 SHORT $LN6@dtor$2
  00066	83 a5 a4 00 00
	00 fe		 and	 DWORD PTR $T7[rbp], -2
  0006d	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00074	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN6@dtor$2:
  00079	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0007d	5f		 pop	 rdi
  0007e	5d		 pop	 rbp
  0007f	c3		 ret	 0
?dtor$2@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA ENDP ; `PathGetRoot'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
fullpath$ = 40
buffer$ = 104
$T5 = 160
$T6 = 162
$T7 = 164
tv71 = 168
tv82 = 176
tv85 = 184
__$ArrayPad$ = 192
__$ReturnUdt$ = 224
path$ = 232
?dtor$0@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA PROC ; `PathGetRoot'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR fullpath$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA ENDP ; `PathGetRoot'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
fullpath$ = 40
buffer$ = 104
$T5 = 160
$T6 = 162
$T7 = 164
tv71 = 168
tv82 = 176
tv85 = 184
__$ArrayPad$ = 192
__$ReturnUdt$ = 224
path$ = 232
?dtor$1@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA PROC ; `PathGetRoot'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 68	 lea	 rcx, QWORD PTR buffer$[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ ; std::vector<wchar_t,std::allocator<wchar_t> >::~vector<wchar_t,std::allocator<wchar_t> >
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA ENDP ; `PathGetRoot'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
fullpath$ = 40
buffer$ = 104
$T5 = 160
$T6 = 162
$T7 = 164
tv71 = 168
tv82 = 176
tv85 = 184
__$ArrayPad$ = 192
__$ReturnUdt$ = 224
path$ = 232
?dtor$2@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA PROC ; `PathGetRoot'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	8b 85 a4 00 00
	00		 mov	 eax, DWORD PTR $T7[rbp]
  0005f	83 e0 01	 and	 eax, 1
  00062	85 c0		 test	 eax, eax
  00064	74 13		 je	 SHORT $LN6@dtor$2
  00066	83 a5 a4 00 00
	00 fe		 and	 DWORD PTR $T7[rbp], -2
  0006d	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00074	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN6@dtor$2:
  00079	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0007d	5f		 pop	 rdi
  0007e	5d		 pop	 rbp
  0007f	c3		 ret	 0
?dtor$2@?0??PathGetRoot@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA ENDP ; `PathGetRoot'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
fullpath$ = 40
buffer$ = 104
$T5 = 160
$T6 = 161
$T7 = 164
tv71 = 168
tv81 = 176
tv84 = 184
__$ArrayPad$ = 192
__$ReturnUdt$ = 224
path$ = 232
?PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z PROC ; PathGetRoot

; 415  : std::string PathGetRoot(const char *path) {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec d0 00
	00 00		 sub	 rsp, 208		; 000000d0H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+224]
  00029	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00030	48 33 c4	 xor	 rax, rsp
  00033	48 89 84 24 c0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003b	c7 84 24 a4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T7[rsp], 0

; 416  :     auto fullpath = GetFullPath(path);

  00046	48 8b 94 24 e8
	00 00 00	 mov	 rdx, QWORD PTR path$[rsp]
  0004e	48 8d 4c 24 28	 lea	 rcx, QWORD PTR fullpath$[rsp]
  00053	e8 00 00 00 00	 call	 ?GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ; GetFullPath
  00058	90		 npad	 1

; 417  :     std::vector<char> buffer(fullpath.length() + 1, 0);

  00059	c6 84 24 a1 00
	00 00 00	 mov	 BYTE PTR $T6[rsp], 0
  00061	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR $T5[rsp]
  00069	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@XZ ; std::allocator<char>::allocator<char>
  0006e	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR tv71[rsp], rax
  00076	48 8d 4c 24 28	 lea	 rcx, QWORD PTR fullpath$[rsp]
  0007b	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
  00080	48 ff c0	 inc	 rax
  00083	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR tv71[rsp]
  0008b	4c 8b c9	 mov	 r9, rcx
  0008e	4c 8d 84 24 a1
	00 00 00	 lea	 r8, QWORD PTR $T6[rsp]
  00096	48 8b d0	 mov	 rdx, rax
  00099	48 8d 4c 24 68	 lea	 rcx, QWORD PTR buffer$[rsp]
  0009e	e8 00 00 00 00	 call	 ??0?$vector@DV?$allocator@D@std@@@std@@QEAA@_KAEBDAEBV?$allocator@D@1@@Z ; std::vector<char,std::allocator<char> >::vector<char,std::allocator<char> >
  000a3	90		 npad	 1

; 418  :     memcpy(buffer.data(), fullpath.c_str(), fullpath.length() * sizeof(fullpath[0]));

  000a4	48 8d 4c 24 28	 lea	 rcx, QWORD PTR fullpath$[rsp]
  000a9	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
  000ae	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR tv81[rsp], rax
  000b6	48 8d 4c 24 28	 lea	 rcx, QWORD PTR fullpath$[rsp]
  000bb	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  000c0	48 89 84 24 b8
	00 00 00	 mov	 QWORD PTR tv84[rsp], rax
  000c8	48 8d 4c 24 68	 lea	 rcx, QWORD PTR buffer$[rsp]
  000cd	e8 00 00 00 00	 call	 ?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ ; std::vector<char,std::allocator<char> >::data
  000d2	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR tv81[rsp]
  000da	4c 8b c1	 mov	 r8, rcx
  000dd	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR tv84[rsp]
  000e5	48 8b d1	 mov	 rdx, rcx
  000e8	48 8b c8	 mov	 rcx, rax
  000eb	e8 00 00 00 00	 call	 memcpy

; 419  :     PathStripToRootA(buffer.data());

  000f0	48 8d 4c 24 68	 lea	 rcx, QWORD PTR buffer$[rsp]
  000f5	e8 00 00 00 00	 call	 ?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ ; std::vector<char,std::allocator<char> >::data
  000fa	48 8b c8	 mov	 rcx, rax
  000fd	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathStripToRootA

; 420  :     return buffer.data();

  00103	48 8d 4c 24 68	 lea	 rcx, QWORD PTR buffer$[rsp]
  00108	e8 00 00 00 00	 call	 ?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ ; std::vector<char,std::allocator<char> >::data
  0010d	48 8b d0	 mov	 rdx, rax
  00110	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00118	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0011d	8b 84 24 a4 00
	00 00		 mov	 eax, DWORD PTR $T7[rsp]
  00124	83 c8 01	 or	 eax, 1
  00127	89 84 24 a4 00
	00 00		 mov	 DWORD PTR $T7[rsp], eax
  0012e	48 8d 4c 24 68	 lea	 rcx, QWORD PTR buffer$[rsp]
  00133	e8 00 00 00 00	 call	 ??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ ; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
  00138	90		 npad	 1
  00139	48 8d 4c 24 28	 lea	 rcx, QWORD PTR fullpath$[rsp]
  0013e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00143	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 421  : }

  0014b	48 8b f8	 mov	 rdi, rax
  0014e	48 8b cc	 mov	 rcx, rsp
  00151	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z$rtcFrameData
  00158	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0015d	48 8b c7	 mov	 rax, rdi
  00160	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00168	48 33 cc	 xor	 rcx, rsp
  0016b	e8 00 00 00 00	 call	 __security_check_cookie
  00170	48 81 c4 d0 00
	00 00		 add	 rsp, 208		; 000000d0H
  00177	5f		 pop	 rdi
  00178	c3		 ret	 0
  00179	cc		 int	 3
?PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ENDP ; PathGetRoot
_TEXT	ENDS
text$x	SEGMENT
fullpath$ = 40
buffer$ = 104
$T5 = 160
$T6 = 161
$T7 = 164
tv71 = 168
tv81 = 176
tv84 = 184
__$ArrayPad$ = 192
__$ReturnUdt$ = 224
path$ = 232
?dtor$0@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `PathGetRoot'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR fullpath$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `PathGetRoot'::`1'::dtor$0
fullpath$ = 40
buffer$ = 104
$T5 = 160
$T6 = 161
$T7 = 164
tv71 = 168
tv81 = 176
tv84 = 184
__$ArrayPad$ = 192
__$ReturnUdt$ = 224
path$ = 232
?dtor$1@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `PathGetRoot'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 68	 lea	 rcx, QWORD PTR buffer$[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ ; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `PathGetRoot'::`1'::dtor$1
fullpath$ = 40
buffer$ = 104
$T5 = 160
$T6 = 161
$T7 = 164
tv71 = 168
tv81 = 176
tv84 = 184
__$ArrayPad$ = 192
__$ReturnUdt$ = 224
path$ = 232
?dtor$2@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `PathGetRoot'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	8b 85 a4 00 00
	00		 mov	 eax, DWORD PTR $T7[rbp]
  0005f	83 e0 01	 and	 eax, 1
  00062	85 c0		 test	 eax, eax
  00064	74 13		 je	 SHORT $LN6@dtor$2
  00066	83 a5 a4 00 00
	00 fe		 and	 DWORD PTR $T7[rbp], -2
  0006d	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00074	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@dtor$2:
  00079	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0007d	5f		 pop	 rdi
  0007e	5d		 pop	 rbp
  0007f	c3		 ret	 0
?dtor$2@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `PathGetRoot'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
fullpath$ = 40
buffer$ = 104
$T5 = 160
$T6 = 161
$T7 = 164
tv71 = 168
tv81 = 176
tv84 = 184
__$ArrayPad$ = 192
__$ReturnUdt$ = 224
path$ = 232
?dtor$0@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `PathGetRoot'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR fullpath$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `PathGetRoot'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
fullpath$ = 40
buffer$ = 104
$T5 = 160
$T6 = 161
$T7 = 164
tv71 = 168
tv81 = 176
tv84 = 184
__$ArrayPad$ = 192
__$ReturnUdt$ = 224
path$ = 232
?dtor$1@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `PathGetRoot'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 68	 lea	 rcx, QWORD PTR buffer$[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ ; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `PathGetRoot'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
fullpath$ = 40
buffer$ = 104
$T5 = 160
$T6 = 161
$T7 = 164
tv71 = 168
tv81 = 176
tv84 = 184
__$ArrayPad$ = 192
__$ReturnUdt$ = 224
path$ = 232
?dtor$2@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `PathGetRoot'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	8b 85 a4 00 00
	00		 mov	 eax, DWORD PTR $T7[rbp]
  0005f	83 e0 01	 and	 eax, 1
  00062	85 c0		 test	 eax, eax
  00064	74 13		 je	 SHORT $LN6@dtor$2
  00066	83 a5 a4 00 00
	00 fe		 and	 DWORD PTR $T7[rbp], -2
  0006d	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00074	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@dtor$2:
  00079	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0007d	5f		 pop	 rdi
  0007e	5d		 pop	 rbp
  0007f	c3		 ret	 0
?dtor$2@?0??PathGetRoot@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `PathGetRoot'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Take_contents@?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Take_contents@?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAXAEAV12@@Z PROC ; std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Take_contents, COMDAT

; 324  :     void _Take_contents(_Vector_val& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 325  :         this->_Swap_proxy_and_iterators(_Right);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators

; 326  :         _Myfirst = _Right._Myfirst;

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003c	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00040	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 327  :         _Mylast  = _Right._Mylast;

  00044	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00049	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  0004e	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00052	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 328  :         _Myend   = _Right._Myend;

  00056	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00060	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00064	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 329  : 
; 330  :         _Right._Myfirst = pointer();

  00068	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0006d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 331  :         _Right._Mylast  = pointer();

  00075	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0007a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0

; 332  :         _Right._Myend   = pointer();

  00082	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00087	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 333  :     }

  0008f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00093	5f		 pop	 rdi
  00094	c3		 ret	 0
?_Take_contents@?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAXAEAV12@@Z ENDP ; std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Take_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Make_iterator_offset@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@_K@Z
_TEXT	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
_Offset$ = 80
?_Make_iterator_offset@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@_K@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Make_iterator_offset, COMDAT

; 1700 :     iterator _Make_iterator_offset(const size_type _Offset) noexcept {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00028	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 1701 :         // return the iterator begin() + _Offset without a debugging check
; 1702 :         auto& _My_data = _Mypair._Myval2;

  00030	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1703 :         return iterator(_My_data._Myfirst + _Offset, _STD addressof(_My_data));

  0003a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$addressof@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  00044	90		 npad	 1
  00045	48 6b 4c 24 50
	28		 imul	 rcx, QWORD PTR _Offset$[rsp], 40 ; 00000028H
  0004b	48 8b 54 24 20	 mov	 rdx, QWORD PTR _My_data$[rsp]
  00050	48 03 4a 08	 add	 rcx, QWORD PTR [rdx+8]
  00054	4c 8b c0	 mov	 r8, rax
  00057	48 8b d1	 mov	 rdx, rcx
  0005a	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0005f	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  00064	90		 npad	 1
  00065	8b 44 24 28	 mov	 eax, DWORD PTR $T1[rsp]
  00069	83 c8 01	 or	 eax, 1
  0006c	89 44 24 28	 mov	 DWORD PTR $T1[rsp], eax
  00070	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1704 :     }

  00075	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00079	5f		 pop	 rdi
  0007a	c3		 ret	 0
  0007b	cc		 int	 3
?_Make_iterator_offset@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@_K@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Make_iterator_offset
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
_Offset$ = 80
?dtor$0@?0??_Make_iterator_offset@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@_K@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Make_iterator_offset'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??_Make_iterator_offset@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@_K@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Make_iterator_offset'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
_Offset$ = 80
?dtor$0@?0??_Make_iterator_offset@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@_K@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Make_iterator_offset'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??_Make_iterator_offset@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@_K@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Make_iterator_offset'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1693 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first

; 1694 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range, COMDAT

; 1668 :     void _Orphan_range(pointer _First, pointer _Last) const { // orphan iterators within specified (inclusive) range

$LN9:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1669 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1670 :         _Lockit _Lock(_LOCK_DEBUG);

  00028	ba 03 00 00 00	 mov	 edx, 3
  0002d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00038	90		 npad	 1

; 1671 : 
; 1672 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

  00039	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00041	48 83 c0 08	 add	 rax, 8
  00045	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax
$LN2@Orphan_ran:

; 1673 :         while (*_Pnext) {

  0004a	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0004f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00053	74 61		 je	 SHORT $LN3@Orphan_ran

; 1674 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

  00055	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00061	48 89 44 24 40	 mov	 QWORD PTR _Pnextptr$4[rsp], rax

; 1675 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

  00066	48 8b 44 24 68	 mov	 rax, QWORD PTR _First$[rsp]
  0006b	48 39 44 24 40	 cmp	 QWORD PTR _Pnextptr$4[rsp], rax
  00070	72 0c		 jb	 SHORT $LN6@Orphan_ran
  00072	48 8b 44 24 40	 mov	 rax, QWORD PTR _Pnextptr$4[rsp]
  00077	48 39 44 24 70	 cmp	 QWORD PTR _Last$[rsp], rax
  0007c	73 13		 jae	 SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1676 :                 _Pnext = &(*_Pnext)->_Mynextiter;

  0007e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00083	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00086	48 83 c0 08	 add	 rax, 8
  0008a	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax

; 1677 :             } else { // orphan the iterator

  0008f	eb 23		 jmp	 SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 1678 :                 (*_Pnext)->_Myproxy = nullptr;

  00091	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00096	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00099	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1679 :                 *_Pnext             = (*_Pnext)->_Mynextiter;

  000a0	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  000a5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a8	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$[rsp]
  000ad	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000b1	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN5@Orphan_ran:

; 1680 :             }
; 1681 :         }

  000b4	eb 94		 jmp	 SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 1682 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1683 :         (void) _First;
; 1684 :         (void) _Last;
; 1685 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1686 :     }

  000b6	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  000bb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000c1	48 8b cc	 mov	 rcx, rsp
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z$rtcFrameData
  000cb	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d0	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 1661 :         _Xlength_error("vector<T> too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	0f 84 85 00 00
	00		 je	 $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  0006c	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00071	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
  00086	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00087	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  0008c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00091	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00094	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00097	48 2b c1	 sub	 rax, rcx
  0009a	48 99		 cdq
  0009c	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  000a1	48 f7 f9	 idiv	 rcx
  000a4	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000a9	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000ae	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  000b3	90		 npad	 1
  000b4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000b9	4c 8b c1	 mov	 r8, rcx
  000bc	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c1	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000c4	48 8b c8	 mov	 rcx, rax
  000c7	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
  000cc	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000cd	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d2	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000d9	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000de	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000e5	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000ea	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000f1	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000f5	5f		 pop	 rdi
  000f6	c3		 ret	 0
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Change_array@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K1@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
_Newvec$ = 104
_Newsize$ = 112
_Newcapacity$ = 120
?_Change_array@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K1@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Change_array, COMDAT

; 1623 :     void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1624 :         // orphan all iterators, discard old array, acquire new array
; 1625 :         auto& _My_data    = _Mypair._Myval2;

  0002d	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1626 :         pointer& _Myfirst = _My_data._Myfirst;

  00037	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003c	48 83 c0 08	 add	 rax, 8
  00040	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1627 :         pointer& _Mylast  = _My_data._Mylast;

  00045	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004a	48 83 c0 10	 add	 rax, 16
  0004e	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1628 :         pointer& _Myend   = _My_data._Myend;

  00053	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00058	48 83 c0 18	 add	 rax, 24
  0005c	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1629 : 
; 1630 :         _My_data._Orphan_all();

  00061	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00066	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1631 : 
; 1632 :         if (_Myfirst) { // destroy and deallocate old array

  0006b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00070	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00074	74 5e		 je	 SHORT $LN2@Change_arr

; 1633 :             _Destroy(_Myfirst, _Mylast);

  00076	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0007b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00083	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00086	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0008b	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy

; 1634 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00090	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00095	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0009a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 2b c1	 sub	 rax, rcx
  000a3	48 99		 cdq
  000a5	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  000aa	48 f7 f9	 idiv	 rcx
  000ad	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000b2	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000b7	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  000bc	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000c1	4c 8b c1	 mov	 r8, rcx
  000c4	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c9	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000cc	48 8b c8	 mov	 rcx, rax
  000cf	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
$LN2@Change_arr:

; 1635 :         }
; 1636 : 
; 1637 :         _Myfirst = _Newvec;

  000d4	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d9	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000de	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1638 :         _Mylast  = _Newvec + _Newsize;

  000e1	48 6b 44 24 70
	28		 imul	 rax, QWORD PTR _Newsize$[rsp], 40 ; 00000028H
  000e7	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000ec	48 03 c8	 add	 rcx, rax
  000ef	48 8b c1	 mov	 rax, rcx
  000f2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000f7	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1639 :         _Myend   = _Newvec + _Newcapacity;

  000fa	48 6b 44 24 78
	28		 imul	 rax, QWORD PTR _Newcapacity$[rsp], 40 ; 00000028H
  00100	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  00105	48 03 c8	 add	 rcx, rax
  00108	48 8b c1	 mov	 rax, rcx
  0010b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  00110	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1640 :     }

  00113	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00117	5f		 pop	 rdi
  00118	c3		 ret	 0
?_Change_array@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K1@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Calculate_growth@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 32
_Geometric$ = 40
tv67 = 48
this$ = 80
_Newsize$ = 88
?_Calculate_growth@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBA_K_K@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Calculate_growth, COMDAT

; 1571 :     size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1572 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1573 :         const size_type _Oldcapacity = capacity();

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
  0002d	48 89 44 24 20	 mov	 QWORD PTR _Oldcapacity$[rsp], rax

; 1574 : 
; 1575 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00032	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
  0003c	48 89 44 24 30	 mov	 QWORD PTR tv67[rsp], rax
  00041	33 d2		 xor	 edx, edx
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00048	b9 02 00 00 00	 mov	 ecx, 2
  0004d	48 f7 f1	 div	 rcx
  00050	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv67[rsp]
  00055	48 2b c8	 sub	 rcx, rax
  00058	48 8b c1	 mov	 rax, rcx
  0005b	48 39 44 24 20	 cmp	 QWORD PTR _Oldcapacity$[rsp], rax
  00060	76 07		 jbe	 SHORT $LN2@Calculate_

; 1576 :             return _Newsize; // geometric growth would overflow

  00062	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00067	eb 37		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1577 :         }
; 1578 : 
; 1579 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00069	33 d2		 xor	 edx, edx
  0006b	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00070	b9 02 00 00 00	 mov	 ecx, 2
  00075	48 f7 f1	 div	 rcx
  00078	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Oldcapacity$[rsp]
  0007d	48 03 c8	 add	 rcx, rax
  00080	48 8b c1	 mov	 rax, rcx
  00083	48 89 44 24 28	 mov	 QWORD PTR _Geometric$[rsp], rax

; 1580 : 
; 1581 :         if (_Geometric < _Newsize) {

  00088	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  0008d	48 39 44 24 28	 cmp	 QWORD PTR _Geometric$[rsp], rax
  00092	73 07		 jae	 SHORT $LN3@Calculate_

; 1582 :             return _Newsize; // geometric growth would be insufficient

  00094	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00099	eb 05		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1583 :         }
; 1584 : 
; 1585 :         return _Geometric; // geometric growth is sufficient

  0009b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Geometric$[rsp]
$LN1@Calculate_:

; 1586 :     }

  000a0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000a4	5f		 pop	 rdi
  000a5	c3		 ret	 0
?_Calculate_growth@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBA_K_K@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@00@Z
_TEXT	SEGMENT
$T1 = 48
this$ = 80
_First$ = 88
_Last$ = 96
_Dest$ = 104
?_Umove_if_noexcept@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@00@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove_if_noexcept, COMDAT

; 1561 :     void _Umove_if_noexcept(pointer _First, pointer _Last, pointer _Dest) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1562 :         // move_if_noexcept [_First, _Last) to raw _Dest, using allocator
; 1563 :         _Umove_if_noexcept1(_First, _Last, _Dest,

  0002d	48 8d 44 24 30	 lea	 rax, QWORD PTR $T1[rsp]
  00032	48 8b f8	 mov	 rdi, rax
  00035	33 c0		 xor	 eax, eax
  00037	b9 01 00 00 00	 mov	 ecx, 1
  0003c	f3 aa		 rep stosb
  0003e	0f b6 44 24 30	 movzx	 eax, BYTE PTR $T1[rsp]
  00043	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  00047	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Dest$[rsp]
  0004c	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Last$[rsp]
  00051	48 8b 54 24 58	 mov	 rdx, QWORD PTR _First$[rsp]
  00056	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Umove_if_noexcept1@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@00U?$integral_constant@_N$00@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove_if_noexcept1

; 1564 :             bool_constant<disjunction_v<is_nothrow_move_constructible<_Ty>, negation<is_copy_constructible<_Ty>>>>{});
; 1565 :     }

  00060	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
?_Umove_if_noexcept@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@00@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
__formal$ = 80
?_Umove_if_noexcept1@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove_if_noexcept1, COMDAT

; 1551 :     void _Umove_if_noexcept1(pointer _First, pointer _Last, pointer _Dest, true_type) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1552 :         // move [_First, _Last) to raw _Dest, using allocator
; 1553 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1554 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove_if_noexcept1@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEAV32@00@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
?_Umove@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEAV32@00@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove, COMDAT

; 1547 :     pointer _Umove(pointer _First, pointer _Last, pointer _Dest) { // move [_First, _Last) to raw _Dest, using allocator

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1548 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1549 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PEAV32@00@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity, COMDAT

; 1446 :     _NODISCARD size_type capacity() const noexcept { // return current length of allocated storage

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1447 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1448 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 99		 cdq
  0003c	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00041	48 f7 f9	 idiv	 rcx

; 1449 :     }

  00044	48 83 c4 10	 add	 rsp, 16
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1442 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBAAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size, COMDAT

; 1436 :     _NODISCARD size_type size() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1437 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1438 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 99		 cdq
  0003c	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00041	48 f7 f9	 idiv	 rcx

; 1439 :     }

  00044	48 83 c4 10	 add	 rsp, 16
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end, COMDAT

; 1375 :     _NODISCARD const_iterator end() const noexcept { // return iterator for end of nonmutable sequence

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 1376 :         auto& _My_data = _Mypair._Myval2;

  0002b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1377 :         return const_iterator(_My_data._Mylast, _STD addressof(_My_data));

  00035	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEBV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const >
  0003f	90		 npad	 1
  00040	4c 8b c0	 mov	 r8, rax
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00048	48 8b 50 10	 mov	 rdx, QWORD PTR [rax+16]
  0004c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00051	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  00056	90		 npad	 1
  00057	8b 44 24 28	 mov	 eax, DWORD PTR $T1[rsp]
  0005b	83 c8 01	 or	 eax, 1
  0005e	89 44 24 28	 mov	 DWORD PTR $T1[rsp], eax
  00062	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1378 :     }

  00067	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
  0006d	cc		 int	 3
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end, COMDAT

; 1370 :     _NODISCARD iterator end() noexcept { // return iterator for end of mutable sequence

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 1371 :         auto& _My_data = _Mypair._Myval2;

  0002b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1372 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  00035	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$addressof@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  0003f	90		 npad	 1
  00040	4c 8b c0	 mov	 r8, rax
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00048	48 8b 50 10	 mov	 rdx, QWORD PTR [rax+16]
  0004c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00051	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  00056	90		 npad	 1
  00057	8b 44 24 28	 mov	 eax, DWORD PTR $T1[rsp]
  0005b	83 c8 01	 or	 eax, 1
  0005e	89 44 24 28	 mov	 DWORD PTR $T1[rsp], eax
  00062	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1373 :     }

  00067	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
  0006d	cc		 int	 3
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin, COMDAT

; 1365 :     _NODISCARD const_iterator begin() const noexcept { // return iterator for beginning of nonmutable sequence

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 1366 :         auto& _My_data = _Mypair._Myval2;

  0002b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1367 :         return const_iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00035	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEBV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const >
  0003f	90		 npad	 1
  00040	4c 8b c0	 mov	 r8, rax
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00048	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  0004c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00051	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  00056	90		 npad	 1
  00057	8b 44 24 28	 mov	 eax, DWORD PTR $T1[rsp]
  0005b	83 c8 01	 or	 eax, 1
  0005e	89 44 24 28	 mov	 DWORD PTR $T1[rsp], eax
  00062	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1368 :     }

  00067	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
  0006d	cc		 int	 3
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA PROC ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back, COMDAT

; 671  :     void push_back(_Ty&& _Val) { // insert by moving into element at end, provide strong guarantee

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 672  :         emplace_back(_STD move(_Val));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00035	e8 00 00 00 00	 call	 ??$emplace_back@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::emplace_back<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 673  :     }

  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back, COMDAT

; 667  :     void push_back(const _Ty& _Val) { // insert element at end, provide strong guarantee

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 668  :         emplace_back(_Val);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Val$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$emplace_back@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::emplace_back<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>

; 669  :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S2$ = 52
$T4 = 68
this$ = 96
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S2$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S2$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 531  :     vector(vector&& _Right) noexcept

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 532  :         : _Mypair(_One_then_variadic_args_t(), _STD move(_Right._Getal())) { // construct by moving _Right

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  0002d	90		 npad	 1
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ??$move@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAV10@@Z ; std::move<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > &>
  00036	90		 npad	 1
  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	4c 8b c0	 mov	 r8, rax
  0003f	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1><std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00049	90		 npad	 1

; 533  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  00054	90		 npad	 1
  00055	48 8b d0	 mov	 rdx, rax
  00058	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  0005d	e8 00 00 00 00	 call	 ??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00062	90		 npad	 1
  00063	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00068	48 8b d0	 mov	 rdx, rax
  0006b	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00070	90		 npad	 1

; 534  :         _Move_construct(_Right, true_type{});

  00071	48 8d 44 24 22	 lea	 rax, QWORD PTR $T3[rsp]
  00076	48 8b f8	 mov	 rdi, rax
  00079	33 c0		 xor	 eax, eax
  0007b	b9 01 00 00 00	 mov	 ecx, 1
  00080	f3 aa		 rep stosb
  00082	44 0f b6 44 24
	22		 movzx	 r8d, BYTE PTR $T3[rsp]
  00088	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  0008d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00092	e8 00 00 00 00	 call	 ?_Move_construct@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Move_construct
  00097	90		 npad	 1

; 535  :     }

  00098	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0009d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a1	5f		 pop	 rdi
  000a2	c3		 ret	 0
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Move_construct@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
__formal$ = 64
?_Move_construct@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Move_construct, COMDAT

; 505  :     void _Move_construct(vector& _Right, true_type) noexcept { // move from _Right, stealing its contents

$LN3:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 506  :         _Mypair._Myval2._Take_contents(_Right._Mypair._Myval2);

  00028	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	48 8b d0	 mov	 rdx, rax
  00035	e8 00 00 00 00	 call	 ?_Take_contents@?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QEAAXAEAV12@@Z ; std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Take_contents

; 507  :     }

  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?_Move_construct@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Move_construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 385  :     vector() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>)

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 386  :         : _Mypair(_Zero_then_variadic_args_t()) { // construct empty vector

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1><>
  00030	90		 npad	 1

; 387  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 388  :     }

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 b8 66 66 66
	66 66 66 66 06	 mov	 rax, 461168601842738790	; 0666666666666666H

; 768  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0CI@@std@@YA_K_K@Z ; std::_Get_size_of_n<40>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Count$[rsp], 40 ; 00000028H
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Take_contents@?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Take_contents@?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXAEAV12@@Z PROC ; std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Take_contents, COMDAT

; 324  :     void _Take_contents(_Vector_val& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 325  :         this->_Swap_proxy_and_iterators(_Right);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators

; 326  :         _Myfirst = _Right._Myfirst;

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003c	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00040	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 327  :         _Mylast  = _Right._Mylast;

  00044	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00049	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  0004e	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00052	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 328  :         _Myend   = _Right._Myend;

  00056	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00060	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00064	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 329  : 
; 330  :         _Right._Myfirst = pointer();

  00068	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0006d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 331  :         _Right._Mylast  = pointer();

  00075	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0007a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0

; 332  :         _Right._Myend   = pointer();

  00082	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00087	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 333  :     }

  0008f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00093	5f		 pop	 rdi
  00094	c3		 ret	 0
?_Take_contents@?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXAEAV12@@Z ENDP ; std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Take_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1693 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_first

; 1694 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z
_TEXT	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range, COMDAT

; 1668 :     void _Orphan_range(pointer _First, pointer _Last) const { // orphan iterators within specified (inclusive) range

$LN9:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1669 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1670 :         _Lockit _Lock(_LOCK_DEBUG);

  00028	ba 03 00 00 00	 mov	 edx, 3
  0002d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00038	90		 npad	 1

; 1671 : 
; 1672 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

  00039	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00041	48 83 c0 08	 add	 rax, 8
  00045	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax
$LN2@Orphan_ran:

; 1673 :         while (*_Pnext) {

  0004a	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0004f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00053	74 61		 je	 SHORT $LN3@Orphan_ran

; 1674 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

  00055	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00061	48 89 44 24 40	 mov	 QWORD PTR _Pnextptr$4[rsp], rax

; 1675 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

  00066	48 8b 44 24 68	 mov	 rax, QWORD PTR _First$[rsp]
  0006b	48 39 44 24 40	 cmp	 QWORD PTR _Pnextptr$4[rsp], rax
  00070	72 0c		 jb	 SHORT $LN6@Orphan_ran
  00072	48 8b 44 24 40	 mov	 rax, QWORD PTR _Pnextptr$4[rsp]
  00077	48 39 44 24 70	 cmp	 QWORD PTR _Last$[rsp], rax
  0007c	73 13		 jae	 SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1676 :                 _Pnext = &(*_Pnext)->_Mynextiter;

  0007e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00083	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00086	48 83 c0 08	 add	 rax, 8
  0008a	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax

; 1677 :             } else { // orphan the iterator

  0008f	eb 23		 jmp	 SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 1678 :                 (*_Pnext)->_Myproxy = nullptr;

  00091	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00096	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00099	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1679 :                 *_Pnext             = (*_Pnext)->_Mynextiter;

  000a0	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  000a5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a8	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$[rsp]
  000ad	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000b1	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN5@Orphan_ran:

; 1680 :             }
; 1681 :         }

  000b4	eb 94		 jmp	 SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 1682 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1683 :         (void) _First;
; 1684 :         (void) _Last;
; 1685 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1686 :     }

  000b6	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  000bb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000c1	48 8b cc	 mov	 rcx, rsp
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z$rtcFrameData
  000cb	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d0	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z@4HA PROC ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z@4HA ENDP ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z@4HA PROC ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z@4HA ENDP ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@CAXXZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 1661 :         _Xlength_error("vector<T> too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlength@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXXZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	0f 84 85 00 00
	00		 je	 $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  0006c	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00071	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Destroy
  00086	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00087	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  0008c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00091	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00094	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00097	48 2b c1	 sub	 rax, rcx
  0009a	48 99		 cdq
  0009c	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  000a1	48 f7 f9	 idiv	 rcx
  000a4	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000a9	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000ae	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Getal
  000b3	90		 npad	 1
  000b4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000b9	4c 8b c1	 mov	 r8, rcx
  000bc	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c1	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000c4	48 8b c8	 mov	 rcx, rax
  000c7	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::deallocate
  000cc	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000cd	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d2	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000d9	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000de	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000e5	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000ea	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000f1	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000f5	5f		 pop	 rdi
  000f6	c3		 ret	 0
?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXXZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Change_array@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K1@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
_Newvec$ = 104
_Newsize$ = 112
_Newcapacity$ = 120
?_Change_array@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K1@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Change_array, COMDAT

; 1623 :     void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1624 :         // orphan all iterators, discard old array, acquire new array
; 1625 :         auto& _My_data    = _Mypair._Myval2;

  0002d	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1626 :         pointer& _Myfirst = _My_data._Myfirst;

  00037	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003c	48 83 c0 08	 add	 rax, 8
  00040	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1627 :         pointer& _Mylast  = _My_data._Mylast;

  00045	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004a	48 83 c0 10	 add	 rax, 16
  0004e	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1628 :         pointer& _Myend   = _My_data._Myend;

  00053	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00058	48 83 c0 18	 add	 rax, 24
  0005c	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1629 : 
; 1630 :         _My_data._Orphan_all();

  00061	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00066	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1631 : 
; 1632 :         if (_Myfirst) { // destroy and deallocate old array

  0006b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00070	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00074	74 5e		 je	 SHORT $LN2@Change_arr

; 1633 :             _Destroy(_Myfirst, _Mylast);

  00076	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0007b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00083	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00086	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0008b	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Destroy

; 1634 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00090	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00095	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0009a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 2b c1	 sub	 rax, rcx
  000a3	48 99		 cdq
  000a5	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  000aa	48 f7 f9	 idiv	 rcx
  000ad	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000b2	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000b7	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Getal
  000bc	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000c1	4c 8b c1	 mov	 r8, rcx
  000c4	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c9	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000cc	48 8b c8	 mov	 rcx, rax
  000cf	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::deallocate
$LN2@Change_arr:

; 1635 :         }
; 1636 : 
; 1637 :         _Myfirst = _Newvec;

  000d4	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d9	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000de	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1638 :         _Mylast  = _Newvec + _Newsize;

  000e1	48 6b 44 24 70
	28		 imul	 rax, QWORD PTR _Newsize$[rsp], 40 ; 00000028H
  000e7	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000ec	48 03 c8	 add	 rcx, rax
  000ef	48 8b c1	 mov	 rax, rcx
  000f2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000f7	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1639 :         _Myend   = _Newvec + _Newcapacity;

  000fa	48 6b 44 24 78
	28		 imul	 rax, QWORD PTR _Newcapacity$[rsp], 40 ; 00000028H
  00100	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  00105	48 03 c8	 add	 rcx, rax
  00108	48 8b c1	 mov	 rax, rcx
  0010b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  00110	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1640 :     }

  00113	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00117	5f		 pop	 rdi
  00118	c3		 ret	 0
?_Change_array@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K1@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Calculate_growth@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 32
_Geometric$ = 40
tv67 = 48
this$ = 80
_Newsize$ = 88
?_Calculate_growth@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBA_K_K@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Calculate_growth, COMDAT

; 1571 :     size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1572 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1573 :         const size_type _Oldcapacity = capacity();

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::capacity
  0002d	48 89 44 24 20	 mov	 QWORD PTR _Oldcapacity$[rsp], rax

; 1574 : 
; 1575 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00032	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size
  0003c	48 89 44 24 30	 mov	 QWORD PTR tv67[rsp], rax
  00041	33 d2		 xor	 edx, edx
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00048	b9 02 00 00 00	 mov	 ecx, 2
  0004d	48 f7 f1	 div	 rcx
  00050	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv67[rsp]
  00055	48 2b c8	 sub	 rcx, rax
  00058	48 8b c1	 mov	 rax, rcx
  0005b	48 39 44 24 20	 cmp	 QWORD PTR _Oldcapacity$[rsp], rax
  00060	76 07		 jbe	 SHORT $LN2@Calculate_

; 1576 :             return _Newsize; // geometric growth would overflow

  00062	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00067	eb 37		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1577 :         }
; 1578 : 
; 1579 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00069	33 d2		 xor	 edx, edx
  0006b	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00070	b9 02 00 00 00	 mov	 ecx, 2
  00075	48 f7 f1	 div	 rcx
  00078	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Oldcapacity$[rsp]
  0007d	48 03 c8	 add	 rcx, rax
  00080	48 8b c1	 mov	 rax, rcx
  00083	48 89 44 24 28	 mov	 QWORD PTR _Geometric$[rsp], rax

; 1580 : 
; 1581 :         if (_Geometric < _Newsize) {

  00088	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  0008d	48 39 44 24 28	 cmp	 QWORD PTR _Geometric$[rsp], rax
  00092	73 07		 jae	 SHORT $LN3@Calculate_

; 1582 :             return _Newsize; // geometric growth would be insufficient

  00094	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00099	eb 05		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1583 :         }
; 1584 : 
; 1585 :         return _Geometric; // geometric growth is sufficient

  0009b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Geometric$[rsp]
$LN1@Calculate_:

; 1586 :     }

  000a0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000a4	5f		 pop	 rdi
  000a5	c3		 ret	 0
?_Calculate_growth@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBA_K_K@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@00@Z
_TEXT	SEGMENT
$T1 = 48
this$ = 80
_First$ = 88
_Last$ = 96
_Dest$ = 104
?_Umove_if_noexcept@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@00@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Umove_if_noexcept, COMDAT

; 1561 :     void _Umove_if_noexcept(pointer _First, pointer _Last, pointer _Dest) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1562 :         // move_if_noexcept [_First, _Last) to raw _Dest, using allocator
; 1563 :         _Umove_if_noexcept1(_First, _Last, _Dest,

  0002d	48 8d 44 24 30	 lea	 rax, QWORD PTR $T1[rsp]
  00032	48 8b f8	 mov	 rdi, rax
  00035	33 c0		 xor	 eax, eax
  00037	b9 01 00 00 00	 mov	 ecx, 1
  0003c	f3 aa		 rep stosb
  0003e	0f b6 44 24 30	 movzx	 eax, BYTE PTR $T1[rsp]
  00043	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  00047	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Dest$[rsp]
  0004c	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Last$[rsp]
  00051	48 8b 54 24 58	 mov	 rdx, QWORD PTR _First$[rsp]
  00056	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Umove_if_noexcept1@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@00U?$integral_constant@_N$00@2@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Umove_if_noexcept1

; 1564 :             bool_constant<disjunction_v<is_nothrow_move_constructible<_Ty>, negation<is_copy_constructible<_Ty>>>>{});
; 1565 :     }

  00060	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
?_Umove_if_noexcept@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@00@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
__formal$ = 80
?_Umove_if_noexcept1@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Umove_if_noexcept1, COMDAT

; 1551 :     void _Umove_if_noexcept1(pointer _First, pointer _Last, pointer _Dest, true_type) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1552 :         // move [_First, _Last) to raw _Dest, using allocator
; 1553 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >

; 1554 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove_if_noexcept1@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PEAV32@00@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
?_Umove@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PEAV32@00@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Umove, COMDAT

; 1547 :     pointer _Umove(pointer _First, pointer _Last, pointer _Dest) { // move [_First, _Last) to raw _Dest, using allocator

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1548 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > *,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >

; 1549 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@PEAV32@00@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Umove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::capacity, COMDAT

; 1446 :     _NODISCARD size_type capacity() const noexcept { // return current length of allocated storage

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1447 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1448 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 99		 cdq
  0003c	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00041	48 f7 f9	 idiv	 rcx

; 1449 :     }

  00044	48 83 c4 10	 add	 rsp, 16
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1442 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBAAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back, COMDAT

; 671  :     void push_back(_Ty&& _Val) { // insert by moving into element at end, provide strong guarantee

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 672  :         emplace_back(_STD move(_Val));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00035	e8 00 00 00 00	 call	 ??$emplace_back@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::emplace_back<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >

; 673  :     }

  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back, COMDAT

; 667  :     void push_back(const _Ty& _Val) { // insert element at end, provide strong guarantee

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 668  :         emplace_back(_Val);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Val$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$emplace_back@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::emplace_back<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>

; 669  :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S3$ = 52
$T4 = 68
this$ = 96
??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S3$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S3$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 531  :     vector(vector&& _Right) noexcept

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 532  :         : _Mypair(_One_then_variadic_args_t(), _STD move(_Right._Getal())) { // construct by moving _Right

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Getal
  0002d	90		 npad	 1
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ??$move@AEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@YA$$QEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@AEAV10@@Z ; std::move<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > &>
  00036	90		 npad	 1
  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	4c 8b c0	 mov	 r8, rax
  0003f	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Compressed_pair<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1><std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
  00049	90		 npad	 1

; 533  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Getal
  00054	90		 npad	 1
  00055	48 8b d0	 mov	 rdx, rax
  00058	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  0005d	e8 00 00 00 00	 call	 ??$?0V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  00062	90		 npad	 1
  00063	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00068	48 8b d0	 mov	 rdx, rax
  0006b	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00070	90		 npad	 1

; 534  :         _Move_construct(_Right, true_type{});

  00071	48 8d 44 24 22	 lea	 rax, QWORD PTR $T3[rsp]
  00076	48 8b f8	 mov	 rdi, rax
  00079	33 c0		 xor	 eax, eax
  0007b	b9 01 00 00 00	 mov	 ecx, 1
  00080	f3 aa		 rep stosb
  00082	44 0f b6 44 24
	22		 movzx	 r8d, BYTE PTR $T3[rsp]
  00088	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  0008d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00092	e8 00 00 00 00	 call	 ?_Move_construct@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Move_construct
  00097	90		 npad	 1

; 535  :     }

  00098	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0009d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a1	5f		 pop	 rdi
  000a2	c3		 ret	 0
??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Move_construct@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
__formal$ = 64
?_Move_construct@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Move_construct, COMDAT

; 505  :     void _Move_construct(vector& _Right, true_type) noexcept { // move from _Right, stealing its contents

$LN3:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 506  :         _Mypair._Myval2._Take_contents(_Right._Mypair._Myval2);

  00028	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	48 8b d0	 mov	 rdx, rax
  00035	e8 00 00 00 00	 call	 ?_Take_contents@?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXAEAV12@@Z ; std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Take_contents

; 507  :     }

  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?_Move_construct@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Move_construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 385  :     vector() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>)

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 386  :         : _Mypair(_Zero_then_variadic_args_t()) { // construct empty vector

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Compressed_pair<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1><>
  00030	90		 npad	 1

; 387  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 388  :     }

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 b8 66 66 66
	66 66 66 66 06	 mov	 rax, 461168601842738790	; 0666666666666666H

; 768  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z PROC ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0CI@@std@@YA_K_K@Z ; std::_Get_size_of_n<40>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ENDP ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z PROC ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Count$[rsp], 40 ; 00000028H
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ENDP ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ PROC ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ ENDP ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z PROC ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ENDP ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z PROC ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ENDP ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_Vector_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_Vector_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_Vector_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_Vector_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_Vector_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_Vector_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_Vector_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_Vector_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_Vector_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_Vector_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<wchar_t> >::_Vector_val<std::_Simple_types<wchar_t> >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<wchar_t> >::_Vector_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@_WV?$allocator@_W@std@@@std@@AEBAAEBV?$allocator@_W@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@_WV?$allocator@_W@std@@@std@@AEBAAEBV?$allocator@_W@2@XZ PROC ; std::vector<wchar_t,std::allocator<wchar_t> >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1693 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_Vector_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_Vector_val<std::_Simple_types<wchar_t> >,1>::_Get_first

; 1694 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@_WV?$allocator@_W@std@@@std@@AEBAAEBV?$allocator@_W@2@XZ ENDP ; std::vector<wchar_t,std::allocator<wchar_t> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@_WV?$allocator@_W@std@@@std@@AEAAAEAV?$allocator@_W@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@_WV?$allocator@_W@std@@@std@@AEAAAEAV?$allocator@_W@2@XZ PROC ; std::vector<wchar_t,std::allocator<wchar_t> >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_Vector_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_Vector_val<std::_Simple_types<wchar_t> >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@_WV?$allocator@_W@std@@@std@@AEAAAEAV?$allocator@_W@2@XZ ENDP ; std::vector<wchar_t,std::allocator<wchar_t> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@_WV?$allocator@_W@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@_WV?$allocator@_W@std@@@std@@CAXXZ PROC ; std::vector<wchar_t,std::allocator<wchar_t> >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 1661 :         _Xlength_error("vector<T> too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlength@?$vector@_WV?$allocator@_W@std@@@std@@CAXXZ ENDP ; std::vector<wchar_t,std::allocator<wchar_t> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@_WV?$allocator@_W@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@_WV?$allocator@_W@std@@@std@@AEAAXXZ PROC ; std::vector<wchar_t,std::allocator<wchar_t> >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	74 7e		 je	 SHORT $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  00068	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006d	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00070	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00075	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0007d	e8 00 00 00 00	 call	 ?_Destroy@?$vector@_WV?$allocator@_W@std@@@std@@AEAAXPEA_W0@Z ; std::vector<wchar_t,std::allocator<wchar_t> >::_Destroy
  00082	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00083	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00088	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0008d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 2b c1	 sub	 rax, rcx
  00096	48 d1 f8	 sar	 rax, 1
  00099	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  0009e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000a3	e8 00 00 00 00	 call	 ?_Getal@?$vector@_WV?$allocator@_W@std@@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::vector<wchar_t,std::allocator<wchar_t> >::_Getal
  000a8	90		 npad	 1
  000a9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000ae	4c 8b c1	 mov	 r8, rcx
  000b1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000b6	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000b9	48 8b c8	 mov	 rcx, rax
  000bc	e8 00 00 00 00	 call	 ?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z ; std::allocator<wchar_t>::deallocate
  000c1	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000c2	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000c7	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000ce	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000d3	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000da	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000df	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000e6	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000ea	5f		 pop	 rdi
  000eb	c3		 ret	 0
?_Tidy@?$vector@_WV?$allocator@_W@std@@@std@@AEAAXXZ ENDP ; std::vector<wchar_t,std::allocator<wchar_t> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_nonzero@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_nonzero@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_K@Z PROC ; std::vector<wchar_t,std::allocator<wchar_t> >::_Buy_nonzero, COMDAT

; 1605 :     void _Buy_nonzero(const size_type _Newcapacity) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1606 :         // allocate array with _Newcapacity elements
; 1607 : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 1608 :         auto& _My_data    = _Mypair._Myval2;
; 1609 :         pointer& _Myfirst = _My_data._Myfirst;
; 1610 :         pointer& _Mylast  = _My_data._Mylast;
; 1611 :         pointer& _Myend   = _My_data._Myend;
; 1612 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1613 :         _STL_INTERNAL_CHECK(0 < _Newcapacity);
; 1614 : #endif // _ENABLE_STL_INTERNAL_CHECK
; 1615 : 
; 1616 :         if (_Newcapacity > max_size()) {

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?max_size@?$vector@_WV?$allocator@_W@std@@@std@@QEBA_KXZ ; std::vector<wchar_t,std::allocator<wchar_t> >::max_size
  0002d	48 39 44 24 38	 cmp	 QWORD PTR _Newcapacity$[rsp], rax
  00032	76 05		 jbe	 SHORT $LN2@Buy_nonzer

; 1617 :             _Xlength();

  00034	e8 00 00 00 00	 call	 ?_Xlength@?$vector@_WV?$allocator@_W@std@@@std@@CAXXZ ; std::vector<wchar_t,std::allocator<wchar_t> >::_Xlength
$LN2@Buy_nonzer:

; 1618 :         }
; 1619 : 
; 1620 :         _Buy_raw(_Newcapacity);

  00039	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00043	e8 00 00 00 00	 call	 ?_Buy_raw@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_K@Z ; std::vector<wchar_t,std::allocator<wchar_t> >::_Buy_raw
$LN3@Buy_nonzer:

; 1621 :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?_Buy_nonzero@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_K@Z ENDP ; std::vector<wchar_t,std::allocator<wchar_t> >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_raw@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
_Newvec$ = 64
this$ = 96
_Newcapacity$ = 104
?_Buy_raw@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_K@Z PROC ; std::vector<wchar_t,std::allocator<wchar_t> >::_Buy_raw, COMDAT

; 1589 :     void _Buy_raw(const size_type _Newcapacity) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1590 :         // allocate array with _Newcapacity elements
; 1591 :         auto& _My_data    = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1592 :         pointer& _Myfirst = _My_data._Myfirst;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1593 :         pointer& _Mylast  = _My_data._Mylast;

  0003b	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00040	48 83 c0 10	 add	 rax, 16
  00044	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1594 :         pointer& _Myend   = _My_data._Myend;

  00049	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004e	48 83 c0 18	 add	 rax, 24
  00052	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1595 : 
; 1596 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1597 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 1598 : 
; 1599 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

  00057	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0005c	e8 00 00 00 00	 call	 ?_Getal@?$vector@_WV?$allocator@_W@std@@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::vector<wchar_t,std::allocator<wchar_t> >::_Getal
  00061	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  00066	48 8b c8	 mov	 rcx, rax
  00069	e8 00 00 00 00	 call	 ?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ; std::allocator<wchar_t>::allocate
  0006e	48 89 44 24 40	 mov	 QWORD PTR _Newvec$[rsp], rax

; 1600 :         _Myfirst           = _Newvec;

  00073	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00078	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0007d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1601 :         _Mylast            = _Newvec;

  00080	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00085	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0008a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1602 :         _Myend             = _Newvec + _Newcapacity;

  0008d	48 8b 44 24 40	 mov	 rax, QWORD PTR _Newvec$[rsp]
  00092	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newcapacity$[rsp]
  00097	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  0009b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  000a0	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1603 :     }

  000a3	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000a7	5f		 pop	 rdi
  000a8	c3		 ret	 0
?_Buy_raw@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_K@Z ENDP ; std::vector<wchar_t,std::allocator<wchar_t> >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@_WV?$allocator@_W@std@@@std@@AEAAXPEA_W0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@_WV?$allocator@_W@std@@@std@@AEAAXPEA_W0@Z PROC ; std::vector<wchar_t,std::allocator<wchar_t> >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@_WV?$allocator@_W@std@@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::vector<wchar_t,std::allocator<wchar_t> >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@_W@std@@@std@@YAXPEA_WQEA_WAEAV?$allocator@_W@0@@Z ; std::_Destroy_range<std::allocator<wchar_t> >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@_WV?$allocator@_W@std@@@std@@AEAAXPEA_W0@Z ENDP ; std::vector<wchar_t,std::allocator<wchar_t> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Ufill@?$vector@_WV?$allocator@_W@std@@@std@@AEAAPEA_WPEA_W_KAEB_W@Z
_TEXT	SEGMENT
this$ = 48
_Dest$ = 56
_Count$ = 64
_Val$ = 72
?_Ufill@?$vector@_WV?$allocator@_W@std@@@std@@AEAAPEA_WPEA_W_KAEB_W@Z PROC ; std::vector<wchar_t,std::allocator<wchar_t> >::_Ufill, COMDAT

; 1532 :     pointer _Ufill(pointer _Dest, const size_type _Count, const _Ty& _Val) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1533 :         // fill raw _Dest with _Count copies of _Val, using allocator
; 1534 :         return _Uninitialized_fill_n(_Dest, _Count, _Val, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@_WV?$allocator@_W@std@@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::vector<wchar_t,std::allocator<wchar_t> >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Val$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Count$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_fill_n@V?$allocator@_W@std@@@std@@YAPEA_WPEA_W_KAEB_WAEAV?$allocator@_W@0@@Z ; std::_Uninitialized_fill_n<std::allocator<wchar_t> >

; 1535 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Ufill@?$vector@_WV?$allocator@_W@std@@@std@@AEAAPEA_WPEA_W_KAEB_W@Z ENDP ; std::vector<wchar_t,std::allocator<wchar_t> >::_Ufill
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@_WV?$allocator@_W@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@_WV?$allocator@_W@std@@@std@@QEBA_KXZ PROC ; std::vector<wchar_t,std::allocator<wchar_t> >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1442 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$vector@_WV?$allocator@_W@std@@@std@@AEBAAEBV?$allocator@_W@2@XZ ; std::vector<wchar_t,std::allocator<wchar_t> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z ; std::_Default_allocator_traits<std::allocator<wchar_t> >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$vector@_WV?$allocator@_W@std@@@std@@QEBA_KXZ ENDP ; std::vector<wchar_t,std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?size@?$vector@_WV?$allocator@_W@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?size@?$vector@_WV?$allocator@_W@std@@@std@@QEBA_KXZ PROC ; std::vector<wchar_t,std::allocator<wchar_t> >::size, COMDAT

; 1436 :     _NODISCARD size_type size() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1437 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1438 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 d1 f8	 sar	 rax, 1

; 1439 :     }

  0003d	48 83 c4 10	 add	 rsp, 16
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?size@?$vector@_WV?$allocator@_W@std@@@std@@QEBA_KXZ ENDP ; std::vector<wchar_t,std::allocator<wchar_t> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?data@?$vector@_WV?$allocator@_W@std@@@std@@QEAAPEA_WXZ
_TEXT	SEGMENT
this$ = 48
?data@?$vector@_WV?$allocator@_W@std@@@std@@QEAAPEA_WXZ PROC ; std::vector<wchar_t,std::allocator<wchar_t> >::data, COMDAT

; 1352 :     _NODISCARD _Ty* data() noexcept { // return address of first element

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1353 :         return _Unfancy_maybe_null(_Mypair._Myval2._Myfirst);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00027	e8 00 00 00 00	 call	 ??$_Unfancy_maybe_null@_W@std@@YAPEA_WPEA_W@Z ; std::_Unfancy_maybe_null<wchar_t>
  0002c	90		 npad	 1

; 1354 :     }

  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
?data@?$vector@_WV?$allocator@_W@std@@@std@@QEAAPEA_WXZ ENDP ; std::vector<wchar_t,std::allocator<wchar_t> >::data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S4$ = 52
$T4 = 68
this$ = 96
??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ PROC	; std::vector<wchar_t,std::allocator<wchar_t> >::~vector<wchar_t,std::allocator<wchar_t> >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@_WV?$allocator@_W@std@@@std@@AEAAXXZ ; std::vector<wchar_t,std::allocator<wchar_t> >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@_WV?$allocator@_W@std@@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::vector<wchar_t,std::allocator<wchar_t> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S4$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S4$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ ENDP	; std::vector<wchar_t,std::allocator<wchar_t> >::~vector<wchar_t,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@_WV?$allocator@_W@std@@@std@@QEAA@_KAEB_WAEBV?$allocator@_W@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Count$ = 72
_Val$ = 80
_Al$ = 88
??0?$vector@_WV?$allocator@_W@std@@@std@@QEAA@_KAEB_WAEBV?$allocator@_W@1@@Z PROC ; std::vector<wchar_t,std::allocator<wchar_t> >::vector<wchar_t,std::allocator<wchar_t> >, COMDAT

; 417  :     vector(_CRT_GUARDOVERFLOW const size_type _Count, const _Ty& _Val, const _Alloc& _Al = _Alloc())

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 418  :         : _Mypair(_One_then_variadic_args_t(), _Al) { // construct from _Count * _Val, optional allocator

  0002d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00032	4c 8b 44 24 58	 mov	 r8, QWORD PTR _Al$[rsp]
  00037	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  0003c	48 8b c8	 mov	 rcx, rax
  0003f	e8 00 00 00 00	 call	 ??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_Vector_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_Vector_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_Vector_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>

; 419  :         _Construct_n_copies_of_ty(_Count, _Val);

  00044	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Val$[rsp]
  00049	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Count$[rsp]
  0004e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00053	e8 00 00 00 00	 call	 ??$_Construct_n_copies_of_ty@_W@?$vector@_WV?$allocator@_W@std@@@std@@AEAAX_KAEB_W@Z ; std::vector<wchar_t,std::allocator<wchar_t> >::_Construct_n_copies_of_ty<wchar_t>

; 420  :     }

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??0?$vector@_WV?$allocator@_W@std@@@std@@QEAA@_KAEB_WAEBV?$allocator@_W@1@@Z ENDP ; std::vector<wchar_t,std::allocator<wchar_t> >::vector<wchar_t,std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<char> >::_Vector_val<std::_Simple_types<char> >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<char> >::_Vector_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEBAAEBV?$allocator@D@2@XZ PROC ; std::vector<char,std::allocator<char> >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1693 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1>::_Get_first

; 1694 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEBAAEBV?$allocator@D@2@XZ ENDP ; std::vector<char,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEAAAEAV?$allocator@D@2@XZ PROC ; std::vector<char,std::allocator<char> >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEAAAEAV?$allocator@D@2@XZ ENDP ; std::vector<char,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@DV?$allocator@D@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@DV?$allocator@D@std@@@std@@CAXXZ PROC ; std::vector<char,std::allocator<char> >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 1661 :         _Xlength_error("vector<T> too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlength@?$vector@DV?$allocator@D@std@@@std@@CAXXZ ENDP ; std::vector<char,std::allocator<char> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@DV?$allocator@D@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv81 = 64
this$ = 96
?_Tidy@?$vector@DV?$allocator@D@std@@@std@@AEAAXXZ PROC	; std::vector<char,std::allocator<char> >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	74 7b		 je	 SHORT $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  00068	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006d	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00070	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00075	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0007d	e8 00 00 00 00	 call	 ?_Destroy@?$vector@DV?$allocator@D@std@@@std@@AEAAXPEAD0@Z ; std::vector<char,std::allocator<char> >::_Destroy
  00082	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00083	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00088	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0008d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 2b c1	 sub	 rax, rcx
  00096	48 89 44 24 40	 mov	 QWORD PTR tv81[rsp], rax
  0009b	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000a0	e8 00 00 00 00	 call	 ?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::vector<char,std::allocator<char> >::_Getal
  000a5	90		 npad	 1
  000a6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv81[rsp]
  000ab	4c 8b c1	 mov	 r8, rcx
  000ae	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000b3	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000b6	48 8b c8	 mov	 rcx, rax
  000b9	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
  000be	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000bf	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000c4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000cb	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000d0	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000d7	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000dc	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000e3	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000e7	5f		 pop	 rdi
  000e8	c3		 ret	 0
?_Tidy@?$vector@DV?$allocator@D@std@@@std@@AEAAXXZ ENDP	; std::vector<char,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_nonzero@?$vector@DV?$allocator@D@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_nonzero@?$vector@DV?$allocator@D@std@@@std@@AEAAX_K@Z PROC ; std::vector<char,std::allocator<char> >::_Buy_nonzero, COMDAT

; 1605 :     void _Buy_nonzero(const size_type _Newcapacity) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1606 :         // allocate array with _Newcapacity elements
; 1607 : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 1608 :         auto& _My_data    = _Mypair._Myval2;
; 1609 :         pointer& _Myfirst = _My_data._Myfirst;
; 1610 :         pointer& _Mylast  = _My_data._Mylast;
; 1611 :         pointer& _Myend   = _My_data._Myend;
; 1612 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1613 :         _STL_INTERNAL_CHECK(0 < _Newcapacity);
; 1614 : #endif // _ENABLE_STL_INTERNAL_CHECK
; 1615 : 
; 1616 :         if (_Newcapacity > max_size()) {

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?max_size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ ; std::vector<char,std::allocator<char> >::max_size
  0002d	48 39 44 24 38	 cmp	 QWORD PTR _Newcapacity$[rsp], rax
  00032	76 05		 jbe	 SHORT $LN2@Buy_nonzer

; 1617 :             _Xlength();

  00034	e8 00 00 00 00	 call	 ?_Xlength@?$vector@DV?$allocator@D@std@@@std@@CAXXZ ; std::vector<char,std::allocator<char> >::_Xlength
$LN2@Buy_nonzer:

; 1618 :         }
; 1619 : 
; 1620 :         _Buy_raw(_Newcapacity);

  00039	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00043	e8 00 00 00 00	 call	 ?_Buy_raw@?$vector@DV?$allocator@D@std@@@std@@AEAAX_K@Z ; std::vector<char,std::allocator<char> >::_Buy_raw
$LN3@Buy_nonzer:

; 1621 :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?_Buy_nonzero@?$vector@DV?$allocator@D@std@@@std@@AEAAX_K@Z ENDP ; std::vector<char,std::allocator<char> >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_raw@?$vector@DV?$allocator@D@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
_Newvec$ = 64
this$ = 96
_Newcapacity$ = 104
?_Buy_raw@?$vector@DV?$allocator@D@std@@@std@@AEAAX_K@Z PROC ; std::vector<char,std::allocator<char> >::_Buy_raw, COMDAT

; 1589 :     void _Buy_raw(const size_type _Newcapacity) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1590 :         // allocate array with _Newcapacity elements
; 1591 :         auto& _My_data    = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1592 :         pointer& _Myfirst = _My_data._Myfirst;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1593 :         pointer& _Mylast  = _My_data._Mylast;

  0003b	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00040	48 83 c0 10	 add	 rax, 16
  00044	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1594 :         pointer& _Myend   = _My_data._Myend;

  00049	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004e	48 83 c0 18	 add	 rax, 24
  00052	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1595 : 
; 1596 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1597 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 1598 : 
; 1599 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

  00057	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0005c	e8 00 00 00 00	 call	 ?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::vector<char,std::allocator<char> >::_Getal
  00061	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  00066	48 8b c8	 mov	 rcx, rax
  00069	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  0006e	48 89 44 24 40	 mov	 QWORD PTR _Newvec$[rsp], rax

; 1600 :         _Myfirst           = _Newvec;

  00073	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00078	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0007d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1601 :         _Mylast            = _Newvec;

  00080	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00085	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0008a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1602 :         _Myend             = _Newvec + _Newcapacity;

  0008d	48 8b 44 24 68	 mov	 rax, QWORD PTR _Newcapacity$[rsp]
  00092	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  00097	48 03 c8	 add	 rcx, rax
  0009a	48 8b c1	 mov	 rax, rcx
  0009d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  000a2	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1603 :     }

  000a5	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000a9	5f		 pop	 rdi
  000aa	c3		 ret	 0
?_Buy_raw@?$vector@DV?$allocator@D@std@@@std@@AEAAX_K@Z ENDP ; std::vector<char,std::allocator<char> >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@DV?$allocator@D@std@@@std@@AEAAXPEAD0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@DV?$allocator@D@std@@@std@@AEAAXPEAD0@Z PROC ; std::vector<char,std::allocator<char> >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::vector<char,std::allocator<char> >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@D@std@@@std@@YAXPEADQEADAEAV?$allocator@D@0@@Z ; std::_Destroy_range<std::allocator<char> >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@DV?$allocator@D@std@@@std@@AEAAXPEAD0@Z ENDP ; std::vector<char,std::allocator<char> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Ufill@?$vector@DV?$allocator@D@std@@@std@@AEAAPEADPEAD_KAEBD@Z
_TEXT	SEGMENT
this$ = 48
_Dest$ = 56
_Count$ = 64
_Val$ = 72
?_Ufill@?$vector@DV?$allocator@D@std@@@std@@AEAAPEADPEAD_KAEBD@Z PROC ; std::vector<char,std::allocator<char> >::_Ufill, COMDAT

; 1532 :     pointer _Ufill(pointer _Dest, const size_type _Count, const _Ty& _Val) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1533 :         // fill raw _Dest with _Count copies of _Val, using allocator
; 1534 :         return _Uninitialized_fill_n(_Dest, _Count, _Val, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::vector<char,std::allocator<char> >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Val$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Count$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_fill_n@V?$allocator@D@std@@@std@@YAPEADPEAD_KAEBDAEAV?$allocator@D@0@@Z ; std::_Uninitialized_fill_n<std::allocator<char> >

; 1535 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Ufill@?$vector@DV?$allocator@D@std@@@std@@AEAAPEADPEAD_KAEBD@Z ENDP ; std::vector<char,std::allocator<char> >::_Ufill
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ PROC ; std::vector<char,std::allocator<char> >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1442 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::vector<char,std::allocator<char> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ ENDP ; std::vector<char,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ PROC	; std::vector<char,std::allocator<char> >::size, COMDAT

; 1436 :     _NODISCARD size_type size() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1437 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1438 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00037	48 2b c1	 sub	 rax, rcx

; 1439 :     }

  0003a	48 83 c4 10	 add	 rsp, 16
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ ENDP	; std::vector<char,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
this$ = 48
?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ PROC ; std::vector<char,std::allocator<char> >::data, COMDAT

; 1352 :     _NODISCARD _Ty* data() noexcept { // return address of first element

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1353 :         return _Unfancy_maybe_null(_Mypair._Myval2._Myfirst);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00027	e8 00 00 00 00	 call	 ??$_Unfancy_maybe_null@D@std@@YAPEADPEAD@Z ; std::_Unfancy_maybe_null<char>
  0002c	90		 npad	 1

; 1354 :     }

  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ ENDP ; std::vector<char,std::allocator<char> >::data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S5$ = 52
$T4 = 68
this$ = 96
??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ PROC	; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@DV?$allocator@D@std@@@std@@AEAAXXZ ; std::vector<char,std::allocator<char> >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@DV?$allocator@D@std@@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::vector<char,std::allocator<char> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S5$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S5$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ ENDP	; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@DV?$allocator@D@std@@@std@@QEAA@_KAEBDAEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Count$ = 72
_Val$ = 80
_Al$ = 88
??0?$vector@DV?$allocator@D@std@@@std@@QEAA@_KAEBDAEBV?$allocator@D@1@@Z PROC ; std::vector<char,std::allocator<char> >::vector<char,std::allocator<char> >, COMDAT

; 417  :     vector(_CRT_GUARDOVERFLOW const size_type _Count, const _Ty& _Val, const _Alloc& _Al = _Alloc())

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 418  :         : _Mypair(_One_then_variadic_args_t(), _Al) { // construct from _Count * _Val, optional allocator

  0002d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00032	4c 8b 44 24 58	 mov	 r8, QWORD PTR _Al$[rsp]
  00037	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  0003c	48 8b c8	 mov	 rcx, rax
  0003f	e8 00 00 00 00	 call	 ??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_Vector_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_Vector_val<std::_Simple_types<char> >,1><std::allocator<char> const &>

; 419  :         _Construct_n_copies_of_ty(_Count, _Val);

  00044	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Val$[rsp]
  00049	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Count$[rsp]
  0004e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00053	e8 00 00 00 00	 call	 ??$_Construct_n_copies_of_ty@D@?$vector@DV?$allocator@D@std@@@std@@AEAAX_KAEBD@Z ; std::vector<char,std::allocator<char> >::_Construct_n_copies_of_ty<char>

; 420  :     }

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??0?$vector@DV?$allocator@D@std@@@std@@QEAA@_KAEBDAEBV?$allocator@D@1@@Z ENDP ; std::vector<char,std::allocator<char> >::vector<char,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
ret$ = 0
y0$ = 32
$T1 = 64
$T2 = 96
$T3 = 128
$T4 = 160
$T5 = 192
$T6 = 224
bAVXAvail$ = 304
?rgy_avx_dummy_if_avail@@YAHH@Z PROC			; rgy_avx_dummy_if_avail

; 1030 : RGY_NOINLINE int rgy_avx_dummy_if_avail(int bAVXAvail) {

$LN4:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	55		 push	 rbp
  00005	57		 push	 rdi
  00006	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 83 e5 e0	 and	 rbp, -32		; ffffffffffffffe0H
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR [rsp+304]

; 1031 :     int ret = 1;

  0002c	c7 45 00 01 00
	00 00		 mov	 DWORD PTR ret$[rbp], 1

; 1032 :     if (bAVXAvail) {

  00033	83 bc 24 30 01
	00 00 00	 cmp	 DWORD PTR bAVXAvail$[rsp], 0
  0003b	74 08		 je	 SHORT $LN2@rgy_avx_du

; 1033 :         return ret;

  0003d	8b 45 00	 mov	 eax, DWORD PTR ret$[rbp]
  00040	e9 83 00 00 00	 jmp	 $LN1@rgy_avx_du
$LN2@rgy_avx_du:

; 1034 :     }
; 1035 :     __m256 y0 = _mm256_castsi256_ps(_mm256_castsi128_si256(_mm_cvtsi32_si128(bAVXAvail)));

  00045	66 0f 6e 84 24
	30 01 00 00	 movd	 xmm0, DWORD PTR bAVXAvail$[rsp]
  0004e	66 0f 7f 45 40	 movdqa	 XMMWORD PTR $T1[rbp], xmm0
  00053	c5 f8 10 45 40	 vmovups xmm0, XMMWORD PTR $T1[rbp]
  00058	c5 fe 7f 45 60	 vmovdqu YMMWORD PTR $T2[rbp], ymm0
  0005d	c5 fc 10 45 60	 vmovups ymm0, YMMWORD PTR $T2[rbp]
  00062	c5 fc 11 85 80
	00 00 00	 vmovups YMMWORD PTR $T3[rbp], ymm0
  0006a	c5 fc 10 85 80
	00 00 00	 vmovups ymm0, YMMWORD PTR $T3[rbp]
  00072	c5 fc 11 45 20	 vmovups YMMWORD PTR y0$[rbp], ymm0

; 1036 :     y0 = _mm256_xor_ps(y0, y0);

  00077	c5 fc 10 45 20	 vmovups ymm0, YMMWORD PTR y0$[rbp]
  0007c	c5 fc 57 45 20	 vxorps	 ymm0, ymm0, YMMWORD PTR y0$[rbp]
  00081	c5 fc 11 85 a0
	00 00 00	 vmovups YMMWORD PTR $T4[rbp], ymm0
  00089	c5 fc 10 85 a0
	00 00 00	 vmovups ymm0, YMMWORD PTR $T4[rbp]
  00091	c5 fc 11 45 20	 vmovups YMMWORD PTR y0$[rbp], ymm0

; 1037 :     ret = _mm_cvtsi128_si32(_mm256_castsi256_si128(_mm256_castps_si256(y0)));

  00096	c5 fc 10 45 20	 vmovups ymm0, YMMWORD PTR y0$[rbp]
  0009b	c5 fe 7f 85 c0
	00 00 00	 vmovdqu YMMWORD PTR $T5[rbp], ymm0
  000a3	c5 f8 10 85 c0
	00 00 00	 vmovups xmm0, XMMWORD PTR $T5[rbp]
  000ab	66 0f 7f 85 e0
	00 00 00	 movdqa	 XMMWORD PTR $T6[rbp], xmm0
  000b3	66 0f 6f 85 e0
	00 00 00	 movdqa	 xmm0, XMMWORD PTR $T6[rbp]
  000bb	66 0f 7e c0	 movd	 eax, xmm0
  000bf	89 45 00	 mov	 DWORD PTR ret$[rbp], eax

; 1038 :     _mm256_zeroupper();

  000c2	c5 f8 77	 vzeroupper

; 1039 :     return ret;

  000c5	8b 45 00	 mov	 eax, DWORD PTR ret$[rbp]
$LN1@rgy_avx_du:

; 1040 : }

  000c8	48 81 c4 18 01
	00 00		 add	 rsp, 280		; 00000118H
  000cf	5f		 pop	 rdi
  000d0	5d		 pop	 rbp
  000d1	c3		 ret	 0
?rgy_avx_dummy_if_avail@@YAHH@Z ENDP			; rgy_avx_dummy_if_avail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
this$ = 16
??0DataSelect@@QEAA@XZ PROC				; DataSelect::DataSelect

; 1069 :     trackID(0) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 1070 : 
; 1071 : }

  00011	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00016	5f		 pop	 rdi
  00017	c3		 ret	 0
??0DataSelect@@QEAA@XZ ENDP				; DataSelect::DataSelect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
this$ = 48
??0SubtitleSelect@@QEAA@XZ PROC				; SubtitleSelect::SubtitleSelect

; 1064 :     asdata(false) {

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1060 :     trackID(0),

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 1061 :     encCodec(),

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 83 c0 08	 add	 rax, 8
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0003a	90		 npad	 1

; 1062 :     encCodecPrm(),

  0003b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00040	48 83 c0 30	 add	 rax, 48			; 00000030H
  00044	48 8b c8	 mov	 rcx, rax
  00047	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0004c	90		 npad	 1

; 1063 :     decCodecPrm(),

  0004d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00052	48 83 c0 58	 add	 rax, 88			; 00000058H
  00056	48 8b c8	 mov	 rcx, rax
  00059	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0005e	90		 npad	 1

; 1064 :     asdata(false) {

  0005f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00064	c6 80 80 00 00
	00 00		 mov	 BYTE PTR [rax+128], 0

; 1065 : 
; 1066 : }

  0006b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00070	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00074	5f		 pop	 rdi
  00075	c3		 ret	 0
??0SubtitleSelect@@QEAA@XZ ENDP				; SubtitleSelect::SubtitleSelect
_TEXT	ENDS
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0SubtitleSelect@@QEAA@XZ@4HA PROC		; `SubtitleSelect::SubtitleSelect'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0SubtitleSelect@@QEAA@XZ@4HA ENDP		; `SubtitleSelect::SubtitleSelect'::`1'::dtor$0
this$ = 48
?dtor$1@?0???0SubtitleSelect@@QEAA@XZ@4HA PROC		; `SubtitleSelect::SubtitleSelect'::`1'::dtor$1
  00027	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00031	55		 push	 rbp
  00032	57		 push	 rdi
  00033	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00037	48 8b ea	 mov	 rbp, rdx
  0003a	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003e	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00042	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00047	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?dtor$1@?0???0SubtitleSelect@@QEAA@XZ@4HA ENDP		; `SubtitleSelect::SubtitleSelect'::`1'::dtor$1
this$ = 48
?dtor$2@?0???0SubtitleSelect@@QEAA@XZ@4HA PROC		; `SubtitleSelect::SubtitleSelect'::`1'::dtor$2
  0004e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00053	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00058	55		 push	 rbp
  00059	57		 push	 rdi
  0005a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005e	48 8b ea	 mov	 rbp, rdx
  00061	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00065	48 83 c1 58	 add	 rcx, 88			; 00000058H
  00069	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0006e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
?dtor$2@?0???0SubtitleSelect@@QEAA@XZ@4HA ENDP		; `SubtitleSelect::SubtitleSelect'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0SubtitleSelect@@QEAA@XZ@4HA PROC		; `SubtitleSelect::SubtitleSelect'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0SubtitleSelect@@QEAA@XZ@4HA ENDP		; `SubtitleSelect::SubtitleSelect'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$1@?0???0SubtitleSelect@@QEAA@XZ@4HA PROC		; `SubtitleSelect::SubtitleSelect'::`1'::dtor$1
  00027	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00031	55		 push	 rbp
  00032	57		 push	 rdi
  00033	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00037	48 8b ea	 mov	 rbp, rdx
  0003a	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003e	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00042	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00047	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?dtor$1@?0???0SubtitleSelect@@QEAA@XZ@4HA ENDP		; `SubtitleSelect::SubtitleSelect'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$2@?0???0SubtitleSelect@@QEAA@XZ@4HA PROC		; `SubtitleSelect::SubtitleSelect'::`1'::dtor$2
  0004e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00053	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00058	55		 push	 rbp
  00059	57		 push	 rdi
  0005a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005e	48 8b ea	 mov	 rbp, rdx
  00061	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00065	48 83 c1 58	 add	 rcx, 88			; 00000058H
  00069	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0006e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
?dtor$2@?0???0SubtitleSelect@@QEAA@XZ@4HA ENDP		; `SubtitleSelect::SubtitleSelect'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
this$ = 48
??0AudioSelect@@QEAA@XZ PROC				; AudioSelect::AudioSelect

; 1054 :     pnStreamChannelOut() {

$LN10:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1043 :     trackID(0),

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 1044 :     decCodecPrm(),

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 83 c0 08	 add	 rax, 8
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0003a	90		 npad	 1

; 1045 :     encCodec(),

  0003b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00040	48 83 c0 30	 add	 rax, 48			; 00000030H
  00044	48 8b c8	 mov	 rcx, rax
  00047	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0004c	90		 npad	 1

; 1046 :     encCodecPrm(),

  0004d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00052	48 83 c0 58	 add	 rax, 88			; 00000058H
  00056	48 8b c8	 mov	 rcx, rax
  00059	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0005e	90		 npad	 1

; 1047 :     encCodecProfile(),

  0005f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00064	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  0006a	48 8b c8	 mov	 rcx, rax
  0006d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00072	90		 npad	 1

; 1048 :     encBitrate(0),

  00073	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00078	c7 80 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+168], 0

; 1049 :     encSamplingRate(0),

  00082	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00087	c7 80 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+172], 0

; 1050 :     extractFilename(),

  00091	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00096	48 05 b0 00 00
	00		 add	 rax, 176		; 000000b0H
  0009c	48 8b c8	 mov	 rcx, rax
  0009f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000a4	90		 npad	 1

; 1051 :     extractFormat(),

  000a5	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000aa	48 05 d8 00 00
	00		 add	 rax, 216		; 000000d8H
  000b0	48 8b c8	 mov	 rcx, rax
  000b3	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000b8	90		 npad	 1

; 1052 :     filter(),

  000b9	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000be	48 05 00 01 00
	00		 add	 rax, 256		; 00000100H
  000c4	48 8b c8	 mov	 rcx, rax
  000c7	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000cc	90		 npad	 1

; 1053 :     pnStreamChannelSelect(),

  000cd	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000d2	48 05 28 01 00
	00		 add	 rax, 296		; 00000128H
  000d8	48 8b f8	 mov	 rdi, rax
  000db	33 c0		 xor	 eax, eax
  000dd	b9 00 01 00 00	 mov	 ecx, 256		; 00000100H
  000e2	f3 aa		 rep stosb

; 1054 :     pnStreamChannelOut() {

  000e4	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000e9	48 05 28 02 00
	00		 add	 rax, 552		; 00000228H
  000ef	48 8b f8	 mov	 rdi, rax
  000f2	33 c0		 xor	 eax, eax
  000f4	b9 00 01 00 00	 mov	 ecx, 256		; 00000100H
  000f9	f3 aa		 rep stosb

; 1055 :     memset(pnStreamChannelSelect, 0, sizeof(pnStreamChannelSelect));

  000fb	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00100	48 05 28 01 00
	00		 add	 rax, 296		; 00000128H
  00106	41 b8 00 01 00
	00		 mov	 r8d, 256		; 00000100H
  0010c	33 d2		 xor	 edx, edx
  0010e	48 8b c8	 mov	 rcx, rax
  00111	e8 00 00 00 00	 call	 memset

; 1056 :     memset(pnStreamChannelOut, 0, sizeof(pnStreamChannelOut));

  00116	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0011b	48 05 28 02 00
	00		 add	 rax, 552		; 00000228H
  00121	41 b8 00 01 00
	00		 mov	 r8d, 256		; 00000100H
  00127	33 d2		 xor	 edx, edx
  00129	48 8b c8	 mov	 rcx, rax
  0012c	e8 00 00 00 00	 call	 memset
  00131	90		 npad	 1

; 1057 : }

  00132	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00137	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0013b	5f		 pop	 rdi
  0013c	c3		 ret	 0
??0AudioSelect@@QEAA@XZ ENDP				; AudioSelect::AudioSelect
_TEXT	ENDS
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0AudioSelect@@QEAA@XZ@4HA PROC		; `AudioSelect::AudioSelect'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0AudioSelect@@QEAA@XZ@4HA ENDP		; `AudioSelect::AudioSelect'::`1'::dtor$0
this$ = 48
?dtor$1@?0???0AudioSelect@@QEAA@XZ@4HA PROC		; `AudioSelect::AudioSelect'::`1'::dtor$1
  00027	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00031	55		 push	 rbp
  00032	57		 push	 rdi
  00033	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00037	48 8b ea	 mov	 rbp, rdx
  0003a	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003e	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00042	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00047	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?dtor$1@?0???0AudioSelect@@QEAA@XZ@4HA ENDP		; `AudioSelect::AudioSelect'::`1'::dtor$1
this$ = 48
?dtor$2@?0???0AudioSelect@@QEAA@XZ@4HA PROC		; `AudioSelect::AudioSelect'::`1'::dtor$2
  0004e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00053	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00058	55		 push	 rbp
  00059	57		 push	 rdi
  0005a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005e	48 8b ea	 mov	 rbp, rdx
  00061	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00065	48 83 c1 58	 add	 rcx, 88			; 00000058H
  00069	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0006e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
?dtor$2@?0???0AudioSelect@@QEAA@XZ@4HA ENDP		; `AudioSelect::AudioSelect'::`1'::dtor$2
this$ = 48
?dtor$3@?0???0AudioSelect@@QEAA@XZ@4HA PROC		; `AudioSelect::AudioSelect'::`1'::dtor$3
  00075	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0007a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0007f	55		 push	 rbp
  00080	57		 push	 rdi
  00081	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00085	48 8b ea	 mov	 rbp, rdx
  00088	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0008c	48 81 c1 80 00
	00 00		 add	 rcx, 128		; 00000080H
  00093	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00098	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0009c	5f		 pop	 rdi
  0009d	5d		 pop	 rbp
  0009e	c3		 ret	 0
?dtor$3@?0???0AudioSelect@@QEAA@XZ@4HA ENDP		; `AudioSelect::AudioSelect'::`1'::dtor$3
this$ = 48
?dtor$4@?0???0AudioSelect@@QEAA@XZ@4HA PROC		; `AudioSelect::AudioSelect'::`1'::dtor$4
  0009f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000a4	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000a9	55		 push	 rbp
  000aa	57		 push	 rdi
  000ab	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000af	48 8b ea	 mov	 rbp, rdx
  000b2	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000b6	48 81 c1 b0 00
	00 00		 add	 rcx, 176		; 000000b0H
  000bd	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000c2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000c6	5f		 pop	 rdi
  000c7	5d		 pop	 rbp
  000c8	c3		 ret	 0
?dtor$4@?0???0AudioSelect@@QEAA@XZ@4HA ENDP		; `AudioSelect::AudioSelect'::`1'::dtor$4
this$ = 48
?dtor$5@?0???0AudioSelect@@QEAA@XZ@4HA PROC		; `AudioSelect::AudioSelect'::`1'::dtor$5
  000c9	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000ce	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000d3	55		 push	 rbp
  000d4	57		 push	 rdi
  000d5	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000d9	48 8b ea	 mov	 rbp, rdx
  000dc	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000e0	48 81 c1 d8 00
	00 00		 add	 rcx, 216		; 000000d8H
  000e7	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000ec	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000f0	5f		 pop	 rdi
  000f1	5d		 pop	 rbp
  000f2	c3		 ret	 0
?dtor$5@?0???0AudioSelect@@QEAA@XZ@4HA ENDP		; `AudioSelect::AudioSelect'::`1'::dtor$5
this$ = 48
?dtor$6@?0???0AudioSelect@@QEAA@XZ@4HA PROC		; `AudioSelect::AudioSelect'::`1'::dtor$6
  000f3	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000f8	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000fd	55		 push	 rbp
  000fe	57		 push	 rdi
  000ff	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00103	48 8b ea	 mov	 rbp, rdx
  00106	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0010a	48 81 c1 00 01
	00 00		 add	 rcx, 256		; 00000100H
  00111	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00116	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0011a	5f		 pop	 rdi
  0011b	5d		 pop	 rbp
  0011c	c3		 ret	 0
?dtor$6@?0???0AudioSelect@@QEAA@XZ@4HA ENDP		; `AudioSelect::AudioSelect'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0AudioSelect@@QEAA@XZ@4HA PROC		; `AudioSelect::AudioSelect'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0AudioSelect@@QEAA@XZ@4HA ENDP		; `AudioSelect::AudioSelect'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$1@?0???0AudioSelect@@QEAA@XZ@4HA PROC		; `AudioSelect::AudioSelect'::`1'::dtor$1
  00027	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00031	55		 push	 rbp
  00032	57		 push	 rdi
  00033	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00037	48 8b ea	 mov	 rbp, rdx
  0003a	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003e	48 83 c1 30	 add	 rcx, 48			; 00000030H
  00042	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00047	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?dtor$1@?0???0AudioSelect@@QEAA@XZ@4HA ENDP		; `AudioSelect::AudioSelect'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$2@?0???0AudioSelect@@QEAA@XZ@4HA PROC		; `AudioSelect::AudioSelect'::`1'::dtor$2
  0004e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00053	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00058	55		 push	 rbp
  00059	57		 push	 rdi
  0005a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005e	48 8b ea	 mov	 rbp, rdx
  00061	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00065	48 83 c1 58	 add	 rcx, 88			; 00000058H
  00069	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0006e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
?dtor$2@?0???0AudioSelect@@QEAA@XZ@4HA ENDP		; `AudioSelect::AudioSelect'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$3@?0???0AudioSelect@@QEAA@XZ@4HA PROC		; `AudioSelect::AudioSelect'::`1'::dtor$3
  00075	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0007a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0007f	55		 push	 rbp
  00080	57		 push	 rdi
  00081	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00085	48 8b ea	 mov	 rbp, rdx
  00088	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0008c	48 81 c1 80 00
	00 00		 add	 rcx, 128		; 00000080H
  00093	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00098	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0009c	5f		 pop	 rdi
  0009d	5d		 pop	 rbp
  0009e	c3		 ret	 0
?dtor$3@?0???0AudioSelect@@QEAA@XZ@4HA ENDP		; `AudioSelect::AudioSelect'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$4@?0???0AudioSelect@@QEAA@XZ@4HA PROC		; `AudioSelect::AudioSelect'::`1'::dtor$4
  0009f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000a4	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000a9	55		 push	 rbp
  000aa	57		 push	 rdi
  000ab	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000af	48 8b ea	 mov	 rbp, rdx
  000b2	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000b6	48 81 c1 b0 00
	00 00		 add	 rcx, 176		; 000000b0H
  000bd	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000c2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000c6	5f		 pop	 rdi
  000c7	5d		 pop	 rbp
  000c8	c3		 ret	 0
?dtor$4@?0???0AudioSelect@@QEAA@XZ@4HA ENDP		; `AudioSelect::AudioSelect'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$5@?0???0AudioSelect@@QEAA@XZ@4HA PROC		; `AudioSelect::AudioSelect'::`1'::dtor$5
  000c9	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000ce	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000d3	55		 push	 rbp
  000d4	57		 push	 rdi
  000d5	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000d9	48 8b ea	 mov	 rbp, rdx
  000dc	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000e0	48 81 c1 d8 00
	00 00		 add	 rcx, 216		; 000000d8H
  000e7	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000ec	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000f0	5f		 pop	 rdi
  000f1	5d		 pop	 rbp
  000f2	c3		 ret	 0
?dtor$5@?0???0AudioSelect@@QEAA@XZ@4HA ENDP		; `AudioSelect::AudioSelect'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$6@?0???0AudioSelect@@QEAA@XZ@4HA PROC		; `AudioSelect::AudioSelect'::`1'::dtor$6
  000f3	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000f8	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000fd	55		 push	 rbp
  000fe	57		 push	 rdi
  000ff	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00103	48 8b ea	 mov	 rbp, rdx
  00106	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0010a	48 81 c1 00 01
	00 00		 add	 rcx, 256		; 00000100H
  00111	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00116	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0011a	5f		 pop	 rdi
  0011b	5d		 pop	 rbp
  0011c	c3		 ret	 0
?dtor$6@?0???0AudioSelect@@QEAA@XZ@4HA ENDP		; `AudioSelect::AudioSelect'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
i$1 = 32
$T2 = 36
$T3 = 40
__$ReturnUdt$ = 64
idx$ = 72
?get_h264_sar@@YA?AU?$pair@HH@std@@H@Z PROC		; get_h264_sar

; 945  : std::pair<int, int> get_h264_sar(int idx) {

$LN7:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 946  :     for (int i = 0; i < _countof(SAR_LIST); i++) {

  00022	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR i$1[rsp], 0
  0002a	eb 0a		 jmp	 SHORT $LN4@get_h264_s
$LN2@get_h264_s:
  0002c	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  00030	ff c0		 inc	 eax
  00032	89 44 24 20	 mov	 DWORD PTR i$1[rsp], eax
$LN4@get_h264_s:
  00036	48 63 44 24 20	 movsxd	 rax, DWORD PTR i$1[rsp]
  0003b	48 83 f8 11	 cmp	 rax, 17
  0003f	73 7d		 jae	 SHORT $LN3@get_h264_s

; 947  :         if (SAR_LIST[i].key == idx)

  00041	48 63 44 24 20	 movsxd	 rax, DWORD PTR i$1[rsp]
  00046	48 6b c0 0c	 imul	 rax, rax, 12
  0004a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?SAR_LIST@@3QBUsar_option_t@@B
  00051	8b 54 24 48	 mov	 edx, DWORD PTR idx$[rsp]
  00055	39 14 01	 cmp	 DWORD PTR [rcx+rax], edx
  00058	75 5f		 jne	 SHORT $LN5@get_h264_s

; 948  :             return std::make_pair(SAR_LIST[i].sar[0], SAR_LIST[i].sar[1]);

  0005a	48 63 44 24 20	 movsxd	 rax, DWORD PTR i$1[rsp]
  0005f	48 6b c0 0c	 imul	 rax, rax, 12
  00063	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?SAR_LIST@@3QBUsar_option_t@@B
  0006a	48 03 c8	 add	 rcx, rax
  0006d	48 8b c1	 mov	 rax, rcx
  00070	b9 04 00 00 00	 mov	 ecx, 4
  00075	48 6b c9 01	 imul	 rcx, rcx, 1
  00079	48 8d 44 08 04	 lea	 rax, QWORD PTR [rax+rcx+4]
  0007e	48 63 4c 24 20	 movsxd	 rcx, DWORD PTR i$1[rsp]
  00083	48 6b c9 0c	 imul	 rcx, rcx, 12
  00087	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?SAR_LIST@@3QBUsar_option_t@@B
  0008e	48 03 d1	 add	 rdx, rcx
  00091	48 8b ca	 mov	 rcx, rdx
  00094	ba 04 00 00 00	 mov	 edx, 4
  00099	48 6b d2 00	 imul	 rdx, rdx, 0
  0009d	48 8d 4c 11 04	 lea	 rcx, QWORD PTR [rcx+rdx+4]
  000a2	4c 8b c0	 mov	 r8, rax
  000a5	48 8b d1	 mov	 rdx, rcx
  000a8	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000ad	e8 00 00 00 00	 call	 ??$make_pair@AEBHAEBH@std@@YA?AU?$pair@HH@0@AEBH0@Z ; std::make_pair<int const &,int const &>
  000b2	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  000b7	eb 2e		 jmp	 SHORT $LN1@get_h264_s
$LN5@get_h264_s:

; 949  :     }

  000b9	e9 6e ff ff ff	 jmp	 $LN2@get_h264_s
$LN3@get_h264_s:

; 950  :     return std::make_pair(0, 0);

  000be	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR $T2[rsp], 0
  000c6	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR $T3[rsp], 0
  000ce	4c 8d 44 24 24	 lea	 r8, QWORD PTR $T2[rsp]
  000d3	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T3[rsp]
  000d8	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000dd	e8 00 00 00 00	 call	 ??$make_pair@HH@std@@YA?AU?$pair@HH@0@$$QEAH0@Z ; std::make_pair<int,int>
  000e2	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@get_h264_s:

; 951  : }

  000e7	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000eb	5f		 pop	 rdi
  000ec	c3		 ret	 0
?get_h264_sar@@YA?AU?$pair@HH@std@@H@Z ENDP		; get_h264_sar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
i$1 = 32
sar$ = 64
?get_h264_sar_idx@@YAHU?$pair@HH@std@@@Z PROC		; get_h264_sar_idx

; 953  : int get_h264_sar_idx(std::pair<int, int> sar) {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 954  : 
; 955  :     if (0 != sar.first && 0 != sar.second) {

  0001e	83 7c 24 40 00	 cmp	 DWORD PTR sar$[rsp], 0
  00023	74 11		 je	 SHORT $LN5@get_h264_s
  00025	83 7c 24 44 00	 cmp	 DWORD PTR sar$[rsp+4], 0
  0002a	74 0a		 je	 SHORT $LN5@get_h264_s

; 956  :         rgy_reduce(sar);

  0002c	48 8d 4c 24 40	 lea	 rcx, QWORD PTR sar$[rsp]
  00031	e8 00 00 00 00	 call	 ??$rgy_reduce@H@@YAXAEAU?$pair@HH@std@@@Z ; rgy_reduce<int>
$LN5@get_h264_s:

; 957  :     }
; 958  : 
; 959  :     for (int i = 0; i < _countof(SAR_LIST); i++) {

  00036	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR i$1[rsp], 0
  0003e	eb 0a		 jmp	 SHORT $LN4@get_h264_s
$LN2@get_h264_s:
  00040	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  00044	ff c0		 inc	 eax
  00046	89 44 24 20	 mov	 DWORD PTR i$1[rsp], eax
$LN4@get_h264_s:
  0004a	48 63 44 24 20	 movsxd	 rax, DWORD PTR i$1[rsp]
  0004f	48 83 f8 11	 cmp	 rax, 17
  00053	73 69		 jae	 SHORT $LN3@get_h264_s

; 960  :         if (SAR_LIST[i].sar[0] == sar.first && SAR_LIST[i].sar[1] == sar.second) {

  00055	48 63 44 24 20	 movsxd	 rax, DWORD PTR i$1[rsp]
  0005a	48 6b c0 0c	 imul	 rax, rax, 12
  0005e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?SAR_LIST@@3QBUsar_option_t@@B
  00065	48 03 c8	 add	 rcx, rax
  00068	48 8b c1	 mov	 rax, rcx
  0006b	b9 04 00 00 00	 mov	 ecx, 4
  00070	48 6b c9 00	 imul	 rcx, rcx, 0
  00074	8b 54 24 40	 mov	 edx, DWORD PTR sar$[rsp]
  00078	39 54 08 04	 cmp	 DWORD PTR [rax+rcx+4], edx
  0007c	75 3e		 jne	 SHORT $LN6@get_h264_s
  0007e	48 63 44 24 20	 movsxd	 rax, DWORD PTR i$1[rsp]
  00083	48 6b c0 0c	 imul	 rax, rax, 12
  00087	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?SAR_LIST@@3QBUsar_option_t@@B
  0008e	48 03 c8	 add	 rcx, rax
  00091	48 8b c1	 mov	 rax, rcx
  00094	b9 04 00 00 00	 mov	 ecx, 4
  00099	48 6b c9 01	 imul	 rcx, rcx, 1
  0009d	8b 54 24 44	 mov	 edx, DWORD PTR sar$[rsp+4]
  000a1	39 54 08 04	 cmp	 DWORD PTR [rax+rcx+4], edx
  000a5	75 15		 jne	 SHORT $LN6@get_h264_s

; 961  :             return SAR_LIST[i].key;

  000a7	48 63 44 24 20	 movsxd	 rax, DWORD PTR i$1[rsp]
  000ac	48 6b c0 0c	 imul	 rax, rax, 12
  000b0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?SAR_LIST@@3QBUsar_option_t@@B
  000b7	8b 04 01	 mov	 eax, DWORD PTR [rcx+rax]
  000ba	eb 07		 jmp	 SHORT $LN1@get_h264_s
$LN6@get_h264_s:

; 962  :         }
; 963  :     }

  000bc	eb 82		 jmp	 SHORT $LN2@get_h264_s
$LN3@get_h264_s:

; 964  :     return -1;

  000be	b8 ff ff ff ff	 mov	 eax, -1
$LN1@get_h264_s:

; 965  : }

  000c3	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000c7	5f		 pop	 rdi
  000c8	c3		 ret	 0
?get_h264_sar_idx@@YAHU?$pair@HH@std@@@Z ENDP		; get_h264_sar_idx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
aspect_w$ = 32
aspect_h$ = 36
dar_x$1 = 40
dar_y$2 = 44
x$3 = 48
y$4 = 52
a$5 = 56
b$6 = 60
c$7 = 64
a$8 = 68
b$9 = 72
c$10 = 76
sar_w$ = 96
sar_h$ = 104
width$ = 112
height$ = 120
?adjust_sar@@YAXPEAH0HH@Z PROC				; adjust_sar

; 967  : void adjust_sar(int *sar_w, int *sar_h, int width, int height) {

$LN13:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 968  :     int aspect_w = *sar_w;

  0002d	48 8b 44 24 60	 mov	 rax, QWORD PTR sar_w$[rsp]
  00032	8b 00		 mov	 eax, DWORD PTR [rax]
  00034	89 44 24 20	 mov	 DWORD PTR aspect_w$[rsp], eax

; 969  :     int aspect_h = *sar_h;

  00038	48 8b 44 24 68	 mov	 rax, QWORD PTR sar_h$[rsp]
  0003d	8b 00		 mov	 eax, DWORD PTR [rax]
  0003f	89 44 24 24	 mov	 DWORD PTR aspect_h$[rsp], eax

; 970  :     //正負チェック
; 971  :     if (aspect_w * aspect_h <= 0)

  00043	8b 44 24 20	 mov	 eax, DWORD PTR aspect_w$[rsp]
  00047	0f af 44 24 24	 imul	 eax, DWORD PTR aspect_h$[rsp]
  0004c	85 c0		 test	 eax, eax
  0004e	7f 15		 jg	 SHORT $LN6@adjust_sar

; 972  :         aspect_w = aspect_h = 0;

  00050	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR aspect_h$[rsp], 0
  00058	8b 44 24 24	 mov	 eax, DWORD PTR aspect_h$[rsp]
  0005c	89 44 24 20	 mov	 DWORD PTR aspect_w$[rsp], eax
  00060	e9 1d 01 00 00	 jmp	 $LN7@adjust_sar
$LN6@adjust_sar:

; 973  :     else if (aspect_w < 0) {

  00065	83 7c 24 20 00	 cmp	 DWORD PTR aspect_w$[rsp], 0
  0006a	0f 8d ba 00 00
	00		 jge	 $LN8@adjust_sar

; 974  :         //負で与えられている場合はDARでの指定
; 975  :         //SAR比に変換する
; 976  :         int dar_x = -1 * aspect_w;

  00070	6b 44 24 20 ff	 imul	 eax, DWORD PTR aspect_w$[rsp], -1
  00075	89 44 24 28	 mov	 DWORD PTR dar_x$1[rsp], eax

; 977  :         int dar_y = -1 * aspect_h;

  00079	6b 44 24 24 ff	 imul	 eax, DWORD PTR aspect_h$[rsp], -1
  0007e	89 44 24 2c	 mov	 DWORD PTR dar_y$2[rsp], eax

; 978  :         int x = dar_x * height;

  00082	8b 44 24 28	 mov	 eax, DWORD PTR dar_x$1[rsp]
  00086	0f af 44 24 78	 imul	 eax, DWORD PTR height$[rsp]
  0008b	89 44 24 30	 mov	 DWORD PTR x$3[rsp], eax

; 979  :         int y = dar_y * width;

  0008f	8b 44 24 2c	 mov	 eax, DWORD PTR dar_y$2[rsp]
  00093	0f af 44 24 70	 imul	 eax, DWORD PTR width$[rsp]
  00098	89 44 24 34	 mov	 DWORD PTR y$4[rsp], eax

; 980  :         //多少のづれは容認する
; 981  :         if (abs(y - x) > 16 * dar_y) {

  0009c	8b 44 24 30	 mov	 eax, DWORD PTR x$3[rsp]
  000a0	8b 4c 24 34	 mov	 ecx, DWORD PTR y$4[rsp]
  000a4	2b c8		 sub	 ecx, eax
  000a6	8b c1		 mov	 eax, ecx
  000a8	8b c8		 mov	 ecx, eax
  000aa	e8 00 00 00 00	 call	 abs
  000af	6b 4c 24 2c 10	 imul	 ecx, DWORD PTR dar_y$2[rsp], 16
  000b4	3b c1		 cmp	 eax, ecx
  000b6	7e 5a		 jle	 SHORT $LN10@adjust_sar

; 982  :             //gcd
; 983  :             int a = x, b = y, c;

  000b8	8b 44 24 30	 mov	 eax, DWORD PTR x$3[rsp]
  000bc	89 44 24 38	 mov	 DWORD PTR a$5[rsp], eax
  000c0	8b 44 24 34	 mov	 eax, DWORD PTR y$4[rsp]
  000c4	89 44 24 3c	 mov	 DWORD PTR b$6[rsp], eax
$LN2@adjust_sar:

; 984  :             while ((c = a % b) != 0)

  000c8	8b 44 24 38	 mov	 eax, DWORD PTR a$5[rsp]
  000cc	99		 cdq
  000cd	f7 7c 24 3c	 idiv	 DWORD PTR b$6[rsp]
  000d1	8b c2		 mov	 eax, edx
  000d3	89 44 24 40	 mov	 DWORD PTR c$7[rsp], eax
  000d7	83 7c 24 40 00	 cmp	 DWORD PTR c$7[rsp], 0
  000dc	74 12		 je	 SHORT $LN3@adjust_sar

; 985  :                 a = b, b = c;

  000de	8b 44 24 3c	 mov	 eax, DWORD PTR b$6[rsp]
  000e2	89 44 24 38	 mov	 DWORD PTR a$5[rsp], eax
  000e6	8b 44 24 40	 mov	 eax, DWORD PTR c$7[rsp]
  000ea	89 44 24 3c	 mov	 DWORD PTR b$6[rsp], eax
  000ee	eb d8		 jmp	 SHORT $LN2@adjust_sar
$LN3@adjust_sar:

; 986  :             *sar_w = x / b;

  000f0	8b 44 24 30	 mov	 eax, DWORD PTR x$3[rsp]
  000f4	99		 cdq
  000f5	f7 7c 24 3c	 idiv	 DWORD PTR b$6[rsp]
  000f9	48 8b 4c 24 60	 mov	 rcx, QWORD PTR sar_w$[rsp]
  000fe	89 01		 mov	 DWORD PTR [rcx], eax

; 987  :             *sar_h = y / b;

  00100	8b 44 24 34	 mov	 eax, DWORD PTR y$4[rsp]
  00104	99		 cdq
  00105	f7 7c 24 3c	 idiv	 DWORD PTR b$6[rsp]
  00109	48 8b 4c 24 68	 mov	 rcx, QWORD PTR sar_h$[rsp]
  0010e	89 01		 mov	 DWORD PTR [rcx], eax

; 988  :         } else {

  00110	eb 16		 jmp	 SHORT $LN11@adjust_sar
$LN10@adjust_sar:

; 989  :             *sar_w = *sar_h = 1;

  00112	48 8b 44 24 68	 mov	 rax, QWORD PTR sar_h$[rsp]
  00117	c7 00 01 00 00
	00		 mov	 DWORD PTR [rax], 1
  0011d	48 8b 44 24 60	 mov	 rax, QWORD PTR sar_w$[rsp]
  00122	c7 00 01 00 00
	00		 mov	 DWORD PTR [rax], 1
$LN11@adjust_sar:

; 990  :         }
; 991  :     } else {

  00128	eb 58		 jmp	 SHORT $LN9@adjust_sar
$LN8@adjust_sar:

; 992  :         //sarも一応gcdをとっておく
; 993  :         int a = aspect_w, b = aspect_h, c;

  0012a	8b 44 24 20	 mov	 eax, DWORD PTR aspect_w$[rsp]
  0012e	89 44 24 44	 mov	 DWORD PTR a$8[rsp], eax
  00132	8b 44 24 24	 mov	 eax, DWORD PTR aspect_h$[rsp]
  00136	89 44 24 48	 mov	 DWORD PTR b$9[rsp], eax
$LN4@adjust_sar:

; 994  :         while ((c = a % b) != 0)

  0013a	8b 44 24 44	 mov	 eax, DWORD PTR a$8[rsp]
  0013e	99		 cdq
  0013f	f7 7c 24 48	 idiv	 DWORD PTR b$9[rsp]
  00143	8b c2		 mov	 eax, edx
  00145	89 44 24 4c	 mov	 DWORD PTR c$10[rsp], eax
  00149	83 7c 24 4c 00	 cmp	 DWORD PTR c$10[rsp], 0
  0014e	74 12		 je	 SHORT $LN5@adjust_sar

; 995  :             a = b, b = c;

  00150	8b 44 24 48	 mov	 eax, DWORD PTR b$9[rsp]
  00154	89 44 24 44	 mov	 DWORD PTR a$8[rsp], eax
  00158	8b 44 24 4c	 mov	 eax, DWORD PTR c$10[rsp]
  0015c	89 44 24 48	 mov	 DWORD PTR b$9[rsp], eax
  00160	eb d8		 jmp	 SHORT $LN4@adjust_sar
$LN5@adjust_sar:

; 996  :         *sar_w = aspect_w / b;

  00162	8b 44 24 20	 mov	 eax, DWORD PTR aspect_w$[rsp]
  00166	99		 cdq
  00167	f7 7c 24 48	 idiv	 DWORD PTR b$9[rsp]
  0016b	48 8b 4c 24 60	 mov	 rcx, QWORD PTR sar_w$[rsp]
  00170	89 01		 mov	 DWORD PTR [rcx], eax

; 997  :         *sar_h = aspect_h / b;

  00172	8b 44 24 24	 mov	 eax, DWORD PTR aspect_h$[rsp]
  00176	99		 cdq
  00177	f7 7c 24 48	 idiv	 DWORD PTR b$9[rsp]
  0017b	48 8b 4c 24 68	 mov	 rcx, QWORD PTR sar_h$[rsp]
  00180	89 01		 mov	 DWORD PTR [rcx], eax
$LN9@adjust_sar:
$LN7@adjust_sar:

; 998  :     }
; 999  : }

  00182	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00186	5f		 pop	 rdi
  00187	c3		 ret	 0
?adjust_sar@@YAXPEAH0HH@Z ENDP				; adjust_sar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
x$ = 32
y$ = 36
a$ = 40
b$ = 44
c$ = 48
$T1 = 52
$T2 = 56
__$ReturnUdt$ = 80
width$ = 88
height$ = 96
darWidth$ = 104
darHeight$ = 112
?get_sar@@YA?AU?$pair@HH@std@@IIII@Z PROC		; get_sar

; 1018 : std::pair<int, int> get_sar(unsigned int width, unsigned int height, unsigned int darWidth, unsigned int darHeight) {

$LN5:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 10 00 00 00	 mov	 ecx, 16
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1019 :     int x = darWidth  * height;

  0002c	8b 44 24 68	 mov	 eax, DWORD PTR darWidth$[rsp]
  00030	0f af 44 24 60	 imul	 eax, DWORD PTR height$[rsp]
  00035	89 44 24 20	 mov	 DWORD PTR x$[rsp], eax

; 1020 :     int y = darHeight *  width;

  00039	8b 44 24 70	 mov	 eax, DWORD PTR darHeight$[rsp]
  0003d	0f af 44 24 58	 imul	 eax, DWORD PTR width$[rsp]
  00042	89 44 24 24	 mov	 DWORD PTR y$[rsp], eax

; 1021 :     int a = x, b = y, c;

  00046	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0004a	89 44 24 28	 mov	 DWORD PTR a$[rsp], eax
  0004e	8b 44 24 24	 mov	 eax, DWORD PTR y$[rsp]
  00052	89 44 24 2c	 mov	 DWORD PTR b$[rsp], eax
$LN2@get_sar:

; 1022 :     while ((c = a % b) != 0)

  00056	8b 44 24 28	 mov	 eax, DWORD PTR a$[rsp]
  0005a	99		 cdq
  0005b	f7 7c 24 2c	 idiv	 DWORD PTR b$[rsp]
  0005f	8b c2		 mov	 eax, edx
  00061	89 44 24 30	 mov	 DWORD PTR c$[rsp], eax
  00065	83 7c 24 30 00	 cmp	 DWORD PTR c$[rsp], 0
  0006a	74 12		 je	 SHORT $LN3@get_sar

; 1023 :         a = b, b = c;

  0006c	8b 44 24 2c	 mov	 eax, DWORD PTR b$[rsp]
  00070	89 44 24 28	 mov	 DWORD PTR a$[rsp], eax
  00074	8b 44 24 30	 mov	 eax, DWORD PTR c$[rsp]
  00078	89 44 24 2c	 mov	 DWORD PTR b$[rsp], eax
  0007c	eb d8		 jmp	 SHORT $LN2@get_sar
$LN3@get_sar:

; 1024 :     return std::make_pair<int, int>(x / b, y / b);

  0007e	8b 44 24 24	 mov	 eax, DWORD PTR y$[rsp]
  00082	99		 cdq
  00083	f7 7c 24 2c	 idiv	 DWORD PTR b$[rsp]
  00087	89 44 24 34	 mov	 DWORD PTR $T1[rsp], eax
  0008b	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0008f	99		 cdq
  00090	f7 7c 24 2c	 idiv	 DWORD PTR b$[rsp]
  00094	89 44 24 38	 mov	 DWORD PTR $T2[rsp], eax
  00098	4c 8d 44 24 34	 lea	 r8, QWORD PTR $T1[rsp]
  0009d	48 8d 54 24 38	 lea	 rdx, QWORD PTR $T2[rsp]
  000a2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000a7	e8 00 00 00 00	 call	 ??$make_pair@HH@std@@YA?AU?$pair@HH@0@$$QEAH0@Z ; std::make_pair<int,int>
  000ac	48 8b 44 24 50	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1025 : }

  000b1	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000b5	5f		 pop	 rdi
  000b6	c3		 ret	 0
?get_sar@@YA?AU?$pair@HH@std@@IIII@Z ENDP		; get_sar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
w$ = 0
h$ = 4
x$1 = 8
y$2 = 12
a$3 = 16
b$4 = 20
c$5 = 24
ratio$6 = 32
tv81 = 40
width$ = 64
height$ = 72
sar_w$ = 80
sar_h$ = 88
?get_dar_pixels@@YAXPEAI0HH@Z PROC			; get_dar_pixels

; 1001 : void get_dar_pixels(unsigned int* width, unsigned int* height, int sar_w, int sar_h) {

$LN8:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1002 :     int w = *width;

  0002d	48 8b 44 24 40	 mov	 rax, QWORD PTR width$[rsp]
  00032	8b 00		 mov	 eax, DWORD PTR [rax]
  00034	89 04 24	 mov	 DWORD PTR w$[rsp], eax

; 1003 :     int h = *height;

  00037	48 8b 44 24 48	 mov	 rax, QWORD PTR height$[rsp]
  0003c	8b 00		 mov	 eax, DWORD PTR [rax]
  0003e	89 44 24 04	 mov	 DWORD PTR h$[rsp], eax

; 1004 :     if (0 != (w * h * sar_w * sar_h)) {

  00042	8b 04 24	 mov	 eax, DWORD PTR w$[rsp]
  00045	0f af 44 24 04	 imul	 eax, DWORD PTR h$[rsp]
  0004a	0f af 44 24 50	 imul	 eax, DWORD PTR sar_w$[rsp]
  0004f	0f af 44 24 58	 imul	 eax, DWORD PTR sar_h$[rsp]
  00054	85 c0		 test	 eax, eax
  00056	0f 84 ec 00 00
	00		 je	 $LN4@get_dar_pi

; 1005 :         int x = w * sar_w;

  0005c	8b 04 24	 mov	 eax, DWORD PTR w$[rsp]
  0005f	0f af 44 24 50	 imul	 eax, DWORD PTR sar_w$[rsp]
  00064	89 44 24 08	 mov	 DWORD PTR x$1[rsp], eax

; 1006 :         int y = h * sar_h;

  00068	8b 44 24 04	 mov	 eax, DWORD PTR h$[rsp]
  0006c	0f af 44 24 58	 imul	 eax, DWORD PTR sar_h$[rsp]
  00071	89 44 24 0c	 mov	 DWORD PTR y$2[rsp], eax

; 1007 :         int a = x, b = y, c;

  00075	8b 44 24 08	 mov	 eax, DWORD PTR x$1[rsp]
  00079	89 44 24 10	 mov	 DWORD PTR a$3[rsp], eax
  0007d	8b 44 24 0c	 mov	 eax, DWORD PTR y$2[rsp]
  00081	89 44 24 14	 mov	 DWORD PTR b$4[rsp], eax
$LN2@get_dar_pi:

; 1008 :         while ((c = a % b) != 0)

  00085	8b 44 24 10	 mov	 eax, DWORD PTR a$3[rsp]
  00089	99		 cdq
  0008a	f7 7c 24 14	 idiv	 DWORD PTR b$4[rsp]
  0008e	8b c2		 mov	 eax, edx
  00090	89 44 24 18	 mov	 DWORD PTR c$5[rsp], eax
  00094	83 7c 24 18 00	 cmp	 DWORD PTR c$5[rsp], 0
  00099	74 12		 je	 SHORT $LN3@get_dar_pi

; 1009 :             a = b, b = c;

  0009b	8b 44 24 14	 mov	 eax, DWORD PTR b$4[rsp]
  0009f	89 44 24 10	 mov	 DWORD PTR a$3[rsp], eax
  000a3	8b 44 24 18	 mov	 eax, DWORD PTR c$5[rsp]
  000a7	89 44 24 14	 mov	 DWORD PTR b$4[rsp], eax
  000ab	eb d8		 jmp	 SHORT $LN2@get_dar_pi
$LN3@get_dar_pi:

; 1010 :         x /= b;

  000ad	8b 44 24 08	 mov	 eax, DWORD PTR x$1[rsp]
  000b1	99		 cdq
  000b2	f7 7c 24 14	 idiv	 DWORD PTR b$4[rsp]
  000b6	89 44 24 08	 mov	 DWORD PTR x$1[rsp], eax

; 1011 :         y /= b;

  000ba	8b 44 24 0c	 mov	 eax, DWORD PTR y$2[rsp]
  000be	99		 cdq
  000bf	f7 7c 24 14	 idiv	 DWORD PTR b$4[rsp]
  000c3	89 44 24 0c	 mov	 DWORD PTR y$2[rsp], eax

; 1012 :         const double ratio = (sar_w >= sar_h) ? h / (double)y : w / (double)x;

  000c7	8b 44 24 58	 mov	 eax, DWORD PTR sar_h$[rsp]
  000cb	39 44 24 50	 cmp	 DWORD PTR sar_w$[rsp], eax
  000cf	7c 18		 jl	 SHORT $LN6@get_dar_pi
  000d1	f2 0f 2a 44 24
	04		 cvtsi2sd xmm0, DWORD PTR h$[rsp]
  000d7	f2 0f 2a 4c 24
	0c		 cvtsi2sd xmm1, DWORD PTR y$2[rsp]
  000dd	f2 0f 5e c1	 divsd	 xmm0, xmm1
  000e1	f2 0f 11 44 24
	28		 movsd	 QWORD PTR tv81[rsp], xmm0
  000e7	eb 15		 jmp	 SHORT $LN7@get_dar_pi
$LN6@get_dar_pi:
  000e9	f2 0f 2a 04 24	 cvtsi2sd xmm0, DWORD PTR w$[rsp]
  000ee	f2 0f 2a 4c 24
	08		 cvtsi2sd xmm1, DWORD PTR x$1[rsp]
  000f4	f2 0f 5e c1	 divsd	 xmm0, xmm1
  000f8	f2 0f 11 44 24
	28		 movsd	 QWORD PTR tv81[rsp], xmm0
$LN7@get_dar_pi:
  000fe	f2 0f 10 44 24
	28		 movsd	 xmm0, QWORD PTR tv81[rsp]
  00104	f2 0f 11 44 24
	20		 movsd	 QWORD PTR ratio$6[rsp], xmm0

; 1013 :         *width  = (int)(x * ratio + 0.5);

  0010a	f2 0f 2a 44 24
	08		 cvtsi2sd xmm0, DWORD PTR x$1[rsp]
  00110	f2 0f 59 44 24
	20		 mulsd	 xmm0, QWORD PTR ratio$6[rsp]
  00116	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  0011e	f2 0f 2c c0	 cvttsd2si eax, xmm0
  00122	48 8b 4c 24 40	 mov	 rcx, QWORD PTR width$[rsp]
  00127	89 01		 mov	 DWORD PTR [rcx], eax

; 1014 :         *height = (int)(y * ratio + 0.5);

  00129	f2 0f 2a 44 24
	0c		 cvtsi2sd xmm0, DWORD PTR y$2[rsp]
  0012f	f2 0f 59 44 24
	20		 mulsd	 xmm0, QWORD PTR ratio$6[rsp]
  00135	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  0013d	f2 0f 2c c0	 cvttsd2si eax, xmm0
  00141	48 8b 4c 24 48	 mov	 rcx, QWORD PTR height$[rsp]
  00146	89 01		 mov	 DWORD PTR [rcx], eax
$LN4@get_dar_pi:

; 1015 :     }
; 1016 : }

  00148	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0014c	5f		 pop	 rdi
  0014d	c3		 ret	 0
?get_dar_pixels@@YAXPEAI0HH@Z ENDP			; get_dar_pixels
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspColorprimList@@YAXXZ
text$di	SEGMENT
$T1 = 112
$T2 = 168
$T3 = 172
$T4 = 176
$T5 = 180
$T6 = 184
$T7 = 188
$T8 = 192
$T9 = 196
$T10 = 200
$T11 = 204
$T12 = 208
$T13 = 212
$T14 = 216
__$ArrayPad$ = 264
??__ECspColorprimList@@YAXXZ PROC			; `dynamic initializer for 'CspColorprimList'', COMDAT

; 1187 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 08
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1174 : static const auto CspColorprimList = make_array<CspColorprim>(

  0002b	c7 84 24 a8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T2[rsp], 13
  00036	c7 84 24 ac 00
	00 00 0c 00 00
	00		 mov	 DWORD PTR $T3[rsp], 12
  00041	c7 84 24 b0 00
	00 00 0b 00 00
	00		 mov	 DWORD PTR $T4[rsp], 11
  0004c	c7 84 24 b4 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T5[rsp], 10
  00057	c7 84 24 b8 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T6[rsp], 9
  00062	c7 84 24 bc 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T7[rsp], 8
  0006d	c7 84 24 c0 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T8[rsp], 7
  00078	c7 84 24 c4 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T9[rsp], 6
  00083	c7 84 24 c8 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T10[rsp], 5
  0008e	c7 84 24 cc 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T11[rsp], 4
  00099	c7 84 24 d0 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T12[rsp], 2
  000a4	c7 84 24 d4 00
	00 00 01 00 00
	00		 mov	 DWORD PTR $T13[rsp], 1
  000af	48 8d 84 24 a8
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000b7	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  000bc	48 8d 84 24 ac
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000c4	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  000c9	48 8d 84 24 b0
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000d1	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  000d6	48 8d 84 24 b4
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000de	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  000e3	48 8d 84 24 b8
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  000eb	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  000f0	48 8d 84 24 bc
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  000f8	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  000fd	48 8d 84 24 c0
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  00105	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0010a	48 8d 84 24 c4
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00112	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00117	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  0011f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00124	4c 8d 8c 24 cc
	00 00 00	 lea	 r9, QWORD PTR $T11[rsp]
  0012c	4c 8d 84 24 d0
	00 00 00	 lea	 r8, QWORD PTR $T12[rsp]
  00134	48 8d 94 24 d4
	00 00 00	 lea	 rdx, QWORD PTR $T13[rsp]
  0013c	48 8d 8c 24 d8
	00 00 00	 lea	 rcx, QWORD PTR $T14[rsp]
  00144	e8 00 00 00 00	 call	 ??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
  00149	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T1[rsp]
  0014e	48 8b f9	 mov	 rdi, rcx
  00151	48 8b f0	 mov	 rsi, rax
  00154	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00159	f3 a4		 rep movsb
  0015b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspColorprimList@@3V?$array@W4CspColorprim@@$0M@@std@@B
  00162	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T1[rsp]
  00167	48 8b f8	 mov	 rdi, rax
  0016a	48 8b f1	 mov	 rsi, rcx
  0016d	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00172	f3 a4		 rep movsb
  00174	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0017c	48 33 cc	 xor	 rcx, rsp
  0017f	e8 00 00 00 00	 call	 __security_check_cookie
  00184	48 81 c4 18 01
	00 00		 add	 rsp, 280		; 00000118H
  0018b	5f		 pop	 rdi
  0018c	5e		 pop	 rsi
  0018d	c3		 ret	 0
??__ECspColorprimList@@YAXXZ ENDP			; `dynamic initializer for 'CspColorprimList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 56
$T2 = 96
<args_0>$ = 104
<args_1>$ = 112
<args_2>$ = 120
<args_3>$ = 128
<args_4>$ = 136
<args_5>$ = 144
<args_6>$ = 152
<args_7>$ = 160
<args_8>$ = 168
<args_9>$ = 176
<args_10>$ = 184
<args_11>$ = 192
??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z PROC ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 12 00 00 00	 mov	 ecx, 18
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 38	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 68	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 44 24 70	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004c	8b 00		 mov	 eax, DWORD PTR [rax]
  0004e	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00052	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_2>$[rsp]
  00057	8b 00		 mov	 eax, DWORD PTR [rax]
  00059	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  0005d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  00065	8b 00		 mov	 eax, DWORD PTR [rax]
  00067	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  0006b	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00073	8b 00		 mov	 eax, DWORD PTR [rax]
  00075	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  00079	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00081	8b 00		 mov	 eax, DWORD PTR [rax]
  00083	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  00087	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  0008f	8b 00		 mov	 eax, DWORD PTR [rax]
  00091	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  00095	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  0009d	8b 00		 mov	 eax, DWORD PTR [rax]
  0009f	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a3	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000ab	8b 00		 mov	 eax, DWORD PTR [rax]
  000ad	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b1	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000b9	8b 00		 mov	 eax, DWORD PTR [rax]
  000bb	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000bf	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000c7	8b 00		 mov	 eax, DWORD PTR [rax]
  000c9	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000cd	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000d5	8b 00		 mov	 eax, DWORD PTR [rax]
  000d7	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000db	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  000df	48 8b 7c 24 60	 mov	 rdi, QWORD PTR $T2[rsp]
  000e4	48 8b f0	 mov	 rsi, rax
  000e7	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  000ec	f3 a4		 rep movsb
  000ee	48 8b 44 24 60	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  000f3	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000f8	48 33 cc	 xor	 rcx, rsp
  000fb	e8 00 00 00 00	 call	 __security_check_cookie
  00100	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00104	5f		 pop	 rdi
  00105	5e		 pop	 rsi
  00106	c3		 ret	 0
??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ENDP ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspTransferList@@YAXXZ
text$di	SEGMENT
$T1 = 128
$T2 = 200
$T3 = 204
$T4 = 208
$T5 = 212
$T6 = 216
$T7 = 220
$T8 = 224
$T9 = 228
$T10 = 232
$T11 = 236
$T12 = 240
$T13 = 244
$T14 = 248
$T15 = 252
$T16 = 256
$T17 = 264
__$ArrayPad$ = 328
??__ECspTransferList@@YAXXZ PROC			; `dynamic initializer for 'CspTransferList'', COMDAT

; 1135 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1119 : static const auto CspTransferList = make_array<CspTransfer>(

  0002b	c7 84 24 c8 00
	00 00 12 00 00
	00		 mov	 DWORD PTR $T2[rsp], 18
  00036	c7 84 24 cc 00
	00 00 10 00 00
	00		 mov	 DWORD PTR $T3[rsp], 16
  00041	c7 84 24 d0 00
	00 00 0f 00 00
	00		 mov	 DWORD PTR $T4[rsp], 15
  0004c	c7 84 24 d4 00
	00 00 0e 00 00
	00		 mov	 DWORD PTR $T5[rsp], 14
  00057	c7 84 24 d8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T6[rsp], 13
  00062	c7 84 24 dc 00
	00 00 0b 00 00
	00		 mov	 DWORD PTR $T7[rsp], 11
  0006d	c7 84 24 e0 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T8[rsp], 10
  00078	c7 84 24 e4 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T9[rsp], 9
  00083	c7 84 24 e8 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T10[rsp], 8
  0008e	c7 84 24 ec 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T11[rsp], 7
  00099	c7 84 24 f0 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T12[rsp], 6
  000a4	c7 84 24 f4 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T13[rsp], 5
  000af	c7 84 24 f8 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T14[rsp], 4
  000ba	c7 84 24 fc 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T15[rsp], 2
  000c5	c7 84 24 00 01
	00 00 01 00 00
	00		 mov	 DWORD PTR $T16[rsp], 1
  000d0	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000d8	48 89 44 24 78	 mov	 QWORD PTR [rsp+120], rax
  000dd	48 8d 84 24 cc
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000e5	48 89 44 24 70	 mov	 QWORD PTR [rsp+112], rax
  000ea	48 8d 84 24 d0
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000f2	48 89 44 24 68	 mov	 QWORD PTR [rsp+104], rax
  000f7	48 8d 84 24 d4
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000ff	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  00104	48 8d 84 24 d8
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  0010c	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  00111	48 8d 84 24 dc
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  00119	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  0011e	48 8d 84 24 e0
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  00126	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  0012b	48 8d 84 24 e4
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00133	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  00138	48 8d 84 24 e8
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  00140	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  00145	48 8d 84 24 ec
	00 00 00	 lea	 rax, QWORD PTR $T11[rsp]
  0014d	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00152	48 8d 84 24 f0
	00 00 00	 lea	 rax, QWORD PTR $T12[rsp]
  0015a	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0015f	48 8d 84 24 f4
	00 00 00	 lea	 rax, QWORD PTR $T13[rsp]
  00167	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0016c	4c 8d 8c 24 f8
	00 00 00	 lea	 r9, QWORD PTR $T14[rsp]
  00174	4c 8d 84 24 fc
	00 00 00	 lea	 r8, QWORD PTR $T15[rsp]
  0017c	48 8d 94 24 00
	01 00 00	 lea	 rdx, QWORD PTR $T16[rsp]
  00184	48 8d 8c 24 08
	01 00 00	 lea	 rcx, QWORD PTR $T17[rsp]
  0018c	e8 00 00 00 00	 call	 ??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
  00191	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  00199	48 8b f9	 mov	 rdi, rcx
  0019c	48 8b f0	 mov	 rsi, rax
  0019f	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  001a4	f3 a4		 rep movsb
  001a6	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspTransferList@@3V?$array@W4CspTransfer@@$0P@@std@@B
  001ad	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  001b5	48 8b f8	 mov	 rdi, rax
  001b8	48 8b f1	 mov	 rsi, rcx
  001bb	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  001c0	f3 a4		 rep movsb
  001c2	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001ca	48 33 cc	 xor	 rcx, rsp
  001cd	e8 00 00 00 00	 call	 __security_check_cookie
  001d2	48 81 c4 58 01
	00 00		 add	 rsp, 344		; 00000158H
  001d9	5f		 pop	 rdi
  001da	5e		 pop	 rsi
  001db	c3		 ret	 0
??__ECspTransferList@@YAXXZ ENDP			; `dynamic initializer for 'CspTransferList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 72
$T2 = 112
<args_0>$ = 120
<args_1>$ = 128
<args_2>$ = 136
<args_3>$ = 144
<args_4>$ = 152
<args_5>$ = 160
<args_6>$ = 168
<args_7>$ = 176
<args_8>$ = 184
<args_9>$ = 192
<args_10>$ = 200
<args_11>$ = 208
<args_12>$ = 216
<args_13>$ = 224
<args_14>$ = 232
??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z PROC ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 16 00 00 00	 mov	 ecx, 22
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 48	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00055	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_2>$[rsp]
  0005d	8b 00		 mov	 eax, DWORD PTR [rax]
  0005f	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  0006b	8b 00		 mov	 eax, DWORD PTR [rax]
  0006d	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  00071	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00079	8b 00		 mov	 eax, DWORD PTR [rax]
  0007b	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  0007f	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00087	8b 00		 mov	 eax, DWORD PTR [rax]
  00089	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  0008d	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  00095	8b 00		 mov	 eax, DWORD PTR [rax]
  00097	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  0009b	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  000a3	8b 00		 mov	 eax, DWORD PTR [rax]
  000a5	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a9	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000b1	8b 00		 mov	 eax, DWORD PTR [rax]
  000b3	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b7	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000bf	8b 00		 mov	 eax, DWORD PTR [rax]
  000c1	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000c5	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000cd	8b 00		 mov	 eax, DWORD PTR [rax]
  000cf	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000d3	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000db	8b 00		 mov	 eax, DWORD PTR [rax]
  000dd	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000e1	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR <args_12>$[rsp]
  000e9	8b 00		 mov	 eax, DWORD PTR [rax]
  000eb	89 44 24 30	 mov	 DWORD PTR $T1[rsp+48], eax
  000ef	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR <args_13>$[rsp]
  000f7	8b 00		 mov	 eax, DWORD PTR [rax]
  000f9	89 44 24 34	 mov	 DWORD PTR $T1[rsp+52], eax
  000fd	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR <args_14>$[rsp]
  00105	8b 00		 mov	 eax, DWORD PTR [rax]
  00107	89 44 24 38	 mov	 DWORD PTR $T1[rsp+56], eax
  0010b	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  0010f	48 8b 7c 24 70	 mov	 rdi, QWORD PTR $T2[rsp]
  00114	48 8b f0	 mov	 rsi, rax
  00117	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  0011c	f3 a4		 rep movsb
  0011e	48 8b 44 24 70	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  00123	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00128	48 33 cc	 xor	 rcx, rsp
  0012b	e8 00 00 00 00	 call	 __security_check_cookie
  00130	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00134	5f		 pop	 rdi
  00135	5e		 pop	 rsi
  00136	c3		 ret	 0
??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ENDP ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspMatrixList@@YAXXZ
text$di	SEGMENT
$T1 = 128
$T2 = 192
$T3 = 196
$T4 = 200
$T5 = 204
$T6 = 208
$T7 = 212
$T8 = 216
$T9 = 220
$T10 = 224
$T11 = 228
$T12 = 232
$T13 = 236
$T14 = 240
$T15 = 244
$T16 = 248
__$ArrayPad$ = 304
??__ECspMatrixList@@YAXXZ PROC				; `dynamic initializer for 'CspMatrixList'', COMDAT

; 1080 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 30
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1065 : static const auto CspMatrixList = make_array<CspMatrix>(

  0002b	c7 84 24 c0 00
	00 00 0f 00 00
	00		 mov	 DWORD PTR $T2[rsp], 15
  00036	c7 84 24 c4 00
	00 00 0e 00 00
	00		 mov	 DWORD PTR $T3[rsp], 14
  00041	c7 84 24 c8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T4[rsp], 13
  0004c	c7 84 24 cc 00
	00 00 0c 00 00
	00		 mov	 DWORD PTR $T5[rsp], 12
  00057	c7 84 24 d0 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T6[rsp], 10
  00062	c7 84 24 d4 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T7[rsp], 9
  0006d	c7 84 24 d8 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T8[rsp], 8
  00078	c7 84 24 dc 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T9[rsp], 7
  00083	c7 84 24 e0 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T10[rsp], 6
  0008e	c7 84 24 e4 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T11[rsp], 5
  00099	c7 84 24 e8 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T12[rsp], 4
  000a4	c7 84 24 ec 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T13[rsp], 2
  000af	c7 84 24 f0 00
	00 00 01 00 00
	00		 mov	 DWORD PTR $T14[rsp], 1
  000ba	c7 84 24 f4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T15[rsp], 0
  000c5	48 8d 84 24 c0
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000cd	48 89 44 24 70	 mov	 QWORD PTR [rsp+112], rax
  000d2	48 8d 84 24 c4
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000da	48 89 44 24 68	 mov	 QWORD PTR [rsp+104], rax
  000df	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000e7	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  000ec	48 8d 84 24 cc
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000f4	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  000f9	48 8d 84 24 d0
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  00101	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  00106	48 8d 84 24 d4
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  0010e	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  00113	48 8d 84 24 d8
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  0011b	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  00120	48 8d 84 24 dc
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00128	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  0012d	48 8d 84 24 e0
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  00135	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0013a	48 8d 84 24 e4
	00 00 00	 lea	 rax, QWORD PTR $T11[rsp]
  00142	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00147	48 8d 84 24 e8
	00 00 00	 lea	 rax, QWORD PTR $T12[rsp]
  0014f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00154	4c 8d 8c 24 ec
	00 00 00	 lea	 r9, QWORD PTR $T13[rsp]
  0015c	4c 8d 84 24 f0
	00 00 00	 lea	 r8, QWORD PTR $T14[rsp]
  00164	48 8d 94 24 f4
	00 00 00	 lea	 rdx, QWORD PTR $T15[rsp]
  0016c	48 8d 8c 24 f8
	00 00 00	 lea	 rcx, QWORD PTR $T16[rsp]
  00174	e8 00 00 00 00	 call	 ??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
  00179	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  00181	48 8b f9	 mov	 rdi, rcx
  00184	48 8b f0	 mov	 rsi, rax
  00187	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  0018c	f3 a4		 rep movsb
  0018e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspMatrixList@@3V?$array@W4CspMatrix@@$0O@@std@@B
  00195	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  0019d	48 8b f8	 mov	 rdi, rax
  001a0	48 8b f1	 mov	 rsi, rcx
  001a3	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  001a8	f3 a4		 rep movsb
  001aa	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001b2	48 33 cc	 xor	 rcx, rsp
  001b5	e8 00 00 00 00	 call	 __security_check_cookie
  001ba	48 81 c4 48 01
	00 00		 add	 rsp, 328		; 00000148H
  001c1	5f		 pop	 rdi
  001c2	5e		 pop	 rsi
  001c3	c3		 ret	 0
??__ECspMatrixList@@YAXXZ ENDP				; `dynamic initializer for 'CspMatrixList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 64
$T2 = 112
<args_0>$ = 120
<args_1>$ = 128
<args_2>$ = 136
<args_3>$ = 144
<args_4>$ = 152
<args_5>$ = 160
<args_6>$ = 168
<args_7>$ = 176
<args_8>$ = 184
<args_9>$ = 192
<args_10>$ = 200
<args_11>$ = 208
<args_12>$ = 216
<args_13>$ = 224
??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z PROC ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 16 00 00 00	 mov	 ecx, 22
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 40	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00055	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_2>$[rsp]
  0005d	8b 00		 mov	 eax, DWORD PTR [rax]
  0005f	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  0006b	8b 00		 mov	 eax, DWORD PTR [rax]
  0006d	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  00071	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00079	8b 00		 mov	 eax, DWORD PTR [rax]
  0007b	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  0007f	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00087	8b 00		 mov	 eax, DWORD PTR [rax]
  00089	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  0008d	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  00095	8b 00		 mov	 eax, DWORD PTR [rax]
  00097	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  0009b	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  000a3	8b 00		 mov	 eax, DWORD PTR [rax]
  000a5	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a9	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000b1	8b 00		 mov	 eax, DWORD PTR [rax]
  000b3	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b7	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000bf	8b 00		 mov	 eax, DWORD PTR [rax]
  000c1	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000c5	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000cd	8b 00		 mov	 eax, DWORD PTR [rax]
  000cf	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000d3	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000db	8b 00		 mov	 eax, DWORD PTR [rax]
  000dd	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000e1	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR <args_12>$[rsp]
  000e9	8b 00		 mov	 eax, DWORD PTR [rax]
  000eb	89 44 24 30	 mov	 DWORD PTR $T1[rsp+48], eax
  000ef	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR <args_13>$[rsp]
  000f7	8b 00		 mov	 eax, DWORD PTR [rax]
  000f9	89 44 24 34	 mov	 DWORD PTR $T1[rsp+52], eax
  000fd	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  00101	48 8b 7c 24 70	 mov	 rdi, QWORD PTR $T2[rsp]
  00106	48 8b f0	 mov	 rsi, rax
  00109	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  0010e	f3 a4		 rep movsb
  00110	48 8b 44 24 70	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  00115	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0011a	48 33 cc	 xor	 rcx, rsp
  0011d	e8 00 00 00 00	 call	 __security_check_cookie
  00122	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00126	5f		 pop	 rdi
  00127	5e		 pop	 rsi
  00128	c3		 ret	 0
??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ENDP ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
qtr$1 = 32
nNextSize$2 = 40
i$3 = 48
$T4 = 56
ptr$ = 80
nSize$ = 88
nMinSize$ = 96
?malloc_degeneracy@@YA_KPEAPEAX_K1@Z PROC		; malloc_degeneracy

; 660  : size_t malloc_degeneracy(void **ptr, size_t nSize, size_t nMinSize) {

$LN9:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 661  :     *ptr = nullptr;

  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR ptr$[rsp]
  0002d	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 662  :     nMinSize = (std::max<size_t>)(nMinSize, 1);

  00034	48 c7 44 24 38
	01 00 00 00	 mov	 QWORD PTR $T4[rsp], 1
  0003d	48 8d 54 24 38	 lea	 rdx, QWORD PTR $T4[rsp]
  00042	48 8d 4c 24 60	 lea	 rcx, QWORD PTR nMinSize$[rsp]
  00047	e8 00 00 00 00	 call	 ??$max@_K@std@@YAAEB_KAEB_K0@Z ; std::max<unsigned __int64>
  0004c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004f	48 89 44 24 60	 mov	 QWORD PTR nMinSize$[rsp], rax

; 663  :     nSize = (std::max<size_t>)(nSize, nMinSize);

  00054	48 8d 54 24 60	 lea	 rdx, QWORD PTR nMinSize$[rsp]
  00059	48 8d 4c 24 58	 lea	 rcx, QWORD PTR nSize$[rsp]
  0005e	e8 00 00 00 00	 call	 ??$max@_K@std@@YAAEB_KAEB_K0@Z ; std::max<unsigned __int64>
  00063	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00066	48 89 44 24 58	 mov	 QWORD PTR nSize$[rsp], rax
$LN2@malloc_deg:

; 664  :     //確保できなかったら、サイズを小さくして再度確保を試みる (最終的に1MBも確保できなかったら諦める)
; 665  :     while (nSize >= nMinSize) {

  0006b	48 8b 44 24 60	 mov	 rax, QWORD PTR nMinSize$[rsp]
  00070	48 39 44 24 58	 cmp	 QWORD PTR nSize$[rsp], rax
  00075	72 72		 jb	 SHORT $LN3@malloc_deg

; 666  :         void *qtr = malloc(nSize);

  00077	48 8b 4c 24 58	 mov	 rcx, QWORD PTR nSize$[rsp]
  0007c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_malloc
  00082	48 89 44 24 20	 mov	 QWORD PTR qtr$1[rsp], rax

; 667  :         if (qtr != nullptr) {

  00087	48 83 7c 24 20
	00		 cmp	 QWORD PTR qtr$1[rsp], 0
  0008d	74 14		 je	 SHORT $LN7@malloc_deg

; 668  :             *ptr = qtr;

  0008f	48 8b 44 24 50	 mov	 rax, QWORD PTR ptr$[rsp]
  00094	48 8b 4c 24 20	 mov	 rcx, QWORD PTR qtr$1[rsp]
  00099	48 89 08	 mov	 QWORD PTR [rax], rcx

; 669  :             return nSize;

  0009c	48 8b 44 24 58	 mov	 rax, QWORD PTR nSize$[rsp]
  000a1	eb 48		 jmp	 SHORT $LN1@malloc_deg
$LN7@malloc_deg:

; 670  :         }
; 671  :         size_t nNextSize = 0;

  000a3	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR nNextSize$2[rsp], 0

; 672  :         for (size_t i = nMinSize; i < nSize; i<<=1) {

  000ac	48 8b 44 24 60	 mov	 rax, QWORD PTR nMinSize$[rsp]
  000b1	48 89 44 24 30	 mov	 QWORD PTR i$3[rsp], rax
  000b6	eb 0d		 jmp	 SHORT $LN6@malloc_deg
$LN4@malloc_deg:
  000b8	48 8b 44 24 30	 mov	 rax, QWORD PTR i$3[rsp]
  000bd	48 d1 e0	 shl	 rax, 1
  000c0	48 89 44 24 30	 mov	 QWORD PTR i$3[rsp], rax
$LN6@malloc_deg:
  000c5	48 8b 44 24 58	 mov	 rax, QWORD PTR nSize$[rsp]
  000ca	48 39 44 24 30	 cmp	 QWORD PTR i$3[rsp], rax
  000cf	73 0c		 jae	 SHORT $LN5@malloc_deg

; 673  :             nNextSize = i;

  000d1	48 8b 44 24 30	 mov	 rax, QWORD PTR i$3[rsp]
  000d6	48 89 44 24 28	 mov	 QWORD PTR nNextSize$2[rsp], rax

; 674  :         }

  000db	eb db		 jmp	 SHORT $LN4@malloc_deg
$LN5@malloc_deg:

; 675  :         nSize = nNextSize;

  000dd	48 8b 44 24 28	 mov	 rax, QWORD PTR nNextSize$2[rsp]
  000e2	48 89 44 24 58	 mov	 QWORD PTR nSize$[rsp], rax

; 676  :     }

  000e7	eb 82		 jmp	 SHORT $LN2@malloc_deg
$LN3@malloc_deg:

; 677  :     return 0;

  000e9	33 c0		 xor	 eax, eax
$LN1@malloc_deg:

; 678  : }

  000eb	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000ef	5f		 pop	 rdi
  000f0	c3		 ret	 0
?malloc_degeneracy@@YA_KPEAPEAX_K1@Z ENDP		; malloc_degeneracy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
?check_OS_Win8orLater@@YAHXZ PROC			; check_OS_Win8orLater

; 710  : BOOL check_OS_Win8orLater() {

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 711  : #if defined(_WIN32) || defined(_WIN64)
; 712  : #if (_MSC_VER >= 1800)
; 713  :     return IsWindows8OrGreater();

  00015	e8 00 00 00 00	 call	 ?IsWindows8OrGreater@@YA_NXZ ; IsWindows8OrGreater
  0001a	0f b6 c0	 movzx	 eax, al

; 714  : #else
; 715  :     OSVERSIONINFO osvi = { 0 };
; 716  :     osvi.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);
; 717  :     GetVersionEx(&osvi);
; 718  :     return ((osvi.dwPlatformId == VER_PLATFORM_WIN32_NT) && ((osvi.dwMajorVersion == 6 && osvi.dwMinorVersion >= 2) || osvi.dwMajorVersion > 6));
; 719  : #endif //(_MSC_VER >= 1800)
; 720  : #else //#if defined(_WIN32) || defined(_WIN64)
; 721  :     return FALSE;
; 722  : #endif //#if defined(_WIN32) || defined(_WIN64)
; 723  : }

  0001d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00021	5f		 pop	 rdi
  00022	c3		 ret	 0
?check_OS_Win8orLater@@YAHXZ ENDP			; check_OS_Win8orLater
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
buf$ = 56
cpu_info$ = 128
gpu_info$ = 1184
UsedRamSize$ = 2232
totalRamsize$ = 2248
osversioninfo$ = 2272
osversionstr$ = 2584
$T11 = 2632
$T12 = 2672
cpuinfo$13 = 2736
write_rw_speed$14 = 2872
$T15 = 2888
$T16 = 2928
$T17 = 2976
tv132 = 2984
tv85 = 2992
tv242 = 3000
tv65 = 3008
tv244 = 3016
tv153 = 3024
tv167 = 3028
tv180 = 3032
tv204 = 3036
tv193 = 3040
tv221 = 3048
tv255 = 3056
tv246 = 3064
tv256 = 3072
tv248 = 3080
__$ArrayPad$ = 3088
__$ReturnUdt$ = 3120
add_ram_info$ = 3128
?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z PROC ; getEnviromentInfo

; 874  : tstring getEnviromentInfo(bool add_ram_info) {

$LN18:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 81 ec 20 0c
	00 00		 sub	 rsp, 3104		; 00000c20H
  00011	48 8b fc	 mov	 rdi, rsp
  00014	b9 08 03 00 00	 mov	 ecx, 776		; 00000308H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	f3 ab		 rep stosd
  00020	48 8b 8c 24 30
	0c 00 00	 mov	 rcx, QWORD PTR [rsp+3120]
  00028	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002f	48 33 c4	 xor	 rax, rsp
  00032	48 89 84 24 10
	0c 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003a	c7 84 24 a0 0b
	00 00 00 00 00
	00		 mov	 DWORD PTR $T17[rsp], 0

; 875  :     tstring buf;

  00045	48 8d 4c 24 38	 lea	 rcx, QWORD PTR buf$[rsp]
  0004a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0004f	90		 npad	 1

; 876  : 
; 877  :     TCHAR cpu_info[1024] = { 0 };

  00050	48 8d 84 24 80
	00 00 00	 lea	 rax, QWORD PTR cpu_info$[rsp]
  00058	48 8b f8	 mov	 rdi, rax
  0005b	33 c0		 xor	 eax, eax
  0005d	b9 00 04 00 00	 mov	 ecx, 1024		; 00000400H
  00062	f3 aa		 rep stosb

; 878  :     getCPUInfo(cpu_info, _countof(cpu_info));

  00064	45 33 c0	 xor	 r8d, r8d
  00067	ba 00 04 00 00	 mov	 edx, 1024		; 00000400H
  0006c	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR cpu_info$[rsp]
  00074	e8 00 00 00 00	 call	 ?getCPUInfo@@YAHPEAD_KPEAVMFXVideoSession@@@Z ; getCPUInfo

; 879  : 
; 880  :     TCHAR gpu_info[1024] = { 0 };

  00079	48 8d 84 24 a0
	04 00 00	 lea	 rax, QWORD PTR gpu_info$[rsp]
  00081	48 8b f8	 mov	 rdi, rax
  00084	33 c0		 xor	 eax, eax
  00086	b9 00 04 00 00	 mov	 ecx, 1024		; 00000400H
  0008b	f3 aa		 rep stosb

; 881  :     getGPUInfo(GPU_VENDOR, gpu_info, _countof(gpu_info));

  0008d	45 33 c9	 xor	 r9d, r9d
  00090	41 b8 00 04 00
	00		 mov	 r8d, 1024		; 00000400H
  00096	48 8d 94 24 a0
	04 00 00	 lea	 rdx, QWORD PTR gpu_info$[rsp]
  0009e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG118239
  000a5	e8 00 00 00 00	 call	 ?getGPUInfo@@YAHPEBDPEADI_N@Z ; getGPUInfo

; 882  : 
; 883  :     uint64_t UsedRamSize = 0;

  000aa	48 c7 84 24 b8
	08 00 00 00 00
	00 00		 mov	 QWORD PTR UsedRamSize$[rsp], 0

; 884  :     uint64_t totalRamsize = getPhysicalRamSize(&UsedRamSize);

  000b6	48 8d 8c 24 b8
	08 00 00	 lea	 rcx, QWORD PTR UsedRamSize$[rsp]
  000be	e8 00 00 00 00	 call	 ?getPhysicalRamSize@@YA_KPEA_K@Z ; getPhysicalRamSize
  000c3	48 89 84 24 c8
	08 00 00	 mov	 QWORD PTR totalRamsize$[rsp], rax

; 885  : 
; 886  : 
; 887  :     buf += _T("[DEBUG]--->Environment Info\n");

  000cb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118240
  000d2	48 8d 4c 24 38	 lea	 rcx, QWORD PTR buf$[rsp]
  000d7	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 888  : #if defined(_WIN32) || defined(_WIN64)
; 889  :     OSVERSIONINFOEXW osversioninfo = { 0 };

  000dc	48 8d 84 24 e0
	08 00 00	 lea	 rax, QWORD PTR osversioninfo$[rsp]
  000e4	48 8b f8	 mov	 rdi, rax
  000e7	33 c0		 xor	 eax, eax
  000e9	b9 1c 01 00 00	 mov	 ecx, 284		; 0000011cH
  000ee	f3 aa		 rep stosb

; 890  :     tstring osversionstr = getOSVersion(&osversioninfo);

  000f0	48 8d 94 24 e0
	08 00 00	 lea	 rdx, QWORD PTR osversioninfo$[rsp]
  000f8	48 8d 8c 24 18
	0a 00 00	 lea	 rcx, QWORD PTR osversionstr$[rsp]
  00100	e8 00 00 00 00	 call	 ?getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z ; getOSVersion
  00105	90		 npad	 1

; 891  :     buf += strsprintf(_T("OS : %s %s (%d)\n"), osversionstr.c_str(), rgy_is_64bit_os() ? _T("x64") : _T("x86"), osversioninfo.dwBuildNumber);

  00106	e8 00 00 00 00	 call	 ?rgy_is_64bit_os@@YAHXZ	; rgy_is_64bit_os
  0010b	85 c0		 test	 eax, eax
  0010d	74 11		 je	 SHORT $LN4@getEnvirom
  0010f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG118241
  00116	48 89 84 24 a8
	0b 00 00	 mov	 QWORD PTR tv132[rsp], rax
  0011e	eb 0f		 jmp	 SHORT $LN5@getEnvirom
$LN4@getEnvirom:
  00120	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG118242
  00127	48 89 84 24 a8
	0b 00 00	 mov	 QWORD PTR tv132[rsp], rax
$LN5@getEnvirom:
  0012f	48 8d 8c 24 18
	0a 00 00	 lea	 rcx, QWORD PTR osversionstr$[rsp]
  00137	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0013c	8b 8c 24 ec 08
	00 00		 mov	 ecx, DWORD PTR osversioninfo$[rsp+12]
  00143	89 4c 24 20	 mov	 DWORD PTR [rsp+32], ecx
  00147	4c 8b 8c 24 a8
	0b 00 00	 mov	 r9, QWORD PTR tv132[rsp]
  0014f	4c 8b c0	 mov	 r8, rax
  00152	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118243
  00159	48 8d 8c 24 48
	0a 00 00	 lea	 rcx, QWORD PTR $T11[rsp]
  00161	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00166	48 89 84 24 b0
	0b 00 00	 mov	 QWORD PTR tv85[rsp], rax
  0016e	48 8b 84 24 b0
	0b 00 00	 mov	 rax, QWORD PTR tv85[rsp]
  00176	48 89 84 24 b8
	0b 00 00	 mov	 QWORD PTR tv242[rsp], rax
  0017e	48 8b 94 24 b8
	0b 00 00	 mov	 rdx, QWORD PTR tv242[rsp]
  00186	48 8d 4c 24 38	 lea	 rcx, QWORD PTR buf$[rsp]
  0018b	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00190	90		 npad	 1
  00191	48 8d 8c 24 48
	0a 00 00	 lea	 rcx, QWORD PTR $T11[rsp]
  00199	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 892  : #else
; 893  :     buf += strsprintf(_T("OS : %s %s\n"), getOSVersion().c_str(), rgy_is_64bit_os() ? _T("x64") : _T("x86"));
; 894  : #endif
; 895  :     buf += strsprintf(_T("CPU: %s\n"), cpu_info);

  0019e	4c 8d 84 24 80
	00 00 00	 lea	 r8, QWORD PTR cpu_info$[rsp]
  001a6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118244
  001ad	48 8d 8c 24 70
	0a 00 00	 lea	 rcx, QWORD PTR $T12[rsp]
  001b5	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  001ba	48 89 84 24 c0
	0b 00 00	 mov	 QWORD PTR tv65[rsp], rax
  001c2	48 8b 84 24 c0
	0b 00 00	 mov	 rax, QWORD PTR tv65[rsp]
  001ca	48 89 84 24 c8
	0b 00 00	 mov	 QWORD PTR tv244[rsp], rax
  001d2	48 8b 94 24 c8
	0b 00 00	 mov	 rdx, QWORD PTR tv244[rsp]
  001da	48 8d 4c 24 38	 lea	 rcx, QWORD PTR buf$[rsp]
  001df	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  001e4	90		 npad	 1
  001e5	48 8d 8c 24 70
	0a 00 00	 lea	 rcx, QWORD PTR $T12[rsp]
  001ed	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 896  :     if (add_ram_info) {

  001f2	0f b6 84 24 38
	0c 00 00	 movzx	 eax, BYTE PTR add_ram_info$[rsp]
  001fa	85 c0		 test	 eax, eax
  001fc	0f 84 be 01 00
	00		 je	 $LN2@getEnvirom

; 897  :         cpu_info_t cpuinfo;
; 898  :         get_cpu_info(&cpuinfo);

  00202	48 8d 8c 24 b0
	0a 00 00	 lea	 rcx, QWORD PTR cpuinfo$13[rsp]
  0020a	e8 00 00 00 00	 call	 ?get_cpu_info@@YA_NPEAUcpu_info_t@@@Z ; get_cpu_info

; 899  :         auto write_rw_speed = [&](const TCHAR *type, int test_size) {
; 900  :             if (test_size) {
; 901  :                 auto ram_read_speed_list = ram_speed_mt_list(test_size, RAM_SPEED_MODE_READ);
; 902  :                 auto ram_write_speed_list = ram_speed_mt_list(test_size, RAM_SPEED_MODE_WRITE);
; 903  :                 double max_read  = *std::max_element(ram_read_speed_list.begin(), ram_read_speed_list.end())  * (1.0 / 1024.0);
; 904  :                 double max_write = *std::max_element(ram_write_speed_list.begin(), ram_write_speed_list.end()) * (1.0 / 1024.0);
; 905  :                 buf += strsprintf(_T("%s: Read:%7.2fGB/s, Write:%7.2fGB/s\n"), type, max_read, max_write);
; 906  :             }
; 907  :             return test_size > 0;
; 908  :         };

  0020f	48 8d 54 24 38	 lea	 rdx, QWORD PTR buf$[rsp]
  00214	48 8d 8c 24 38
	0b 00 00	 lea	 rcx, QWORD PTR write_rw_speed$14[rsp]
  0021c	e8 00 00 00 00	 call	 ??0<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; <lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>

; 909  :         add_ram_info = false;

  00221	c6 84 24 38 0c
	00 00 00	 mov	 BYTE PTR add_ram_info$[rsp], 0

; 910  :         add_ram_info |= write_rw_speed(_T("L1 "), cpuinfo.caches[0].size / 1024 / 8);

  00229	0f b6 84 24 38
	0c 00 00	 movzx	 eax, BYTE PTR add_ram_info$[rsp]
  00231	89 84 24 d0 0b
	00 00		 mov	 DWORD PTR tv153[rsp], eax
  00238	b9 18 00 00 00	 mov	 ecx, 24
  0023d	48 6b c9 00	 imul	 rcx, rcx, 0
  00241	33 d2		 xor	 edx, edx
  00243	8b 84 0c d4 0a
	00 00		 mov	 eax, DWORD PTR cpuinfo$13[rsp+rcx+36]
  0024a	b9 00 04 00 00	 mov	 ecx, 1024		; 00000400H
  0024f	f7 f1		 div	 ecx
  00251	33 d2		 xor	 edx, edx
  00253	b9 08 00 00 00	 mov	 ecx, 8
  00258	f7 f1		 div	 ecx
  0025a	44 8b c0	 mov	 r8d, eax
  0025d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118246
  00264	48 8d 8c 24 38
	0b 00 00	 lea	 rcx, QWORD PTR write_rw_speed$14[rsp]
  0026c	e8 00 00 00 00	 call	 ??R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z ; <lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()
  00271	0f b6 c0	 movzx	 eax, al
  00274	8b 8c 24 d0 0b
	00 00		 mov	 ecx, DWORD PTR tv153[rsp]
  0027b	0b c8		 or	 ecx, eax
  0027d	8b c1		 mov	 eax, ecx
  0027f	88 84 24 38 0c
	00 00		 mov	 BYTE PTR add_ram_info$[rsp], al

; 911  :         add_ram_info |= write_rw_speed(_T("L2 "), cpuinfo.caches[1].size / 1024 / 2);

  00286	0f b6 84 24 38
	0c 00 00	 movzx	 eax, BYTE PTR add_ram_info$[rsp]
  0028e	89 84 24 d4 0b
	00 00		 mov	 DWORD PTR tv167[rsp], eax
  00295	b9 18 00 00 00	 mov	 ecx, 24
  0029a	48 6b c9 01	 imul	 rcx, rcx, 1
  0029e	33 d2		 xor	 edx, edx
  002a0	8b 84 0c d4 0a
	00 00		 mov	 eax, DWORD PTR cpuinfo$13[rsp+rcx+36]
  002a7	b9 00 04 00 00	 mov	 ecx, 1024		; 00000400H
  002ac	f7 f1		 div	 ecx
  002ae	33 d2		 xor	 edx, edx
  002b0	b9 02 00 00 00	 mov	 ecx, 2
  002b5	f7 f1		 div	 ecx
  002b7	44 8b c0	 mov	 r8d, eax
  002ba	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118247
  002c1	48 8d 8c 24 38
	0b 00 00	 lea	 rcx, QWORD PTR write_rw_speed$14[rsp]
  002c9	e8 00 00 00 00	 call	 ??R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z ; <lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()
  002ce	0f b6 c0	 movzx	 eax, al
  002d1	8b 8c 24 d4 0b
	00 00		 mov	 ecx, DWORD PTR tv167[rsp]
  002d8	0b c8		 or	 ecx, eax
  002da	8b c1		 mov	 eax, ecx
  002dc	88 84 24 38 0c
	00 00		 mov	 BYTE PTR add_ram_info$[rsp], al

; 912  :         add_ram_info |= write_rw_speed(_T("L3 "), cpuinfo.caches[2].size / 1024 / 2);

  002e3	0f b6 84 24 38
	0c 00 00	 movzx	 eax, BYTE PTR add_ram_info$[rsp]
  002eb	89 84 24 d8 0b
	00 00		 mov	 DWORD PTR tv180[rsp], eax
  002f2	b9 18 00 00 00	 mov	 ecx, 24
  002f7	48 6b c9 02	 imul	 rcx, rcx, 2
  002fb	33 d2		 xor	 edx, edx
  002fd	8b 84 0c d4 0a
	00 00		 mov	 eax, DWORD PTR cpuinfo$13[rsp+rcx+36]
  00304	b9 00 04 00 00	 mov	 ecx, 1024		; 00000400H
  00309	f7 f1		 div	 ecx
  0030b	33 d2		 xor	 edx, edx
  0030d	b9 02 00 00 00	 mov	 ecx, 2
  00312	f7 f1		 div	 ecx
  00314	44 8b c0	 mov	 r8d, eax
  00317	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118248
  0031e	48 8d 8c 24 38
	0b 00 00	 lea	 rcx, QWORD PTR write_rw_speed$14[rsp]
  00326	e8 00 00 00 00	 call	 ??R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z ; <lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()
  0032b	0f b6 c0	 movzx	 eax, al
  0032e	8b 8c 24 d8 0b
	00 00		 mov	 ecx, DWORD PTR tv180[rsp]
  00335	0b c8		 or	 ecx, eax
  00337	8b c1		 mov	 eax, ecx
  00339	88 84 24 38 0c
	00 00		 mov	 BYTE PTR add_ram_info$[rsp], al

; 913  :         add_ram_info |= write_rw_speed(_T("RAM"), (cpuinfo.max_cache_level) ? cpuinfo.caches[cpuinfo.max_cache_level-1].size / 1024 * 8 : 96 * 1024);

  00340	83 bc 24 bc 0a
	00 00 00	 cmp	 DWORD PTR cpuinfo$13[rsp+12], 0
  00348	74 2b		 je	 SHORT $LN6@getEnvirom
  0034a	8b 84 24 bc 0a
	00 00		 mov	 eax, DWORD PTR cpuinfo$13[rsp+12]
  00351	ff c8		 dec	 eax
  00353	8b c0		 mov	 eax, eax
  00355	48 6b c0 18	 imul	 rax, rax, 24
  00359	33 d2		 xor	 edx, edx
  0035b	8b 84 04 d4 0a
	00 00		 mov	 eax, DWORD PTR cpuinfo$13[rsp+rax+36]
  00362	b9 00 04 00 00	 mov	 ecx, 1024		; 00000400H
  00367	f7 f1		 div	 ecx
  00369	c1 e0 03	 shl	 eax, 3
  0036c	89 84 24 dc 0b
	00 00		 mov	 DWORD PTR tv204[rsp], eax
  00373	eb 0b		 jmp	 SHORT $LN7@getEnvirom
$LN6@getEnvirom:
  00375	c7 84 24 dc 0b
	00 00 00 80 01
	00		 mov	 DWORD PTR tv204[rsp], 98304 ; 00018000H
$LN7@getEnvirom:
  00380	0f b6 84 24 38
	0c 00 00	 movzx	 eax, BYTE PTR add_ram_info$[rsp]
  00388	89 84 24 e0 0b
	00 00		 mov	 DWORD PTR tv193[rsp], eax
  0038f	44 8b 84 24 dc
	0b 00 00	 mov	 r8d, DWORD PTR tv204[rsp]
  00397	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118249
  0039e	48 8d 8c 24 38
	0b 00 00	 lea	 rcx, QWORD PTR write_rw_speed$14[rsp]
  003a6	e8 00 00 00 00	 call	 ??R<lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>@@QEBA_NPEBDH@Z ; <lambda_03f6ab1952c8fe7fc7b4cfb7e060a3ef>::operator()
  003ab	0f b6 c0	 movzx	 eax, al
  003ae	8b 8c 24 e0 0b
	00 00		 mov	 ecx, DWORD PTR tv193[rsp]
  003b5	0b c8		 or	 ecx, eax
  003b7	8b c1		 mov	 eax, ecx
  003b9	88 84 24 38 0c
	00 00		 mov	 BYTE PTR add_ram_info$[rsp], al
$LN2@getEnvirom:

; 914  :     }
; 915  :     buf += strsprintf(_T("%s Used %d MB, Total %d MB\n"), (add_ram_info) ? _T("    ") : _T("RAM:"), (uint32_t)(UsedRamSize >> 20), (uint32_t)(totalRamsize >> 20));

  003c0	0f b6 84 24 38
	0c 00 00	 movzx	 eax, BYTE PTR add_ram_info$[rsp]
  003c8	85 c0		 test	 eax, eax
  003ca	74 11		 je	 SHORT $LN8@getEnvirom
  003cc	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG118250
  003d3	48 89 84 24 e8
	0b 00 00	 mov	 QWORD PTR tv221[rsp], rax
  003db	eb 0f		 jmp	 SHORT $LN9@getEnvirom
$LN8@getEnvirom:
  003dd	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG118251
  003e4	48 89 84 24 e8
	0b 00 00	 mov	 QWORD PTR tv221[rsp], rax
$LN9@getEnvirom:
  003ec	48 8b 84 24 c8
	08 00 00	 mov	 rax, QWORD PTR totalRamsize$[rsp]
  003f4	48 c1 e8 14	 shr	 rax, 20
  003f8	48 8b 8c 24 b8
	08 00 00	 mov	 rcx, QWORD PTR UsedRamSize$[rsp]
  00400	48 c1 e9 14	 shr	 rcx, 20
  00404	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00408	44 8b c9	 mov	 r9d, ecx
  0040b	4c 8b 84 24 e8
	0b 00 00	 mov	 r8, QWORD PTR tv221[rsp]
  00413	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118252
  0041a	48 8d 8c 24 48
	0b 00 00	 lea	 rcx, QWORD PTR $T15[rsp]
  00422	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00427	48 89 84 24 f0
	0b 00 00	 mov	 QWORD PTR tv255[rsp], rax
  0042f	48 8b 84 24 f0
	0b 00 00	 mov	 rax, QWORD PTR tv255[rsp]
  00437	48 89 84 24 f8
	0b 00 00	 mov	 QWORD PTR tv246[rsp], rax
  0043f	48 8b 94 24 f8
	0b 00 00	 mov	 rdx, QWORD PTR tv246[rsp]
  00447	48 8d 4c 24 38	 lea	 rcx, QWORD PTR buf$[rsp]
  0044c	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00451	90		 npad	 1
  00452	48 8d 8c 24 48
	0b 00 00	 lea	 rcx, QWORD PTR $T15[rsp]
  0045a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 916  :     buf += strsprintf(_T("GPU: %s\n"), gpu_info);

  0045f	4c 8d 84 24 a0
	04 00 00	 lea	 r8, QWORD PTR gpu_info$[rsp]
  00467	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118253
  0046e	48 8d 8c 24 70
	0b 00 00	 lea	 rcx, QWORD PTR $T16[rsp]
  00476	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  0047b	48 89 84 24 00
	0c 00 00	 mov	 QWORD PTR tv256[rsp], rax
  00483	48 8b 84 24 00
	0c 00 00	 mov	 rax, QWORD PTR tv256[rsp]
  0048b	48 89 84 24 08
	0c 00 00	 mov	 QWORD PTR tv248[rsp], rax
  00493	48 8b 94 24 08
	0c 00 00	 mov	 rdx, QWORD PTR tv248[rsp]
  0049b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR buf$[rsp]
  004a0	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  004a5	90		 npad	 1
  004a6	48 8d 8c 24 70
	0b 00 00	 lea	 rcx, QWORD PTR $T16[rsp]
  004ae	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 917  :     return buf;

  004b3	48 8d 54 24 38	 lea	 rdx, QWORD PTR buf$[rsp]
  004b8	48 8b 8c 24 30
	0c 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  004c0	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  004c5	8b 84 24 a0 0b
	00 00		 mov	 eax, DWORD PTR $T17[rsp]
  004cc	83 c8 01	 or	 eax, 1
  004cf	89 84 24 a0 0b
	00 00		 mov	 DWORD PTR $T17[rsp], eax
  004d6	48 8d 8c 24 18
	0a 00 00	 lea	 rcx, QWORD PTR osversionstr$[rsp]
  004de	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  004e3	90		 npad	 1
  004e4	48 8d 4c 24 38	 lea	 rcx, QWORD PTR buf$[rsp]
  004e9	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  004ee	48 8b 84 24 30
	0c 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 918  : }

  004f6	48 8b f8	 mov	 rdi, rax
  004f9	48 8b cc	 mov	 rcx, rsp
  004fc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$rtcFrameData
  00503	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00508	48 8b c7	 mov	 rax, rdi
  0050b	48 8b 8c 24 10
	0c 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00513	48 33 cc	 xor	 rcx, rsp
  00516	e8 00 00 00 00	 call	 __security_check_cookie
  0051b	48 81 c4 20 0c
	00 00		 add	 rsp, 3104		; 00000c20H
  00522	5f		 pop	 rdi
  00523	c3		 ret	 0
  00524	cc		 int	 3
?getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z ENDP ; getEnviromentInfo
_TEXT	ENDS
text$x	SEGMENT
buf$ = 56
cpu_info$ = 128
gpu_info$ = 1184
UsedRamSize$ = 2232
totalRamsize$ = 2248
osversioninfo$ = 2272
osversionstr$ = 2584
$T11 = 2632
$T12 = 2672
cpuinfo$13 = 2736
write_rw_speed$14 = 2872
$T15 = 2888
$T16 = 2928
$T17 = 2976
tv132 = 2984
tv85 = 2992
tv242 = 3000
tv65 = 3008
tv244 = 3016
tv153 = 3024
tv167 = 3028
tv180 = 3032
tv204 = 3036
tv193 = 3040
tv221 = 3048
tv255 = 3056
tv246 = 3064
tv256 = 3072
tv248 = 3080
__$ArrayPad$ = 3088
__$ReturnUdt$ = 3120
add_ram_info$ = 3128
?dtor$0@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA PROC ; `getEnviromentInfo'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR buf$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA ENDP ; `getEnviromentInfo'::`1'::dtor$0
buf$ = 56
cpu_info$ = 128
gpu_info$ = 1184
UsedRamSize$ = 2232
totalRamsize$ = 2248
osversioninfo$ = 2272
osversionstr$ = 2584
$T11 = 2632
$T12 = 2672
cpuinfo$13 = 2736
write_rw_speed$14 = 2872
$T15 = 2888
$T16 = 2928
$T17 = 2976
tv132 = 2984
tv85 = 2992
tv242 = 3000
tv65 = 3008
tv244 = 3016
tv153 = 3024
tv167 = 3028
tv180 = 3032
tv204 = 3036
tv193 = 3040
tv221 = 3048
tv255 = 3056
tv246 = 3064
tv256 = 3072
tv248 = 3080
__$ArrayPad$ = 3088
__$ReturnUdt$ = 3120
add_ram_info$ = 3128
?dtor$1@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA PROC ; `getEnviromentInfo'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 8d 18 0a
	00 00		 lea	 rcx, QWORD PTR osversionstr$[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA ENDP ; `getEnviromentInfo'::`1'::dtor$1
buf$ = 56
cpu_info$ = 128
gpu_info$ = 1184
UsedRamSize$ = 2232
totalRamsize$ = 2248
osversioninfo$ = 2272
osversionstr$ = 2584
$T11 = 2632
$T12 = 2672
cpuinfo$13 = 2736
write_rw_speed$14 = 2872
$T15 = 2888
$T16 = 2928
$T17 = 2976
tv132 = 2984
tv85 = 2992
tv242 = 3000
tv65 = 3008
tv244 = 3016
tv153 = 3024
tv167 = 3028
tv180 = 3032
tv204 = 3036
tv193 = 3040
tv221 = 3048
tv255 = 3056
tv246 = 3064
tv256 = 3072
tv248 = 3080
__$ArrayPad$ = 3088
__$ReturnUdt$ = 3120
add_ram_info$ = 3128
?dtor$2@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA PROC ; `getEnviromentInfo'::`1'::dtor$2
  00049	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00053	55		 push	 rbp
  00054	57		 push	 rdi
  00055	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00059	48 8b ea	 mov	 rbp, rdx
  0005c	48 8d 8d 48 0a
	00 00		 lea	 rcx, QWORD PTR $T11[rbp]
  00063	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00068	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006c	5f		 pop	 rdi
  0006d	5d		 pop	 rbp
  0006e	c3		 ret	 0
?dtor$2@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA ENDP ; `getEnviromentInfo'::`1'::dtor$2
buf$ = 56
cpu_info$ = 128
gpu_info$ = 1184
UsedRamSize$ = 2232
totalRamsize$ = 2248
osversioninfo$ = 2272
osversionstr$ = 2584
$T11 = 2632
$T12 = 2672
cpuinfo$13 = 2736
write_rw_speed$14 = 2872
$T15 = 2888
$T16 = 2928
$T17 = 2976
tv132 = 2984
tv85 = 2992
tv242 = 3000
tv65 = 3008
tv244 = 3016
tv153 = 3024
tv167 = 3028
tv180 = 3032
tv204 = 3036
tv193 = 3040
tv221 = 3048
tv255 = 3056
tv246 = 3064
tv256 = 3072
tv248 = 3080
__$ArrayPad$ = 3088
__$ReturnUdt$ = 3120
add_ram_info$ = 3128
?dtor$3@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA PROC ; `getEnviromentInfo'::`1'::dtor$3
  0006f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00074	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00079	55		 push	 rbp
  0007a	57		 push	 rdi
  0007b	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007f	48 8b ea	 mov	 rbp, rdx
  00082	48 8d 8d 70 0a
	00 00		 lea	 rcx, QWORD PTR $T12[rbp]
  00089	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0008e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00092	5f		 pop	 rdi
  00093	5d		 pop	 rbp
  00094	c3		 ret	 0
?dtor$3@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA ENDP ; `getEnviromentInfo'::`1'::dtor$3
buf$ = 56
cpu_info$ = 128
gpu_info$ = 1184
UsedRamSize$ = 2232
totalRamsize$ = 2248
osversioninfo$ = 2272
osversionstr$ = 2584
$T11 = 2632
$T12 = 2672
cpuinfo$13 = 2736
write_rw_speed$14 = 2872
$T15 = 2888
$T16 = 2928
$T17 = 2976
tv132 = 2984
tv85 = 2992
tv242 = 3000
tv65 = 3008
tv244 = 3016
tv153 = 3024
tv167 = 3028
tv180 = 3032
tv204 = 3036
tv193 = 3040
tv221 = 3048
tv255 = 3056
tv246 = 3064
tv256 = 3072
tv248 = 3080
__$ArrayPad$ = 3088
__$ReturnUdt$ = 3120
add_ram_info$ = 3128
?dtor$4@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA PROC ; `getEnviromentInfo'::`1'::dtor$4
  00095	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0009a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009f	55		 push	 rbp
  000a0	57		 push	 rdi
  000a1	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a5	48 8b ea	 mov	 rbp, rdx
  000a8	48 8d 8d 48 0b
	00 00		 lea	 rcx, QWORD PTR $T15[rbp]
  000af	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000b4	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b8	5f		 pop	 rdi
  000b9	5d		 pop	 rbp
  000ba	c3		 ret	 0
?dtor$4@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA ENDP ; `getEnviromentInfo'::`1'::dtor$4
buf$ = 56
cpu_info$ = 128
gpu_info$ = 1184
UsedRamSize$ = 2232
totalRamsize$ = 2248
osversioninfo$ = 2272
osversionstr$ = 2584
$T11 = 2632
$T12 = 2672
cpuinfo$13 = 2736
write_rw_speed$14 = 2872
$T15 = 2888
$T16 = 2928
$T17 = 2976
tv132 = 2984
tv85 = 2992
tv242 = 3000
tv65 = 3008
tv244 = 3016
tv153 = 3024
tv167 = 3028
tv180 = 3032
tv204 = 3036
tv193 = 3040
tv221 = 3048
tv255 = 3056
tv246 = 3064
tv256 = 3072
tv248 = 3080
__$ArrayPad$ = 3088
__$ReturnUdt$ = 3120
add_ram_info$ = 3128
?dtor$5@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA PROC ; `getEnviromentInfo'::`1'::dtor$5
  000bb	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000c0	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000c5	55		 push	 rbp
  000c6	57		 push	 rdi
  000c7	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000cb	48 8b ea	 mov	 rbp, rdx
  000ce	48 8d 8d 70 0b
	00 00		 lea	 rcx, QWORD PTR $T16[rbp]
  000d5	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000da	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000de	5f		 pop	 rdi
  000df	5d		 pop	 rbp
  000e0	c3		 ret	 0
?dtor$5@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA ENDP ; `getEnviromentInfo'::`1'::dtor$5
buf$ = 56
cpu_info$ = 128
gpu_info$ = 1184
UsedRamSize$ = 2232
totalRamsize$ = 2248
osversioninfo$ = 2272
osversionstr$ = 2584
$T11 = 2632
$T12 = 2672
cpuinfo$13 = 2736
write_rw_speed$14 = 2872
$T15 = 2888
$T16 = 2928
$T17 = 2976
tv132 = 2984
tv85 = 2992
tv242 = 3000
tv65 = 3008
tv244 = 3016
tv153 = 3024
tv167 = 3028
tv180 = 3032
tv204 = 3036
tv193 = 3040
tv221 = 3048
tv255 = 3056
tv246 = 3064
tv256 = 3072
tv248 = 3080
__$ArrayPad$ = 3088
__$ReturnUdt$ = 3120
add_ram_info$ = 3128
?dtor$6@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA PROC ; `getEnviromentInfo'::`1'::dtor$6
  000e1	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000e6	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000eb	55		 push	 rbp
  000ec	57		 push	 rdi
  000ed	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000f1	48 8b ea	 mov	 rbp, rdx
  000f4	8b 85 a0 0b 00
	00		 mov	 eax, DWORD PTR $T17[rbp]
  000fa	83 e0 01	 and	 eax, 1
  000fd	85 c0		 test	 eax, eax
  000ff	74 13		 je	 SHORT $LN17@dtor$6
  00101	83 a5 a0 0b 00
	00 fe		 and	 DWORD PTR $T17[rbp], -2
  00108	48 8b 8d 30 0c
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0010f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN17@dtor$6:
  00114	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00118	5f		 pop	 rdi
  00119	5d		 pop	 rbp
  0011a	c3		 ret	 0
?dtor$6@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA ENDP ; `getEnviromentInfo'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
buf$ = 56
cpu_info$ = 128
gpu_info$ = 1184
UsedRamSize$ = 2232
totalRamsize$ = 2248
osversioninfo$ = 2272
osversionstr$ = 2584
$T11 = 2632
$T12 = 2672
cpuinfo$13 = 2736
write_rw_speed$14 = 2872
$T15 = 2888
$T16 = 2928
$T17 = 2976
tv132 = 2984
tv85 = 2992
tv242 = 3000
tv65 = 3008
tv244 = 3016
tv153 = 3024
tv167 = 3028
tv180 = 3032
tv204 = 3036
tv193 = 3040
tv221 = 3048
tv255 = 3056
tv246 = 3064
tv256 = 3072
tv248 = 3080
__$ArrayPad$ = 3088
__$ReturnUdt$ = 3120
add_ram_info$ = 3128
?dtor$0@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA PROC ; `getEnviromentInfo'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR buf$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA ENDP ; `getEnviromentInfo'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
buf$ = 56
cpu_info$ = 128
gpu_info$ = 1184
UsedRamSize$ = 2232
totalRamsize$ = 2248
osversioninfo$ = 2272
osversionstr$ = 2584
$T11 = 2632
$T12 = 2672
cpuinfo$13 = 2736
write_rw_speed$14 = 2872
$T15 = 2888
$T16 = 2928
$T17 = 2976
tv132 = 2984
tv85 = 2992
tv242 = 3000
tv65 = 3008
tv244 = 3016
tv153 = 3024
tv167 = 3028
tv180 = 3032
tv204 = 3036
tv193 = 3040
tv221 = 3048
tv255 = 3056
tv246 = 3064
tv256 = 3072
tv248 = 3080
__$ArrayPad$ = 3088
__$ReturnUdt$ = 3120
add_ram_info$ = 3128
?dtor$1@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA PROC ; `getEnviromentInfo'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 8d 18 0a
	00 00		 lea	 rcx, QWORD PTR osversionstr$[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA ENDP ; `getEnviromentInfo'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
buf$ = 56
cpu_info$ = 128
gpu_info$ = 1184
UsedRamSize$ = 2232
totalRamsize$ = 2248
osversioninfo$ = 2272
osversionstr$ = 2584
$T11 = 2632
$T12 = 2672
cpuinfo$13 = 2736
write_rw_speed$14 = 2872
$T15 = 2888
$T16 = 2928
$T17 = 2976
tv132 = 2984
tv85 = 2992
tv242 = 3000
tv65 = 3008
tv244 = 3016
tv153 = 3024
tv167 = 3028
tv180 = 3032
tv204 = 3036
tv193 = 3040
tv221 = 3048
tv255 = 3056
tv246 = 3064
tv256 = 3072
tv248 = 3080
__$ArrayPad$ = 3088
__$ReturnUdt$ = 3120
add_ram_info$ = 3128
?dtor$2@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA PROC ; `getEnviromentInfo'::`1'::dtor$2
  00049	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00053	55		 push	 rbp
  00054	57		 push	 rdi
  00055	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00059	48 8b ea	 mov	 rbp, rdx
  0005c	48 8d 8d 48 0a
	00 00		 lea	 rcx, QWORD PTR $T11[rbp]
  00063	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00068	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006c	5f		 pop	 rdi
  0006d	5d		 pop	 rbp
  0006e	c3		 ret	 0
?dtor$2@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA ENDP ; `getEnviromentInfo'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
buf$ = 56
cpu_info$ = 128
gpu_info$ = 1184
UsedRamSize$ = 2232
totalRamsize$ = 2248
osversioninfo$ = 2272
osversionstr$ = 2584
$T11 = 2632
$T12 = 2672
cpuinfo$13 = 2736
write_rw_speed$14 = 2872
$T15 = 2888
$T16 = 2928
$T17 = 2976
tv132 = 2984
tv85 = 2992
tv242 = 3000
tv65 = 3008
tv244 = 3016
tv153 = 3024
tv167 = 3028
tv180 = 3032
tv204 = 3036
tv193 = 3040
tv221 = 3048
tv255 = 3056
tv246 = 3064
tv256 = 3072
tv248 = 3080
__$ArrayPad$ = 3088
__$ReturnUdt$ = 3120
add_ram_info$ = 3128
?dtor$3@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA PROC ; `getEnviromentInfo'::`1'::dtor$3
  0006f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00074	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00079	55		 push	 rbp
  0007a	57		 push	 rdi
  0007b	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007f	48 8b ea	 mov	 rbp, rdx
  00082	48 8d 8d 70 0a
	00 00		 lea	 rcx, QWORD PTR $T12[rbp]
  00089	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0008e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00092	5f		 pop	 rdi
  00093	5d		 pop	 rbp
  00094	c3		 ret	 0
?dtor$3@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA ENDP ; `getEnviromentInfo'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
buf$ = 56
cpu_info$ = 128
gpu_info$ = 1184
UsedRamSize$ = 2232
totalRamsize$ = 2248
osversioninfo$ = 2272
osversionstr$ = 2584
$T11 = 2632
$T12 = 2672
cpuinfo$13 = 2736
write_rw_speed$14 = 2872
$T15 = 2888
$T16 = 2928
$T17 = 2976
tv132 = 2984
tv85 = 2992
tv242 = 3000
tv65 = 3008
tv244 = 3016
tv153 = 3024
tv167 = 3028
tv180 = 3032
tv204 = 3036
tv193 = 3040
tv221 = 3048
tv255 = 3056
tv246 = 3064
tv256 = 3072
tv248 = 3080
__$ArrayPad$ = 3088
__$ReturnUdt$ = 3120
add_ram_info$ = 3128
?dtor$4@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA PROC ; `getEnviromentInfo'::`1'::dtor$4
  00095	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0009a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009f	55		 push	 rbp
  000a0	57		 push	 rdi
  000a1	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a5	48 8b ea	 mov	 rbp, rdx
  000a8	48 8d 8d 48 0b
	00 00		 lea	 rcx, QWORD PTR $T15[rbp]
  000af	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000b4	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b8	5f		 pop	 rdi
  000b9	5d		 pop	 rbp
  000ba	c3		 ret	 0
?dtor$4@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA ENDP ; `getEnviromentInfo'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
buf$ = 56
cpu_info$ = 128
gpu_info$ = 1184
UsedRamSize$ = 2232
totalRamsize$ = 2248
osversioninfo$ = 2272
osversionstr$ = 2584
$T11 = 2632
$T12 = 2672
cpuinfo$13 = 2736
write_rw_speed$14 = 2872
$T15 = 2888
$T16 = 2928
$T17 = 2976
tv132 = 2984
tv85 = 2992
tv242 = 3000
tv65 = 3008
tv244 = 3016
tv153 = 3024
tv167 = 3028
tv180 = 3032
tv204 = 3036
tv193 = 3040
tv221 = 3048
tv255 = 3056
tv246 = 3064
tv256 = 3072
tv248 = 3080
__$ArrayPad$ = 3088
__$ReturnUdt$ = 3120
add_ram_info$ = 3128
?dtor$5@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA PROC ; `getEnviromentInfo'::`1'::dtor$5
  000bb	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000c0	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000c5	55		 push	 rbp
  000c6	57		 push	 rdi
  000c7	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000cb	48 8b ea	 mov	 rbp, rdx
  000ce	48 8d 8d 70 0b
	00 00		 lea	 rcx, QWORD PTR $T16[rbp]
  000d5	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000da	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000de	5f		 pop	 rdi
  000df	5d		 pop	 rbp
  000e0	c3		 ret	 0
?dtor$5@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA ENDP ; `getEnviromentInfo'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
buf$ = 56
cpu_info$ = 128
gpu_info$ = 1184
UsedRamSize$ = 2232
totalRamsize$ = 2248
osversioninfo$ = 2272
osversionstr$ = 2584
$T11 = 2632
$T12 = 2672
cpuinfo$13 = 2736
write_rw_speed$14 = 2872
$T15 = 2888
$T16 = 2928
$T17 = 2976
tv132 = 2984
tv85 = 2992
tv242 = 3000
tv65 = 3008
tv244 = 3016
tv153 = 3024
tv167 = 3028
tv180 = 3032
tv204 = 3036
tv193 = 3040
tv221 = 3048
tv255 = 3056
tv246 = 3064
tv256 = 3072
tv248 = 3080
__$ArrayPad$ = 3088
__$ReturnUdt$ = 3120
add_ram_info$ = 3128
?dtor$6@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA PROC ; `getEnviromentInfo'::`1'::dtor$6
  000e1	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000e6	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000eb	55		 push	 rbp
  000ec	57		 push	 rdi
  000ed	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000f1	48 8b ea	 mov	 rbp, rdx
  000f4	8b 85 a0 0b 00
	00		 mov	 eax, DWORD PTR $T17[rbp]
  000fa	83 e0 01	 and	 eax, 1
  000fd	85 c0		 test	 eax, eax
  000ff	74 13		 je	 SHORT $LN17@dtor$6
  00101	83 a5 a0 0b 00
	00 fe		 and	 DWORD PTR $T17[rbp], -2
  00108	48 8b 8d 30 0c
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0010f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN17@dtor$6:
  00114	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00118	5f		 pop	 rdi
  00119	5d		 pop	 rbp
  0011a	c3		 ret	 0
?dtor$6@?0??getEnviromentInfo@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z@4HA ENDP ; `getEnviromentInfo'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
msex$ = 48
__$ArrayPad$ = 128
ramUsed$ = 160
?getPhysicalRamSize@@YA_KPEA_K@Z PROC			; getPhysicalRamSize

; 855  : uint64_t getPhysicalRamSize(uint64_t *ramUsed) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+160]
  00024	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002b	48 33 c4	 xor	 rax, rsp
  0002e	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 856  : #if defined(_WIN32) || defined(_WIN64)
; 857  :     MEMORYSTATUSEX msex ={ 0 };

  00036	48 8d 44 24 30	 lea	 rax, QWORD PTR msex$[rsp]
  0003b	48 8b f8	 mov	 rdi, rax
  0003e	33 c0		 xor	 eax, eax
  00040	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00045	f3 aa		 rep stosb

; 858  :     msex.dwLength = sizeof(msex);

  00047	c7 44 24 30 40
	00 00 00	 mov	 DWORD PTR msex$[rsp], 64 ; 00000040H

; 859  :     GlobalMemoryStatusEx(&msex);

  0004f	48 8d 4c 24 30	 lea	 rcx, QWORD PTR msex$[rsp]
  00054	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GlobalMemoryStatusEx

; 860  :     if (NULL != ramUsed) {

  0005a	48 83 bc 24 a0
	00 00 00 00	 cmp	 QWORD PTR ramUsed$[rsp], 0
  00063	74 1b		 je	 SHORT $LN2@getPhysica

; 861  :         *ramUsed = msex.ullTotalPhys - msex.ullAvailPhys;

  00065	48 8b 44 24 40	 mov	 rax, QWORD PTR msex$[rsp+16]
  0006a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR msex$[rsp+8]
  0006f	48 2b c8	 sub	 rcx, rax
  00072	48 8b c1	 mov	 rax, rcx
  00075	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR ramUsed$[rsp]
  0007d	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN2@getPhysica:

; 862  :     }
; 863  :     return msex.ullTotalPhys;

  00080	48 8b 44 24 38	 mov	 rax, QWORD PTR msex$[rsp+8]

; 864  : #else //#if defined(_WIN32) || defined(_WIN64)
; 865  :     struct sysinfo info;
; 866  :     sysinfo(&info);
; 867  :     if (NULL != ramUsed) {
; 868  :         *ramUsed = info.totalram - info.freeram;
; 869  :     }
; 870  :     return info.totalram;
; 871  : #endif //#if defined(_WIN32) || defined(_WIN64)
; 872  : }

  00085	48 8b f8	 mov	 rdi, rax
  00088	48 8b cc	 mov	 rcx, rsp
  0008b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?getPhysicalRamSize@@YA_KPEA_K@Z$rtcFrameData
  00092	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00097	48 8b c7	 mov	 rax, rdi
  0009a	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000a2	48 33 cc	 xor	 rcx, rsp
  000a5	e8 00 00 00 00	 call	 __security_check_cookie
  000aa	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  000b1	5f		 pop	 rdi
  000b2	c3		 ret	 0
?getPhysicalRamSize@@YA_KPEA_K@Z ENDP			; getPhysicalRamSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
sinfo$ = 40
tv71 = 100
?rgy_is_64bit_os@@YAHXZ PROC				; rgy_is_64bit_os

; 841  : BOOL rgy_is_64bit_os() {

$LN5:
  00000	40 57		 push	 rdi
  00002	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 1c 00 00 00	 mov	 ecx, 28
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 842  : #if defined(_WIN32) || defined(_WIN64)
; 843  :     SYSTEM_INFO sinfo = { 0 };

  00015	48 8d 44 24 28	 lea	 rax, QWORD PTR sinfo$[rsp]
  0001a	48 8b f8	 mov	 rdi, rax
  0001d	33 c0		 xor	 eax, eax
  0001f	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00024	f3 aa		 rep stosb

; 844  :     GetNativeSystemInfo(&sinfo);

  00026	48 8d 4c 24 28	 lea	 rcx, QWORD PTR sinfo$[rsp]
  0002b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetNativeSystemInfo

; 845  :     return sinfo.wProcessorArchitecture == PROCESSOR_ARCHITECTURE_AMD64;

  00031	0f b7 44 24 28	 movzx	 eax, WORD PTR sinfo$[rsp]
  00036	83 f8 09	 cmp	 eax, 9
  00039	75 0a		 jne	 SHORT $LN3@rgy_is_64b
  0003b	c7 44 24 64 01
	00 00 00	 mov	 DWORD PTR tv71[rsp], 1
  00043	eb 08		 jmp	 SHORT $LN4@rgy_is_64b
$LN3@rgy_is_64b:
  00045	c7 44 24 64 00
	00 00 00	 mov	 DWORD PTR tv71[rsp], 0
$LN4@rgy_is_64b:
  0004d	8b 44 24 64	 mov	 eax, DWORD PTR tv71[rsp]

; 846  : #else //#if defined(_WIN32) || defined(_WIN64)
; 847  :     struct utsname buf;
; 848  :     uname(&buf);
; 849  :     return NULL != strstr(buf.machine, "x64")
; 850  :         || NULL != strstr(buf.machine, "x86_64")
; 851  :         || NULL != strstr(buf.machine, "amd64");
; 852  : #endif //#if defined(_WIN32) || defined(_WIN64)
; 853  : }

  00051	8b f8		 mov	 edi, eax
  00053	48 8b cc	 mov	 rcx, rsp
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?rgy_is_64bit_os@@YAHXZ$rtcFrameData
  0005d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00062	8b c7		 mov	 eax, edi
  00064	48 83 c4 70	 add	 rsp, 112		; 00000070H
  00068	5f		 pop	 rdi
  00069	c3		 ret	 0
?rgy_is_64bit_os@@YAHXZ ENDP				; rgy_is_64bit_os
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
ptr$ = 32
info$ = 64
infoex$ = 384
$T5 = 688
tv64 = 692
tv75 = 696
tv91 = 700
tv95 = 704
tv133 = 708
tv137 = 712
tv140 = 720
tv143 = 728
tv146 = 736
tv149 = 744
tv152 = 752
tv161 = 760
__$ArrayPad$ = 768
__$ReturnUdt$ = 800
osinfo$ = 808
?getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z PROC ; getOSVersion

; 726  : tstring getOSVersion(OSVERSIONINFOEXW *osinfo) {

$LN66:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 10 03
	00 00		 sub	 rsp, 784		; 00000310H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 c4 00 00 00	 mov	 ecx, 196		; 000000c4H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 20
	03 00 00	 mov	 rcx, QWORD PTR [rsp+800]
  00029	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00030	48 33 c4	 xor	 rax, rsp
  00033	48 89 84 24 00
	03 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003b	c7 84 24 b0 02
	00 00 00 00 00
	00		 mov	 DWORD PTR $T5[rsp], 0

; 727  :     const TCHAR *ptr = _T("Unknown");

  00046	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117453
  0004d	48 89 44 24 20	 mov	 QWORD PTR ptr$[rsp], rax

; 728  :     OSVERSIONINFOW info = { 0 };

  00052	48 8d 44 24 40	 lea	 rax, QWORD PTR info$[rsp]
  00057	48 8b f8	 mov	 rdi, rax
  0005a	33 c0		 xor	 eax, eax
  0005c	b9 14 01 00 00	 mov	 ecx, 276		; 00000114H
  00061	f3 aa		 rep stosb

; 729  :     OSVERSIONINFOEXW infoex = { 0 };

  00063	48 8d 84 24 80
	01 00 00	 lea	 rax, QWORD PTR infoex$[rsp]
  0006b	48 8b f8	 mov	 rdi, rax
  0006e	33 c0		 xor	 eax, eax
  00070	b9 1c 01 00 00	 mov	 ecx, 284		; 0000011cH
  00075	f3 aa		 rep stosb

; 730  :     info.dwOSVersionInfoSize = sizeof(info);

  00077	c7 44 24 40 14
	01 00 00	 mov	 DWORD PTR info$[rsp], 276 ; 00000114H

; 731  :     infoex.dwOSVersionInfoSize = sizeof(infoex);

  0007f	c7 84 24 80 01
	00 00 1c 01 00
	00		 mov	 DWORD PTR infoex$[rsp], 284 ; 0000011cH

; 732  :     GetVersionExW(&info);

  0008a	48 8d 4c 24 40	 lea	 rcx, QWORD PTR info$[rsp]
  0008f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetVersionExW

; 733  :     switch (info.dwPlatformId) {

  00095	8b 44 24 50	 mov	 eax, DWORD PTR info$[rsp+16]
  00099	89 84 24 b4 02
	00 00		 mov	 DWORD PTR tv64[rsp], eax
  000a0	83 bc 24 b4 02
	00 00 01	 cmp	 DWORD PTR tv64[rsp], 1
  000a8	74 0f		 je	 SHORT $LN14@getOSVersi
  000aa	83 bc 24 b4 02
	00 00 02	 cmp	 DWORD PTR tv64[rsp], 2
  000b2	74 64		 je	 SHORT $LN20@getOSVersi
  000b4	e9 14 04 00 00	 jmp	 $LN2@getOSVersi
$LN14@getOSVersi:

; 734  :     case VER_PLATFORM_WIN32_WINDOWS:
; 735  :         if (4 <= info.dwMajorVersion) {

  000b9	83 7c 24 44 04	 cmp	 DWORD PTR info$[rsp+4], 4
  000be	72 53		 jb	 SHORT $LN15@getOSVersi

; 736  :             switch (info.dwMinorVersion) {

  000c0	8b 44 24 48	 mov	 eax, DWORD PTR info$[rsp+8]
  000c4	89 84 24 b8 02
	00 00		 mov	 DWORD PTR tv75[rsp], eax
  000cb	83 bc 24 b8 02
	00 00 00	 cmp	 DWORD PTR tv75[rsp], 0
  000d3	74 16		 je	 SHORT $LN16@getOSVersi
  000d5	83 bc 24 b8 02
	00 00 0a	 cmp	 DWORD PTR tv75[rsp], 10
  000dd	74 1a		 je	 SHORT $LN17@getOSVersi
  000df	83 bc 24 b8 02
	00 00 5a	 cmp	 DWORD PTR tv75[rsp], 90	; 0000005aH
  000e7	74 1e		 je	 SHORT $LN18@getOSVersi
  000e9	eb 28		 jmp	 SHORT $LN15@getOSVersi
$LN16@getOSVersi:

; 737  :             case 0:  ptr = _T("Windows 95"); break;

  000eb	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117457
  000f2	48 89 44 24 20	 mov	 QWORD PTR ptr$[rsp], rax
  000f7	eb 1a		 jmp	 SHORT $LN15@getOSVersi
$LN17@getOSVersi:

; 738  :             case 10: ptr = _T("Windows 98"); break;

  000f9	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117459
  00100	48 89 44 24 20	 mov	 QWORD PTR ptr$[rsp], rax
  00105	eb 0c		 jmp	 SHORT $LN15@getOSVersi
$LN18@getOSVersi:

; 739  :             case 90: ptr = _T("Windows Me"); break;

  00107	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117461
  0010e	48 89 44 24 20	 mov	 QWORD PTR ptr$[rsp], rax
$LN15@getOSVersi:

; 740  :             default: break;
; 741  :             }
; 742  :         }
; 743  :         break;

  00113	e9 b5 03 00 00	 jmp	 $LN2@getOSVersi
$LN20@getOSVersi:

; 744  :     case VER_PLATFORM_WIN32_NT:
; 745  :         if (info.dwMajorVersion >= 6 || (info.dwMajorVersion == 5 && info.dwMinorVersion >= 2)) {

  00118	83 7c 24 44 06	 cmp	 DWORD PTR info$[rsp+4], 6
  0011d	73 0e		 jae	 SHORT $LN23@getOSVersi
  0011f	83 7c 24 44 05	 cmp	 DWORD PTR info$[rsp+4], 5
  00124	75 17		 jne	 SHORT $LN21@getOSVersi
  00126	83 7c 24 48 02	 cmp	 DWORD PTR info$[rsp+8], 2
  0012b	72 10		 jb	 SHORT $LN21@getOSVersi
$LN23@getOSVersi:

; 746  :             GetVersionExW((OSVERSIONINFOW *)&infoex);

  0012d	48 8d 8c 24 80
	01 00 00	 lea	 rcx, QWORD PTR infoex$[rsp]
  00135	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetVersionExW

; 747  :         } else {

  0013b	eb 18		 jmp	 SHORT $LN22@getOSVersi
$LN21@getOSVersi:

; 748  :             memcpy(&infoex, &info, sizeof(info));

  0013d	41 b8 14 01 00
	00		 mov	 r8d, 276		; 00000114H
  00143	48 8d 54 24 40	 lea	 rdx, QWORD PTR info$[rsp]
  00148	48 8d 8c 24 80
	01 00 00	 lea	 rcx, QWORD PTR infoex$[rsp]
  00150	e8 00 00 00 00	 call	 memcpy
$LN22@getOSVersi:

; 749  :         }
; 750  :         if (info.dwMajorVersion == 6) {

  00155	83 7c 24 44 06	 cmp	 DWORD PTR info$[rsp+4], 6
  0015a	75 1d		 jne	 SHORT $LN24@getOSVersi

; 751  :             getRealWindowsVersion(&infoex.dwMajorVersion, &infoex.dwMinorVersion, &infoex.dwBuildNumber);

  0015c	4c 8d 84 24 8c
	01 00 00	 lea	 r8, QWORD PTR infoex$[rsp+12]
  00164	48 8d 94 24 88
	01 00 00	 lea	 rdx, QWORD PTR infoex$[rsp+8]
  0016c	48 8d 8c 24 84
	01 00 00	 lea	 rcx, QWORD PTR infoex$[rsp+4]
  00174	e8 00 00 00 00	 call	 ?getRealWindowsVersion@@YAHPEAK00@Z ; getRealWindowsVersion
$LN24@getOSVersi:

; 752  :         }
; 753  :         if (osinfo) {

  00179	48 83 bc 24 28
	03 00 00 00	 cmp	 QWORD PTR osinfo$[rsp], 0
  00182	74 1b		 je	 SHORT $LN25@getOSVersi

; 754  :             memcpy(osinfo, &infoex, sizeof(infoex));

  00184	41 b8 1c 01 00
	00		 mov	 r8d, 284		; 0000011cH
  0018a	48 8d 94 24 80
	01 00 00	 lea	 rdx, QWORD PTR infoex$[rsp]
  00192	48 8b 8c 24 28
	03 00 00	 mov	 rcx, QWORD PTR osinfo$[rsp]
  0019a	e8 00 00 00 00	 call	 memcpy
$LN25@getOSVersi:

; 755  :         }
; 756  :         switch (infoex.dwMajorVersion) {

  0019f	8b 84 24 84 01
	00 00		 mov	 eax, DWORD PTR infoex$[rsp+4]
  001a6	89 84 24 bc 02
	00 00		 mov	 DWORD PTR tv91[rsp], eax
  001ad	83 bc 24 bc 02
	00 00 03	 cmp	 DWORD PTR tv91[rsp], 3
  001b5	74 3d		 je	 SHORT $LN26@getOSVersi
  001b7	83 bc 24 bc 02
	00 00 04	 cmp	 DWORD PTR tv91[rsp], 4
  001bf	0f 84 a2 00 00
	00		 je	 $LN32@getOSVersi
  001c5	83 bc 24 bc 02
	00 00 05	 cmp	 DWORD PTR tv91[rsp], 5
  001cd	0f 84 af 00 00
	00		 je	 $LN34@getOSVersi
  001d3	83 bc 24 bc 02
	00 00 06	 cmp	 DWORD PTR tv91[rsp], 6
  001db	0f 84 fc 00 00
	00		 je	 $LN39@getOSVersi
  001e1	83 bc 24 bc 02
	00 00 0a	 cmp	 DWORD PTR tv91[rsp], 10
  001e9	0f 84 8c 02 00
	00		 je	 $LN47@getOSVersi
  001ef	e9 c3 02 00 00	 jmp	 $LN48@getOSVersi
$LN26@getOSVersi:

; 757  :         case 3:
; 758  :             switch (infoex.dwMinorVersion) {

  001f4	8b 84 24 88 01
	00 00		 mov	 eax, DWORD PTR infoex$[rsp+8]
  001fb	89 84 24 c0 02
	00 00		 mov	 DWORD PTR tv95[rsp], eax
  00202	83 bc 24 c0 02
	00 00 00	 cmp	 DWORD PTR tv95[rsp], 0
  0020a	74 20		 je	 SHORT $LN27@getOSVersi
  0020c	83 bc 24 c0 02
	00 00 01	 cmp	 DWORD PTR tv95[rsp], 1
  00214	74 24		 je	 SHORT $LN28@getOSVersi
  00216	83 bc 24 c0 02
	00 00 05	 cmp	 DWORD PTR tv95[rsp], 5
  0021e	74 28		 je	 SHORT $LN29@getOSVersi
  00220	83 bc 24 c0 02
	00 00 33	 cmp	 DWORD PTR tv95[rsp], 51	; 00000033H
  00228	74 2c		 je	 SHORT $LN30@getOSVersi
  0022a	eb 36		 jmp	 SHORT $LN8@getOSVersi
$LN27@getOSVersi:

; 759  :             case 0:  ptr = _T("Windows NT 3"); break;

  0022c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117471
  00233	48 89 44 24 20	 mov	 QWORD PTR ptr$[rsp], rax
  00238	eb 28		 jmp	 SHORT $LN8@getOSVersi
$LN28@getOSVersi:

; 760  :             case 1:  ptr = _T("Windows NT 3.1"); break;

  0023a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117473
  00241	48 89 44 24 20	 mov	 QWORD PTR ptr$[rsp], rax
  00246	eb 1a		 jmp	 SHORT $LN8@getOSVersi
$LN29@getOSVersi:

; 761  :             case 5:  ptr = _T("Windows NT 3.5"); break;

  00248	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117475
  0024f	48 89 44 24 20	 mov	 QWORD PTR ptr$[rsp], rax
  00254	eb 0c		 jmp	 SHORT $LN8@getOSVersi
$LN30@getOSVersi:

; 762  :             case 51: ptr = _T("Windows NT 3.51"); break;

  00256	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117477
  0025d	48 89 44 24 20	 mov	 QWORD PTR ptr$[rsp], rax
$LN8@getOSVersi:

; 763  :             default: break;
; 764  :             }
; 765  :             break;

  00262	e9 66 02 00 00	 jmp	 $LN2@getOSVersi
$LN32@getOSVersi:

; 766  :         case 4:
; 767  :             if (0 == infoex.dwMinorVersion)

  00267	83 bc 24 88 01
	00 00 00	 cmp	 DWORD PTR infoex$[rsp+8], 0
  0026f	75 0c		 jne	 SHORT $LN33@getOSVersi

; 768  :                 ptr = _T("Windows NT 4.0");

  00271	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117481
  00278	48 89 44 24 20	 mov	 QWORD PTR ptr$[rsp], rax
$LN33@getOSVersi:

; 769  :             break;

  0027d	e9 4b 02 00 00	 jmp	 $LN2@getOSVersi
$LN34@getOSVersi:

; 770  :         case 5:
; 771  :             switch (infoex.dwMinorVersion) {

  00282	8b 84 24 88 01
	00 00		 mov	 eax, DWORD PTR infoex$[rsp+8]
  00289	89 84 24 c4 02
	00 00		 mov	 DWORD PTR tv133[rsp], eax
  00290	83 bc 24 c4 02
	00 00 00	 cmp	 DWORD PTR tv133[rsp], 0
  00298	74 16		 je	 SHORT $LN35@getOSVersi
  0029a	83 bc 24 c4 02
	00 00 01	 cmp	 DWORD PTR tv133[rsp], 1
  002a2	74 1a		 je	 SHORT $LN36@getOSVersi
  002a4	83 bc 24 c4 02
	00 00 02	 cmp	 DWORD PTR tv133[rsp], 2
  002ac	74 1e		 je	 SHORT $LN37@getOSVersi
  002ae	eb 28		 jmp	 SHORT $LN10@getOSVersi
$LN35@getOSVersi:

; 772  :             case 0:  ptr = _T("Windows 2000"); break;

  002b0	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117484
  002b7	48 89 44 24 20	 mov	 QWORD PTR ptr$[rsp], rax
  002bc	eb 1a		 jmp	 SHORT $LN10@getOSVersi
$LN36@getOSVersi:

; 773  :             case 1:  ptr = _T("Windows XP"); break;

  002be	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117486
  002c5	48 89 44 24 20	 mov	 QWORD PTR ptr$[rsp], rax
  002ca	eb 0c		 jmp	 SHORT $LN10@getOSVersi
$LN37@getOSVersi:

; 774  :             case 2:  ptr = _T("Windows Server 2003"); break;

  002cc	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117488
  002d3	48 89 44 24 20	 mov	 QWORD PTR ptr$[rsp], rax
$LN10@getOSVersi:

; 775  :             default: break;
; 776  :             }
; 777  :             break;

  002d8	e9 f0 01 00 00	 jmp	 $LN2@getOSVersi
$LN39@getOSVersi:

; 778  :         case 6:
; 779  :             switch (infoex.dwMinorVersion) {

  002dd	8b 84 24 88 01
	00 00		 mov	 eax, DWORD PTR infoex$[rsp+8]
  002e4	89 84 24 c8 02
	00 00		 mov	 DWORD PTR tv137[rsp], eax
  002eb	83 bc 24 c8 02
	00 00 00	 cmp	 DWORD PTR tv137[rsp], 0
  002f3	74 39		 je	 SHORT $LN40@getOSVersi
  002f5	83 bc 24 c8 02
	00 00 01	 cmp	 DWORD PTR tv137[rsp], 1
  002fd	74 6e		 je	 SHORT $LN41@getOSVersi
  002ff	83 bc 24 c8 02
	00 00 02	 cmp	 DWORD PTR tv137[rsp], 2
  00307	0f 84 9f 00 00
	00		 je	 $LN42@getOSVersi
  0030d	83 bc 24 c8 02
	00 00 03	 cmp	 DWORD PTR tv137[rsp], 3
  00315	0f 84 d0 00 00
	00		 je	 $LN43@getOSVersi
  0031b	83 bc 24 c8 02
	00 00 04	 cmp	 DWORD PTR tv137[rsp], 4
  00323	0f 84 fe 00 00
	00		 je	 $LN44@getOSVersi
  00329	e9 35 01 00 00	 jmp	 $LN45@getOSVersi
$LN40@getOSVersi:

; 780  :             case 0:  ptr = (infoex.wProductType == VER_NT_WORKSTATION) ? _T("Windows Vista") : _T("Windows Server 2008");    break;

  0032e	0f b6 84 24 9a
	02 00 00	 movzx	 eax, BYTE PTR infoex$[rsp+282]
  00336	83 f8 01	 cmp	 eax, 1
  00339	75 11		 jne	 SHORT $LN52@getOSVersi
  0033b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117492
  00342	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR tv140[rsp], rax
  0034a	eb 0f		 jmp	 SHORT $LN53@getOSVersi
$LN52@getOSVersi:
  0034c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117493
  00353	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR tv140[rsp], rax
$LN53@getOSVersi:
  0035b	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR tv140[rsp]
  00363	48 89 44 24 20	 mov	 QWORD PTR ptr$[rsp], rax
  00368	e9 0c 01 00 00	 jmp	 $LN12@getOSVersi
$LN41@getOSVersi:

; 781  :             case 1:  ptr = (infoex.wProductType == VER_NT_WORKSTATION) ? _T("Windows 7")     : _T("Windows Server 2008 R2"); break;

  0036d	0f b6 84 24 9a
	02 00 00	 movzx	 eax, BYTE PTR infoex$[rsp+282]
  00375	83 f8 01	 cmp	 eax, 1
  00378	75 11		 jne	 SHORT $LN54@getOSVersi
  0037a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117495
  00381	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR tv143[rsp], rax
  00389	eb 0f		 jmp	 SHORT $LN55@getOSVersi
$LN54@getOSVersi:
  0038b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117496
  00392	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR tv143[rsp], rax
$LN55@getOSVersi:
  0039a	48 8b 84 24 d8
	02 00 00	 mov	 rax, QWORD PTR tv143[rsp]
  003a2	48 89 44 24 20	 mov	 QWORD PTR ptr$[rsp], rax
  003a7	e9 cd 00 00 00	 jmp	 $LN12@getOSVersi
$LN42@getOSVersi:

; 782  :             case 2:  ptr = (infoex.wProductType == VER_NT_WORKSTATION) ? _T("Windows 8")     : _T("Windows Server 2012");    break;

  003ac	0f b6 84 24 9a
	02 00 00	 movzx	 eax, BYTE PTR infoex$[rsp+282]
  003b4	83 f8 01	 cmp	 eax, 1
  003b7	75 11		 jne	 SHORT $LN56@getOSVersi
  003b9	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117498
  003c0	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR tv146[rsp], rax
  003c8	eb 0f		 jmp	 SHORT $LN57@getOSVersi
$LN56@getOSVersi:
  003ca	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117499
  003d1	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR tv146[rsp], rax
$LN57@getOSVersi:
  003d9	48 8b 84 24 e0
	02 00 00	 mov	 rax, QWORD PTR tv146[rsp]
  003e1	48 89 44 24 20	 mov	 QWORD PTR ptr$[rsp], rax
  003e6	e9 8e 00 00 00	 jmp	 $LN12@getOSVersi
$LN43@getOSVersi:

; 783  :             case 3:  ptr = (infoex.wProductType == VER_NT_WORKSTATION) ? _T("Windows 8.1")   : _T("Windows Server 2012 R2"); break;

  003eb	0f b6 84 24 9a
	02 00 00	 movzx	 eax, BYTE PTR infoex$[rsp+282]
  003f3	83 f8 01	 cmp	 eax, 1
  003f6	75 11		 jne	 SHORT $LN58@getOSVersi
  003f8	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117501
  003ff	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR tv149[rsp], rax
  00407	eb 0f		 jmp	 SHORT $LN59@getOSVersi
$LN58@getOSVersi:
  00409	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117502
  00410	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR tv149[rsp], rax
$LN59@getOSVersi:
  00418	48 8b 84 24 e8
	02 00 00	 mov	 rax, QWORD PTR tv149[rsp]
  00420	48 89 44 24 20	 mov	 QWORD PTR ptr$[rsp], rax
  00425	eb 52		 jmp	 SHORT $LN12@getOSVersi
$LN44@getOSVersi:

; 784  :             case 4:  ptr = (infoex.wProductType == VER_NT_WORKSTATION) ? _T("Windows 10")    : _T("Windows Server 2016");    break;

  00427	0f b6 84 24 9a
	02 00 00	 movzx	 eax, BYTE PTR infoex$[rsp+282]
  0042f	83 f8 01	 cmp	 eax, 1
  00432	75 11		 jne	 SHORT $LN60@getOSVersi
  00434	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117504
  0043b	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR tv152[rsp], rax
  00443	eb 0f		 jmp	 SHORT $LN61@getOSVersi
$LN60@getOSVersi:
  00445	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117505
  0044c	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR tv152[rsp], rax
$LN61@getOSVersi:
  00454	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR tv152[rsp]
  0045c	48 89 44 24 20	 mov	 QWORD PTR ptr$[rsp], rax
  00461	eb 16		 jmp	 SHORT $LN12@getOSVersi
$LN45@getOSVersi:

; 785  :             default:
; 786  :                 if (5 <= infoex.dwMinorVersion) {

  00463	83 bc 24 88 01
	00 00 05	 cmp	 DWORD PTR infoex$[rsp+8], 5
  0046b	72 0c		 jb	 SHORT $LN12@getOSVersi

; 787  :                     ptr = _T("Later than Windows 10");

  0046d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117508
  00474	48 89 44 24 20	 mov	 QWORD PTR ptr$[rsp], rax
$LN12@getOSVersi:

; 788  :                 }
; 789  :                 break;
; 790  :             }
; 791  :             break;

  00479	eb 52		 jmp	 SHORT $LN2@getOSVersi
$LN47@getOSVersi:

; 792  :         case 10:
; 793  :             ptr = (infoex.wProductType == VER_NT_WORKSTATION) ? _T("Windows 10") : _T("Windows Server 2016"); break;

  0047b	0f b6 84 24 9a
	02 00 00	 movzx	 eax, BYTE PTR infoex$[rsp+282]
  00483	83 f8 01	 cmp	 eax, 1
  00486	75 11		 jne	 SHORT $LN62@getOSVersi
  00488	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117510
  0048f	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR tv161[rsp], rax
  00497	eb 0f		 jmp	 SHORT $LN63@getOSVersi
$LN62@getOSVersi:
  00499	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117511
  004a0	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR tv161[rsp], rax
$LN63@getOSVersi:
  004a8	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR tv161[rsp]
  004b0	48 89 44 24 20	 mov	 QWORD PTR ptr$[rsp], rax
  004b5	eb 16		 jmp	 SHORT $LN2@getOSVersi
$LN48@getOSVersi:

; 794  :         default:
; 795  :             if (10 <= infoex.dwMajorVersion) {

  004b7	83 bc 24 84 01
	00 00 0a	 cmp	 DWORD PTR infoex$[rsp+4], 10
  004bf	72 0c		 jb	 SHORT $LN2@getOSVersi

; 796  :                 ptr = _T("Later than Windows 10");

  004c1	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117514
  004c8	48 89 44 24 20	 mov	 QWORD PTR ptr$[rsp], rax
$LN2@getOSVersi:

; 797  :             }
; 798  :             break;
; 799  :         }
; 800  :         break;
; 801  :     default:
; 802  :         break;
; 803  :     }
; 804  :     return tstring(ptr);

  004cd	48 8b 54 24 20	 mov	 rdx, QWORD PTR ptr$[rsp]
  004d2	48 8b 8c 24 20
	03 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  004da	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  004df	90		 npad	 1
  004e0	8b 84 24 b0 02
	00 00		 mov	 eax, DWORD PTR $T5[rsp]
  004e7	83 c8 01	 or	 eax, 1
  004ea	89 84 24 b0 02
	00 00		 mov	 DWORD PTR $T5[rsp], eax
  004f1	48 8b 84 24 20
	03 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 805  : #else //#if defined(_WIN32) || defined(_WIN64)
; 806  : tstring getOSVersion() {
; 807  :     std::string str = "";
; 808  :     FILE *fp = popen("/usr/bin/lsb_release -a", "r");
; 809  :     if (fp != NULL) {
; 810  :         char buffer[2048];
; 811  :         while (NULL != fgets(buffer, _countof(buffer), fp)) {
; 812  :             str += buffer;
; 813  :         }
; 814  :         pclose(fp);
; 815  :         if (str.length() > 0) {
; 816  :             auto sep = split(str, "\n");
; 817  :             for (auto line : sep) {
; 818  :                 if (line.find("Description") != std::string::npos) {
; 819  :                     std::string::size_type pos = line.find(":");
; 820  :                     if (pos == std::string::npos) {
; 821  :                         pos = std::string("Description").length();
; 822  :                     }
; 823  :                     pos++;
; 824  :                     str = line.substr(pos);
; 825  :                     break;
; 826  :                 }
; 827  :             }
; 828  :         }
; 829  :     }
; 830  :     if (str.length() == 0) {
; 831  :         struct utsname buf;
; 832  :         uname(&buf);
; 833  :         str += buf.sysname;
; 834  :         str += " ";
; 835  :         str += buf.release;
; 836  :     }
; 837  :     return char_to_tstring(trim(str));
; 838  : #endif //#if defined(_WIN32) || defined(_WIN64)
; 839  : }

  004f9	48 8b f8	 mov	 rdi, rax
  004fc	48 8b cc	 mov	 rcx, rsp
  004ff	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z$rtcFrameData
  00506	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0050b	48 8b c7	 mov	 rax, rdi
  0050e	48 8b 8c 24 00
	03 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00516	48 33 cc	 xor	 rcx, rsp
  00519	e8 00 00 00 00	 call	 __security_check_cookie
  0051e	48 81 c4 10 03
	00 00		 add	 rsp, 784		; 00000310H
  00525	5f		 pop	 rdi
  00526	c3		 ret	 0
  00527	cc		 int	 3
?getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z ENDP ; getOSVersion
_TEXT	ENDS
text$x	SEGMENT
ptr$ = 32
info$ = 64
infoex$ = 384
$T5 = 688
tv64 = 692
tv75 = 696
tv91 = 700
tv95 = 704
tv133 = 708
tv137 = 712
tv140 = 720
tv143 = 728
tv146 = 736
tv149 = 744
tv152 = 752
tv161 = 760
__$ArrayPad$ = 768
__$ReturnUdt$ = 800
osinfo$ = 808
?dtor$0@?0??getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z@4HA PROC ; `getOSVersion'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 85 b0 02 00
	00		 mov	 eax, DWORD PTR $T5[rbp]
  00019	83 e0 01	 and	 eax, 1
  0001c	85 c0		 test	 eax, eax
  0001e	74 13		 je	 SHORT $LN65@dtor$0
  00020	83 a5 b0 02 00
	00 fe		 and	 DWORD PTR $T5[rbp], -2
  00027	48 8b 8d 20 03
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0002e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN65@dtor$0:
  00033	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00037	5f		 pop	 rdi
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
?dtor$0@?0??getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z@4HA ENDP ; `getOSVersion'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
ptr$ = 32
info$ = 64
infoex$ = 384
$T5 = 688
tv64 = 692
tv75 = 696
tv91 = 700
tv95 = 704
tv133 = 708
tv137 = 712
tv140 = 720
tv143 = 728
tv146 = 736
tv149 = 744
tv152 = 752
tv161 = 760
__$ArrayPad$ = 768
__$ReturnUdt$ = 800
osinfo$ = 808
?dtor$0@?0??getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z@4HA PROC ; `getOSVersion'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 85 b0 02 00
	00		 mov	 eax, DWORD PTR $T5[rbp]
  00019	83 e0 01	 and	 eax, 1
  0001c	85 c0		 test	 eax, eax
  0001e	74 13		 je	 SHORT $LN65@dtor$0
  00020	83 a5 b0 02 00
	00 fe		 and	 DWORD PTR $T5[rbp], -2
  00027	48 8b 8d 20 03
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0002e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN65@dtor$0:
  00033	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00037	5f		 pop	 rdi
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
?dtor$0@?0??getOSVersion@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAU_OSVERSIONINFOEXW@@@Z@4HA ENDP ; `getOSVersion'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
csbi$ = 40
ret$ = 68
$T4 = 72
$T5 = 112
$T6 = 152
$T7 = 200
$T8 = 240
$T9 = 248
tv78 = 252
tv79 = 256
tv153 = 264
tv134 = 272
tv174 = 280
tv129 = 288
tv179 = 296
__$ArrayPad$ = 304
log_level$ = 336
mes$ = 344
handle$ = 352
?rgy_print_stderr@@YAHHPEBDPEAX@Z PROC			; rgy_print_stderr

; 622  : int rgy_print_stderr(int log_level, const TCHAR *mes, HANDLE handle) {

$LN22:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  0000e	57		 push	 rdi
  0000f	48 81 ec 40 01
	00 00		 sub	 rsp, 320		; 00000140H
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 50 00 00 00	 mov	 ecx, 80			; 00000050H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	8b 8c 24 50 01
	00 00		 mov	 ecx, DWORD PTR [rsp+336]
  0002c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00033	48 33 c4	 xor	 rax, rsp
  00036	48 89 84 24 30
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003e	c7 84 24 f8 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T9[rsp], 0

; 623  : #if defined(_WIN32) || defined(_WIN64)
; 624  :     CONSOLE_SCREEN_BUFFER_INFO csbi = { 0 };

  00049	33 c0		 xor	 eax, eax
  0004b	66 89 44 24 28	 mov	 WORD PTR csbi$[rsp], ax
  00050	48 8d 44 24 2a	 lea	 rax, QWORD PTR csbi$[rsp+2]
  00055	48 8b f8	 mov	 rdi, rax
  00058	33 c0		 xor	 eax, eax
  0005a	b9 14 00 00 00	 mov	 ecx, 20
  0005f	f3 aa		 rep stosb

; 625  :     static const WORD LOG_COLOR[] = {
; 626  :         FOREGROUND_INTENSITY | FOREGROUND_GREEN | FOREGROUND_BLUE, //水色
; 627  :         FOREGROUND_INTENSITY | FOREGROUND_GREEN, //緑
; 628  :         FOREGROUND_INTENSITY | FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_BLUE,
; 629  :         FOREGROUND_INTENSITY | FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_BLUE,
; 630  :         FOREGROUND_INTENSITY | FOREGROUND_GREEN | FOREGROUND_RED, //黄色
; 631  :         FOREGROUND_INTENSITY | FOREGROUND_RED //赤
; 632  :     };
; 633  :     if (handle == NULL) {

  00061	48 83 bc 24 60
	01 00 00 00	 cmp	 QWORD PTR handle$[rsp], 0
  0006a	75 13		 jne	 SHORT $LN2@rgy_print_

; 634  :         handle = GetStdHandle(STD_ERROR_HANDLE);

  0006c	b9 f4 ff ff ff	 mov	 ecx, -12		; fffffff4H
  00071	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetStdHandle
  00077	48 89 84 24 60
	01 00 00	 mov	 QWORD PTR handle$[rsp], rax
$LN2@rgy_print_:

; 635  :     }
; 636  :     if (handle && log_level != RGY_LOG_INFO) {

  0007f	48 83 bc 24 60
	01 00 00 00	 cmp	 QWORD PTR handle$[rsp], 0
  00088	0f 84 a0 00 00
	00		 je	 $LN3@rgy_print_
  0008e	83 bc 24 50 01
	00 00 00	 cmp	 DWORD PTR log_level$[rsp], 0
  00096	0f 84 92 00 00
	00		 je	 $LN3@rgy_print_

; 637  :         GetConsoleScreenBufferInfo(handle, &csbi);

  0009c	48 8d 54 24 28	 lea	 rdx, QWORD PTR csbi$[rsp]
  000a1	48 8b 8c 24 60
	01 00 00	 mov	 rcx, QWORD PTR handle$[rsp]
  000a9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetConsoleScreenBufferInfo

; 638  :         SetConsoleTextAttribute(handle, LOG_COLOR[clamp(log_level, RGY_LOG_TRACE, RGY_LOG_ERROR) - RGY_LOG_TRACE] | (csbi.wAttributes & 0x00f0));

  000af	83 bc 24 50 01
	00 00 02	 cmp	 DWORD PTR log_level$[rsp], 2
  000b7	7f 35		 jg	 SHORT $LN8@rgy_print_
  000b9	83 bc 24 50 01
	00 00 fd	 cmp	 DWORD PTR log_level$[rsp], -3
  000c1	7c 10		 jl	 SHORT $LN6@rgy_print_
  000c3	8b 84 24 50 01
	00 00		 mov	 eax, DWORD PTR log_level$[rsp]
  000ca	89 84 24 fc 00
	00 00		 mov	 DWORD PTR tv78[rsp], eax
  000d1	eb 0b		 jmp	 SHORT $LN7@rgy_print_
$LN6@rgy_print_:
  000d3	c7 84 24 fc 00
	00 00 fd ff ff
	ff		 mov	 DWORD PTR tv78[rsp], -3
$LN7@rgy_print_:
  000de	8b 84 24 fc 00
	00 00		 mov	 eax, DWORD PTR tv78[rsp]
  000e5	89 84 24 00 01
	00 00		 mov	 DWORD PTR tv79[rsp], eax
  000ec	eb 0b		 jmp	 SHORT $LN9@rgy_print_
$LN8@rgy_print_:
  000ee	c7 84 24 00 01
	00 00 02 00 00
	00		 mov	 DWORD PTR tv79[rsp], 2
$LN9@rgy_print_:
  000f9	8b 84 24 00 01
	00 00		 mov	 eax, DWORD PTR tv79[rsp]
  00100	83 c0 03	 add	 eax, 3
  00103	48 98		 cdqe
  00105	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?LOG_COLOR@?1??rgy_print_stderr@@YAHHPEBDPEAX@Z@4QBGB
  0010c	0f b7 04 41	 movzx	 eax, WORD PTR [rcx+rax*2]
  00110	0f b7 4c 24 30	 movzx	 ecx, WORD PTR csbi$[rsp+8]
  00115	81 e1 f0 00 00
	00		 and	 ecx, 240		; 000000f0H
  0011b	0b c1		 or	 eax, ecx
  0011d	0f b7 d0	 movzx	 edx, ax
  00120	48 8b 8c 24 60
	01 00 00	 mov	 rcx, QWORD PTR handle$[rsp]
  00128	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetConsoleTextAttribute
$LN3@rgy_print_:

; 639  :     }
; 640  :     //このfprintfで"%"が消えてしまわないよう置換する
; 641  :     int ret = _ftprintf(stderr, (nullptr == _tcschr(mes, _T('%'))) ? mes : str_replace(tstring(mes), _T("%"), _T("%%")).c_str());

  0012e	ba 25 00 00 00	 mov	 edx, 37			; 00000025H
  00133	48 8b 8c 24 58
	01 00 00	 mov	 rcx, QWORD PTR mes$[rsp]
  0013b	e8 00 00 00 00	 call	 _tcschr
  00140	48 85 c0	 test	 rax, rax
  00143	75 15		 jne	 SHORT $LN10@rgy_print_
  00145	48 8b 84 24 58
	01 00 00	 mov	 rax, QWORD PTR mes$[rsp]
  0014d	48 89 84 24 08
	01 00 00	 mov	 QWORD PTR tv153[rsp], rax
  00155	e9 e0 00 00 00	 jmp	 $LN11@rgy_print_
$LN10@rgy_print_:
  0015a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117281
  00161	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T4[rsp]
  00166	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0016b	90		 npad	 1
  0016c	8b 84 24 f8 00
	00 00		 mov	 eax, DWORD PTR $T9[rsp]
  00173	83 c8 01	 or	 eax, 1
  00176	89 84 24 f8 00
	00 00		 mov	 DWORD PTR $T9[rsp], eax
  0017d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117282
  00184	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T5[rsp]
  00189	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0018e	90		 npad	 1
  0018f	8b 84 24 f8 00
	00 00		 mov	 eax, DWORD PTR $T9[rsp]
  00196	83 c8 02	 or	 eax, 2
  00199	89 84 24 f8 00
	00 00		 mov	 DWORD PTR $T9[rsp], eax
  001a0	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  001a8	48 89 84 24 f0
	00 00 00	 mov	 QWORD PTR $T8[rsp], rax
  001b0	48 8b 94 24 58
	01 00 00	 mov	 rdx, QWORD PTR mes$[rsp]
  001b8	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR $T8[rsp]
  001c0	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  001c5	48 89 84 24 10
	01 00 00	 mov	 QWORD PTR tv134[rsp], rax
  001cd	48 8b 84 24 10
	01 00 00	 mov	 rax, QWORD PTR tv134[rsp]
  001d5	48 89 84 24 18
	01 00 00	 mov	 QWORD PTR tv174[rsp], rax
  001dd	4c 8d 4c 24 48	 lea	 r9, QWORD PTR $T4[rsp]
  001e2	4c 8d 44 24 70	 lea	 r8, QWORD PTR $T5[rsp]
  001e7	48 8b 94 24 18
	01 00 00	 mov	 rdx, QWORD PTR tv174[rsp]
  001ef	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR $T6[rsp]
  001f7	e8 00 00 00 00	 call	 ?str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z ; str_replace
  001fc	48 89 84 24 20
	01 00 00	 mov	 QWORD PTR tv129[rsp], rax
  00204	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR tv129[rsp]
  0020c	48 89 84 24 28
	01 00 00	 mov	 QWORD PTR tv179[rsp], rax
  00214	8b 84 24 f8 00
	00 00		 mov	 eax, DWORD PTR $T9[rsp]
  0021b	83 c8 04	 or	 eax, 4
  0021e	89 84 24 f8 00
	00 00		 mov	 DWORD PTR $T9[rsp], eax
  00225	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR tv179[rsp]
  0022d	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00232	48 89 84 24 08
	01 00 00	 mov	 QWORD PTR tv153[rsp], rax
$LN11@rgy_print_:
  0023a	b9 02 00 00 00	 mov	 ecx, 2
  0023f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  00245	48 8b 94 24 08
	01 00 00	 mov	 rdx, QWORD PTR tv153[rsp]
  0024d	48 8b c8	 mov	 rcx, rax
  00250	e8 00 00 00 00	 call	 fprintf
  00255	89 44 24 44	 mov	 DWORD PTR ret$[rsp], eax
  00259	8b 84 24 f8 00
	00 00		 mov	 eax, DWORD PTR $T9[rsp]
  00260	83 e0 04	 and	 eax, 4
  00263	85 c0		 test	 eax, eax
  00265	74 16		 je	 SHORT $LN19@rgy_print_
  00267	83 a4 24 f8 00
	00 00 fb	 and	 DWORD PTR $T9[rsp], -5
  0026f	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR $T6[rsp]
  00277	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0027c	90		 npad	 1
$LN19@rgy_print_:
  0027d	8b 84 24 f8 00
	00 00		 mov	 eax, DWORD PTR $T9[rsp]
  00284	83 e0 02	 and	 eax, 2
  00287	85 c0		 test	 eax, eax
  00289	74 13		 je	 SHORT $LN20@rgy_print_
  0028b	83 a4 24 f8 00
	00 00 fd	 and	 DWORD PTR $T9[rsp], -3
  00293	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T5[rsp]
  00298	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0029d	90		 npad	 1
$LN20@rgy_print_:
  0029e	8b 84 24 f8 00
	00 00		 mov	 eax, DWORD PTR $T9[rsp]
  002a5	83 e0 01	 and	 eax, 1
  002a8	85 c0		 test	 eax, eax
  002aa	74 12		 je	 SHORT $LN21@rgy_print_
  002ac	83 a4 24 f8 00
	00 00 fe	 and	 DWORD PTR $T9[rsp], -2
  002b4	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T4[rsp]
  002b9	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN21@rgy_print_:

; 642  :     if (handle && log_level != RGY_LOG_INFO) {

  002be	48 83 bc 24 60
	01 00 00 00	 cmp	 QWORD PTR handle$[rsp], 0
  002c7	74 1d		 je	 SHORT $LN4@rgy_print_
  002c9	83 bc 24 50 01
	00 00 00	 cmp	 DWORD PTR log_level$[rsp], 0
  002d1	74 13		 je	 SHORT $LN4@rgy_print_

; 643  :         SetConsoleTextAttribute(handle, csbi.wAttributes); //元に戻す

  002d3	0f b7 54 24 30	 movzx	 edx, WORD PTR csbi$[rsp+8]
  002d8	48 8b 8c 24 60
	01 00 00	 mov	 rcx, QWORD PTR handle$[rsp]
  002e0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetConsoleTextAttribute
$LN4@rgy_print_:

; 644  :     }
; 645  : #else
; 646  :     static const char *const LOG_COLOR[] = {
; 647  :         "\x1b[36m", //水色
; 648  :         "\x1b[32m", //緑
; 649  :         "\x1b[39m", //デフォルト
; 650  :         "\x1b[39m", //デフォルト
; 651  :         "\x1b[33m", //黄色
; 652  :         "\x1b[31m", //赤
; 653  :     };
; 654  :     int ret = _ftprintf(stderr, "%s%s%s", LOG_COLOR[clamp(log_level, RGY_LOG_TRACE, RGY_LOG_ERROR) - RGY_LOG_TRACE], mes, LOG_COLOR[RGY_LOG_INFO - RGY_LOG_TRACE]);
; 655  : #endif //#if defined(_WIN32) || defined(_WIN64)
; 656  :     fflush(stderr);

  002e6	b9 02 00 00 00	 mov	 ecx, 2
  002eb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  002f1	48 8b c8	 mov	 rcx, rax
  002f4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fflush

; 657  :     return ret;

  002fa	8b 44 24 44	 mov	 eax, DWORD PTR ret$[rsp]

; 658  : }

  002fe	8b f8		 mov	 edi, eax
  00300	48 8b cc	 mov	 rcx, rsp
  00303	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?rgy_print_stderr@@YAHHPEBDPEAX@Z$rtcFrameData
  0030a	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0030f	8b c7		 mov	 eax, edi
  00311	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00319	48 33 cc	 xor	 rcx, rsp
  0031c	e8 00 00 00 00	 call	 __security_check_cookie
  00321	48 81 c4 40 01
	00 00		 add	 rsp, 320		; 00000140H
  00328	5f		 pop	 rdi
  00329	c3		 ret	 0
?rgy_print_stderr@@YAHHPEBDPEAX@Z ENDP			; rgy_print_stderr
_TEXT	ENDS
text$x	SEGMENT
csbi$ = 40
ret$ = 68
$T4 = 72
$T5 = 112
$T6 = 152
$T7 = 200
$T8 = 240
$T9 = 248
tv78 = 252
tv79 = 256
tv153 = 264
tv134 = 272
tv174 = 280
tv129 = 288
tv179 = 296
__$ArrayPad$ = 304
log_level$ = 336
mes$ = 344
handle$ = 352
?dtor$0@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA PROC	; `rgy_print_stderr'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 85 f8 00 00
	00		 mov	 eax, DWORD PTR $T9[rbp]
  00019	83 e0 01	 and	 eax, 1
  0001c	85 c0		 test	 eax, eax
  0001e	74 10		 je	 SHORT $LN13@dtor$0
  00020	83 a5 f8 00 00
	00 fe		 and	 DWORD PTR $T9[rbp], -2
  00027	48 8d 4d 48	 lea	 rcx, QWORD PTR $T4[rbp]
  0002b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN13@dtor$0:
  00030	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00034	5f		 pop	 rdi
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
?dtor$0@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA ENDP	; `rgy_print_stderr'::`1'::dtor$0
csbi$ = 40
ret$ = 68
$T4 = 72
$T5 = 112
$T6 = 152
$T7 = 200
$T8 = 240
$T9 = 248
tv78 = 252
tv79 = 256
tv153 = 264
tv134 = 272
tv174 = 280
tv129 = 288
tv179 = 296
__$ArrayPad$ = 304
log_level$ = 336
mes$ = 344
handle$ = 352
?dtor$1@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA PROC	; `rgy_print_stderr'::`1'::dtor$1
  00037	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0003c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00041	55		 push	 rbp
  00042	57		 push	 rdi
  00043	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00047	48 8b ea	 mov	 rbp, rdx
  0004a	8b 85 f8 00 00
	00		 mov	 eax, DWORD PTR $T9[rbp]
  00050	83 e0 02	 and	 eax, 2
  00053	85 c0		 test	 eax, eax
  00055	74 10		 je	 SHORT $LN15@dtor$1
  00057	83 a5 f8 00 00
	00 fd		 and	 DWORD PTR $T9[rbp], -3
  0005e	48 8d 4d 70	 lea	 rcx, QWORD PTR $T5[rbp]
  00062	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN15@dtor$1:
  00067	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006b	5f		 pop	 rdi
  0006c	5d		 pop	 rbp
  0006d	c3		 ret	 0
?dtor$1@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA ENDP	; `rgy_print_stderr'::`1'::dtor$1
csbi$ = 40
ret$ = 68
$T4 = 72
$T5 = 112
$T6 = 152
$T7 = 200
$T8 = 240
$T9 = 248
tv78 = 252
tv79 = 256
tv153 = 264
tv134 = 272
tv174 = 280
tv129 = 288
tv179 = 296
__$ArrayPad$ = 304
log_level$ = 336
mes$ = 344
handle$ = 352
?dtor$2@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA PROC	; `rgy_print_stderr'::`1'::dtor$2
  0006e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00073	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00078	55		 push	 rbp
  00079	57		 push	 rdi
  0007a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007e	48 8b ea	 mov	 rbp, rdx
  00081	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR $T8[rbp]
  00088	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0008d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00091	5f		 pop	 rdi
  00092	5d		 pop	 rbp
  00093	c3		 ret	 0
?dtor$2@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA ENDP	; `rgy_print_stderr'::`1'::dtor$2
csbi$ = 40
ret$ = 68
$T4 = 72
$T5 = 112
$T6 = 152
$T7 = 200
$T8 = 240
$T9 = 248
tv78 = 252
tv79 = 256
tv153 = 264
tv134 = 272
tv174 = 280
tv129 = 288
tv179 = 296
__$ArrayPad$ = 304
log_level$ = 336
mes$ = 344
handle$ = 352
?dtor$3@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA PROC	; `rgy_print_stderr'::`1'::dtor$3
  00094	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00099	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009e	55		 push	 rbp
  0009f	57		 push	 rdi
  000a0	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a4	48 8b ea	 mov	 rbp, rdx
  000a7	8b 85 f8 00 00
	00		 mov	 eax, DWORD PTR $T9[rbp]
  000ad	83 e0 04	 and	 eax, 4
  000b0	85 c0		 test	 eax, eax
  000b2	74 13		 je	 SHORT $LN18@dtor$3
  000b4	83 a5 f8 00 00
	00 fb		 and	 DWORD PTR $T9[rbp], -5
  000bb	48 8d 8d 98 00
	00 00		 lea	 rcx, QWORD PTR $T6[rbp]
  000c2	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN18@dtor$3:
  000c7	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000cb	5f		 pop	 rdi
  000cc	5d		 pop	 rbp
  000cd	c3		 ret	 0
?dtor$3@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA ENDP	; `rgy_print_stderr'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
csbi$ = 40
ret$ = 68
$T4 = 72
$T5 = 112
$T6 = 152
$T7 = 200
$T8 = 240
$T9 = 248
tv78 = 252
tv79 = 256
tv153 = 264
tv134 = 272
tv174 = 280
tv129 = 288
tv179 = 296
__$ArrayPad$ = 304
log_level$ = 336
mes$ = 344
handle$ = 352
?dtor$0@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA PROC	; `rgy_print_stderr'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 85 f8 00 00
	00		 mov	 eax, DWORD PTR $T9[rbp]
  00019	83 e0 01	 and	 eax, 1
  0001c	85 c0		 test	 eax, eax
  0001e	74 10		 je	 SHORT $LN13@dtor$0
  00020	83 a5 f8 00 00
	00 fe		 and	 DWORD PTR $T9[rbp], -2
  00027	48 8d 4d 48	 lea	 rcx, QWORD PTR $T4[rbp]
  0002b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN13@dtor$0:
  00030	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00034	5f		 pop	 rdi
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
?dtor$0@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA ENDP	; `rgy_print_stderr'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
csbi$ = 40
ret$ = 68
$T4 = 72
$T5 = 112
$T6 = 152
$T7 = 200
$T8 = 240
$T9 = 248
tv78 = 252
tv79 = 256
tv153 = 264
tv134 = 272
tv174 = 280
tv129 = 288
tv179 = 296
__$ArrayPad$ = 304
log_level$ = 336
mes$ = 344
handle$ = 352
?dtor$1@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA PROC	; `rgy_print_stderr'::`1'::dtor$1
  00037	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0003c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00041	55		 push	 rbp
  00042	57		 push	 rdi
  00043	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00047	48 8b ea	 mov	 rbp, rdx
  0004a	8b 85 f8 00 00
	00		 mov	 eax, DWORD PTR $T9[rbp]
  00050	83 e0 02	 and	 eax, 2
  00053	85 c0		 test	 eax, eax
  00055	74 10		 je	 SHORT $LN15@dtor$1
  00057	83 a5 f8 00 00
	00 fd		 and	 DWORD PTR $T9[rbp], -3
  0005e	48 8d 4d 70	 lea	 rcx, QWORD PTR $T5[rbp]
  00062	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN15@dtor$1:
  00067	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006b	5f		 pop	 rdi
  0006c	5d		 pop	 rbp
  0006d	c3		 ret	 0
?dtor$1@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA ENDP	; `rgy_print_stderr'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
csbi$ = 40
ret$ = 68
$T4 = 72
$T5 = 112
$T6 = 152
$T7 = 200
$T8 = 240
$T9 = 248
tv78 = 252
tv79 = 256
tv153 = 264
tv134 = 272
tv174 = 280
tv129 = 288
tv179 = 296
__$ArrayPad$ = 304
log_level$ = 336
mes$ = 344
handle$ = 352
?dtor$2@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA PROC	; `rgy_print_stderr'::`1'::dtor$2
  0006e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00073	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00078	55		 push	 rbp
  00079	57		 push	 rdi
  0007a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007e	48 8b ea	 mov	 rbp, rdx
  00081	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR $T8[rbp]
  00088	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0008d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00091	5f		 pop	 rdi
  00092	5d		 pop	 rbp
  00093	c3		 ret	 0
?dtor$2@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA ENDP	; `rgy_print_stderr'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
csbi$ = 40
ret$ = 68
$T4 = 72
$T5 = 112
$T6 = 152
$T7 = 200
$T8 = 240
$T9 = 248
tv78 = 252
tv79 = 256
tv153 = 264
tv134 = 272
tv174 = 280
tv129 = 288
tv179 = 296
__$ArrayPad$ = 304
log_level$ = 336
mes$ = 344
handle$ = 352
?dtor$3@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA PROC	; `rgy_print_stderr'::`1'::dtor$3
  00094	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00099	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009e	55		 push	 rbp
  0009f	57		 push	 rdi
  000a0	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a4	48 8b ea	 mov	 rbp, rdx
  000a7	8b 85 f8 00 00
	00		 mov	 eax, DWORD PTR $T9[rbp]
  000ad	83 e0 04	 and	 eax, 4
  000b0	85 c0		 test	 eax, eax
  000b2	74 13		 je	 SHORT $LN18@dtor$3
  000b4	83 a5 f8 00 00
	00 fb		 and	 DWORD PTR $T9[rbp], -5
  000bb	48 8d 8d 98 00
	00 00		 lea	 rcx, QWORD PTR $T6[rbp]
  000c2	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN18@dtor$3:
  000c7	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000cb	5f		 pop	 rdi
  000cc	5d		 pop	 rbp
  000cd	c3		 ret	 0
?dtor$3@?0??rgy_print_stderr@@YAHHPEBDPEAX@Z@4HA ENDP	; `rgy_print_stderr'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
filename$ = 48
ext_list$ = 56
?check_ext@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@PEBDV?$allocator@PEBD@std@@@2@@Z PROC ; check_ext

; 540  : bool check_ext(const tstring& filename, const std::vector<const char*>& ext_list) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 541  :     return check_ext(filename.c_str(), ext_list);

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR filename$[rsp]
  00028	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR ext_list$[rsp]
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ?check_ext@@YA_NPEBDAEBV?$vector@PEBDV?$allocator@PEBD@std@@@std@@@Z ; check_ext

; 542  : }

  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?check_ext@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$vector@PEBDV?$allocator@PEBD@std@@@2@@Z ENDP ; check_ext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
target$ = 32
<range>$L0$1 = 40
<begin>$L0$2 = 48
<end>$L0$3 = 56
ext$4 = 64
$T5 = 72
$T6 = 120
tv91 = 128
tv90 = 136
tv85 = 144
__$ArrayPad$ = 152
filename$ = 176
ext_list$ = 184
?check_ext@@YA_NPEBDAEBV?$vector@PEBDV?$allocator@PEBD@std@@@std@@@Z PROC ; check_ext

; 528  : bool check_ext(const TCHAR *filename, const std::vector<const char*>& ext_list) {

$LN11:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+176]
  00029	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00030	48 33 c4	 xor	 rax, rsp
  00033	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 529  :     const TCHAR *target = PathFindExtension(filename);

  0003b	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR filename$[rsp]
  00043	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathFindExtensionA
  00049	48 89 44 24 20	 mov	 QWORD PTR target$[rsp], rax

; 530  :     if (target) {

  0004e	48 83 7c 24 20
	00		 cmp	 QWORD PTR target$[rsp], 0
  00054	0f 84 e3 00 00
	00		 je	 $LN5@check_ext

; 531  :         for (auto ext : ext_list) {

  0005a	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR ext_list$[rsp]
  00062	48 89 44 24 28	 mov	 QWORD PTR <range>$L0$1[rsp], rax
  00067	48 8b 4c 24 28	 mov	 rcx, QWORD PTR <range>$L0$1[rsp]
  0006c	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBAPEBQEBDXZ ; std::vector<char const *,std::allocator<char const *> >::_Unchecked_begin
  00071	48 89 44 24 30	 mov	 QWORD PTR <begin>$L0$2[rsp], rax
  00076	48 8b 4c 24 28	 mov	 rcx, QWORD PTR <range>$L0$1[rsp]
  0007b	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBAPEBQEBDXZ ; std::vector<char const *,std::allocator<char const *> >::_Unchecked_end
  00080	48 89 44 24 38	 mov	 QWORD PTR <end>$L0$3[rsp], rax
  00085	eb 0e		 jmp	 SHORT $LN4@check_ext
$LN2@check_ext:
  00087	48 8b 44 24 30	 mov	 rax, QWORD PTR <begin>$L0$2[rsp]
  0008c	48 83 c0 08	 add	 rax, 8
  00090	48 89 44 24 30	 mov	 QWORD PTR <begin>$L0$2[rsp], rax
$LN4@check_ext:
  00095	48 8b 44 24 38	 mov	 rax, QWORD PTR <end>$L0$3[rsp]
  0009a	48 39 44 24 30	 cmp	 QWORD PTR <begin>$L0$2[rsp], rax
  0009f	0f 84 98 00 00
	00		 je	 $LN5@check_ext
  000a5	48 8b 44 24 30	 mov	 rax, QWORD PTR <begin>$L0$2[rsp]
  000aa	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ad	48 89 44 24 40	 mov	 QWORD PTR ext$4[rsp], rax

; 532  :             if (0 == _tcsicmp(target, char_to_tstring(ext).c_str())) {

  000b2	41 b8 03 00 00
	00		 mov	 r8d, 3
  000b8	48 8b 54 24 40	 mov	 rdx, QWORD PTR ext$4[rsp]
  000bd	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T5[rsp]
  000c2	e8 00 00 00 00	 call	 ?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z ; char_to_tstring
  000c7	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR tv91[rsp], rax
  000cf	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR tv91[rsp]
  000d7	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR tv90[rsp], rax
  000df	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR tv90[rsp]
  000e7	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  000ec	48 8b d0	 mov	 rdx, rax
  000ef	48 8b 4c 24 20	 mov	 rcx, QWORD PTR target$[rsp]
  000f4	e8 00 00 00 00	 call	 _tcsicmp
  000f9	85 c0		 test	 eax, eax
  000fb	75 0d		 jne	 SHORT $LN8@check_ext
  000fd	c7 84 24 90 00
	00 00 01 00 00
	00		 mov	 DWORD PTR tv85[rsp], 1
  00108	eb 0b		 jmp	 SHORT $LN9@check_ext
$LN8@check_ext:
  0010a	c7 84 24 90 00
	00 00 00 00 00
	00		 mov	 DWORD PTR tv85[rsp], 0
$LN9@check_ext:
  00115	0f b6 84 24 90
	00 00 00	 movzx	 eax, BYTE PTR tv85[rsp]
  0011d	88 44 24 78	 mov	 BYTE PTR $T6[rsp], al
  00121	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T5[rsp]
  00126	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0012b	0f b6 44 24 78	 movzx	 eax, BYTE PTR $T6[rsp]
  00130	85 c0		 test	 eax, eax
  00132	74 04		 je	 SHORT $LN6@check_ext

; 533  :                 return true;

  00134	b0 01		 mov	 al, 1
  00136	eb 07		 jmp	 SHORT $LN1@check_ext
$LN6@check_ext:

; 534  :             }
; 535  :         }

  00138	e9 4a ff ff ff	 jmp	 $LN2@check_ext
$LN5@check_ext:

; 536  :     }
; 537  :     return false;

  0013d	32 c0		 xor	 al, al
$LN1@check_ext:

; 538  : }

  0013f	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00147	48 33 cc	 xor	 rcx, rsp
  0014a	e8 00 00 00 00	 call	 __security_check_cookie
  0014f	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  00156	5f		 pop	 rdi
  00157	c3		 ret	 0
?check_ext@@YA_NPEBDAEBV?$vector@PEBDV?$allocator@PEBD@std@@@std@@@Z ENDP ; check_ext
_TEXT	ENDS
text$x	SEGMENT
target$ = 32
<range>$L0$1 = 40
<begin>$L0$2 = 48
<end>$L0$3 = 56
ext$4 = 64
$T5 = 72
$T6 = 120
tv91 = 128
tv90 = 136
tv85 = 144
__$ArrayPad$ = 152
filename$ = 176
ext_list$ = 184
?dtor$0@?0??check_ext@@YA_NPEBDAEBV?$vector@PEBDV?$allocator@PEBD@std@@@std@@@Z@4HA PROC ; `check_ext'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 48	 lea	 rcx, QWORD PTR $T5[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??check_ext@@YA_NPEBDAEBV?$vector@PEBDV?$allocator@PEBD@std@@@std@@@Z@4HA ENDP ; `check_ext'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
target$ = 32
<range>$L0$1 = 40
<begin>$L0$2 = 48
<end>$L0$3 = 56
ext$4 = 64
$T5 = 72
$T6 = 120
tv91 = 128
tv90 = 136
tv85 = 144
__$ArrayPad$ = 152
filename$ = 176
ext_list$ = 184
?dtor$0@?0??check_ext@@YA_NPEBDAEBV?$vector@PEBDV?$allocator@PEBD@std@@@std@@@Z@4HA PROC ; `check_ext'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 48	 lea	 rcx, QWORD PTR $T5[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??check_ext@@YA_NPEBDAEBV?$vector@PEBDV?$allocator@PEBD@std@@@std@@@Z@4HA ENDP ; `check_ext'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
sec$ = 48
miniute$ = 52
hour$ = 56
frac$ = 72
$T4 = 120
$T5 = 168
tv73 = 176
tv133 = 184
__$ArrayPad$ = 192
__$ReturnUdt$ = 224
time$ = 232
?print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z PROC ; print_time

; 611  : tstring print_time(double time) {

$LN7:
  00000	f2 0f 11 4c 24
	10		 movsd	 QWORD PTR [rsp+16], xmm1
  00006	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000b	57		 push	 rdi
  0000c	48 81 ec d0 00
	00 00		 sub	 rsp, 208		; 000000d0H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+224]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c4	 xor	 rax, rsp
  00034	48 89 84 24 c0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003c	c7 84 24 a8 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T5[rsp], 0

; 612  :     int sec = (int)time;

  00047	f2 0f 2c 84 24
	e8 00 00 00	 cvttsd2si eax, QWORD PTR time$[rsp]
  00050	89 44 24 30	 mov	 DWORD PTR sec$[rsp], eax

; 613  :     time -= sec;

  00054	f2 0f 2a 44 24
	30		 cvtsi2sd xmm0, DWORD PTR sec$[rsp]
  0005a	f2 0f 10 8c 24
	e8 00 00 00	 movsd	 xmm1, QWORD PTR time$[rsp]
  00063	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00067	0f 28 c1	 movaps	 xmm0, xmm1
  0006a	f2 0f 11 84 24
	e8 00 00 00	 movsd	 QWORD PTR time$[rsp], xmm0

; 614  :     int miniute = (int)(sec / 60);

  00073	8b 44 24 30	 mov	 eax, DWORD PTR sec$[rsp]
  00077	99		 cdq
  00078	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  0007d	f7 f9		 idiv	 ecx
  0007f	89 44 24 34	 mov	 DWORD PTR miniute$[rsp], eax

; 615  :     sec -= miniute * 60;

  00083	6b 44 24 34 3c	 imul	 eax, DWORD PTR miniute$[rsp], 60 ; 0000003cH
  00088	8b 4c 24 30	 mov	 ecx, DWORD PTR sec$[rsp]
  0008c	2b c8		 sub	 ecx, eax
  0008e	8b c1		 mov	 eax, ecx
  00090	89 44 24 30	 mov	 DWORD PTR sec$[rsp], eax

; 616  :     int hour = miniute / 60;

  00094	8b 44 24 34	 mov	 eax, DWORD PTR miniute$[rsp]
  00098	99		 cdq
  00099	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  0009e	f7 f9		 idiv	 ecx
  000a0	89 44 24 38	 mov	 DWORD PTR hour$[rsp], eax

; 617  :     miniute -= hour * 60;

  000a4	6b 44 24 38 3c	 imul	 eax, DWORD PTR hour$[rsp], 60 ; 0000003cH
  000a9	8b 4c 24 34	 mov	 ecx, DWORD PTR miniute$[rsp]
  000ad	2b c8		 sub	 ecx, eax
  000af	8b c1		 mov	 eax, ecx
  000b1	89 44 24 34	 mov	 DWORD PTR miniute$[rsp], eax

; 618  :     tstring frac = strsprintf(_T("%.3f"), time);

  000b5	f2 0f 10 94 24
	e8 00 00 00	 movsd	 xmm2, QWORD PTR time$[rsp]
  000be	66 49 0f 7e d0	 movq	 r8, xmm2
  000c3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117261
  000ca	48 8d 4c 24 48	 lea	 rcx, QWORD PTR frac$[rsp]
  000cf	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  000d4	90		 npad	 1

; 619  :     return strsprintf(_T("%d:%02d:%02d%s"), hour, miniute, sec, frac.substr(frac.find_first_of(_T("."))).c_str());

  000d5	45 33 c0	 xor	 r8d, r8d
  000d8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117262
  000df	48 8d 4c 24 48	 lea	 rcx, QWORD PTR frac$[rsp]
  000e4	e8 00 00 00 00	 call	 ?find_first_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_first_of
  000e9	49 c7 c1 ff ff
	ff ff		 mov	 r9, -1
  000f0	4c 8b c0	 mov	 r8, rax
  000f3	48 8d 54 24 78	 lea	 rdx, QWORD PTR $T4[rsp]
  000f8	48 8d 4c 24 48	 lea	 rcx, QWORD PTR frac$[rsp]
  000fd	e8 00 00 00 00	 call	 ?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
  00102	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR tv73[rsp], rax
  0010a	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR tv73[rsp]
  00112	48 89 84 24 b8
	00 00 00	 mov	 QWORD PTR tv133[rsp], rax
  0011a	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR tv133[rsp]
  00122	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00127	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0012c	8b 44 24 30	 mov	 eax, DWORD PTR sec$[rsp]
  00130	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00134	44 8b 4c 24 34	 mov	 r9d, DWORD PTR miniute$[rsp]
  00139	44 8b 44 24 38	 mov	 r8d, DWORD PTR hour$[rsp]
  0013e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117263
  00145	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0014d	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00152	8b 84 24 a8 00
	00 00		 mov	 eax, DWORD PTR $T5[rsp]
  00159	83 c8 01	 or	 eax, 1
  0015c	89 84 24 a8 00
	00 00		 mov	 DWORD PTR $T5[rsp], eax
  00163	48 8d 4c 24 78	 lea	 rcx, QWORD PTR $T4[rsp]
  00168	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0016d	90		 npad	 1
  0016e	48 8d 4c 24 48	 lea	 rcx, QWORD PTR frac$[rsp]
  00173	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00178	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 620  : }

  00180	48 8b f8	 mov	 rdi, rax
  00183	48 8b cc	 mov	 rcx, rsp
  00186	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z$rtcFrameData
  0018d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00192	48 8b c7	 mov	 rax, rdi
  00195	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0019d	48 33 cc	 xor	 rcx, rsp
  001a0	e8 00 00 00 00	 call	 __security_check_cookie
  001a5	48 81 c4 d0 00
	00 00		 add	 rsp, 208		; 000000d0H
  001ac	5f		 pop	 rdi
  001ad	c3		 ret	 0
  001ae	cc		 int	 3
?print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z ENDP ; print_time
_TEXT	ENDS
text$x	SEGMENT
sec$ = 48
miniute$ = 52
hour$ = 56
frac$ = 72
$T4 = 120
$T5 = 168
tv73 = 176
tv133 = 184
__$ArrayPad$ = 192
__$ReturnUdt$ = 224
time$ = 232
?dtor$0@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA PROC ; `print_time'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 48	 lea	 rcx, QWORD PTR frac$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA ENDP ; `print_time'::`1'::dtor$0
sec$ = 48
miniute$ = 52
hour$ = 56
frac$ = 72
$T4 = 120
$T5 = 168
tv73 = 176
tv133 = 184
__$ArrayPad$ = 192
__$ReturnUdt$ = 224
time$ = 232
?dtor$1@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA PROC ; `print_time'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 78	 lea	 rcx, QWORD PTR $T4[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA ENDP ; `print_time'::`1'::dtor$1
sec$ = 48
miniute$ = 52
hour$ = 56
frac$ = 72
$T4 = 120
$T5 = 168
tv73 = 176
tv133 = 184
__$ArrayPad$ = 192
__$ReturnUdt$ = 224
time$ = 232
?dtor$2@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA PROC ; `print_time'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	8b 85 a8 00 00
	00		 mov	 eax, DWORD PTR $T5[rbp]
  0005f	83 e0 01	 and	 eax, 1
  00062	85 c0		 test	 eax, eax
  00064	74 13		 je	 SHORT $LN6@dtor$2
  00066	83 a5 a8 00 00
	00 fe		 and	 DWORD PTR $T5[rbp], -2
  0006d	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00074	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@dtor$2:
  00079	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0007d	5f		 pop	 rdi
  0007e	5d		 pop	 rbp
  0007f	c3		 ret	 0
?dtor$2@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA ENDP ; `print_time'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
sec$ = 48
miniute$ = 52
hour$ = 56
frac$ = 72
$T4 = 120
$T5 = 168
tv73 = 176
tv133 = 184
__$ArrayPad$ = 192
__$ReturnUdt$ = 224
time$ = 232
?dtor$0@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA PROC ; `print_time'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 48	 lea	 rcx, QWORD PTR frac$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA ENDP ; `print_time'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
sec$ = 48
miniute$ = 52
hour$ = 56
frac$ = 72
$T4 = 120
$T5 = 168
tv73 = 176
tv133 = 184
__$ArrayPad$ = 192
__$ReturnUdt$ = 224
time$ = 232
?dtor$1@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA PROC ; `print_time'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 78	 lea	 rcx, QWORD PTR $T4[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA ENDP ; `print_time'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
sec$ = 48
miniute$ = 52
hour$ = 56
frac$ = 72
$T4 = 120
$T5 = 168
tv73 = 176
tv133 = 184
__$ArrayPad$ = 192
__$ReturnUdt$ = 224
time$ = 232
?dtor$2@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA PROC ; `print_time'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	8b 85 a8 00 00
	00		 mov	 eax, DWORD PTR $T5[rbp]
  0005f	83 e0 01	 and	 eax, 1
  00062	85 c0		 test	 eax, eax
  00064	74 13		 je	 SHORT $LN6@dtor$2
  00066	83 a5 a8 00 00
	00 fe		 and	 DWORD PTR $T5[rbp], -2
  0006d	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00074	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@dtor$2:
  00079	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0007d	5f		 pop	 rdi
  0007e	5d		 pop	 rbp
  0007f	c3		 ret	 0
?dtor$2@?0??print_time@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z@4HA ENDP ; `print_time'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
ret$ = 40
$T4 = 104
$T5 = 152
$T6 = 153
$T7 = 154
tv90 = 156
__$ArrayPad$ = 160
dir$ = 192
?CreateDirectoryRecursive@@YA_NPEBD@Z PROC		; CreateDirectoryRecursive

; 491  : bool CreateDirectoryRecursive(const char *dir) {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+192]
  00024	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002b	48 33 c4	 xor	 rax, rsp
  0002e	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 492  :     if (PathIsDirectoryA(dir)) {

  00036	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR dir$[rsp]
  0003e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathIsDirectoryA
  00044	85 c0		 test	 eax, eax
  00046	74 07		 je	 SHORT $LN2@CreateDire

; 493  :         return true;

  00048	b0 01		 mov	 al, 1
  0004a	e9 f0 00 00 00	 jmp	 $LN1@CreateDire
$LN2@CreateDire:

; 494  :     }
; 495  : #if defined(_WIN32) || defined(_WIN64)
; 496  :     if (!PathRootExists(dir)) {

  0004f	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR dir$[rsp]
  00057	e8 00 00 00 00	 call	 ?PathRootExists@@YA_NPEBD@Z ; PathRootExists
  0005c	0f b6 c0	 movzx	 eax, al
  0005f	85 c0		 test	 eax, eax
  00061	75 07		 jne	 SHORT $LN3@CreateDire

; 497  :         return false;

  00063	32 c0		 xor	 al, al
  00065	e9 d5 00 00 00	 jmp	 $LN1@CreateDire
$LN3@CreateDire:

; 498  :     }
; 499  : #endif //#if defined(_WIN32) || defined(_WIN64)
; 500  :     auto ret = PathRemoveFileSpecFixed(dir);

  0006a	48 8b 94 24 c0
	00 00 00	 mov	 rdx, QWORD PTR dir$[rsp]
  00072	48 8d 4c 24 68	 lea	 rcx, QWORD PTR $T4[rsp]
  00077	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0007c	90		 npad	 1
  0007d	48 8d 54 24 68	 lea	 rdx, QWORD PTR $T4[rsp]
  00082	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  00087	e8 00 00 00 00	 call	 ?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; PathRemoveFileSpecFixed
  0008c	90		 npad	 1
  0008d	48 8d 4c 24 68	 lea	 rcx, QWORD PTR $T4[rsp]
  00092	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 501  :     if (ret.first == 0) {

  00097	83 7c 24 28 00	 cmp	 DWORD PTR ret$[rsp], 0
  0009c	75 1f		 jne	 SHORT $LN4@CreateDire

; 502  :         return false;

  0009e	c6 84 24 98 00
	00 00 00	 mov	 BYTE PTR $T5[rsp], 0
  000a6	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000ab	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
  000b0	0f b6 84 24 98
	00 00 00	 movzx	 eax, BYTE PTR $T5[rsp]
  000b8	e9 82 00 00 00	 jmp	 $LN1@CreateDire
$LN4@CreateDire:

; 503  :     }
; 504  :     if (!CreateDirectoryRecursive(ret.second.c_str())) {

  000bd	48 8d 4c 24 30	 lea	 rcx, QWORD PTR ret$[rsp+8]
  000c2	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  000c7	48 8b c8	 mov	 rcx, rax
  000ca	e8 00 00 00 00	 call	 ?CreateDirectoryRecursive@@YA_NPEBD@Z ; CreateDirectoryRecursive
  000cf	0f b6 c0	 movzx	 eax, al
  000d2	85 c0		 test	 eax, eax
  000d4	75 1c		 jne	 SHORT $LN5@CreateDire

; 505  :         return false;

  000d6	c6 84 24 99 00
	00 00 00	 mov	 BYTE PTR $T6[rsp], 0
  000de	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000e3	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
  000e8	0f b6 84 24 99
	00 00 00	 movzx	 eax, BYTE PTR $T6[rsp]
  000f0	eb 4d		 jmp	 SHORT $LN1@CreateDire
$LN5@CreateDire:

; 506  :     }
; 507  :     return CreateDirectoryA(dir, NULL) != 0;

  000f2	33 d2		 xor	 edx, edx
  000f4	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR dir$[rsp]
  000fc	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CreateDirectoryA
  00102	85 c0		 test	 eax, eax
  00104	74 0d		 je	 SHORT $LN7@CreateDire
  00106	c7 84 24 9c 00
	00 00 01 00 00
	00		 mov	 DWORD PTR tv90[rsp], 1
  00111	eb 0b		 jmp	 SHORT $LN8@CreateDire
$LN7@CreateDire:
  00113	c7 84 24 9c 00
	00 00 00 00 00
	00		 mov	 DWORD PTR tv90[rsp], 0
$LN8@CreateDire:
  0011e	0f b6 84 24 9c
	00 00 00	 movzx	 eax, BYTE PTR tv90[rsp]
  00126	88 84 24 9a 00
	00 00		 mov	 BYTE PTR $T7[rsp], al
  0012d	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  00132	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
  00137	0f b6 84 24 9a
	00 00 00	 movzx	 eax, BYTE PTR $T7[rsp]
$LN1@CreateDire:

; 508  : }

  0013f	48 8b f8	 mov	 rdi, rax
  00142	48 8b cc	 mov	 rcx, rsp
  00145	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?CreateDirectoryRecursive@@YA_NPEBD@Z$rtcFrameData
  0014c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00151	48 8b c7	 mov	 rax, rdi
  00154	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0015c	48 33 cc	 xor	 rcx, rsp
  0015f	e8 00 00 00 00	 call	 __security_check_cookie
  00164	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  0016b	5f		 pop	 rdi
  0016c	c3		 ret	 0
?CreateDirectoryRecursive@@YA_NPEBD@Z ENDP		; CreateDirectoryRecursive
_TEXT	ENDS
text$x	SEGMENT
ret$ = 40
$T4 = 104
$T5 = 152
$T6 = 153
$T7 = 154
tv90 = 156
__$ArrayPad$ = 160
dir$ = 192
?dtor$0@?0??CreateDirectoryRecursive@@YA_NPEBD@Z@4HA PROC ; `CreateDirectoryRecursive'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 68	 lea	 rcx, QWORD PTR $T4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??CreateDirectoryRecursive@@YA_NPEBD@Z@4HA ENDP ; `CreateDirectoryRecursive'::`1'::dtor$0
ret$ = 40
$T4 = 104
$T5 = 152
$T6 = 153
$T7 = 154
tv90 = 156
__$ArrayPad$ = 160
dir$ = 192
?dtor$1@?0??CreateDirectoryRecursive@@YA_NPEBD@Z@4HA PROC ; `CreateDirectoryRecursive'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 28	 lea	 rcx, QWORD PTR ret$[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??CreateDirectoryRecursive@@YA_NPEBD@Z@4HA ENDP ; `CreateDirectoryRecursive'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
ret$ = 40
$T4 = 104
$T5 = 152
$T6 = 153
$T7 = 154
tv90 = 156
__$ArrayPad$ = 160
dir$ = 192
?dtor$0@?0??CreateDirectoryRecursive@@YA_NPEBD@Z@4HA PROC ; `CreateDirectoryRecursive'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 68	 lea	 rcx, QWORD PTR $T4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??CreateDirectoryRecursive@@YA_NPEBD@Z@4HA ENDP ; `CreateDirectoryRecursive'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
ret$ = 40
$T4 = 104
$T5 = 152
$T6 = 153
$T7 = 154
tv90 = 156
__$ArrayPad$ = 160
dir$ = 192
?dtor$1@?0??CreateDirectoryRecursive@@YA_NPEBD@Z@4HA PROC ; `CreateDirectoryRecursive'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 28	 lea	 rcx, QWORD PTR ret$[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??CreateDirectoryRecursive@@YA_NPEBD@Z@4HA ENDP ; `CreateDirectoryRecursive'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
ptr$ = 32
qtr$ = 40
$T1 = 48
__$ReturnUdt$ = 80
path$ = 88
?PathRemoveExtensionS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@Z PROC ; PathRemoveExtensionS

; 462  : std::string PathRemoveExtensionS(const std::string& path) {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
  00023	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 463  :     const char *ptr = path.c_str();

  0002b	48 8b 4c 24 58	 mov	 rcx, QWORD PTR path$[rsp]
  00030	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00035	48 89 44 24 20	 mov	 QWORD PTR ptr$[rsp], rax

; 464  :     const char *qtr = PathFindExtensionA(ptr);

  0003a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR ptr$[rsp]
  0003f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathFindExtensionA
  00045	48 89 44 24 28	 mov	 QWORD PTR qtr$[rsp], rax

; 465  :     if (qtr == ptr || qtr == nullptr) {

  0004a	48 8b 44 24 20	 mov	 rax, QWORD PTR ptr$[rsp]
  0004f	48 39 44 24 28	 cmp	 QWORD PTR qtr$[rsp], rax
  00054	74 08		 je	 SHORT $LN3@PathRemove
  00056	48 83 7c 24 28
	00		 cmp	 QWORD PTR qtr$[rsp], 0
  0005c	75 22		 jne	 SHORT $LN2@PathRemove
$LN3@PathRemove:

; 466  :         return path;

  0005e	48 8b 54 24 58	 mov	 rdx, QWORD PTR path$[rsp]
  00063	48 8b 4c 24 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00068	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0006d	90		 npad	 1
  0006e	8b 44 24 30	 mov	 eax, DWORD PTR $T1[rsp]
  00072	83 c8 01	 or	 eax, 1
  00075	89 44 24 30	 mov	 DWORD PTR $T1[rsp], eax
  00079	48 8b 44 24 50	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  0007e	eb 36		 jmp	 SHORT $LN1@PathRemove
$LN2@PathRemove:

; 467  :     }
; 468  :     return path.substr(0, qtr - ptr);

  00080	48 8b 44 24 20	 mov	 rax, QWORD PTR ptr$[rsp]
  00085	48 8b 4c 24 28	 mov	 rcx, QWORD PTR qtr$[rsp]
  0008a	48 2b c8	 sub	 rcx, rax
  0008d	48 8b c1	 mov	 rax, rcx
  00090	4c 8b c8	 mov	 r9, rax
  00093	45 33 c0	 xor	 r8d, r8d
  00096	48 8b 54 24 50	 mov	 rdx, QWORD PTR __$ReturnUdt$[rsp]
  0009b	48 8b 4c 24 58	 mov	 rcx, QWORD PTR path$[rsp]
  000a0	e8 00 00 00 00	 call	 ?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
  000a5	90		 npad	 1
  000a6	8b 44 24 30	 mov	 eax, DWORD PTR $T1[rsp]
  000aa	83 c8 01	 or	 eax, 1
  000ad	89 44 24 30	 mov	 DWORD PTR $T1[rsp], eax
  000b1	48 8b 44 24 50	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@PathRemove:

; 469  : }

  000b6	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000ba	5f		 pop	 rdi
  000bb	c3		 ret	 0
  000bc	cc		 int	 3
?PathRemoveExtensionS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@Z ENDP ; PathRemoveExtensionS
_TEXT	ENDS
text$x	SEGMENT
ptr$ = 32
qtr$ = 40
$T1 = 48
__$ReturnUdt$ = 80
path$ = 88
?dtor$0@?0??PathRemoveExtensionS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@Z@4HA PROC ; `PathRemoveExtensionS'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 30	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN6@dtor$0
  0001d	83 65 30 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??PathRemoveExtensionS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@Z@4HA ENDP ; `PathRemoveExtensionS'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
ptr$ = 32
qtr$ = 40
$T1 = 48
__$ReturnUdt$ = 80
path$ = 88
?dtor$0@?0??PathRemoveExtensionS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@Z@4HA PROC ; `PathRemoveExtensionS'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 30	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN6@dtor$0
  0001d	83 65 30 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??PathRemoveExtensionS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@@Z@4HA ENDP ; `PathRemoveExtensionS'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
ptr$ = 32
qtr$ = 40
newPath$ = 56
$T4 = 112
$T5 = 116
$T6 = 120
tv85 = 128
__$ArrayPad$ = 136
__$ReturnUdt$ = 160
path$ = 168
?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; PathRemoveFileSpecFixed

; 442  : std::pair<int, std::string> PathRemoveFileSpecFixed(const std::string& path) {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+160]
  00029	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00030	48 33 c4	 xor	 rax, rsp
  00033	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003b	c7 44 24 78 00
	00 00 00	 mov	 DWORD PTR $T6[rsp], 0

; 443  :     const char *ptr = path.c_str();

  00043	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR path$[rsp]
  0004b	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00050	48 89 44 24 20	 mov	 QWORD PTR ptr$[rsp], rax

; 444  :     const char *qtr = PathFindFileNameA(ptr);

  00055	48 8b 4c 24 20	 mov	 rcx, QWORD PTR ptr$[rsp]
  0005a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathFindFileNameA
  00060	48 89 44 24 28	 mov	 QWORD PTR qtr$[rsp], rax

; 445  :     if (qtr == ptr) {

  00065	48 8b 44 24 20	 mov	 rax, QWORD PTR ptr$[rsp]
  0006a	48 39 44 24 28	 cmp	 QWORD PTR qtr$[rsp], rax
  0006f	75 3b		 jne	 SHORT $LN2@PathRemove

; 446  :         return std::make_pair(0, path);

  00071	c7 44 24 70 00
	00 00 00	 mov	 DWORD PTR $T4[rsp], 0
  00079	4c 8b 84 24 a8
	00 00 00	 mov	 r8, QWORD PTR path$[rsp]
  00081	48 8d 54 24 70	 lea	 rdx, QWORD PTR $T4[rsp]
  00086	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0008e	e8 00 00 00 00	 call	 ??$make_pair@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::make_pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
  00093	90		 npad	 1
  00094	8b 44 24 78	 mov	 eax, DWORD PTR $T6[rsp]
  00098	83 c8 01	 or	 eax, 1
  0009b	89 44 24 78	 mov	 DWORD PTR $T6[rsp], eax
  0009f	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  000a7	e9 91 00 00 00	 jmp	 $LN1@PathRemove
$LN2@PathRemove:

; 447  :     }
; 448  :     std::string newPath = path.substr(0, qtr - ptr - 1);

  000ac	48 8b 44 24 20	 mov	 rax, QWORD PTR ptr$[rsp]
  000b1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR qtr$[rsp]
  000b6	48 2b c8	 sub	 rcx, rax
  000b9	48 8b c1	 mov	 rax, rcx
  000bc	48 ff c8	 dec	 rax
  000bf	4c 8b c8	 mov	 r9, rax
  000c2	45 33 c0	 xor	 r8d, r8d
  000c5	48 8d 54 24 38	 lea	 rdx, QWORD PTR newPath$[rsp]
  000ca	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR path$[rsp]
  000d2	e8 00 00 00 00	 call	 ?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
  000d7	90		 npad	 1

; 449  :     return std::make_pair((int)(path.length() - newPath.length()), newPath);

  000d8	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR path$[rsp]
  000e0	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
  000e5	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR tv85[rsp], rax
  000ed	48 8d 4c 24 38	 lea	 rcx, QWORD PTR newPath$[rsp]
  000f2	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
  000f7	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR tv85[rsp]
  000ff	48 2b c8	 sub	 rcx, rax
  00102	48 8b c1	 mov	 rax, rcx
  00105	89 44 24 74	 mov	 DWORD PTR $T5[rsp], eax
  00109	4c 8d 44 24 38	 lea	 r8, QWORD PTR newPath$[rsp]
  0010e	48 8d 54 24 74	 lea	 rdx, QWORD PTR $T5[rsp]
  00113	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0011b	e8 00 00 00 00	 call	 ??$make_pair@HAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAHAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::make_pair<int,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  00120	8b 44 24 78	 mov	 eax, DWORD PTR $T6[rsp]
  00124	83 c8 01	 or	 eax, 1
  00127	89 44 24 78	 mov	 DWORD PTR $T6[rsp], eax
  0012b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR newPath$[rsp]
  00130	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00135	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@PathRemove:

; 450  : }

  0013d	48 8b f8	 mov	 rdi, rax
  00140	48 8b cc	 mov	 rcx, rsp
  00143	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$rtcFrameData
  0014a	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0014f	48 8b c7	 mov	 rax, rdi
  00152	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0015a	48 33 cc	 xor	 rcx, rsp
  0015d	e8 00 00 00 00	 call	 __security_check_cookie
  00162	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  00169	5f		 pop	 rdi
  0016a	c3		 ret	 0
  0016b	cc		 int	 3
?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; PathRemoveFileSpecFixed
_TEXT	ENDS
text$x	SEGMENT
ptr$ = 32
qtr$ = 40
newPath$ = 56
$T4 = 112
$T5 = 116
$T6 = 120
tv85 = 128
__$ArrayPad$ = 136
__$ReturnUdt$ = 160
path$ = 168
?dtor$0@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA PROC ; `PathRemoveFileSpecFixed'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 78	 mov	 eax, DWORD PTR $T6[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$0
  0001d	83 65 78 fe	 and	 DWORD PTR $T6[rbp], -2
  00021	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
$LN5@dtor$0:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$0@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA ENDP ; `PathRemoveFileSpecFixed'::`1'::dtor$0
ptr$ = 32
qtr$ = 40
newPath$ = 56
$T4 = 112
$T5 = 116
$T6 = 120
tv85 = 128
__$ArrayPad$ = 136
__$ReturnUdt$ = 160
path$ = 168
?dtor$1@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA PROC ; `PathRemoveFileSpecFixed'::`1'::dtor$1
  00034	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00039	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0003e	55		 push	 rbp
  0003f	57		 push	 rdi
  00040	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00044	48 8b ea	 mov	 rbp, rdx
  00047	48 8d 4d 38	 lea	 rcx, QWORD PTR newPath$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA ENDP ; `PathRemoveFileSpecFixed'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
ptr$ = 32
qtr$ = 40
newPath$ = 56
$T4 = 112
$T5 = 116
$T6 = 120
tv85 = 128
__$ArrayPad$ = 136
__$ReturnUdt$ = 160
path$ = 168
?dtor$0@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA PROC ; `PathRemoveFileSpecFixed'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 78	 mov	 eax, DWORD PTR $T6[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$0
  0001d	83 65 78 fe	 and	 DWORD PTR $T6[rbp], -2
  00021	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
$LN5@dtor$0:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$0@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA ENDP ; `PathRemoveFileSpecFixed'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
ptr$ = 32
qtr$ = 40
newPath$ = 56
$T4 = 112
$T5 = 116
$T6 = 120
tv85 = 128
__$ArrayPad$ = 136
__$ReturnUdt$ = 160
path$ = 168
?dtor$1@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA PROC ; `PathRemoveFileSpecFixed'::`1'::dtor$1
  00034	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00039	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0003e	55		 push	 rbp
  0003f	57		 push	 rdi
  00040	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00044	48 8b ea	 mov	 rbp, rdx
  00047	48 8d 4d 38	 lea	 rcx, QWORD PTR newPath$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA ENDP ; `PathRemoveFileSpecFixed'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
fd$ = 40
ret$ = 84
tv73 = 96
tv80 = 104
__$ArrayPad$ = 112
filepath$ = 144
filesize$ = 152
?rgy_get_filesize@@YA_NPEBDPEA_K@Z PROC			; rgy_get_filesize

; 544  : bool rgy_get_filesize(const char *filepath, uint64_t *filesize) {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  00029	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00030	48 33 c4	 xor	 rax, rsp
  00033	48 89 44 24 70	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 545  : #if defined(_WIN32) || defined(_WIN64)
; 546  :     WIN32_FILE_ATTRIBUTE_DATA fd = { 0 };

  00038	48 8d 44 24 28	 lea	 rax, QWORD PTR fd$[rsp]
  0003d	48 8b f8	 mov	 rdi, rax
  00040	33 c0		 xor	 eax, eax
  00042	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00047	f3 aa		 rep stosb

; 547  :     bool ret = (GetFileAttributesExA(filepath, GetFileExInfoStandard, &fd)) ? true : false;

  00049	4c 8d 44 24 28	 lea	 r8, QWORD PTR fd$[rsp]
  0004e	33 d2		 xor	 edx, edx
  00050	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR filepath$[rsp]
  00058	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetFileAttributesExA
  0005e	85 c0		 test	 eax, eax
  00060	74 07		 je	 SHORT $LN3@rgy_get_fi
  00062	c6 44 24 60 01	 mov	 BYTE PTR tv73[rsp], 1
  00067	eb 05		 jmp	 SHORT $LN4@rgy_get_fi
$LN3@rgy_get_fi:
  00069	c6 44 24 60 00	 mov	 BYTE PTR tv73[rsp], 0
$LN4@rgy_get_fi:
  0006e	0f b6 44 24 60	 movzx	 eax, BYTE PTR tv73[rsp]
  00073	88 44 24 54	 mov	 BYTE PTR ret$[rsp], al

; 548  :     *filesize = (ret) ? (((UINT64)fd.nFileSizeHigh) << 32) + (UINT64)fd.nFileSizeLow : NULL;

  00077	0f b6 44 24 54	 movzx	 eax, BYTE PTR ret$[rsp]
  0007c	85 c0		 test	 eax, eax
  0007e	74 16		 je	 SHORT $LN5@rgy_get_fi
  00080	8b 44 24 44	 mov	 eax, DWORD PTR fd$[rsp+28]
  00084	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00088	8b 4c 24 48	 mov	 ecx, DWORD PTR fd$[rsp+32]
  0008c	48 03 c1	 add	 rax, rcx
  0008f	48 89 44 24 68	 mov	 QWORD PTR tv80[rsp], rax
  00094	eb 09		 jmp	 SHORT $LN6@rgy_get_fi
$LN5@rgy_get_fi:
  00096	48 c7 44 24 68
	00 00 00 00	 mov	 QWORD PTR tv80[rsp], 0
$LN6@rgy_get_fi:
  0009f	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR filesize$[rsp]
  000a7	48 8b 4c 24 68	 mov	 rcx, QWORD PTR tv80[rsp]
  000ac	48 89 08	 mov	 QWORD PTR [rax], rcx

; 549  :     return ret;

  000af	0f b6 44 24 54	 movzx	 eax, BYTE PTR ret$[rsp]

; 550  : #else //#if defined(_WIN32) || defined(_WIN64)
; 551  :     struct stat stat;
; 552  :     FILE *fp = fopen(filepath, "rb");
; 553  :     if (fp == NULL || fstat(fileno(fp), &stat)) {
; 554  :         *filesize = 0;
; 555  :         return 1;
; 556  :     }
; 557  :     if (fp) {
; 558  :         fclose(fp);
; 559  :     }
; 560  :     *filesize = stat.st_size;
; 561  :     return 0;
; 562  : #endif //#if defined(_WIN32) || defined(_WIN64)
; 563  : }

  000b4	8b f8		 mov	 edi, eax
  000b6	48 8b cc	 mov	 rcx, rsp
  000b9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?rgy_get_filesize@@YA_NPEBDPEA_K@Z$rtcFrameData
  000c0	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000c5	8b c7		 mov	 eax, edi
  000c7	48 8b 4c 24 70	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000cc	48 33 cc	 xor	 rcx, rsp
  000cf	e8 00 00 00 00	 call	 __security_check_cookie
  000d4	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  000db	5f		 pop	 rdi
  000dc	c3		 ret	 0
?rgy_get_filesize@@YA_NPEBDPEA_K@Z ENDP			; rgy_get_filesize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
buffer$ = 40
$T4 = 84
$T5 = 85
$T6 = 88
tv74 = 96
tv86 = 104
__$ReturnUdt$ = 128
path$ = 136
?GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z PROC ; GetFullPath

; 396  : std::string GetFullPath(const char *path) {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 1c 00 00 00	 mov	 ecx, 28
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]
  00026	c7 44 24 58 00
	00 00 00	 mov	 DWORD PTR $T6[rsp], 0

; 397  : #if defined(_WIN32) || defined(_WIN64)
; 398  :     if (PathIsRelativeA(path) == FALSE)

  0002e	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR path$[rsp]
  00036	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathIsRelativeA
  0003c	85 c0		 test	 eax, eax
  0003e	75 2e		 jne	 SHORT $LN2@GetFullPat

; 399  :         return std::string(path);

  00040	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR path$[rsp]
  00048	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00050	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00055	90		 npad	 1
  00056	8b 44 24 58	 mov	 eax, DWORD PTR $T6[rsp]
  0005a	83 c8 01	 or	 eax, 1
  0005d	89 44 24 58	 mov	 DWORD PTR $T6[rsp], eax
  00061	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  00069	e9 ab 00 00 00	 jmp	 $LN1@GetFullPat
$LN2@GetFullPat:

; 400  : #endif //#if defined(_WIN32) || defined(_WIN64)
; 401  :     std::vector<char> buffer(strlen(path) + 1024, 0);

  0006e	c6 44 24 55 00	 mov	 BYTE PTR $T5[rsp], 0
  00073	48 8d 4c 24 54	 lea	 rcx, QWORD PTR $T4[rsp]
  00078	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@XZ ; std::allocator<char>::allocator<char>
  0007d	48 89 44 24 60	 mov	 QWORD PTR tv74[rsp], rax
  00082	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR path$[rsp]
  0008a	e8 00 00 00 00	 call	 strlen
  0008f	48 05 00 04 00
	00		 add	 rax, 1024		; 00000400H
  00095	48 8b 4c 24 60	 mov	 rcx, QWORD PTR tv74[rsp]
  0009a	4c 8b c9	 mov	 r9, rcx
  0009d	4c 8d 44 24 55	 lea	 r8, QWORD PTR $T5[rsp]
  000a2	48 8b d0	 mov	 rdx, rax
  000a5	48 8d 4c 24 28	 lea	 rcx, QWORD PTR buffer$[rsp]
  000aa	e8 00 00 00 00	 call	 ??0?$vector@DV?$allocator@D@std@@@std@@QEAA@_KAEBDAEBV?$allocator@D@1@@Z ; std::vector<char,std::allocator<char> >::vector<char,std::allocator<char> >
  000af	90		 npad	 1

; 402  :     _fullpath(buffer.data(), path, buffer.size());

  000b0	48 8d 4c 24 28	 lea	 rcx, QWORD PTR buffer$[rsp]
  000b5	e8 00 00 00 00	 call	 ?size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ ; std::vector<char,std::allocator<char> >::size
  000ba	48 89 44 24 68	 mov	 QWORD PTR tv86[rsp], rax
  000bf	48 8d 4c 24 28	 lea	 rcx, QWORD PTR buffer$[rsp]
  000c4	e8 00 00 00 00	 call	 ?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ ; std::vector<char,std::allocator<char> >::data
  000c9	48 8b 4c 24 68	 mov	 rcx, QWORD PTR tv86[rsp]
  000ce	4c 8b c1	 mov	 r8, rcx
  000d1	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR path$[rsp]
  000d9	48 8b c8	 mov	 rcx, rax
  000dc	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__fullpath

; 403  :     return std::string(buffer.data());

  000e2	48 8d 4c 24 28	 lea	 rcx, QWORD PTR buffer$[rsp]
  000e7	e8 00 00 00 00	 call	 ?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ ; std::vector<char,std::allocator<char> >::data
  000ec	48 8b d0	 mov	 rdx, rax
  000ef	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000f7	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000fc	8b 44 24 58	 mov	 eax, DWORD PTR $T6[rsp]
  00100	83 c8 01	 or	 eax, 1
  00103	89 44 24 58	 mov	 DWORD PTR $T6[rsp], eax
  00107	48 8d 4c 24 28	 lea	 rcx, QWORD PTR buffer$[rsp]
  0010c	e8 00 00 00 00	 call	 ??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ ; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
  00111	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@GetFullPat:

; 404  : }

  00119	48 8b f8	 mov	 rdi, rax
  0011c	48 8b cc	 mov	 rcx, rsp
  0011f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z$rtcFrameData
  00126	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0012b	48 8b c7	 mov	 rax, rdi
  0012e	48 83 c4 70	 add	 rsp, 112		; 00000070H
  00132	5f		 pop	 rdi
  00133	c3		 ret	 0
  00134	cc		 int	 3
?GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ENDP ; GetFullPath
_TEXT	ENDS
text$x	SEGMENT
buffer$ = 40
$T4 = 84
$T5 = 85
$T6 = 88
tv74 = 96
tv86 = 104
__$ReturnUdt$ = 128
path$ = 136
?dtor$0@?0??GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `GetFullPath'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 58	 mov	 eax, DWORD PTR $T6[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$0
  0001d	83 65 58 fe	 and	 DWORD PTR $T6[rbp], -2
  00021	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$0:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$0@?0??GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `GetFullPath'::`1'::dtor$0
buffer$ = 40
$T4 = 84
$T5 = 85
$T6 = 88
tv74 = 96
tv86 = 104
__$ReturnUdt$ = 128
path$ = 136
?dtor$1@?0??GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `GetFullPath'::`1'::dtor$1
  00034	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00039	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0003e	55		 push	 rbp
  0003f	57		 push	 rdi
  00040	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00044	48 8b ea	 mov	 rbp, rdx
  00047	48 8d 4d 28	 lea	 rcx, QWORD PTR buffer$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ ; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `GetFullPath'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
buffer$ = 40
$T4 = 84
$T5 = 85
$T6 = 88
tv74 = 96
tv86 = 104
__$ReturnUdt$ = 128
path$ = 136
?dtor$0@?0??GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `GetFullPath'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 58	 mov	 eax, DWORD PTR $T6[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$0
  0001d	83 65 58 fe	 and	 DWORD PTR $T6[rbp], -2
  00021	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$0:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$0@?0??GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `GetFullPath'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
buffer$ = 40
$T4 = 84
$T5 = 85
$T6 = 88
tv74 = 96
tv86 = 104
__$ReturnUdt$ = 128
path$ = 136
?dtor$1@?0??GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `GetFullPath'::`1'::dtor$1
  00034	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00039	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0003e	55		 push	 rbp
  0003f	57		 push	 rdi
  00040	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00044	48 8b ea	 mov	 rbp, rdx
  00047	48 8d 4d 28	 lea	 rcx, QWORD PTR buffer$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ ; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `GetFullPath'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
pos$ = 32
$T1 = 40
__$ReturnUdt$ = 64
str$ = 72
from$ = 80
to$ = 88
?str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z PROC ; str_replace

; 270  : std::string str_replace(std::string str, const std::string& from, const std::string& to) {

$LN8:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0002d	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 271  :     std::string::size_type pos = 0;

  00035	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR pos$[rsp], 0
$LN2@str_replac:

; 272  :     while(pos = str.find(from, pos), pos != std::string::npos) {

  0003e	4c 8b 44 24 20	 mov	 r8, QWORD PTR pos$[rsp]
  00043	48 8b 54 24 50	 mov	 rdx, QWORD PTR from$[rsp]
  00048	48 8b 4c 24 48	 mov	 rcx, QWORD PTR str$[rsp]
  0004d	e8 00 00 00 00	 call	 ?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KAEBV12@_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
  00052	48 89 44 24 20	 mov	 QWORD PTR pos$[rsp], rax
  00057	48 83 7c 24 20
	ff		 cmp	 QWORD PTR pos$[rsp], -1
  0005d	74 3d		 je	 SHORT $LN3@str_replac

; 273  :         str.replace(pos, from.length(), to);

  0005f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR from$[rsp]
  00064	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
  00069	4c 8b 4c 24 58	 mov	 r9, QWORD PTR to$[rsp]
  0006e	4c 8b c0	 mov	 r8, rax
  00071	48 8b 54 24 20	 mov	 rdx, QWORD PTR pos$[rsp]
  00076	48 8b 4c 24 48	 mov	 rcx, QWORD PTR str$[rsp]
  0007b	e8 00 00 00 00	 call	 ?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace

; 274  :         pos += to.length();

  00080	48 8b 4c 24 58	 mov	 rcx, QWORD PTR to$[rsp]
  00085	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
  0008a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pos$[rsp]
  0008f	48 03 c8	 add	 rcx, rax
  00092	48 8b c1	 mov	 rax, rcx
  00095	48 89 44 24 20	 mov	 QWORD PTR pos$[rsp], rax

; 275  :     }

  0009a	eb a2		 jmp	 SHORT $LN2@str_replac
$LN3@str_replac:

; 276  :     return std::move(str);

  0009c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR str$[rsp]
  000a1	e8 00 00 00 00	 call	 ??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  000a6	48 8b d0	 mov	 rdx, rax
  000a9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000ae	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000b3	8b 44 24 28	 mov	 eax, DWORD PTR $T1[rsp]
  000b7	83 c8 01	 or	 eax, 1
  000ba	89 44 24 28	 mov	 DWORD PTR $T1[rsp], eax
  000be	48 8b 4c 24 48	 mov	 rcx, QWORD PTR str$[rsp]
  000c3	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000c8	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 277  : }

  000cd	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000d1	5f		 pop	 rdi
  000d2	c3		 ret	 0
  000d3	cc		 int	 3
?str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z ENDP ; str_replace
_TEXT	ENDS
text$x	SEGMENT
pos$ = 32
$T1 = 40
__$ReturnUdt$ = 64
str$ = 72
from$ = 80
to$ = 88
?dtor$0@?0??str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z@4HA PROC ; `str_replace'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 48	 mov	 rcx, QWORD PTR str$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z@4HA ENDP ; `str_replace'::`1'::dtor$0
pos$ = 32
$T1 = 40
__$ReturnUdt$ = 64
str$ = 72
from$ = 80
to$ = 88
?dtor$1@?0??str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z@4HA PROC ; `str_replace'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00039	83 e0 01	 and	 eax, 1
  0003c	85 c0		 test	 eax, eax
  0003e	74 0d		 je	 SHORT $LN7@dtor$1
  00040	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00044	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00048	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN7@dtor$1:
  0004d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00051	5f		 pop	 rdi
  00052	5d		 pop	 rbp
  00053	c3		 ret	 0
?dtor$1@?0??str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z@4HA ENDP ; `str_replace'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pos$ = 32
$T1 = 40
__$ReturnUdt$ = 64
str$ = 72
from$ = 80
to$ = 88
?dtor$0@?0??str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z@4HA PROC ; `str_replace'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 48	 mov	 rcx, QWORD PTR str$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z@4HA ENDP ; `str_replace'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pos$ = 32
$T1 = 40
__$ReturnUdt$ = 64
str$ = 72
from$ = 80
to$ = 88
?dtor$1@?0??str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z@4HA PROC ; `str_replace'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00039	83 e0 01	 and	 eax, 1
  0003c	85 c0		 test	 eax, eax
  0003e	74 0d		 je	 SHORT $LN7@dtor$1
  00040	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00044	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00048	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN7@dtor$1:
  0004d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00051	5f		 pop	 rdi
  00052	5d		 pop	 rbp
  00053	c3		 ret	 0
?dtor$1@?0??str_replace@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@AEBV12@1@Z@4HA ENDP ; `str_replace'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
result$ = 40
left$ = 88
right$4 = 96
$T5 = 104
$T6 = 152
tv65 = 160
tv94 = 168
__$ArrayPad$ = 176
__$ReturnUdt$ = 208
string$ = 216
trim$ = 224
?trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z PROC ; trim

; 385  : std::wstring trim(const std::wstring& string, const WCHAR* trim) {

$LN8:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec c0 00
	00 00		 sub	 rsp, 192		; 000000c0H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+208]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00040	c7 84 24 98 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T6[rsp], 0

; 386  :     auto result = string;

  0004b	48 8b 94 24 d8
	00 00 00	 mov	 rdx, QWORD PTR string$[rsp]
  00053	48 8d 4c 24 28	 lea	 rcx, QWORD PTR result$[rsp]
  00058	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0005d	90		 npad	 1

; 387  :     auto left = string.find_first_not_of(trim);

  0005e	45 33 c0	 xor	 r8d, r8d
  00061	48 8b 94 24 e0
	00 00 00	 mov	 rdx, QWORD PTR trim$[rsp]
  00069	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR string$[rsp]
  00071	e8 00 00 00 00	 call	 ?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KQEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_not_of
  00076	48 89 44 24 58	 mov	 QWORD PTR left$[rsp], rax

; 388  :     if (left != std::string::npos) {

  0007b	48 83 7c 24 58
	ff		 cmp	 QWORD PTR left$[rsp], -1
  00081	0f 84 83 00 00
	00		 je	 $LN2@trim

; 389  :         auto right = string.find_last_not_of(trim);

  00087	49 c7 c0 ff ff
	ff ff		 mov	 r8, -1
  0008e	48 8b 94 24 e0
	00 00 00	 mov	 rdx, QWORD PTR trim$[rsp]
  00096	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR string$[rsp]
  0009e	e8 00 00 00 00	 call	 ?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KQEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_last_not_of
  000a3	48 89 44 24 60	 mov	 QWORD PTR right$4[rsp], rax

; 390  :         result = string.substr(left, right - left + 1);

  000a8	48 8b 44 24 58	 mov	 rax, QWORD PTR left$[rsp]
  000ad	48 8b 4c 24 60	 mov	 rcx, QWORD PTR right$4[rsp]
  000b2	48 2b c8	 sub	 rcx, rax
  000b5	48 8b c1	 mov	 rax, rcx
  000b8	48 ff c0	 inc	 rax
  000bb	4c 8b c8	 mov	 r9, rax
  000be	4c 8b 44 24 58	 mov	 r8, QWORD PTR left$[rsp]
  000c3	48 8d 54 24 68	 lea	 rdx, QWORD PTR $T5[rsp]
  000c8	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR string$[rsp]
  000d0	e8 00 00 00 00	 call	 ?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr
  000d5	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR tv65[rsp], rax
  000dd	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR tv65[rsp]
  000e5	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR tv94[rsp], rax
  000ed	48 8b 94 24 a8
	00 00 00	 mov	 rdx, QWORD PTR tv94[rsp]
  000f5	48 8d 4c 24 28	 lea	 rcx, QWORD PTR result$[rsp]
  000fa	e8 00 00 00 00	 call	 ??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
  000ff	90		 npad	 1
  00100	48 8d 4c 24 68	 lea	 rcx, QWORD PTR $T5[rsp]
  00105	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN2@trim:

; 391  :     }
; 392  :     return result;

  0010a	48 8d 54 24 28	 lea	 rdx, QWORD PTR result$[rsp]
  0010f	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00117	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0011c	8b 84 24 98 00
	00 00		 mov	 eax, DWORD PTR $T6[rsp]
  00123	83 c8 01	 or	 eax, 1
  00126	89 84 24 98 00
	00 00		 mov	 DWORD PTR $T6[rsp], eax
  0012d	48 8d 4c 24 28	 lea	 rcx, QWORD PTR result$[rsp]
  00132	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00137	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 393  : }

  0013f	48 8b f8	 mov	 rdi, rax
  00142	48 8b cc	 mov	 rcx, rsp
  00145	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z$rtcFrameData
  0014c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00151	48 8b c7	 mov	 rax, rdi
  00154	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0015c	48 33 cc	 xor	 rcx, rsp
  0015f	e8 00 00 00 00	 call	 __security_check_cookie
  00164	48 81 c4 c0 00
	00 00		 add	 rsp, 192		; 000000c0H
  0016b	5f		 pop	 rdi
  0016c	c3		 ret	 0
  0016d	cc		 int	 3
?trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z ENDP ; trim
_TEXT	ENDS
text$x	SEGMENT
result$ = 40
left$ = 88
right$4 = 96
$T5 = 104
$T6 = 152
tv65 = 160
tv94 = 168
__$ArrayPad$ = 176
__$ReturnUdt$ = 208
string$ = 216
trim$ = 224
?dtor$0@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA PROC ; `trim'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR result$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA ENDP ; `trim'::`1'::dtor$0
result$ = 40
left$ = 88
right$4 = 96
$T5 = 104
$T6 = 152
tv65 = 160
tv94 = 168
__$ArrayPad$ = 176
__$ReturnUdt$ = 208
string$ = 216
trim$ = 224
?dtor$1@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA PROC ; `trim'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 68	 lea	 rcx, QWORD PTR $T5[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA ENDP ; `trim'::`1'::dtor$1
result$ = 40
left$ = 88
right$4 = 96
$T5 = 104
$T6 = 152
tv65 = 160
tv94 = 168
__$ArrayPad$ = 176
__$ReturnUdt$ = 208
string$ = 216
trim$ = 224
?dtor$2@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA PROC ; `trim'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	8b 85 98 00 00
	00		 mov	 eax, DWORD PTR $T6[rbp]
  0005f	83 e0 01	 and	 eax, 1
  00062	85 c0		 test	 eax, eax
  00064	74 13		 je	 SHORT $LN7@dtor$2
  00066	83 a5 98 00 00
	00 fe		 and	 DWORD PTR $T6[rbp], -2
  0006d	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00074	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN7@dtor$2:
  00079	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0007d	5f		 pop	 rdi
  0007e	5d		 pop	 rbp
  0007f	c3		 ret	 0
?dtor$2@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA ENDP ; `trim'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
result$ = 40
left$ = 88
right$4 = 96
$T5 = 104
$T6 = 152
tv65 = 160
tv94 = 168
__$ArrayPad$ = 176
__$ReturnUdt$ = 208
string$ = 216
trim$ = 224
?dtor$0@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA PROC ; `trim'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR result$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA ENDP ; `trim'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
result$ = 40
left$ = 88
right$4 = 96
$T5 = 104
$T6 = 152
tv65 = 160
tv94 = 168
__$ArrayPad$ = 176
__$ReturnUdt$ = 208
string$ = 216
trim$ = 224
?dtor$1@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA PROC ; `trim'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 68	 lea	 rcx, QWORD PTR $T5[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA ENDP ; `trim'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
result$ = 40
left$ = 88
right$4 = 96
$T5 = 104
$T6 = 152
tv65 = 160
tv94 = 168
__$ArrayPad$ = 176
__$ReturnUdt$ = 208
string$ = 216
trim$ = 224
?dtor$2@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA PROC ; `trim'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	8b 85 98 00 00
	00		 mov	 eax, DWORD PTR $T6[rbp]
  0005f	83 e0 01	 and	 eax, 1
  00062	85 c0		 test	 eax, eax
  00064	74 13		 je	 SHORT $LN7@dtor$2
  00066	83 a5 98 00 00
	00 fe		 and	 DWORD PTR $T6[rbp], -2
  0006d	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00074	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN7@dtor$2:
  00079	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0007d	5f		 pop	 rdi
  0007e	5d		 pop	 rbp
  0007f	c3		 ret	 0
?dtor$2@?0??trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA ENDP ; `trim'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
result$ = 40
right$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z PROC ; rstrip

; 376  : std::wstring rstrip(const std::wstring& string, const WCHAR* trim) {

$LN8:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+192]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00040	c7 84 24 90 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T5[rsp], 0

; 377  :     auto result = string;

  0004b	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR string$[rsp]
  00053	48 8d 4c 24 28	 lea	 rcx, QWORD PTR result$[rsp]
  00058	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0005d	90		 npad	 1

; 378  :     auto right = string.find_last_not_of(trim);

  0005e	49 c7 c0 ff ff
	ff ff		 mov	 r8, -1
  00065	48 8b 94 24 d0
	00 00 00	 mov	 rdx, QWORD PTR trim$[rsp]
  0006d	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR string$[rsp]
  00075	e8 00 00 00 00	 call	 ?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KQEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_last_not_of
  0007a	48 89 44 24 58	 mov	 QWORD PTR right$[rsp], rax

; 379  :     if (right != std::string::npos) {

  0007f	48 83 7c 24 58
	ff		 cmp	 QWORD PTR right$[rsp], -1
  00085	74 4f		 je	 SHORT $LN2@rstrip

; 380  :         result = string.substr(0, right);

  00087	4c 8b 4c 24 58	 mov	 r9, QWORD PTR right$[rsp]
  0008c	45 33 c0	 xor	 r8d, r8d
  0008f	48 8d 54 24 60	 lea	 rdx, QWORD PTR $T4[rsp]
  00094	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR string$[rsp]
  0009c	e8 00 00 00 00	 call	 ?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr
  000a1	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR tv65[rsp], rax
  000a9	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR tv65[rsp]
  000b1	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR tv88[rsp], rax
  000b9	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR tv88[rsp]
  000c1	48 8d 4c 24 28	 lea	 rcx, QWORD PTR result$[rsp]
  000c6	e8 00 00 00 00	 call	 ??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
  000cb	90		 npad	 1
  000cc	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T4[rsp]
  000d1	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN2@rstrip:

; 381  :     }
; 382  :     return result;

  000d6	48 8d 54 24 28	 lea	 rdx, QWORD PTR result$[rsp]
  000db	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000e3	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  000e8	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR $T5[rsp]
  000ef	83 c8 01	 or	 eax, 1
  000f2	89 84 24 90 00
	00 00		 mov	 DWORD PTR $T5[rsp], eax
  000f9	48 8d 4c 24 28	 lea	 rcx, QWORD PTR result$[rsp]
  000fe	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00103	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 383  : }

  0010b	48 8b f8	 mov	 rdi, rax
  0010e	48 8b cc	 mov	 rcx, rsp
  00111	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z$rtcFrameData
  00118	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0011d	48 8b c7	 mov	 rax, rdi
  00120	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00128	48 33 cc	 xor	 rcx, rsp
  0012b	e8 00 00 00 00	 call	 __security_check_cookie
  00130	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  00137	5f		 pop	 rdi
  00138	c3		 ret	 0
  00139	cc		 int	 3
?rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z ENDP ; rstrip
_TEXT	ENDS
text$x	SEGMENT
result$ = 40
right$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?dtor$0@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA PROC ; `rstrip'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR result$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA ENDP ; `rstrip'::`1'::dtor$0
result$ = 40
right$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?dtor$1@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA PROC ; `rstrip'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 60	 lea	 rcx, QWORD PTR $T4[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA ENDP ; `rstrip'::`1'::dtor$1
result$ = 40
right$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?dtor$2@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA PROC ; `rstrip'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	8b 85 90 00 00
	00		 mov	 eax, DWORD PTR $T5[rbp]
  0005f	83 e0 01	 and	 eax, 1
  00062	85 c0		 test	 eax, eax
  00064	74 13		 je	 SHORT $LN7@dtor$2
  00066	83 a5 90 00 00
	00 fe		 and	 DWORD PTR $T5[rbp], -2
  0006d	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00074	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN7@dtor$2:
  00079	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0007d	5f		 pop	 rdi
  0007e	5d		 pop	 rbp
  0007f	c3		 ret	 0
?dtor$2@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA ENDP ; `rstrip'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
result$ = 40
right$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?dtor$0@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA PROC ; `rstrip'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR result$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA ENDP ; `rstrip'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
result$ = 40
right$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?dtor$1@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA PROC ; `rstrip'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 60	 lea	 rcx, QWORD PTR $T4[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA ENDP ; `rstrip'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
result$ = 40
right$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?dtor$2@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA PROC ; `rstrip'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	8b 85 90 00 00
	00		 mov	 eax, DWORD PTR $T5[rbp]
  0005f	83 e0 01	 and	 eax, 1
  00062	85 c0		 test	 eax, eax
  00064	74 13		 je	 SHORT $LN7@dtor$2
  00066	83 a5 90 00 00
	00 fe		 and	 DWORD PTR $T5[rbp], -2
  0006d	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00074	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN7@dtor$2:
  00079	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0007d	5f		 pop	 rdi
  0007e	5d		 pop	 rbp
  0007f	c3		 ret	 0
?dtor$2@?0??rstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA ENDP ; `rstrip'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
result$ = 40
left$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z PROC ; lstrip

; 367  : std::wstring lstrip(const std::wstring& string, const WCHAR* trim) {

$LN8:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+192]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00040	c7 84 24 90 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T5[rsp], 0

; 368  :     auto result = string;

  0004b	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR string$[rsp]
  00053	48 8d 4c 24 28	 lea	 rcx, QWORD PTR result$[rsp]
  00058	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0005d	90		 npad	 1

; 369  :     auto left = string.find_first_not_of(trim);

  0005e	45 33 c0	 xor	 r8d, r8d
  00061	48 8b 94 24 d0
	00 00 00	 mov	 rdx, QWORD PTR trim$[rsp]
  00069	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR string$[rsp]
  00071	e8 00 00 00 00	 call	 ?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KQEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_not_of
  00076	48 89 44 24 58	 mov	 QWORD PTR left$[rsp], rax

; 370  :     if (left != std::string::npos) {

  0007b	48 83 7c 24 58
	ff		 cmp	 QWORD PTR left$[rsp], -1
  00081	74 4f		 je	 SHORT $LN2@lstrip

; 371  :         result = string.substr(left, 0);

  00083	45 33 c9	 xor	 r9d, r9d
  00086	4c 8b 44 24 58	 mov	 r8, QWORD PTR left$[rsp]
  0008b	48 8d 54 24 60	 lea	 rdx, QWORD PTR $T4[rsp]
  00090	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR string$[rsp]
  00098	e8 00 00 00 00	 call	 ?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr
  0009d	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR tv65[rsp], rax
  000a5	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR tv65[rsp]
  000ad	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR tv88[rsp], rax
  000b5	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR tv88[rsp]
  000bd	48 8d 4c 24 28	 lea	 rcx, QWORD PTR result$[rsp]
  000c2	e8 00 00 00 00	 call	 ??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
  000c7	90		 npad	 1
  000c8	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T4[rsp]
  000cd	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN2@lstrip:

; 372  :     }
; 373  :     return result;

  000d2	48 8d 54 24 28	 lea	 rdx, QWORD PTR result$[rsp]
  000d7	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000df	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  000e4	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR $T5[rsp]
  000eb	83 c8 01	 or	 eax, 1
  000ee	89 84 24 90 00
	00 00		 mov	 DWORD PTR $T5[rsp], eax
  000f5	48 8d 4c 24 28	 lea	 rcx, QWORD PTR result$[rsp]
  000fa	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  000ff	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 374  : }

  00107	48 8b f8	 mov	 rdi, rax
  0010a	48 8b cc	 mov	 rcx, rsp
  0010d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z$rtcFrameData
  00114	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00119	48 8b c7	 mov	 rax, rdi
  0011c	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00124	48 33 cc	 xor	 rcx, rsp
  00127	e8 00 00 00 00	 call	 __security_check_cookie
  0012c	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  00133	5f		 pop	 rdi
  00134	c3		 ret	 0
  00135	cc		 int	 3
?lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z ENDP ; lstrip
_TEXT	ENDS
text$x	SEGMENT
result$ = 40
left$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?dtor$0@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA PROC ; `lstrip'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR result$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA ENDP ; `lstrip'::`1'::dtor$0
result$ = 40
left$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?dtor$1@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA PROC ; `lstrip'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 60	 lea	 rcx, QWORD PTR $T4[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA ENDP ; `lstrip'::`1'::dtor$1
result$ = 40
left$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?dtor$2@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA PROC ; `lstrip'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	8b 85 90 00 00
	00		 mov	 eax, DWORD PTR $T5[rbp]
  0005f	83 e0 01	 and	 eax, 1
  00062	85 c0		 test	 eax, eax
  00064	74 13		 je	 SHORT $LN7@dtor$2
  00066	83 a5 90 00 00
	00 fe		 and	 DWORD PTR $T5[rbp], -2
  0006d	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00074	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN7@dtor$2:
  00079	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0007d	5f		 pop	 rdi
  0007e	5d		 pop	 rbp
  0007f	c3		 ret	 0
?dtor$2@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA ENDP ; `lstrip'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
result$ = 40
left$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?dtor$0@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA PROC ; `lstrip'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR result$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA ENDP ; `lstrip'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
result$ = 40
left$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?dtor$1@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA PROC ; `lstrip'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 60	 lea	 rcx, QWORD PTR $T4[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA ENDP ; `lstrip'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
result$ = 40
left$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?dtor$2@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA PROC ; `lstrip'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	8b 85 90 00 00
	00		 mov	 eax, DWORD PTR $T5[rbp]
  0005f	83 e0 01	 and	 eax, 1
  00062	85 c0		 test	 eax, eax
  00064	74 13		 je	 SHORT $LN7@dtor$2
  00066	83 a5 90 00 00
	00 fe		 and	 DWORD PTR $T5[rbp], -2
  0006d	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00074	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN7@dtor$2:
  00079	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0007d	5f		 pop	 rdi
  0007e	5d		 pop	 rbp
  0007f	c3		 ret	 0
?dtor$2@?0??lstrip@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z@4HA ENDP ; `lstrip'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
result$ = 40
left$ = 88
right$4 = 96
$T5 = 104
$T6 = 152
tv65 = 160
tv94 = 168
__$ArrayPad$ = 176
__$ReturnUdt$ = 208
string$ = 216
trim$ = 224
?trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z PROC ; trim

; 357  : std::string trim(const std::string& string, const char* trim) {

$LN8:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec c0 00
	00 00		 sub	 rsp, 192		; 000000c0H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+208]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00040	c7 84 24 98 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T6[rsp], 0

; 358  :     auto result = string;

  0004b	48 8b 94 24 d8
	00 00 00	 mov	 rdx, QWORD PTR string$[rsp]
  00053	48 8d 4c 24 28	 lea	 rcx, QWORD PTR result$[rsp]
  00058	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0005d	90		 npad	 1

; 359  :     auto left = string.find_first_not_of(trim);

  0005e	45 33 c0	 xor	 r8d, r8d
  00061	48 8b 94 24 e0
	00 00 00	 mov	 rdx, QWORD PTR trim$[rsp]
  00069	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR string$[rsp]
  00071	e8 00 00 00 00	 call	 ?find_first_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_first_not_of
  00076	48 89 44 24 58	 mov	 QWORD PTR left$[rsp], rax

; 360  :     if (left != std::string::npos) {

  0007b	48 83 7c 24 58
	ff		 cmp	 QWORD PTR left$[rsp], -1
  00081	0f 84 83 00 00
	00		 je	 $LN2@trim

; 361  :         auto right = string.find_last_not_of(trim);

  00087	49 c7 c0 ff ff
	ff ff		 mov	 r8, -1
  0008e	48 8b 94 24 e0
	00 00 00	 mov	 rdx, QWORD PTR trim$[rsp]
  00096	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR string$[rsp]
  0009e	e8 00 00 00 00	 call	 ?find_last_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_last_not_of
  000a3	48 89 44 24 60	 mov	 QWORD PTR right$4[rsp], rax

; 362  :         result = string.substr(left, right - left + 1);

  000a8	48 8b 44 24 58	 mov	 rax, QWORD PTR left$[rsp]
  000ad	48 8b 4c 24 60	 mov	 rcx, QWORD PTR right$4[rsp]
  000b2	48 2b c8	 sub	 rcx, rax
  000b5	48 8b c1	 mov	 rax, rcx
  000b8	48 ff c0	 inc	 rax
  000bb	4c 8b c8	 mov	 r9, rax
  000be	4c 8b 44 24 58	 mov	 r8, QWORD PTR left$[rsp]
  000c3	48 8d 54 24 68	 lea	 rdx, QWORD PTR $T5[rsp]
  000c8	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR string$[rsp]
  000d0	e8 00 00 00 00	 call	 ?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
  000d5	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR tv65[rsp], rax
  000dd	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR tv65[rsp]
  000e5	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR tv94[rsp], rax
  000ed	48 8b 94 24 a8
	00 00 00	 mov	 rdx, QWORD PTR tv94[rsp]
  000f5	48 8d 4c 24 28	 lea	 rcx, QWORD PTR result$[rsp]
  000fa	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
  000ff	90		 npad	 1
  00100	48 8d 4c 24 68	 lea	 rcx, QWORD PTR $T5[rsp]
  00105	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN2@trim:

; 363  :     }
; 364  :     return result;

  0010a	48 8d 54 24 28	 lea	 rdx, QWORD PTR result$[rsp]
  0010f	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00117	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0011c	8b 84 24 98 00
	00 00		 mov	 eax, DWORD PTR $T6[rsp]
  00123	83 c8 01	 or	 eax, 1
  00126	89 84 24 98 00
	00 00		 mov	 DWORD PTR $T6[rsp], eax
  0012d	48 8d 4c 24 28	 lea	 rcx, QWORD PTR result$[rsp]
  00132	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00137	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 365  : }

  0013f	48 8b f8	 mov	 rdi, rax
  00142	48 8b cc	 mov	 rcx, rsp
  00145	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z$rtcFrameData
  0014c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00151	48 8b c7	 mov	 rax, rdi
  00154	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0015c	48 33 cc	 xor	 rcx, rsp
  0015f	e8 00 00 00 00	 call	 __security_check_cookie
  00164	48 81 c4 c0 00
	00 00		 add	 rsp, 192		; 000000c0H
  0016b	5f		 pop	 rdi
  0016c	c3		 ret	 0
  0016d	cc		 int	 3
?trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z ENDP ; trim
_TEXT	ENDS
text$x	SEGMENT
result$ = 40
left$ = 88
right$4 = 96
$T5 = 104
$T6 = 152
tv65 = 160
tv94 = 168
__$ArrayPad$ = 176
__$ReturnUdt$ = 208
string$ = 216
trim$ = 224
?dtor$0@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA PROC ; `trim'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR result$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA ENDP ; `trim'::`1'::dtor$0
result$ = 40
left$ = 88
right$4 = 96
$T5 = 104
$T6 = 152
tv65 = 160
tv94 = 168
__$ArrayPad$ = 176
__$ReturnUdt$ = 208
string$ = 216
trim$ = 224
?dtor$1@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA PROC ; `trim'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 68	 lea	 rcx, QWORD PTR $T5[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA ENDP ; `trim'::`1'::dtor$1
result$ = 40
left$ = 88
right$4 = 96
$T5 = 104
$T6 = 152
tv65 = 160
tv94 = 168
__$ArrayPad$ = 176
__$ReturnUdt$ = 208
string$ = 216
trim$ = 224
?dtor$2@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA PROC ; `trim'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	8b 85 98 00 00
	00		 mov	 eax, DWORD PTR $T6[rbp]
  0005f	83 e0 01	 and	 eax, 1
  00062	85 c0		 test	 eax, eax
  00064	74 13		 je	 SHORT $LN7@dtor$2
  00066	83 a5 98 00 00
	00 fe		 and	 DWORD PTR $T6[rbp], -2
  0006d	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00074	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN7@dtor$2:
  00079	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0007d	5f		 pop	 rdi
  0007e	5d		 pop	 rbp
  0007f	c3		 ret	 0
?dtor$2@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA ENDP ; `trim'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
result$ = 40
left$ = 88
right$4 = 96
$T5 = 104
$T6 = 152
tv65 = 160
tv94 = 168
__$ArrayPad$ = 176
__$ReturnUdt$ = 208
string$ = 216
trim$ = 224
?dtor$0@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA PROC ; `trim'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR result$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA ENDP ; `trim'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
result$ = 40
left$ = 88
right$4 = 96
$T5 = 104
$T6 = 152
tv65 = 160
tv94 = 168
__$ArrayPad$ = 176
__$ReturnUdt$ = 208
string$ = 216
trim$ = 224
?dtor$1@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA PROC ; `trim'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 68	 lea	 rcx, QWORD PTR $T5[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA ENDP ; `trim'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
result$ = 40
left$ = 88
right$4 = 96
$T5 = 104
$T6 = 152
tv65 = 160
tv94 = 168
__$ArrayPad$ = 176
__$ReturnUdt$ = 208
string$ = 216
trim$ = 224
?dtor$2@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA PROC ; `trim'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	8b 85 98 00 00
	00		 mov	 eax, DWORD PTR $T6[rbp]
  0005f	83 e0 01	 and	 eax, 1
  00062	85 c0		 test	 eax, eax
  00064	74 13		 je	 SHORT $LN7@dtor$2
  00066	83 a5 98 00 00
	00 fe		 and	 DWORD PTR $T6[rbp], -2
  0006d	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00074	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN7@dtor$2:
  00079	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0007d	5f		 pop	 rdi
  0007e	5d		 pop	 rbp
  0007f	c3		 ret	 0
?dtor$2@?0??trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA ENDP ; `trim'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
result$ = 40
right$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z PROC ; rstrip

; 348  : std::string rstrip(const std::string& string, const char* trim) {

$LN8:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+192]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00040	c7 84 24 90 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T5[rsp], 0

; 349  :     auto result = string;

  0004b	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR string$[rsp]
  00053	48 8d 4c 24 28	 lea	 rcx, QWORD PTR result$[rsp]
  00058	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0005d	90		 npad	 1

; 350  :     auto right = string.find_last_not_of(trim);

  0005e	49 c7 c0 ff ff
	ff ff		 mov	 r8, -1
  00065	48 8b 94 24 d0
	00 00 00	 mov	 rdx, QWORD PTR trim$[rsp]
  0006d	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR string$[rsp]
  00075	e8 00 00 00 00	 call	 ?find_last_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_last_not_of
  0007a	48 89 44 24 58	 mov	 QWORD PTR right$[rsp], rax

; 351  :     if (right != std::string::npos) {

  0007f	48 83 7c 24 58
	ff		 cmp	 QWORD PTR right$[rsp], -1
  00085	74 4f		 je	 SHORT $LN2@rstrip

; 352  :         result = string.substr(0, right);

  00087	4c 8b 4c 24 58	 mov	 r9, QWORD PTR right$[rsp]
  0008c	45 33 c0	 xor	 r8d, r8d
  0008f	48 8d 54 24 60	 lea	 rdx, QWORD PTR $T4[rsp]
  00094	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR string$[rsp]
  0009c	e8 00 00 00 00	 call	 ?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
  000a1	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR tv65[rsp], rax
  000a9	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR tv65[rsp]
  000b1	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR tv88[rsp], rax
  000b9	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR tv88[rsp]
  000c1	48 8d 4c 24 28	 lea	 rcx, QWORD PTR result$[rsp]
  000c6	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
  000cb	90		 npad	 1
  000cc	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T4[rsp]
  000d1	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN2@rstrip:

; 353  :     }
; 354  :     return result;

  000d6	48 8d 54 24 28	 lea	 rdx, QWORD PTR result$[rsp]
  000db	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000e3	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000e8	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR $T5[rsp]
  000ef	83 c8 01	 or	 eax, 1
  000f2	89 84 24 90 00
	00 00		 mov	 DWORD PTR $T5[rsp], eax
  000f9	48 8d 4c 24 28	 lea	 rcx, QWORD PTR result$[rsp]
  000fe	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00103	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 355  : }

  0010b	48 8b f8	 mov	 rdi, rax
  0010e	48 8b cc	 mov	 rcx, rsp
  00111	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z$rtcFrameData
  00118	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0011d	48 8b c7	 mov	 rax, rdi
  00120	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00128	48 33 cc	 xor	 rcx, rsp
  0012b	e8 00 00 00 00	 call	 __security_check_cookie
  00130	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  00137	5f		 pop	 rdi
  00138	c3		 ret	 0
  00139	cc		 int	 3
?rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z ENDP ; rstrip
_TEXT	ENDS
text$x	SEGMENT
result$ = 40
right$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?dtor$0@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA PROC ; `rstrip'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR result$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA ENDP ; `rstrip'::`1'::dtor$0
result$ = 40
right$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?dtor$1@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA PROC ; `rstrip'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 60	 lea	 rcx, QWORD PTR $T4[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA ENDP ; `rstrip'::`1'::dtor$1
result$ = 40
right$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?dtor$2@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA PROC ; `rstrip'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	8b 85 90 00 00
	00		 mov	 eax, DWORD PTR $T5[rbp]
  0005f	83 e0 01	 and	 eax, 1
  00062	85 c0		 test	 eax, eax
  00064	74 13		 je	 SHORT $LN7@dtor$2
  00066	83 a5 90 00 00
	00 fe		 and	 DWORD PTR $T5[rbp], -2
  0006d	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00074	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN7@dtor$2:
  00079	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0007d	5f		 pop	 rdi
  0007e	5d		 pop	 rbp
  0007f	c3		 ret	 0
?dtor$2@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA ENDP ; `rstrip'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
result$ = 40
right$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?dtor$0@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA PROC ; `rstrip'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR result$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA ENDP ; `rstrip'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
result$ = 40
right$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?dtor$1@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA PROC ; `rstrip'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 60	 lea	 rcx, QWORD PTR $T4[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA ENDP ; `rstrip'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
result$ = 40
right$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?dtor$2@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA PROC ; `rstrip'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	8b 85 90 00 00
	00		 mov	 eax, DWORD PTR $T5[rbp]
  0005f	83 e0 01	 and	 eax, 1
  00062	85 c0		 test	 eax, eax
  00064	74 13		 je	 SHORT $LN7@dtor$2
  00066	83 a5 90 00 00
	00 fe		 and	 DWORD PTR $T5[rbp], -2
  0006d	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00074	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN7@dtor$2:
  00079	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0007d	5f		 pop	 rdi
  0007e	5d		 pop	 rbp
  0007f	c3		 ret	 0
?dtor$2@?0??rstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA ENDP ; `rstrip'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
result$ = 40
left$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z PROC ; lstrip

; 339  : std::string lstrip(const std::string& string, const char* trim) {

$LN8:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+192]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00040	c7 84 24 90 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T5[rsp], 0

; 340  :     auto result = string;

  0004b	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR string$[rsp]
  00053	48 8d 4c 24 28	 lea	 rcx, QWORD PTR result$[rsp]
  00058	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0005d	90		 npad	 1

; 341  :     auto left = string.find_first_not_of(trim);

  0005e	45 33 c0	 xor	 r8d, r8d
  00061	48 8b 94 24 d0
	00 00 00	 mov	 rdx, QWORD PTR trim$[rsp]
  00069	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR string$[rsp]
  00071	e8 00 00 00 00	 call	 ?find_first_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_first_not_of
  00076	48 89 44 24 58	 mov	 QWORD PTR left$[rsp], rax

; 342  :     if (left != std::string::npos) {

  0007b	48 83 7c 24 58
	ff		 cmp	 QWORD PTR left$[rsp], -1
  00081	74 4f		 je	 SHORT $LN2@lstrip

; 343  :         result = string.substr(left, 0);

  00083	45 33 c9	 xor	 r9d, r9d
  00086	4c 8b 44 24 58	 mov	 r8, QWORD PTR left$[rsp]
  0008b	48 8d 54 24 60	 lea	 rdx, QWORD PTR $T4[rsp]
  00090	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR string$[rsp]
  00098	e8 00 00 00 00	 call	 ?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
  0009d	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR tv65[rsp], rax
  000a5	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR tv65[rsp]
  000ad	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR tv88[rsp], rax
  000b5	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR tv88[rsp]
  000bd	48 8d 4c 24 28	 lea	 rcx, QWORD PTR result$[rsp]
  000c2	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
  000c7	90		 npad	 1
  000c8	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T4[rsp]
  000cd	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN2@lstrip:

; 344  :     }
; 345  :     return result;

  000d2	48 8d 54 24 28	 lea	 rdx, QWORD PTR result$[rsp]
  000d7	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000df	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000e4	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR $T5[rsp]
  000eb	83 c8 01	 or	 eax, 1
  000ee	89 84 24 90 00
	00 00		 mov	 DWORD PTR $T5[rsp], eax
  000f5	48 8d 4c 24 28	 lea	 rcx, QWORD PTR result$[rsp]
  000fa	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000ff	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 346  : }

  00107	48 8b f8	 mov	 rdi, rax
  0010a	48 8b cc	 mov	 rcx, rsp
  0010d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z$rtcFrameData
  00114	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00119	48 8b c7	 mov	 rax, rdi
  0011c	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00124	48 33 cc	 xor	 rcx, rsp
  00127	e8 00 00 00 00	 call	 __security_check_cookie
  0012c	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  00133	5f		 pop	 rdi
  00134	c3		 ret	 0
  00135	cc		 int	 3
?lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z ENDP ; lstrip
_TEXT	ENDS
text$x	SEGMENT
result$ = 40
left$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?dtor$0@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA PROC ; `lstrip'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR result$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA ENDP ; `lstrip'::`1'::dtor$0
result$ = 40
left$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?dtor$1@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA PROC ; `lstrip'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 60	 lea	 rcx, QWORD PTR $T4[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA ENDP ; `lstrip'::`1'::dtor$1
result$ = 40
left$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?dtor$2@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA PROC ; `lstrip'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	8b 85 90 00 00
	00		 mov	 eax, DWORD PTR $T5[rbp]
  0005f	83 e0 01	 and	 eax, 1
  00062	85 c0		 test	 eax, eax
  00064	74 13		 je	 SHORT $LN7@dtor$2
  00066	83 a5 90 00 00
	00 fe		 and	 DWORD PTR $T5[rbp], -2
  0006d	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00074	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN7@dtor$2:
  00079	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0007d	5f		 pop	 rdi
  0007e	5d		 pop	 rbp
  0007f	c3		 ret	 0
?dtor$2@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA ENDP ; `lstrip'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
result$ = 40
left$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?dtor$0@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA PROC ; `lstrip'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR result$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA ENDP ; `lstrip'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
result$ = 40
left$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?dtor$1@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA PROC ; `lstrip'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 60	 lea	 rcx, QWORD PTR $T4[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA ENDP ; `lstrip'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
result$ = 40
left$ = 88
$T4 = 96
$T5 = 144
tv65 = 152
tv88 = 160
__$ArrayPad$ = 168
__$ReturnUdt$ = 192
string$ = 200
trim$ = 208
?dtor$2@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA PROC ; `lstrip'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	8b 85 90 00 00
	00		 mov	 eax, DWORD PTR $T5[rbp]
  0005f	83 e0 01	 and	 eax, 1
  00062	85 c0		 test	 eax, eax
  00064	74 13		 je	 SHORT $LN7@dtor$2
  00066	83 a5 90 00 00
	00 fe		 and	 DWORD PTR $T5[rbp], -2
  0006d	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00074	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN7@dtor$2:
  00079	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0007d	5f		 pop	 rdi
  0007e	5d		 pop	 rbp
  0007f	c3		 ret	 0
?dtor$2@?0??lstrip@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z@4HA ENDP ; `lstrip'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z PROC ; split

; 316  : std::vector<std::string> split(const std::string &str, const std::string &delim, bool bTrim) {

$LN19:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec c0 01
	00 00		 sub	 rsp, 448		; 000001c0H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 70 00 00 00	 mov	 ecx, 112		; 00000070H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 d0
	01 00 00	 mov	 rcx, QWORD PTR [rsp+464]
  00033	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003a	48 33 c4	 xor	 rax, rsp
  0003d	48 89 84 24 b0
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00045	c7 84 24 74 01
	00 00 00 00 00
	00		 mov	 DWORD PTR $T12[rsp], 0

; 317  :     std::vector<std::string> res;

  00050	48 8d 4c 24 38	 lea	 rcx, QWORD PTR res$[rsp]
  00055	e8 00 00 00 00	 call	 ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0005a	90		 npad	 1

; 318  :     size_t current = 0, found, delimlen = delim.size();

  0005b	48 c7 44 24 68
	00 00 00 00	 mov	 QWORD PTR current$[rsp], 0
  00064	48 8b 8c 24 e0
	01 00 00	 mov	 rcx, QWORD PTR delim$[rsp]
  0006c	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  00071	48 89 44 24 78	 mov	 QWORD PTR delimlen$[rsp], rax
$LN2@split:

; 319  :     while (std::string::npos != (found = str.find(delim, current))) {

  00076	4c 8b 44 24 68	 mov	 r8, QWORD PTR current$[rsp]
  0007b	48 8b 94 24 e0
	01 00 00	 mov	 rdx, QWORD PTR delim$[rsp]
  00083	48 8b 8c 24 d8
	01 00 00	 mov	 rcx, QWORD PTR str$[rsp]
  0008b	e8 00 00 00 00	 call	 ?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KAEBV12@_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
  00090	48 89 44 24 70	 mov	 QWORD PTR found$[rsp], rax
  00095	48 83 7c 24 70
	ff		 cmp	 QWORD PTR found$[rsp], -1
  0009b	0f 84 fa 00 00
	00		 je	 $LN3@split

; 320  :         auto segment = std::string(str, current, found - current);

  000a1	48 8d 8c 24 70
	01 00 00	 lea	 rcx, QWORD PTR $T10[rsp]
  000a9	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@XZ ; std::allocator<char>::allocator<char>
  000ae	48 8b 4c 24 68	 mov	 rcx, QWORD PTR current$[rsp]
  000b3	48 8b 54 24 70	 mov	 rdx, QWORD PTR found$[rsp]
  000b8	48 2b d1	 sub	 rdx, rcx
  000bb	48 8b ca	 mov	 rcx, rdx
  000be	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000c3	4c 8b c9	 mov	 r9, rcx
  000c6	4c 8b 44 24 68	 mov	 r8, QWORD PTR current$[rsp]
  000cb	48 8b 94 24 d8
	01 00 00	 mov	 rdx, QWORD PTR str$[rsp]
  000d3	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR segment$6[rsp]
  000db	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000e0	90		 npad	 1

; 321  :         if (bTrim) {

  000e1	0f b6 84 24 e8
	01 00 00	 movzx	 eax, BYTE PTR bTrim$[rsp]
  000e9	85 c0		 test	 eax, eax
  000eb	74 57		 je	 SHORT $LN4@split

; 322  :             segment = trim(segment);

  000ed	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG116108
  000f4	48 8d 94 24 88
	00 00 00	 lea	 rdx, QWORD PTR segment$6[rsp]
  000fc	48 8d 8c 24 b8
	00 00 00	 lea	 rcx, QWORD PTR $T7[rsp]
  00104	e8 00 00 00 00	 call	 ?trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z ; trim
  00109	48 89 84 24 78
	01 00 00	 mov	 QWORD PTR tv75[rsp], rax
  00111	48 8b 84 24 78
	01 00 00	 mov	 rax, QWORD PTR tv75[rsp]
  00119	48 89 84 24 80
	01 00 00	 mov	 QWORD PTR tv177[rsp], rax
  00121	48 8b 94 24 80
	01 00 00	 mov	 rdx, QWORD PTR tv177[rsp]
  00129	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR segment$6[rsp]
  00131	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
  00136	90		 npad	 1
  00137	48 8d 8c 24 b8
	00 00 00	 lea	 rcx, QWORD PTR $T7[rsp]
  0013f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@split:

; 323  :         }
; 324  :         if (!bTrim || segment.length()) {

  00144	0f b6 84 24 e8
	01 00 00	 movzx	 eax, BYTE PTR bTrim$[rsp]
  0014c	85 c0		 test	 eax, eax
  0014e	74 12		 je	 SHORT $LN6@split
  00150	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR segment$6[rsp]
  00158	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
  0015d	48 85 c0	 test	 rax, rax
  00160	74 12		 je	 SHORT $LN5@split
$LN6@split:

; 325  :             res.push_back(segment);

  00162	48 8d 94 24 88
	00 00 00	 lea	 rdx, QWORD PTR segment$6[rsp]
  0016a	48 8d 4c 24 38	 lea	 rcx, QWORD PTR res$[rsp]
  0016f	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
$LN5@split:

; 326  :         }
; 327  :         current = found + delimlen;

  00174	48 8b 44 24 78	 mov	 rax, QWORD PTR delimlen$[rsp]
  00179	48 8b 4c 24 70	 mov	 rcx, QWORD PTR found$[rsp]
  0017e	48 03 c8	 add	 rcx, rax
  00181	48 8b c1	 mov	 rax, rcx
  00184	48 89 44 24 68	 mov	 QWORD PTR current$[rsp], rax

; 328  :     }

  00189	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR segment$6[rsp]
  00191	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00196	e9 db fe ff ff	 jmp	 $LN2@split
$LN3@split:

; 329  :     auto segment = std::string(str, current, str.size() - current);

  0019b	48 8d 8c 24 71
	01 00 00	 lea	 rcx, QWORD PTR $T11[rsp]
  001a3	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@XZ ; std::allocator<char>::allocator<char>
  001a8	48 89 84 24 88
	01 00 00	 mov	 QWORD PTR tv137[rsp], rax
  001b0	48 8b 8c 24 d8
	01 00 00	 mov	 rcx, QWORD PTR str$[rsp]
  001b8	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  001bd	48 2b 44 24 68	 sub	 rax, QWORD PTR current$[rsp]
  001c2	48 8b 8c 24 88
	01 00 00	 mov	 rcx, QWORD PTR tv137[rsp]
  001ca	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  001cf	4c 8b c8	 mov	 r9, rax
  001d2	4c 8b 44 24 68	 mov	 r8, QWORD PTR current$[rsp]
  001d7	48 8b 94 24 d8
	01 00 00	 mov	 rdx, QWORD PTR str$[rsp]
  001df	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR segment$[rsp]
  001e7	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  001ec	90		 npad	 1

; 330  :     if (bTrim) {

  001ed	0f b6 84 24 e8
	01 00 00	 movzx	 eax, BYTE PTR bTrim$[rsp]
  001f5	85 c0		 test	 eax, eax
  001f7	74 57		 je	 SHORT $LN7@split

; 331  :         segment = trim(segment);

  001f9	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG116112
  00200	48 8d 94 24 e8
	00 00 00	 lea	 rdx, QWORD PTR segment$[rsp]
  00208	48 8d 8c 24 18
	01 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  00210	e8 00 00 00 00	 call	 ?trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@PEBD@Z ; trim
  00215	48 89 84 24 90
	01 00 00	 mov	 QWORD PTR tv135[rsp], rax
  0021d	48 8b 84 24 90
	01 00 00	 mov	 rax, QWORD PTR tv135[rsp]
  00225	48 89 84 24 98
	01 00 00	 mov	 QWORD PTR tv180[rsp], rax
  0022d	48 8b 94 24 98
	01 00 00	 mov	 rdx, QWORD PTR tv180[rsp]
  00235	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR segment$[rsp]
  0023d	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
  00242	90		 npad	 1
  00243	48 8d 8c 24 18
	01 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  0024b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN7@split:

; 332  :     }
; 333  :     if (!bTrim || segment.length()) {

  00250	0f b6 84 24 e8
	01 00 00	 movzx	 eax, BYTE PTR bTrim$[rsp]
  00258	85 c0		 test	 eax, eax
  0025a	74 12		 je	 SHORT $LN9@split
  0025c	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR segment$[rsp]
  00264	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
  00269	48 85 c0	 test	 rax, rax
  0026c	74 55		 je	 SHORT $LN8@split
$LN9@split:

; 334  :         res.push_back(std::string(segment.c_str()));

  0026e	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR segment$[rsp]
  00276	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0027b	48 8b d0	 mov	 rdx, rax
  0027e	48 8d 8c 24 40
	01 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  00286	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0028b	48 89 84 24 a0
	01 00 00	 mov	 QWORD PTR tv65[rsp], rax
  00293	48 8b 84 24 a0
	01 00 00	 mov	 rax, QWORD PTR tv65[rsp]
  0029b	48 89 84 24 a8
	01 00 00	 mov	 QWORD PTR tv182[rsp], rax
  002a3	48 8b 94 24 a8
	01 00 00	 mov	 rdx, QWORD PTR tv182[rsp]
  002ab	48 8d 4c 24 38	 lea	 rcx, QWORD PTR res$[rsp]
  002b0	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
  002b5	90		 npad	 1
  002b6	48 8d 8c 24 40
	01 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  002be	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@split:

; 335  :     }
; 336  :     return res;

  002c3	48 8d 54 24 38	 lea	 rdx, QWORD PTR res$[rsp]
  002c8	48 8b 8c 24 d0
	01 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  002d0	e8 00 00 00 00	 call	 ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  002d5	8b 84 24 74 01
	00 00		 mov	 eax, DWORD PTR $T12[rsp]
  002dc	83 c8 01	 or	 eax, 1
  002df	89 84 24 74 01
	00 00		 mov	 DWORD PTR $T12[rsp], eax
  002e6	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR segment$[rsp]
  002ee	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002f3	90		 npad	 1
  002f4	48 8d 4c 24 38	 lea	 rcx, QWORD PTR res$[rsp]
  002f9	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  002fe	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 337  : }

  00306	48 8b f8	 mov	 rdi, rax
  00309	48 8b cc	 mov	 rcx, rsp
  0030c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z$rtcFrameData
  00313	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00318	48 8b c7	 mov	 rax, rdi
  0031b	48 8b 8c 24 b0
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00323	48 33 cc	 xor	 rcx, rsp
  00326	e8 00 00 00 00	 call	 __security_check_cookie
  0032b	48 81 c4 c0 01
	00 00		 add	 rsp, 448		; 000001c0H
  00332	5f		 pop	 rdi
  00333	c3		 ret	 0
  00334	cc		 int	 3
?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z ENDP ; split
_TEXT	ENDS
text$x	SEGMENT
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$0@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR res$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$0
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$1@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR segment$6[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$1
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$2@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$2
  00049	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00053	55		 push	 rbp
  00054	57		 push	 rdi
  00055	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00059	48 8b ea	 mov	 rbp, rdx
  0005c	48 8d 8d b8 00
	00 00		 lea	 rcx, QWORD PTR $T7[rbp]
  00063	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00068	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006c	5f		 pop	 rdi
  0006d	5d		 pop	 rbp
  0006e	c3		 ret	 0
?dtor$2@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$2
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$3@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$3
  0006f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00074	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00079	55		 push	 rbp
  0007a	57		 push	 rdi
  0007b	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007f	48 8b ea	 mov	 rbp, rdx
  00082	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR segment$[rbp]
  00089	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0008e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00092	5f		 pop	 rdi
  00093	5d		 pop	 rbp
  00094	c3		 ret	 0
?dtor$3@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$3
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$4@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$4
  00095	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0009a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009f	55		 push	 rbp
  000a0	57		 push	 rdi
  000a1	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a5	48 8b ea	 mov	 rbp, rdx
  000a8	48 8d 8d 18 01
	00 00		 lea	 rcx, QWORD PTR $T8[rbp]
  000af	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000b4	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b8	5f		 pop	 rdi
  000b9	5d		 pop	 rbp
  000ba	c3		 ret	 0
?dtor$4@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$4
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$5@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$5
  000bb	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000c0	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000c5	55		 push	 rbp
  000c6	57		 push	 rdi
  000c7	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000cb	48 8b ea	 mov	 rbp, rdx
  000ce	48 8d 8d 40 01
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  000d5	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000da	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000de	5f		 pop	 rdi
  000df	5d		 pop	 rbp
  000e0	c3		 ret	 0
?dtor$5@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$5
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$6@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$6
  000e1	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000e6	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000eb	55		 push	 rbp
  000ec	57		 push	 rdi
  000ed	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000f1	48 8b ea	 mov	 rbp, rdx
  000f4	8b 85 74 01 00
	00		 mov	 eax, DWORD PTR $T12[rbp]
  000fa	83 e0 01	 and	 eax, 1
  000fd	85 c0		 test	 eax, eax
  000ff	74 13		 je	 SHORT $LN18@dtor$6
  00101	83 a5 74 01 00
	00 fe		 and	 DWORD PTR $T12[rbp], -2
  00108	48 8b 8d d0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0010f	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN18@dtor$6:
  00114	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00118	5f		 pop	 rdi
  00119	5d		 pop	 rbp
  0011a	c3		 ret	 0
?dtor$6@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$0@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR res$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$1@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR segment$6[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$2@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$2
  00049	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00053	55		 push	 rbp
  00054	57		 push	 rdi
  00055	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00059	48 8b ea	 mov	 rbp, rdx
  0005c	48 8d 8d b8 00
	00 00		 lea	 rcx, QWORD PTR $T7[rbp]
  00063	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00068	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006c	5f		 pop	 rdi
  0006d	5d		 pop	 rbp
  0006e	c3		 ret	 0
?dtor$2@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$3@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$3
  0006f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00074	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00079	55		 push	 rbp
  0007a	57		 push	 rdi
  0007b	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007f	48 8b ea	 mov	 rbp, rdx
  00082	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR segment$[rbp]
  00089	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0008e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00092	5f		 pop	 rdi
  00093	5d		 pop	 rbp
  00094	c3		 ret	 0
?dtor$3@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$4@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$4
  00095	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0009a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009f	55		 push	 rbp
  000a0	57		 push	 rdi
  000a1	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a5	48 8b ea	 mov	 rbp, rdx
  000a8	48 8d 8d 18 01
	00 00		 lea	 rcx, QWORD PTR $T8[rbp]
  000af	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000b4	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b8	5f		 pop	 rdi
  000b9	5d		 pop	 rbp
  000ba	c3		 ret	 0
?dtor$4@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$5@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$5
  000bb	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000c0	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000c5	55		 push	 rbp
  000c6	57		 push	 rdi
  000c7	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000cb	48 8b ea	 mov	 rbp, rdx
  000ce	48 8d 8d 40 01
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  000d5	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000da	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000de	5f		 pop	 rdi
  000df	5d		 pop	 rbp
  000e0	c3		 ret	 0
?dtor$5@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$6@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$6
  000e1	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000e6	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000eb	55		 push	 rbp
  000ec	57		 push	 rdi
  000ed	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000f1	48 8b ea	 mov	 rbp, rdx
  000f4	8b 85 74 01 00
	00		 mov	 eax, DWORD PTR $T12[rbp]
  000fa	83 e0 01	 and	 eax, 1
  000fd	85 c0		 test	 eax, eax
  000ff	74 13		 je	 SHORT $LN18@dtor$6
  00101	83 a5 74 01 00
	00 fe		 and	 DWORD PTR $T12[rbp], -2
  00108	48 8b 8d d0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0010f	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN18@dtor$6:
  00114	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00118	5f		 pop	 rdi
  00119	5d		 pop	 rbp
  0011a	c3		 ret	 0
?dtor$6@?0??split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z PROC ; split

; 292  : std::vector<std::wstring> split(const std::wstring &str, const std::wstring &delim, bool bTrim) {

$LN19:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec c0 01
	00 00		 sub	 rsp, 448		; 000001c0H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 70 00 00 00	 mov	 ecx, 112		; 00000070H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 d0
	01 00 00	 mov	 rcx, QWORD PTR [rsp+464]
  00033	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003a	48 33 c4	 xor	 rax, rsp
  0003d	48 89 84 24 b0
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00045	c7 84 24 74 01
	00 00 00 00 00
	00		 mov	 DWORD PTR $T12[rsp], 0

; 293  :     std::vector<std::wstring> res;

  00050	48 8d 4c 24 38	 lea	 rcx, QWORD PTR res$[rsp]
  00055	e8 00 00 00 00	 call	 ??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
  0005a	90		 npad	 1

; 294  :     size_t current = 0, found, delimlen = delim.size();

  0005b	48 c7 44 24 68
	00 00 00 00	 mov	 QWORD PTR current$[rsp], 0
  00064	48 8b 8c 24 e0
	01 00 00	 mov	 rcx, QWORD PTR delim$[rsp]
  0006c	e8 00 00 00 00	 call	 ?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
  00071	48 89 44 24 78	 mov	 QWORD PTR delimlen$[rsp], rax
$LN2@split:

; 295  :     while (std::wstring::npos != (found = str.find(delim, current))) {

  00076	4c 8b 44 24 68	 mov	 r8, QWORD PTR current$[rsp]
  0007b	48 8b 94 24 e0
	01 00 00	 mov	 rdx, QWORD PTR delim$[rsp]
  00083	48 8b 8c 24 d8
	01 00 00	 mov	 rcx, QWORD PTR str$[rsp]
  0008b	e8 00 00 00 00	 call	 ?find@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find
  00090	48 89 44 24 70	 mov	 QWORD PTR found$[rsp], rax
  00095	48 83 7c 24 70
	ff		 cmp	 QWORD PTR found$[rsp], -1
  0009b	0f 84 fa 00 00
	00		 je	 $LN3@split

; 296  :         auto segment = std::wstring(str, current, found - current);

  000a1	48 8d 8c 24 70
	01 00 00	 lea	 rcx, QWORD PTR $T10[rsp]
  000a9	e8 00 00 00 00	 call	 ??0?$allocator@_W@std@@QEAA@XZ ; std::allocator<wchar_t>::allocator<wchar_t>
  000ae	48 8b 4c 24 68	 mov	 rcx, QWORD PTR current$[rsp]
  000b3	48 8b 54 24 70	 mov	 rdx, QWORD PTR found$[rsp]
  000b8	48 2b d1	 sub	 rdx, rcx
  000bb	48 8b ca	 mov	 rcx, rdx
  000be	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000c3	4c 8b c9	 mov	 r9, rcx
  000c6	4c 8b 44 24 68	 mov	 r8, QWORD PTR current$[rsp]
  000cb	48 8b 94 24 d8
	01 00 00	 mov	 rdx, QWORD PTR str$[rsp]
  000d3	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR segment$6[rsp]
  000db	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  000e0	90		 npad	 1

; 297  :         if (bTrim) {

  000e1	0f b6 84 24 e8
	01 00 00	 movzx	 eax, BYTE PTR bTrim$[rsp]
  000e9	85 c0		 test	 eax, eax
  000eb	74 57		 je	 SHORT $LN4@split

; 298  :             segment = trim(segment);

  000ed	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG115554
  000f4	48 8d 94 24 88
	00 00 00	 lea	 rdx, QWORD PTR segment$6[rsp]
  000fc	48 8d 8c 24 b8
	00 00 00	 lea	 rcx, QWORD PTR $T7[rsp]
  00104	e8 00 00 00 00	 call	 ?trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z ; trim
  00109	48 89 84 24 78
	01 00 00	 mov	 QWORD PTR tv75[rsp], rax
  00111	48 8b 84 24 78
	01 00 00	 mov	 rax, QWORD PTR tv75[rsp]
  00119	48 89 84 24 80
	01 00 00	 mov	 QWORD PTR tv177[rsp], rax
  00121	48 8b 94 24 80
	01 00 00	 mov	 rdx, QWORD PTR tv177[rsp]
  00129	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR segment$6[rsp]
  00131	e8 00 00 00 00	 call	 ??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
  00136	90		 npad	 1
  00137	48 8d 8c 24 b8
	00 00 00	 lea	 rcx, QWORD PTR $T7[rsp]
  0013f	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN4@split:

; 299  :         }
; 300  :         if (!bTrim || segment.length()) {

  00144	0f b6 84 24 e8
	01 00 00	 movzx	 eax, BYTE PTR bTrim$[rsp]
  0014c	85 c0		 test	 eax, eax
  0014e	74 12		 je	 SHORT $LN6@split
  00150	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR segment$6[rsp]
  00158	e8 00 00 00 00	 call	 ?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length
  0015d	48 85 c0	 test	 rax, rax
  00160	74 12		 je	 SHORT $LN5@split
$LN6@split:

; 301  :             res.push_back(segment);

  00162	48 8d 94 24 88
	00 00 00	 lea	 rdx, QWORD PTR segment$6[rsp]
  0016a	48 8d 4c 24 38	 lea	 rcx, QWORD PTR res$[rsp]
  0016f	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back
$LN5@split:

; 302  :         }
; 303  :         current = found + delimlen;

  00174	48 8b 44 24 78	 mov	 rax, QWORD PTR delimlen$[rsp]
  00179	48 8b 4c 24 70	 mov	 rcx, QWORD PTR found$[rsp]
  0017e	48 03 c8	 add	 rcx, rax
  00181	48 8b c1	 mov	 rax, rcx
  00184	48 89 44 24 68	 mov	 QWORD PTR current$[rsp], rax

; 304  :     }

  00189	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR segment$6[rsp]
  00191	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00196	e9 db fe ff ff	 jmp	 $LN2@split
$LN3@split:

; 305  :     auto segment = std::wstring(str, current, str.size() - current);

  0019b	48 8d 8c 24 71
	01 00 00	 lea	 rcx, QWORD PTR $T11[rsp]
  001a3	e8 00 00 00 00	 call	 ??0?$allocator@_W@std@@QEAA@XZ ; std::allocator<wchar_t>::allocator<wchar_t>
  001a8	48 89 84 24 88
	01 00 00	 mov	 QWORD PTR tv137[rsp], rax
  001b0	48 8b 8c 24 d8
	01 00 00	 mov	 rcx, QWORD PTR str$[rsp]
  001b8	e8 00 00 00 00	 call	 ?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
  001bd	48 2b 44 24 68	 sub	 rax, QWORD PTR current$[rsp]
  001c2	48 8b 8c 24 88
	01 00 00	 mov	 rcx, QWORD PTR tv137[rsp]
  001ca	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  001cf	4c 8b c8	 mov	 r9, rax
  001d2	4c 8b 44 24 68	 mov	 r8, QWORD PTR current$[rsp]
  001d7	48 8b 94 24 d8
	01 00 00	 mov	 rdx, QWORD PTR str$[rsp]
  001df	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR segment$[rsp]
  001e7	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  001ec	90		 npad	 1

; 306  :     if (bTrim) {

  001ed	0f b6 84 24 e8
	01 00 00	 movzx	 eax, BYTE PTR bTrim$[rsp]
  001f5	85 c0		 test	 eax, eax
  001f7	74 57		 je	 SHORT $LN7@split

; 307  :         segment = trim(segment);

  001f9	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG115558
  00200	48 8d 94 24 e8
	00 00 00	 lea	 rdx, QWORD PTR segment$[rsp]
  00208	48 8d 8c 24 18
	01 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  00210	e8 00 00 00 00	 call	 ?trim@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@PEB_W@Z ; trim
  00215	48 89 84 24 90
	01 00 00	 mov	 QWORD PTR tv135[rsp], rax
  0021d	48 8b 84 24 90
	01 00 00	 mov	 rax, QWORD PTR tv135[rsp]
  00225	48 89 84 24 98
	01 00 00	 mov	 QWORD PTR tv180[rsp], rax
  0022d	48 8b 94 24 98
	01 00 00	 mov	 rdx, QWORD PTR tv180[rsp]
  00235	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR segment$[rsp]
  0023d	e8 00 00 00 00	 call	 ??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
  00242	90		 npad	 1
  00243	48 8d 8c 24 18
	01 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  0024b	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN7@split:

; 308  :     }
; 309  :     if (!bTrim || segment.length()) {

  00250	0f b6 84 24 e8
	01 00 00	 movzx	 eax, BYTE PTR bTrim$[rsp]
  00258	85 c0		 test	 eax, eax
  0025a	74 12		 je	 SHORT $LN9@split
  0025c	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR segment$[rsp]
  00264	e8 00 00 00 00	 call	 ?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length
  00269	48 85 c0	 test	 rax, rax
  0026c	74 55		 je	 SHORT $LN8@split
$LN9@split:

; 310  :         res.push_back(std::wstring(segment.c_str()));

  0026e	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR segment$[rsp]
  00276	e8 00 00 00 00	 call	 ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
  0027b	48 8b d0	 mov	 rdx, rax
  0027e	48 8d 8c 24 40
	01 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  00286	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0028b	48 89 84 24 a0
	01 00 00	 mov	 QWORD PTR tv65[rsp], rax
  00293	48 8b 84 24 a0
	01 00 00	 mov	 rax, QWORD PTR tv65[rsp]
  0029b	48 89 84 24 a8
	01 00 00	 mov	 QWORD PTR tv182[rsp], rax
  002a3	48 8b 94 24 a8
	01 00 00	 mov	 rdx, QWORD PTR tv182[rsp]
  002ab	48 8d 4c 24 38	 lea	 rcx, QWORD PTR res$[rsp]
  002b0	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back
  002b5	90		 npad	 1
  002b6	48 8d 8c 24 40
	01 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  002be	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN8@split:

; 311  :     }
; 312  :     return res;

  002c3	48 8d 54 24 38	 lea	 rdx, QWORD PTR res$[rsp]
  002c8	48 8b 8c 24 d0
	01 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  002d0	e8 00 00 00 00	 call	 ??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
  002d5	8b 84 24 74 01
	00 00		 mov	 eax, DWORD PTR $T12[rsp]
  002dc	83 c8 01	 or	 eax, 1
  002df	89 84 24 74 01
	00 00		 mov	 DWORD PTR $T12[rsp], eax
  002e6	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR segment$[rsp]
  002ee	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  002f3	90		 npad	 1
  002f4	48 8d 4c 24 38	 lea	 rcx, QWORD PTR res$[rsp]
  002f9	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
  002fe	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 313  : }

  00306	48 8b f8	 mov	 rdi, rax
  00309	48 8b cc	 mov	 rcx, rsp
  0030c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z$rtcFrameData
  00313	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00318	48 8b c7	 mov	 rax, rdi
  0031b	48 8b 8c 24 b0
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00323	48 33 cc	 xor	 rcx, rsp
  00326	e8 00 00 00 00	 call	 __security_check_cookie
  0032b	48 81 c4 c0 01
	00 00		 add	 rsp, 448		; 000001c0H
  00332	5f		 pop	 rdi
  00333	c3		 ret	 0
  00334	cc		 int	 3
?split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z ENDP ; split
_TEXT	ENDS
text$x	SEGMENT
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$0@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR res$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$0
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$1@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR segment$6[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$1
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$2@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$2
  00049	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00053	55		 push	 rbp
  00054	57		 push	 rdi
  00055	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00059	48 8b ea	 mov	 rbp, rdx
  0005c	48 8d 8d b8 00
	00 00		 lea	 rcx, QWORD PTR $T7[rbp]
  00063	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00068	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006c	5f		 pop	 rdi
  0006d	5d		 pop	 rbp
  0006e	c3		 ret	 0
?dtor$2@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$2
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$3@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$3
  0006f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00074	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00079	55		 push	 rbp
  0007a	57		 push	 rdi
  0007b	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007f	48 8b ea	 mov	 rbp, rdx
  00082	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR segment$[rbp]
  00089	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0008e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00092	5f		 pop	 rdi
  00093	5d		 pop	 rbp
  00094	c3		 ret	 0
?dtor$3@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$3
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$4@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$4
  00095	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0009a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009f	55		 push	 rbp
  000a0	57		 push	 rdi
  000a1	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a5	48 8b ea	 mov	 rbp, rdx
  000a8	48 8d 8d 18 01
	00 00		 lea	 rcx, QWORD PTR $T8[rbp]
  000af	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  000b4	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b8	5f		 pop	 rdi
  000b9	5d		 pop	 rbp
  000ba	c3		 ret	 0
?dtor$4@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$4
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$5@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$5
  000bb	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000c0	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000c5	55		 push	 rbp
  000c6	57		 push	 rdi
  000c7	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000cb	48 8b ea	 mov	 rbp, rdx
  000ce	48 8d 8d 40 01
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  000d5	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  000da	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000de	5f		 pop	 rdi
  000df	5d		 pop	 rbp
  000e0	c3		 ret	 0
?dtor$5@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$5
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$6@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$6
  000e1	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000e6	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000eb	55		 push	 rbp
  000ec	57		 push	 rdi
  000ed	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000f1	48 8b ea	 mov	 rbp, rdx
  000f4	8b 85 74 01 00
	00		 mov	 eax, DWORD PTR $T12[rbp]
  000fa	83 e0 01	 and	 eax, 1
  000fd	85 c0		 test	 eax, eax
  000ff	74 13		 je	 SHORT $LN18@dtor$6
  00101	83 a5 74 01 00
	00 fe		 and	 DWORD PTR $T12[rbp], -2
  00108	48 8b 8d d0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0010f	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
$LN18@dtor$6:
  00114	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00118	5f		 pop	 rdi
  00119	5d		 pop	 rbp
  0011a	c3		 ret	 0
?dtor$6@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$0@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR res$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$1@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR segment$6[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$2@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$2
  00049	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00053	55		 push	 rbp
  00054	57		 push	 rdi
  00055	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00059	48 8b ea	 mov	 rbp, rdx
  0005c	48 8d 8d b8 00
	00 00		 lea	 rcx, QWORD PTR $T7[rbp]
  00063	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00068	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006c	5f		 pop	 rdi
  0006d	5d		 pop	 rbp
  0006e	c3		 ret	 0
?dtor$2@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$3@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$3
  0006f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00074	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00079	55		 push	 rbp
  0007a	57		 push	 rdi
  0007b	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007f	48 8b ea	 mov	 rbp, rdx
  00082	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR segment$[rbp]
  00089	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0008e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00092	5f		 pop	 rdi
  00093	5d		 pop	 rbp
  00094	c3		 ret	 0
?dtor$3@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$4@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$4
  00095	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0009a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009f	55		 push	 rbp
  000a0	57		 push	 rdi
  000a1	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a5	48 8b ea	 mov	 rbp, rdx
  000a8	48 8d 8d 18 01
	00 00		 lea	 rcx, QWORD PTR $T8[rbp]
  000af	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  000b4	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b8	5f		 pop	 rdi
  000b9	5d		 pop	 rbp
  000ba	c3		 ret	 0
?dtor$4@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$5@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$5
  000bb	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000c0	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000c5	55		 push	 rbp
  000c6	57		 push	 rdi
  000c7	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000cb	48 8b ea	 mov	 rbp, rdx
  000ce	48 8d 8d 40 01
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  000d5	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  000da	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000de	5f		 pop	 rdi
  000df	5d		 pop	 rbp
  000e0	c3		 ret	 0
?dtor$5@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
res$ = 56
current$ = 104
found$ = 112
delimlen$ = 120
segment$6 = 136
$T7 = 184
segment$ = 232
$T8 = 280
$T9 = 320
$T10 = 368
$T11 = 369
$T12 = 372
tv75 = 376
tv177 = 384
tv137 = 392
tv135 = 400
tv180 = 408
tv65 = 416
tv182 = 424
__$ArrayPad$ = 432
__$ReturnUdt$ = 464
str$ = 472
delim$ = 480
bTrim$ = 488
?dtor$6@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA PROC ; `split'::`1'::dtor$6
  000e1	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000e6	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000eb	55		 push	 rbp
  000ec	57		 push	 rdi
  000ed	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000f1	48 8b ea	 mov	 rbp, rdx
  000f4	8b 85 74 01 00
	00		 mov	 eax, DWORD PTR $T12[rbp]
  000fa	83 e0 01	 and	 eax, 1
  000fd	85 c0		 test	 eax, eax
  000ff	74 13		 je	 SHORT $LN18@dtor$6
  00101	83 a5 74 01 00
	00 fe		 and	 DWORD PTR $T12[rbp], -2
  00108	48 8b 8d d0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0010f	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
$LN18@dtor$6:
  00114	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00118	5f		 pop	 rdi
  00119	5d		 pop	 rbp
  0011a	c3		 ret	 0
?dtor$6@?0??split@@YA?AV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0_N@Z@4HA ENDP ; `split'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
args$ = 40
len$ = 56
buffer$ = 72
retStr$ = 136
$T6 = 193
$T7 = 194
$T8 = 196
__$ArrayPad$ = 200
__$ReturnUdt$ = 224
format$ = 232
?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ PROC ; strsprintf

; 239  : std::string strsprintf(const char* format, ...) {

$LN8:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000f	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00014	57		 push	 rdi
  00015	48 81 ec d0 00
	00 00		 sub	 rsp, 208		; 000000d0H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+224]
  00033	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003a	48 33 c4	 xor	 rax, rsp
  0003d	48 89 84 24 c8
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00045	c7 84 24 c4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T8[rsp], 0

; 240  :     if (format == nullptr) {

  00050	48 83 bc 24 e8
	00 00 00 00	 cmp	 QWORD PTR format$[rsp], 0
  00059	75 33		 jne	 SHORT $LN2@strsprintf

; 241  :         return "";

  0005b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG114881
  00062	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0006a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0006f	90		 npad	 1
  00070	8b 84 24 c4 00
	00 00		 mov	 eax, DWORD PTR $T8[rsp]
  00077	83 c8 01	 or	 eax, 1
  0007a	89 84 24 c4 00
	00 00		 mov	 DWORD PTR $T8[rsp], eax
  00081	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  00089	e9 e1 00 00 00	 jmp	 $LN1@strsprintf
$LN2@strsprintf:

; 242  :     }
; 243  :     va_list args;
; 244  :     va_start(args, format);

  0008e	48 8d 84 24 f0
	00 00 00	 lea	 rax, QWORD PTR format$[rsp+8]
  00096	48 89 44 24 28	 mov	 QWORD PTR args$[rsp], rax

; 245  :     const size_t len = _vscprintf(format, args) + 1;

  0009b	48 8b 54 24 28	 mov	 rdx, QWORD PTR args$[rsp]
  000a0	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR format$[rsp]
  000a8	e8 00 00 00 00	 call	 _vscprintf
  000ad	ff c0		 inc	 eax
  000af	48 98		 cdqe
  000b1	48 89 44 24 38	 mov	 QWORD PTR len$[rsp], rax

; 246  : 
; 247  :     std::vector<char> buffer(len, 0);

  000b6	c6 84 24 c2 00
	00 00 00	 mov	 BYTE PTR $T7[rsp], 0
  000be	48 8d 8c 24 c1
	00 00 00	 lea	 rcx, QWORD PTR $T6[rsp]
  000c6	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@XZ ; std::allocator<char>::allocator<char>
  000cb	4c 8b c8	 mov	 r9, rax
  000ce	4c 8d 84 24 c2
	00 00 00	 lea	 r8, QWORD PTR $T7[rsp]
  000d6	48 8b 54 24 38	 mov	 rdx, QWORD PTR len$[rsp]
  000db	48 8d 4c 24 48	 lea	 rcx, QWORD PTR buffer$[rsp]
  000e0	e8 00 00 00 00	 call	 ??0?$vector@DV?$allocator@D@std@@@std@@QEAA@_KAEBDAEBV?$allocator@D@1@@Z ; std::vector<char,std::allocator<char> >::vector<char,std::allocator<char> >
  000e5	90		 npad	 1

; 248  :     vsprintf(buffer.data(), format, args);

  000e6	48 8d 4c 24 48	 lea	 rcx, QWORD PTR buffer$[rsp]
  000eb	e8 00 00 00 00	 call	 ?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ ; std::vector<char,std::allocator<char> >::data
  000f0	4c 8b 44 24 28	 mov	 r8, QWORD PTR args$[rsp]
  000f5	48 8b 94 24 e8
	00 00 00	 mov	 rdx, QWORD PTR format$[rsp]
  000fd	48 8b c8	 mov	 rcx, rax
  00100	e8 00 00 00 00	 call	 vsprintf

; 249  :     va_end(args);

  00105	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR args$[rsp], 0

; 250  :     std::string retStr = std::string(buffer.data());

  0010e	48 8d 4c 24 48	 lea	 rcx, QWORD PTR buffer$[rsp]
  00113	e8 00 00 00 00	 call	 ?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ ; std::vector<char,std::allocator<char> >::data
  00118	48 8b d0	 mov	 rdx, rax
  0011b	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR retStr$[rsp]
  00123	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00128	90		 npad	 1

; 251  :     return retStr;

  00129	48 8d 94 24 88
	00 00 00	 lea	 rdx, QWORD PTR retStr$[rsp]
  00131	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00139	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0013e	8b 84 24 c4 00
	00 00		 mov	 eax, DWORD PTR $T8[rsp]
  00145	83 c8 01	 or	 eax, 1
  00148	89 84 24 c4 00
	00 00		 mov	 DWORD PTR $T8[rsp], eax
  0014f	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR retStr$[rsp]
  00157	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0015c	90		 npad	 1
  0015d	48 8d 4c 24 48	 lea	 rcx, QWORD PTR buffer$[rsp]
  00162	e8 00 00 00 00	 call	 ??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ ; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
  00167	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@strsprintf:

; 252  : }

  0016f	48 8b f8	 mov	 rdi, rax
  00172	48 8b cc	 mov	 rcx, rsp
  00175	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ$rtcFrameData
  0017c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00181	48 8b c7	 mov	 rax, rdi
  00184	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0018c	48 33 cc	 xor	 rcx, rsp
  0018f	e8 00 00 00 00	 call	 __security_check_cookie
  00194	48 81 c4 d0 00
	00 00		 add	 rsp, 208		; 000000d0H
  0019b	5f		 pop	 rdi
  0019c	c3		 ret	 0
  0019d	cc		 int	 3
?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ENDP ; strsprintf
_TEXT	ENDS
text$x	SEGMENT
args$ = 40
len$ = 56
buffer$ = 72
retStr$ = 136
$T6 = 193
$T7 = 194
$T8 = 196
__$ArrayPad$ = 200
__$ReturnUdt$ = 224
format$ = 232
?dtor$0@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA PROC ; `strsprintf'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 85 c4 00 00
	00		 mov	 eax, DWORD PTR $T8[rbp]
  00019	83 e0 01	 and	 eax, 1
  0001c	85 c0		 test	 eax, eax
  0001e	74 13		 je	 SHORT $LN5@dtor$0
  00020	83 a5 c4 00 00
	00 fe		 and	 DWORD PTR $T8[rbp], -2
  00027	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0002e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$0:
  00033	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00037	5f		 pop	 rdi
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
?dtor$0@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA ENDP ; `strsprintf'::`1'::dtor$0
args$ = 40
len$ = 56
buffer$ = 72
retStr$ = 136
$T6 = 193
$T7 = 194
$T8 = 196
__$ArrayPad$ = 200
__$ReturnUdt$ = 224
format$ = 232
?dtor$1@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA PROC ; `strsprintf'::`1'::dtor$1
  0003a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0003f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00044	55		 push	 rbp
  00045	57		 push	 rdi
  00046	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0004a	48 8b ea	 mov	 rbp, rdx
  0004d	48 8d 4d 48	 lea	 rcx, QWORD PTR buffer$[rbp]
  00051	e8 00 00 00 00	 call	 ??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ ; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
  00056	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0005a	5f		 pop	 rdi
  0005b	5d		 pop	 rbp
  0005c	c3		 ret	 0
?dtor$1@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA ENDP ; `strsprintf'::`1'::dtor$1
args$ = 40
len$ = 56
buffer$ = 72
retStr$ = 136
$T6 = 193
$T7 = 194
$T8 = 196
__$ArrayPad$ = 200
__$ReturnUdt$ = 224
format$ = 232
?dtor$2@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA PROC ; `strsprintf'::`1'::dtor$2
  0005d	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00062	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00067	55		 push	 rbp
  00068	57		 push	 rdi
  00069	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0006d	48 8b ea	 mov	 rbp, rdx
  00070	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR retStr$[rbp]
  00077	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0007c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00080	5f		 pop	 rdi
  00081	5d		 pop	 rbp
  00082	c3		 ret	 0
?dtor$2@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA ENDP ; `strsprintf'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
args$ = 40
len$ = 56
buffer$ = 72
retStr$ = 136
$T6 = 193
$T7 = 194
$T8 = 196
__$ArrayPad$ = 200
__$ReturnUdt$ = 224
format$ = 232
?dtor$0@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA PROC ; `strsprintf'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 85 c4 00 00
	00		 mov	 eax, DWORD PTR $T8[rbp]
  00019	83 e0 01	 and	 eax, 1
  0001c	85 c0		 test	 eax, eax
  0001e	74 13		 je	 SHORT $LN5@dtor$0
  00020	83 a5 c4 00 00
	00 fe		 and	 DWORD PTR $T8[rbp], -2
  00027	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0002e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$0:
  00033	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00037	5f		 pop	 rdi
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
?dtor$0@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA ENDP ; `strsprintf'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
args$ = 40
len$ = 56
buffer$ = 72
retStr$ = 136
$T6 = 193
$T7 = 194
$T8 = 196
__$ArrayPad$ = 200
__$ReturnUdt$ = 224
format$ = 232
?dtor$1@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA PROC ; `strsprintf'::`1'::dtor$1
  0003a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0003f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00044	55		 push	 rbp
  00045	57		 push	 rdi
  00046	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0004a	48 8b ea	 mov	 rbp, rdx
  0004d	48 8d 4d 48	 lea	 rcx, QWORD PTR buffer$[rbp]
  00051	e8 00 00 00 00	 call	 ??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ ; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
  00056	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0005a	5f		 pop	 rdi
  0005b	5d		 pop	 rbp
  0005c	c3		 ret	 0
?dtor$1@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA ENDP ; `strsprintf'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
args$ = 40
len$ = 56
buffer$ = 72
retStr$ = 136
$T6 = 193
$T7 = 194
$T8 = 196
__$ArrayPad$ = 200
__$ReturnUdt$ = 224
format$ = 232
?dtor$2@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA PROC ; `strsprintf'::`1'::dtor$2
  0005d	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00062	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00067	55		 push	 rbp
  00068	57		 push	 rdi
  00069	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0006d	48 8b ea	 mov	 rbp, rdx
  00070	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR retStr$[rbp]
  00077	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0007c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00080	5f		 pop	 rdi
  00081	5d		 pop	 rbp
  00082	c3		 ret	 0
?dtor$2@?0??strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ@4HA ENDP ; `strsprintf'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
tstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
wstr$ = 136
codepage$ = 144
?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z PROC ; wstring_to_tstring

; 159  : tstring wstring_to_tstring(const std::wstring& wstr, uint32_t codepage) {

$LN6:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 1c 00 00 00	 mov	 ecx, 28
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]
  0002b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00032	48 33 c4	 xor	 rax, rsp
  00035	48 89 44 24 68	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003a	c7 44 24 60 00
	00 00 00	 mov	 DWORD PTR $T4[rsp], 0

; 160  :     tstring tstr;

  00042	48 8d 4c 24 28	 lea	 rcx, QWORD PTR tstr$[rsp]
  00047	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0004c	90		 npad	 1

; 161  :     wstring_to_tstring(wstr.c_str(), tstr, codepage);

  0004d	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR wstr$[rsp]
  00055	e8 00 00 00 00	 call	 ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
  0005a	44 8b 84 24 90
	00 00 00	 mov	 r8d, DWORD PTR codepage$[rsp]
  00062	48 8d 54 24 28	 lea	 rdx, QWORD PTR tstr$[rsp]
  00067	48 8b c8	 mov	 rcx, rax
  0006a	e8 00 00 00 00	 call	 ?wstring_to_tstring@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; wstring_to_tstring

; 162  :     return tstr;

  0006f	48 8d 54 24 28	 lea	 rdx, QWORD PTR tstr$[rsp]
  00074	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0007c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00081	8b 44 24 60	 mov	 eax, DWORD PTR $T4[rsp]
  00085	83 c8 01	 or	 eax, 1
  00088	89 44 24 60	 mov	 DWORD PTR $T4[rsp], eax
  0008c	48 8d 4c 24 28	 lea	 rcx, QWORD PTR tstr$[rsp]
  00091	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00096	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 163  : }

  0009e	48 8b f8	 mov	 rdi, rax
  000a1	48 8b cc	 mov	 rcx, rsp
  000a4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z$rtcFrameData
  000ab	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000b0	48 8b c7	 mov	 rax, rdi
  000b3	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000b8	48 33 cc	 xor	 rcx, rsp
  000bb	e8 00 00 00 00	 call	 __security_check_cookie
  000c0	48 83 c4 70	 add	 rsp, 112		; 00000070H
  000c4	5f		 pop	 rdi
  000c5	c3		 ret	 0
  000c6	cc		 int	 3
?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z ENDP ; wstring_to_tstring
_TEXT	ENDS
text$x	SEGMENT
tstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
wstr$ = 136
codepage$ = 144
?dtor$0@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA PROC ; `wstring_to_tstring'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR tstr$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA ENDP ; `wstring_to_tstring'::`1'::dtor$0
tstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
wstr$ = 136
codepage$ = 144
?dtor$1@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA PROC ; `wstring_to_tstring'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00039	83 e0 01	 and	 eax, 1
  0003c	85 c0		 test	 eax, eax
  0003e	74 10		 je	 SHORT $LN5@dtor$1
  00040	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00044	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$1:
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA ENDP ; `wstring_to_tstring'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
wstr$ = 136
codepage$ = 144
?dtor$0@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA PROC ; `wstring_to_tstring'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR tstr$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA ENDP ; `wstring_to_tstring'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
wstr$ = 136
codepage$ = 144
?dtor$1@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA PROC ; `wstring_to_tstring'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00039	83 e0 01	 and	 eax, 1
  0003c	85 c0		 test	 eax, eax
  0003e	74 10		 je	 SHORT $LN5@dtor$1
  00040	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00044	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$1:
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA ENDP ; `wstring_to_tstring'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
tstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
wstr$ = 136
codepage$ = 144
?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z PROC ; wstring_to_tstring

; 150  : tstring wstring_to_tstring(const WCHAR *wstr, uint32_t codepage) {

$LN7:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 1c 00 00 00	 mov	 ecx, 28
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]
  0002b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00032	48 33 c4	 xor	 rax, rsp
  00035	48 89 44 24 68	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003a	c7 44 24 60 00
	00 00 00	 mov	 DWORD PTR $T4[rsp], 0

; 151  :     if (wstr == nullptr) {

  00042	48 83 bc 24 88
	00 00 00 00	 cmp	 QWORD PTR wstr$[rsp], 0
  0004b	75 2a		 jne	 SHORT $LN2@wstring_to

; 152  :         return _T("");

  0004d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG114422
  00054	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0005c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00061	90		 npad	 1
  00062	8b 44 24 60	 mov	 eax, DWORD PTR $T4[rsp]
  00066	83 c8 01	 or	 eax, 1
  00069	89 44 24 60	 mov	 DWORD PTR $T4[rsp], eax
  0006d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  00075	eb 54		 jmp	 SHORT $LN1@wstring_to
$LN2@wstring_to:

; 153  :     }
; 154  :     tstring tstr;

  00077	48 8d 4c 24 28	 lea	 rcx, QWORD PTR tstr$[rsp]
  0007c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00081	90		 npad	 1

; 155  :     wstring_to_tstring(wstr, tstr, codepage);

  00082	44 8b 84 24 90
	00 00 00	 mov	 r8d, DWORD PTR codepage$[rsp]
  0008a	48 8d 54 24 28	 lea	 rdx, QWORD PTR tstr$[rsp]
  0008f	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR wstr$[rsp]
  00097	e8 00 00 00 00	 call	 ?wstring_to_tstring@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; wstring_to_tstring

; 156  :     return tstr;

  0009c	48 8d 54 24 28	 lea	 rdx, QWORD PTR tstr$[rsp]
  000a1	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000a9	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000ae	8b 44 24 60	 mov	 eax, DWORD PTR $T4[rsp]
  000b2	83 c8 01	 or	 eax, 1
  000b5	89 44 24 60	 mov	 DWORD PTR $T4[rsp], eax
  000b9	48 8d 4c 24 28	 lea	 rcx, QWORD PTR tstr$[rsp]
  000be	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000c3	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@wstring_to:

; 157  : }

  000cb	48 8b f8	 mov	 rdi, rax
  000ce	48 8b cc	 mov	 rcx, rsp
  000d1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z$rtcFrameData
  000d8	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000dd	48 8b c7	 mov	 rax, rdi
  000e0	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000e5	48 33 cc	 xor	 rcx, rsp
  000e8	e8 00 00 00 00	 call	 __security_check_cookie
  000ed	48 83 c4 70	 add	 rsp, 112		; 00000070H
  000f1	5f		 pop	 rdi
  000f2	c3		 ret	 0
  000f3	cc		 int	 3
?wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z ENDP ; wstring_to_tstring
_TEXT	ENDS
text$x	SEGMENT
tstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
wstr$ = 136
codepage$ = 144
?dtor$0@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA PROC ; `wstring_to_tstring'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$0
  0001d	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00021	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$0:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$0@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA ENDP ; `wstring_to_tstring'::`1'::dtor$0
tstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
wstr$ = 136
codepage$ = 144
?dtor$1@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA PROC ; `wstring_to_tstring'::`1'::dtor$1
  00034	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00039	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0003e	55		 push	 rbp
  0003f	57		 push	 rdi
  00040	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00044	48 8b ea	 mov	 rbp, rdx
  00047	48 8d 4d 28	 lea	 rcx, QWORD PTR tstr$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA ENDP ; `wstring_to_tstring'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
wstr$ = 136
codepage$ = 144
?dtor$0@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA PROC ; `wstring_to_tstring'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$0
  0001d	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00021	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$0:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$0@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA ENDP ; `wstring_to_tstring'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
wstr$ = 136
codepage$ = 144
?dtor$1@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA PROC ; `wstring_to_tstring'::`1'::dtor$1
  00034	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00039	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0003e	55		 push	 rbp
  0003f	57		 push	 rdi
  00040	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00044	48 8b ea	 mov	 rbp, rdx
  00047	48 8d 4d 28	 lea	 rcx, QWORD PTR tstr$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??wstring_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA ENDP ; `wstring_to_tstring'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
wstr$ = 48
tstr$ = 56
codepage$ = 64
?wstring_to_tstring@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z PROC ; wstring_to_tstring

; 137  : unsigned int wstring_to_tstring(const WCHAR *wstr, tstring& tstr, uint32_t codepage) {

$LN4:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 138  :     if (wstr == nullptr) {

  00028	48 83 7c 24 30
	00		 cmp	 QWORD PTR wstr$[rsp], 0
  0002e	75 15		 jne	 SHORT $LN2@wstring_to

; 139  :         tstr = _T("");

  00030	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG114414
  00037	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tstr$[rsp]
  0003c	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

; 140  :         return 0;

  00041	33 c0		 xor	 eax, eax
  00043	eb 20		 jmp	 SHORT $LN1@wstring_to
$LN2@wstring_to:

; 141  :     }
; 142  : #if UNICODE
; 143  :     tstr = std::wstring(wstr);
; 144  : #else
; 145  :     return wstring_to_string(wstr, tstr, codepage);

  00045	44 8b 44 24 40	 mov	 r8d, DWORD PTR codepage$[rsp]
  0004a	48 8b 54 24 38	 mov	 rdx, QWORD PTR tstr$[rsp]
  0004f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR wstr$[rsp]
  00054	e8 00 00 00 00	 call	 ?wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; wstring_to_string
  00059	eb 0a		 jmp	 SHORT $LN1@wstring_to

; 146  : #endif
; 147  :     return (unsigned int)tstr.length();

  0005b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tstr$[rsp]
  00060	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
$LN1@wstring_to:

; 148  : }

  00065	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00069	5f		 pop	 rdi
  0006a	c3		 ret	 0
?wstring_to_tstring@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ENDP ; wstring_to_tstring
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
tstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
str$ = 136
codepage$ = 144
?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z PROC ; char_to_tstring

; 234  : tstring char_to_tstring(const std::string& str, uint32_t codepage) {

$LN6:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 1c 00 00 00	 mov	 ecx, 28
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]
  0002b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00032	48 33 c4	 xor	 rax, rsp
  00035	48 89 44 24 68	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003a	c7 44 24 60 00
	00 00 00	 mov	 DWORD PTR $T4[rsp], 0

; 235  :     tstring tstr;

  00042	48 8d 4c 24 28	 lea	 rcx, QWORD PTR tstr$[rsp]
  00047	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0004c	90		 npad	 1

; 236  :     char_to_tstring(tstr, str.c_str(), codepage);

  0004d	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR str$[rsp]
  00055	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0005a	44 8b 84 24 90
	00 00 00	 mov	 r8d, DWORD PTR codepage$[rsp]
  00062	48 8b d0	 mov	 rdx, rax
  00065	48 8d 4c 24 28	 lea	 rcx, QWORD PTR tstr$[rsp]
  0006a	e8 00 00 00 00	 call	 ?char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z ; char_to_tstring

; 237  :     return tstr;

  0006f	48 8d 54 24 28	 lea	 rdx, QWORD PTR tstr$[rsp]
  00074	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0007c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00081	8b 44 24 60	 mov	 eax, DWORD PTR $T4[rsp]
  00085	83 c8 01	 or	 eax, 1
  00088	89 44 24 60	 mov	 DWORD PTR $T4[rsp], eax
  0008c	48 8d 4c 24 28	 lea	 rcx, QWORD PTR tstr$[rsp]
  00091	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00096	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 238  : }

  0009e	48 8b f8	 mov	 rdi, rax
  000a1	48 8b cc	 mov	 rcx, rsp
  000a4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z$rtcFrameData
  000ab	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000b0	48 8b c7	 mov	 rax, rdi
  000b3	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000b8	48 33 cc	 xor	 rcx, rsp
  000bb	e8 00 00 00 00	 call	 __security_check_cookie
  000c0	48 83 c4 70	 add	 rsp, 112		; 00000070H
  000c4	5f		 pop	 rdi
  000c5	c3		 ret	 0
  000c6	cc		 int	 3
?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z ENDP ; char_to_tstring
_TEXT	ENDS
text$x	SEGMENT
tstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
str$ = 136
codepage$ = 144
?dtor$0@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA PROC ; `char_to_tstring'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR tstr$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA ENDP ; `char_to_tstring'::`1'::dtor$0
tstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
str$ = 136
codepage$ = 144
?dtor$1@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA PROC ; `char_to_tstring'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00039	83 e0 01	 and	 eax, 1
  0003c	85 c0		 test	 eax, eax
  0003e	74 10		 je	 SHORT $LN5@dtor$1
  00040	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00044	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$1:
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA ENDP ; `char_to_tstring'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
str$ = 136
codepage$ = 144
?dtor$0@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA PROC ; `char_to_tstring'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR tstr$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA ENDP ; `char_to_tstring'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
str$ = 136
codepage$ = 144
?dtor$1@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA PROC ; `char_to_tstring'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00039	83 e0 01	 and	 eax, 1
  0003c	85 c0		 test	 eax, eax
  0003e	74 10		 je	 SHORT $LN5@dtor$1
  00040	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00044	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$1:
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA ENDP ; `char_to_tstring'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
tstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
str$ = 136
codepage$ = 144
?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z PROC ; char_to_tstring

; 226  : tstring char_to_tstring(const char *str, uint32_t codepage) {

$LN7:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 1c 00 00 00	 mov	 ecx, 28
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]
  0002b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00032	48 33 c4	 xor	 rax, rsp
  00035	48 89 44 24 68	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003a	c7 44 24 60 00
	00 00 00	 mov	 DWORD PTR $T4[rsp], 0

; 227  :     if (str == nullptr) {

  00042	48 83 bc 24 88
	00 00 00 00	 cmp	 QWORD PTR str$[rsp], 0
  0004b	75 2a		 jne	 SHORT $LN2@char_to_ts

; 228  :         return _T("");

  0004d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG114829
  00054	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0005c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00061	90		 npad	 1
  00062	8b 44 24 60	 mov	 eax, DWORD PTR $T4[rsp]
  00066	83 c8 01	 or	 eax, 1
  00069	89 44 24 60	 mov	 DWORD PTR $T4[rsp], eax
  0006d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  00075	eb 54		 jmp	 SHORT $LN1@char_to_ts
$LN2@char_to_ts:

; 229  :     }
; 230  :     tstring tstr;

  00077	48 8d 4c 24 28	 lea	 rcx, QWORD PTR tstr$[rsp]
  0007c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00081	90		 npad	 1

; 231  :     char_to_tstring(tstr, str, codepage);

  00082	44 8b 84 24 90
	00 00 00	 mov	 r8d, DWORD PTR codepage$[rsp]
  0008a	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR str$[rsp]
  00092	48 8d 4c 24 28	 lea	 rcx, QWORD PTR tstr$[rsp]
  00097	e8 00 00 00 00	 call	 ?char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z ; char_to_tstring

; 232  :     return tstr;

  0009c	48 8d 54 24 28	 lea	 rdx, QWORD PTR tstr$[rsp]
  000a1	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000a9	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000ae	8b 44 24 60	 mov	 eax, DWORD PTR $T4[rsp]
  000b2	83 c8 01	 or	 eax, 1
  000b5	89 44 24 60	 mov	 DWORD PTR $T4[rsp], eax
  000b9	48 8d 4c 24 28	 lea	 rcx, QWORD PTR tstr$[rsp]
  000be	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000c3	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@char_to_ts:

; 233  : }

  000cb	48 8b f8	 mov	 rdi, rax
  000ce	48 8b cc	 mov	 rcx, rsp
  000d1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z$rtcFrameData
  000d8	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000dd	48 8b c7	 mov	 rax, rdi
  000e0	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000e5	48 33 cc	 xor	 rcx, rsp
  000e8	e8 00 00 00 00	 call	 __security_check_cookie
  000ed	48 83 c4 70	 add	 rsp, 112		; 00000070H
  000f1	5f		 pop	 rdi
  000f2	c3		 ret	 0
  000f3	cc		 int	 3
?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z ENDP ; char_to_tstring
_TEXT	ENDS
text$x	SEGMENT
tstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
str$ = 136
codepage$ = 144
?dtor$0@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA PROC ; `char_to_tstring'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$0
  0001d	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00021	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$0:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$0@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA ENDP ; `char_to_tstring'::`1'::dtor$0
tstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
str$ = 136
codepage$ = 144
?dtor$1@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA PROC ; `char_to_tstring'::`1'::dtor$1
  00034	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00039	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0003e	55		 push	 rbp
  0003f	57		 push	 rdi
  00040	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00044	48 8b ea	 mov	 rbp, rdx
  00047	48 8d 4d 28	 lea	 rcx, QWORD PTR tstr$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA ENDP ; `char_to_tstring'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
str$ = 136
codepage$ = 144
?dtor$0@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA PROC ; `char_to_tstring'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$0
  0001d	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00021	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$0:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$0@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA ENDP ; `char_to_tstring'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
str$ = 136
codepage$ = 144
?dtor$1@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA PROC ; `char_to_tstring'::`1'::dtor$1
  00034	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00039	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0003e	55		 push	 rbp
  0003f	57		 push	 rdi
  00040	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00044	48 8b ea	 mov	 rbp, rdx
  00047	48 8d 4d 28	 lea	 rcx, QWORD PTR tstr$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA ENDP ; `char_to_tstring'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
$T1 = 32
$T2 = 72
$T3 = 120
$T4 = 128
tv95 = 136
tv85 = 144
tv77 = 152
tv128 = 160
tv90 = 168
__$ArrayPad$ = 176
tstr$ = 208
str$ = 216
codepage$ = 224
?char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z PROC ; char_to_tstring

; 217  : unsigned int char_to_tstring(tstring& tstr, const char *str, uint32_t codepage) {

$LN11:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec c0 00
	00 00		 sub	 rsp, 192		; 000000c0H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+208]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00040	c7 84 24 80 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T4[rsp], 0

; 218  : #if UNICODE
; 219  :     return char_to_wstring(tstr, str, codepage);
; 220  : #else
; 221  :     tstr = (str) ? std::string(str) : _T("");

  0004b	48 83 bc 24 d8
	00 00 00 00	 cmp	 QWORD PTR str$[rsp], 0
  00054	74 4d		 je	 SHORT $LN3@char_to_ts
  00056	48 8b 94 24 d8
	00 00 00	 mov	 rdx, QWORD PTR str$[rsp]
  0005e	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00063	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00068	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR tv95[rsp], rax
  00070	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR tv95[rsp]
  00078	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR tv85[rsp], rax
  00080	8b 84 24 80 00
	00 00		 mov	 eax, DWORD PTR $T4[rsp]
  00087	83 c8 01	 or	 eax, 1
  0008a	89 84 24 80 00
	00 00		 mov	 DWORD PTR $T4[rsp], eax
  00091	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR tv85[rsp]
  00099	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR tv77[rsp], rax
  000a1	eb 4a		 jmp	 SHORT $LN4@char_to_ts
$LN3@char_to_ts:
  000a3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG114821
  000aa	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T2[rsp]
  000af	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000b4	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR tv128[rsp], rax
  000bc	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR tv128[rsp]
  000c4	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR tv90[rsp], rax
  000cc	8b 84 24 80 00
	00 00		 mov	 eax, DWORD PTR $T4[rsp]
  000d3	83 c8 02	 or	 eax, 2
  000d6	89 84 24 80 00
	00 00		 mov	 DWORD PTR $T4[rsp], eax
  000dd	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR tv90[rsp]
  000e5	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR tv77[rsp], rax
$LN4@char_to_ts:
  000ed	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR tv77[rsp]
  000f5	48 89 44 24 78	 mov	 QWORD PTR $T3[rsp], rax
  000fa	48 8b 54 24 78	 mov	 rdx, QWORD PTR $T3[rsp]
  000ff	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR tstr$[rsp]
  00107	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
  0010c	90		 npad	 1
  0010d	8b 84 24 80 00
	00 00		 mov	 eax, DWORD PTR $T4[rsp]
  00114	83 e0 02	 and	 eax, 2
  00117	85 c0		 test	 eax, eax
  00119	74 13		 je	 SHORT $LN9@char_to_ts
  0011b	83 a4 24 80 00
	00 00 fd	 and	 DWORD PTR $T4[rsp], -3
  00123	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T2[rsp]
  00128	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0012d	90		 npad	 1
$LN9@char_to_ts:
  0012e	8b 84 24 80 00
	00 00		 mov	 eax, DWORD PTR $T4[rsp]
  00135	83 e0 01	 and	 eax, 1
  00138	85 c0		 test	 eax, eax
  0013a	74 12		 je	 SHORT $LN10@char_to_ts
  0013c	83 a4 24 80 00
	00 00 fe	 and	 DWORD PTR $T4[rsp], -2
  00144	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00149	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN10@char_to_ts:

; 222  :     return (unsigned int)tstr.length();

  0014e	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR tstr$[rsp]
  00156	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length

; 223  : #endif
; 224  : }

  0015b	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00163	48 33 cc	 xor	 rcx, rsp
  00166	e8 00 00 00 00	 call	 __security_check_cookie
  0016b	48 81 c4 c0 00
	00 00		 add	 rsp, 192		; 000000c0H
  00172	5f		 pop	 rdi
  00173	c3		 ret	 0
?char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z ENDP ; char_to_tstring
_TEXT	ENDS
text$x	SEGMENT
$T1 = 32
$T2 = 72
$T3 = 120
$T4 = 128
tv95 = 136
tv85 = 144
tv77 = 152
tv128 = 160
tv90 = 168
__$ArrayPad$ = 176
tstr$ = 208
str$ = 216
codepage$ = 224
?dtor$0@?0??char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA PROC ; `char_to_tstring'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 85 80 00 00
	00		 mov	 eax, DWORD PTR $T4[rbp]
  00019	83 e0 01	 and	 eax, 1
  0001c	85 c0		 test	 eax, eax
  0001e	74 10		 je	 SHORT $LN6@dtor$0
  00020	83 a5 80 00 00
	00 fe		 and	 DWORD PTR $T4[rbp], -2
  00027	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  0002b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@dtor$0:
  00030	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00034	5f		 pop	 rdi
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
?dtor$0@?0??char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA ENDP ; `char_to_tstring'::`1'::dtor$0
$T1 = 32
$T2 = 72
$T3 = 120
$T4 = 128
tv95 = 136
tv85 = 144
tv77 = 152
tv128 = 160
tv90 = 168
__$ArrayPad$ = 176
tstr$ = 208
str$ = 216
codepage$ = 224
?dtor$1@?0??char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA PROC ; `char_to_tstring'::`1'::dtor$1
  00037	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0003c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00041	55		 push	 rbp
  00042	57		 push	 rdi
  00043	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00047	48 8b ea	 mov	 rbp, rdx
  0004a	8b 85 80 00 00
	00		 mov	 eax, DWORD PTR $T4[rbp]
  00050	83 e0 02	 and	 eax, 2
  00053	85 c0		 test	 eax, eax
  00055	74 10		 je	 SHORT $LN8@dtor$1
  00057	83 a5 80 00 00
	00 fd		 and	 DWORD PTR $T4[rbp], -3
  0005e	48 8d 4d 48	 lea	 rcx, QWORD PTR $T2[rbp]
  00062	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@dtor$1:
  00067	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006b	5f		 pop	 rdi
  0006c	5d		 pop	 rbp
  0006d	c3		 ret	 0
?dtor$1@?0??char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA ENDP ; `char_to_tstring'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
$T1 = 32
$T2 = 72
$T3 = 120
$T4 = 128
tv95 = 136
tv85 = 144
tv77 = 152
tv128 = 160
tv90 = 168
__$ArrayPad$ = 176
tstr$ = 208
str$ = 216
codepage$ = 224
?dtor$0@?0??char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA PROC ; `char_to_tstring'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 85 80 00 00
	00		 mov	 eax, DWORD PTR $T4[rbp]
  00019	83 e0 01	 and	 eax, 1
  0001c	85 c0		 test	 eax, eax
  0001e	74 10		 je	 SHORT $LN6@dtor$0
  00020	83 a5 80 00 00
	00 fe		 and	 DWORD PTR $T4[rbp], -2
  00027	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  0002b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@dtor$0:
  00030	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00034	5f		 pop	 rdi
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
?dtor$0@?0??char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA ENDP ; `char_to_tstring'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
$T1 = 32
$T2 = 72
$T3 = 120
$T4 = 128
tv95 = 136
tv85 = 144
tv77 = 152
tv128 = 160
tv90 = 168
__$ArrayPad$ = 176
tstr$ = 208
str$ = 216
codepage$ = 224
?dtor$1@?0??char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA PROC ; `char_to_tstring'::`1'::dtor$1
  00037	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0003c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00041	55		 push	 rbp
  00042	57		 push	 rdi
  00043	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00047	48 8b ea	 mov	 rbp, rdx
  0004a	8b 85 80 00 00
	00		 mov	 eax, DWORD PTR $T4[rbp]
  00050	83 e0 02	 and	 eax, 2
  00053	85 c0		 test	 eax, eax
  00055	74 10		 je	 SHORT $LN8@dtor$1
  00057	83 a5 80 00 00
	00 fd		 and	 DWORD PTR $T4[rbp], -3
  0005e	48 8d 4d 48	 lea	 rcx, QWORD PTR $T2[rbp]
  00062	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@dtor$1:
  00067	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006b	5f		 pop	 rdi
  0006c	5d		 pop	 rbp
  0006d	c3		 ret	 0
?dtor$1@?0??char_to_tstring@@YAIAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA ENDP ; `char_to_tstring'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
str$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
tstr$ = 136
codepage$ = 144
?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z PROC ; tchar_to_string

; 131  : std::string tchar_to_string(const tstring& tstr, uint32_t codepage) {

$LN6:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 1c 00 00 00	 mov	 ecx, 28
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]
  0002b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00032	48 33 c4	 xor	 rax, rsp
  00035	48 89 44 24 68	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003a	c7 44 24 60 00
	00 00 00	 mov	 DWORD PTR $T4[rsp], 0

; 132  :     std::string str;

  00042	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00047	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0004c	90		 npad	 1

; 133  :     tchar_to_string(tstr.c_str(), str, codepage);

  0004d	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR tstr$[rsp]
  00055	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0005a	44 8b 84 24 90
	00 00 00	 mov	 r8d, DWORD PTR codepage$[rsp]
  00062	48 8d 54 24 28	 lea	 rdx, QWORD PTR str$[rsp]
  00067	48 8b c8	 mov	 rcx, rax
  0006a	e8 00 00 00 00	 call	 ?tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; tchar_to_string

; 134  :     return str;

  0006f	48 8d 54 24 28	 lea	 rdx, QWORD PTR str$[rsp]
  00074	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0007c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00081	8b 44 24 60	 mov	 eax, DWORD PTR $T4[rsp]
  00085	83 c8 01	 or	 eax, 1
  00088	89 44 24 60	 mov	 DWORD PTR $T4[rsp], eax
  0008c	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00091	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00096	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 135  : }

  0009e	48 8b f8	 mov	 rdi, rax
  000a1	48 8b cc	 mov	 rcx, rsp
  000a4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z$rtcFrameData
  000ab	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000b0	48 8b c7	 mov	 rax, rdi
  000b3	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000b8	48 33 cc	 xor	 rcx, rsp
  000bb	e8 00 00 00 00	 call	 __security_check_cookie
  000c0	48 83 c4 70	 add	 rsp, 112		; 00000070H
  000c4	5f		 pop	 rdi
  000c5	c3		 ret	 0
  000c6	cc		 int	 3
?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z ENDP ; tchar_to_string
_TEXT	ENDS
text$x	SEGMENT
str$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
tstr$ = 136
codepage$ = 144
?dtor$0@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA PROC ; `tchar_to_string'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR str$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA ENDP ; `tchar_to_string'::`1'::dtor$0
str$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
tstr$ = 136
codepage$ = 144
?dtor$1@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA PROC ; `tchar_to_string'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00039	83 e0 01	 and	 eax, 1
  0003c	85 c0		 test	 eax, eax
  0003e	74 10		 je	 SHORT $LN5@dtor$1
  00040	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00044	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$1:
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA ENDP ; `tchar_to_string'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
tstr$ = 136
codepage$ = 144
?dtor$0@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA PROC ; `tchar_to_string'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR str$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA ENDP ; `tchar_to_string'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
tstr$ = 136
codepage$ = 144
?dtor$1@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA PROC ; `tchar_to_string'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00039	83 e0 01	 and	 eax, 1
  0003c	85 c0		 test	 eax, eax
  0003e	74 10		 je	 SHORT $LN5@dtor$1
  00040	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00044	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$1:
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@I@Z@4HA ENDP ; `tchar_to_string'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
str$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
tstr$ = 136
codepage$ = 144
?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z PROC ; tchar_to_string

; 107  : std::string tchar_to_string(const TCHAR *tstr, uint32_t codepage) {

$LN7:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 1c 00 00 00	 mov	 ecx, 28
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]
  0002b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00032	48 33 c4	 xor	 rax, rsp
  00035	48 89 44 24 68	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003a	c7 44 24 60 00
	00 00 00	 mov	 DWORD PTR $T4[rsp], 0

; 108  :     if (tstr == nullptr) {

  00042	48 83 bc 24 88
	00 00 00 00	 cmp	 QWORD PTR tstr$[rsp], 0
  0004b	75 2a		 jne	 SHORT $LN2@tchar_to_s

; 109  :         return "";

  0004d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG114385
  00054	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0005c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00061	90		 npad	 1
  00062	8b 44 24 60	 mov	 eax, DWORD PTR $T4[rsp]
  00066	83 c8 01	 or	 eax, 1
  00069	89 44 24 60	 mov	 DWORD PTR $T4[rsp], eax
  0006d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  00075	eb 54		 jmp	 SHORT $LN1@tchar_to_s
$LN2@tchar_to_s:

; 110  :     }
; 111  :     std::string str;

  00077	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  0007c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00081	90		 npad	 1

; 112  :     tchar_to_string(tstr, str, codepage);

  00082	44 8b 84 24 90
	00 00 00	 mov	 r8d, DWORD PTR codepage$[rsp]
  0008a	48 8d 54 24 28	 lea	 rdx, QWORD PTR str$[rsp]
  0008f	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR tstr$[rsp]
  00097	e8 00 00 00 00	 call	 ?tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; tchar_to_string

; 113  :     return str;

  0009c	48 8d 54 24 28	 lea	 rdx, QWORD PTR str$[rsp]
  000a1	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000a9	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000ae	8b 44 24 60	 mov	 eax, DWORD PTR $T4[rsp]
  000b2	83 c8 01	 or	 eax, 1
  000b5	89 44 24 60	 mov	 DWORD PTR $T4[rsp], eax
  000b9	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  000be	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000c3	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@tchar_to_s:

; 114  : }

  000cb	48 8b f8	 mov	 rdi, rax
  000ce	48 8b cc	 mov	 rcx, rsp
  000d1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z$rtcFrameData
  000d8	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000dd	48 8b c7	 mov	 rax, rdi
  000e0	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000e5	48 33 cc	 xor	 rcx, rsp
  000e8	e8 00 00 00 00	 call	 __security_check_cookie
  000ed	48 83 c4 70	 add	 rsp, 112		; 00000070H
  000f1	5f		 pop	 rdi
  000f2	c3		 ret	 0
  000f3	cc		 int	 3
?tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z ENDP ; tchar_to_string
_TEXT	ENDS
text$x	SEGMENT
str$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
tstr$ = 136
codepage$ = 144
?dtor$0@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA PROC ; `tchar_to_string'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$0
  0001d	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00021	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$0:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$0@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA ENDP ; `tchar_to_string'::`1'::dtor$0
str$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
tstr$ = 136
codepage$ = 144
?dtor$1@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA PROC ; `tchar_to_string'::`1'::dtor$1
  00034	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00039	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0003e	55		 push	 rbp
  0003f	57		 push	 rdi
  00040	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00044	48 8b ea	 mov	 rbp, rdx
  00047	48 8d 4d 28	 lea	 rcx, QWORD PTR str$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA ENDP ; `tchar_to_string'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
tstr$ = 136
codepage$ = 144
?dtor$0@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA PROC ; `tchar_to_string'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$0
  0001d	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00021	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$0:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$0@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA ENDP ; `tchar_to_string'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
tstr$ = 136
codepage$ = 144
?dtor$1@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA PROC ; `tchar_to_string'::`1'::dtor$1
  00034	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00039	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0003e	55		 push	 rbp
  0003f	57		 push	 rdi
  00040	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00044	48 8b ea	 mov	 rbp, rdx
  00047	48 8d 4d 28	 lea	 rcx, QWORD PTR str$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??tchar_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z@4HA ENDP ; `tchar_to_string'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
$T1 = 32
$T2 = 72
$T3 = 120
$T4 = 128
tv95 = 136
tv85 = 144
tv77 = 152
tv128 = 160
tv90 = 168
__$ArrayPad$ = 176
tstr$ = 208
str$ = 216
codepage$ = 224
?tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z PROC ; tchar_to_string

; 98   : unsigned int tchar_to_string(const TCHAR *tstr, std::string& str, uint32_t codepage) {

$LN11:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec c0 00
	00 00		 sub	 rsp, 192		; 000000c0H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+208]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00040	c7 84 24 80 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T4[rsp], 0

; 99   : #if UNICODE
; 100  :     return wstring_to_string(tstr, str, codepage);
; 101  : #else
; 102  :     str = (tstr) ? std::string(tstr) : "";

  0004b	48 83 bc 24 d0
	00 00 00 00	 cmp	 QWORD PTR tstr$[rsp], 0
  00054	74 4d		 je	 SHORT $LN3@tchar_to_s
  00056	48 8b 94 24 d0
	00 00 00	 mov	 rdx, QWORD PTR tstr$[rsp]
  0005e	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00063	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00068	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR tv95[rsp], rax
  00070	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR tv95[rsp]
  00078	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR tv85[rsp], rax
  00080	8b 84 24 80 00
	00 00		 mov	 eax, DWORD PTR $T4[rsp]
  00087	83 c8 01	 or	 eax, 1
  0008a	89 84 24 80 00
	00 00		 mov	 DWORD PTR $T4[rsp], eax
  00091	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR tv85[rsp]
  00099	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR tv77[rsp], rax
  000a1	eb 4a		 jmp	 SHORT $LN4@tchar_to_s
$LN3@tchar_to_s:
  000a3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG114377
  000aa	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T2[rsp]
  000af	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000b4	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR tv128[rsp], rax
  000bc	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR tv128[rsp]
  000c4	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR tv90[rsp], rax
  000cc	8b 84 24 80 00
	00 00		 mov	 eax, DWORD PTR $T4[rsp]
  000d3	83 c8 02	 or	 eax, 2
  000d6	89 84 24 80 00
	00 00		 mov	 DWORD PTR $T4[rsp], eax
  000dd	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR tv90[rsp]
  000e5	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR tv77[rsp], rax
$LN4@tchar_to_s:
  000ed	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR tv77[rsp]
  000f5	48 89 44 24 78	 mov	 QWORD PTR $T3[rsp], rax
  000fa	48 8b 54 24 78	 mov	 rdx, QWORD PTR $T3[rsp]
  000ff	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR str$[rsp]
  00107	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
  0010c	90		 npad	 1
  0010d	8b 84 24 80 00
	00 00		 mov	 eax, DWORD PTR $T4[rsp]
  00114	83 e0 02	 and	 eax, 2
  00117	85 c0		 test	 eax, eax
  00119	74 13		 je	 SHORT $LN9@tchar_to_s
  0011b	83 a4 24 80 00
	00 00 fd	 and	 DWORD PTR $T4[rsp], -3
  00123	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T2[rsp]
  00128	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0012d	90		 npad	 1
$LN9@tchar_to_s:
  0012e	8b 84 24 80 00
	00 00		 mov	 eax, DWORD PTR $T4[rsp]
  00135	83 e0 01	 and	 eax, 1
  00138	85 c0		 test	 eax, eax
  0013a	74 12		 je	 SHORT $LN10@tchar_to_s
  0013c	83 a4 24 80 00
	00 00 fe	 and	 DWORD PTR $T4[rsp], -2
  00144	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00149	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN10@tchar_to_s:

; 103  :     return (unsigned int)str.length();

  0014e	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR str$[rsp]
  00156	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length

; 104  : #endif
; 105  : }

  0015b	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00163	48 33 cc	 xor	 rcx, rsp
  00166	e8 00 00 00 00	 call	 __security_check_cookie
  0016b	48 81 c4 c0 00
	00 00		 add	 rsp, 192		; 000000c0H
  00172	5f		 pop	 rdi
  00173	c3		 ret	 0
?tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ENDP ; tchar_to_string
_TEXT	ENDS
text$x	SEGMENT
$T1 = 32
$T2 = 72
$T3 = 120
$T4 = 128
tv95 = 136
tv85 = 144
tv77 = 152
tv128 = 160
tv90 = 168
__$ArrayPad$ = 176
tstr$ = 208
str$ = 216
codepage$ = 224
?dtor$0@?0??tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA PROC ; `tchar_to_string'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 85 80 00 00
	00		 mov	 eax, DWORD PTR $T4[rbp]
  00019	83 e0 01	 and	 eax, 1
  0001c	85 c0		 test	 eax, eax
  0001e	74 10		 je	 SHORT $LN6@dtor$0
  00020	83 a5 80 00 00
	00 fe		 and	 DWORD PTR $T4[rbp], -2
  00027	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  0002b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@dtor$0:
  00030	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00034	5f		 pop	 rdi
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
?dtor$0@?0??tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA ENDP ; `tchar_to_string'::`1'::dtor$0
$T1 = 32
$T2 = 72
$T3 = 120
$T4 = 128
tv95 = 136
tv85 = 144
tv77 = 152
tv128 = 160
tv90 = 168
__$ArrayPad$ = 176
tstr$ = 208
str$ = 216
codepage$ = 224
?dtor$1@?0??tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA PROC ; `tchar_to_string'::`1'::dtor$1
  00037	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0003c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00041	55		 push	 rbp
  00042	57		 push	 rdi
  00043	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00047	48 8b ea	 mov	 rbp, rdx
  0004a	8b 85 80 00 00
	00		 mov	 eax, DWORD PTR $T4[rbp]
  00050	83 e0 02	 and	 eax, 2
  00053	85 c0		 test	 eax, eax
  00055	74 10		 je	 SHORT $LN8@dtor$1
  00057	83 a5 80 00 00
	00 fd		 and	 DWORD PTR $T4[rbp], -3
  0005e	48 8d 4d 48	 lea	 rcx, QWORD PTR $T2[rbp]
  00062	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@dtor$1:
  00067	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006b	5f		 pop	 rdi
  0006c	5d		 pop	 rbp
  0006d	c3		 ret	 0
?dtor$1@?0??tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA ENDP ; `tchar_to_string'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
$T1 = 32
$T2 = 72
$T3 = 120
$T4 = 128
tv95 = 136
tv85 = 144
tv77 = 152
tv128 = 160
tv90 = 168
__$ArrayPad$ = 176
tstr$ = 208
str$ = 216
codepage$ = 224
?dtor$0@?0??tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA PROC ; `tchar_to_string'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 85 80 00 00
	00		 mov	 eax, DWORD PTR $T4[rbp]
  00019	83 e0 01	 and	 eax, 1
  0001c	85 c0		 test	 eax, eax
  0001e	74 10		 je	 SHORT $LN6@dtor$0
  00020	83 a5 80 00 00
	00 fe		 and	 DWORD PTR $T4[rbp], -2
  00027	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  0002b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@dtor$0:
  00030	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00034	5f		 pop	 rdi
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
?dtor$0@?0??tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA ENDP ; `tchar_to_string'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
$T1 = 32
$T2 = 72
$T3 = 120
$T4 = 128
tv95 = 136
tv85 = 144
tv77 = 152
tv128 = 160
tv90 = 168
__$ArrayPad$ = 176
tstr$ = 208
str$ = 216
codepage$ = 224
?dtor$1@?0??tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA PROC ; `tchar_to_string'::`1'::dtor$1
  00037	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0003c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00041	55		 push	 rbp
  00042	57		 push	 rdi
  00043	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00047	48 8b ea	 mov	 rbp, rdx
  0004a	8b 85 80 00 00
	00		 mov	 eax, DWORD PTR $T4[rbp]
  00050	83 e0 02	 and	 eax, 2
  00053	85 c0		 test	 eax, eax
  00055	74 10		 je	 SHORT $LN8@dtor$1
  00057	83 a5 80 00 00
	00 fd		 and	 DWORD PTR $T4[rbp], -3
  0005e	48 8d 4d 48	 lea	 rcx, QWORD PTR $T2[rbp]
  00062	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@dtor$1:
  00067	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006b	5f		 pop	 rdi
  0006c	5d		 pop	 rbp
  0006d	c3		 ret	 0
?dtor$1@?0??tchar_to_string@@YAIPEBDAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA ENDP ; `tchar_to_string'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
$T1 = 32
$T2 = 80
tv66 = 88
tv84 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
tstr$ = 136
codepage$ = 144
?tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z PROC ; tchar_to_wstring

; 124  : std::wstring tchar_to_wstring(const TCHAR *tstr, uint32_t codepage) {

$LN7:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 1c 00 00 00	 mov	 ecx, 28
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]
  0002b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00032	48 33 c4	 xor	 rax, rsp
  00035	48 89 44 24 68	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003a	c7 44 24 50 00
	00 00 00	 mov	 DWORD PTR $T2[rsp], 0

; 125  :     if (tstr == nullptr) {

  00042	48 83 bc 24 88
	00 00 00 00	 cmp	 QWORD PTR tstr$[rsp], 0
  0004b	75 2a		 jne	 SHORT $LN2@tchar_to_w

; 126  :         return L"";

  0004d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG114400
  00054	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0005c	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00061	90		 npad	 1
  00062	8b 44 24 50	 mov	 eax, DWORD PTR $T2[rsp]
  00066	83 c8 01	 or	 eax, 1
  00069	89 44 24 50	 mov	 DWORD PTR $T2[rsp], eax
  0006d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  00075	eb 58		 jmp	 SHORT $LN1@tchar_to_w
$LN2@tchar_to_w:

; 127  :     }
; 128  :     return tchar_to_wstring(tstring(tstr), codepage);

  00077	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR tstr$[rsp]
  0007f	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00084	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00089	48 89 44 24 58	 mov	 QWORD PTR tv66[rsp], rax
  0008e	48 8b 44 24 58	 mov	 rax, QWORD PTR tv66[rsp]
  00093	48 89 44 24 60	 mov	 QWORD PTR tv84[rsp], rax
  00098	44 8b 84 24 90
	00 00 00	 mov	 r8d, DWORD PTR codepage$[rsp]
  000a0	48 8b 54 24 60	 mov	 rdx, QWORD PTR tv84[rsp]
  000a5	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000ad	e8 00 00 00 00	 call	 ?tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; tchar_to_wstring
  000b2	8b 44 24 50	 mov	 eax, DWORD PTR $T2[rsp]
  000b6	83 c8 01	 or	 eax, 1
  000b9	89 44 24 50	 mov	 DWORD PTR $T2[rsp], eax
  000bd	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  000c2	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000c7	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@tchar_to_w:

; 129  : }

  000cf	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000d4	48 33 cc	 xor	 rcx, rsp
  000d7	e8 00 00 00 00	 call	 __security_check_cookie
  000dc	48 83 c4 70	 add	 rsp, 112		; 00000070H
  000e0	5f		 pop	 rdi
  000e1	c3		 ret	 0
  000e2	cc		 int	 3
?tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z ENDP ; tchar_to_wstring
_TEXT	ENDS
text$x	SEGMENT
$T1 = 32
$T2 = 80
tv66 = 88
tv84 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
tstr$ = 136
codepage$ = 144
?dtor$0@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA PROC ; `tchar_to_wstring'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 50	 mov	 eax, DWORD PTR $T2[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$0
  0001d	83 65 50 fe	 and	 DWORD PTR $T2[rbp], -2
  00021	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN5@dtor$0:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$0@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA ENDP ; `tchar_to_wstring'::`1'::dtor$0
$T1 = 32
$T2 = 80
tv66 = 88
tv84 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
tstr$ = 136
codepage$ = 144
?dtor$1@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA PROC ; `tchar_to_wstring'::`1'::dtor$1
  00034	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00039	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0003e	55		 push	 rbp
  0003f	57		 push	 rdi
  00040	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00044	48 8b ea	 mov	 rbp, rdx
  00047	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA ENDP ; `tchar_to_wstring'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
$T1 = 32
$T2 = 80
tv66 = 88
tv84 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
tstr$ = 136
codepage$ = 144
?dtor$0@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA PROC ; `tchar_to_wstring'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 50	 mov	 eax, DWORD PTR $T2[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$0
  0001d	83 65 50 fe	 and	 DWORD PTR $T2[rbp], -2
  00021	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN5@dtor$0:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$0@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA ENDP ; `tchar_to_wstring'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
$T1 = 32
$T2 = 80
tv66 = 88
tv84 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
tstr$ = 136
codepage$ = 144
?dtor$1@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA PROC ; `tchar_to_wstring'::`1'::dtor$1
  00034	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00039	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0003e	55		 push	 rbp
  0003f	57		 push	 rdi
  00040	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00044	48 8b ea	 mov	 rbp, rdx
  00047	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA ENDP ; `tchar_to_wstring'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
tstr$ = 72
codepage$ = 80
?tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; tchar_to_wstring

; 116  : std::wstring tchar_to_wstring(const tstring& tstr, uint32_t codepage) {

$LN5:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00028	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 117  : #if UNICODE
; 118  :     return std::wstring(tstr);
; 119  : #else
; 120  :     return char_to_wstring(tstr, codepage);

  00030	44 8b 44 24 50	 mov	 r8d, DWORD PTR codepage$[rsp]
  00035	48 8b 54 24 48	 mov	 rdx, QWORD PTR tstr$[rsp]
  0003a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0003f	e8 00 00 00 00	 call	 ?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; char_to_wstring
  00044	90		 npad	 1
  00045	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  00049	83 c8 01	 or	 eax, 1
  0004c	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  00050	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 121  : #endif
; 122  : }

  00055	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
  0005b	cc		 int	 3
?tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; tchar_to_wstring
_TEXT	ENDS
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
tstr$ = 72
codepage$ = 80
?dtor$0@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA PROC ; `tchar_to_wstring'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA ENDP ; `tchar_to_wstring'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
tstr$ = 72
codepage$ = 80
?dtor$0@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA PROC ; `tchar_to_wstring'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??tchar_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA ENDP ; `tchar_to_wstring'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
exePath$ = 48
$T4 = 1080
$T5 = 1120
$T6 = 1176
tv93 = 1184
tv86 = 1192
tv94 = 1200
tv88 = 1208
__$ArrayPad$ = 1216
__$ReturnUdt$ = 1248
?getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; getExeDir

; 602  : tstring getExeDir() {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 81 ec d0 04
	00 00		 sub	 rsp, 1232		; 000004d0H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 34 01 00 00	 mov	 ecx, 308		; 00000134H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	48 8b 8c 24 e0
	04 00 00	 mov	 rcx, QWORD PTR [rsp+1248]
  00024	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002b	48 33 c4	 xor	 rax, rsp
  0002e	48 89 84 24 c0
	04 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00036	c7 84 24 98 04
	00 00 00 00 00
	00		 mov	 DWORD PTR $T6[rsp], 0

; 603  :     TCHAR exePath[1024];
; 604  :     memset(exePath, 0, sizeof(exePath));

  00041	41 b8 00 04 00
	00		 mov	 r8d, 1024		; 00000400H
  00047	33 d2		 xor	 edx, edx
  00049	48 8d 4c 24 30	 lea	 rcx, QWORD PTR exePath$[rsp]
  0004e	e8 00 00 00 00	 call	 memset

; 605  :     GetModuleFileName(NULL, exePath, _countof(exePath));

  00053	41 b8 00 04 00
	00		 mov	 r8d, 1024		; 00000400H
  00059	48 8d 54 24 30	 lea	 rdx, QWORD PTR exePath$[rsp]
  0005e	33 c9		 xor	 ecx, ecx
  00060	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetModuleFileNameA

; 606  :     return PathRemoveFileSpecFixed(tstring(exePath)).second;

  00066	48 8d 54 24 30	 lea	 rdx, QWORD PTR exePath$[rsp]
  0006b	48 8d 8c 24 38
	04 00 00	 lea	 rcx, QWORD PTR $T4[rsp]
  00073	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00078	48 89 84 24 a0
	04 00 00	 mov	 QWORD PTR tv93[rsp], rax
  00080	48 8b 84 24 a0
	04 00 00	 mov	 rax, QWORD PTR tv93[rsp]
  00088	48 89 84 24 a8
	04 00 00	 mov	 QWORD PTR tv86[rsp], rax
  00090	48 8b 94 24 a8
	04 00 00	 mov	 rdx, QWORD PTR tv86[rsp]
  00098	48 8d 8c 24 60
	04 00 00	 lea	 rcx, QWORD PTR $T5[rsp]
  000a0	e8 00 00 00 00	 call	 ?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; PathRemoveFileSpecFixed
  000a5	48 89 84 24 b0
	04 00 00	 mov	 QWORD PTR tv94[rsp], rax
  000ad	48 8b 84 24 b0
	04 00 00	 mov	 rax, QWORD PTR tv94[rsp]
  000b5	48 89 84 24 b8
	04 00 00	 mov	 QWORD PTR tv88[rsp], rax
  000bd	48 8b 84 24 b8
	04 00 00	 mov	 rax, QWORD PTR tv88[rsp]
  000c5	48 83 c0 08	 add	 rax, 8
  000c9	48 8b d0	 mov	 rdx, rax
  000cc	48 8b 8c 24 e0
	04 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000d4	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000d9	8b 84 24 98 04
	00 00		 mov	 eax, DWORD PTR $T6[rsp]
  000e0	83 c8 01	 or	 eax, 1
  000e3	89 84 24 98 04
	00 00		 mov	 DWORD PTR $T6[rsp], eax
  000ea	48 8d 8c 24 60
	04 00 00	 lea	 rcx, QWORD PTR $T5[rsp]
  000f2	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
  000f7	90		 npad	 1
  000f8	48 8d 8c 24 38
	04 00 00	 lea	 rcx, QWORD PTR $T4[rsp]
  00100	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00105	48 8b 84 24 e0
	04 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 607  : }

  0010d	48 8b f8	 mov	 rdi, rax
  00110	48 8b cc	 mov	 rcx, rsp
  00113	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$rtcFrameData
  0011a	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0011f	48 8b c7	 mov	 rax, rdi
  00122	48 8b 8c 24 c0
	04 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0012a	48 33 cc	 xor	 rcx, rsp
  0012d	e8 00 00 00 00	 call	 __security_check_cookie
  00132	48 81 c4 d0 04
	00 00		 add	 rsp, 1232		; 000004d0H
  00139	5f		 pop	 rdi
  0013a	c3		 ret	 0
  0013b	cc		 int	 3
?getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; getExeDir
_TEXT	ENDS
text$x	SEGMENT
exePath$ = 48
$T4 = 1080
$T5 = 1120
$T6 = 1176
tv93 = 1184
tv86 = 1192
tv94 = 1200
tv88 = 1208
__$ArrayPad$ = 1216
__$ReturnUdt$ = 1248
?dtor$0@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `getExeDir'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d 38 04
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `getExeDir'::`1'::dtor$0
exePath$ = 48
$T4 = 1080
$T5 = 1120
$T6 = 1176
tv93 = 1184
tv86 = 1192
tv94 = 1200
tv88 = 1208
__$ArrayPad$ = 1216
__$ReturnUdt$ = 1248
?dtor$1@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `getExeDir'::`1'::dtor$1
  00026	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00030	55		 push	 rbp
  00031	57		 push	 rdi
  00032	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00036	48 8b ea	 mov	 rbp, rdx
  00039	48 8d 8d 60 04
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00040	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
  00045	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?dtor$1@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `getExeDir'::`1'::dtor$1
exePath$ = 48
$T4 = 1080
$T5 = 1120
$T6 = 1176
tv93 = 1184
tv86 = 1192
tv94 = 1200
tv88 = 1208
__$ArrayPad$ = 1216
__$ReturnUdt$ = 1248
?dtor$2@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `getExeDir'::`1'::dtor$2
  0004c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00051	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00056	55		 push	 rbp
  00057	57		 push	 rdi
  00058	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005c	48 8b ea	 mov	 rbp, rdx
  0005f	8b 85 98 04 00
	00		 mov	 eax, DWORD PTR $T6[rbp]
  00065	83 e0 01	 and	 eax, 1
  00068	85 c0		 test	 eax, eax
  0006a	74 13		 je	 SHORT $LN6@dtor$2
  0006c	83 a5 98 04 00
	00 fe		 and	 DWORD PTR $T6[rbp], -2
  00073	48 8b 8d e0 04
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0007a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@dtor$2:
  0007f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00083	5f		 pop	 rdi
  00084	5d		 pop	 rbp
  00085	c3		 ret	 0
?dtor$2@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `getExeDir'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
exePath$ = 48
$T4 = 1080
$T5 = 1120
$T6 = 1176
tv93 = 1184
tv86 = 1192
tv94 = 1200
tv88 = 1208
__$ArrayPad$ = 1216
__$ReturnUdt$ = 1248
?dtor$0@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `getExeDir'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d 38 04
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `getExeDir'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
exePath$ = 48
$T4 = 1080
$T5 = 1120
$T6 = 1176
tv93 = 1184
tv86 = 1192
tv94 = 1200
tv88 = 1208
__$ArrayPad$ = 1216
__$ReturnUdt$ = 1248
?dtor$1@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `getExeDir'::`1'::dtor$1
  00026	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00030	55		 push	 rbp
  00031	57		 push	 rdi
  00032	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00036	48 8b ea	 mov	 rbp, rdx
  00039	48 8d 8d 60 04
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00040	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAA@XZ
  00045	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?dtor$1@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `getExeDir'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
exePath$ = 48
$T4 = 1080
$T5 = 1120
$T6 = 1176
tv93 = 1184
tv86 = 1192
tv94 = 1200
tv88 = 1208
__$ArrayPad$ = 1216
__$ReturnUdt$ = 1248
?dtor$2@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA PROC ; `getExeDir'::`1'::dtor$2
  0004c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00051	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00056	55		 push	 rbp
  00057	57		 push	 rdi
  00058	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005c	48 8b ea	 mov	 rbp, rdx
  0005f	8b 85 98 04 00
	00		 mov	 eax, DWORD PTR $T6[rbp]
  00065	83 e0 01	 and	 eax, 1
  00068	85 c0		 test	 eax, eax
  0006a	74 13		 je	 SHORT $LN6@dtor$2
  0006c	83 a5 98 04 00
	00 fe		 and	 DWORD PTR $T6[rbp], -2
  00073	48 8b 8d e0 04
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0007a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@dtor$2:
  0007f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00083	5f		 pop	 rdi
  00084	5d		 pop	 rbp
  00085	c3		 ret	 0
?dtor$2@?0??getExeDir@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ@4HA ENDP ; `getExeDir'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
list$ = 40
buf$ = 112
$T7 = 1144
win32fd$ = 1200
hFind$ = 1528
buf2$8 = 1552
$T9 = 2584
$T10 = 2624
$T11 = 2664
$T12 = 2712
$T13 = 2744
tv69 = 2752
tv65 = 2760
tv177 = 2768
tv138 = 2776
tv185 = 2784
tv86 = 2792
tv187 = 2800
__$ArrayPad$ = 2808
__$ReturnUdt$ = 2832
pattern$ = 2840
dir$ = 2848
?get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC ; get_file_list

; 573  : std::vector<tstring> get_file_list(const tstring& pattern, const tstring& dir) {

$LN17:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 00 0b
	00 00		 sub	 rsp, 2816		; 00000b00H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 c0 02 00 00	 mov	 ecx, 704		; 000002c0H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 10
	0b 00 00	 mov	 rcx, QWORD PTR [rsp+2832]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 84 24 f8
	0a 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00040	c7 84 24 b8 0a
	00 00 00 00 00
	00		 mov	 DWORD PTR $T13[rsp], 0

; 574  :     std::vector<tstring> list;

  0004b	48 8d 4c 24 28	 lea	 rcx, QWORD PTR list$[rsp]
  00050	e8 00 00 00 00	 call	 ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00055	90		 npad	 1

; 575  : 
; 576  :     TCHAR buf[1024];
; 577  :     PathCombine(buf, GetFullPath(dir.c_str()).c_str(), pattern.c_str());

  00056	48 8b 8c 24 18
	0b 00 00	 mov	 rcx, QWORD PTR pattern$[rsp]
  0005e	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00063	48 89 84 24 c0
	0a 00 00	 mov	 QWORD PTR tv69[rsp], rax
  0006b	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR dir$[rsp]
  00073	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00078	48 8b d0	 mov	 rdx, rax
  0007b	48 8d 8c 24 78
	04 00 00	 lea	 rcx, QWORD PTR $T7[rsp]
  00083	e8 00 00 00 00	 call	 ?GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ; GetFullPath
  00088	48 89 84 24 c8
	0a 00 00	 mov	 QWORD PTR tv65[rsp], rax
  00090	48 8b 84 24 c8
	0a 00 00	 mov	 rax, QWORD PTR tv65[rsp]
  00098	48 89 84 24 d0
	0a 00 00	 mov	 QWORD PTR tv177[rsp], rax
  000a0	48 8b 8c 24 d0
	0a 00 00	 mov	 rcx, QWORD PTR tv177[rsp]
  000a8	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  000ad	48 8b 8c 24 c0
	0a 00 00	 mov	 rcx, QWORD PTR tv69[rsp]
  000b5	4c 8b c1	 mov	 r8, rcx
  000b8	48 8b d0	 mov	 rdx, rax
  000bb	48 8d 4c 24 70	 lea	 rcx, QWORD PTR buf$[rsp]
  000c0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathCombineA
  000c6	90		 npad	 1
  000c7	48 8d 8c 24 78
	04 00 00	 lea	 rcx, QWORD PTR $T7[rsp]
  000cf	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 578  : 
; 579  :     WIN32_FIND_DATA win32fd;
; 580  :     HANDLE hFind = FindFirstFile(buf, &win32fd);

  000d4	48 8d 94 24 b0
	04 00 00	 lea	 rdx, QWORD PTR win32fd$[rsp]
  000dc	48 8d 4c 24 70	 lea	 rcx, QWORD PTR buf$[rsp]
  000e1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_FindFirstFileA
  000e7	48 89 84 24 f8
	05 00 00	 mov	 QWORD PTR hFind$[rsp], rax

; 581  : 
; 582  :     if (hFind == INVALID_HANDLE_VALUE) {

  000ef	48 83 bc 24 f8
	05 00 00 ff	 cmp	 QWORD PTR hFind$[rsp], -1
  000f8	75 3a		 jne	 SHORT $LN4@get_file_l

; 583  :         return list;

  000fa	48 8d 54 24 28	 lea	 rdx, QWORD PTR list$[rsp]
  000ff	48 8b 8c 24 10
	0b 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00107	e8 00 00 00 00	 call	 ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0010c	8b 84 24 b8 0a
	00 00		 mov	 eax, DWORD PTR $T13[rsp]
  00113	83 c8 01	 or	 eax, 1
  00116	89 84 24 b8 0a
	00 00		 mov	 DWORD PTR $T13[rsp], eax
  0011d	48 8d 4c 24 28	 lea	 rcx, QWORD PTR list$[rsp]
  00122	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00127	48 8b 84 24 10
	0b 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  0012f	e9 e8 01 00 00	 jmp	 $LN1@get_file_l
$LN4@get_file_l:

; 584  :     }
; 585  : 
; 586  :     do {
; 587  :         if ((win32fd.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY)
; 588  :             && _tcscmp(win32fd.cFileName, _T("..")) !=0
; 589  :             && _tcscmp(win32fd.cFileName, _T(".")) != 0) {

  00134	8b 84 24 b0 04
	00 00		 mov	 eax, DWORD PTR win32fd$[rsp]
  0013b	83 e0 10	 and	 eax, 16
  0013e	85 c0		 test	 eax, eax
  00140	0f 84 dc 00 00
	00		 je	 $LN6@get_file_l
  00146	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117235
  0014d	48 8d 8c 24 dc
	04 00 00	 lea	 rcx, QWORD PTR win32fd$[rsp+44]
  00155	e8 00 00 00 00	 call	 _tcscmp
  0015a	85 c0		 test	 eax, eax
  0015c	0f 84 c0 00 00
	00		 je	 $LN6@get_file_l
  00162	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117236
  00169	48 8d 8c 24 dc
	04 00 00	 lea	 rcx, QWORD PTR win32fd$[rsp+44]
  00171	e8 00 00 00 00	 call	 _tcscmp
  00176	85 c0		 test	 eax, eax
  00178	0f 84 a4 00 00
	00		 je	 $LN6@get_file_l

; 590  :             TCHAR buf2[1024];
; 591  :             PathCombine(buf2, dir.c_str(), win32fd.cFileName);

  0017e	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR dir$[rsp]
  00186	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0018b	4c 8d 84 24 dc
	04 00 00	 lea	 r8, QWORD PTR win32fd$[rsp+44]
  00193	48 8b d0	 mov	 rdx, rax
  00196	48 8d 8c 24 10
	06 00 00	 lea	 rcx, QWORD PTR buf2$8[rsp]
  0019e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathCombineA

; 592  :             vector_cat(list, get_file_list(pattern, buf2));

  001a4	48 8d 94 24 10
	06 00 00	 lea	 rdx, QWORD PTR buf2$8[rsp]
  001ac	48 8d 8c 24 18
	0a 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  001b4	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  001b9	90		 npad	 1
  001ba	4c 8d 84 24 18
	0a 00 00	 lea	 r8, QWORD PTR $T9[rsp]
  001c2	48 8b 94 24 18
	0b 00 00	 mov	 rdx, QWORD PTR pattern$[rsp]
  001ca	48 8d 8c 24 98
	0a 00 00	 lea	 rcx, QWORD PTR $T12[rsp]
  001d2	e8 00 00 00 00	 call	 ?get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; get_file_list
  001d7	48 89 84 24 d8
	0a 00 00	 mov	 QWORD PTR tv138[rsp], rax
  001df	48 8b 84 24 d8
	0a 00 00	 mov	 rax, QWORD PTR tv138[rsp]
  001e7	48 89 84 24 e0
	0a 00 00	 mov	 QWORD PTR tv185[rsp], rax
  001ef	48 8b 94 24 e0
	0a 00 00	 mov	 rdx, QWORD PTR tv185[rsp]
  001f7	48 8d 4c 24 28	 lea	 rcx, QWORD PTR list$[rsp]
  001fc	e8 00 00 00 00	 call	 ??$vector_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@YAXAEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV01@@Z ; vector_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00201	90		 npad	 1
  00202	48 8d 8c 24 98
	0a 00 00	 lea	 rcx, QWORD PTR $T12[rsp]
  0020a	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0020f	90		 npad	 1
  00210	48 8d 8c 24 18
	0a 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  00218	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 593  :         } else {

  0021d	e9 99 00 00 00	 jmp	 $LN7@get_file_l
$LN6@get_file_l:

; 594  :             PathCombine(buf, GetFullPath(dir.c_str()).c_str(), win32fd.cFileName);

  00222	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR dir$[rsp]
  0022a	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0022f	48 8b d0	 mov	 rdx, rax
  00232	48 8d 8c 24 40
	0a 00 00	 lea	 rcx, QWORD PTR $T10[rsp]
  0023a	e8 00 00 00 00	 call	 ?GetFullPath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ; GetFullPath
  0023f	48 89 84 24 e8
	0a 00 00	 mov	 QWORD PTR tv86[rsp], rax
  00247	48 8b 84 24 e8
	0a 00 00	 mov	 rax, QWORD PTR tv86[rsp]
  0024f	48 89 84 24 f0
	0a 00 00	 mov	 QWORD PTR tv187[rsp], rax
  00257	48 8b 8c 24 f0
	0a 00 00	 mov	 rcx, QWORD PTR tv187[rsp]
  0025f	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00264	4c 8d 84 24 dc
	04 00 00	 lea	 r8, QWORD PTR win32fd$[rsp+44]
  0026c	48 8b d0	 mov	 rdx, rax
  0026f	48 8d 4c 24 70	 lea	 rcx, QWORD PTR buf$[rsp]
  00274	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathCombineA
  0027a	90		 npad	 1
  0027b	48 8d 8c 24 40
	0a 00 00	 lea	 rcx, QWORD PTR $T10[rsp]
  00283	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 595  :             list.push_back(buf);

  00288	48 8d 54 24 70	 lea	 rdx, QWORD PTR buf$[rsp]
  0028d	48 8d 8c 24 68
	0a 00 00	 lea	 rcx, QWORD PTR $T11[rsp]
  00295	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0029a	90		 npad	 1
  0029b	48 8d 94 24 68
	0a 00 00	 lea	 rdx, QWORD PTR $T11[rsp]
  002a3	48 8d 4c 24 28	 lea	 rcx, QWORD PTR list$[rsp]
  002a8	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
  002ad	90		 npad	 1
  002ae	48 8d 8c 24 68
	0a 00 00	 lea	 rcx, QWORD PTR $T11[rsp]
  002b6	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN7@get_file_l:

; 596  :         }
; 597  :     } while (FindNextFile(hFind, &win32fd));

  002bb	48 8d 94 24 b0
	04 00 00	 lea	 rdx, QWORD PTR win32fd$[rsp]
  002c3	48 8b 8c 24 f8
	05 00 00	 mov	 rcx, QWORD PTR hFind$[rsp]
  002cb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_FindNextFileA
  002d1	85 c0		 test	 eax, eax
  002d3	0f 85 5b fe ff
	ff		 jne	 $LN4@get_file_l

; 598  :     FindClose(hFind);

  002d9	48 8b 8c 24 f8
	05 00 00	 mov	 rcx, QWORD PTR hFind$[rsp]
  002e1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_FindClose

; 599  :     return list;

  002e7	48 8d 54 24 28	 lea	 rdx, QWORD PTR list$[rsp]
  002ec	48 8b 8c 24 10
	0b 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  002f4	e8 00 00 00 00	 call	 ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@$$QEAV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  002f9	8b 84 24 b8 0a
	00 00		 mov	 eax, DWORD PTR $T13[rsp]
  00300	83 c8 01	 or	 eax, 1
  00303	89 84 24 b8 0a
	00 00		 mov	 DWORD PTR $T13[rsp], eax
  0030a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR list$[rsp]
  0030f	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00314	48 8b 84 24 10
	0b 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@get_file_l:

; 600  : }

  0031c	48 8b f8	 mov	 rdi, rax
  0031f	48 8b cc	 mov	 rcx, rsp
  00322	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z$rtcFrameData
  00329	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0032e	48 8b c7	 mov	 rax, rdi
  00331	48 8b 8c 24 f8
	0a 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00339	48 33 cc	 xor	 rcx, rsp
  0033c	e8 00 00 00 00	 call	 __security_check_cookie
  00341	48 81 c4 00 0b
	00 00		 add	 rsp, 2816		; 00000b00H
  00348	5f		 pop	 rdi
  00349	c3		 ret	 0
  0034a	cc		 int	 3
?get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; get_file_list
_TEXT	ENDS
text$x	SEGMENT
list$ = 40
buf$ = 112
$T7 = 1144
win32fd$ = 1200
hFind$ = 1528
buf2$8 = 1552
$T9 = 2584
$T10 = 2624
$T11 = 2664
$T12 = 2712
$T13 = 2744
tv69 = 2752
tv65 = 2760
tv177 = 2768
tv138 = 2776
tv185 = 2784
tv86 = 2792
tv187 = 2800
__$ArrayPad$ = 2808
__$ReturnUdt$ = 2832
pattern$ = 2840
dir$ = 2848
?dtor$0@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA PROC ; `get_file_list'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR list$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA ENDP ; `get_file_list'::`1'::dtor$0
list$ = 40
buf$ = 112
$T7 = 1144
win32fd$ = 1200
hFind$ = 1528
buf2$8 = 1552
$T9 = 2584
$T10 = 2624
$T11 = 2664
$T12 = 2712
$T13 = 2744
tv69 = 2752
tv65 = 2760
tv177 = 2768
tv138 = 2776
tv185 = 2784
tv86 = 2792
tv187 = 2800
__$ArrayPad$ = 2808
__$ReturnUdt$ = 2832
pattern$ = 2840
dir$ = 2848
?dtor$1@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA PROC ; `get_file_list'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 8d 78 04
	00 00		 lea	 rcx, QWORD PTR $T7[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA ENDP ; `get_file_list'::`1'::dtor$1
list$ = 40
buf$ = 112
$T7 = 1144
win32fd$ = 1200
hFind$ = 1528
buf2$8 = 1552
$T9 = 2584
$T10 = 2624
$T11 = 2664
$T12 = 2712
$T13 = 2744
tv69 = 2752
tv65 = 2760
tv177 = 2768
tv138 = 2776
tv185 = 2784
tv86 = 2792
tv187 = 2800
__$ArrayPad$ = 2808
__$ReturnUdt$ = 2832
pattern$ = 2840
dir$ = 2848
?dtor$2@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA PROC ; `get_file_list'::`1'::dtor$2
  00049	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00053	55		 push	 rbp
  00054	57		 push	 rdi
  00055	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00059	48 8b ea	 mov	 rbp, rdx
  0005c	8b 85 b8 0a 00
	00		 mov	 eax, DWORD PTR $T13[rbp]
  00062	83 e0 01	 and	 eax, 1
  00065	85 c0		 test	 eax, eax
  00067	74 13		 je	 SHORT $LN12@dtor$2
  00069	83 a5 b8 0a 00
	00 fe		 and	 DWORD PTR $T13[rbp], -2
  00070	48 8b 8d 10 0b
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00077	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN12@dtor$2:
  0007c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00080	5f		 pop	 rdi
  00081	5d		 pop	 rbp
  00082	c3		 ret	 0
?dtor$2@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA ENDP ; `get_file_list'::`1'::dtor$2
list$ = 40
buf$ = 112
$T7 = 1144
win32fd$ = 1200
hFind$ = 1528
buf2$8 = 1552
$T9 = 2584
$T10 = 2624
$T11 = 2664
$T12 = 2712
$T13 = 2744
tv69 = 2752
tv65 = 2760
tv177 = 2768
tv138 = 2776
tv185 = 2784
tv86 = 2792
tv187 = 2800
__$ArrayPad$ = 2808
__$ReturnUdt$ = 2832
pattern$ = 2840
dir$ = 2848
?dtor$3@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA PROC ; `get_file_list'::`1'::dtor$3
  00083	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00088	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0008d	55		 push	 rbp
  0008e	57		 push	 rdi
  0008f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00093	48 8b ea	 mov	 rbp, rdx
  00096	48 8d 8d 18 0a
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  0009d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000a2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000a6	5f		 pop	 rdi
  000a7	5d		 pop	 rbp
  000a8	c3		 ret	 0
?dtor$3@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA ENDP ; `get_file_list'::`1'::dtor$3
list$ = 40
buf$ = 112
$T7 = 1144
win32fd$ = 1200
hFind$ = 1528
buf2$8 = 1552
$T9 = 2584
$T10 = 2624
$T11 = 2664
$T12 = 2712
$T13 = 2744
tv69 = 2752
tv65 = 2760
tv177 = 2768
tv138 = 2776
tv185 = 2784
tv86 = 2792
tv187 = 2800
__$ArrayPad$ = 2808
__$ReturnUdt$ = 2832
pattern$ = 2840
dir$ = 2848
?dtor$4@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA PROC ; `get_file_list'::`1'::dtor$4
  000a9	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000ae	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000b3	55		 push	 rbp
  000b4	57		 push	 rdi
  000b5	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000b9	48 8b ea	 mov	 rbp, rdx
  000bc	48 8d 8d 98 0a
	00 00		 lea	 rcx, QWORD PTR $T12[rbp]
  000c3	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  000c8	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000cc	5f		 pop	 rdi
  000cd	5d		 pop	 rbp
  000ce	c3		 ret	 0
?dtor$4@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA ENDP ; `get_file_list'::`1'::dtor$4
list$ = 40
buf$ = 112
$T7 = 1144
win32fd$ = 1200
hFind$ = 1528
buf2$8 = 1552
$T9 = 2584
$T10 = 2624
$T11 = 2664
$T12 = 2712
$T13 = 2744
tv69 = 2752
tv65 = 2760
tv177 = 2768
tv138 = 2776
tv185 = 2784
tv86 = 2792
tv187 = 2800
__$ArrayPad$ = 2808
__$ReturnUdt$ = 2832
pattern$ = 2840
dir$ = 2848
?dtor$5@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA PROC ; `get_file_list'::`1'::dtor$5
  000cf	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000d4	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000d9	55		 push	 rbp
  000da	57		 push	 rdi
  000db	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000df	48 8b ea	 mov	 rbp, rdx
  000e2	48 8d 8d 40 0a
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  000e9	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000ee	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000f2	5f		 pop	 rdi
  000f3	5d		 pop	 rbp
  000f4	c3		 ret	 0
?dtor$5@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA ENDP ; `get_file_list'::`1'::dtor$5
list$ = 40
buf$ = 112
$T7 = 1144
win32fd$ = 1200
hFind$ = 1528
buf2$8 = 1552
$T9 = 2584
$T10 = 2624
$T11 = 2664
$T12 = 2712
$T13 = 2744
tv69 = 2752
tv65 = 2760
tv177 = 2768
tv138 = 2776
tv185 = 2784
tv86 = 2792
tv187 = 2800
__$ArrayPad$ = 2808
__$ReturnUdt$ = 2832
pattern$ = 2840
dir$ = 2848
?dtor$6@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA PROC ; `get_file_list'::`1'::dtor$6
  000f5	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000fa	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000ff	55		 push	 rbp
  00100	57		 push	 rdi
  00101	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00105	48 8b ea	 mov	 rbp, rdx
  00108	48 8d 8d 68 0a
	00 00		 lea	 rcx, QWORD PTR $T11[rbp]
  0010f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00114	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00118	5f		 pop	 rdi
  00119	5d		 pop	 rbp
  0011a	c3		 ret	 0
?dtor$6@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA ENDP ; `get_file_list'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
list$ = 40
buf$ = 112
$T7 = 1144
win32fd$ = 1200
hFind$ = 1528
buf2$8 = 1552
$T9 = 2584
$T10 = 2624
$T11 = 2664
$T12 = 2712
$T13 = 2744
tv69 = 2752
tv65 = 2760
tv177 = 2768
tv138 = 2776
tv185 = 2784
tv86 = 2792
tv187 = 2800
__$ArrayPad$ = 2808
__$ReturnUdt$ = 2832
pattern$ = 2840
dir$ = 2848
?dtor$0@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA PROC ; `get_file_list'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR list$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA ENDP ; `get_file_list'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
list$ = 40
buf$ = 112
$T7 = 1144
win32fd$ = 1200
hFind$ = 1528
buf2$8 = 1552
$T9 = 2584
$T10 = 2624
$T11 = 2664
$T12 = 2712
$T13 = 2744
tv69 = 2752
tv65 = 2760
tv177 = 2768
tv138 = 2776
tv185 = 2784
tv86 = 2792
tv187 = 2800
__$ArrayPad$ = 2808
__$ReturnUdt$ = 2832
pattern$ = 2840
dir$ = 2848
?dtor$1@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA PROC ; `get_file_list'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 8d 78 04
	00 00		 lea	 rcx, QWORD PTR $T7[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA ENDP ; `get_file_list'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
list$ = 40
buf$ = 112
$T7 = 1144
win32fd$ = 1200
hFind$ = 1528
buf2$8 = 1552
$T9 = 2584
$T10 = 2624
$T11 = 2664
$T12 = 2712
$T13 = 2744
tv69 = 2752
tv65 = 2760
tv177 = 2768
tv138 = 2776
tv185 = 2784
tv86 = 2792
tv187 = 2800
__$ArrayPad$ = 2808
__$ReturnUdt$ = 2832
pattern$ = 2840
dir$ = 2848
?dtor$2@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA PROC ; `get_file_list'::`1'::dtor$2
  00049	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00053	55		 push	 rbp
  00054	57		 push	 rdi
  00055	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00059	48 8b ea	 mov	 rbp, rdx
  0005c	8b 85 b8 0a 00
	00		 mov	 eax, DWORD PTR $T13[rbp]
  00062	83 e0 01	 and	 eax, 1
  00065	85 c0		 test	 eax, eax
  00067	74 13		 je	 SHORT $LN12@dtor$2
  00069	83 a5 b8 0a 00
	00 fe		 and	 DWORD PTR $T13[rbp], -2
  00070	48 8b 8d 10 0b
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00077	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN12@dtor$2:
  0007c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00080	5f		 pop	 rdi
  00081	5d		 pop	 rbp
  00082	c3		 ret	 0
?dtor$2@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA ENDP ; `get_file_list'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
list$ = 40
buf$ = 112
$T7 = 1144
win32fd$ = 1200
hFind$ = 1528
buf2$8 = 1552
$T9 = 2584
$T10 = 2624
$T11 = 2664
$T12 = 2712
$T13 = 2744
tv69 = 2752
tv65 = 2760
tv177 = 2768
tv138 = 2776
tv185 = 2784
tv86 = 2792
tv187 = 2800
__$ArrayPad$ = 2808
__$ReturnUdt$ = 2832
pattern$ = 2840
dir$ = 2848
?dtor$3@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA PROC ; `get_file_list'::`1'::dtor$3
  00083	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00088	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0008d	55		 push	 rbp
  0008e	57		 push	 rdi
  0008f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00093	48 8b ea	 mov	 rbp, rdx
  00096	48 8d 8d 18 0a
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  0009d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000a2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000a6	5f		 pop	 rdi
  000a7	5d		 pop	 rbp
  000a8	c3		 ret	 0
?dtor$3@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA ENDP ; `get_file_list'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
list$ = 40
buf$ = 112
$T7 = 1144
win32fd$ = 1200
hFind$ = 1528
buf2$8 = 1552
$T9 = 2584
$T10 = 2624
$T11 = 2664
$T12 = 2712
$T13 = 2744
tv69 = 2752
tv65 = 2760
tv177 = 2768
tv138 = 2776
tv185 = 2784
tv86 = 2792
tv187 = 2800
__$ArrayPad$ = 2808
__$ReturnUdt$ = 2832
pattern$ = 2840
dir$ = 2848
?dtor$4@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA PROC ; `get_file_list'::`1'::dtor$4
  000a9	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000ae	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000b3	55		 push	 rbp
  000b4	57		 push	 rdi
  000b5	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000b9	48 8b ea	 mov	 rbp, rdx
  000bc	48 8d 8d 98 0a
	00 00		 lea	 rcx, QWORD PTR $T12[rbp]
  000c3	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  000c8	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000cc	5f		 pop	 rdi
  000cd	5d		 pop	 rbp
  000ce	c3		 ret	 0
?dtor$4@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA ENDP ; `get_file_list'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
list$ = 40
buf$ = 112
$T7 = 1144
win32fd$ = 1200
hFind$ = 1528
buf2$8 = 1552
$T9 = 2584
$T10 = 2624
$T11 = 2664
$T12 = 2712
$T13 = 2744
tv69 = 2752
tv65 = 2760
tv177 = 2768
tv138 = 2776
tv185 = 2784
tv86 = 2792
tv187 = 2800
__$ArrayPad$ = 2808
__$ReturnUdt$ = 2832
pattern$ = 2840
dir$ = 2848
?dtor$5@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA PROC ; `get_file_list'::`1'::dtor$5
  000cf	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000d4	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000d9	55		 push	 rbp
  000da	57		 push	 rdi
  000db	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000df	48 8b ea	 mov	 rbp, rdx
  000e2	48 8d 8d 40 0a
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  000e9	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000ee	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000f2	5f		 pop	 rdi
  000f3	5d		 pop	 rbp
  000f4	c3		 ret	 0
?dtor$5@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA ENDP ; `get_file_list'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
list$ = 40
buf$ = 112
$T7 = 1144
win32fd$ = 1200
hFind$ = 1528
buf2$8 = 1552
$T9 = 2584
$T10 = 2624
$T11 = 2664
$T12 = 2712
$T13 = 2744
tv69 = 2752
tv65 = 2760
tv177 = 2768
tv138 = 2776
tv185 = 2784
tv86 = 2792
tv187 = 2800
__$ArrayPad$ = 2808
__$ReturnUdt$ = 2832
pattern$ = 2840
dir$ = 2848
?dtor$6@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA PROC ; `get_file_list'::`1'::dtor$6
  000f5	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000fa	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000ff	55		 push	 rbp
  00100	57		 push	 rdi
  00101	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00105	48 8b ea	 mov	 rbp, rdx
  00108	48 8d 8d 68 0a
	00 00		 lea	 rcx, QWORD PTR $T11[rbp]
  0010f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00114	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00118	5f		 pop	 rdi
  00119	5d		 pop	 rbp
  0011a	c3		 ret	 0
?dtor$6@?0??get_file_list@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z@4HA ENDP ; `get_file_list'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
ret$ = 40
$T4 = 104
$T5 = 152
$T6 = 153
$T7 = 154
tv90 = 156
__$ArrayPad$ = 160
dir$ = 192
?CreateDirectoryRecursive@@YA_NPEB_W@Z PROC		; CreateDirectoryRecursive

; 510  : bool CreateDirectoryRecursive(const WCHAR *dir) {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+192]
  00024	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002b	48 33 c4	 xor	 rax, rsp
  0002e	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 511  :     if (PathIsDirectoryW(dir)) {

  00036	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR dir$[rsp]
  0003e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathIsDirectoryW
  00044	85 c0		 test	 eax, eax
  00046	74 07		 je	 SHORT $LN2@CreateDire

; 512  :         return true;

  00048	b0 01		 mov	 al, 1
  0004a	e9 f0 00 00 00	 jmp	 $LN1@CreateDire
$LN2@CreateDire:

; 513  :     }
; 514  :     if (!PathRootExists(dir)) {

  0004f	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR dir$[rsp]
  00057	e8 00 00 00 00	 call	 ?PathRootExists@@YA_NPEB_W@Z ; PathRootExists
  0005c	0f b6 c0	 movzx	 eax, al
  0005f	85 c0		 test	 eax, eax
  00061	75 07		 jne	 SHORT $LN3@CreateDire

; 515  :         return false;

  00063	32 c0		 xor	 al, al
  00065	e9 d5 00 00 00	 jmp	 $LN1@CreateDire
$LN3@CreateDire:

; 516  :     }
; 517  :     auto ret = PathRemoveFileSpecFixed(dir);

  0006a	48 8b 94 24 c0
	00 00 00	 mov	 rdx, QWORD PTR dir$[rsp]
  00072	48 8d 4c 24 68	 lea	 rcx, QWORD PTR $T4[rsp]
  00077	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0007c	90		 npad	 1
  0007d	48 8d 54 24 68	 lea	 rdx, QWORD PTR $T4[rsp]
  00082	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  00087	e8 00 00 00 00	 call	 ?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; PathRemoveFileSpecFixed
  0008c	90		 npad	 1
  0008d	48 8d 4c 24 68	 lea	 rcx, QWORD PTR $T4[rsp]
  00092	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >

; 518  :     if (ret.first == 0) {

  00097	83 7c 24 28 00	 cmp	 DWORD PTR ret$[rsp], 0
  0009c	75 1f		 jne	 SHORT $LN4@CreateDire

; 519  :         return false;

  0009e	c6 84 24 98 00
	00 00 00	 mov	 BYTE PTR $T5[rsp], 0
  000a6	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000ab	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ
  000b0	0f b6 84 24 98
	00 00 00	 movzx	 eax, BYTE PTR $T5[rsp]
  000b8	e9 82 00 00 00	 jmp	 $LN1@CreateDire
$LN4@CreateDire:

; 520  :     }
; 521  :     if (!CreateDirectoryRecursive(ret.second.c_str())) {

  000bd	48 8d 4c 24 30	 lea	 rcx, QWORD PTR ret$[rsp+8]
  000c2	e8 00 00 00 00	 call	 ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
  000c7	48 8b c8	 mov	 rcx, rax
  000ca	e8 00 00 00 00	 call	 ?CreateDirectoryRecursive@@YA_NPEB_W@Z ; CreateDirectoryRecursive
  000cf	0f b6 c0	 movzx	 eax, al
  000d2	85 c0		 test	 eax, eax
  000d4	75 1c		 jne	 SHORT $LN5@CreateDire

; 522  :         return false;

  000d6	c6 84 24 99 00
	00 00 00	 mov	 BYTE PTR $T6[rsp], 0
  000de	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000e3	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ
  000e8	0f b6 84 24 99
	00 00 00	 movzx	 eax, BYTE PTR $T6[rsp]
  000f0	eb 4d		 jmp	 SHORT $LN1@CreateDire
$LN5@CreateDire:

; 523  :     }
; 524  :     return CreateDirectoryW(dir, NULL) != 0;

  000f2	33 d2		 xor	 edx, edx
  000f4	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR dir$[rsp]
  000fc	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CreateDirectoryW
  00102	85 c0		 test	 eax, eax
  00104	74 0d		 je	 SHORT $LN7@CreateDire
  00106	c7 84 24 9c 00
	00 00 01 00 00
	00		 mov	 DWORD PTR tv90[rsp], 1
  00111	eb 0b		 jmp	 SHORT $LN8@CreateDire
$LN7@CreateDire:
  00113	c7 84 24 9c 00
	00 00 00 00 00
	00		 mov	 DWORD PTR tv90[rsp], 0
$LN8@CreateDire:
  0011e	0f b6 84 24 9c
	00 00 00	 movzx	 eax, BYTE PTR tv90[rsp]
  00126	88 84 24 9a 00
	00 00		 mov	 BYTE PTR $T7[rsp], al
  0012d	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  00132	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ
  00137	0f b6 84 24 9a
	00 00 00	 movzx	 eax, BYTE PTR $T7[rsp]
$LN1@CreateDire:

; 525  : }

  0013f	48 8b f8	 mov	 rdi, rax
  00142	48 8b cc	 mov	 rcx, rsp
  00145	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?CreateDirectoryRecursive@@YA_NPEB_W@Z$rtcFrameData
  0014c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00151	48 8b c7	 mov	 rax, rdi
  00154	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0015c	48 33 cc	 xor	 rcx, rsp
  0015f	e8 00 00 00 00	 call	 __security_check_cookie
  00164	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  0016b	5f		 pop	 rdi
  0016c	c3		 ret	 0
?CreateDirectoryRecursive@@YA_NPEB_W@Z ENDP		; CreateDirectoryRecursive
_TEXT	ENDS
text$x	SEGMENT
ret$ = 40
$T4 = 104
$T5 = 152
$T6 = 153
$T7 = 154
tv90 = 156
__$ArrayPad$ = 160
dir$ = 192
?dtor$0@?0??CreateDirectoryRecursive@@YA_NPEB_W@Z@4HA PROC ; `CreateDirectoryRecursive'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 68	 lea	 rcx, QWORD PTR $T4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??CreateDirectoryRecursive@@YA_NPEB_W@Z@4HA ENDP ; `CreateDirectoryRecursive'::`1'::dtor$0
ret$ = 40
$T4 = 104
$T5 = 152
$T6 = 153
$T7 = 154
tv90 = 156
__$ArrayPad$ = 160
dir$ = 192
?dtor$1@?0??CreateDirectoryRecursive@@YA_NPEB_W@Z@4HA PROC ; `CreateDirectoryRecursive'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 28	 lea	 rcx, QWORD PTR ret$[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??CreateDirectoryRecursive@@YA_NPEB_W@Z@4HA ENDP ; `CreateDirectoryRecursive'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
ret$ = 40
$T4 = 104
$T5 = 152
$T6 = 153
$T7 = 154
tv90 = 156
__$ArrayPad$ = 160
dir$ = 192
?dtor$0@?0??CreateDirectoryRecursive@@YA_NPEB_W@Z@4HA PROC ; `CreateDirectoryRecursive'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 68	 lea	 rcx, QWORD PTR $T4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??CreateDirectoryRecursive@@YA_NPEB_W@Z@4HA ENDP ; `CreateDirectoryRecursive'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
ret$ = 40
$T4 = 104
$T5 = 152
$T6 = 153
$T7 = 154
tv90 = 156
__$ArrayPad$ = 160
dir$ = 192
?dtor$1@?0??CreateDirectoryRecursive@@YA_NPEB_W@Z@4HA PROC ; `CreateDirectoryRecursive'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 28	 lea	 rcx, QWORD PTR ret$[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??CreateDirectoryRecursive@@YA_NPEB_W@Z@4HA ENDP ; `CreateDirectoryRecursive'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
buffer$ = 40
$T4 = 84
$T5 = 85
$T6 = 88
tv67 = 96
tv71 = 104
tv80 = 112
tv83 = 120
__$ReturnUdt$ = 144
dir$ = 152
filename$ = 160
?PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z PROC ; PathCombineS

; 479  : std::string PathCombineS(const std::string& dir, const std::string& filename) {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  0002e	c7 44 24 58 00
	00 00 00	 mov	 DWORD PTR $T6[rsp], 0

; 480  :     std::vector<char> buffer(dir.length() + filename.length() + 128, '\0');

  00036	c6 44 24 55 00	 mov	 BYTE PTR $T5[rsp], 0
  0003b	48 8d 4c 24 54	 lea	 rcx, QWORD PTR $T4[rsp]
  00040	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@XZ ; std::allocator<char>::allocator<char>
  00045	48 89 44 24 60	 mov	 QWORD PTR tv67[rsp], rax
  0004a	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR dir$[rsp]
  00052	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
  00057	48 89 44 24 68	 mov	 QWORD PTR tv71[rsp], rax
  0005c	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR filename$[rsp]
  00064	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
  00069	48 8b 4c 24 68	 mov	 rcx, QWORD PTR tv71[rsp]
  0006e	48 8d 84 01 80
	00 00 00	 lea	 rax, QWORD PTR [rcx+rax+128]
  00076	48 8b 4c 24 60	 mov	 rcx, QWORD PTR tv67[rsp]
  0007b	4c 8b c9	 mov	 r9, rcx
  0007e	4c 8d 44 24 55	 lea	 r8, QWORD PTR $T5[rsp]
  00083	48 8b d0	 mov	 rdx, rax
  00086	48 8d 4c 24 28	 lea	 rcx, QWORD PTR buffer$[rsp]
  0008b	e8 00 00 00 00	 call	 ??0?$vector@DV?$allocator@D@std@@@std@@QEAA@_KAEBDAEBV?$allocator@D@1@@Z ; std::vector<char,std::allocator<char> >::vector<char,std::allocator<char> >
  00090	90		 npad	 1

; 481  :     PathCombineA(buffer.data(), dir.c_str(), filename.c_str());

  00091	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR filename$[rsp]
  00099	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0009e	48 89 44 24 70	 mov	 QWORD PTR tv80[rsp], rax
  000a3	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR dir$[rsp]
  000ab	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  000b0	48 89 44 24 78	 mov	 QWORD PTR tv83[rsp], rax
  000b5	48 8d 4c 24 28	 lea	 rcx, QWORD PTR buffer$[rsp]
  000ba	e8 00 00 00 00	 call	 ?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ ; std::vector<char,std::allocator<char> >::data
  000bf	48 8b 4c 24 70	 mov	 rcx, QWORD PTR tv80[rsp]
  000c4	4c 8b c1	 mov	 r8, rcx
  000c7	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv83[rsp]
  000cc	48 8b d1	 mov	 rdx, rcx
  000cf	48 8b c8	 mov	 rcx, rax
  000d2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathCombineA

; 482  :     return std::string(buffer.data());

  000d8	48 8d 4c 24 28	 lea	 rcx, QWORD PTR buffer$[rsp]
  000dd	e8 00 00 00 00	 call	 ?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ ; std::vector<char,std::allocator<char> >::data
  000e2	48 8b d0	 mov	 rdx, rax
  000e5	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000ed	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000f2	8b 44 24 58	 mov	 eax, DWORD PTR $T6[rsp]
  000f6	83 c8 01	 or	 eax, 1
  000f9	89 44 24 58	 mov	 DWORD PTR $T6[rsp], eax
  000fd	48 8d 4c 24 28	 lea	 rcx, QWORD PTR buffer$[rsp]
  00102	e8 00 00 00 00	 call	 ??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ ; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
  00107	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 483  : }

  0010f	48 8b f8	 mov	 rdi, rax
  00112	48 8b cc	 mov	 rcx, rsp
  00115	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z$rtcFrameData
  0011c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00121	48 8b c7	 mov	 rax, rdi
  00124	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0012b	5f		 pop	 rdi
  0012c	c3		 ret	 0
  0012d	cc		 int	 3
?PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z ENDP ; PathCombineS
_TEXT	ENDS
text$x	SEGMENT
buffer$ = 40
$T4 = 84
$T5 = 85
$T6 = 88
tv67 = 96
tv71 = 104
tv80 = 112
tv83 = 120
__$ReturnUdt$ = 144
dir$ = 152
filename$ = 160
?dtor$0@?0??PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z@4HA PROC ; `PathCombineS'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR buffer$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ ; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z@4HA ENDP ; `PathCombineS'::`1'::dtor$0
buffer$ = 40
$T4 = 84
$T5 = 85
$T6 = 88
tv67 = 96
tv71 = 104
tv80 = 112
tv83 = 120
__$ReturnUdt$ = 144
dir$ = 152
filename$ = 160
?dtor$1@?0??PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z@4HA PROC ; `PathCombineS'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	8b 45 58	 mov	 eax, DWORD PTR $T6[rbp]
  00039	83 e0 01	 and	 eax, 1
  0003c	85 c0		 test	 eax, eax
  0003e	74 10		 je	 SHORT $LN5@dtor$1
  00040	83 65 58 fe	 and	 DWORD PTR $T6[rbp], -2
  00044	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$1:
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z@4HA ENDP ; `PathCombineS'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
buffer$ = 40
$T4 = 84
$T5 = 85
$T6 = 88
tv67 = 96
tv71 = 104
tv80 = 112
tv83 = 120
__$ReturnUdt$ = 144
dir$ = 152
filename$ = 160
?dtor$0@?0??PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z@4HA PROC ; `PathCombineS'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR buffer$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ ; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z@4HA ENDP ; `PathCombineS'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
buffer$ = 40
$T4 = 84
$T5 = 85
$T6 = 88
tv67 = 96
tv71 = 104
tv80 = 112
tv83 = 120
__$ReturnUdt$ = 144
dir$ = 152
filename$ = 160
?dtor$1@?0??PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z@4HA PROC ; `PathCombineS'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	8b 45 58	 mov	 eax, DWORD PTR $T6[rbp]
  00039	83 e0 01	 and	 eax, 1
  0003c	85 c0		 test	 eax, eax
  0003e	74 10		 je	 SHORT $LN5@dtor$1
  00040	83 65 58 fe	 and	 DWORD PTR $T6[rbp], -2
  00044	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$1:
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??PathCombineS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV12@0@Z@4HA ENDP ; `PathCombineS'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
buffer$ = 40
$T4 = 84
$T5 = 86
$T6 = 88
tv67 = 96
tv71 = 104
tv80 = 112
tv83 = 120
__$ReturnUdt$ = 144
dir$ = 152
filename$ = 160
?PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z PROC ; PathCombineS

; 484  : std::wstring PathCombineS(const std::wstring& dir, const std::wstring& filename) {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  0002e	c7 44 24 58 00
	00 00 00	 mov	 DWORD PTR $T6[rsp], 0

; 485  :     std::vector<WCHAR> buffer(dir.length() + filename.length() + 128, '\0');

  00036	33 c0		 xor	 eax, eax
  00038	66 89 44 24 56	 mov	 WORD PTR $T5[rsp], ax
  0003d	48 8d 4c 24 54	 lea	 rcx, QWORD PTR $T4[rsp]
  00042	e8 00 00 00 00	 call	 ??0?$allocator@_W@std@@QEAA@XZ ; std::allocator<wchar_t>::allocator<wchar_t>
  00047	48 89 44 24 60	 mov	 QWORD PTR tv67[rsp], rax
  0004c	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR dir$[rsp]
  00054	e8 00 00 00 00	 call	 ?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length
  00059	48 89 44 24 68	 mov	 QWORD PTR tv71[rsp], rax
  0005e	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR filename$[rsp]
  00066	e8 00 00 00 00	 call	 ?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length
  0006b	48 8b 4c 24 68	 mov	 rcx, QWORD PTR tv71[rsp]
  00070	48 8d 84 01 80
	00 00 00	 lea	 rax, QWORD PTR [rcx+rax+128]
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR tv67[rsp]
  0007d	4c 8b c9	 mov	 r9, rcx
  00080	4c 8d 44 24 56	 lea	 r8, QWORD PTR $T5[rsp]
  00085	48 8b d0	 mov	 rdx, rax
  00088	48 8d 4c 24 28	 lea	 rcx, QWORD PTR buffer$[rsp]
  0008d	e8 00 00 00 00	 call	 ??0?$vector@_WV?$allocator@_W@std@@@std@@QEAA@_KAEB_WAEBV?$allocator@_W@1@@Z ; std::vector<wchar_t,std::allocator<wchar_t> >::vector<wchar_t,std::allocator<wchar_t> >
  00092	90		 npad	 1

; 486  :     PathCombineW(buffer.data(), dir.c_str(), filename.c_str());

  00093	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR filename$[rsp]
  0009b	e8 00 00 00 00	 call	 ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
  000a0	48 89 44 24 70	 mov	 QWORD PTR tv80[rsp], rax
  000a5	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR dir$[rsp]
  000ad	e8 00 00 00 00	 call	 ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
  000b2	48 89 44 24 78	 mov	 QWORD PTR tv83[rsp], rax
  000b7	48 8d 4c 24 28	 lea	 rcx, QWORD PTR buffer$[rsp]
  000bc	e8 00 00 00 00	 call	 ?data@?$vector@_WV?$allocator@_W@std@@@std@@QEAAPEA_WXZ ; std::vector<wchar_t,std::allocator<wchar_t> >::data
  000c1	48 8b 4c 24 70	 mov	 rcx, QWORD PTR tv80[rsp]
  000c6	4c 8b c1	 mov	 r8, rcx
  000c9	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv83[rsp]
  000ce	48 8b d1	 mov	 rdx, rcx
  000d1	48 8b c8	 mov	 rcx, rax
  000d4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathCombineW

; 487  :     return std::wstring(buffer.data());

  000da	48 8d 4c 24 28	 lea	 rcx, QWORD PTR buffer$[rsp]
  000df	e8 00 00 00 00	 call	 ?data@?$vector@_WV?$allocator@_W@std@@@std@@QEAAPEA_WXZ ; std::vector<wchar_t,std::allocator<wchar_t> >::data
  000e4	48 8b d0	 mov	 rdx, rax
  000e7	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000ef	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  000f4	8b 44 24 58	 mov	 eax, DWORD PTR $T6[rsp]
  000f8	83 c8 01	 or	 eax, 1
  000fb	89 44 24 58	 mov	 DWORD PTR $T6[rsp], eax
  000ff	48 8d 4c 24 28	 lea	 rcx, QWORD PTR buffer$[rsp]
  00104	e8 00 00 00 00	 call	 ??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ ; std::vector<wchar_t,std::allocator<wchar_t> >::~vector<wchar_t,std::allocator<wchar_t> >
  00109	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 488  : }

  00111	48 8b f8	 mov	 rdi, rax
  00114	48 8b cc	 mov	 rcx, rsp
  00117	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z$rtcFrameData
  0011e	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00123	48 8b c7	 mov	 rax, rdi
  00126	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0012d	5f		 pop	 rdi
  0012e	c3		 ret	 0
  0012f	cc		 int	 3
?PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z ENDP ; PathCombineS
_TEXT	ENDS
text$x	SEGMENT
buffer$ = 40
$T4 = 84
$T5 = 86
$T6 = 88
tv67 = 96
tv71 = 104
tv80 = 112
tv83 = 120
__$ReturnUdt$ = 144
dir$ = 152
filename$ = 160
?dtor$0@?0??PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z@4HA PROC ; `PathCombineS'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR buffer$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ ; std::vector<wchar_t,std::allocator<wchar_t> >::~vector<wchar_t,std::allocator<wchar_t> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z@4HA ENDP ; `PathCombineS'::`1'::dtor$0
buffer$ = 40
$T4 = 84
$T5 = 86
$T6 = 88
tv67 = 96
tv71 = 104
tv80 = 112
tv83 = 120
__$ReturnUdt$ = 144
dir$ = 152
filename$ = 160
?dtor$1@?0??PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z@4HA PROC ; `PathCombineS'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	8b 45 58	 mov	 eax, DWORD PTR $T6[rbp]
  00039	83 e0 01	 and	 eax, 1
  0003c	85 c0		 test	 eax, eax
  0003e	74 10		 je	 SHORT $LN5@dtor$1
  00040	83 65 58 fe	 and	 DWORD PTR $T6[rbp], -2
  00044	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN5@dtor$1:
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z@4HA ENDP ; `PathCombineS'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
buffer$ = 40
$T4 = 84
$T5 = 86
$T6 = 88
tv67 = 96
tv71 = 104
tv80 = 112
tv83 = 120
__$ReturnUdt$ = 144
dir$ = 152
filename$ = 160
?dtor$0@?0??PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z@4HA PROC ; `PathCombineS'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR buffer$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ ; std::vector<wchar_t,std::allocator<wchar_t> >::~vector<wchar_t,std::allocator<wchar_t> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z@4HA ENDP ; `PathCombineS'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
buffer$ = 40
$T4 = 84
$T5 = 86
$T6 = 88
tv67 = 96
tv71 = 104
tv80 = 112
tv83 = 120
__$ReturnUdt$ = 144
dir$ = 152
filename$ = 160
?dtor$1@?0??PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z@4HA PROC ; `PathCombineS'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	8b 45 58	 mov	 eax, DWORD PTR $T6[rbp]
  00039	83 e0 01	 and	 eax, 1
  0003c	85 c0		 test	 eax, eax
  0003e	74 10		 je	 SHORT $LN5@dtor$1
  00040	83 65 58 fe	 and	 DWORD PTR $T6[rbp], -2
  00044	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN5@dtor$1:
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??PathCombineS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@0@Z@4HA ENDP ; `PathCombineS'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
ptr$ = 32
qtr$ = 40
$T1 = 48
__$ReturnUdt$ = 80
path$ = 88
?PathRemoveExtensionS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@Z PROC ; PathRemoveExtensionS

; 471  : std::wstring PathRemoveExtensionS(const std::wstring& path) {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
  00023	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 472  :     const WCHAR *ptr = path.c_str();

  0002b	48 8b 4c 24 58	 mov	 rcx, QWORD PTR path$[rsp]
  00030	e8 00 00 00 00	 call	 ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
  00035	48 89 44 24 20	 mov	 QWORD PTR ptr$[rsp], rax

; 473  :     WCHAR *qtr = PathFindExtensionW(ptr);

  0003a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR ptr$[rsp]
  0003f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathFindExtensionW
  00045	48 89 44 24 28	 mov	 QWORD PTR qtr$[rsp], rax

; 474  :     if (qtr == ptr || qtr == nullptr) {

  0004a	48 8b 44 24 20	 mov	 rax, QWORD PTR ptr$[rsp]
  0004f	48 39 44 24 28	 cmp	 QWORD PTR qtr$[rsp], rax
  00054	74 08		 je	 SHORT $LN3@PathRemove
  00056	48 83 7c 24 28
	00		 cmp	 QWORD PTR qtr$[rsp], 0
  0005c	75 22		 jne	 SHORT $LN2@PathRemove
$LN3@PathRemove:

; 475  :         return path;

  0005e	48 8b 54 24 58	 mov	 rdx, QWORD PTR path$[rsp]
  00063	48 8b 4c 24 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00068	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0006d	90		 npad	 1
  0006e	8b 44 24 30	 mov	 eax, DWORD PTR $T1[rsp]
  00072	83 c8 01	 or	 eax, 1
  00075	89 44 24 30	 mov	 DWORD PTR $T1[rsp], eax
  00079	48 8b 44 24 50	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  0007e	eb 39		 jmp	 SHORT $LN1@PathRemove
$LN2@PathRemove:

; 476  :     }
; 477  :     return path.substr(0, qtr - ptr);

  00080	48 8b 44 24 20	 mov	 rax, QWORD PTR ptr$[rsp]
  00085	48 8b 4c 24 28	 mov	 rcx, QWORD PTR qtr$[rsp]
  0008a	48 2b c8	 sub	 rcx, rax
  0008d	48 8b c1	 mov	 rax, rcx
  00090	48 d1 f8	 sar	 rax, 1
  00093	4c 8b c8	 mov	 r9, rax
  00096	45 33 c0	 xor	 r8d, r8d
  00099	48 8b 54 24 50	 mov	 rdx, QWORD PTR __$ReturnUdt$[rsp]
  0009e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR path$[rsp]
  000a3	e8 00 00 00 00	 call	 ?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr
  000a8	90		 npad	 1
  000a9	8b 44 24 30	 mov	 eax, DWORD PTR $T1[rsp]
  000ad	83 c8 01	 or	 eax, 1
  000b0	89 44 24 30	 mov	 DWORD PTR $T1[rsp], eax
  000b4	48 8b 44 24 50	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@PathRemove:

; 478  : }

  000b9	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000bd	5f		 pop	 rdi
  000be	c3		 ret	 0
  000bf	cc		 int	 3
?PathRemoveExtensionS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@Z ENDP ; PathRemoveExtensionS
_TEXT	ENDS
text$x	SEGMENT
ptr$ = 32
qtr$ = 40
$T1 = 48
__$ReturnUdt$ = 80
path$ = 88
?dtor$0@?0??PathRemoveExtensionS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@Z@4HA PROC ; `PathRemoveExtensionS'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 30	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN6@dtor$0
  0001d	83 65 30 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN6@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??PathRemoveExtensionS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@Z@4HA ENDP ; `PathRemoveExtensionS'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
ptr$ = 32
qtr$ = 40
$T1 = 48
__$ReturnUdt$ = 80
path$ = 88
?dtor$0@?0??PathRemoveExtensionS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@Z@4HA PROC ; `PathRemoveExtensionS'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 30	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN6@dtor$0
  0001d	83 65 30 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN6@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??PathRemoveExtensionS@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV12@@Z@4HA ENDP ; `PathRemoveExtensionS'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
ptr$ = 32
qtr$ = 40
newPath$ = 56
$T4 = 112
$T5 = 116
$T6 = 120
tv86 = 128
__$ArrayPad$ = 136
__$ReturnUdt$ = 160
path$ = 168
?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z PROC ; PathRemoveFileSpecFixed

; 452  : std::pair<int, std::wstring> PathRemoveFileSpecFixed(const std::wstring& path) {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+160]
  00029	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00030	48 33 c4	 xor	 rax, rsp
  00033	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003b	c7 44 24 78 00
	00 00 00	 mov	 DWORD PTR $T6[rsp], 0

; 453  :     const WCHAR *ptr = path.c_str();

  00043	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR path$[rsp]
  0004b	e8 00 00 00 00	 call	 ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
  00050	48 89 44 24 20	 mov	 QWORD PTR ptr$[rsp], rax

; 454  :     WCHAR *qtr = PathFindFileNameW(ptr);

  00055	48 8b 4c 24 20	 mov	 rcx, QWORD PTR ptr$[rsp]
  0005a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathFindFileNameW
  00060	48 89 44 24 28	 mov	 QWORD PTR qtr$[rsp], rax

; 455  :     if (qtr == ptr) {

  00065	48 8b 44 24 20	 mov	 rax, QWORD PTR ptr$[rsp]
  0006a	48 39 44 24 28	 cmp	 QWORD PTR qtr$[rsp], rax
  0006f	75 3b		 jne	 SHORT $LN2@PathRemove

; 456  :         return std::make_pair(0, path);

  00071	c7 44 24 70 00
	00 00 00	 mov	 DWORD PTR $T4[rsp], 0
  00079	4c 8b 84 24 a8
	00 00 00	 mov	 r8, QWORD PTR path$[rsp]
  00081	48 8d 54 24 70	 lea	 rdx, QWORD PTR $T4[rsp]
  00086	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0008e	e8 00 00 00 00	 call	 ??$make_pair@HAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::make_pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > const &>
  00093	90		 npad	 1
  00094	8b 44 24 78	 mov	 eax, DWORD PTR $T6[rsp]
  00098	83 c8 01	 or	 eax, 1
  0009b	89 44 24 78	 mov	 DWORD PTR $T6[rsp], eax
  0009f	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  000a7	e9 94 00 00 00	 jmp	 $LN1@PathRemove
$LN2@PathRemove:

; 457  :     }
; 458  :     std::wstring newPath = path.substr(0, qtr - ptr - 1);

  000ac	48 8b 44 24 20	 mov	 rax, QWORD PTR ptr$[rsp]
  000b1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR qtr$[rsp]
  000b6	48 2b c8	 sub	 rcx, rax
  000b9	48 8b c1	 mov	 rax, rcx
  000bc	48 d1 f8	 sar	 rax, 1
  000bf	48 ff c8	 dec	 rax
  000c2	4c 8b c8	 mov	 r9, rax
  000c5	45 33 c0	 xor	 r8d, r8d
  000c8	48 8d 54 24 38	 lea	 rdx, QWORD PTR newPath$[rsp]
  000cd	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR path$[rsp]
  000d5	e8 00 00 00 00	 call	 ?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr
  000da	90		 npad	 1

; 459  :     return std::make_pair((int)(path.length() - newPath.length()), newPath);

  000db	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR path$[rsp]
  000e3	e8 00 00 00 00	 call	 ?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length
  000e8	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR tv86[rsp], rax
  000f0	48 8d 4c 24 38	 lea	 rcx, QWORD PTR newPath$[rsp]
  000f5	e8 00 00 00 00	 call	 ?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length
  000fa	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR tv86[rsp]
  00102	48 2b c8	 sub	 rcx, rax
  00105	48 8b c1	 mov	 rax, rcx
  00108	89 44 24 74	 mov	 DWORD PTR $T5[rsp], eax
  0010c	4c 8d 44 24 38	 lea	 r8, QWORD PTR newPath$[rsp]
  00111	48 8d 54 24 74	 lea	 rdx, QWORD PTR $T5[rsp]
  00116	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0011e	e8 00 00 00 00	 call	 ??$make_pair@HAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@0@$$QEAHAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@@Z ; std::make_pair<int,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>
  00123	8b 44 24 78	 mov	 eax, DWORD PTR $T6[rsp]
  00127	83 c8 01	 or	 eax, 1
  0012a	89 44 24 78	 mov	 DWORD PTR $T6[rsp], eax
  0012e	48 8d 4c 24 38	 lea	 rcx, QWORD PTR newPath$[rsp]
  00133	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00138	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@PathRemove:

; 460  : }

  00140	48 8b f8	 mov	 rdi, rax
  00143	48 8b cc	 mov	 rcx, rsp
  00146	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z$rtcFrameData
  0014d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00152	48 8b c7	 mov	 rax, rdi
  00155	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0015d	48 33 cc	 xor	 rcx, rsp
  00160	e8 00 00 00 00	 call	 __security_check_cookie
  00165	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  0016c	5f		 pop	 rdi
  0016d	c3		 ret	 0
  0016e	cc		 int	 3
?PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ENDP ; PathRemoveFileSpecFixed
_TEXT	ENDS
text$x	SEGMENT
ptr$ = 32
qtr$ = 40
newPath$ = 56
$T4 = 112
$T5 = 116
$T6 = 120
tv86 = 128
__$ArrayPad$ = 136
__$ReturnUdt$ = 160
path$ = 168
?dtor$0@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA PROC ; `PathRemoveFileSpecFixed'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 78	 mov	 eax, DWORD PTR $T6[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$0
  0001d	83 65 78 fe	 and	 DWORD PTR $T6[rbp], -2
  00021	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ
$LN5@dtor$0:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$0@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA ENDP ; `PathRemoveFileSpecFixed'::`1'::dtor$0
ptr$ = 32
qtr$ = 40
newPath$ = 56
$T4 = 112
$T5 = 116
$T6 = 120
tv86 = 128
__$ArrayPad$ = 136
__$ReturnUdt$ = 160
path$ = 168
?dtor$1@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA PROC ; `PathRemoveFileSpecFixed'::`1'::dtor$1
  00034	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00039	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0003e	55		 push	 rbp
  0003f	57		 push	 rdi
  00040	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00044	48 8b ea	 mov	 rbp, rdx
  00047	48 8d 4d 38	 lea	 rcx, QWORD PTR newPath$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA ENDP ; `PathRemoveFileSpecFixed'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
ptr$ = 32
qtr$ = 40
newPath$ = 56
$T4 = 112
$T5 = 116
$T6 = 120
tv86 = 128
__$ArrayPad$ = 136
__$ReturnUdt$ = 160
path$ = 168
?dtor$0@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA PROC ; `PathRemoveFileSpecFixed'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 78	 mov	 eax, DWORD PTR $T6[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$0
  0001d	83 65 78 fe	 and	 DWORD PTR $T6[rbp], -2
  00021	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ
$LN5@dtor$0:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$0@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA ENDP ; `PathRemoveFileSpecFixed'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
ptr$ = 32
qtr$ = 40
newPath$ = 56
$T4 = 112
$T5 = 116
$T6 = 120
tv86 = 128
__$ArrayPad$ = 136
__$ReturnUdt$ = 160
path$ = 168
?dtor$1@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA PROC ; `PathRemoveFileSpecFixed'::`1'::dtor$1
  00034	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00039	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0003e	55		 push	 rbp
  0003f	57		 push	 rdi
  00040	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00044	48 8b ea	 mov	 rbp, rdx
  00047	48 8d 4d 38	 lea	 rcx, QWORD PTR newPath$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??PathRemoveFileSpecFixed@@YA?AU?$pair@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z@4HA ENDP ; `PathRemoveFileSpecFixed'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
fd$ = 40
ret$ = 84
tv73 = 96
tv80 = 104
__$ArrayPad$ = 112
filepath$ = 144
filesize$ = 152
?rgy_get_filesize@@YA_NPEB_WPEA_K@Z PROC		; rgy_get_filesize

; 566  : bool rgy_get_filesize(const WCHAR *filepath, uint64_t *filesize) {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  00029	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00030	48 33 c4	 xor	 rax, rsp
  00033	48 89 44 24 70	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 567  :     WIN32_FILE_ATTRIBUTE_DATA fd = { 0 };

  00038	48 8d 44 24 28	 lea	 rax, QWORD PTR fd$[rsp]
  0003d	48 8b f8	 mov	 rdi, rax
  00040	33 c0		 xor	 eax, eax
  00042	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00047	f3 aa		 rep stosb

; 568  :     bool ret = (GetFileAttributesExW(filepath, GetFileExInfoStandard, &fd)) ? true : false;

  00049	4c 8d 44 24 28	 lea	 r8, QWORD PTR fd$[rsp]
  0004e	33 d2		 xor	 edx, edx
  00050	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR filepath$[rsp]
  00058	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetFileAttributesExW
  0005e	85 c0		 test	 eax, eax
  00060	74 07		 je	 SHORT $LN3@rgy_get_fi
  00062	c6 44 24 60 01	 mov	 BYTE PTR tv73[rsp], 1
  00067	eb 05		 jmp	 SHORT $LN4@rgy_get_fi
$LN3@rgy_get_fi:
  00069	c6 44 24 60 00	 mov	 BYTE PTR tv73[rsp], 0
$LN4@rgy_get_fi:
  0006e	0f b6 44 24 60	 movzx	 eax, BYTE PTR tv73[rsp]
  00073	88 44 24 54	 mov	 BYTE PTR ret$[rsp], al

; 569  :     *filesize = (ret) ? (((UINT64)fd.nFileSizeHigh) << 32) + (UINT64)fd.nFileSizeLow : NULL;

  00077	0f b6 44 24 54	 movzx	 eax, BYTE PTR ret$[rsp]
  0007c	85 c0		 test	 eax, eax
  0007e	74 16		 je	 SHORT $LN5@rgy_get_fi
  00080	8b 44 24 44	 mov	 eax, DWORD PTR fd$[rsp+28]
  00084	48 c1 e0 20	 shl	 rax, 32			; 00000020H
  00088	8b 4c 24 48	 mov	 ecx, DWORD PTR fd$[rsp+32]
  0008c	48 03 c1	 add	 rax, rcx
  0008f	48 89 44 24 68	 mov	 QWORD PTR tv80[rsp], rax
  00094	eb 09		 jmp	 SHORT $LN6@rgy_get_fi
$LN5@rgy_get_fi:
  00096	48 c7 44 24 68
	00 00 00 00	 mov	 QWORD PTR tv80[rsp], 0
$LN6@rgy_get_fi:
  0009f	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR filesize$[rsp]
  000a7	48 8b 4c 24 68	 mov	 rcx, QWORD PTR tv80[rsp]
  000ac	48 89 08	 mov	 QWORD PTR [rax], rcx

; 570  :     return ret;

  000af	0f b6 44 24 54	 movzx	 eax, BYTE PTR ret$[rsp]

; 571  : }

  000b4	8b f8		 mov	 edi, eax
  000b6	48 8b cc	 mov	 rcx, rsp
  000b9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?rgy_get_filesize@@YA_NPEB_WPEA_K@Z$rtcFrameData
  000c0	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000c5	8b c7		 mov	 eax, edi
  000c7	48 8b 4c 24 70	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000cc	48 33 cc	 xor	 rcx, rsp
  000cf	e8 00 00 00 00	 call	 __security_check_cookie
  000d4	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  000db	5f		 pop	 rdi
  000dc	c3		 ret	 0
?rgy_get_filesize@@YA_NPEB_WPEA_K@Z ENDP		; rgy_get_filesize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
buffer$ = 40
$T4 = 84
$T5 = 86
$T6 = 88
tv74 = 96
tv86 = 104
__$ReturnUdt$ = 128
path$ = 136
?GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z PROC ; GetFullPath

; 406  : std::wstring GetFullPath(const WCHAR *path) {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 1c 00 00 00	 mov	 ecx, 28
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]
  00026	c7 44 24 58 00
	00 00 00	 mov	 DWORD PTR $T6[rsp], 0

; 407  :     if (PathIsRelativeW(path) == FALSE)

  0002e	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR path$[rsp]
  00036	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathIsRelativeW
  0003c	85 c0		 test	 eax, eax
  0003e	75 2e		 jne	 SHORT $LN2@GetFullPat

; 408  :         return std::wstring(path);

  00040	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR path$[rsp]
  00048	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00050	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00055	90		 npad	 1
  00056	8b 44 24 58	 mov	 eax, DWORD PTR $T6[rsp]
  0005a	83 c8 01	 or	 eax, 1
  0005d	89 44 24 58	 mov	 DWORD PTR $T6[rsp], eax
  00061	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  00069	e9 ae 00 00 00	 jmp	 $LN1@GetFullPat
$LN2@GetFullPat:

; 409  : 
; 410  :     std::vector<WCHAR> buffer(wcslen(path) + 1024, 0);

  0006e	33 c0		 xor	 eax, eax
  00070	66 89 44 24 56	 mov	 WORD PTR $T5[rsp], ax
  00075	48 8d 4c 24 54	 lea	 rcx, QWORD PTR $T4[rsp]
  0007a	e8 00 00 00 00	 call	 ??0?$allocator@_W@std@@QEAA@XZ ; std::allocator<wchar_t>::allocator<wchar_t>
  0007f	48 89 44 24 60	 mov	 QWORD PTR tv74[rsp], rax
  00084	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR path$[rsp]
  0008c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_wcslen
  00092	48 05 00 04 00
	00		 add	 rax, 1024		; 00000400H
  00098	48 8b 4c 24 60	 mov	 rcx, QWORD PTR tv74[rsp]
  0009d	4c 8b c9	 mov	 r9, rcx
  000a0	4c 8d 44 24 56	 lea	 r8, QWORD PTR $T5[rsp]
  000a5	48 8b d0	 mov	 rdx, rax
  000a8	48 8d 4c 24 28	 lea	 rcx, QWORD PTR buffer$[rsp]
  000ad	e8 00 00 00 00	 call	 ??0?$vector@_WV?$allocator@_W@std@@@std@@QEAA@_KAEB_WAEBV?$allocator@_W@1@@Z ; std::vector<wchar_t,std::allocator<wchar_t> >::vector<wchar_t,std::allocator<wchar_t> >
  000b2	90		 npad	 1

; 411  :     _wfullpath(buffer.data(), path, buffer.size());

  000b3	48 8d 4c 24 28	 lea	 rcx, QWORD PTR buffer$[rsp]
  000b8	e8 00 00 00 00	 call	 ?size@?$vector@_WV?$allocator@_W@std@@@std@@QEBA_KXZ ; std::vector<wchar_t,std::allocator<wchar_t> >::size
  000bd	48 89 44 24 68	 mov	 QWORD PTR tv86[rsp], rax
  000c2	48 8d 4c 24 28	 lea	 rcx, QWORD PTR buffer$[rsp]
  000c7	e8 00 00 00 00	 call	 ?data@?$vector@_WV?$allocator@_W@std@@@std@@QEAAPEA_WXZ ; std::vector<wchar_t,std::allocator<wchar_t> >::data
  000cc	48 8b 4c 24 68	 mov	 rcx, QWORD PTR tv86[rsp]
  000d1	4c 8b c1	 mov	 r8, rcx
  000d4	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR path$[rsp]
  000dc	48 8b c8	 mov	 rcx, rax
  000df	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wfullpath

; 412  :     return std::wstring(buffer.data());

  000e5	48 8d 4c 24 28	 lea	 rcx, QWORD PTR buffer$[rsp]
  000ea	e8 00 00 00 00	 call	 ?data@?$vector@_WV?$allocator@_W@std@@@std@@QEAAPEA_WXZ ; std::vector<wchar_t,std::allocator<wchar_t> >::data
  000ef	48 8b d0	 mov	 rdx, rax
  000f2	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000fa	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  000ff	8b 44 24 58	 mov	 eax, DWORD PTR $T6[rsp]
  00103	83 c8 01	 or	 eax, 1
  00106	89 44 24 58	 mov	 DWORD PTR $T6[rsp], eax
  0010a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR buffer$[rsp]
  0010f	e8 00 00 00 00	 call	 ??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ ; std::vector<wchar_t,std::allocator<wchar_t> >::~vector<wchar_t,std::allocator<wchar_t> >
  00114	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@GetFullPat:

; 413  : }

  0011c	48 8b f8	 mov	 rdi, rax
  0011f	48 8b cc	 mov	 rcx, rsp
  00122	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z$rtcFrameData
  00129	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0012e	48 8b c7	 mov	 rax, rdi
  00131	48 83 c4 70	 add	 rsp, 112		; 00000070H
  00135	5f		 pop	 rdi
  00136	c3		 ret	 0
  00137	cc		 int	 3
?GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z ENDP ; GetFullPath
_TEXT	ENDS
text$x	SEGMENT
buffer$ = 40
$T4 = 84
$T5 = 86
$T6 = 88
tv74 = 96
tv86 = 104
__$ReturnUdt$ = 128
path$ = 136
?dtor$0@?0??GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA PROC ; `GetFullPath'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 58	 mov	 eax, DWORD PTR $T6[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$0
  0001d	83 65 58 fe	 and	 DWORD PTR $T6[rbp], -2
  00021	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN5@dtor$0:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$0@?0??GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA ENDP ; `GetFullPath'::`1'::dtor$0
buffer$ = 40
$T4 = 84
$T5 = 86
$T6 = 88
tv74 = 96
tv86 = 104
__$ReturnUdt$ = 128
path$ = 136
?dtor$1@?0??GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA PROC ; `GetFullPath'::`1'::dtor$1
  00034	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00039	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0003e	55		 push	 rbp
  0003f	57		 push	 rdi
  00040	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00044	48 8b ea	 mov	 rbp, rdx
  00047	48 8d 4d 28	 lea	 rcx, QWORD PTR buffer$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ ; std::vector<wchar_t,std::allocator<wchar_t> >::~vector<wchar_t,std::allocator<wchar_t> >
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA ENDP ; `GetFullPath'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
buffer$ = 40
$T4 = 84
$T5 = 86
$T6 = 88
tv74 = 96
tv86 = 104
__$ReturnUdt$ = 128
path$ = 136
?dtor$0@?0??GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA PROC ; `GetFullPath'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 58	 mov	 eax, DWORD PTR $T6[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$0
  0001d	83 65 58 fe	 and	 DWORD PTR $T6[rbp], -2
  00021	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN5@dtor$0:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$0@?0??GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA ENDP ; `GetFullPath'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
buffer$ = 40
$T4 = 84
$T5 = 86
$T6 = 88
tv74 = 96
tv86 = 104
__$ReturnUdt$ = 128
path$ = 136
?dtor$1@?0??GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA PROC ; `GetFullPath'::`1'::dtor$1
  00034	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00039	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0003e	55		 push	 rbp
  0003f	57		 push	 rdi
  00040	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00044	48 8b ea	 mov	 rbp, rdx
  00047	48 8d 4d 28	 lea	 rcx, QWORD PTR buffer$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ ; std::vector<wchar_t,std::allocator<wchar_t> >::~vector<wchar_t,std::allocator<wchar_t> >
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??GetFullPath@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_W@Z@4HA ENDP ; `GetFullPath'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
pos$ = 32
$T1 = 40
__$ReturnUdt$ = 64
str$ = 72
from$ = 80
to$ = 88
?str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z PROC ; str_replace

; 280  : std::wstring str_replace(std::wstring str, const std::wstring& from, const std::wstring& to) {

$LN8:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0002d	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 281  :     std::wstring::size_type pos = 0;

  00035	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR pos$[rsp], 0
$LN2@str_replac:

; 282  :     while (pos = str.find(from, pos), pos != std::wstring::npos) {

  0003e	4c 8b 44 24 20	 mov	 r8, QWORD PTR pos$[rsp]
  00043	48 8b 54 24 50	 mov	 rdx, QWORD PTR from$[rsp]
  00048	48 8b 4c 24 48	 mov	 rcx, QWORD PTR str$[rsp]
  0004d	e8 00 00 00 00	 call	 ?find@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find
  00052	48 89 44 24 20	 mov	 QWORD PTR pos$[rsp], rax
  00057	48 83 7c 24 20
	ff		 cmp	 QWORD PTR pos$[rsp], -1
  0005d	74 3d		 je	 SHORT $LN3@str_replac

; 283  :         str.replace(pos, from.length(), to);

  0005f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR from$[rsp]
  00064	e8 00 00 00 00	 call	 ?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length
  00069	4c 8b 4c 24 58	 mov	 r9, QWORD PTR to$[rsp]
  0006e	4c 8b c0	 mov	 r8, rax
  00071	48 8b 54 24 20	 mov	 rdx, QWORD PTR pos$[rsp]
  00076	48 8b 4c 24 48	 mov	 rcx, QWORD PTR str$[rsp]
  0007b	e8 00 00 00 00	 call	 ?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0AEBV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace

; 284  :         pos += to.length();

  00080	48 8b 4c 24 58	 mov	 rcx, QWORD PTR to$[rsp]
  00085	e8 00 00 00 00	 call	 ?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length
  0008a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pos$[rsp]
  0008f	48 03 c8	 add	 rcx, rax
  00092	48 8b c1	 mov	 rax, rcx
  00095	48 89 44 24 20	 mov	 QWORD PTR pos$[rsp], rax

; 285  :     }

  0009a	eb a2		 jmp	 SHORT $LN2@str_replac
$LN3@str_replac:

; 286  :     return std::move(str);

  0009c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR str$[rsp]
  000a1	e8 00 00 00 00	 call	 ??$move@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > &>
  000a6	48 8b d0	 mov	 rdx, rax
  000a9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000ae	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  000b3	8b 44 24 28	 mov	 eax, DWORD PTR $T1[rsp]
  000b7	83 c8 01	 or	 eax, 1
  000ba	89 44 24 28	 mov	 DWORD PTR $T1[rsp], eax
  000be	48 8b 4c 24 48	 mov	 rcx, QWORD PTR str$[rsp]
  000c3	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  000c8	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 287  : }

  000cd	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000d1	5f		 pop	 rdi
  000d2	c3		 ret	 0
  000d3	cc		 int	 3
?str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z ENDP ; str_replace
_TEXT	ENDS
text$x	SEGMENT
pos$ = 32
$T1 = 40
__$ReturnUdt$ = 64
str$ = 72
from$ = 80
to$ = 88
?dtor$0@?0??str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z@4HA PROC ; `str_replace'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 48	 mov	 rcx, QWORD PTR str$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z@4HA ENDP ; `str_replace'::`1'::dtor$0
pos$ = 32
$T1 = 40
__$ReturnUdt$ = 64
str$ = 72
from$ = 80
to$ = 88
?dtor$1@?0??str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z@4HA PROC ; `str_replace'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00039	83 e0 01	 and	 eax, 1
  0003c	85 c0		 test	 eax, eax
  0003e	74 0d		 je	 SHORT $LN7@dtor$1
  00040	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00044	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00048	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN7@dtor$1:
  0004d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00051	5f		 pop	 rdi
  00052	5d		 pop	 rbp
  00053	c3		 ret	 0
?dtor$1@?0??str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z@4HA ENDP ; `str_replace'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pos$ = 32
$T1 = 40
__$ReturnUdt$ = 64
str$ = 72
from$ = 80
to$ = 88
?dtor$0@?0??str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z@4HA PROC ; `str_replace'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 48	 mov	 rcx, QWORD PTR str$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z@4HA ENDP ; `str_replace'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pos$ = 32
$T1 = 40
__$ReturnUdt$ = 64
str$ = 72
from$ = 80
to$ = 88
?dtor$1@?0??str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z@4HA PROC ; `str_replace'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00039	83 e0 01	 and	 eax, 1
  0003c	85 c0		 test	 eax, eax
  0003e	74 0d		 je	 SHORT $LN7@dtor$1
  00040	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00044	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00048	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN7@dtor$1:
  0004d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00051	5f		 pop	 rdi
  00052	5d		 pop	 rbp
  00053	c3		 ret	 0
?dtor$1@?0??str_replace@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@AEBV12@1@Z@4HA ENDP ; `str_replace'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
args$ = 40
len$ = 56
buffer$ = 72
retStr$ = 136
$T6 = 193
$T7 = 194
$T8 = 196
__$ArrayPad$ = 200
__$ReturnUdt$ = 224
format$ = 232
?strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ PROC ; strsprintf

; 254  : std::wstring strsprintf(const WCHAR* format, ...) {

$LN8:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000f	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00014	57		 push	 rdi
  00015	48 81 ec d0 00
	00 00		 sub	 rsp, 208		; 000000d0H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+224]
  00033	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003a	48 33 c4	 xor	 rax, rsp
  0003d	48 89 84 24 c8
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00045	c7 84 24 c4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T8[rsp], 0

; 255  :     if (format == nullptr) {

  00050	48 83 bc 24 e8
	00 00 00 00	 cmp	 QWORD PTR format$[rsp], 0
  00059	75 33		 jne	 SHORT $LN2@strsprintf

; 256  :         return L"";

  0005b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG114901
  00062	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0006a	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0006f	90		 npad	 1
  00070	8b 84 24 c4 00
	00 00		 mov	 eax, DWORD PTR $T8[rsp]
  00077	83 c8 01	 or	 eax, 1
  0007a	89 84 24 c4 00
	00 00		 mov	 DWORD PTR $T8[rsp], eax
  00081	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  00089	e9 e3 00 00 00	 jmp	 $LN1@strsprintf
$LN2@strsprintf:

; 257  :     }
; 258  :     va_list args;
; 259  :     va_start(args, format);

  0008e	48 8d 84 24 f0
	00 00 00	 lea	 rax, QWORD PTR format$[rsp+8]
  00096	48 89 44 24 28	 mov	 QWORD PTR args$[rsp], rax

; 260  :     const size_t len = _vscwprintf(format, args) + 1;

  0009b	48 8b 54 24 28	 mov	 rdx, QWORD PTR args$[rsp]
  000a0	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR format$[rsp]
  000a8	e8 00 00 00 00	 call	 _vscwprintf
  000ad	ff c0		 inc	 eax
  000af	48 98		 cdqe
  000b1	48 89 44 24 38	 mov	 QWORD PTR len$[rsp], rax

; 261  : 
; 262  :     std::vector<WCHAR> buffer(len, 0);

  000b6	33 c0		 xor	 eax, eax
  000b8	66 89 84 24 c2
	00 00 00	 mov	 WORD PTR $T7[rsp], ax
  000c0	48 8d 8c 24 c1
	00 00 00	 lea	 rcx, QWORD PTR $T6[rsp]
  000c8	e8 00 00 00 00	 call	 ??0?$allocator@_W@std@@QEAA@XZ ; std::allocator<wchar_t>::allocator<wchar_t>
  000cd	4c 8b c8	 mov	 r9, rax
  000d0	4c 8d 84 24 c2
	00 00 00	 lea	 r8, QWORD PTR $T7[rsp]
  000d8	48 8b 54 24 38	 mov	 rdx, QWORD PTR len$[rsp]
  000dd	48 8d 4c 24 48	 lea	 rcx, QWORD PTR buffer$[rsp]
  000e2	e8 00 00 00 00	 call	 ??0?$vector@_WV?$allocator@_W@std@@@std@@QEAA@_KAEB_WAEBV?$allocator@_W@1@@Z ; std::vector<wchar_t,std::allocator<wchar_t> >::vector<wchar_t,std::allocator<wchar_t> >
  000e7	90		 npad	 1

; 263  :     vswprintf(buffer.data(), format, args);

  000e8	48 8d 4c 24 48	 lea	 rcx, QWORD PTR buffer$[rsp]
  000ed	e8 00 00 00 00	 call	 ?data@?$vector@_WV?$allocator@_W@std@@@std@@QEAAPEA_WXZ ; std::vector<wchar_t,std::allocator<wchar_t> >::data
  000f2	4c 8b 44 24 28	 mov	 r8, QWORD PTR args$[rsp]
  000f7	48 8b 94 24 e8
	00 00 00	 mov	 rdx, QWORD PTR format$[rsp]
  000ff	48 8b c8	 mov	 rcx, rax
  00102	e8 00 00 00 00	 call	 ?vswprintf@@YAHQEA_WQEB_WPEAD@Z ; vswprintf

; 264  :     va_end(args);

  00107	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR args$[rsp], 0

; 265  :     std::wstring retStr = std::wstring(buffer.data());

  00110	48 8d 4c 24 48	 lea	 rcx, QWORD PTR buffer$[rsp]
  00115	e8 00 00 00 00	 call	 ?data@?$vector@_WV?$allocator@_W@std@@@std@@QEAAPEA_WXZ ; std::vector<wchar_t,std::allocator<wchar_t> >::data
  0011a	48 8b d0	 mov	 rdx, rax
  0011d	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR retStr$[rsp]
  00125	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0012a	90		 npad	 1

; 266  :     return retStr;

  0012b	48 8d 94 24 88
	00 00 00	 lea	 rdx, QWORD PTR retStr$[rsp]
  00133	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0013b	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00140	8b 84 24 c4 00
	00 00		 mov	 eax, DWORD PTR $T8[rsp]
  00147	83 c8 01	 or	 eax, 1
  0014a	89 84 24 c4 00
	00 00		 mov	 DWORD PTR $T8[rsp], eax
  00151	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR retStr$[rsp]
  00159	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0015e	90		 npad	 1
  0015f	48 8d 4c 24 48	 lea	 rcx, QWORD PTR buffer$[rsp]
  00164	e8 00 00 00 00	 call	 ??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ ; std::vector<wchar_t,std::allocator<wchar_t> >::~vector<wchar_t,std::allocator<wchar_t> >
  00169	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@strsprintf:

; 267  : }

  00171	48 8b f8	 mov	 rdi, rax
  00174	48 8b cc	 mov	 rcx, rsp
  00177	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ$rtcFrameData
  0017e	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00183	48 8b c7	 mov	 rax, rdi
  00186	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0018e	48 33 cc	 xor	 rcx, rsp
  00191	e8 00 00 00 00	 call	 __security_check_cookie
  00196	48 81 c4 d0 00
	00 00		 add	 rsp, 208		; 000000d0H
  0019d	5f		 pop	 rdi
  0019e	c3		 ret	 0
  0019f	cc		 int	 3
?strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ ENDP ; strsprintf
_TEXT	ENDS
text$x	SEGMENT
args$ = 40
len$ = 56
buffer$ = 72
retStr$ = 136
$T6 = 193
$T7 = 194
$T8 = 196
__$ArrayPad$ = 200
__$ReturnUdt$ = 224
format$ = 232
?dtor$0@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA PROC ; `strsprintf'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 85 c4 00 00
	00		 mov	 eax, DWORD PTR $T8[rbp]
  00019	83 e0 01	 and	 eax, 1
  0001c	85 c0		 test	 eax, eax
  0001e	74 13		 je	 SHORT $LN5@dtor$0
  00020	83 a5 c4 00 00
	00 fe		 and	 DWORD PTR $T8[rbp], -2
  00027	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0002e	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN5@dtor$0:
  00033	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00037	5f		 pop	 rdi
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
?dtor$0@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA ENDP ; `strsprintf'::`1'::dtor$0
args$ = 40
len$ = 56
buffer$ = 72
retStr$ = 136
$T6 = 193
$T7 = 194
$T8 = 196
__$ArrayPad$ = 200
__$ReturnUdt$ = 224
format$ = 232
?dtor$1@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA PROC ; `strsprintf'::`1'::dtor$1
  0003a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0003f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00044	55		 push	 rbp
  00045	57		 push	 rdi
  00046	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0004a	48 8b ea	 mov	 rbp, rdx
  0004d	48 8d 4d 48	 lea	 rcx, QWORD PTR buffer$[rbp]
  00051	e8 00 00 00 00	 call	 ??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ ; std::vector<wchar_t,std::allocator<wchar_t> >::~vector<wchar_t,std::allocator<wchar_t> >
  00056	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0005a	5f		 pop	 rdi
  0005b	5d		 pop	 rbp
  0005c	c3		 ret	 0
?dtor$1@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA ENDP ; `strsprintf'::`1'::dtor$1
args$ = 40
len$ = 56
buffer$ = 72
retStr$ = 136
$T6 = 193
$T7 = 194
$T8 = 196
__$ArrayPad$ = 200
__$ReturnUdt$ = 224
format$ = 232
?dtor$2@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA PROC ; `strsprintf'::`1'::dtor$2
  0005d	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00062	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00067	55		 push	 rbp
  00068	57		 push	 rdi
  00069	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0006d	48 8b ea	 mov	 rbp, rdx
  00070	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR retStr$[rbp]
  00077	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0007c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00080	5f		 pop	 rdi
  00081	5d		 pop	 rbp
  00082	c3		 ret	 0
?dtor$2@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA ENDP ; `strsprintf'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
args$ = 40
len$ = 56
buffer$ = 72
retStr$ = 136
$T6 = 193
$T7 = 194
$T8 = 196
__$ArrayPad$ = 200
__$ReturnUdt$ = 224
format$ = 232
?dtor$0@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA PROC ; `strsprintf'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 85 c4 00 00
	00		 mov	 eax, DWORD PTR $T8[rbp]
  00019	83 e0 01	 and	 eax, 1
  0001c	85 c0		 test	 eax, eax
  0001e	74 13		 je	 SHORT $LN5@dtor$0
  00020	83 a5 c4 00 00
	00 fe		 and	 DWORD PTR $T8[rbp], -2
  00027	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0002e	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN5@dtor$0:
  00033	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00037	5f		 pop	 rdi
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
?dtor$0@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA ENDP ; `strsprintf'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
args$ = 40
len$ = 56
buffer$ = 72
retStr$ = 136
$T6 = 193
$T7 = 194
$T8 = 196
__$ArrayPad$ = 200
__$ReturnUdt$ = 224
format$ = 232
?dtor$1@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA PROC ; `strsprintf'::`1'::dtor$1
  0003a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0003f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00044	55		 push	 rbp
  00045	57		 push	 rdi
  00046	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0004a	48 8b ea	 mov	 rbp, rdx
  0004d	48 8d 4d 48	 lea	 rcx, QWORD PTR buffer$[rbp]
  00051	e8 00 00 00 00	 call	 ??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ ; std::vector<wchar_t,std::allocator<wchar_t> >::~vector<wchar_t,std::allocator<wchar_t> >
  00056	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0005a	5f		 pop	 rdi
  0005b	5d		 pop	 rbp
  0005c	c3		 ret	 0
?dtor$1@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA ENDP ; `strsprintf'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
args$ = 40
len$ = 56
buffer$ = 72
retStr$ = 136
$T6 = 193
$T7 = 194
$T8 = 196
__$ArrayPad$ = 200
__$ReturnUdt$ = 224
format$ = 232
?dtor$2@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA PROC ; `strsprintf'::`1'::dtor$2
  0005d	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00062	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00067	55		 push	 rbp
  00068	57		 push	 rdi
  00069	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0006d	48 8b ea	 mov	 rbp, rdx
  00070	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR retStr$[rbp]
  00077	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0007c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00080	5f		 pop	 rdi
  00081	5d		 pop	 rbp
  00082	c3		 ret	 0
?dtor$2@?0??strsprintf@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEB_WZZ@4HA ENDP ; `strsprintf'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
wstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
str$ = 136
codepage$ = 144
?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; char_to_wstring

; 211  : std::wstring char_to_wstring(const std::string& str, uint32_t codepage) {

$LN6:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 1c 00 00 00	 mov	 ecx, 28
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]
  0002b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00032	48 33 c4	 xor	 rax, rsp
  00035	48 89 44 24 68	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003a	c7 44 24 60 00
	00 00 00	 mov	 DWORD PTR $T4[rsp], 0

; 212  :     std::wstring wstr;

  00042	48 8d 4c 24 28	 lea	 rcx, QWORD PTR wstr$[rsp]
  00047	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0004c	90		 npad	 1

; 213  :     char_to_wstring(wstr, str.c_str(), codepage);

  0004d	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR str$[rsp]
  00055	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0005a	44 8b 84 24 90
	00 00 00	 mov	 r8d, DWORD PTR codepage$[rsp]
  00062	48 8b d0	 mov	 rdx, rax
  00065	48 8d 4c 24 28	 lea	 rcx, QWORD PTR wstr$[rsp]
  0006a	e8 00 00 00 00	 call	 ?char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z ; char_to_wstring

; 214  :     return wstr;

  0006f	48 8d 54 24 28	 lea	 rdx, QWORD PTR wstr$[rsp]
  00074	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0007c	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00081	8b 44 24 60	 mov	 eax, DWORD PTR $T4[rsp]
  00085	83 c8 01	 or	 eax, 1
  00088	89 44 24 60	 mov	 DWORD PTR $T4[rsp], eax
  0008c	48 8d 4c 24 28	 lea	 rcx, QWORD PTR wstr$[rsp]
  00091	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00096	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 215  : }

  0009e	48 8b f8	 mov	 rdi, rax
  000a1	48 8b cc	 mov	 rcx, rsp
  000a4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z$rtcFrameData
  000ab	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000b0	48 8b c7	 mov	 rax, rdi
  000b3	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000b8	48 33 cc	 xor	 rcx, rsp
  000bb	e8 00 00 00 00	 call	 __security_check_cookie
  000c0	48 83 c4 70	 add	 rsp, 112		; 00000070H
  000c4	5f		 pop	 rdi
  000c5	c3		 ret	 0
  000c6	cc		 int	 3
?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; char_to_wstring
_TEXT	ENDS
text$x	SEGMENT
wstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
str$ = 136
codepage$ = 144
?dtor$0@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA PROC ; `char_to_wstring'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR wstr$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA ENDP ; `char_to_wstring'::`1'::dtor$0
wstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
str$ = 136
codepage$ = 144
?dtor$1@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA PROC ; `char_to_wstring'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00039	83 e0 01	 and	 eax, 1
  0003c	85 c0		 test	 eax, eax
  0003e	74 10		 je	 SHORT $LN5@dtor$1
  00040	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00044	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN5@dtor$1:
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA ENDP ; `char_to_wstring'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
wstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
str$ = 136
codepage$ = 144
?dtor$0@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA PROC ; `char_to_wstring'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR wstr$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA ENDP ; `char_to_wstring'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
wstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
str$ = 136
codepage$ = 144
?dtor$1@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA PROC ; `char_to_wstring'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00039	83 e0 01	 and	 eax, 1
  0003c	85 c0		 test	 eax, eax
  0003e	74 10		 je	 SHORT $LN5@dtor$1
  00040	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00044	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN5@dtor$1:
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z@4HA ENDP ; `char_to_wstring'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
wstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
str$ = 136
codepage$ = 144
?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z PROC ; char_to_wstring

; 203  : std::wstring char_to_wstring(const char *str, uint32_t codepage) {

$LN7:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 1c 00 00 00	 mov	 ecx, 28
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]
  0002b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00032	48 33 c4	 xor	 rax, rsp
  00035	48 89 44 24 68	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003a	c7 44 24 60 00
	00 00 00	 mov	 DWORD PTR $T4[rsp], 0

; 204  :     if (str == nullptr) {

  00042	48 83 bc 24 88
	00 00 00 00	 cmp	 QWORD PTR str$[rsp], 0
  0004b	75 2a		 jne	 SHORT $LN2@char_to_ws

; 205  :         return L"";

  0004d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG114803
  00054	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0005c	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00061	90		 npad	 1
  00062	8b 44 24 60	 mov	 eax, DWORD PTR $T4[rsp]
  00066	83 c8 01	 or	 eax, 1
  00069	89 44 24 60	 mov	 DWORD PTR $T4[rsp], eax
  0006d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  00075	eb 54		 jmp	 SHORT $LN1@char_to_ws
$LN2@char_to_ws:

; 206  :     }
; 207  :     std::wstring wstr;

  00077	48 8d 4c 24 28	 lea	 rcx, QWORD PTR wstr$[rsp]
  0007c	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00081	90		 npad	 1

; 208  :     char_to_wstring(wstr, str, codepage);

  00082	44 8b 84 24 90
	00 00 00	 mov	 r8d, DWORD PTR codepage$[rsp]
  0008a	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR str$[rsp]
  00092	48 8d 4c 24 28	 lea	 rcx, QWORD PTR wstr$[rsp]
  00097	e8 00 00 00 00	 call	 ?char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z ; char_to_wstring

; 209  :     return wstr;

  0009c	48 8d 54 24 28	 lea	 rdx, QWORD PTR wstr$[rsp]
  000a1	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000a9	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  000ae	8b 44 24 60	 mov	 eax, DWORD PTR $T4[rsp]
  000b2	83 c8 01	 or	 eax, 1
  000b5	89 44 24 60	 mov	 DWORD PTR $T4[rsp], eax
  000b9	48 8d 4c 24 28	 lea	 rcx, QWORD PTR wstr$[rsp]
  000be	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  000c3	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@char_to_ws:

; 210  : }

  000cb	48 8b f8	 mov	 rdi, rax
  000ce	48 8b cc	 mov	 rcx, rsp
  000d1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z$rtcFrameData
  000d8	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000dd	48 8b c7	 mov	 rax, rdi
  000e0	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000e5	48 33 cc	 xor	 rcx, rsp
  000e8	e8 00 00 00 00	 call	 __security_check_cookie
  000ed	48 83 c4 70	 add	 rsp, 112		; 00000070H
  000f1	5f		 pop	 rdi
  000f2	c3		 ret	 0
  000f3	cc		 int	 3
?char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z ENDP ; char_to_wstring
_TEXT	ENDS
text$x	SEGMENT
wstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
str$ = 136
codepage$ = 144
?dtor$0@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA PROC ; `char_to_wstring'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$0
  0001d	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00021	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN5@dtor$0:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$0@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA ENDP ; `char_to_wstring'::`1'::dtor$0
wstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
str$ = 136
codepage$ = 144
?dtor$1@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA PROC ; `char_to_wstring'::`1'::dtor$1
  00034	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00039	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0003e	55		 push	 rbp
  0003f	57		 push	 rdi
  00040	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00044	48 8b ea	 mov	 rbp, rdx
  00047	48 8d 4d 28	 lea	 rcx, QWORD PTR wstr$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA ENDP ; `char_to_wstring'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
wstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
str$ = 136
codepage$ = 144
?dtor$0@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA PROC ; `char_to_wstring'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$0
  0001d	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00021	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN5@dtor$0:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$0@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA ENDP ; `char_to_wstring'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
wstr$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
str$ = 136
codepage$ = 144
?dtor$1@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA PROC ; `char_to_wstring'::`1'::dtor$1
  00034	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00039	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0003e	55		 push	 rbp
  0003f	57		 push	 rdi
  00040	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00044	48 8b ea	 mov	 rbp, rdx
  00047	48 8d 4d 28	 lea	 rcx, QWORD PTR wstr$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??char_to_wstring@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA ENDP ; `char_to_wstring'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
widechar_length$ = 48
tmp$ = 72
$T4 = 116
$T5 = 118
$T6 = 120
$T7 = 124
tv85 = 128
wstr$ = 160
str$ = 168
codepage$ = 176
?char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z PROC ; char_to_wstring

; 166  : unsigned int char_to_wstring(std::wstring& wstr, const char *str, uint32_t codepage) {

$LN6:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+160]

; 167  :     if (str == nullptr) {

  0002e	48 83 bc 24 a8
	00 00 00 00	 cmp	 QWORD PTR str$[rsp], 0
  00037	75 1b		 jne	 SHORT $LN2@char_to_ws

; 168  :         wstr = L"";

  00039	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG114789
  00040	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR wstr$[rsp]
  00048	e8 00 00 00 00	 call	 ??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@QEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=

; 169  :         return 0;

  0004d	33 c0		 xor	 eax, eax
  0004f	e9 01 01 00 00	 jmp	 $LN1@char_to_ws
$LN2@char_to_ws:

; 170  :     }
; 171  :     int widechar_length = MultiByteToWideChar(codepage, 0, str, -1, nullptr, 0);

  00054	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR [rsp+40], 0
  0005c	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00065	41 b9 ff ff ff
	ff		 mov	 r9d, -1
  0006b	4c 8b 84 24 a8
	00 00 00	 mov	 r8, QWORD PTR str$[rsp]
  00073	33 d2		 xor	 edx, edx
  00075	8b 8c 24 b0 00
	00 00		 mov	 ecx, DWORD PTR codepage$[rsp]
  0007c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_MultiByteToWideChar
  00082	89 44 24 30	 mov	 DWORD PTR widechar_length$[rsp], eax

; 172  :     std::vector<wchar_t> tmp(widechar_length, 0);

  00086	33 c0		 xor	 eax, eax
  00088	66 89 44 24 76	 mov	 WORD PTR $T5[rsp], ax
  0008d	48 8d 4c 24 74	 lea	 rcx, QWORD PTR $T4[rsp]
  00092	e8 00 00 00 00	 call	 ??0?$allocator@_W@std@@QEAA@XZ ; std::allocator<wchar_t>::allocator<wchar_t>
  00097	48 63 4c 24 30	 movsxd	 rcx, DWORD PTR widechar_length$[rsp]
  0009c	4c 8b c8	 mov	 r9, rax
  0009f	4c 8d 44 24 76	 lea	 r8, QWORD PTR $T5[rsp]
  000a4	48 8b d1	 mov	 rdx, rcx
  000a7	48 8d 4c 24 48	 lea	 rcx, QWORD PTR tmp$[rsp]
  000ac	e8 00 00 00 00	 call	 ??0?$vector@_WV?$allocator@_W@std@@@std@@QEAA@_KAEB_WAEBV?$allocator@_W@1@@Z ; std::vector<wchar_t,std::allocator<wchar_t> >::vector<wchar_t,std::allocator<wchar_t> >
  000b1	90		 npad	 1

; 173  :     if (0 == MultiByteToWideChar(codepage, 0, str, -1, tmp.data(), (int)tmp.size())) {

  000b2	48 8d 4c 24 48	 lea	 rcx, QWORD PTR tmp$[rsp]
  000b7	e8 00 00 00 00	 call	 ?size@?$vector@_WV?$allocator@_W@std@@@std@@QEBA_KXZ ; std::vector<wchar_t,std::allocator<wchar_t> >::size
  000bc	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR tv85[rsp], rax
  000c4	48 8d 4c 24 48	 lea	 rcx, QWORD PTR tmp$[rsp]
  000c9	e8 00 00 00 00	 call	 ?data@?$vector@_WV?$allocator@_W@std@@@std@@QEAAPEA_WXZ ; std::vector<wchar_t,std::allocator<wchar_t> >::data
  000ce	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR tv85[rsp]
  000d6	89 4c 24 28	 mov	 DWORD PTR [rsp+40], ecx
  000da	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000df	41 b9 ff ff ff
	ff		 mov	 r9d, -1
  000e5	4c 8b 84 24 a8
	00 00 00	 mov	 r8, QWORD PTR str$[rsp]
  000ed	33 d2		 xor	 edx, edx
  000ef	8b 8c 24 b0 00
	00 00		 mov	 ecx, DWORD PTR codepage$[rsp]
  000f6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_MultiByteToWideChar
  000fc	85 c0		 test	 eax, eax
  000fe	75 25		 jne	 SHORT $LN3@char_to_ws

; 174  :         wstr.clear();

  00100	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR wstr$[rsp]
  00108	e8 00 00 00 00	 call	 ?clear@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::clear

; 175  :         return 0;

  0010d	c7 44 24 78 00
	00 00 00	 mov	 DWORD PTR $T6[rsp], 0
  00115	48 8d 4c 24 48	 lea	 rcx, QWORD PTR tmp$[rsp]
  0011a	e8 00 00 00 00	 call	 ??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ ; std::vector<wchar_t,std::allocator<wchar_t> >::~vector<wchar_t,std::allocator<wchar_t> >
  0011f	8b 44 24 78	 mov	 eax, DWORD PTR $T6[rsp]
  00123	eb 30		 jmp	 SHORT $LN1@char_to_ws
$LN3@char_to_ws:

; 176  :     }
; 177  :     wstr = tmp.data();

  00125	48 8d 4c 24 48	 lea	 rcx, QWORD PTR tmp$[rsp]
  0012a	e8 00 00 00 00	 call	 ?data@?$vector@_WV?$allocator@_W@std@@@std@@QEAAPEA_WXZ ; std::vector<wchar_t,std::allocator<wchar_t> >::data
  0012f	48 8b d0	 mov	 rdx, rax
  00132	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR wstr$[rsp]
  0013a	e8 00 00 00 00	 call	 ??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@QEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=

; 178  :     return widechar_length;

  0013f	8b 44 24 30	 mov	 eax, DWORD PTR widechar_length$[rsp]
  00143	89 44 24 7c	 mov	 DWORD PTR $T7[rsp], eax
  00147	48 8d 4c 24 48	 lea	 rcx, QWORD PTR tmp$[rsp]
  0014c	e8 00 00 00 00	 call	 ??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ ; std::vector<wchar_t,std::allocator<wchar_t> >::~vector<wchar_t,std::allocator<wchar_t> >
  00151	8b 44 24 7c	 mov	 eax, DWORD PTR $T7[rsp]
$LN1@char_to_ws:

; 179  : }

  00155	48 8b f8	 mov	 rdi, rax
  00158	48 8b cc	 mov	 rcx, rsp
  0015b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z$rtcFrameData
  00162	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00167	48 8b c7	 mov	 rax, rdi
  0016a	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  00171	5f		 pop	 rdi
  00172	c3		 ret	 0
?char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z ENDP ; char_to_wstring
_TEXT	ENDS
text$x	SEGMENT
widechar_length$ = 48
tmp$ = 72
$T4 = 116
$T5 = 118
$T6 = 120
$T7 = 124
tv85 = 128
wstr$ = 160
str$ = 168
codepage$ = 176
?dtor$0@?0??char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA PROC ; `char_to_wstring'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 48	 lea	 rcx, QWORD PTR tmp$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ ; std::vector<wchar_t,std::allocator<wchar_t> >::~vector<wchar_t,std::allocator<wchar_t> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA ENDP ; `char_to_wstring'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
widechar_length$ = 48
tmp$ = 72
$T4 = 116
$T5 = 118
$T6 = 120
$T7 = 124
tv85 = 128
wstr$ = 160
str$ = 168
codepage$ = 176
?dtor$0@?0??char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA PROC ; `char_to_wstring'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 48	 lea	 rcx, QWORD PTR tmp$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@_WV?$allocator@_W@std@@@std@@QEAA@XZ ; std::vector<wchar_t,std::allocator<wchar_t> >::~vector<wchar_t,std::allocator<wchar_t> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??char_to_wstring@@YAIAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEBDI@Z@4HA ENDP ; `char_to_wstring'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
str$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
wstr$ = 136
codepage$ = 144
?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z PROC ; wstring_to_string

; 92   : std::string wstring_to_string(const std::wstring& wstr, uint32_t codepage) {

$LN6:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 1c 00 00 00	 mov	 ecx, 28
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]
  0002b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00032	48 33 c4	 xor	 rax, rsp
  00035	48 89 44 24 68	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003a	c7 44 24 60 00
	00 00 00	 mov	 DWORD PTR $T4[rsp], 0

; 93   :     std::string str;

  00042	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00047	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0004c	90		 npad	 1

; 94   :     wstring_to_string(wstr.c_str(), str, codepage);

  0004d	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR wstr$[rsp]
  00055	e8 00 00 00 00	 call	 ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
  0005a	44 8b 84 24 90
	00 00 00	 mov	 r8d, DWORD PTR codepage$[rsp]
  00062	48 8d 54 24 28	 lea	 rdx, QWORD PTR str$[rsp]
  00067	48 8b c8	 mov	 rcx, rax
  0006a	e8 00 00 00 00	 call	 ?wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; wstring_to_string

; 95   :     return str;

  0006f	48 8d 54 24 28	 lea	 rdx, QWORD PTR str$[rsp]
  00074	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0007c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00081	8b 44 24 60	 mov	 eax, DWORD PTR $T4[rsp]
  00085	83 c8 01	 or	 eax, 1
  00088	89 44 24 60	 mov	 DWORD PTR $T4[rsp], eax
  0008c	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00091	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00096	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 96   : }

  0009e	48 8b f8	 mov	 rdi, rax
  000a1	48 8b cc	 mov	 rcx, rsp
  000a4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z$rtcFrameData
  000ab	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000b0	48 8b c7	 mov	 rax, rdi
  000b3	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000b8	48 33 cc	 xor	 rcx, rsp
  000bb	e8 00 00 00 00	 call	 __security_check_cookie
  000c0	48 83 c4 70	 add	 rsp, 112		; 00000070H
  000c4	5f		 pop	 rdi
  000c5	c3		 ret	 0
  000c6	cc		 int	 3
?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z ENDP ; wstring_to_string
_TEXT	ENDS
text$x	SEGMENT
str$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
wstr$ = 136
codepage$ = 144
?dtor$0@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA PROC ; `wstring_to_string'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR str$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA ENDP ; `wstring_to_string'::`1'::dtor$0
str$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
wstr$ = 136
codepage$ = 144
?dtor$1@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA PROC ; `wstring_to_string'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00039	83 e0 01	 and	 eax, 1
  0003c	85 c0		 test	 eax, eax
  0003e	74 10		 je	 SHORT $LN5@dtor$1
  00040	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00044	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$1:
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA ENDP ; `wstring_to_string'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
wstr$ = 136
codepage$ = 144
?dtor$0@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA PROC ; `wstring_to_string'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR str$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA ENDP ; `wstring_to_string'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
wstr$ = 136
codepage$ = 144
?dtor$1@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA PROC ; `wstring_to_string'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00039	83 e0 01	 and	 eax, 1
  0003c	85 c0		 test	 eax, eax
  0003e	74 10		 je	 SHORT $LN5@dtor$1
  00040	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00044	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$1:
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@I@Z@4HA ENDP ; `wstring_to_string'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
str$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
wstr$ = 136
codepage$ = 144
?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z PROC ; wstring_to_string

; 83   : std::string wstring_to_string(const wchar_t *wstr, uint32_t codepage) {

$LN7:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 1c 00 00 00	 mov	 ecx, 28
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]
  0002b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00032	48 33 c4	 xor	 rax, rsp
  00035	48 89 44 24 68	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003a	c7 44 24 60 00
	00 00 00	 mov	 DWORD PTR $T4[rsp], 0

; 84   :     if (wstr == nullptr) {

  00042	48 83 bc 24 88
	00 00 00 00	 cmp	 QWORD PTR wstr$[rsp], 0
  0004b	75 2a		 jne	 SHORT $LN2@wstring_to

; 85   :         return "";

  0004d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG114354
  00054	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0005c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00061	90		 npad	 1
  00062	8b 44 24 60	 mov	 eax, DWORD PTR $T4[rsp]
  00066	83 c8 01	 or	 eax, 1
  00069	89 44 24 60	 mov	 DWORD PTR $T4[rsp], eax
  0006d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  00075	eb 54		 jmp	 SHORT $LN1@wstring_to
$LN2@wstring_to:

; 86   :     }
; 87   :     std::string str;

  00077	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  0007c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00081	90		 npad	 1

; 88   :     wstring_to_string(wstr, str, codepage);

  00082	44 8b 84 24 90
	00 00 00	 mov	 r8d, DWORD PTR codepage$[rsp]
  0008a	48 8d 54 24 28	 lea	 rdx, QWORD PTR str$[rsp]
  0008f	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR wstr$[rsp]
  00097	e8 00 00 00 00	 call	 ?wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; wstring_to_string

; 89   :     return str;

  0009c	48 8d 54 24 28	 lea	 rdx, QWORD PTR str$[rsp]
  000a1	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000a9	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000ae	8b 44 24 60	 mov	 eax, DWORD PTR $T4[rsp]
  000b2	83 c8 01	 or	 eax, 1
  000b5	89 44 24 60	 mov	 DWORD PTR $T4[rsp], eax
  000b9	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  000be	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000c3	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@wstring_to:

; 90   : }

  000cb	48 8b f8	 mov	 rdi, rax
  000ce	48 8b cc	 mov	 rcx, rsp
  000d1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z$rtcFrameData
  000d8	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000dd	48 8b c7	 mov	 rax, rdi
  000e0	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000e5	48 33 cc	 xor	 rcx, rsp
  000e8	e8 00 00 00 00	 call	 __security_check_cookie
  000ed	48 83 c4 70	 add	 rsp, 112		; 00000070H
  000f1	5f		 pop	 rdi
  000f2	c3		 ret	 0
  000f3	cc		 int	 3
?wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z ENDP ; wstring_to_string
_TEXT	ENDS
text$x	SEGMENT
str$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
wstr$ = 136
codepage$ = 144
?dtor$0@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA PROC ; `wstring_to_string'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$0
  0001d	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00021	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$0:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$0@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA ENDP ; `wstring_to_string'::`1'::dtor$0
str$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
wstr$ = 136
codepage$ = 144
?dtor$1@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA PROC ; `wstring_to_string'::`1'::dtor$1
  00034	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00039	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0003e	55		 push	 rbp
  0003f	57		 push	 rdi
  00040	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00044	48 8b ea	 mov	 rbp, rdx
  00047	48 8d 4d 28	 lea	 rcx, QWORD PTR str$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA ENDP ; `wstring_to_string'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
wstr$ = 136
codepage$ = 144
?dtor$0@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA PROC ; `wstring_to_string'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$0
  0001d	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00021	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$0:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$0@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA ENDP ; `wstring_to_string'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
wstr$ = 136
codepage$ = 144
?dtor$1@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA PROC ; `wstring_to_string'::`1'::dtor$1
  00034	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00039	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0003e	55		 push	 rbp
  0003f	57		 push	 rdi
  00040	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00044	48 8b ea	 mov	 rbp, rdx
  00047	48 8d 4d 28	 lea	 rcx, QWORD PTR str$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??wstring_to_string@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEB_WI@Z@4HA ENDP ; `wstring_to_string'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
_TEXT	SEGMENT
flags$ = 64
multibyte_length$ = 68
tmp$ = 88
$T4 = 132
$T5 = 133
$T6 = 136
$T7 = 140
tv68 = 144
tv91 = 152
wstr$ = 176
str$ = 184
codepage$ = 192
?wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z PROC ; wstring_to_string

; 50   : unsigned int wstring_to_string(const wchar_t *wstr, std::string& str, uint32_t codepage) {

$LN8:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+176]

; 51   :     if (wstr == nullptr) {

  0002e	48 83 bc 24 b0
	00 00 00 00	 cmp	 QWORD PTR wstr$[rsp], 0
  00037	75 1b		 jne	 SHORT $LN2@wstring_to

; 52   :         str = "";

  00039	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG114343
  00040	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR str$[rsp]
  00048	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

; 53   :         return 0;

  0004d	33 c0		 xor	 eax, eax
  0004f	e9 6c 01 00 00	 jmp	 $LN1@wstring_to
$LN2@wstring_to:

; 54   :     }
; 55   :     uint32_t flags = (codepage == CP_UTF8) ? 0 : WC_NO_BEST_FIT_CHARS;

  00054	81 bc 24 c0 00
	00 00 e9 fd 00
	00		 cmp	 DWORD PTR codepage$[rsp], 65001 ; 0000fde9H
  0005f	75 0d		 jne	 SHORT $LN5@wstring_to
  00061	c7 84 24 90 00
	00 00 00 00 00
	00		 mov	 DWORD PTR tv68[rsp], 0
  0006c	eb 0b		 jmp	 SHORT $LN6@wstring_to
$LN5@wstring_to:
  0006e	c7 84 24 90 00
	00 00 00 04 00
	00		 mov	 DWORD PTR tv68[rsp], 1024 ; 00000400H
$LN6@wstring_to:
  00079	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR tv68[rsp]
  00080	89 44 24 40	 mov	 DWORD PTR flags$[rsp], eax

; 56   :     int multibyte_length = WideCharToMultiByte(codepage, flags, wstr, -1, nullptr, 0, nullptr, nullptr);

  00084	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR [rsp+56], 0
  0008d	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR [rsp+48], 0
  00096	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR [rsp+40], 0
  0009e	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000a7	41 b9 ff ff ff
	ff		 mov	 r9d, -1
  000ad	4c 8b 84 24 b0
	00 00 00	 mov	 r8, QWORD PTR wstr$[rsp]
  000b5	8b 54 24 40	 mov	 edx, DWORD PTR flags$[rsp]
  000b9	8b 8c 24 c0 00
	00 00		 mov	 ecx, DWORD PTR codepage$[rsp]
  000c0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_WideCharToMultiByte
  000c6	89 44 24 44	 mov	 DWORD PTR multibyte_length$[rsp], eax

; 57   :     std::vector<char> tmp(multibyte_length, 0);

  000ca	c6 84 24 85 00
	00 00 00	 mov	 BYTE PTR $T5[rsp], 0
  000d2	48 8d 8c 24 84
	00 00 00	 lea	 rcx, QWORD PTR $T4[rsp]
  000da	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@XZ ; std::allocator<char>::allocator<char>
  000df	48 63 4c 24 44	 movsxd	 rcx, DWORD PTR multibyte_length$[rsp]
  000e4	4c 8b c8	 mov	 r9, rax
  000e7	4c 8d 84 24 85
	00 00 00	 lea	 r8, QWORD PTR $T5[rsp]
  000ef	48 8b d1	 mov	 rdx, rcx
  000f2	48 8d 4c 24 58	 lea	 rcx, QWORD PTR tmp$[rsp]
  000f7	e8 00 00 00 00	 call	 ??0?$vector@DV?$allocator@D@std@@@std@@QEAA@_KAEBDAEBV?$allocator@D@1@@Z ; std::vector<char,std::allocator<char> >::vector<char,std::allocator<char> >
  000fc	90		 npad	 1

; 58   :     if (0 == WideCharToMultiByte(codepage, flags, wstr, -1, tmp.data(), (int)tmp.size(), nullptr, nullptr)) {

  000fd	48 8d 4c 24 58	 lea	 rcx, QWORD PTR tmp$[rsp]
  00102	e8 00 00 00 00	 call	 ?size@?$vector@DV?$allocator@D@std@@@std@@QEBA_KXZ ; std::vector<char,std::allocator<char> >::size
  00107	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR tv91[rsp], rax
  0010f	48 8d 4c 24 58	 lea	 rcx, QWORD PTR tmp$[rsp]
  00114	e8 00 00 00 00	 call	 ?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ ; std::vector<char,std::allocator<char> >::data
  00119	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR [rsp+56], 0
  00122	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR [rsp+48], 0
  0012b	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR tv91[rsp]
  00133	89 4c 24 28	 mov	 DWORD PTR [rsp+40], ecx
  00137	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0013c	41 b9 ff ff ff
	ff		 mov	 r9d, -1
  00142	4c 8b 84 24 b0
	00 00 00	 mov	 r8, QWORD PTR wstr$[rsp]
  0014a	8b 54 24 40	 mov	 edx, DWORD PTR flags$[rsp]
  0014e	8b 8c 24 c0 00
	00 00		 mov	 ecx, DWORD PTR codepage$[rsp]
  00155	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_WideCharToMultiByte
  0015b	85 c0		 test	 eax, eax
  0015d	75 2b		 jne	 SHORT $LN3@wstring_to

; 59   :         str.clear();

  0015f	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR str$[rsp]
  00167	e8 00 00 00 00	 call	 ?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::clear

; 60   :         return 0;

  0016c	c7 84 24 88 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T6[rsp], 0
  00177	48 8d 4c 24 58	 lea	 rcx, QWORD PTR tmp$[rsp]
  0017c	e8 00 00 00 00	 call	 ??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ ; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
  00181	8b 84 24 88 00
	00 00		 mov	 eax, DWORD PTR $T6[rsp]
  00188	eb 36		 jmp	 SHORT $LN1@wstring_to
$LN3@wstring_to:

; 61   :     }
; 62   :     str = tmp.data();

  0018a	48 8d 4c 24 58	 lea	 rcx, QWORD PTR tmp$[rsp]
  0018f	e8 00 00 00 00	 call	 ?data@?$vector@DV?$allocator@D@std@@@std@@QEAAPEADXZ ; std::vector<char,std::allocator<char> >::data
  00194	48 8b d0	 mov	 rdx, rax
  00197	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR str$[rsp]
  0019f	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

; 63   :     return multibyte_length;

  001a4	8b 44 24 44	 mov	 eax, DWORD PTR multibyte_length$[rsp]
  001a8	89 84 24 8c 00
	00 00		 mov	 DWORD PTR $T7[rsp], eax
  001af	48 8d 4c 24 58	 lea	 rcx, QWORD PTR tmp$[rsp]
  001b4	e8 00 00 00 00	 call	 ??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ ; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
  001b9	8b 84 24 8c 00
	00 00		 mov	 eax, DWORD PTR $T7[rsp]
$LN1@wstring_to:

; 64   : }

  001c0	48 8b f8	 mov	 rdi, rax
  001c3	48 8b cc	 mov	 rcx, rsp
  001c6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$rtcFrameData
  001cd	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001d2	48 8b c7	 mov	 rax, rdi
  001d5	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  001dc	5f		 pop	 rdi
  001dd	c3		 ret	 0
?wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ENDP ; wstring_to_string
_TEXT	ENDS
text$x	SEGMENT
flags$ = 64
multibyte_length$ = 68
tmp$ = 88
$T4 = 132
$T5 = 133
$T6 = 136
$T7 = 140
tv68 = 144
tv91 = 152
wstr$ = 176
str$ = 184
codepage$ = 192
?dtor$0@?0??wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA PROC ; `wstring_to_string'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR tmp$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ ; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA ENDP ; `wstring_to_string'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
flags$ = 64
multibyte_length$ = 68
tmp$ = 88
$T4 = 132
$T5 = 133
$T6 = 136
$T7 = 140
tv68 = 144
tv91 = 152
wstr$ = 176
str$ = 184
codepage$ = 192
?dtor$0@?0??wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA PROC ; `wstring_to_string'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR tmp$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@DV?$allocator@D@std@@@std@@QEAA@XZ ; std::vector<char,std::allocator<char> >::~vector<char,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??wstring_to_string@@YAIPEB_WAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA ENDP ; `wstring_to_string'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\tchar.h
;	COMDAT _tcsicmp
_TEXT	SEGMENT
_String1$ = 48
_String2$ = 56
_tcsicmp PROC						; COMDAT

; 1684 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1685 :     return _mbsicmp((const unsigned char *)_String1,(const unsigned char *)_String2);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _String2$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _String1$[rsp]
  0002d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__mbsicmp

; 1686 : }

  00033	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00037	5f		 pop	 rdi
  00038	c3		 ret	 0
_tcsicmp ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\tchar.h
;	COMDAT _tcscmp
_TEXT	SEGMENT
_s1$ = 48
_s2$ = 56
_tcscmp	PROC						; COMDAT

; 1681 : _Check_return_ __inline int _tcscmp(_In_z_ _CPC _s1,_In_z_ _CPC _s2) {return _mbscmp((_CPUC)_s1,(_CPUC)_s2);}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _s2$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _s1$[rsp]
  0002d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__mbscmp
  00033	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00037	5f		 pop	 rdi
  00038	c3		 ret	 0
_tcscmp	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\tchar.h
;	COMDAT _tcschr
_TEXT	SEGMENT
_s1$ = 48
_c$ = 56
_tcschr	PROC						; COMDAT

; 1506 : __inline _CRPC _tcschr(_In_z_ _CPC _s1,_In_ _UI _c) {return (_CRPC)_mbschr((_CPUC)_s1,_c);}

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	8b 54 24 38	 mov	 edx, DWORD PTR _c$[rsp]
  00026	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _s1$[rsp]
  0002b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__mbschr
  00031	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00035	5f		 pop	 rdi
  00036	c3		 ret	 0
_tcschr	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAPEAXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAPEAXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
  0002b	90		 npad	 1
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ PROC ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ ENDP ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal, COMDAT

; 4198 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4199 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$allocator@_W@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first

; 4200 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal, COMDAT

; 4194 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4195 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$allocator@_W@2@XZ ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first

; 4196 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Swap_proxy_and_iterators@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Swap_proxy_and_iterators@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Swap_proxy_and_iterators, COMDAT

; 4190 :     void _Swap_proxy_and_iterators(basic_string& _Right) { // swap all iterators

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4191 :         _Mypair._Myval2._Swap_proxy_and_iterators(_Right._Mypair._Myval2);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b d0	 mov	 rdx, rax
  00030	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators

; 4192 :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?_Swap_proxy_and_iterators@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen, COMDAT

; 4180 :     [[noreturn]] static void _Xlen() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 4181 :         _Xlength_error("string too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlen:

; 4182 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_Ptr$1 = 32
_Al$2 = 40
$T3 = 48
this$ = 80
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate, COMDAT

; 4164 :     void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 4165 :         _Mypair._Myval2._Orphan_all();

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0002b	90		 npad	 1

; 4166 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0002c	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
  00039	90		 npad	 1
  0003a	0f b6 c0	 movzx	 eax, al
  0003d	85 c0		 test	 eax, eax
  0003f	74 4f		 je	 SHORT $LN2@Tidy_deall

; 4167 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

  00041	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00046	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0004a	48 89 44 24 20	 mov	 QWORD PTR _Ptr$1[rsp], rax

; 4168 :             auto& _Al          = _Getal();

  0004f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00054	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  00059	90		 npad	 1
  0005a	48 89 44 24 28	 mov	 QWORD PTR _Al$2[rsp], rax

; 4169 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);

  0005f	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00064	48 83 c0 08	 add	 rax, 8
  00068	48 8b c8	 mov	 rcx, rax
  0006b	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEA_W@std@@YAXAEAPEA_W@Z ; std::_Destroy_in_place<wchar_t *>
  00070	90		 npad	 1

; 4170 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00071	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00076	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0007a	48 ff c0	 inc	 rax
  0007d	4c 8b c0	 mov	 r8, rax
  00080	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Ptr$1[rsp]
  00085	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Al$2[rsp]
  0008a	e8 00 00 00 00	 call	 ?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z ; std::allocator<wchar_t>::deallocate
  0008f	90		 npad	 1
$LN2@Tidy_deall:

; 4171 :         }
; 4172 : 
; 4173 :         _Mypair._Myval2._Mysize = 0;

  00090	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00095	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4174 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0009d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000a2	48 c7 40 20 07
	00 00 00	 mov	 QWORD PTR [rax+32], 7

; 4175 :         // the _Traits::assign is last so the codegen doesn't think the char
; 4176 :         // write can alias this
; 4177 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000aa	33 c0		 xor	 eax, eax
  000ac	66 89 44 24 30	 mov	 WORD PTR $T3[rsp], ax
  000b1	b8 02 00 00 00	 mov	 eax, 2
  000b6	48 6b c0 00	 imul	 rax, rax, 0
  000ba	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000bf	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  000c4	48 8d 54 24 30	 lea	 rdx, QWORD PTR $T3[rsp]
  000c9	48 8b c8	 mov	 rcx, rax
  000cc	e8 00 00 00 00	 call	 ?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z ; std::_WChar_traits<wchar_t>::assign
  000d1	90		 npad	 1

; 4178 :     }

  000d2	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000d6	5f		 pop	 rdi
  000d7	c3		 ret	 0
?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init, COMDAT

; 4156 :     void _Tidy_init() noexcept { // initialize basic_string data members

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4157 :         _Mypair._Myval2._Mysize = 0;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4158 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 c7 40 20 07
	00 00 00	 mov	 QWORD PTR [rax+32], 7

; 4159 :         // the _Traits::assign is last so the codegen doesn't think the char
; 4160 :         // write can alias this
; 4161 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00038	33 c0		 xor	 eax, eax
  0003a	66 89 44 24 20	 mov	 WORD PTR $T1[rsp], ax
  0003f	b8 02 00 00 00	 mov	 eax, 2
  00044	48 6b c0 00	 imul	 rax, rax, 0
  00048	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004d	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  00052	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00057	48 8b c8	 mov	 rcx, rax
  0005a	e8 00 00 00 00	 call	 ?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z ; std::_WChar_traits<wchar_t>::assign

; 4162 :     }

  0005f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAX_K@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Newsize$ = 72
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAX_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos, COMDAT

; 4152 :     void _Eos(const size_type _Newsize) { // set new length and null terminator

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4153 :         _Traits::assign(_Mypair._Myval2._Myptr()[_Mypair._Myval2._Mysize = _Newsize], _Elem());

  00023	33 c0		 xor	 eax, eax
  00025	66 89 44 24 20	 mov	 WORD PTR $T1[rsp], ax
  0002a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newsize$[rsp]
  00034	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx
  00038	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b c8	 mov	 rcx, rax
  00040	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
  00045	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newsize$[rsp]
  0004a	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  0004e	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00053	48 8b c8	 mov	 rcx, rax
  00056	e8 00 00 00 00	 call	 ?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z ; std::_WChar_traits<wchar_t>::assign

; 4154 :     }

  0005b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005f	5f		 pop	 rdi
  00060	c3		 ret	 0
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAX_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 48
_Requested$ = 56
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth, COMDAT

; 4077 :     _NODISCARD size_type _Calculate_growth(const size_type _Requested) const noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4078 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
  0002d	4c 8b c0	 mov	 r8, rax
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 50 20	 mov	 rdx, QWORD PTR [rax+32]
  00039	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Requested$[rsp]
  0003e	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth

; 4079 :     }

  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBA_K_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z
_TEXT	SEGMENT
_Masked$ = 40
$T4 = 56
_Requested$ = 80
_Old$ = 88
_Max$ = 96
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth, COMDAT

; 4064 :         const size_type _Requested, const size_type _Old, const size_type _Max) noexcept {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 4065 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR _Requested$[rsp]
  0002d	48 83 c8 07	 or	 rax, 7
  00031	48 89 44 24 28	 mov	 QWORD PTR _Masked$[rsp], rax

; 4066 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00036	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  0003b	48 39 44 24 28	 cmp	 QWORD PTR _Masked$[rsp], rax
  00040	76 07		 jbe	 SHORT $LN2@Calculate_

; 4067 :             return _Max;

  00042	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  00047	eb 59		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 4068 :         }
; 4069 : 
; 4070 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00049	33 d2		 xor	 edx, edx
  0004b	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old$[rsp]
  00050	b9 02 00 00 00	 mov	 ecx, 2
  00055	48 f7 f1	 div	 rcx
  00058	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Max$[rsp]
  0005d	48 2b c8	 sub	 rcx, rax
  00060	48 8b c1	 mov	 rax, rcx
  00063	48 39 44 24 58	 cmp	 QWORD PTR _Old$[rsp], rax
  00068	76 07		 jbe	 SHORT $LN3@Calculate_

; 4071 :             return _Max;

  0006a	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  0006f	eb 31		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 4072 :         }
; 4073 : 
; 4074 :         return _Max_value(_Masked, _Old + _Old / 2);

  00071	33 d2		 xor	 edx, edx
  00073	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old$[rsp]
  00078	b9 02 00 00 00	 mov	 ecx, 2
  0007d	48 f7 f1	 div	 rcx
  00080	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Old$[rsp]
  00085	48 03 c8	 add	 rcx, rax
  00088	48 8b c1	 mov	 rax, rcx
  0008b	48 89 44 24 38	 mov	 QWORD PTR $T4[rsp], rax
  00090	48 8d 54 24 38	 lea	 rdx, QWORD PTR $T4[rsp]
  00095	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Masked$[rsp]
  0009a	e8 00 00 00 00	 call	 ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Max_value<unsigned __int64>
  0009f	48 8b 00	 mov	 rax, QWORD PTR [rax]
$LN1@Calculate_:

; 4075 :     }

  000a2	48 8b f8	 mov	 rdi, rax
  000a5	48 8b cc	 mov	 rcx, rsp
  000a8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z$rtcFrameData
  000af	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000b4	48 8b c7	 mov	 rax, rdi
  000b7	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000bb	5f		 pop	 rdi
  000bc	c3		 ret	 0
?_Calculate_growth@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@CA_K_K00@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$allocator@_W@2@XZ
_TEXT	SEGMENT
this$ = 64
__$ReturnUdt$ = 72
?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$allocator@_W@2@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::get_allocator, COMDAT

; 4058 :     _NODISCARD allocator_type get_allocator() const noexcept { // return allocator object for values

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4059 :         return static_cast<allocator_type>(_Getal());

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  0002d	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 4060 :     }

  00032	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$allocator@_W@2@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::get_allocator
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 52
this$ = 80
__$ReturnUdt$ = 88
_Off$ = 96
_Count$ = 104
?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr, COMDAT

; 3943 :     _NODISCARD basic_string substr(const size_type _Off = 0, const size_type _Count = npos) const {

$LN5:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
  0002d	c7 44 24 34 00
	00 00 00	 mov	 DWORD PTR $T2[rsp], 0

; 3944 :         // return [_Off, _Off + _Count) as new string
; 3945 :         return basic_string(*this, _Off, _Count, get_allocator());

  00035	48 8d 54 24 30	 lea	 rdx, QWORD PTR $T1[rsp]
  0003a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0003f	e8 00 00 00 00	 call	 ?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::get_allocator
  00044	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00049	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Count$[rsp]
  0004e	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Off$[rsp]
  00053	48 8b 54 24 50	 mov	 rdx, QWORD PTR this$[rsp]
  00058	48 8b 4c 24 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0005d	e8 00 00 00 00	 call	 ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
  00062	90		 npad	 1
  00063	8b 44 24 34	 mov	 eax, DWORD PTR $T2[rsp]
  00067	83 c8 01	 or	 eax, 1
  0006a	89 44 24 34	 mov	 DWORD PTR $T2[rsp], eax
  0006e	48 8b 44 24 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 3946 :     }

  00073	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00077	5f		 pop	 rdi
  00078	c3		 ret	 0
  00079	cc		 int	 3
?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 52
this$ = 80
__$ReturnUdt$ = 88
_Off$ = 96
_Count$ = 104
?dtor$0@?0??substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 34	 mov	 eax, DWORD PTR $T2[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 34 fe	 and	 DWORD PTR $T2[rbp], -2
  00021	48 8b 4d 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 52
this$ = 80
__$ReturnUdt$ = 88
_Off$ = 96
_Count$ = 104
?dtor$0@?0??substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 34	 mov	 eax, DWORD PTR $T2[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 34 fe	 and	 DWORD PTR $T2[rbp], -2
  00021	48 8b 4d 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KQEB_W_K@Z
_TEXT	SEGMENT
$T1 = 49
tv70 = 56
this$ = 80
_Ptr$ = 88
_Off$ = 96
?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KQEB_W_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_last_not_of, COMDAT

; 3924 :         noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 3925 :         // look for none of [_Ptr, <null>) before _Off
; 3926 :         return static_cast<size_type>(_Traits_find_last_not_of<_Traits>(_Mypair._Myval2._Myptr(),

  00028	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0002d	e8 00 00 00 00	 call	 ?length@?$_WChar_traits@_W@std@@SA_KPEB_W@Z ; std::_WChar_traits<wchar_t>::length
  00032	90		 npad	 1
  00033	48 89 44 24 38	 mov	 QWORD PTR tv70[rsp], rax
  00038	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0003d	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
  00042	90		 npad	 1
  00043	0f b6 4c 24 31	 movzx	 ecx, BYTE PTR $T1[rsp]
  00048	88 4c 24 28	 mov	 BYTE PTR [rsp+40], cl
  0004c	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv70[rsp]
  00051	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00056	4c 8b 4c 24 58	 mov	 r9, QWORD PTR _Ptr$[rsp]
  0005b	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Off$[rsp]
  00060	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00065	48 8b 51 18	 mov	 rdx, QWORD PTR [rcx+24]
  00069	48 8b c8	 mov	 rcx, rax
  0006c	e8 00 00 00 00	 call	 ??$_Traits_find_last_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z ; std::_Traits_find_last_not_of<std::char_traits<wchar_t> >
  00071	90		 npad	 1

; 3927 :             _Mypair._Myval2._Mysize, _Off, _Ptr, _Traits::length(_Ptr), _Is_specialization<_Traits, char_traits>{}));
; 3928 :     }

  00072	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KQEB_W_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_last_not_of
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KQEB_W_K@Z
_TEXT	SEGMENT
$T1 = 49
tv70 = 56
this$ = 80
_Ptr$ = 88
_Off$ = 96
?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KQEB_W_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_not_of, COMDAT

; 3886 :         noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 3887 :         // look for one of [_Ptr, <null>) at or after _Off
; 3888 :         return static_cast<size_type>(_Traits_find_first_not_of<_Traits>(_Mypair._Myval2._Myptr(),

  00028	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0002d	e8 00 00 00 00	 call	 ?length@?$_WChar_traits@_W@std@@SA_KPEB_W@Z ; std::_WChar_traits<wchar_t>::length
  00032	90		 npad	 1
  00033	48 89 44 24 38	 mov	 QWORD PTR tv70[rsp], rax
  00038	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0003d	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
  00042	90		 npad	 1
  00043	0f b6 4c 24 31	 movzx	 ecx, BYTE PTR $T1[rsp]
  00048	88 4c 24 28	 mov	 BYTE PTR [rsp+40], cl
  0004c	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv70[rsp]
  00051	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00056	4c 8b 4c 24 58	 mov	 r9, QWORD PTR _Ptr$[rsp]
  0005b	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Off$[rsp]
  00060	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00065	48 8b 51 18	 mov	 rdx, QWORD PTR [rcx+24]
  00069	48 8b c8	 mov	 rcx, rax
  0006c	e8 00 00 00 00	 call	 ??$_Traits_find_first_not_of@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101U?$integral_constant@_N$00@0@@Z ; std::_Traits_find_first_not_of<std::char_traits<wchar_t> >
  00071	90		 npad	 1

; 3889 :             _Mypair._Myval2._Mysize, _Off, _Ptr, _Traits::length(_Ptr), _Is_specialization<_Traits, char_traits>{}));
; 3890 :     }

  00072	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KQEB_W_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_not_of
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?find@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z
_TEXT	SEGMENT
tv72 = 48
this$ = 80
_Right$ = 88
_Off$ = 96
?find@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find, COMDAT

; 3725 :     _NODISCARD size_type find(const basic_string& _Right, const size_type _Off = 0) const noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 3726 :         // look for _Right beginning at or after _Off
; 3727 :         return static_cast<size_type>(_Traits_find<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Off,

  00028	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
  00035	90		 npad	 1
  00036	48 89 44 24 30	 mov	 QWORD PTR tv72[rsp], rax
  0003b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00040	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
  00045	90		 npad	 1
  00046	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0004b	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  0004f	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00054	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv72[rsp]
  00059	4c 8b c9	 mov	 r9, rcx
  0005c	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Off$[rsp]
  00061	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00066	48 8b 51 18	 mov	 rdx, QWORD PTR [rcx+24]
  0006a	48 8b c8	 mov	 rcx, rax
  0006d	e8 00 00 00 00	 call	 ??$_Traits_find@U?$char_traits@_W@std@@@std@@YA_KQEB_W_K101@Z ; std::_Traits_find<std::char_traits<wchar_t> >
  00072	90		 npad	 1

; 3728 :             _Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize));
; 3729 :     }

  00073	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00077	5f		 pop	 rdi
  00078	c3		 ret	 0
?find@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_Alloc_max$ = 40
_Storage_max$ = 56
$T4 = 64
$T5 = 72
$T6 = 80
this$ = 112
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size, COMDAT

; 3570 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 18 00 00 00	 mov	 ecx, 24
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 3571 :         const size_type _Alloc_max   = _Alty_traits::max_size(_Getal());

  0001e	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z ; std::_Default_allocator_traits<std::allocator<wchar_t> >::max_size
  00030	48 89 44 24 28	 mov	 QWORD PTR _Alloc_max$[rsp], rax

; 3572 :         const size_type _Storage_max = // can always store small string

  00035	48 c7 44 24 40
	08 00 00 00	 mov	 QWORD PTR $T4[rsp], 8
  0003e	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T4[rsp]
  00043	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Alloc_max$[rsp]
  00048	e8 00 00 00 00	 call	 ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Max_value<unsigned __int64>
  0004d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00050	48 89 44 24 38	 mov	 QWORD PTR _Storage_max$[rsp], rax

; 3573 :             _Max_value(_Alloc_max, static_cast<size_type>(_BUF_SIZE));
; 3574 :         return _Min_value(static_cast<size_type>((numeric_limits<difference_type>::max)()),

  00055	48 8b 44 24 38	 mov	 rax, QWORD PTR _Storage_max$[rsp]
  0005a	48 ff c8	 dec	 rax
  0005d	48 89 44 24 48	 mov	 QWORD PTR $T5[rsp], rax
  00062	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  00067	48 89 44 24 50	 mov	 QWORD PTR $T6[rsp], rax
  0006c	48 8d 54 24 48	 lea	 rdx, QWORD PTR $T5[rsp]
  00071	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T6[rsp]
  00076	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0007b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 3575 :             _Storage_max - 1 // -1 is for null terminator and/or npos
; 3576 :         );
; 3577 :     }

  0007e	48 8b f8	 mov	 rdi, rax
  00081	48 8b cc	 mov	 rcx, rsp
  00084	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ$rtcFrameData
  0008b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00090	48 8b c7	 mov	 rax, rdi
  00093	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00097	5f		 pop	 rdi
  00098	c3		 ret	 0
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 16
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size, COMDAT

; 3566 :     _NODISCARD size_type size() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 3567 :         return _Mypair._Myval2._Mysize;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]

; 3568 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 16
?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length, COMDAT

; 3562 :     _NODISCARD size_type length() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 3563 :         return _Mypair._Myval2._Mysize;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]

; 3564 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ
_TEXT	SEGMENT
this$ = 48
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str, COMDAT

; 3548 :     _NODISCARD _Ret_z_ const _Elem* c_str() const noexcept { // return pointer to null-terminated immutable array

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3549 :         return _Mypair._Myval2._Myptr();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
  0002b	90		 npad	 1

; 3550 :     }

  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_KQEB_W0@Z
_TEXT	SEGMENT
_Old_size$ = 64
_Suffix_size$ = 72
_Old_ptr$1 = 80
_Insert_at$2 = 88
_Growth$ = 96
_Old_ptr$3 = 104
_Insert_at$4 = 112
_Suffix_at$5 = 120
_Ptr_shifted_after$6 = 128
$T7 = 136
tv188 = 144
this$ = 176
_Off$ = 184
_N0$ = 192
_Ptr$ = 200
_Count$ = 208
?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_KQEB_W0@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace, COMDAT

; 3160 :         const size_type _Off, size_type _N0, _In_reads_(_Count) const _Elem* const _Ptr, const size_type _Count) {

$LN11:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+176]

; 3161 :         // replace [_Off, _Off + _N0) with [_Ptr, _Ptr + _Count)
; 3162 :         _Mypair._Myval2._Check_offset(_Off);

  00033	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 8b 94 24 b8
	00 00 00	 mov	 rdx, QWORD PTR _Off$[rsp]
  00043	48 8b c8	 mov	 rcx, rax
  00046	e8 00 00 00 00	 call	 ?_Check_offset@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAX_K@Z ; std::_String_val<std::_Simple_types<wchar_t> >::_Check_offset

; 3163 :         _N0 = _Mypair._Myval2._Clamp_suffix_size(_Off, _N0);

  0004b	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00053	4c 8b 84 24 c0
	00 00 00	 mov	 r8, QWORD PTR _N0$[rsp]
  0005b	48 8b 94 24 b8
	00 00 00	 mov	 rdx, QWORD PTR _Off$[rsp]
  00063	48 8b c8	 mov	 rcx, rax
  00066	e8 00 00 00 00	 call	 ?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_K_K0@Z ; std::_String_val<std::_Simple_types<wchar_t> >::_Clamp_suffix_size
  0006b	48 89 84 24 c0
	00 00 00	 mov	 QWORD PTR _N0$[rsp], rax

; 3164 :         if (_N0 == _Count) { // size doesn't change, so a single move does the trick

  00073	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR _Count$[rsp]
  0007b	48 39 84 24 c0
	00 00 00	 cmp	 QWORD PTR _N0$[rsp], rax
  00083	75 41		 jne	 SHORT $LN2@replace

; 3165 :             _Traits::move(_Mypair._Myval2._Myptr() + _Off, _Ptr, _Count);

  00085	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0008d	48 8b c8	 mov	 rcx, rax
  00090	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
  00095	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR _Off$[rsp]
  0009d	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  000a1	4c 8b 84 24 d0
	00 00 00	 mov	 r8, QWORD PTR _Count$[rsp]
  000a9	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  000b1	48 8b c8	 mov	 rcx, rax
  000b4	e8 00 00 00 00	 call	 ?move@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z ; std::_WChar_traits<wchar_t>::move

; 3166 :             return *this;

  000b9	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000c1	e9 13 03 00 00	 jmp	 $LN1@replace
$LN2@replace:

; 3167 :         }
; 3168 : 
; 3169 :         const size_type _Old_size    = _Mypair._Myval2._Mysize;

  000c6	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000ce	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  000d2	48 89 44 24 40	 mov	 QWORD PTR _Old_size$[rsp], rax

; 3170 :         const size_type _Suffix_size = _Old_size - _N0 - _Off + 1;

  000d7	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR _N0$[rsp]
  000df	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  000e4	48 2b c8	 sub	 rcx, rax
  000e7	48 8b c1	 mov	 rax, rcx
  000ea	48 2b 84 24 b8
	00 00 00	 sub	 rax, QWORD PTR _Off$[rsp]
  000f2	48 ff c0	 inc	 rax
  000f5	48 89 44 24 48	 mov	 QWORD PTR _Suffix_size$[rsp], rax

; 3171 :         if (_Count < _N0) { // suffix shifts backwards; we don't have to move anything out of the way

  000fa	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR _N0$[rsp]
  00102	48 39 84 24 d0
	00 00 00	 cmp	 QWORD PTR _Count$[rsp], rax
  0010a	0f 83 ae 00 00
	00		 jae	 $LN3@replace

; 3172 :             _Mypair._Myval2._Mysize = _Old_size - (_N0 - _Count);

  00110	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR _Count$[rsp]
  00118	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR _N0$[rsp]
  00120	48 2b c8	 sub	 rcx, rax
  00123	48 8b c1	 mov	 rax, rcx
  00126	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0012b	48 2b c8	 sub	 rcx, rax
  0012e	48 8b c1	 mov	 rax, rcx
  00131	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00139	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 3173 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  0013d	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00145	48 8b c8	 mov	 rcx, rax
  00148	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
  0014d	48 89 44 24 50	 mov	 QWORD PTR _Old_ptr$1[rsp], rax

; 3174 :             _Elem* const _Insert_at = _Old_ptr + _Off;

  00152	48 8b 44 24 50	 mov	 rax, QWORD PTR _Old_ptr$1[rsp]
  00157	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR _Off$[rsp]
  0015f	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  00163	48 89 44 24 58	 mov	 QWORD PTR _Insert_at$2[rsp], rax

; 3175 :             _Traits::move(_Insert_at, _Ptr, _Count);

  00168	4c 8b 84 24 d0
	00 00 00	 mov	 r8, QWORD PTR _Count$[rsp]
  00170	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00178	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Insert_at$2[rsp]
  0017d	e8 00 00 00 00	 call	 ?move@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z ; std::_WChar_traits<wchar_t>::move

; 3176 :             _Traits::move(_Insert_at + _Count, _Insert_at + _N0, _Suffix_size);

  00182	48 8b 44 24 58	 mov	 rax, QWORD PTR _Insert_at$2[rsp]
  00187	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR _N0$[rsp]
  0018f	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  00193	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Insert_at$2[rsp]
  00198	48 8b 94 24 d0
	00 00 00	 mov	 rdx, QWORD PTR _Count$[rsp]
  001a0	48 8d 0c 51	 lea	 rcx, QWORD PTR [rcx+rdx*2]
  001a4	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Suffix_size$[rsp]
  001a9	48 8b d0	 mov	 rdx, rax
  001ac	e8 00 00 00 00	 call	 ?move@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z ; std::_WChar_traits<wchar_t>::move

; 3177 :             return *this;

  001b1	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001b9	e9 1b 02 00 00	 jmp	 $LN1@replace
$LN3@replace:

; 3178 :         }
; 3179 : 
; 3180 :         const size_type _Growth = static_cast<size_type>(_Count - _N0);

  001be	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR _N0$[rsp]
  001c6	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR _Count$[rsp]
  001ce	48 2b c8	 sub	 rcx, rax
  001d1	48 8b c1	 mov	 rax, rcx
  001d4	48 89 44 24 60	 mov	 QWORD PTR _Growth$[rsp], rax

; 3181 :         if (_Growth <= _Mypair._Myval2._Myres - _Old_size) { // growth fits

  001d9	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001e1	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  001e6	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  001ea	48 2b c1	 sub	 rax, rcx
  001ed	48 39 44 24 60	 cmp	 QWORD PTR _Growth$[rsp], rax
  001f2	0f 87 83 01 00
	00		 ja	 $LN4@replace

; 3182 :             _Mypair._Myval2._Mysize = _Old_size + _Growth;

  001f8	48 8b 44 24 60	 mov	 rax, QWORD PTR _Growth$[rsp]
  001fd	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00202	48 03 c8	 add	 rcx, rax
  00205	48 8b c1	 mov	 rax, rcx
  00208	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00210	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 3183 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  00214	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0021c	48 8b c8	 mov	 rcx, rax
  0021f	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
  00224	48 89 44 24 68	 mov	 QWORD PTR _Old_ptr$3[rsp], rax

; 3184 :             _Elem* const _Insert_at = _Old_ptr + _Off;

  00229	48 8b 44 24 68	 mov	 rax, QWORD PTR _Old_ptr$3[rsp]
  0022e	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR _Off$[rsp]
  00236	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  0023a	48 89 44 24 70	 mov	 QWORD PTR _Insert_at$4[rsp], rax

; 3185 :             _Elem* const _Suffix_at = _Insert_at + _N0;

  0023f	48 8b 44 24 70	 mov	 rax, QWORD PTR _Insert_at$4[rsp]
  00244	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR _N0$[rsp]
  0024c	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  00250	48 89 44 24 78	 mov	 QWORD PTR _Suffix_at$5[rsp], rax

; 3186 : 
; 3187 :             size_type _Ptr_shifted_after; // see rationale in insert
; 3188 :             if (_Ptr + _Count <= _Insert_at || _Ptr > _Old_ptr + _Old_size) {

  00255	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0025d	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR _Count$[rsp]
  00265	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  00269	48 3b 44 24 70	 cmp	 rax, QWORD PTR _Insert_at$4[rsp]
  0026e	76 18		 jbe	 SHORT $LN7@replace
  00270	48 8b 44 24 68	 mov	 rax, QWORD PTR _Old_ptr$3[rsp]
  00275	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0027a	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  0027e	48 39 84 24 c8
	00 00 00	 cmp	 QWORD PTR _Ptr$[rsp], rax
  00286	76 12		 jbe	 SHORT $LN5@replace
$LN7@replace:

; 3189 :                 _Ptr_shifted_after = _Count;

  00288	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR _Count$[rsp]
  00290	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR _Ptr_shifted_after$6[rsp], rax
  00298	eb 3b		 jmp	 SHORT $LN6@replace
$LN5@replace:

; 3190 :             } else if (_Suffix_at <= _Ptr) {

  0029a	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR _Ptr$[rsp]
  002a2	48 39 44 24 78	 cmp	 QWORD PTR _Suffix_at$5[rsp], rax
  002a7	77 0e		 ja	 SHORT $LN8@replace

; 3191 :                 _Ptr_shifted_after = 0;

  002a9	48 c7 84 24 80
	00 00 00 00 00
	00 00		 mov	 QWORD PTR _Ptr_shifted_after$6[rsp], 0

; 3192 :             } else {

  002b5	eb 1e		 jmp	 SHORT $LN9@replace
$LN8@replace:

; 3193 :                 _Ptr_shifted_after = static_cast<size_type>(_Suffix_at - _Ptr);

  002b7	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR _Ptr$[rsp]
  002bf	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Suffix_at$5[rsp]
  002c4	48 2b c8	 sub	 rcx, rax
  002c7	48 8b c1	 mov	 rax, rcx
  002ca	48 d1 f8	 sar	 rax, 1
  002cd	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR _Ptr_shifted_after$6[rsp], rax
$LN9@replace:
$LN6@replace:

; 3194 :             }
; 3195 : 
; 3196 :             _Traits::move(_Suffix_at + _Growth, _Suffix_at, _Suffix_size);

  002d5	48 8b 44 24 78	 mov	 rax, QWORD PTR _Suffix_at$5[rsp]
  002da	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Growth$[rsp]
  002df	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  002e3	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Suffix_size$[rsp]
  002e8	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Suffix_at$5[rsp]
  002ed	48 8b c8	 mov	 rcx, rax
  002f0	e8 00 00 00 00	 call	 ?move@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z ; std::_WChar_traits<wchar_t>::move

; 3197 :             // next case must be move, in case _Ptr begins before _Insert_at and contains part of the hole;
; 3198 :             // this case doesn't occur in insert because the new content must come from outside the removed
; 3199 :             // content there (because in insert there is no removed content)
; 3200 :             _Traits::move(_Insert_at, _Ptr, _Ptr_shifted_after);

  002f5	4c 8b 84 24 80
	00 00 00	 mov	 r8, QWORD PTR _Ptr_shifted_after$6[rsp]
  002fd	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00305	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Insert_at$4[rsp]
  0030a	e8 00 00 00 00	 call	 ?move@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z ; std::_WChar_traits<wchar_t>::move

; 3201 :             // the next case can be copy, because it comes from the chunk moved out of the way in the
; 3202 :             // first move, and the hole we're filling can't alias the chunk we moved out of the way
; 3203 :             _Traits::copy(

  0030f	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR _Ptr_shifted_after$6[rsp]
  00317	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR _Count$[rsp]
  0031f	48 2b c8	 sub	 rcx, rax
  00322	48 8b c1	 mov	 rax, rcx
  00325	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0032d	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Growth$[rsp]
  00332	48 8d 0c 51	 lea	 rcx, QWORD PTR [rcx+rdx*2]
  00336	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Ptr_shifted_after$6[rsp]
  0033e	48 8d 0c 51	 lea	 rcx, QWORD PTR [rcx+rdx*2]
  00342	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Insert_at$4[rsp]
  00347	4c 8b 84 24 80
	00 00 00	 mov	 r8, QWORD PTR _Ptr_shifted_after$6[rsp]
  0034f	4a 8d 14 42	 lea	 rdx, QWORD PTR [rdx+r8*2]
  00353	48 89 94 24 90
	00 00 00	 mov	 QWORD PTR tv188[rsp], rdx
  0035b	4c 8b c0	 mov	 r8, rax
  0035e	48 8b d1	 mov	 rdx, rcx
  00361	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR tv188[rsp]
  00369	48 8b c8	 mov	 rcx, rax
  0036c	e8 00 00 00 00	 call	 ?copy@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z ; std::_WChar_traits<wchar_t>::copy

; 3204 :                 _Insert_at + _Ptr_shifted_after, _Ptr + _Growth + _Ptr_shifted_after, _Count - _Ptr_shifted_after);
; 3205 :             return *this;

  00371	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00379	eb 5e		 jmp	 SHORT $LN1@replace
$LN4@replace:

; 3206 :         }
; 3207 : 
; 3208 :         return _Reallocate_grow_by(

  0037b	48 8d 84 24 88
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  00383	48 8b f8	 mov	 rdi, rax
  00386	33 c0		 xor	 eax, eax
  00388	b9 01 00 00 00	 mov	 ecx, 1
  0038d	f3 aa		 rep stosb
  0038f	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR _Count$[rsp]
  00397	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0039c	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR _Ptr$[rsp]
  003a4	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  003a9	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR _N0$[rsp]
  003b1	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  003b6	4c 8b 8c 24 b8
	00 00 00	 mov	 r9, QWORD PTR _Off$[rsp]
  003be	44 0f b6 84 24
	88 00 00 00	 movzx	 r8d, BYTE PTR $T7[rsp]
  003c7	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Growth$[rsp]
  003cc	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  003d4	e8 00 00 00 00	 call	 ??$_Reallocate_grow_by@V<lambda_07b002202a580d07f308bf60d51244b2>@@_K_KPEB_W_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_07b002202a580d07f308bf60d51244b2>@@_K2PEB_W2@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<<lambda_07b002202a580d07f308bf60d51244b2>,unsigned __int64,unsigned __int64,wchar_t const *,unsigned __int64>
$LN1@replace:

; 3209 :             _Growth,
; 3210 :             [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size, const size_type _Off,
; 3211 :                 const size_type _N0, const _Elem* const _Ptr, const size_type _Count) {
; 3212 :                 _Traits::copy(_New_ptr, _Old_ptr, _Off);
; 3213 :                 _Traits::copy(_New_ptr + _Off, _Ptr, _Count);
; 3214 :                 _Traits::copy(_New_ptr + _Off + _Count, _Old_ptr + _Off + _N0, _Old_size - _N0 - _Off + 1);
; 3215 :             },
; 3216 :             _Off, _N0, _Ptr, _Count);
; 3217 :     }

  003d9	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  003e0	5f		 pop	 rdi
  003e1	c3		 ret	 0
?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_KQEB_W0@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0AEBV12@@Z
_TEXT	SEGMENT
this$ = 64
_Off$ = 72
_N0$ = 80
_Right$ = 88
?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0AEBV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace, COMDAT

; 3129 :     basic_string& replace(const size_type _Off, const size_type _N0, const basic_string& _Right) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 3130 :         // replace [_Off, _Off + _N0) with _Right
; 3131 :         return replace(_Off, _N0, _Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  0002d	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
  0003a	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003f	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00043	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00048	4c 8b c8	 mov	 r9, rax
  0004b	4c 8b 44 24 50	 mov	 r8, QWORD PTR _N0$[rsp]
  00050	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Off$[rsp]
  00055	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0005a	e8 00 00 00 00	 call	 ?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K_KQEB_W0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace

; 3132 :     }

  0005f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0AEBV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::replace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?clear@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?clear@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::clear, COMDAT

; 3125 :     void clear() noexcept { // erase all

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3126 :         _Eos(0);

  0001e	33 d2		 xor	 edx, edx
  00020	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00025	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
  0002a	90		 npad	 1

; 3127 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?clear@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT

; 2860 :     basic_string& assign(_In_z_ const _Elem* const _Ptr) { // assign [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2861 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00028	e8 00 00 00 00	 call	 ?length@?$_WChar_traits@_W@std@@SA_KPEB_W@Z ; std::_WChar_traits<wchar_t>::length
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00035	4c 8b c0	 mov	 r8, rax
  00038	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign

; 2862 :     }

  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z
_TEXT	SEGMENT
_Old_ptr$1 = 32
$T2 = 40
$T3 = 42
this$ = 64
_Ptr$ = 72
_Count$ = 80
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT

; 2841 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2842 :         // assign [_Ptr, _Ptr + _Count)
; 2843 :         if (_Count <= _Mypair._Myval2._Myres) {

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00031	48 39 44 24 50	 cmp	 QWORD PTR _Count$[rsp], rax
  00036	77 5d		 ja	 SHORT $LN2@assign

; 2844 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  00038	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b c8	 mov	 rcx, rax
  00040	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
  00045	48 89 44 24 20	 mov	 QWORD PTR _Old_ptr$1[rsp], rax

; 2845 :             _Mypair._Myval2._Mysize = _Count;

  0004a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0004f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Count$[rsp]
  00054	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2846 :             _Traits::move(_Old_ptr, _Ptr, _Count);

  00058	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Count$[rsp]
  0005d	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00062	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  00067	e8 00 00 00 00	 call	 ?move@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z ; std::_WChar_traits<wchar_t>::move

; 2847 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0006c	33 c0		 xor	 eax, eax
  0006e	66 89 44 24 28	 mov	 WORD PTR $T2[rsp], ax
  00073	48 8b 44 24 20	 mov	 rax, QWORD PTR _Old_ptr$1[rsp]
  00078	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Count$[rsp]
  0007d	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  00081	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T2[rsp]
  00086	48 8b c8	 mov	 rcx, rax
  00089	e8 00 00 00 00	 call	 ?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z ; std::_WChar_traits<wchar_t>::assign

; 2848 :             return *this;

  0008e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00093	eb 2b		 jmp	 SHORT $LN1@assign
$LN2@assign:

; 2849 :         }
; 2850 : 
; 2851 :         return _Reallocate_for(

  00095	48 8d 44 24 2a	 lea	 rax, QWORD PTR $T3[rsp]
  0009a	48 8b f8	 mov	 rdi, rax
  0009d	33 c0		 xor	 eax, eax
  0009f	b9 01 00 00 00	 mov	 ecx, 1
  000a4	f3 aa		 rep stosb
  000a6	4c 8b 4c 24 48	 mov	 r9, QWORD PTR _Ptr$[rsp]
  000ab	44 0f b6 44 24
	2a		 movzx	 r8d, BYTE PTR $T3[rsp]
  000b1	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Count$[rsp]
  000b6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000bb	e8 00 00 00 00	 call	 ??$_Reallocate_for@V<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>@@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_for<<lambda_3fa8b2c8193a0f3144fc4b1b8f243931>,wchar_t const *>
$LN1@assign:

; 2852 :             _Count,
; 2853 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {
; 2854 :                 _Traits::copy(_New_ptr, _Ptr, _Count);
; 2855 :                 _Traits::assign(_New_ptr[_Count], _Elem());
; 2856 :             },
; 2857 :             _Ptr);
; 2858 :     }

  000c0	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000c4	5f		 pop	 rdi
  000c5	c3		 ret	 0
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
_Roff$ = 64
_Count$ = 72
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT

; 2819 :     basic_string& assign(const basic_string& _Right, const size_type _Roff, size_type _Count = npos) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2820 :         // assign _Right [_Roff, _Roff + _Count)
; 2821 :         _Right._Mypair._Myval2._Check_offset(_Roff);

  0002d	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00032	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Roff$[rsp]
  00037	48 8b c8	 mov	 rcx, rax
  0003a	e8 00 00 00 00	 call	 ?_Check_offset@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAX_K@Z ; std::_String_val<std::_Simple_types<wchar_t> >::_Check_offset

; 2822 :         _Count = _Right._Mypair._Myval2._Clamp_suffix_size(_Roff, _Count);

  0003f	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00044	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Count$[rsp]
  00049	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Roff$[rsp]
  0004e	48 8b c8	 mov	 rcx, rax
  00051	e8 00 00 00 00	 call	 ?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_K_K0@Z ; std::_String_val<std::_Simple_types<wchar_t> >::_Clamp_suffix_size
  00056	48 89 44 24 48	 mov	 QWORD PTR _Count$[rsp], rax

; 2823 :         return assign(_Right._Mypair._Myval2._Myptr() + _Roff, _Count);

  0005b	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00060	48 8b c8	 mov	 rcx, rax
  00063	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
  00068	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Roff$[rsp]
  0006d	48 8d 04 48	 lea	 rax, QWORD PTR [rax+rcx*2]
  00071	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Count$[rsp]
  00076	48 8b d0	 mov	 rdx, rax
  00079	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0007e	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign

; 2824 :     }

  00083	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00087	5f		 pop	 rdi
  00088	c3		 ret	 0
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@QEB_W@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@QEB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=, COMDAT

; 2676 :     basic_string& operator=(_In_z_ const _Elem* const _Ptr) { // assign [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2677 :         return assign(_Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign

; 2678 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@QEB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S10$ = 52
_To_delete$ = 72
this$ = 96
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 2597 :     ~basic_string() noexcept { // destroy the string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 2598 :         _Tidy_deallocate();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
  00028	90		 npad	 1

; 2599 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2600 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S10$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S10$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 2601 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;

  0004c	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00051	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00054	48 89 44 24 48	 mov	 QWORD PTR _To_delete$[rsp], rax

; 2602 :         _Mypair._Myval2._Myproxy = nullptr;

  00059	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2603 :         _Delete_plain_internal(_Alproxy, _To_delete);

  00065	48 8b 54 24 48	 mov	 rdx, QWORD PTR _To_delete$[rsp]
  0006a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  0006f	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00074	90		 npad	 1

; 2604 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2605 :     }

  00075	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0007a	48 8b c8	 mov	 rcx, rax
  0007d	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
  00082	90		 npad	 1
  00083	48 8b cc	 mov	 rcx, rsp
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ$rtcFrameData
  0008d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00092	90		 npad	 1
  00093	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00097	5f		 pop	 rdi
  00098	c3		 ret	 0
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S10$ = 52
_To_delete$ = 72
this$ = 96
?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S10$ = 52
_To_delete$ = 72
this$ = 96
?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Construct_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z
_TEXT	SEGMENT
_Right_data$ = 32
_Right_size$ = 40
_Right_ptr$ = 48
_My_data$ = 56
_Al$ = 64
_New_capacity$ = 72
_New_array$ = 88
$T4 = 104
$T5 = 112
tv131 = 120
this$ = 144
_Right$ = 152
?_Construct_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct_lv_contents, COMDAT

; 2525 :     void _Construct_lv_contents(const basic_string& _Right) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 2526 :         // assign by copying data stored in _Right
; 2527 :         // pre: this != &_Right
; 2528 :         // pre: *this owns no memory, iterators orphaned (note:
; 2529 :         // _Buf/_Ptr/_Mysize/_Myres may be garbage init)
; 2530 :         auto& _Right_data             = _Right._Mypair._Myval2;

  00029	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR _Right$[rsp]
  00031	48 89 44 24 20	 mov	 QWORD PTR _Right_data$[rsp], rax

; 2531 :         const size_type _Right_size   = _Right_data._Mysize;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _Right_data$[rsp]
  0003b	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0003f	48 89 44 24 28	 mov	 QWORD PTR _Right_size$[rsp], rax

; 2532 :         const _Elem* const _Right_ptr = _Right_data._Myptr();

  00044	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Right_data$[rsp]
  00049	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
  0004e	48 89 44 24 30	 mov	 QWORD PTR _Right_ptr$[rsp], rax

; 2533 :         auto& _My_data                = _Mypair._Myval2;

  00053	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0005b	48 89 44 24 38	 mov	 QWORD PTR _My_data$[rsp], rax

; 2534 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  00060	48 83 7c 24 28
	08		 cmp	 QWORD PTR _Right_size$[rsp], 8
  00066	73 3c		 jae	 SHORT $LN2@Construct_

; 2535 :             _Traits::copy(_My_data._Bx._Buf, _Right_ptr, _BUF_SIZE);

  00068	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  0006d	48 83 c0 08	 add	 rax, 8
  00071	41 b8 08 00 00
	00		 mov	 r8d, 8
  00077	48 8b 54 24 30	 mov	 rdx, QWORD PTR _Right_ptr$[rsp]
  0007c	48 8b c8	 mov	 rcx, rax
  0007f	e8 00 00 00 00	 call	 ?copy@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z ; std::_WChar_traits<wchar_t>::copy

; 2536 :             _My_data._Mysize = _Right_size;

  00084	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  00089	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Right_size$[rsp]
  0008e	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2537 :             _My_data._Myres  = _BUF_SIZE - 1;

  00092	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  00097	48 c7 40 20 07
	00 00 00	 mov	 QWORD PTR [rax+32], 7

; 2538 :             return;

  0009f	e9 c1 00 00 00	 jmp	 $LN1@Construct_
$LN2@Construct_:

; 2539 :         }
; 2540 : 
; 2541 :         auto& _Al                     = _Getal();

  000a4	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000ac	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  000b1	48 89 44 24 40	 mov	 QWORD PTR _Al$[rsp], rax

; 2542 :         const size_type _New_capacity = _Min_value(_Right_size | _ALLOC_MASK, max_size());

  000b6	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000be	e8 00 00 00 00	 call	 ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
  000c3	48 89 44 24 68	 mov	 QWORD PTR $T4[rsp], rax
  000c8	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right_size$[rsp]
  000cd	48 83 c8 07	 or	 rax, 7
  000d1	48 89 44 24 70	 mov	 QWORD PTR $T5[rsp], rax
  000d6	48 8d 54 24 68	 lea	 rdx, QWORD PTR $T4[rsp]
  000db	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T5[rsp]
  000e0	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  000e5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000e8	48 89 44 24 48	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 2543 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  000ed	48 8b 44 24 48	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  000f2	48 ff c0	 inc	 rax
  000f5	48 8b d0	 mov	 rdx, rax
  000f8	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Al$[rsp]
  000fd	e8 00 00 00 00	 call	 ?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ; std::allocator<wchar_t>::allocate
  00102	48 89 44 24 58	 mov	 QWORD PTR _New_array$[rsp], rax

; 2544 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

  00107	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  0010c	48 83 c0 08	 add	 rax, 8
  00110	48 8d 54 24 58	 lea	 rdx, QWORD PTR _New_array$[rsp]
  00115	48 8b c8	 mov	 rcx, rax
  00118	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEA_WAEBQEA_W@std@@YAXAEAPEA_WAEBQEA_W@Z ; std::_Construct_in_place<wchar_t *,wchar_t * const &>

; 2545 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  0011d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right_size$[rsp]
  00122	48 ff c0	 inc	 rax
  00125	48 89 44 24 78	 mov	 QWORD PTR tv131[rsp], rax
  0012a	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _New_array$[rsp]
  0012f	e8 00 00 00 00	 call	 ??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z ; std::_Unfancy<wchar_t>
  00134	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv131[rsp]
  00139	4c 8b c1	 mov	 r8, rcx
  0013c	48 8b 54 24 30	 mov	 rdx, QWORD PTR _Right_ptr$[rsp]
  00141	48 8b c8	 mov	 rcx, rax
  00144	e8 00 00 00 00	 call	 ?copy@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z ; std::_WChar_traits<wchar_t>::copy

; 2546 :         _My_data._Mysize = _Right_size;

  00149	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  0014e	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Right_size$[rsp]
  00153	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2547 :         _My_data._Myres  = _New_capacity;

  00157	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  0015c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  00161	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx
$LN1@Construct_:

; 2548 :     }

  00165	48 8b cc	 mov	 rcx, rsp
  00168	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Construct_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z$rtcFrameData
  0016f	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00174	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0017b	5f		 pop	 rdi
  0017c	c3		 ret	 0
?_Construct_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct_lv_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
__formal$ = 64
?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Take_contents, COMDAT

; 2484 :     void _Take_contents(basic_string& _Right, true_type) noexcept {

$LN5:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2485 :         // assign by stealing _Right's buffer, memcpy optimization
; 2486 :         // pre: this != &_Right
; 2487 :         // pre: allocator propagation (POCMA) from _Right, if necessary, is complete
; 2488 :         // pre: *this owns no memory, iterators orphaned (note:
; 2489 :         // _Buf/_Ptr/_Mysize/_Myres may be garbage init)
; 2490 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2491 :         if (_Right._Mypair._Myval2._Large_string_engaged()) {

  00028	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
  00035	90		 npad	 1
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	74 12		 je	 SHORT $LN2@Take_conte

; 2492 :             // take ownership of _Right's iterators along with its buffer
; 2493 :             _Swap_proxy_and_iterators(_Right);

  0003d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00042	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00047	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Swap_proxy_and_iterators
  0004c	90		 npad	 1

; 2494 :         } else {

  0004d	eb 0e		 jmp	 SHORT $LN3@Take_conte
$LN2@Take_conte:

; 2495 :             _Right._Mypair._Myval2._Orphan_all();

  0004f	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1
$LN3@Take_conte:

; 2496 :         }
; 2497 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2498 : 
; 2499 :         _Memcpy_val_from(_Right);

  0005d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00062	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00067	e8 00 00 00 00	 call	 ?_Memcpy_val_from@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Memcpy_val_from
  0006c	90		 npad	 1

; 2500 :         _Right._Tidy_init();

  0006d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00072	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
  00077	90		 npad	 1

; 2501 :     }

  00078	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007c	5f		 pop	 rdi
  0007d	c3		 ret	 0
?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Take_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Memcpy_val_from@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z
_TEXT	SEGMENT
_My_data_mem$ = 32
_Right_data_mem$ = 40
this$ = 64
_Right$ = 72
?_Memcpy_val_from@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Memcpy_val_from, COMDAT

; 2475 :     void _Memcpy_val_from(const basic_string& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2476 :         _STL_INTERNAL_CHECK(_Can_memcpy_val); // TRANSITION, if constexpr
; 2477 :         const auto _My_data_mem =

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$addressof@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@_W@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > >
  00030	90		 npad	 1
  00031	48 83 c0 08	 add	 rax, 8
  00035	48 89 44 24 20	 mov	 QWORD PTR _My_data_mem$[rsp], rax

; 2478 :             reinterpret_cast<unsigned char*>(_STD addressof(_Mypair._Myval2)) + _Memcpy_val_offset;
; 2479 :         const auto _Right_data_mem =

  0003a	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@_W@std@@@0@AEBV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<wchar_t> > const >
  00047	90		 npad	 1
  00048	48 83 c0 08	 add	 rax, 8
  0004c	48 89 44 24 28	 mov	 QWORD PTR _Right_data_mem$[rsp], rax

; 2480 :             reinterpret_cast<const unsigned char*>(_STD addressof(_Right._Mypair._Myval2)) + _Memcpy_val_offset;
; 2481 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00051	41 b8 20 00 00
	00		 mov	 r8d, 32			; 00000020H
  00057	48 8b 54 24 28	 mov	 rdx, QWORD PTR _Right_data_mem$[rsp]
  0005c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data_mem$[rsp]
  00061	e8 00 00 00 00	 call	 memcpy
  00066	90		 npad	 1

; 2482 :     }

  00067	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
?_Memcpy_val_from@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Memcpy_val_from
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Right$ = 72
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@$$QEAV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=, COMDAT

; 2460 :         _NOEXCEPT_COND(noexcept(_Move_assign(_Right, _Choose_pocma<_Alty>{}))) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2461 :         if (this != _STD addressof(_Right)) {

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
  0002d	48 39 44 24 40	 cmp	 QWORD PTR this$[rsp], rax
  00032	74 26		 je	 SHORT $LN2@operator

; 2462 :             _Move_assign(_Right, _Choose_pocma<_Alty>{});

  00034	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00039	48 8b f8	 mov	 rdi, rax
  0003c	33 c0		 xor	 eax, eax
  0003e	b9 01 00 00 00	 mov	 ecx, 1
  00043	f3 aa		 rep stosb
  00045	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR $T1[rsp]
  0004b	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00050	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00055	e8 00 00 00 00	 call	 ?_Move_assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Move_assign
$LN2@operator:

; 2463 :         }
; 2464 : 
; 2465 :         return *this;

  0005a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]

; 2466 :     }

  0005f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@$$QEAV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Move_assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z
_TEXT	SEGMENT
$T1 = 32
tv66 = 40
this$ = 64
_Right$ = 72
__formal$ = 80
?_Move_assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Move_assign, COMDAT

; 2431 :     void _Move_assign(basic_string& _Right, _Equal_allocators) noexcept {

$LN3:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2432 :         _Tidy_deallocate();

  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate

; 2433 :         _Pocma(_Getal(), _Right._Getal());

  00032	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00037	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  0003c	48 89 44 24 28	 mov	 QWORD PTR tv66[rsp], rax
  00041	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00046	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  0004b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv66[rsp]
  00050	48 8b d1	 mov	 rdx, rcx
  00053	48 8b c8	 mov	 rcx, rax
  00056	e8 00 00 00 00	 call	 ??$_Pocma@V?$allocator@_W@std@@@std@@YAXAEAV?$allocator@_W@0@0@Z ; std::_Pocma<std::allocator<wchar_t> >

; 2434 :         _Take_contents(_Right, bool_constant<_Can_memcpy_val>{});

  0005b	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00060	48 8b f8	 mov	 rdi, rax
  00063	33 c0		 xor	 eax, eax
  00065	b9 01 00 00 00	 mov	 ecx, 1
  0006a	f3 aa		 rep stosb
  0006c	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR $T1[rsp]
  00072	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00077	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0007c	e8 00 00 00 00	 call	 ?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Take_contents

; 2435 :     }

  00081	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00085	5f		 pop	 rdi
  00086	c3		 ret	 0
?_Move_assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Move_assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 2383 :     basic_string(basic_string&& _Right) noexcept : _Mypair(_One_then_variadic_args_t(), _STD move(_Right._Getal())) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  0002d	90		 npad	 1
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ??$move@AEAV?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z ; std::move<std::allocator<wchar_t> &>
  00036	90		 npad	 1
  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	4c 8b c0	 mov	 r8, rax
  0003f	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> >
  00049	90		 npad	 1

; 2384 :         // construct by moving _Right
; 2385 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  00054	90		 npad	 1
  00055	48 8b d0	 mov	 rdx, rax
  00058	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  0005d	e8 00 00 00 00	 call	 ??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
  00062	90		 npad	 1
  00063	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00068	48 8b d0	 mov	 rdx, rax
  0006b	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00070	90		 npad	 1

; 2386 :         _Take_contents(_Right, bool_constant<_Can_memcpy_val>{});

  00071	48 8d 44 24 22	 lea	 rax, QWORD PTR $T3[rsp]
  00076	48 8b f8	 mov	 rdi, rax
  00079	33 c0		 xor	 eax, eax
  0007b	b9 01 00 00 00	 mov	 ecx, 1
  00080	f3 aa		 rep stosb
  00082	44 0f b6 44 24
	22		 movzx	 r8d, BYTE PTR $T3[rsp]
  00088	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  0008d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00092	e8 00 00 00 00	 call	 ?_Take_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Take_contents
  00097	90		 npad	 1

; 2387 :     }

  00098	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0009d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a1	5f		 pop	 rdi
  000a2	c3		 ret	 0
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S12$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 2297 :     basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t()) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  00029	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00031	0f b6 54 24 74	 movzx	 edx, BYTE PTR $T5[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><>
  0003e	90		 npad	 1

; 2298 :         // construct from [_Ptr, <null>)
; 2299 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  0003f	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00047	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  0004c	48 8b d0	 mov	 rdx, rax
  0004f	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S12$[rsp]
  00054	e8 00 00 00 00	 call	 ??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
  00059	48 8d 44 24 34	 lea	 rax, QWORD PTR $S12$[rsp]
  0005e	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 2300 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0006b	4c 8b c0	 mov	 r8, rax
  0006e	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  00073	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  00078	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0007d	90		 npad	 1

; 2301 :         _Tidy_init();

  0007e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00086	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init

; 2302 :         assign(_Ptr);

  0008b	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00093	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0009b	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign

; 2303 :         _Proxy._Release();

  000a0	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000a5	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000aa	90		 npad	 1

; 2304 :     }

  000ab	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000b0	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000b5	90		 npad	 1
  000b6	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000be	48 8b f8	 mov	 rdi, rax
  000c1	48 8b cc	 mov	 rcx, rsp
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z$rtcFrameData
  000cb	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d0	48 8b c7	 mov	 rax, rdi
  000d3	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  000da	5f		 pop	 rdi
  000db	c3		 ret	 0
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S12$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S12$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S12$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S12$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@QEB_W@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S14$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Right$ = 152
_Roff$ = 160
_Count$ = 168
_Al$ = 176
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 2268 :     basic_string(

$LN5:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 2269 :         const basic_string& _Right, const size_type _Roff, const size_type _Count, const _Alloc& _Al = _Alloc())
; 2270 :         : _Mypair(_One_then_variadic_args_t(), _Al) { // construct from _Right [_Roff, _Roff + _Count)

  00033	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003b	4c 8b 84 24 b0
	00 00 00	 mov	 r8, QWORD PTR _Al$[rsp]
  00043	0f b6 54 24 74	 movzx	 edx, BYTE PTR $T5[rsp]
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const &>
  00050	90		 npad	 1

; 2271 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00051	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00059	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  0005e	48 8b d0	 mov	 rdx, rax
  00061	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S14$[rsp]
  00066	e8 00 00 00 00	 call	 ??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
  0006b	48 8d 44 24 34	 lea	 rax, QWORD PTR $S14$[rsp]
  00070	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 2272 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  00075	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0007d	4c 8b c0	 mov	 r8, rax
  00080	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  00085	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  0008a	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0008f	90		 npad	 1

; 2273 :         _Tidy_init();

  00090	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00098	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init

; 2274 :         assign(_Right, _Roff, _Count);

  0009d	4c 8b 8c 24 a8
	00 00 00	 mov	 r9, QWORD PTR _Count$[rsp]
  000a5	4c 8b 84 24 a0
	00 00 00	 mov	 r8, QWORD PTR _Roff$[rsp]
  000ad	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Right$[rsp]
  000b5	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000bd	e8 00 00 00 00	 call	 ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign

; 2275 :         _Proxy._Release();

  000c2	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000c7	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000cc	90		 npad	 1

; 2276 :     }

  000cd	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000d2	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000d7	90		 npad	 1
  000d8	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000e0	48 8b f8	 mov	 rdi, rax
  000e3	48 8b cc	 mov	 rcx, rsp
  000e6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z$rtcFrameData
  000ed	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000f2	48 8b c7	 mov	 rax, rdi
  000f5	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  000fc	5f		 pop	 rdi
  000fd	c3		 ret	 0
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S14$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Right$ = 152
_Roff$ = 160
_Count$ = 168
_Al$ = 176
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S14$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Right$ = 152
_Roff$ = 160
_Count$ = 168
_Al$ = 176
?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S14$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Right$ = 152
_Roff$ = 160
_Count$ = 168
_Al$ = 176
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S14$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Right$ = 152
_Roff$ = 160
_Count$ = 168
_Al$ = 176
?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 2247 :     basic_string() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t()) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><>
  00030	90		 npad	 1

; 2248 :         // construct empty string
; 2249 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 2250 :         _Tidy_init();

  00058	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0005d	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_init
  00062	90		 npad	 1

; 2251 :     }

  00063	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00068	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006c	5f		 pop	 rdi
  0006d	c3		 ret	 0
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S15$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 117
this$ = 144
_Right$ = 152
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 2230 :     basic_string(const basic_string& _Right)

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 2231 :         : _Mypair(_One_then_variadic_args_t(), _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

  00029	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Right$[rsp]
  00031	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEBAAEBV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  00036	48 8b d0	 mov	 rdx, rax
  00039	48 8d 4c 24 74	 lea	 rcx, QWORD PTR $T5[rsp]
  0003e	e8 00 00 00 00	 call	 ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<wchar_t> >::select_on_container_copy_construction
  00043	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	4c 8b c0	 mov	 r8, rax
  0004e	0f b6 54 24 75	 movzx	 edx, BYTE PTR $T6[rsp]
  00053	e8 00 00 00 00	 call	 ??$?0V?$allocator@_W@std@@$$V@?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@_W@1@@Z ; std::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::allocator<wchar_t>,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> >
  00058	90		 npad	 1

; 2232 :         // construct by copying _Right
; 2233 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00059	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00061	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getal
  00066	48 8b d0	 mov	 rdx, rax
  00069	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S15$[rsp]
  0006e	e8 00 00 00 00	 call	 ??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
  00073	48 8d 44 24 34	 lea	 rax, QWORD PTR $S15$[rsp]
  00078	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 2234 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  0007d	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00085	4c 8b c0	 mov	 r8, rax
  00088	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  0008d	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  00092	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00097	90		 npad	 1

; 2235 :         _Construct_lv_contents(_Right);

  00098	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Right$[rsp]
  000a0	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000a8	e8 00 00 00 00	 call	 ?_Construct_lv_contents@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Construct_lv_contents

; 2236 :         _Proxy._Release();

  000ad	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000b2	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000b7	90		 npad	 1

; 2237 :     }

  000b8	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000bd	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000c2	90		 npad	 1
  000c3	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000cb	48 8b f8	 mov	 rdi, rax
  000ce	48 8b cc	 mov	 rcx, rsp
  000d1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z$rtcFrameData
  000d8	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000dd	48 8b c7	 mov	 rax, rdi
  000e0	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  000e7	5f		 pop	 rdi
  000e8	c3		 ret	 0
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S15$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 117
this$ = 144
_Right$ = 152
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S15$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 117
this$ = 144
_Right$ = 152
?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S15$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 117
this$ = 144
_Right$ = 152
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@_W@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S15$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 117
this$ = 144
_Right$ = 152
?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
  0002f	90		 npad	 1
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty, COMDAT

; 2148 :         ~_Bxty() noexcept {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty, COMDAT

; 2146 :         _Bxty() {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_K_K0@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Off$ = 72
_Size$ = 80
?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_K_K0@Z PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Clamp_suffix_size, COMDAT

; 2140 :     size_type _Clamp_suffix_size(const size_type _Off, const size_type _Size) const noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2141 :         // trims _Size to the longest it can be assuming a string at/after _Off
; 2142 :         return _Min_value(_Size, _Mysize - _Off);

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Off$[rsp]
  00032	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00036	48 2b c1	 sub	 rax, rcx
  00039	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003e	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00043	48 8d 4c 24 50	 lea	 rcx, QWORD PTR _Size$[rsp]
  00048	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004d	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 2143 :     }

  00050	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_K_K0@Z ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Clamp_suffix_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Xran@?$_String_val@U?$_Simple_types@_W@std@@@std@@SAXXZ
_TEXT	SEGMENT
?_Xran@?$_String_val@U?$_Simple_types@_W@std@@@std@@SAXXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Xran, COMDAT

; 2136 :     [[noreturn]] static void _Xran() { // report an out_of_range error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 2137 :         _Xout_of_range("invalid string position");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position@
  0001c	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
$LN2@Xran:

; 2138 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xran@?$_String_val@U?$_Simple_types@_W@std@@@std@@SAXXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Check_offset@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
?_Check_offset@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAX_K@Z PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Check_offset, COMDAT

; 2124 :     void _Check_offset(const size_type _Off) const { // checks whether _Off is in the bounds of [0, size()]

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2125 :         if (_Mysize < _Off) {

  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Off$[rsp]
  0002d	48 39 48 18	 cmp	 QWORD PTR [rax+24], rcx
  00031	73 05		 jae	 SHORT $LN2@Check_offs

; 2126 :             _Xran();

  00033	e8 00 00 00 00	 call	 ?_Xran@?$_String_val@U?$_Simple_types@_W@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Xran
$LN2@Check_offs:
$LN3@Check_offs:

; 2127 :         }
; 2128 :     }

  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
?_Check_offset@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAX_K@Z ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv66 = 0
this$ = 32
?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged, COMDAT

; 2120 :     bool _Large_string_engaged() const { // returns whether the large string mode (allocated memory) is engaged

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 2121 :         return _BUF_SIZE <= _Myres;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 20 08	 cmp	 QWORD PTR [rax+32], 8
  00028	72 09		 jb	 SHORT $LN3@Large_stri
  0002a	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv66[rsp], 1
  00031	eb 07		 jmp	 SHORT $LN4@Large_stri
$LN3@Large_stri:
  00033	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv66[rsp], 0
$LN4@Large_stri:
  0003a	0f b6 04 24	 movzx	 eax, BYTE PTR tv66[rsp]

; 2122 :     }

  0003e	48 83 c4 10	 add	 rsp, 16
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ
_TEXT	SEGMENT
_Result$ = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT

; 2111 :     const value_type* _Myptr() const { // determine current pointer to buffer for immutable string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2112 :         const value_type* _Result = _Bx._Buf;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax

; 2113 :         if (_Large_string_engaged()) {

  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00031	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	74 13		 je	 SHORT $LN2@Myptr

; 2114 :             _Result = _Unfancy(_Bx._Ptr);

  0003d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00046	e8 00 00 00 00	 call	 ??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z ; std::_Unfancy<wchar_t>
  0004b	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax
$LN2@Myptr:

; 2115 :         }
; 2116 : 
; 2117 :         return _Result;

  00050	48 8b 44 24 20	 mov	 rax, QWORD PTR _Result$[rsp]

; 2118 :     }

  00055	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ
_TEXT	SEGMENT
_Result$ = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT

; 2102 :     value_type* _Myptr() { // determine current pointer to buffer for mutable string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2103 :         value_type* _Result = _Bx._Buf;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax

; 2104 :         if (_Large_string_engaged()) {

  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00031	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Large_string_engaged
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	74 13		 je	 SHORT $LN2@Myptr

; 2105 :             _Result = _Unfancy(_Bx._Ptr);

  0003d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00046	e8 00 00 00 00	 call	 ??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z ; std::_Unfancy<wchar_t>
  0004b	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax
$LN2@Myptr:

; 2106 :         }
; 2107 : 
; 2108 :         return _Result;

  00050	48 8b 44 24 20	 mov	 rax, QWORD PTR _Result$[rsp]

; 2109 :     }

  00055	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >, COMDAT

; 2092 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
  00039	90		 npad	 1
  0003a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 c7 40 20 00
	00 00 00	 mov	 QWORD PTR [rax+32], 0
  00054	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@AEBV32@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 16
_Al$ = 24
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@AEBV32@@Z PROC ; std::_Default_allocator_traits<std::allocator<wchar_t> >::select_on_container_copy_construction, COMDAT

; 770  :     _NODISCARD static _Alloc select_on_container_copy_construction(const _Alloc& _Al) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 771  :         return _Al;

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 772  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@AEBV32@@Z ENDP ; std::_Default_allocator_traits<std::allocator<wchar_t> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<wchar_t> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 768  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z PROC	; std::allocator<wchar_t>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$01@std@@YA_K_K@Z ; std::_Get_size_of_n<2>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ENDP	; std::allocator<wchar_t>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z PROC	; std::allocator<wchar_t>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR _Count$[rsp]
  0002d	48 d1 e0	 shl	 rax, 1
  00030	48 8b d0	 mov	 rdx, rax
  00033	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00038	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?deallocate@?$allocator@_W@std@@QEAAXQEA_W_K@Z ENDP	; std::allocator<wchar_t>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@_W@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@_W@std@@QEAA@XZ PROC			; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@_W@std@@QEAA@XZ ENDP			; std::allocator<wchar_t>::allocator<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0002b	90		 npad	 1
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4198 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4199 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4200 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4194 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4195 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4196 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators, COMDAT

; 4190 :     void _Swap_proxy_and_iterators(basic_string& _Right) { // swap all iterators

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4191 :         _Mypair._Myval2._Swap_proxy_and_iterators(_Right._Mypair._Myval2);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b d0	 mov	 rdx, rax
  00030	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators

; 4192 :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT

; 4180 :     [[noreturn]] static void _Xlen() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 4181 :         _Xlength_error("string too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlen:

; 4182 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_Ptr$1 = 32
_Al$2 = 40
$T3 = 48
this$ = 80
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT

; 4164 :     void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 4165 :         _Mypair._Myval2._Orphan_all();

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0002b	90		 npad	 1

; 4166 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0002c	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00039	90		 npad	 1
  0003a	0f b6 c0	 movzx	 eax, al
  0003d	85 c0		 test	 eax, eax
  0003f	74 4f		 je	 SHORT $LN2@Tidy_deall

; 4167 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

  00041	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00046	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0004a	48 89 44 24 20	 mov	 QWORD PTR _Ptr$1[rsp], rax

; 4168 :             auto& _Al          = _Getal();

  0004f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00054	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00059	90		 npad	 1
  0005a	48 89 44 24 28	 mov	 QWORD PTR _Al$2[rsp], rax

; 4169 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);

  0005f	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00064	48 83 c0 08	 add	 rax, 8
  00068	48 8b c8	 mov	 rcx, rax
  0006b	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ; std::_Destroy_in_place<char *>
  00070	90		 npad	 1

; 4170 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00071	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00076	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0007a	48 ff c0	 inc	 rax
  0007d	4c 8b c0	 mov	 r8, rax
  00080	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Ptr$1[rsp]
  00085	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Al$2[rsp]
  0008a	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
  0008f	90		 npad	 1
$LN2@Tidy_deall:

; 4171 :         }
; 4172 : 
; 4173 :         _Mypair._Myval2._Mysize = 0;

  00090	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00095	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4174 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0009d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000a2	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4175 :         // the _Traits::assign is last so the codegen doesn't think the char
; 4176 :         // write can alias this
; 4177 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000aa	c6 44 24 30 00	 mov	 BYTE PTR $T3[rsp], 0
  000af	b8 01 00 00 00	 mov	 eax, 1
  000b4	48 6b c0 00	 imul	 rax, rax, 0
  000b8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000bd	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  000c2	48 8d 54 24 30	 lea	 rdx, QWORD PTR $T3[rsp]
  000c7	48 8b c8	 mov	 rcx, rax
  000ca	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
  000cf	90		 npad	 1

; 4178 :     }

  000d0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init, COMDAT

; 4156 :     void _Tidy_init() noexcept { // initialize basic_string data members

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4157 :         _Mypair._Myval2._Mysize = 0;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4158 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4159 :         // the _Traits::assign is last so the codegen doesn't think the char
; 4160 :         // write can alias this
; 4161 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00038	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  0003d	b8 01 00 00 00	 mov	 eax, 1
  00042	48 6b c0 00	 imul	 rax, rax, 0
  00046	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  00050	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00055	48 8b c8	 mov	 rcx, rax
  00058	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 4162 :     }

  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Newsize$ = 72
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT

; 4152 :     void _Eos(const size_type _Newsize) { // set new length and null terminator

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4153 :         _Traits::assign(_Mypair._Myval2._Myptr()[_Mypair._Myval2._Mysize = _Newsize], _Elem());

  00023	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newsize$[rsp]
  00032	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx
  00036	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 8b c8	 mov	 rcx, rax
  0003e	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00043	48 03 44 24 48	 add	 rax, QWORD PTR _Newsize$[rsp]
  00048	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  0004d	48 8b c8	 mov	 rcx, rax
  00050	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 4154 :     }

  00055	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 48
_Requested$ = 56
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4077 :     _NODISCARD size_type _Calculate_growth(const size_type _Requested) const noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4078 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0002d	4c 8b c0	 mov	 r8, rax
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 50 20	 mov	 rdx, QWORD PTR [rax+32]
  00039	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Requested$[rsp]
  0003e	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth

; 4079 :     }

  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
_TEXT	SEGMENT
_Masked$ = 40
$T4 = 56
_Requested$ = 80
_Old$ = 88
_Max$ = 96
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4064 :         const size_type _Requested, const size_type _Old, const size_type _Max) noexcept {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 4065 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR _Requested$[rsp]
  0002d	48 83 c8 0f	 or	 rax, 15
  00031	48 89 44 24 28	 mov	 QWORD PTR _Masked$[rsp], rax

; 4066 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00036	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  0003b	48 39 44 24 28	 cmp	 QWORD PTR _Masked$[rsp], rax
  00040	76 07		 jbe	 SHORT $LN2@Calculate_

; 4067 :             return _Max;

  00042	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  00047	eb 59		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 4068 :         }
; 4069 : 
; 4070 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00049	33 d2		 xor	 edx, edx
  0004b	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old$[rsp]
  00050	b9 02 00 00 00	 mov	 ecx, 2
  00055	48 f7 f1	 div	 rcx
  00058	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Max$[rsp]
  0005d	48 2b c8	 sub	 rcx, rax
  00060	48 8b c1	 mov	 rax, rcx
  00063	48 39 44 24 58	 cmp	 QWORD PTR _Old$[rsp], rax
  00068	76 07		 jbe	 SHORT $LN3@Calculate_

; 4071 :             return _Max;

  0006a	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  0006f	eb 31		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 4072 :         }
; 4073 : 
; 4074 :         return _Max_value(_Masked, _Old + _Old / 2);

  00071	33 d2		 xor	 edx, edx
  00073	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old$[rsp]
  00078	b9 02 00 00 00	 mov	 ecx, 2
  0007d	48 f7 f1	 div	 rcx
  00080	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Old$[rsp]
  00085	48 03 c8	 add	 rcx, rax
  00088	48 8b c1	 mov	 rax, rcx
  0008b	48 89 44 24 38	 mov	 QWORD PTR $T4[rsp], rax
  00090	48 8d 54 24 38	 lea	 rdx, QWORD PTR $T4[rsp]
  00095	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Masked$[rsp]
  0009a	e8 00 00 00 00	 call	 ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Max_value<unsigned __int64>
  0009f	48 8b 00	 mov	 rax, QWORD PTR [rax]
$LN1@Calculate_:

; 4075 :     }

  000a2	48 8b f8	 mov	 rdi, rax
  000a5	48 8b cc	 mov	 rcx, rsp
  000a8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcFrameData
  000af	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000b4	48 8b c7	 mov	 rax, rdi
  000b7	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000bb	5f		 pop	 rdi
  000bc	c3		 ret	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 64
__$ReturnUdt$ = 72
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator, COMDAT

; 4058 :     _NODISCARD allocator_type get_allocator() const noexcept { // return allocator object for values

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4059 :         return static_cast<allocator_type>(_Getal());

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0002d	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 4060 :     }

  00032	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 52
this$ = 80
__$ReturnUdt$ = 88
_Off$ = 96
_Count$ = 104
?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr, COMDAT

; 3943 :     _NODISCARD basic_string substr(const size_type _Off = 0, const size_type _Count = npos) const {

$LN5:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
  0002d	c7 44 24 34 00
	00 00 00	 mov	 DWORD PTR $T2[rsp], 0

; 3944 :         // return [_Off, _Off + _Count) as new string
; 3945 :         return basic_string(*this, _Off, _Count, get_allocator());

  00035	48 8d 54 24 30	 lea	 rdx, QWORD PTR $T1[rsp]
  0003a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0003f	e8 00 00 00 00	 call	 ?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
  00044	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00049	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Count$[rsp]
  0004e	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Off$[rsp]
  00053	48 8b 54 24 50	 mov	 rdx, QWORD PTR this$[rsp]
  00058	48 8b 4c 24 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0005d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00062	90		 npad	 1
  00063	8b 44 24 34	 mov	 eax, DWORD PTR $T2[rsp]
  00067	83 c8 01	 or	 eax, 1
  0006a	89 44 24 34	 mov	 DWORD PTR $T2[rsp], eax
  0006e	48 8b 44 24 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 3946 :     }

  00073	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00077	5f		 pop	 rdi
  00078	c3		 ret	 0
  00079	cc		 int	 3
?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 52
this$ = 80
__$ReturnUdt$ = 88
_Off$ = 96
_Count$ = 104
?dtor$0@?0??substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 34	 mov	 eax, DWORD PTR $T2[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 34 fe	 and	 DWORD PTR $T2[rbp], -2
  00021	48 8b 4d 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 52
this$ = 80
__$ReturnUdt$ = 88
_Off$ = 96
_Count$ = 104
?dtor$0@?0??substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 34	 mov	 eax, DWORD PTR $T2[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 34 fe	 and	 DWORD PTR $T2[rbp], -2
  00021	48 8b 4d 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?find_last_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z
_TEXT	SEGMENT
$T1 = 49
tv70 = 56
this$ = 80
_Ptr$ = 88
_Off$ = 96
?find_last_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_last_not_of, COMDAT

; 3924 :         noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 3925 :         // look for none of [_Ptr, <null>) before _Off
; 3926 :         return static_cast<size_type>(_Traits_find_last_not_of<_Traits>(_Mypair._Myval2._Myptr(),

  00028	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0002d	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  00032	90		 npad	 1
  00033	48 89 44 24 38	 mov	 QWORD PTR tv70[rsp], rax
  00038	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0003d	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00042	90		 npad	 1
  00043	0f b6 4c 24 31	 movzx	 ecx, BYTE PTR $T1[rsp]
  00048	88 4c 24 28	 mov	 BYTE PTR [rsp+40], cl
  0004c	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv70[rsp]
  00051	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00056	4c 8b 4c 24 58	 mov	 r9, QWORD PTR _Ptr$[rsp]
  0005b	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Off$[rsp]
  00060	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00065	48 8b 51 18	 mov	 rdx, QWORD PTR [rcx+24]
  00069	48 8b c8	 mov	 rcx, rax
  0006c	e8 00 00 00 00	 call	 ??$_Traits_find_last_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z ; std::_Traits_find_last_not_of<std::char_traits<char> >
  00071	90		 npad	 1

; 3927 :             _Mypair._Myval2._Mysize, _Off, _Ptr, _Traits::length(_Ptr), _Is_specialization<_Traits, char_traits>{}));
; 3928 :     }

  00072	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
?find_last_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_last_not_of
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?find_first_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z
_TEXT	SEGMENT
$T1 = 49
tv70 = 56
this$ = 80
_Ptr$ = 88
_Off$ = 96
?find_first_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_first_not_of, COMDAT

; 3886 :         noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 3887 :         // look for one of [_Ptr, <null>) at or after _Off
; 3888 :         return static_cast<size_type>(_Traits_find_first_not_of<_Traits>(_Mypair._Myval2._Myptr(),

  00028	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0002d	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  00032	90		 npad	 1
  00033	48 89 44 24 38	 mov	 QWORD PTR tv70[rsp], rax
  00038	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0003d	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00042	90		 npad	 1
  00043	0f b6 4c 24 31	 movzx	 ecx, BYTE PTR $T1[rsp]
  00048	88 4c 24 28	 mov	 BYTE PTR [rsp+40], cl
  0004c	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv70[rsp]
  00051	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00056	4c 8b 4c 24 58	 mov	 r9, QWORD PTR _Ptr$[rsp]
  0005b	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Off$[rsp]
  00060	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00065	48 8b 51 18	 mov	 rdx, QWORD PTR [rcx+24]
  00069	48 8b c8	 mov	 rcx, rax
  0006c	e8 00 00 00 00	 call	 ??$_Traits_find_first_not_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z ; std::_Traits_find_first_not_of<std::char_traits<char> >
  00071	90		 npad	 1

; 3889 :             _Mypair._Myval2._Mysize, _Off, _Ptr, _Traits::length(_Ptr), _Is_specialization<_Traits, char_traits>{}));
; 3890 :     }

  00072	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
?find_first_not_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_first_not_of
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?find_first_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z
_TEXT	SEGMENT
$T1 = 49
tv70 = 56
this$ = 80
_Ptr$ = 88
_Off$ = 96
?find_first_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_first_of, COMDAT

; 3811 :         noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 3812 :         // look for one of [_Ptr, <null>) at or after _Off
; 3813 :         return static_cast<size_type>(_Traits_find_first_of<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

  00028	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0002d	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  00032	90		 npad	 1
  00033	48 89 44 24 38	 mov	 QWORD PTR tv70[rsp], rax
  00038	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0003d	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00042	90		 npad	 1
  00043	0f b6 4c 24 31	 movzx	 ecx, BYTE PTR $T1[rsp]
  00048	88 4c 24 28	 mov	 BYTE PTR [rsp+40], cl
  0004c	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv70[rsp]
  00051	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00056	4c 8b 4c 24 58	 mov	 r9, QWORD PTR _Ptr$[rsp]
  0005b	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Off$[rsp]
  00060	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00065	48 8b 51 18	 mov	 rdx, QWORD PTR [rcx+24]
  00069	48 8b c8	 mov	 rcx, rax
  0006c	e8 00 00 00 00	 call	 ??$_Traits_find_first_of@U?$char_traits@D@std@@@std@@YA_KQEBD_K101U?$integral_constant@_N$00@0@@Z ; std::_Traits_find_first_of<std::char_traits<char> >
  00071	90		 npad	 1

; 3814 :             _Off, _Ptr, _Traits::length(_Ptr), _Is_specialization<_Traits, char_traits>{}));
; 3815 :     }

  00072	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
?find_first_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_first_of
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KAEBV12@_K@Z
_TEXT	SEGMENT
tv72 = 48
this$ = 80
_Right$ = 88
_Off$ = 96
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KAEBV12@_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find, COMDAT

; 3725 :     _NODISCARD size_type find(const basic_string& _Right, const size_type _Off = 0) const noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 3726 :         // look for _Right beginning at or after _Off
; 3727 :         return static_cast<size_type>(_Traits_find<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Off,

  00028	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00035	90		 npad	 1
  00036	48 89 44 24 30	 mov	 QWORD PTR tv72[rsp], rax
  0003b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00040	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00045	90		 npad	 1
  00046	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0004b	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  0004f	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00054	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv72[rsp]
  00059	4c 8b c9	 mov	 r9, rcx
  0005c	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Off$[rsp]
  00061	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00066	48 8b 51 18	 mov	 rdx, QWORD PTR [rcx+24]
  0006a	48 8b c8	 mov	 rcx, rax
  0006d	e8 00 00 00 00	 call	 ??$_Traits_find@U?$char_traits@D@std@@@std@@YA_KQEBD_K101@Z ; std::_Traits_find<std::char_traits<char> >
  00072	90		 npad	 1

; 3728 :             _Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize));
; 3729 :     }

  00073	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00077	5f		 pop	 rdi
  00078	c3		 ret	 0
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KAEBV12@_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_Alloc_max$ = 40
_Storage_max$ = 56
$T4 = 64
$T5 = 72
$T6 = 80
this$ = 112
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT

; 3570 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 18 00 00 00	 mov	 ecx, 24
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 3571 :         const size_type _Alloc_max   = _Alty_traits::max_size(_Getal());

  0001e	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
  00030	48 89 44 24 28	 mov	 QWORD PTR _Alloc_max$[rsp], rax

; 3572 :         const size_type _Storage_max = // can always store small string

  00035	48 c7 44 24 40
	10 00 00 00	 mov	 QWORD PTR $T4[rsp], 16
  0003e	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T4[rsp]
  00043	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Alloc_max$[rsp]
  00048	e8 00 00 00 00	 call	 ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Max_value<unsigned __int64>
  0004d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00050	48 89 44 24 38	 mov	 QWORD PTR _Storage_max$[rsp], rax

; 3573 :             _Max_value(_Alloc_max, static_cast<size_type>(_BUF_SIZE));
; 3574 :         return _Min_value(static_cast<size_type>((numeric_limits<difference_type>::max)()),

  00055	48 8b 44 24 38	 mov	 rax, QWORD PTR _Storage_max$[rsp]
  0005a	48 ff c8	 dec	 rax
  0005d	48 89 44 24 48	 mov	 QWORD PTR $T5[rsp], rax
  00062	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  00067	48 89 44 24 50	 mov	 QWORD PTR $T6[rsp], rax
  0006c	48 8d 54 24 48	 lea	 rdx, QWORD PTR $T5[rsp]
  00071	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T6[rsp]
  00076	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0007b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 3575 :             _Storage_max - 1 // -1 is for null terminator and/or npos
; 3576 :         );
; 3577 :     }

  0007e	48 8b f8	 mov	 rdi, rax
  00081	48 8b cc	 mov	 rcx, rsp
  00084	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcFrameData
  0008b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00090	48 8b c7	 mov	 rax, rdi
  00093	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00097	5f		 pop	 rdi
  00098	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 16
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT

; 3566 :     _NODISCARD size_type size() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 3567 :         return _Mypair._Myval2._Mysize;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]

; 3568 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 16
?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length, COMDAT

; 3562 :     _NODISCARD size_type length() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 3563 :         return _Mypair._Myval2._Mysize;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]

; 3564 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 48
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT

; 3548 :     _NODISCARD _Ret_z_ const _Elem* c_str() const noexcept { // return pointer to null-terminated immutable array

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3549 :         return _Mypair._Myval2._Myptr();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0002b	90		 npad	 1

; 3550 :     }

  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z
_TEXT	SEGMENT
_Old_size$ = 64
_Suffix_size$ = 72
_Old_ptr$1 = 80
_Insert_at$2 = 88
_Growth$ = 96
_Old_ptr$3 = 104
_Insert_at$4 = 112
_Suffix_at$5 = 120
_Ptr_shifted_after$6 = 128
$T7 = 136
tv175 = 144
this$ = 176
_Off$ = 184
_N0$ = 192
_Ptr$ = 200
_Count$ = 208
?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace, COMDAT

; 3160 :         const size_type _Off, size_type _N0, _In_reads_(_Count) const _Elem* const _Ptr, const size_type _Count) {

$LN11:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+176]

; 3161 :         // replace [_Off, _Off + _N0) with [_Ptr, _Ptr + _Count)
; 3162 :         _Mypair._Myval2._Check_offset(_Off);

  00033	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 8b 94 24 b8
	00 00 00	 mov	 rdx, QWORD PTR _Off$[rsp]
  00043	48 8b c8	 mov	 rcx, rax
  00046	e8 00 00 00 00	 call	 ?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ; std::_String_val<std::_Simple_types<char> >::_Check_offset

; 3163 :         _N0 = _Mypair._Myval2._Clamp_suffix_size(_Off, _N0);

  0004b	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00053	4c 8b 84 24 c0
	00 00 00	 mov	 r8, QWORD PTR _N0$[rsp]
  0005b	48 8b 94 24 b8
	00 00 00	 mov	 rdx, QWORD PTR _Off$[rsp]
  00063	48 8b c8	 mov	 rcx, rax
  00066	e8 00 00 00 00	 call	 ?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size
  0006b	48 89 84 24 c0
	00 00 00	 mov	 QWORD PTR _N0$[rsp], rax

; 3164 :         if (_N0 == _Count) { // size doesn't change, so a single move does the trick

  00073	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR _Count$[rsp]
  0007b	48 39 84 24 c0
	00 00 00	 cmp	 QWORD PTR _N0$[rsp], rax
  00083	75 3d		 jne	 SHORT $LN2@replace

; 3165 :             _Traits::move(_Mypair._Myval2._Myptr() + _Off, _Ptr, _Count);

  00085	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0008d	48 8b c8	 mov	 rcx, rax
  00090	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00095	48 03 84 24 b8
	00 00 00	 add	 rax, QWORD PTR _Off$[rsp]
  0009d	4c 8b 84 24 d0
	00 00 00	 mov	 r8, QWORD PTR _Count$[rsp]
  000a5	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  000ad	48 8b c8	 mov	 rcx, rax
  000b0	e8 00 00 00 00	 call	 ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move

; 3166 :             return *this;

  000b5	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000bd	e9 20 03 00 00	 jmp	 $LN1@replace
$LN2@replace:

; 3167 :         }
; 3168 : 
; 3169 :         const size_type _Old_size    = _Mypair._Myval2._Mysize;

  000c2	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000ca	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  000ce	48 89 44 24 40	 mov	 QWORD PTR _Old_size$[rsp], rax

; 3170 :         const size_type _Suffix_size = _Old_size - _N0 - _Off + 1;

  000d3	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR _N0$[rsp]
  000db	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  000e0	48 2b c8	 sub	 rcx, rax
  000e3	48 8b c1	 mov	 rax, rcx
  000e6	48 2b 84 24 b8
	00 00 00	 sub	 rax, QWORD PTR _Off$[rsp]
  000ee	48 ff c0	 inc	 rax
  000f1	48 89 44 24 48	 mov	 QWORD PTR _Suffix_size$[rsp], rax

; 3171 :         if (_Count < _N0) { // suffix shifts backwards; we don't have to move anything out of the way

  000f6	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR _N0$[rsp]
  000fe	48 39 84 24 d0
	00 00 00	 cmp	 QWORD PTR _Count$[rsp], rax
  00106	0f 83 b4 00 00
	00		 jae	 $LN3@replace

; 3172 :             _Mypair._Myval2._Mysize = _Old_size - (_N0 - _Count);

  0010c	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR _Count$[rsp]
  00114	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR _N0$[rsp]
  0011c	48 2b c8	 sub	 rcx, rax
  0011f	48 8b c1	 mov	 rax, rcx
  00122	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00127	48 2b c8	 sub	 rcx, rax
  0012a	48 8b c1	 mov	 rax, rcx
  0012d	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00135	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 3173 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  00139	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00141	48 8b c8	 mov	 rcx, rax
  00144	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00149	48 89 44 24 50	 mov	 QWORD PTR _Old_ptr$1[rsp], rax

; 3174 :             _Elem* const _Insert_at = _Old_ptr + _Off;

  0014e	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR _Off$[rsp]
  00156	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  0015b	48 03 c8	 add	 rcx, rax
  0015e	48 8b c1	 mov	 rax, rcx
  00161	48 89 44 24 58	 mov	 QWORD PTR _Insert_at$2[rsp], rax

; 3175 :             _Traits::move(_Insert_at, _Ptr, _Count);

  00166	4c 8b 84 24 d0
	00 00 00	 mov	 r8, QWORD PTR _Count$[rsp]
  0016e	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00176	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Insert_at$2[rsp]
  0017b	e8 00 00 00 00	 call	 ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move

; 3176 :             _Traits::move(_Insert_at + _Count, _Insert_at + _N0, _Suffix_size);

  00180	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR _N0$[rsp]
  00188	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Insert_at$2[rsp]
  0018d	48 03 c8	 add	 rcx, rax
  00190	48 8b c1	 mov	 rax, rcx
  00193	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR _Count$[rsp]
  0019b	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Insert_at$2[rsp]
  001a0	48 03 d1	 add	 rdx, rcx
  001a3	48 8b ca	 mov	 rcx, rdx
  001a6	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Suffix_size$[rsp]
  001ab	48 8b d0	 mov	 rdx, rax
  001ae	e8 00 00 00 00	 call	 ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move

; 3177 :             return *this;

  001b3	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001bb	e9 22 02 00 00	 jmp	 $LN1@replace
$LN3@replace:

; 3178 :         }
; 3179 : 
; 3180 :         const size_type _Growth = static_cast<size_type>(_Count - _N0);

  001c0	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR _N0$[rsp]
  001c8	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR _Count$[rsp]
  001d0	48 2b c8	 sub	 rcx, rax
  001d3	48 8b c1	 mov	 rax, rcx
  001d6	48 89 44 24 60	 mov	 QWORD PTR _Growth$[rsp], rax

; 3181 :         if (_Growth <= _Mypair._Myval2._Myres - _Old_size) { // growth fits

  001db	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001e3	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  001e8	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  001ec	48 2b c1	 sub	 rax, rcx
  001ef	48 39 44 24 60	 cmp	 QWORD PTR _Growth$[rsp], rax
  001f4	0f 87 8a 01 00
	00		 ja	 $LN4@replace

; 3182 :             _Mypair._Myval2._Mysize = _Old_size + _Growth;

  001fa	48 8b 44 24 60	 mov	 rax, QWORD PTR _Growth$[rsp]
  001ff	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00204	48 03 c8	 add	 rcx, rax
  00207	48 8b c1	 mov	 rax, rcx
  0020a	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00212	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 3183 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  00216	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0021e	48 8b c8	 mov	 rcx, rax
  00221	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00226	48 89 44 24 68	 mov	 QWORD PTR _Old_ptr$3[rsp], rax

; 3184 :             _Elem* const _Insert_at = _Old_ptr + _Off;

  0022b	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR _Off$[rsp]
  00233	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Old_ptr$3[rsp]
  00238	48 03 c8	 add	 rcx, rax
  0023b	48 8b c1	 mov	 rax, rcx
  0023e	48 89 44 24 70	 mov	 QWORD PTR _Insert_at$4[rsp], rax

; 3185 :             _Elem* const _Suffix_at = _Insert_at + _N0;

  00243	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR _N0$[rsp]
  0024b	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Insert_at$4[rsp]
  00250	48 03 c8	 add	 rcx, rax
  00253	48 8b c1	 mov	 rax, rcx
  00256	48 89 44 24 78	 mov	 QWORD PTR _Suffix_at$5[rsp], rax

; 3186 : 
; 3187 :             size_type _Ptr_shifted_after; // see rationale in insert
; 3188 :             if (_Ptr + _Count <= _Insert_at || _Ptr > _Old_ptr + _Old_size) {

  0025b	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR _Count$[rsp]
  00263	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0026b	48 03 c8	 add	 rcx, rax
  0026e	48 8b c1	 mov	 rax, rcx
  00271	48 3b 44 24 70	 cmp	 rax, QWORD PTR _Insert_at$4[rsp]
  00276	76 1a		 jbe	 SHORT $LN7@replace
  00278	48 8b 44 24 40	 mov	 rax, QWORD PTR _Old_size$[rsp]
  0027d	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Old_ptr$3[rsp]
  00282	48 03 c8	 add	 rcx, rax
  00285	48 8b c1	 mov	 rax, rcx
  00288	48 39 84 24 c8
	00 00 00	 cmp	 QWORD PTR _Ptr$[rsp], rax
  00290	76 12		 jbe	 SHORT $LN5@replace
$LN7@replace:

; 3189 :                 _Ptr_shifted_after = _Count;

  00292	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR _Count$[rsp]
  0029a	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR _Ptr_shifted_after$6[rsp], rax
  002a2	eb 38		 jmp	 SHORT $LN6@replace
$LN5@replace:

; 3190 :             } else if (_Suffix_at <= _Ptr) {

  002a4	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR _Ptr$[rsp]
  002ac	48 39 44 24 78	 cmp	 QWORD PTR _Suffix_at$5[rsp], rax
  002b1	77 0e		 ja	 SHORT $LN8@replace

; 3191 :                 _Ptr_shifted_after = 0;

  002b3	48 c7 84 24 80
	00 00 00 00 00
	00 00		 mov	 QWORD PTR _Ptr_shifted_after$6[rsp], 0

; 3192 :             } else {

  002bf	eb 1b		 jmp	 SHORT $LN9@replace
$LN8@replace:

; 3193 :                 _Ptr_shifted_after = static_cast<size_type>(_Suffix_at - _Ptr);

  002c1	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR _Ptr$[rsp]
  002c9	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Suffix_at$5[rsp]
  002ce	48 2b c8	 sub	 rcx, rax
  002d1	48 8b c1	 mov	 rax, rcx
  002d4	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR _Ptr_shifted_after$6[rsp], rax
$LN9@replace:
$LN6@replace:

; 3194 :             }
; 3195 : 
; 3196 :             _Traits::move(_Suffix_at + _Growth, _Suffix_at, _Suffix_size);

  002dc	48 8b 44 24 60	 mov	 rax, QWORD PTR _Growth$[rsp]
  002e1	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Suffix_at$5[rsp]
  002e6	48 03 c8	 add	 rcx, rax
  002e9	48 8b c1	 mov	 rax, rcx
  002ec	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Suffix_size$[rsp]
  002f1	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Suffix_at$5[rsp]
  002f6	48 8b c8	 mov	 rcx, rax
  002f9	e8 00 00 00 00	 call	 ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move

; 3197 :             // next case must be move, in case _Ptr begins before _Insert_at and contains part of the hole;
; 3198 :             // this case doesn't occur in insert because the new content must come from outside the removed
; 3199 :             // content there (because in insert there is no removed content)
; 3200 :             _Traits::move(_Insert_at, _Ptr, _Ptr_shifted_after);

  002fe	4c 8b 84 24 80
	00 00 00	 mov	 r8, QWORD PTR _Ptr_shifted_after$6[rsp]
  00306	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0030e	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Insert_at$4[rsp]
  00313	e8 00 00 00 00	 call	 ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move

; 3201 :             // the next case can be copy, because it comes from the chunk moved out of the way in the
; 3202 :             // first move, and the hole we're filling can't alias the chunk we moved out of the way
; 3203 :             _Traits::copy(

  00318	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR _Ptr_shifted_after$6[rsp]
  00320	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR _Count$[rsp]
  00328	48 2b c8	 sub	 rcx, rax
  0032b	48 8b c1	 mov	 rax, rcx
  0032e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Growth$[rsp]
  00333	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0033b	48 03 d1	 add	 rdx, rcx
  0033e	48 8b ca	 mov	 rcx, rdx
  00341	48 03 8c 24 80
	00 00 00	 add	 rcx, QWORD PTR _Ptr_shifted_after$6[rsp]
  00349	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Ptr_shifted_after$6[rsp]
  00351	4c 8b 44 24 70	 mov	 r8, QWORD PTR _Insert_at$4[rsp]
  00356	4c 03 c2	 add	 r8, rdx
  00359	49 8b d0	 mov	 rdx, r8
  0035c	48 89 94 24 90
	00 00 00	 mov	 QWORD PTR tv175[rsp], rdx
  00364	4c 8b c0	 mov	 r8, rax
  00367	48 8b d1	 mov	 rdx, rcx
  0036a	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR tv175[rsp]
  00372	48 8b c8	 mov	 rcx, rax
  00375	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 3204 :                 _Insert_at + _Ptr_shifted_after, _Ptr + _Growth + _Ptr_shifted_after, _Count - _Ptr_shifted_after);
; 3205 :             return *this;

  0037a	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00382	eb 5e		 jmp	 SHORT $LN1@replace
$LN4@replace:

; 3206 :         }
; 3207 : 
; 3208 :         return _Reallocate_grow_by(

  00384	48 8d 84 24 88
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  0038c	48 8b f8	 mov	 rdi, rax
  0038f	33 c0		 xor	 eax, eax
  00391	b9 01 00 00 00	 mov	 ecx, 1
  00396	f3 aa		 rep stosb
  00398	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR _Count$[rsp]
  003a0	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  003a5	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR _Ptr$[rsp]
  003ad	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  003b2	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR _N0$[rsp]
  003ba	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  003bf	4c 8b 8c 24 b8
	00 00 00	 mov	 r9, QWORD PTR _Off$[rsp]
  003c7	44 0f b6 84 24
	88 00 00 00	 movzx	 r8d, BYTE PTR $T7[rsp]
  003d0	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Growth$[rsp]
  003d5	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  003dd	e8 00 00 00 00	 call	 ??$_Reallocate_grow_by@V<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_16d2cb92461ac9818af78a76c749bd7f>@@_K2PEBD2@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_16d2cb92461ac9818af78a76c749bd7f>,unsigned __int64,unsigned __int64,char const *,unsigned __int64>
$LN1@replace:

; 3209 :             _Growth,
; 3210 :             [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size, const size_type _Off,
; 3211 :                 const size_type _N0, const _Elem* const _Ptr, const size_type _Count) {
; 3212 :                 _Traits::copy(_New_ptr, _Old_ptr, _Off);
; 3213 :                 _Traits::copy(_New_ptr + _Off, _Ptr, _Count);
; 3214 :                 _Traits::copy(_New_ptr + _Off + _Count, _Old_ptr + _Off + _N0, _Old_size - _N0 - _Off + 1);
; 3215 :             },
; 3216 :             _Off, _N0, _Ptr, _Count);
; 3217 :     }

  003e2	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  003e9	5f		 pop	 rdi
  003ea	c3		 ret	 0
?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0AEBV12@@Z
_TEXT	SEGMENT
this$ = 64
_Off$ = 72
_N0$ = 80
_Right$ = 88
?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0AEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace, COMDAT

; 3129 :     basic_string& replace(const size_type _Off, const size_type _N0, const basic_string& _Right) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 3130 :         // replace [_Off, _Off + _N0) with _Right
; 3131 :         return replace(_Off, _N0, _Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  0002d	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0003a	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003f	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00043	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00048	4c 8b c8	 mov	 r9, rax
  0004b	4c 8b 44 24 50	 mov	 r8, QWORD PTR _N0$[rsp]
  00050	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Off$[rsp]
  00055	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0005a	e8 00 00 00 00	 call	 ?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace

; 3132 :     }

  0005f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0AEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::clear, COMDAT

; 3125 :     void clear() noexcept { // erase all

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3126 :         _Eos(0);

  0001e	33 d2		 xor	 edx, edx
  00020	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00025	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
  0002a	90		 npad	 1

; 3127 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 2860 :     basic_string& assign(_In_z_ const _Elem* const _Ptr) { // assign [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2861 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00028	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00035	4c 8b c0	 mov	 r8, rax
  00038	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2862 :     }

  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
_TEXT	SEGMENT
_Old_ptr$1 = 32
$T2 = 40
$T3 = 41
this$ = 64
_Ptr$ = 72
_Count$ = 80
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 2841 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2842 :         // assign [_Ptr, _Ptr + _Count)
; 2843 :         if (_Count <= _Mypair._Myval2._Myres) {

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00031	48 39 44 24 50	 cmp	 QWORD PTR _Count$[rsp], rax
  00036	77 5d		 ja	 SHORT $LN2@assign

; 2844 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  00038	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b c8	 mov	 rcx, rax
  00040	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00045	48 89 44 24 20	 mov	 QWORD PTR _Old_ptr$1[rsp], rax

; 2845 :             _Mypair._Myval2._Mysize = _Count;

  0004a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0004f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Count$[rsp]
  00054	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2846 :             _Traits::move(_Old_ptr, _Ptr, _Count);

  00058	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Count$[rsp]
  0005d	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00062	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  00067	e8 00 00 00 00	 call	 ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move

; 2847 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0006c	c6 44 24 28 00	 mov	 BYTE PTR $T2[rsp], 0
  00071	48 8b 44 24 50	 mov	 rax, QWORD PTR _Count$[rsp]
  00076	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  0007b	48 03 c8	 add	 rcx, rax
  0007e	48 8b c1	 mov	 rax, rcx
  00081	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T2[rsp]
  00086	48 8b c8	 mov	 rcx, rax
  00089	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2848 :             return *this;

  0008e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00093	eb 2b		 jmp	 SHORT $LN1@assign
$LN2@assign:

; 2849 :         }
; 2850 : 
; 2851 :         return _Reallocate_for(

  00095	48 8d 44 24 29	 lea	 rax, QWORD PTR $T3[rsp]
  0009a	48 8b f8	 mov	 rdi, rax
  0009d	33 c0		 xor	 eax, eax
  0009f	b9 01 00 00 00	 mov	 ecx, 1
  000a4	f3 aa		 rep stosb
  000a6	4c 8b 4c 24 48	 mov	 r9, QWORD PTR _Ptr$[rsp]
  000ab	44 0f b6 44 24
	29		 movzx	 r8d, BYTE PTR $T3[rsp]
  000b1	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Count$[rsp]
  000b6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000bb	e8 00 00 00 00	 call	 ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
$LN1@assign:

; 2852 :             _Count,
; 2853 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {
; 2854 :                 _Traits::copy(_New_ptr, _Ptr, _Count);
; 2855 :                 _Traits::assign(_New_ptr[_Count], _Elem());
; 2856 :             },
; 2857 :             _Ptr);
; 2858 :     }

  000c0	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000c4	5f		 pop	 rdi
  000c5	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
_Roff$ = 64
_Count$ = 72
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 2819 :     basic_string& assign(const basic_string& _Right, const size_type _Roff, size_type _Count = npos) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2820 :         // assign _Right [_Roff, _Roff + _Count)
; 2821 :         _Right._Mypair._Myval2._Check_offset(_Roff);

  0002d	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00032	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Roff$[rsp]
  00037	48 8b c8	 mov	 rcx, rax
  0003a	e8 00 00 00 00	 call	 ?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ; std::_String_val<std::_Simple_types<char> >::_Check_offset

; 2822 :         _Count = _Right._Mypair._Myval2._Clamp_suffix_size(_Roff, _Count);

  0003f	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00044	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Count$[rsp]
  00049	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Roff$[rsp]
  0004e	48 8b c8	 mov	 rcx, rax
  00051	e8 00 00 00 00	 call	 ?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size
  00056	48 89 44 24 48	 mov	 QWORD PTR _Count$[rsp], rax

; 2823 :         return assign(_Right._Mypair._Myval2._Myptr() + _Roff, _Count);

  0005b	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00060	48 8b c8	 mov	 rcx, rax
  00063	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00068	48 03 44 24 40	 add	 rax, QWORD PTR _Roff$[rsp]
  0006d	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Count$[rsp]
  00072	48 8b d0	 mov	 rdx, rax
  00075	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0007a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2824 :     }

  0007f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2756 :     basic_string& append(_In_z_ const _Elem* const _Ptr) { // append [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2757 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00028	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00035	4c 8b c0	 mov	 r8, rax
  00038	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2758 :     }

  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
_TEXT	SEGMENT
_Old_size$ = 48
_Old_ptr$1 = 56
$T2 = 64
$T3 = 65
this$ = 96
_Ptr$ = 104
_Count$ = 112
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2734 :     basic_string& append(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 2735 :         // append [_Ptr, _Ptr + _Count)
; 2736 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  00028	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00031	48 89 44 24 30	 mov	 QWORD PTR _Old_size$[rsp], rax

; 2737 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

  00036	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00040	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00044	48 2b c1	 sub	 rax, rcx
  00047	48 39 44 24 70	 cmp	 QWORD PTR _Count$[rsp], rax
  0004c	0f 87 81 00 00
	00		 ja	 $LN2@append

; 2738 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  00052	48 8b 44 24 70	 mov	 rax, QWORD PTR _Count$[rsp]
  00057	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0005c	48 03 c8	 add	 rcx, rax
  0005f	48 8b c1	 mov	 rax, rcx
  00062	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00067	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 2739 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  0006b	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00070	48 8b c8	 mov	 rcx, rax
  00073	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00078	48 89 44 24 38	 mov	 QWORD PTR _Old_ptr$1[rsp], rax

; 2740 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

  0007d	48 8b 44 24 30	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00082	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  00087	48 03 c8	 add	 rcx, rax
  0008a	48 8b c1	 mov	 rax, rcx
  0008d	4c 8b 44 24 70	 mov	 r8, QWORD PTR _Count$[rsp]
  00092	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00097	48 8b c8	 mov	 rcx, rax
  0009a	e8 00 00 00 00	 call	 ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move

; 2741 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

  0009f	c6 44 24 40 00	 mov	 BYTE PTR $T2[rsp], 0
  000a4	48 8b 44 24 70	 mov	 rax, QWORD PTR _Count$[rsp]
  000a9	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  000ae	48 03 c8	 add	 rcx, rax
  000b1	48 8b c1	 mov	 rax, rcx
  000b4	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  000b9	48 03 c8	 add	 rcx, rax
  000bc	48 8b c1	 mov	 rax, rcx
  000bf	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T2[rsp]
  000c4	48 8b c8	 mov	 rcx, rax
  000c7	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2742 :             return *this;

  000cc	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  000d1	eb 35		 jmp	 SHORT $LN1@append
$LN2@append:

; 2743 :         }
; 2744 : 
; 2745 :         return _Reallocate_grow_by(

  000d3	48 8d 44 24 41	 lea	 rax, QWORD PTR $T3[rsp]
  000d8	48 8b f8	 mov	 rdi, rax
  000db	33 c0		 xor	 eax, eax
  000dd	b9 01 00 00 00	 mov	 ecx, 1
  000e2	f3 aa		 rep stosb
  000e4	48 8b 44 24 70	 mov	 rax, QWORD PTR _Count$[rsp]
  000e9	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000ee	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Ptr$[rsp]
  000f3	44 0f b6 44 24
	41		 movzx	 r8d, BYTE PTR $T3[rsp]
  000f9	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Count$[rsp]
  000fe	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00103	e8 00 00 00 00	 call	 ??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
$LN1@append:

; 2746 :             _Count,
; 2747 :             [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size, const _Elem* const _Ptr,
; 2748 :                 const size_type _Count) {
; 2749 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);
; 2750 :                 _Traits::copy(_New_ptr + _Old_size, _Ptr, _Count);
; 2751 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());
; 2752 :             },
; 2753 :             _Ptr, _Count);
; 2754 :     }

  00108	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0010c	5f		 pop	 rdi
  0010d	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2708 :     basic_string& append(const basic_string& _Right) { // append _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2709 :         return append(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00030	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00035	4c 8b 41 18	 mov	 r8, QWORD PTR [rcx+24]
  00039	48 8b d0	 mov	 rdx, rax
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2710 :     }

  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT

; 2699 :     basic_string& operator+=(_In_z_ const _Elem* const _Ptr) { // append [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2700 :         return append(_Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2701 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT

; 2688 :     basic_string& operator+=(const basic_string& _Right) { // append _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2689 :         return append(_Right);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2690 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT

; 2676 :     basic_string& operator=(_In_z_ const _Elem* const _Ptr) { // assign [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2677 :         return assign(_Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2678 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S16$ = 52
_To_delete$ = 72
this$ = 96
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2597 :     ~basic_string() noexcept { // destroy the string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 2598 :         _Tidy_deallocate();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
  00028	90		 npad	 1

; 2599 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2600 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S16$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S16$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 2601 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;

  0004c	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00051	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00054	48 89 44 24 48	 mov	 QWORD PTR _To_delete$[rsp], rax

; 2602 :         _Mypair._Myval2._Myproxy = nullptr;

  00059	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2603 :         _Delete_plain_internal(_Alproxy, _To_delete);

  00065	48 8b 54 24 48	 mov	 rdx, QWORD PTR _To_delete$[rsp]
  0006a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  0006f	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00074	90		 npad	 1

; 2604 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2605 :     }

  00075	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0007a	48 8b c8	 mov	 rcx, rax
  0007d	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  00082	90		 npad	 1
  00083	48 8b cc	 mov	 rcx, rsp
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcFrameData
  0008d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00092	90		 npad	 1
  00093	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00097	5f		 pop	 rdi
  00098	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S16$ = 52
_To_delete$ = 72
this$ = 96
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S16$ = 52
_To_delete$ = 72
this$ = 96
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
_TEXT	SEGMENT
_Right_data$ = 32
_Right_size$ = 40
_Right_ptr$ = 48
_My_data$ = 56
_Al$ = 64
_New_capacity$ = 72
_New_array$ = 88
$T4 = 104
$T5 = 112
tv131 = 120
this$ = 144
_Right$ = 152
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents, COMDAT

; 2525 :     void _Construct_lv_contents(const basic_string& _Right) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 2526 :         // assign by copying data stored in _Right
; 2527 :         // pre: this != &_Right
; 2528 :         // pre: *this owns no memory, iterators orphaned (note:
; 2529 :         // _Buf/_Ptr/_Mysize/_Myres may be garbage init)
; 2530 :         auto& _Right_data             = _Right._Mypair._Myval2;

  00029	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR _Right$[rsp]
  00031	48 89 44 24 20	 mov	 QWORD PTR _Right_data$[rsp], rax

; 2531 :         const size_type _Right_size   = _Right_data._Mysize;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _Right_data$[rsp]
  0003b	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0003f	48 89 44 24 28	 mov	 QWORD PTR _Right_size$[rsp], rax

; 2532 :         const _Elem* const _Right_ptr = _Right_data._Myptr();

  00044	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Right_data$[rsp]
  00049	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0004e	48 89 44 24 30	 mov	 QWORD PTR _Right_ptr$[rsp], rax

; 2533 :         auto& _My_data                = _Mypair._Myval2;

  00053	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0005b	48 89 44 24 38	 mov	 QWORD PTR _My_data$[rsp], rax

; 2534 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  00060	48 83 7c 24 28
	10		 cmp	 QWORD PTR _Right_size$[rsp], 16
  00066	73 3c		 jae	 SHORT $LN2@Construct_

; 2535 :             _Traits::copy(_My_data._Bx._Buf, _Right_ptr, _BUF_SIZE);

  00068	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  0006d	48 83 c0 08	 add	 rax, 8
  00071	41 b8 10 00 00
	00		 mov	 r8d, 16
  00077	48 8b 54 24 30	 mov	 rdx, QWORD PTR _Right_ptr$[rsp]
  0007c	48 8b c8	 mov	 rcx, rax
  0007f	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2536 :             _My_data._Mysize = _Right_size;

  00084	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  00089	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Right_size$[rsp]
  0008e	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2537 :             _My_data._Myres  = _BUF_SIZE - 1;

  00092	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  00097	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 2538 :             return;

  0009f	e9 c1 00 00 00	 jmp	 $LN1@Construct_
$LN2@Construct_:

; 2539 :         }
; 2540 : 
; 2541 :         auto& _Al                     = _Getal();

  000a4	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000ac	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000b1	48 89 44 24 40	 mov	 QWORD PTR _Al$[rsp], rax

; 2542 :         const size_type _New_capacity = _Min_value(_Right_size | _ALLOC_MASK, max_size());

  000b6	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000be	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  000c3	48 89 44 24 68	 mov	 QWORD PTR $T4[rsp], rax
  000c8	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right_size$[rsp]
  000cd	48 83 c8 0f	 or	 rax, 15
  000d1	48 89 44 24 70	 mov	 QWORD PTR $T5[rsp], rax
  000d6	48 8d 54 24 68	 lea	 rdx, QWORD PTR $T4[rsp]
  000db	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T5[rsp]
  000e0	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  000e5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000e8	48 89 44 24 48	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 2543 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  000ed	48 8b 44 24 48	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  000f2	48 ff c0	 inc	 rax
  000f5	48 8b d0	 mov	 rdx, rax
  000f8	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Al$[rsp]
  000fd	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  00102	48 89 44 24 58	 mov	 QWORD PTR _New_array$[rsp], rax

; 2544 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

  00107	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  0010c	48 83 c0 08	 add	 rax, 8
  00110	48 8d 54 24 58	 lea	 rdx, QWORD PTR _New_array$[rsp]
  00115	48 8b c8	 mov	 rcx, rax
  00118	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2545 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  0011d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right_size$[rsp]
  00122	48 ff c0	 inc	 rax
  00125	48 89 44 24 78	 mov	 QWORD PTR tv131[rsp], rax
  0012a	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _New_array$[rsp]
  0012f	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00134	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv131[rsp]
  00139	4c 8b c1	 mov	 r8, rcx
  0013c	48 8b 54 24 30	 mov	 rdx, QWORD PTR _Right_ptr$[rsp]
  00141	48 8b c8	 mov	 rcx, rax
  00144	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2546 :         _My_data._Mysize = _Right_size;

  00149	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  0014e	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Right_size$[rsp]
  00153	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2547 :         _My_data._Myres  = _New_capacity;

  00157	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  0015c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  00161	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx
$LN1@Construct_:

; 2548 :     }

  00165	48 8b cc	 mov	 rcx, rsp
  00168	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcFrameData
  0016f	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00174	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0017b	5f		 pop	 rdi
  0017c	c3		 ret	 0
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
__formal$ = 64
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents, COMDAT

; 2484 :     void _Take_contents(basic_string& _Right, true_type) noexcept {

$LN5:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2485 :         // assign by stealing _Right's buffer, memcpy optimization
; 2486 :         // pre: this != &_Right
; 2487 :         // pre: allocator propagation (POCMA) from _Right, if necessary, is complete
; 2488 :         // pre: *this owns no memory, iterators orphaned (note:
; 2489 :         // _Buf/_Ptr/_Mysize/_Myres may be garbage init)
; 2490 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2491 :         if (_Right._Mypair._Myval2._Large_string_engaged()) {

  00028	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00035	90		 npad	 1
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	74 12		 je	 SHORT $LN2@Take_conte

; 2492 :             // take ownership of _Right's iterators along with its buffer
; 2493 :             _Swap_proxy_and_iterators(_Right);

  0003d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00042	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00047	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
  0004c	90		 npad	 1

; 2494 :         } else {

  0004d	eb 0e		 jmp	 SHORT $LN3@Take_conte
$LN2@Take_conte:

; 2495 :             _Right._Mypair._Myval2._Orphan_all();

  0004f	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1
$LN3@Take_conte:

; 2496 :         }
; 2497 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2498 : 
; 2499 :         _Memcpy_val_from(_Right);

  0005d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00062	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00067	e8 00 00 00 00	 call	 ?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
  0006c	90		 npad	 1

; 2500 :         _Right._Tidy_init();

  0006d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00072	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
  00077	90		 npad	 1

; 2501 :     }

  00078	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007c	5f		 pop	 rdi
  0007d	c3		 ret	 0
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
_TEXT	SEGMENT
_My_data_mem$ = 32
_Right_data_mem$ = 40
this$ = 64
_Right$ = 72
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from, COMDAT

; 2475 :     void _Memcpy_val_from(const basic_string& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2476 :         _STL_INTERNAL_CHECK(_Can_memcpy_val); // TRANSITION, if constexpr
; 2477 :         const auto _My_data_mem =

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
  00030	90		 npad	 1
  00031	48 83 c0 08	 add	 rax, 8
  00035	48 89 44 24 20	 mov	 QWORD PTR _My_data_mem$[rsp], rax

; 2478 :             reinterpret_cast<unsigned char*>(_STD addressof(_Mypair._Myval2)) + _Memcpy_val_offset;
; 2479 :         const auto _Right_data_mem =

  0003a	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
  00047	90		 npad	 1
  00048	48 83 c0 08	 add	 rax, 8
  0004c	48 89 44 24 28	 mov	 QWORD PTR _Right_data_mem$[rsp], rax

; 2480 :             reinterpret_cast<const unsigned char*>(_STD addressof(_Right._Mypair._Myval2)) + _Memcpy_val_offset;
; 2481 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00051	41 b8 20 00 00
	00		 mov	 r8d, 32			; 00000020H
  00057	48 8b 54 24 28	 mov	 rdx, QWORD PTR _Right_data_mem$[rsp]
  0005c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data_mem$[rsp]
  00061	e8 00 00 00 00	 call	 memcpy
  00066	90		 npad	 1

; 2482 :     }

  00067	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Right$ = 72
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT

; 2460 :         _NOEXCEPT_COND(noexcept(_Move_assign(_Right, _Choose_pocma<_Alty>{}))) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2461 :         if (this != _STD addressof(_Right)) {

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0002d	48 39 44 24 40	 cmp	 QWORD PTR this$[rsp], rax
  00032	74 26		 je	 SHORT $LN2@operator

; 2462 :             _Move_assign(_Right, _Choose_pocma<_Alty>{});

  00034	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00039	48 8b f8	 mov	 rdi, rax
  0003c	33 c0		 xor	 eax, eax
  0003e	b9 01 00 00 00	 mov	 ecx, 1
  00043	f3 aa		 rep stosb
  00045	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR $T1[rsp]
  0004b	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00050	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00055	e8 00 00 00 00	 call	 ?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign
$LN2@operator:

; 2463 :         }
; 2464 : 
; 2465 :         return *this;

  0005a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]

; 2466 :     }

  0005f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z
_TEXT	SEGMENT
$T1 = 32
tv66 = 40
this$ = 64
_Right$ = 72
__formal$ = 80
?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign, COMDAT

; 2431 :     void _Move_assign(basic_string& _Right, _Equal_allocators) noexcept {

$LN3:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2432 :         _Tidy_deallocate();

  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate

; 2433 :         _Pocma(_Getal(), _Right._Getal());

  00032	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00037	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0003c	48 89 44 24 28	 mov	 QWORD PTR tv66[rsp], rax
  00041	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00046	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0004b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv66[rsp]
  00050	48 8b d1	 mov	 rdx, rcx
  00053	48 8b c8	 mov	 rcx, rax
  00056	e8 00 00 00 00	 call	 ??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >

; 2434 :         _Take_contents(_Right, bool_constant<_Can_memcpy_val>{});

  0005b	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00060	48 8b f8	 mov	 rdi, rax
  00063	33 c0		 xor	 eax, eax
  00065	b9 01 00 00 00	 mov	 ecx, 1
  0006a	f3 aa		 rep stosb
  0006c	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR $T1[rsp]
  00072	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00077	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0007c	e8 00 00 00 00	 call	 ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents

; 2435 :     }

  00081	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00085	5f		 pop	 rdi
  00086	c3		 ret	 0
?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2383 :     basic_string(basic_string&& _Right) noexcept : _Mypair(_One_then_variadic_args_t(), _STD move(_Right._Getal())) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0002d	90		 npad	 1
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>
  00036	90		 npad	 1
  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	4c 8b c0	 mov	 r8, rax
  0003f	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
  00049	90		 npad	 1

; 2384 :         // construct by moving _Right
; 2385 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00054	90		 npad	 1
  00055	48 8b d0	 mov	 rdx, rax
  00058	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  0005d	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00062	90		 npad	 1
  00063	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00068	48 8b d0	 mov	 rdx, rax
  0006b	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00070	90		 npad	 1

; 2386 :         _Take_contents(_Right, bool_constant<_Can_memcpy_val>{});

  00071	48 8d 44 24 22	 lea	 rax, QWORD PTR $T3[rsp]
  00076	48 8b f8	 mov	 rdi, rax
  00079	33 c0		 xor	 eax, eax
  0007b	b9 01 00 00 00	 mov	 ecx, 1
  00080	f3 aa		 rep stosb
  00082	44 0f b6 44 24
	22		 movzx	 r8d, BYTE PTR $T3[rsp]
  00088	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  0008d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00092	e8 00 00 00 00	 call	 ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
  00097	90		 npad	 1

; 2387 :     }

  00098	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0009d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a1	5f		 pop	 rdi
  000a2	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S18$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2297 :     basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t()) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  00029	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00031	0f b6 54 24 74	 movzx	 edx, BYTE PTR $T5[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
  0003e	90		 npad	 1

; 2298 :         // construct from [_Ptr, <null>)
; 2299 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  0003f	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00047	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0004c	48 8b d0	 mov	 rdx, rax
  0004f	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S18$[rsp]
  00054	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00059	48 8d 44 24 34	 lea	 rax, QWORD PTR $S18$[rsp]
  0005e	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 2300 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0006b	4c 8b c0	 mov	 r8, rax
  0006e	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  00073	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  00078	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0007d	90		 npad	 1

; 2301 :         _Tidy_init();

  0007e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00086	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2302 :         assign(_Ptr);

  0008b	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00093	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0009b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2303 :         _Proxy._Release();

  000a0	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000a5	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000aa	90		 npad	 1

; 2304 :     }

  000ab	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000b0	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000b5	90		 npad	 1
  000b6	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000be	48 8b f8	 mov	 rdi, rax
  000c1	48 8b cc	 mov	 rcx, rsp
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcFrameData
  000cb	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d0	48 8b c7	 mov	 rax, rdi
  000d3	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  000da	5f		 pop	 rdi
  000db	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S18$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S18$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S18$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S18$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S20$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Right$ = 152
_Roff$ = 160
_Count$ = 168
_Al$ = 176
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2268 :     basic_string(

$LN5:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 2269 :         const basic_string& _Right, const size_type _Roff, const size_type _Count, const _Alloc& _Al = _Alloc())
; 2270 :         : _Mypair(_One_then_variadic_args_t(), _Al) { // construct from _Right [_Roff, _Roff + _Count)

  00033	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003b	4c 8b 84 24 b0
	00 00 00	 mov	 r8, QWORD PTR _Al$[rsp]
  00043	0f b6 54 24 74	 movzx	 edx, BYTE PTR $T5[rsp]
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
  00050	90		 npad	 1

; 2271 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00051	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00059	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0005e	48 8b d0	 mov	 rdx, rax
  00061	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S20$[rsp]
  00066	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  0006b	48 8d 44 24 34	 lea	 rax, QWORD PTR $S20$[rsp]
  00070	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 2272 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  00075	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0007d	4c 8b c0	 mov	 r8, rax
  00080	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  00085	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  0008a	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0008f	90		 npad	 1

; 2273 :         _Tidy_init();

  00090	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00098	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2274 :         assign(_Right, _Roff, _Count);

  0009d	4c 8b 8c 24 a8
	00 00 00	 mov	 r9, QWORD PTR _Count$[rsp]
  000a5	4c 8b 84 24 a0
	00 00 00	 mov	 r8, QWORD PTR _Roff$[rsp]
  000ad	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Right$[rsp]
  000b5	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000bd	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2275 :         _Proxy._Release();

  000c2	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000c7	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000cc	90		 npad	 1

; 2276 :     }

  000cd	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000d2	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000d7	90		 npad	 1
  000d8	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000e0	48 8b f8	 mov	 rdi, rax
  000e3	48 8b cc	 mov	 rcx, rsp
  000e6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z$rtcFrameData
  000ed	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000f2	48 8b c7	 mov	 rax, rdi
  000f5	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  000fc	5f		 pop	 rdi
  000fd	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S20$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Right$ = 152
_Roff$ = 160
_Count$ = 168
_Al$ = 176
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S20$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Right$ = 152
_Roff$ = 160
_Count$ = 168
_Al$ = 176
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S20$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Right$ = 152
_Roff$ = 160
_Count$ = 168
_Al$ = 176
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S20$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Right$ = 152
_Roff$ = 160
_Count$ = 168
_Al$ = 176
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2247 :     basic_string() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t()) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
  00030	90		 npad	 1

; 2248 :         // construct empty string
; 2249 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 2250 :         _Tidy_init();

  00058	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0005d	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
  00062	90		 npad	 1

; 2251 :     }

  00063	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00068	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006c	5f		 pop	 rdi
  0006d	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S21$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 117
this$ = 144
_Right$ = 152
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2230 :     basic_string(const basic_string& _Right)

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 2231 :         : _Mypair(_One_then_variadic_args_t(), _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

  00029	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Right$[rsp]
  00031	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00036	48 8b d0	 mov	 rdx, rax
  00039	48 8d 4c 24 74	 lea	 rcx, QWORD PTR $T5[rsp]
  0003e	e8 00 00 00 00	 call	 ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
  00043	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	4c 8b c0	 mov	 r8, rax
  0004e	0f b6 54 24 75	 movzx	 edx, BYTE PTR $T6[rsp]
  00053	e8 00 00 00 00	 call	 ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
  00058	90		 npad	 1

; 2232 :         // construct by copying _Right
; 2233 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00059	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00061	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00066	48 8b d0	 mov	 rdx, rax
  00069	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S21$[rsp]
  0006e	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00073	48 8d 44 24 34	 lea	 rax, QWORD PTR $S21$[rsp]
  00078	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 2234 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  0007d	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00085	4c 8b c0	 mov	 r8, rax
  00088	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  0008d	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  00092	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00097	90		 npad	 1

; 2235 :         _Construct_lv_contents(_Right);

  00098	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Right$[rsp]
  000a0	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000a8	e8 00 00 00 00	 call	 ?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents

; 2236 :         _Proxy._Release();

  000ad	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000b2	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000b7	90		 npad	 1

; 2237 :     }

  000b8	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000bd	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000c2	90		 npad	 1
  000c3	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000cb	48 8b f8	 mov	 rdi, rax
  000ce	48 8b cc	 mov	 rcx, rsp
  000d1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcFrameData
  000d8	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000dd	48 8b c7	 mov	 rax, rdi
  000e0	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  000e7	5f		 pop	 rdi
  000e8	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S21$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 117
this$ = 144
_Right$ = 152
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S21$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 117
this$ = 144
_Right$ = 152
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S21$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 117
this$ = 144
_Right$ = 152
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S21$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 117
this$ = 144
_Right$ = 152
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  0002f	90		 npad	 1
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT

; 2148 :         ~_Bxty() noexcept {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT

; 2146 :         _Bxty() {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Off$ = 72
_Size$ = 80
?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z PROC ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size, COMDAT

; 2140 :     size_type _Clamp_suffix_size(const size_type _Off, const size_type _Size) const noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2141 :         // trims _Size to the longest it can be assuming a string at/after _Off
; 2142 :         return _Min_value(_Size, _Mysize - _Off);

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Off$[rsp]
  00032	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00036	48 2b c1	 sub	 rax, rcx
  00039	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003e	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00043	48 8d 4c 24 50	 lea	 rcx, QWORD PTR _Size$[rsp]
  00048	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004d	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 2143 :     }

  00050	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z ENDP ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
_TEXT	SEGMENT
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Xran, COMDAT

; 2136 :     [[noreturn]] static void _Xran() { // report an out_of_range error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 2137 :         _Xout_of_range("invalid string position");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position@
  0001c	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
$LN2@Xran:

; 2138 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z PROC ; std::_String_val<std::_Simple_types<char> >::_Check_offset, COMDAT

; 2124 :     void _Check_offset(const size_type _Off) const { // checks whether _Off is in the bounds of [0, size()]

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2125 :         if (_Mysize < _Off) {

  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Off$[rsp]
  0002d	48 39 48 18	 cmp	 QWORD PTR [rax+24], rcx
  00031	73 05		 jae	 SHORT $LN2@Check_offs

; 2126 :             _Xran();

  00033	e8 00 00 00 00	 call	 ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
$LN2@Check_offs:
$LN3@Check_offs:

; 2127 :         }
; 2128 :     }

  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ENDP ; std::_String_val<std::_Simple_types<char> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv66 = 0
this$ = 32
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT

; 2120 :     bool _Large_string_engaged() const { // returns whether the large string mode (allocated memory) is engaged

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 2121 :         return _BUF_SIZE <= _Myres;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 20 10	 cmp	 QWORD PTR [rax+32], 16
  00028	72 09		 jb	 SHORT $LN3@Large_stri
  0002a	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv66[rsp], 1
  00031	eb 07		 jmp	 SHORT $LN4@Large_stri
$LN3@Large_stri:
  00033	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv66[rsp], 0
$LN4@Large_stri:
  0003a	0f b6 04 24	 movzx	 eax, BYTE PTR tv66[rsp]

; 2122 :     }

  0003e	48 83 c4 10	 add	 rsp, 16
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
_Result$ = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2111 :     const value_type* _Myptr() const { // determine current pointer to buffer for immutable string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2112 :         const value_type* _Result = _Bx._Buf;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax

; 2113 :         if (_Large_string_engaged()) {

  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00031	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	74 13		 je	 SHORT $LN2@Myptr

; 2114 :             _Result = _Unfancy(_Bx._Ptr);

  0003d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00046	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  0004b	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax
$LN2@Myptr:

; 2115 :         }
; 2116 : 
; 2117 :         return _Result;

  00050	48 8b 44 24 20	 mov	 rax, QWORD PTR _Result$[rsp]

; 2118 :     }

  00055	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
_Result$ = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2102 :     value_type* _Myptr() { // determine current pointer to buffer for mutable string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2103 :         value_type* _Result = _Bx._Buf;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax

; 2104 :         if (_Large_string_engaged()) {

  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00031	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	74 13		 je	 SHORT $LN2@Myptr

; 2105 :             _Result = _Unfancy(_Bx._Ptr);

  0003d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00046	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  0004b	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax
$LN2@Myptr:

; 2106 :         }
; 2107 : 
; 2108 :         return _Result;

  00050	48 8b 44 24 20	 mov	 rax, QWORD PTR _Result$[rsp]

; 2109 :     }

  00055	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT

; 2092 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
  00039	90		 npad	 1
  0003a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 c7 40 20 00
	00 00 00	 mov	 QWORD PTR [rax+32], 0
  00054	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 16
_Al$ = 24
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction, COMDAT

; 770  :     _NODISCARD static _Alloc select_on_container_copy_construction(const _Alloc& _Al) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 771  :         return _Al;

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 772  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1

; 768  :     }

  0000d	5f		 pop	 rdi
  0000e	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z PROC		; std::allocator<char>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$00@std@@YA_K_K@Z ; std::_Get_size_of_n<1>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z PROC	; std::allocator<char>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Count$[rsp]
  0002d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ENDP	; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@D@std@@QEAA@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@D@std@@QEAA@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 16
_Right$ = 24
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z PROC ; std::_Narrow_char_traits<char,int>::assign, COMDAT

; 377  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept { // assign an element

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 378  :         _Left = _Right;

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR _Left$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Right$[rsp]
  00015	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  00018	88 08		 mov	 BYTE PTR [rax], cl

; 379  :     }

  0001a	5f		 pop	 rdi
  0001b	c3		 ret	 0
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ENDP ; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC ; std::_Narrow_char_traits<char,int>::move, COMDAT

; 366  :         const size_t _Count) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 367  :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 368  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Count$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _First2$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First1$[rsp]
  00037	e8 00 00 00 00	 call	 memmove
  0003c	90		 npad	 1

; 369  :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP ; std::_Narrow_char_traits<char,int>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?find@?$_Narrow_char_traits@DH@std@@SAPEBDQEBD_KAEBD@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
_Ch$ = 64
?find@?$_Narrow_char_traits@DH@std@@SAPEBDQEBD_KAEBD@Z PROC ; std::_Narrow_char_traits<char,int>::find, COMDAT

; 345  :         _In_reads_(_Count) const _Elem* const _First, const size_t _Count, const _Elem& _Ch) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 346  :         // look for _Ch in [_First, _First + _Count)
; 347  : #if _HAS_CXX17
; 348  : #if _HAS_CHAR8_T
; 349  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 350  : #if _HAS_U8_INTRINSICS
; 351  :             return __builtin_u8memchr(_First, _Ch, _Count);
; 352  : #else // ^^^ use u8 intrinsics / no u8 intrinsics vvv
; 353  :             return _Char_traits<_Elem, _Int_type>::find(_First, _Count, _Ch);
; 354  : #endif // _HAS_U8_INTRINSICS
; 355  :         } else
; 356  : #endif // _HAS_CHAR8_T
; 357  :         {
; 358  :             return __builtin_char_memchr(_First, _Ch, _Count);
; 359  :         }
; 360  : #else // _HAS_CXX17
; 361  :         return static_cast<const _Elem*>(_CSTD memchr(_First, _Ch, _Count));

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR _Ch$[rsp]
  0002d	0f be 00	 movsx	 eax, BYTE PTR [rax]
  00030	4c 8b 44 24 38	 mov	 r8, QWORD PTR _Count$[rsp]
  00035	8b d0		 mov	 edx, eax
  00037	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  0003c	e8 00 00 00 00	 call	 memchr
  00041	90		 npad	 1

; 362  : #endif // _HAS_CXX17
; 363  :     }

  00042	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00046	5f		 pop	 rdi
  00047	c3		 ret	 0
?find@?$_Narrow_char_traits@DH@std@@SAPEBDQEBD_KAEBD@Z ENDP ; std::_Narrow_char_traits<char,int>::find
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC ; std::_Narrow_char_traits<char,int>::copy, COMDAT

; 331  :         const size_t _Count) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 332  :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 333  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Count$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _First2$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First1$[rsp]
  00037	e8 00 00 00 00	 call	 memcpy
  0003c	90		 npad	 1

; 334  :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP ; std::_Narrow_char_traits<char,int>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
_TEXT	SEGMENT
_First$ = 48
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT

; 310  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* const _First) noexcept { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 311  :         // find length of null-terminated string
; 312  : #if _HAS_CXX17
; 313  : #if _HAS_CHAR8_T
; 314  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 315  : #if _HAS_U8_INTRINSICS
; 316  :             return __builtin_u8strlen(_First);
; 317  : #else // ^^^ use u8 intrinsics / no u8 intrinsics vvv
; 318  :             return _Char_traits<_Elem, _Int_type>::length(_First);
; 319  : #endif // _HAS_U8_INTRINSICS
; 320  :         } else
; 321  : #endif // _HAS_CHAR8_T
; 322  :         {
; 323  :             return __builtin_strlen(_First);
; 324  :         }
; 325  : #else // _HAS_CXX17
; 326  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00023	e8 00 00 00 00	 call	 strlen
  00028	90		 npad	 1

; 327  : #endif // _HAS_CXX17
; 328  :     }

  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z PROC ; std::_Narrow_char_traits<char,int>::compare, COMDAT

; 294  :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 295  :         // compare [_First1, _First1 + _Count) with [_First2, ...)
; 296  : #if _HAS_CXX17
; 297  : #if _HAS_U8_INTRINSICS
; 298  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 299  :             return __builtin_u8memcmp(_First1, _First2, _Count);
; 300  :         } else
; 301  : #endif // _HAS_U8_INTRINSICS
; 302  :         {
; 303  :             return __builtin_memcmp(_First1, _First2, _Count);
; 304  :         }
; 305  : #else // _HAS_CXX17
; 306  :         return _CSTD memcmp(_First1, _First2, _Count);

  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Count$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _First2$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First1$[rsp]
  00037	e8 00 00 00 00	 call	 memcmp
  0003c	90		 npad	 1

; 307  : #endif // _HAS_CXX17
; 308  :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z ENDP ; std::_Narrow_char_traits<char,int>::compare
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z
_TEXT	SEGMENT
_Left$ = 16
_Right$ = 24
?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z PROC	; std::_WChar_traits<wchar_t>::assign, COMDAT

; 211  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept { // assign an element

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 212  :         _Left = _Right;

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR _Left$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Right$[rsp]
  00015	0f b7 09	 movzx	 ecx, WORD PTR [rcx]
  00018	66 89 08	 mov	 WORD PTR [rax], cx

; 213  :     }

  0001b	5f		 pop	 rdi
  0001c	c3		 ret	 0
?assign@?$_WChar_traits@_W@std@@SAXAEA_WAEB_W@Z ENDP	; std::_WChar_traits<wchar_t>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?move@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?move@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z PROC ; std::_WChar_traits<wchar_t>::move, COMDAT

; 199  :         const size_t _Count) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 200  :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 201  :         return reinterpret_cast<_Elem*>(

  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Count$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _First2$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First1$[rsp]
  00037	e8 00 00 00 00	 call	 wmemmove
  0003c	90		 npad	 1

; 202  :             _CSTD wmemmove(reinterpret_cast<wchar_t*>(_First1), reinterpret_cast<const wchar_t*>(_First2), _Count));
; 203  :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?move@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z ENDP ; std::_WChar_traits<wchar_t>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?find@?$_WChar_traits@_W@std@@SAPEB_WPEB_W_KAEB_W@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
_Ch$ = 64
?find@?$_WChar_traits@_W@std@@SAPEB_WPEB_W_KAEB_W@Z PROC ; std::_WChar_traits<wchar_t>::find, COMDAT

; 185  :         _In_reads_(_Count) const _Elem* _First, const size_t _Count, const _Elem& _Ch) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 186  :         // look for _Ch in [_First, _First + _Count)
; 187  : #if _HAS_CXX17
; 188  :         if constexpr (is_same_v<_Elem, wchar_t>) {
; 189  :             return __builtin_wmemchr(_First, _Ch, _Count);
; 190  :         } else {
; 191  :             return _Char_traits<_Elem, unsigned short>::find(_First, _Count, _Ch);
; 192  :         }
; 193  : #else // _HAS_CXX17
; 194  :         return reinterpret_cast<const _Elem*>(_CSTD wmemchr(reinterpret_cast<const wchar_t*>(_First), _Ch, _Count));

  00028	4c 8b 44 24 38	 mov	 r8, QWORD PTR _Count$[rsp]
  0002d	48 8b 44 24 40	 mov	 rax, QWORD PTR _Ch$[rsp]
  00032	0f b7 10	 movzx	 edx, WORD PTR [rax]
  00035	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  0003a	e8 00 00 00 00	 call	 wmemchr
  0003f	90		 npad	 1

; 195  : #endif // _HAS_CXX17
; 196  :     }

  00040	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00044	5f		 pop	 rdi
  00045	c3		 ret	 0
?find@?$_WChar_traits@_W@std@@SAPEB_WPEB_W_KAEB_W@Z ENDP ; std::_WChar_traits<wchar_t>::find
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?copy@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?copy@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z PROC ; std::_WChar_traits<wchar_t>::copy, COMDAT

; 170  :         const size_t _Count) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 171  :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 172  :         return reinterpret_cast<_Elem*>(

  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Count$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _First2$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First1$[rsp]
  00037	e8 00 00 00 00	 call	 wmemcpy
  0003c	90		 npad	 1

; 173  :             _CSTD wmemcpy(reinterpret_cast<wchar_t*>(_First1), reinterpret_cast<const wchar_t*>(_First2), _Count));
; 174  :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?copy@?$_WChar_traits@_W@std@@SAPEA_WQEA_WQEB_W_K@Z ENDP ; std::_WChar_traits<wchar_t>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?length@?$_WChar_traits@_W@std@@SA_KPEB_W@Z
_TEXT	SEGMENT
_First$ = 48
?length@?$_WChar_traits@_W@std@@SA_KPEB_W@Z PROC	; std::_WChar_traits<wchar_t>::length, COMDAT

; 156  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* _First) noexcept { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 157  :         // find length of null-terminated sequence
; 158  : #if _HAS_CXX17
; 159  :         if constexpr (is_same_v<_Elem, wchar_t>) {
; 160  :             return __builtin_wcslen(_First);
; 161  :         } else {
; 162  :             return _Char_traits<_Elem, unsigned short>::length(_First);
; 163  :         }
; 164  : #else // _HAS_CXX17
; 165  :         return _CSTD wcslen(reinterpret_cast<const wchar_t*>(_First));

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00023	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_wcslen
  00029	90		 npad	 1

; 166  : #endif // _HAS_CXX17
; 167  :     }

  0002a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002e	5f		 pop	 rdi
  0002f	c3		 ret	 0
?length@?$_WChar_traits@_W@std@@SA_KPEB_W@Z ENDP	; std::_WChar_traits<wchar_t>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?compare@?$_WChar_traits@_W@std@@SAHQEB_W0_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?compare@?$_WChar_traits@_W@std@@SAHQEB_W0_K@Z PROC	; std::_WChar_traits<wchar_t>::compare, COMDAT

; 142  :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 143  :         // compare [_First1, _First1 + _Count) with [_First2, ...)
; 144  : #if _HAS_CXX17
; 145  :         if constexpr (is_same_v<_Elem, wchar_t>) {
; 146  :             return __builtin_wmemcmp(_First1, _First2, _Count);
; 147  :         } else {
; 148  :             return _Char_traits<_Elem, unsigned short>::compare(_First1, _First2, _Count);
; 149  :         }
; 150  : #else // _HAS_CXX17
; 151  :         return _CSTD wmemcmp(

  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Count$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _First2$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First1$[rsp]
  00037	e8 00 00 00 00	 call	 wmemcmp
  0003c	90		 npad	 1

; 152  :             reinterpret_cast<const wchar_t*>(_First1), reinterpret_cast<const wchar_t*>(_First2), _Count);
; 153  : #endif // _HAS_CXX17
; 154  :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?compare@?$_WChar_traits@_W@std@@SAHQEB_W0_K@Z ENDP	; std::_WChar_traits<wchar_t>::compare
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ PROC ; std::_Basic_container_proxy_ptr12::_Release, COMDAT

; 1348 :     void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1349 :         _Ptr = nullptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1350 :     }

  00012	5f		 pop	 rdi
  00013	c3		 ret	 0
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ENDP ; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Pnext$1 = 48
this$ = 80
?_Orphan_me@_Iterator_base12@std@@QEAAXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT

; 1267 :     void _Orphan_me() noexcept {

$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1268 :         if (_Myproxy) { // adopted, remove self from list

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	0f 84 db 00 00
	00		 je	 $LN10@Orphan_me

; 1269 :             _Iterator_base12** _Pnext = &_Myproxy->_Myfirstiter;

  0002d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00035	48 83 c0 08	 add	 rax, 8
  00039	48 89 44 24 30	 mov	 QWORD PTR _Pnext$1[rsp], rax
$LN2@Orphan_me:

; 1270 :             while (*_Pnext && *_Pnext != this) {

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pnext$1[rsp]
  00043	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00047	74 22		 je	 SHORT $LN6@Orphan_me
  00049	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pnext$1[rsp]
  0004e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00053	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00056	74 13		 je	 SHORT $LN6@Orphan_me

; 1271 :                 _Pnext = &(*_Pnext)->_Mynextiter;

  00058	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pnext$1[rsp]
  0005d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00060	48 83 c0 08	 add	 rax, 8
  00064	48 89 44 24 30	 mov	 QWORD PTR _Pnext$1[rsp], rax

; 1272 :             }

  00069	eb d3		 jmp	 SHORT $LN2@Orphan_me
$LN6@Orphan_me:

; 1273 : 
; 1274 :             _STL_VERIFY(*_Pnext, "ITERATOR LIST CORRUPTED!");

  0006b	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pnext$1[rsp]
  00070	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00074	74 02		 je	 SHORT $LN9@Orphan_me
  00076	eb 6d		 jmp	 SHORT $LN12@Orphan_me
$LN9@Orphan_me:
  00078	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
  0007f	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00084	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0008b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00090	45 33 c9	 xor	 r9d, r9d
  00093	41 b8 fa 04 00
	00		 mov	 r8d, 1274		; 000004faH
  00099	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000a0	b9 02 00 00 00	 mov	 ecx, 2
  000a5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000ab	90		 npad	 1
  000ac	83 f8 01	 cmp	 eax, 1
  000af	75 03		 jne	 SHORT $LN14@Orphan_me
  000b1	cc		 int	 3
  000b2	33 c0		 xor	 eax, eax
$LN14@Orphan_me:
  000b4	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000bd	41 b9 fa 04 00
	00		 mov	 r9d, 1274		; 000004faH
  000c3	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000ca	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@
  000d1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
  000d8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000de	90		 npad	 1
  000df	33 c0		 xor	 eax, eax
  000e1	85 c0		 test	 eax, eax
  000e3	75 93		 jne	 SHORT $LN9@Orphan_me
$LN12@Orphan_me:
  000e5	33 c0		 xor	 eax, eax
  000e7	85 c0		 test	 eax, eax
  000e9	75 80		 jne	 SHORT $LN6@Orphan_me

; 1275 :             *_Pnext  = _Mynextiter;

  000eb	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pnext$1[rsp]
  000f0	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000f5	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000f9	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1276 :             _Myproxy = nullptr;

  000fc	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00101	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN10@Orphan_me:

; 1277 :         }
; 1278 :     }

  00108	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0010c	5f		 pop	 rdi
  0010d	c3		 ret	 0
?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = 0
this$ = 32
?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT

; 1262 :     const _Container_base12* _Getcont() const noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1263 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 11		 je	 SHORT $LN3@Getcont
  00029	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00031	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00034	48 89 04 24	 mov	 QWORD PTR tv68[rsp], rax
  00038	eb 08		 jmp	 SHORT $LN4@Getcont
$LN3@Getcont:
  0003a	48 c7 04 24 00
	00 00 00	 mov	 QWORD PTR tv68[rsp], 0
$LN4@Getcont:
  00042	48 8b 04 24	 mov	 rax, QWORD PTR tv68[rsp]

; 1264 :     }

  00046	48 83 c4 10	 add	 rsp, 16
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
_TEXT	SEGMENT
_Parent_proxy$5 = 32
_Lock$6 = 52
_Lock$7 = 84
this$ = 128
_Parent$ = 136
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT

; 1234 :     void _Adopt(const _Container_base12* _Parent) noexcept {

$LN8:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 1c 00 00 00	 mov	 ecx, 28
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]

; 1235 :         if (_Parent) {

  00026	48 83 bc 24 88
	00 00 00 00	 cmp	 QWORD PTR _Parent$[rsp], 0
  0002f	0f 84 85 00 00
	00		 je	 $LN2@Adopt

; 1236 :             // have a parent, do adoption
; 1237 :             _Container_proxy* _Parent_proxy = _Parent->_Myproxy;

  00035	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR _Parent$[rsp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 89 44 24 20	 mov	 QWORD PTR _Parent_proxy$5[rsp], rax

; 1238 : 
; 1239 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1240 :             if (_Myproxy != _Parent_proxy) { // change parentage

  00045	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0004d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Parent_proxy$5[rsp]
  00052	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00055	74 61		 je	 SHORT $LN4@Adopt

; 1241 :                 _Lockit _Lock(_LOCK_DEBUG);

  00057	ba 03 00 00 00	 mov	 edx, 3
  0005c	48 8d 4c 24 34	 lea	 rcx, QWORD PTR _Lock$6[rsp]
  00061	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00067	90		 npad	 1

; 1242 :                 _Orphan_me();

  00068	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00070	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
  00075	90		 npad	 1

; 1243 :                 _Mynextiter                 = _Parent_proxy->_Myfirstiter;

  00076	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0007e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Parent_proxy$5[rsp]
  00083	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00087	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1244 :                 _Parent_proxy->_Myfirstiter = this;

  0008b	48 8b 44 24 20	 mov	 rax, QWORD PTR _Parent_proxy$5[rsp]
  00090	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00098	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1245 :                 _Myproxy                    = _Parent_proxy;

  0009c	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000a4	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Parent_proxy$5[rsp]
  000a9	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1246 :             }

  000ac	48 8d 4c 24 34	 lea	 rcx, QWORD PTR _Lock$6[rsp]
  000b1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000b7	90		 npad	 1
$LN4@Adopt:

; 1247 : 
; 1248 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1249 :             _Myproxy = _Parent_proxy;
; 1250 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1251 :         } else {

  000b8	eb 2b		 jmp	 SHORT $LN3@Adopt
$LN2@Adopt:

; 1252 :             // no future parent, just disown current parent
; 1253 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1254 :             _Lockit _Lock(_LOCK_DEBUG);

  000ba	ba 03 00 00 00	 mov	 edx, 3
  000bf	48 8d 4c 24 54	 lea	 rcx, QWORD PTR _Lock$7[rsp]
  000c4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  000ca	90		 npad	 1

; 1255 :             _Orphan_me();

  000cb	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000d3	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
  000d8	90		 npad	 1

; 1256 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1257 :             _Myproxy = nullptr;
; 1258 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1259 :         }

  000d9	48 8d 4c 24 54	 lea	 rcx, QWORD PTR _Lock$7[rsp]
  000de	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000e4	90		 npad	 1
$LN3@Adopt:

; 1260 :     }

  000e5	48 8b cc	 mov	 rcx, rsp
  000e8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcFrameData
  000ef	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000f4	90		 npad	 1
  000f5	48 83 c4 70	 add	 rsp, 112		; 00000070H
  000f9	5f		 pop	 rdi
  000fa	c3		 ret	 0
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Parent_proxy$5 = 32
_Lock$6 = 52
_Lock$7 = 84
this$ = 128
_Parent$ = 136
?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA PROC ; `std::_Iterator_base12::_Adopt'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 34	 lea	 rcx, QWORD PTR _Lock$6[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA ENDP ; `std::_Iterator_base12::_Adopt'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Parent_proxy$5 = 32
_Lock$6 = 52
_Lock$7 = 84
this$ = 128
_Parent$ = 136
?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA PROC ; `std::_Iterator_base12::_Adopt'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 54	 lea	 rcx, QWORD PTR _Lock$7[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA ENDP ; `std::_Iterator_base12::_Adopt'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Parent_proxy$5 = 32
_Lock$6 = 52
_Lock$7 = 84
this$ = 128
_Parent$ = 136
?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA PROC ; `std::_Iterator_base12::_Adopt'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 34	 lea	 rcx, QWORD PTR _Lock$6[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA ENDP ; `std::_Iterator_base12::_Adopt'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Parent_proxy$5 = 32
_Lock$6 = 52
_Lock$7 = 84
this$ = 128
_Parent$ = 136
?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA PROC ; `std::_Iterator_base12::_Adopt'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 54	 lea	 rcx, QWORD PTR _Lock$7[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA ENDP ; `std::_Iterator_base12::_Adopt'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1_Iterator_base12@std@@QEAA@XZ
_TEXT	SEGMENT
_Lock$ = 36
this$ = 80
??1_Iterator_base12@std@@QEAA@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT

; 1227 :     ~_Iterator_base12() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1228 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1229 :         _Lockit _Lock(_LOCK_DEBUG);

  0001e	ba 03 00 00 00	 mov	 edx, 3
  00023	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00028	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  0002e	90		 npad	 1

; 1230 :         _Orphan_me();

  0002f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00034	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
  00039	90		 npad	 1

; 1231 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1232 :     }

  0003a	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  0003f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00045	90		 npad	 1
  00046	48 8b cc	 mov	 rcx, rsp
  00049	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1_Iterator_base12@std@@QEAA@XZ$rtcFrameData
  00050	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00055	90		 npad	 1
  00056	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??1_Iterator_base12@std@@QEAA@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
this$ = 80
?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA PROC	; `std::_Iterator_base12::~_Iterator_base12'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA ENDP	; `std::_Iterator_base12::~_Iterator_base12'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
this$ = 80
?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA PROC	; `std::_Iterator_base12::~_Iterator_base12'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA ENDP	; `std::_Iterator_base12::~_Iterator_base12'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
_TEXT	SEGMENT
_Lock$4 = 36
this$ = 80
_Right$ = 88
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z PROC	; std::_Iterator_base12::operator=, COMDAT

; 1210 :     _Iterator_base12& operator=(const _Iterator_base12& _Right) noexcept {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1211 :         if (_Myproxy != _Right._Myproxy) {

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	74 4b		 je	 SHORT $LN2@operator

; 1212 :             if (_Right._Myproxy) {

  00035	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0003e	74 18		 je	 SHORT $LN3@operator

; 1213 :                 _Adopt(_Right._Myproxy->_Mycont);

  00040	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  00045	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00048	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0004b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00050	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
  00055	90		 npad	 1

; 1214 :             } else { // becoming invalid, disown current parent

  00056	eb 28		 jmp	 SHORT $LN2@operator
$LN3@operator:

; 1215 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1216 :                 _Lockit _Lock(_LOCK_DEBUG);

  00058	ba 03 00 00 00	 mov	 edx, 3
  0005d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00068	90		 npad	 1

; 1217 :                 _Orphan_me();

  00069	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0006e	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
  00073	90		 npad	 1

; 1218 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1219 :                 _Myproxy = nullptr;
; 1220 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1221 :             }

  00074	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00079	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0007f	90		 npad	 1
$LN2@operator:

; 1222 :         }
; 1223 : 
; 1224 :         return *this;

  00080	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]

; 1225 :     }

  00085	48 8b f8	 mov	 rdi, rax
  00088	48 8b cc	 mov	 rcx, rsp
  0008b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcFrameData
  00092	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00097	90		 npad	 1
  00098	48 8b c7	 mov	 rax, rdi
  0009b	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0009f	5f		 pop	 rdi
  000a0	c3		 ret	 0
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z ENDP	; std::_Iterator_base12::operator=
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
this$ = 80
_Right$ = 88
?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA PROC ; `std::_Iterator_base12::operator='::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA ENDP ; `std::_Iterator_base12::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
this$ = 80
_Right$ = 88
?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA PROC ; `std::_Iterator_base12::operator='::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA ENDP ; `std::_Iterator_base12::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QEAA@AEBU01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0_Iterator_base12@std@@QEAA@AEBU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT

; 1206 :     _Iterator_base12(const _Iterator_base12& _Right) noexcept : _Myproxy(nullptr), _Mynextiter(nullptr) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1207 :         *this = _Right;

  0003c	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00046	e8 00 00 00 00	 call	 ??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z ; std::_Iterator_base12::operator=

; 1208 :     }

  0004b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
??0_Iterator_base12@std@@QEAA@AEBU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Iterator_base12@std@@QEAA@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT

; 1204 :     _Iterator_base12() noexcept : _Myproxy(nullptr), _Mynextiter(nullptr) {} // construct orphaned iterator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	5f		 pop	 rdi
  00025	c3		 ret	 0
??0_Iterator_base12@std@@QEAA@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
_TEXT	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators, COMDAT

; 1302 : inline void _Container_base12::_Swap_proxy_and_iterators(_Container_base12& _Right) noexcept {

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1303 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1304 :     _Lockit _Lock(_LOCK_DEBUG);

  00023	ba 03 00 00 00	 mov	 edx, 3
  00028	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  0002d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00033	90		 npad	 1

; 1305 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1306 : 
; 1307 :     _Container_proxy* _Temp = _Myproxy;

  00034	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	48 89 44 24 38	 mov	 QWORD PTR _Temp$[rsp], rax

; 1308 :     _Myproxy                = _Right._Myproxy;

  00041	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00046	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0004b	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004e	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1309 :     _Right._Myproxy         = _Temp;

  00051	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  00056	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Temp$[rsp]
  0005b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1310 : 
; 1311 :     if (_Myproxy) {

  0005e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00063	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00067	74 10		 je	 SHORT $LN2@Swap_proxy

; 1312 :         _Myproxy->_Mycont = this;

  00069	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00076	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN2@Swap_proxy:

; 1313 :     }
; 1314 : 
; 1315 :     if (_Right._Myproxy) {

  00079	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  0007e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00082	74 10		 je	 SHORT $LN3@Swap_proxy

; 1316 :         _Right._Myproxy->_Mycont = &_Right;

  00084	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  00089	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008c	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00091	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN3@Swap_proxy:

; 1317 :     }
; 1318 : }

  00094	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00099	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0009f	90		 npad	 1
  000a0	48 8b cc	 mov	 rcx, rsp
  000a3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcFrameData
  000aa	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000af	90		 npad	 1
  000b0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000b4	5f		 pop	 rdi
  000b5	c3		 ret	 0
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA PROC ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA ENDP ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA PROC ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA ENDP ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1288 : inline void _Container_base12::_Orphan_all() noexcept {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1289 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1290 :     if (_Myproxy) { // proxy allocated, drain it

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 70		 je	 SHORT $LN5@Orphan_all

; 1291 :         _Lockit _Lock(_LOCK_DEBUG);

  00029	ba 03 00 00 00	 mov	 edx, 3
  0002e	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00033	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00039	90		 npad	 1

; 1292 : 
; 1293 :         for (auto _Pnext = &_Myproxy->_Myfirstiter; *_Pnext; *_Pnext = (*_Pnext)->_Mynextiter) {

  0003a	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00042	48 83 c0 08	 add	 rax, 8
  00046	48 89 44 24 38	 mov	 QWORD PTR _Pnext$5[rsp], rax
  0004b	eb 14		 jmp	 SHORT $LN4@Orphan_all
$LN2@Orphan_all:
  0004d	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00052	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00055	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$5[rsp]
  0005a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0005e	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN4@Orphan_all:
  00061	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00066	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0006a	74 11		 je	 SHORT $LN3@Orphan_all

; 1294 :             (*_Pnext)->_Myproxy = nullptr;

  0006c	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00071	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00074	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1295 :         }

  0007b	eb d0		 jmp	 SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1296 : 
; 1297 :         _Myproxy->_Myfirstiter = nullptr;

  0007d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00082	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00085	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1298 :     }

  0008d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00092	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00098	90		 npad	 1
$LN5@Orphan_all:

; 1299 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1300 : }

  00099	48 8b cc	 mov	 rcx, rsp
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData
  000a3	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a8	90		 npad	 1
  000a9	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000ad	5f		 pop	 rdi
  000ae	c3		 ret	 0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1175 :     _Container_base12() : _Myproxy(nullptr) {} // construct childless container

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 16
_Mycont_$ = 24
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1167 :     _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_), _Myfirstiter(nullptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Mycont_$[rsp]
  00015	48 89 08	 mov	 QWORD PTR [rax], rcx
  00018	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00025	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002a	5f		 pop	 rdi
  0002b	c3		 ret	 0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Convert_size@_K@std@@YA_K_K@Z
_TEXT	SEGMENT
_Len$ = 16
??$_Convert_size@_K@std@@YA_K_K@Z PROC			; std::_Convert_size<unsigned __int64>, COMDAT

; 1073 : _NODISCARD constexpr size_t _Convert_size<size_t>(const size_t _Len) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1074 :     // convert size_t to size_t, unchanged
; 1075 :     return _Len;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Len$[rsp]

; 1076 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Convert_size@_K@std@@YA_K_K@Z ENDP			; std::_Convert_size<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 48
_Ptr_container$ = 56
_Min_back_shift$ = 64
_Back_shift$ = 72
_Ptr$ = 96
_Bytes$ = 104
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 102  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 103  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 104  :     _Bytes += _Non_user_size;

  00023	48 8b 44 24 68	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  0002f	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00034	48 89 01	 mov	 QWORD PTR [rcx], rax

; 105  : 
; 106  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

  00037	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0003c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Ptr_user$[rsp], rax

; 107  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00044	b8 08 00 00 00	 mov	 eax, 8
  00049	48 6b c0 ff	 imul	 rax, rax, -1
  0004d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr_user$[rsp]
  00052	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00056	48 89 44 24 38	 mov	 QWORD PTR _Ptr_container$[rsp], rax
$LN4@Adjust_man:

; 108  : 
; 109  :     // If the following asserts, it likely means that we are performing
; 110  :     // an aligned delete on memory coming from an unaligned allocation.
; 111  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

  0005b	b8 08 00 00 00	 mov	 eax, 8
  00060	48 6b c0 fe	 imul	 rax, rax, -2
  00064	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr_user$[rsp]
  00069	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  00073	48 39 14 01	 cmp	 QWORD PTR [rcx+rax], rdx
  00077	75 02		 jne	 SHORT $LN14@Adjust_man
  00079	eb 6b		 jmp	 SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
  0007b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00082	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00087	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0008e	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00093	45 33 c9	 xor	 r9d, r9d
  00096	41 b8 6f 00 00
	00		 mov	 r8d, 111		; 0000006fH
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000a3	b9 02 00 00 00	 mov	 ecx, 2
  000a8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000ae	83 f8 01	 cmp	 eax, 1
  000b1	75 03		 jne	 SHORT $LN19@Adjust_man
  000b3	cc		 int	 3
  000b4	33 c0		 xor	 eax, eax
$LN19@Adjust_man:
  000b6	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000bf	41 b9 6f 00 00
	00		 mov	 r9d, 111		; 0000006fH
  000c5	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000cc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  000d3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  000da	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000e0	33 c0		 xor	 eax, eax
  000e2	85 c0		 test	 eax, eax
  000e4	75 95		 jne	 SHORT $LN7@Adjust_man
$LN15@Adjust_man:
  000e6	33 c0		 xor	 eax, eax
  000e8	85 c0		 test	 eax, eax
  000ea	0f 85 6b ff ff
	ff		 jne	 $LN4@Adjust_man

; 112  : 
; 113  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 114  :     // in range [_Min_back_shift, _Non_user_size]
; 115  : #ifdef _DEBUG
; 116  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

  000f0	48 c7 44 24 40
	10 00 00 00	 mov	 QWORD PTR _Min_back_shift$[rsp], 16

; 117  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 118  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 119  : #endif // _DEBUG
; 120  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  000fe	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr_container$[rsp]
  00103	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00106	48 2b c1	 sub	 rax, rcx
  00109	48 89 44 24 48	 mov	 QWORD PTR _Back_shift$[rsp], rax
$LN10@Adjust_man:

; 121  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0010e	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Back_shift$[rsp], 16
  00114	72 0a		 jb	 SHORT $LN16@Adjust_man
  00116	48 83 7c 24 48
	2f		 cmp	 QWORD PTR _Back_shift$[rsp], 47 ; 0000002fH
  0011c	77 02		 ja	 SHORT $LN16@Adjust_man
  0011e	eb 6b		 jmp	 SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
  00120	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00127	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0012c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00133	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00138	45 33 c9	 xor	 r9d, r9d
  0013b	41 b8 79 00 00
	00		 mov	 r8d, 121		; 00000079H
  00141	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00148	b9 02 00 00 00	 mov	 ecx, 2
  0014d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00153	83 f8 01	 cmp	 eax, 1
  00156	75 03		 jne	 SHORT $LN20@Adjust_man
  00158	cc		 int	 3
  00159	33 c0		 xor	 eax, eax
$LN20@Adjust_man:
  0015b	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00164	41 b9 79 00 00
	00		 mov	 r9d, 121		; 00000079H
  0016a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00171	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  00178	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  0017f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00185	33 c0		 xor	 eax, eax
  00187	85 c0		 test	 eax, eax
  00189	75 95		 jne	 SHORT $LN13@Adjust_man
$LN17@Adjust_man:
  0018b	33 c0		 xor	 eax, eax
  0018d	85 c0		 test	 eax, eax
  0018f	0f 85 79 ff ff
	ff		 jne	 $LN10@Adjust_man

; 122  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00195	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0019a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr_container$[rsp]
  0019f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 123  : }

  001a2	48 83 c4 50	 add	 rsp, 80			; 00000050H
  001a6	5f		 pop	 rdi
  001a7	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 46   :     _DECLSPEC_ALLOCATOR static void* _Allocate(const size_t _Bytes) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 47   :         return ::operator new(_Bytes);

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00023	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 48   :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 10 00 00 00	 mov	 ecx, 16
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 324  :     _THROW(bad_array_new_length{});

  00015	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0001a	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QEAA@XZ ; std::bad_array_new_length::bad_array_new_length
  0001f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
  00026	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002b	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Throw_bad_:

; 325  : }

  00030	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_array_new_length@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QEAA@AEBV01@@Z
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 138  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 137  :         : bad_alloc("bad array new length")

  0001e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002a	e8 00 00 00 00	 call	 ??0bad_alloc@std@@AEAA@QEBD@Z ; std::bad_alloc::bad_alloc
  0002f	90		 npad	 1

; 138  :     {

  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 139  :     }

  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Message$ = 56
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 127  :     {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 126  :         : exception(_Message, 1)

  00023	41 b8 01 00 00
	00		 mov	 r8d, 1
  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Message$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00033	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBDH@Z ; std::exception::exception
  00038	90		 npad	 1

; 127  :     {

  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  00045	48 89 08	 mov	 QWORD PTR [rax], rcx

; 128  :     }

  00048	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00051	5f		 pop	 rdi
  00052	c3		 ret	 0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Message$ = 56
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Message$ = 56
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 0
this$ = 32
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 91   :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 92   :         return _Data._What ? _Data._What : "Unknown exception";

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 0f		 je	 SHORT $LN3@what
  0002a	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00033	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
  00037	eb 0b		 jmp	 SHORT $LN4@what
$LN3@what:
  00039	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  00040	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
$LN4@what:
  00044	48 8b 04 24	 mov	 rax, QWORD PTR tv69[rsp]

; 93   :     }

  00048	48 83 c4 10	 add	 rsp, 16
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 86   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 87   :         __std_exception_destroy(&_Data);

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 __std_exception_destroy
  0003e	90		 npad	 1

; 88   :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 69   :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 68   :         : _Data()

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c0 08	 add	 rax, 8
  0003b	48 8b f8	 mov	 rdi, rax
  0003e	33 c0		 xor	 eax, eax
  00040	b9 10 00 00 00	 mov	 ecx, 16
  00045	f3 aa		 rep stosb

; 70   :         __std_exception_copy(&_Other._Data, &_Data);

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 83 c0 08	 add	 rax, 8
  00050	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Other$[rsp]
  00055	48 83 c1 08	 add	 rcx, 8
  00059	48 8b d0	 mov	 rdx, rax
  0005c	e8 00 00 00 00	 call	 __std_exception_copy
  00061	90		 npad	 1

; 71   :     }

  00062	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00067	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 16
_Message$ = 24
__formal$ = 32
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 63   :     {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0001c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 62   :         : _Data()

  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	48 83 c0 08	 add	 rax, 8
  00028	48 8b f8	 mov	 rdi, rax
  0002b	33 c0		 xor	 eax, eax
  0002d	b9 10 00 00 00	 mov	 ecx, 16
  00032	f3 aa		 rep stosb

; 64   :         _Data._What = _Message;

  00034	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Message$[rsp]
  0003e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 65   :     }

  00042	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 644  :     _NODISCARD static constexpr long long(max)() noexcept { // return maximum value

$LN3:
  00000	40 57		 push	 rdi

; 645  :         return LLONG_MAX;

  00002	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 646  :     }

  0000c	5f		 pop	 rdi
  0000d	c3		 ret	 0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\wchar.h
;	COMDAT wmemmove
_TEXT	SEGMENT
_S1$ = 48
_S2$ = 56
_N$ = 64
wmemmove PROC						; COMDAT

; 243  :     {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 244  :         #pragma warning(push)
; 245  :         #pragma warning(disable : 4996 6386)
; 246  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR _N$[rsp]
  0002d	48 d1 e0	 shl	 rax, 1
  00030	4c 8b c0	 mov	 r8, rax
  00033	48 8b 54 24 38	 mov	 rdx, QWORD PTR _S2$[rsp]
  00038	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _S1$[rsp]
  0003d	e8 00 00 00 00	 call	 memmove

; 247  :         #pragma warning(pop)
; 248  :     }

  00042	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00046	5f		 pop	 rdi
  00047	c3		 ret	 0
wmemmove ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\wchar.h
;	COMDAT wmemcpy
_TEXT	SEGMENT
_S1$ = 48
_S2$ = 56
_N$ = 64
wmemcpy	PROC						; COMDAT

; 230  :     {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 231  :         #pragma warning(push)
; 232  :         #pragma warning(disable : 4995 4996 6386)
; 233  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR _N$[rsp]
  0002d	48 d1 e0	 shl	 rax, 1
  00030	4c 8b c0	 mov	 r8, rax
  00033	48 8b 54 24 38	 mov	 rdx, QWORD PTR _S2$[rsp]
  00038	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _S1$[rsp]
  0003d	e8 00 00 00 00	 call	 memcpy

; 234  :         #pragma warning(pop)
; 235  :     }

  00042	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00046	5f		 pop	 rdi
  00047	c3		 ret	 0
wmemcpy	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\wchar.h
;	COMDAT wmemcmp
_TEXT	SEGMENT
tv74 = 0
_S1$ = 32
_S2$ = 40
_N$ = 48
wmemcmp	PROC						; COMDAT

; 214  :     {

$LN9:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 10	 sub	 rsp, 16
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 04 00 00 00	 mov	 ecx, 4
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 215  :         for (; 0 < _N; ++_S1, ++_S2, --_N)

  00028	eb 29		 jmp	 SHORT $LN4@wmemcmp
$LN2@wmemcmp:
  0002a	48 8b 44 24 20	 mov	 rax, QWORD PTR _S1$[rsp]
  0002f	48 83 c0 02	 add	 rax, 2
  00033	48 89 44 24 20	 mov	 QWORD PTR _S1$[rsp], rax
  00038	48 8b 44 24 28	 mov	 rax, QWORD PTR _S2$[rsp]
  0003d	48 83 c0 02	 add	 rax, 2
  00041	48 89 44 24 28	 mov	 QWORD PTR _S2$[rsp], rax
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR _N$[rsp]
  0004b	48 ff c8	 dec	 rax
  0004e	48 89 44 24 30	 mov	 QWORD PTR _N$[rsp], rax
$LN4@wmemcmp:
  00053	48 83 7c 24 30
	00		 cmp	 QWORD PTR _N$[rsp], 0
  00059	76 3f		 jbe	 SHORT $LN3@wmemcmp

; 216  :             if (*_S1 != *_S2)

  0005b	48 8b 44 24 20	 mov	 rax, QWORD PTR _S1$[rsp]
  00060	0f b7 00	 movzx	 eax, WORD PTR [rax]
  00063	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _S2$[rsp]
  00068	0f b7 09	 movzx	 ecx, WORD PTR [rcx]
  0006b	3b c1		 cmp	 eax, ecx
  0006d	74 29		 je	 SHORT $LN5@wmemcmp

; 217  :                 return *_S1 < *_S2 ? -1 : 1;

  0006f	48 8b 44 24 20	 mov	 rax, QWORD PTR _S1$[rsp]
  00074	0f b7 00	 movzx	 eax, WORD PTR [rax]
  00077	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _S2$[rsp]
  0007c	0f b7 09	 movzx	 ecx, WORD PTR [rcx]
  0007f	3b c1		 cmp	 eax, ecx
  00081	7d 09		 jge	 SHORT $LN7@wmemcmp
  00083	c7 04 24 ff ff
	ff ff		 mov	 DWORD PTR tv74[rsp], -1
  0008a	eb 07		 jmp	 SHORT $LN8@wmemcmp
$LN7@wmemcmp:
  0008c	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv74[rsp], 1
$LN8@wmemcmp:
  00093	8b 04 24	 mov	 eax, DWORD PTR tv74[rsp]
  00096	eb 04		 jmp	 SHORT $LN1@wmemcmp
$LN5@wmemcmp:
  00098	eb 90		 jmp	 SHORT $LN2@wmemcmp
$LN3@wmemcmp:

; 218  : 
; 219  :         return 0;

  0009a	33 c0		 xor	 eax, eax
$LN1@wmemcmp:

; 220  :     }

  0009c	48 83 c4 10	 add	 rsp, 16
  000a0	5f		 pop	 rdi
  000a1	c3		 ret	 0
wmemcmp	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\wchar.h
;	COMDAT wmemchr
_TEXT	SEGMENT
_S$ = 16
_C$ = 24
_N$ = 32
wmemchr	PROC						; COMDAT

; 201  :     {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 202  :         for (; 0 < _N; ++_S, --_N)

  00010	eb 1b		 jmp	 SHORT $LN4@wmemchr
$LN2@wmemchr:
  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR _S$[rsp]
  00017	48 83 c0 02	 add	 rax, 2
  0001b	48 89 44 24 10	 mov	 QWORD PTR _S$[rsp], rax
  00020	48 8b 44 24 20	 mov	 rax, QWORD PTR _N$[rsp]
  00025	48 ff c8	 dec	 rax
  00028	48 89 44 24 20	 mov	 QWORD PTR _N$[rsp], rax
$LN4@wmemchr:
  0002d	48 83 7c 24 20
	00		 cmp	 QWORD PTR _N$[rsp], 0
  00033	76 1a		 jbe	 SHORT $LN3@wmemchr

; 203  :             if (*_S == _C)

  00035	48 8b 44 24 10	 mov	 rax, QWORD PTR _S$[rsp]
  0003a	0f b7 00	 movzx	 eax, WORD PTR [rax]
  0003d	0f b7 4c 24 18	 movzx	 ecx, WORD PTR _C$[rsp]
  00042	3b c1		 cmp	 eax, ecx
  00044	75 07		 jne	 SHORT $LN5@wmemchr

; 204  :                 return (wchar_t _CONST_RETURN*)_S;

  00046	48 8b 44 24 10	 mov	 rax, QWORD PTR _S$[rsp]
  0004b	eb 04		 jmp	 SHORT $LN1@wmemchr
$LN5@wmemchr:
  0004d	eb c3		 jmp	 SHORT $LN2@wmemchr
$LN3@wmemchr:

; 205  : 
; 206  :         return 0;

  0004f	33 c0		 xor	 eax, eax
$LN1@wmemchr:

; 207  :     }

  00051	5f		 pop	 rdi
  00052	c3		 ret	 0
wmemchr	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 16
_Where$ = 24
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 168  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 169  :         (void)_Size;
; 170  :         return _Where;

  0000b	48 8b 44 24 18	 mov	 rax, QWORD PTR _Where$[rsp]

; 171  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vscprintf
_TEXT	SEGMENT
_Format$ = 48
_ArgList$ = 56
_vscprintf PROC						; COMDAT

; 1675 :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1676 :         return _vscprintf_l(_Format, NULL, _ArgList);

  00023	4c 8b 44 24 38	 mov	 r8, QWORD PTR _ArgList$[rsp]
  00028	33 d2		 xor	 edx, edx
  0002a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Format$[rsp]
  0002f	e8 00 00 00 00	 call	 _vscprintf_l

; 1677 :     }

  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
_vscprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vscprintf_l
_TEXT	SEGMENT
_Result$ = 48
tv74 = 52
_Format$ = 80
_Locale$ = 88
_ArgList$ = 96
_vscprintf_l PROC					; COMDAT

; 1658 :     {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1659 :         int const _Result = __stdio_common_vsprintf(

  00028	e8 00 00 00 00	 call	 __local_stdio_printf_options
  0002d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00030	48 83 c8 02	 or	 rax, 2
  00034	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  00039	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  0003e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Locale$[rsp]
  00043	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00048	4c 8b 4c 24 50	 mov	 r9, QWORD PTR _Format$[rsp]
  0004d	45 33 c0	 xor	 r8d, r8d
  00050	33 d2		 xor	 edx, edx
  00052	48 8b c8	 mov	 rcx, rax
  00055	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___stdio_common_vsprintf
  0005b	89 44 24 30	 mov	 DWORD PTR _Result$[rsp], eax

; 1660 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1661 :             NULL, 0, _Format, _Locale, _ArgList);
; 1662 : 
; 1663 :         return _Result < 0 ? -1 : _Result;

  0005f	83 7c 24 30 00	 cmp	 DWORD PTR _Result$[rsp], 0
  00064	7d 0a		 jge	 SHORT $LN3@vscprintf_
  00066	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR tv74[rsp], -1
  0006e	eb 08		 jmp	 SHORT $LN4@vscprintf_
$LN3@vscprintf_:
  00070	8b 44 24 30	 mov	 eax, DWORD PTR _Result$[rsp]
  00074	89 44 24 34	 mov	 DWORD PTR tv74[rsp], eax
$LN4@vscprintf_:
  00078	8b 44 24 34	 mov	 eax, DWORD PTR tv74[rsp]

; 1664 :     }

  0007c	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00080	5f		 pop	 rdi
  00081	c3		 ret	 0
_vscprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT vsprintf
_TEXT	SEGMENT
_Buffer$ = 64
_Format$ = 72
_ArgList$ = 80
vsprintf PROC						; COMDAT

; 1477 :     {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1478 :         #pragma warning(push)
; 1479 :         #pragma warning(disable: 4996) // Deprecation
; 1480 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, NULL, _ArgList);

  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR _ArgList$[rsp]
  0002d	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00032	45 33 c9	 xor	 r9d, r9d
  00035	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Format$[rsp]
  0003a	48 c7 c2 ff ff
	ff ff		 mov	 rdx, -1
  00041	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Buffer$[rsp]
  00046	e8 00 00 00 00	 call	 _vsnprintf_l

; 1481 :         #pragma warning(pop)
; 1482 :     }

  0004b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
vsprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vsnprintf_l
_TEXT	SEGMENT
_Result$ = 48
tv74 = 52
_Buffer$ = 80
_BufferCount$ = 88
_Format$ = 96
_Locale$ = 104
_ArgList$ = 112
_vsnprintf_l PROC					; COMDAT

; 1389 :     {

$LN5:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1390 :         int const _Result = __stdio_common_vsprintf(

  0002d	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00032	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00035	48 83 c8 01	 or	 rax, 1
  00039	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  0003e	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00043	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Locale$[rsp]
  00048	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0004d	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Format$[rsp]
  00052	4c 8b 44 24 58	 mov	 r8, QWORD PTR _BufferCount$[rsp]
  00057	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Buffer$[rsp]
  0005c	48 8b c8	 mov	 rcx, rax
  0005f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___stdio_common_vsprintf
  00065	89 44 24 30	 mov	 DWORD PTR _Result$[rsp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00069	83 7c 24 30 00	 cmp	 DWORD PTR _Result$[rsp], 0
  0006e	7d 0a		 jge	 SHORT $LN3@vsnprintf_
  00070	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR tv74[rsp], -1
  00078	eb 08		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  0007a	8b 44 24 30	 mov	 eax, DWORD PTR _Result$[rsp]
  0007e	89 44 24 34	 mov	 DWORD PTR tv74[rsp], eax
$LN4@vsnprintf_:
  00082	8b 44 24 34	 mov	 eax, DWORD PTR tv74[rsp]

; 1395 :     }

  00086	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
_vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT fprintf
_TEXT	SEGMENT
_Result$ = 32
_ArgList$ = 56
_Stream$ = 96
_Format$ = 104
fprintf	PROC						; COMDAT

; 835  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000f	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 836  :         int _Result;
; 837  :         va_list _ArgList;
; 838  :         __crt_va_start(_ArgList, _Format);

  0002d	48 8d 44 24 70	 lea	 rax, QWORD PTR _Format$[rsp+8]
  00032	48 89 44 24 38	 mov	 QWORD PTR _ArgList$[rsp], rax

; 839  :         _Result = _vfprintf_l(_Stream, _Format, NULL, _ArgList);

  00037	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _ArgList$[rsp]
  0003c	45 33 c0	 xor	 r8d, r8d
  0003f	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Format$[rsp]
  00044	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Stream$[rsp]
  00049	e8 00 00 00 00	 call	 _vfprintf_l
  0004e	89 44 24 20	 mov	 DWORD PTR _Result$[rsp], eax

; 840  :         __crt_va_end(_ArgList);

  00052	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR _ArgList$[rsp], 0

; 841  :         return _Result;

  0005b	8b 44 24 20	 mov	 eax, DWORD PTR _Result$[rsp]

; 842  :     }

  0005f	8b f8		 mov	 edi, eax
  00061	48 8b cc	 mov	 rcx, rsp
  00064	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:fprintf$rtcFrameData
  0006b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00070	8b c7		 mov	 eax, edi
  00072	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
fprintf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vfprintf_l
_TEXT	SEGMENT
_Stream$ = 64
_Format$ = 72
_Locale$ = 80
_ArgList$ = 88
_vfprintf_l PROC					; COMDAT

; 642  :     {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 643  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  0002d	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00032	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  00037	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0003c	4c 8b 4c 24 50	 mov	 r9, QWORD PTR _Locale$[rsp]
  00041	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Format$[rsp]
  00046	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Stream$[rsp]
  0004b	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0004e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___stdio_common_vfprintf

; 644  :     }

  00054	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
_vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_wstdio.h
;	COMDAT ?vswprintf@@YAHQEA_WQEB_WPEAD@Z
_TEXT	SEGMENT
_Buffer$ = 48
_Format$ = 56
_ArgList$ = 64
?vswprintf@@YAHQEA_WQEB_WPEAD@Z PROC			; vswprintf, COMDAT

; 1842 :             {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1843 :                 #pragma warning(suppress: 28719)
; 1844 :                 return vswprintf(_Buffer, _CRT_INT_MAX, _Format, _ArgList);

  00028	4c 8b 4c 24 40	 mov	 r9, QWORD PTR _ArgList$[rsp]
  0002d	4c 8b 44 24 38	 mov	 r8, QWORD PTR _Format$[rsp]
  00032	ba ff ff ff 7f	 mov	 edx, 2147483647		; 7fffffffH
  00037	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Buffer$[rsp]
  0003c	e8 00 00 00 00	 call	 vswprintf

; 1845 :             }

  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
?vswprintf@@YAHQEA_WQEB_WPEAD@Z ENDP			; vswprintf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_wstdio.h
;	COMDAT _vscwprintf
_TEXT	SEGMENT
_Format$ = 48
_ArgList$ = 56
_vscwprintf PROC					; COMDAT

; 1365 :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1366 :         return _vscwprintf_l(_Format, NULL, _ArgList);

  00023	4c 8b 44 24 38	 mov	 r8, QWORD PTR _ArgList$[rsp]
  00028	33 d2		 xor	 edx, edx
  0002a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Format$[rsp]
  0002f	e8 00 00 00 00	 call	 _vscwprintf_l

; 1367 :     }

  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
_vscwprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_wstdio.h
;	COMDAT _vscwprintf_l
_TEXT	SEGMENT
_Result$ = 48
tv74 = 52
_Format$ = 80
_Locale$ = 88
_ArgList$ = 96
_vscwprintf_l PROC					; COMDAT

; 1347 :     {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1348 :         int const _Result = __stdio_common_vswprintf(

  00028	e8 00 00 00 00	 call	 __local_stdio_printf_options
  0002d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00030	48 83 c8 02	 or	 rax, 2
  00034	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  00039	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  0003e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Locale$[rsp]
  00043	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00048	4c 8b 4c 24 50	 mov	 r9, QWORD PTR _Format$[rsp]
  0004d	45 33 c0	 xor	 r8d, r8d
  00050	33 d2		 xor	 edx, edx
  00052	48 8b c8	 mov	 rcx, rax
  00055	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___stdio_common_vswprintf
  0005b	89 44 24 30	 mov	 DWORD PTR _Result$[rsp], eax

; 1349 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1350 :             NULL, 0, _Format, _Locale, _ArgList);
; 1351 : 
; 1352 :         return _Result < 0 ? -1 : _Result;

  0005f	83 7c 24 30 00	 cmp	 DWORD PTR _Result$[rsp], 0
  00064	7d 0a		 jge	 SHORT $LN3@vscwprintf
  00066	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR tv74[rsp], -1
  0006e	eb 08		 jmp	 SHORT $LN4@vscwprintf
$LN3@vscwprintf:
  00070	8b 44 24 30	 mov	 eax, DWORD PTR _Result$[rsp]
  00074	89 44 24 34	 mov	 DWORD PTR tv74[rsp], eax
$LN4@vscwprintf:
  00078	8b 44 24 34	 mov	 eax, DWORD PTR tv74[rsp]

; 1353 :     }

  0007c	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00080	5f		 pop	 rdi
  00081	c3		 ret	 0
_vscwprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_wstdio.h
;	COMDAT vswprintf
_TEXT	SEGMENT
_Buffer$ = 64
_BufferCount$ = 72
_Format$ = 80
_ArgList$ = 88
vswprintf PROC						; COMDAT

; 1247 :     {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1248 :         return _vswprintf_c_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  0002d	48 8b 44 24 58	 mov	 rax, QWORD PTR _ArgList$[rsp]
  00032	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00037	45 33 c9	 xor	 r9d, r9d
  0003a	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Format$[rsp]
  0003f	48 8b 54 24 48	 mov	 rdx, QWORD PTR _BufferCount$[rsp]
  00044	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Buffer$[rsp]
  00049	e8 00 00 00 00	 call	 _vswprintf_c_l

; 1249 :     }

  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
vswprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_wstdio.h
;	COMDAT _vswprintf_c_l
_TEXT	SEGMENT
_Result$ = 48
tv73 = 52
_Buffer$ = 80
_BufferCount$ = 88
_Format$ = 96
_Locale$ = 104
_ArgList$ = 112
_vswprintf_c_l PROC					; COMDAT

; 1160 :     {

$LN5:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1161 :         int const _Result = __stdio_common_vswprintf(

  0002d	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00032	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  00037	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  0003c	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Locale$[rsp]
  00041	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00046	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Format$[rsp]
  0004b	4c 8b 44 24 58	 mov	 r8, QWORD PTR _BufferCount$[rsp]
  00050	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Buffer$[rsp]
  00055	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00058	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___stdio_common_vswprintf
  0005e	89 44 24 30	 mov	 DWORD PTR _Result$[rsp], eax

; 1162 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1163 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1164 : 
; 1165 :         return _Result < 0 ? -1 : _Result;

  00062	83 7c 24 30 00	 cmp	 DWORD PTR _Result$[rsp], 0
  00067	7d 0a		 jge	 SHORT $LN3@vswprintf_
  00069	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR tv73[rsp], -1
  00071	eb 08		 jmp	 SHORT $LN4@vswprintf_
$LN3@vswprintf_:
  00073	8b 44 24 30	 mov	 eax, DWORD PTR _Result$[rsp]
  00077	89 44 24 34	 mov	 DWORD PTR tv73[rsp], eax
$LN4@vswprintf_:
  0007b	8b 44 24 34	 mov	 eax, DWORD PTR tv73[rsp]

; 1166 :     }

  0007f	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
_vswprintf_c_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 86   :     {

$LN3:
  00000	40 57		 push	 rdi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00002	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00009	5f		 pop	 rdi
  0000a	c3		 ret	 0
__local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 16
__formal$ = 24
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 16
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
