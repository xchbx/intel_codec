; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG116186 DB	'Module:%s Hint:%d, Name:%s', 0aH, 00H
$SG119785 DB	'%s', 00H
	ORG $+1
$SG119784 DB	'invalid argument', 00H
	ORG $+15
$SG119786 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xmemory', 00H
	ORG $+8
$SG119787 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H
	DB	'1', 00H, '0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H
$SG119788 DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+2
$SG119789 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
CONST	ENDS
PUBLIC	__local_stdio_printf_options
PUBLIC	_vfprintf_l
PUBLIC	printf
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??$_Convert_size@_K@std@@YA_K_K@Z		; std::_Convert_size<unsigned __int64>
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators
PUBLIC	??0_Iterator_base12@std@@QEAA@XZ		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QEAA@AEBU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??1_Iterator_base12@std@@QEAA@XZ		; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QEAAXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z ; std::_Narrow_char_traits<char,int>::compare
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
PUBLIC	?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy
PUBLIC	?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	??0?$allocator@D@std@@QEAA@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z	; std::allocator<char>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
PUBLIC	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
PUBLIC	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
PUBLIC	?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NQEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Equal
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??0hookData@@QEAA@XZ				; hookData::hookData
PUBLIC	??1hookData@@QEAA@XZ				; hookData::~hookData
PUBLIC	??0hookData@@QEAA@AEBU0@@Z			; hookData::hookData
PUBLIC	??0hookData@@QEAA@$$QEAU0@@Z			; hookData::hookData
PUBLIC	??4hookData@@QEAAAEAU0@$$QEAU0@@Z		; hookData::operator=
PUBLIC	??_GhookData@@QEAAPEAXI@Z			; hookData::`scalar deleting destructor'
PUBLIC	??0apihook@@QEAA@XZ				; apihook::apihook
PUBLIC	??1apihook@@QEAA@XZ				; apihook::~apihook
PUBLIC	?hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z		; apihook::hook
PUBLIC	?print_all_func@apihook@@SAXXZ			; apihook::print_all_func
PUBLIC	?fin@apihook@@QEAAXXZ				; apihook::fin
PUBLIC	?fin@apihook@@QEAAXPEBD0@Z			; apihook::fin
PUBLIC	?fin@apihook@@QEAAXPEAX@Z			; apihook::fin
PUBLIC	?get_orig@apihook@@QEAAPEAXPEBD0@Z		; apihook::get_orig
PUBLIC	?hook_function@apihook@@CAPEAXPEBD0PEAX@Z	; apihook::hook_function
PUBLIC	??0?$allocator@UhookData@@@std@@QEAA@XZ		; std::allocator<hookData>::allocator<hookData>
PUBLIC	?deallocate@?$allocator@UhookData@@@std@@QEAAXQEAUhookData@@_K@Z ; std::allocator<hookData>::deallocate
PUBLIC	?allocate@?$allocator@UhookData@@@std@@QEAAPEAUhookData@@_K@Z ; std::allocator<hookData>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SA_KAEBV?$allocator@UhookData@@@2@@Z ; std::_Default_allocator_traits<std::allocator<hookData> >::max_size
PUBLIC	??0?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ ; std::vector<hookData,std::allocator<hookData> >::vector<hookData,std::allocator<hookData> >
PUBLIC	??1?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ ; std::vector<hookData,std::allocator<hookData> >::~vector<hookData,std::allocator<hookData> >
PUBLIC	?push_back@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXAEBUhookData@@@Z ; std::vector<hookData,std::allocator<hookData> >::push_back
PUBLIC	?erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z ; std::vector<hookData,std::allocator<hookData> >::erase
PUBLIC	?clear@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXXZ ; std::vector<hookData,std::allocator<hookData> >::clear
PUBLIC	?begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ ; std::vector<hookData,std::allocator<hookData> >::begin
PUBLIC	?end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ ; std::vector<hookData,std::allocator<hookData> >::end
PUBLIC	?_Unchecked_begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@XZ ; std::vector<hookData,std::allocator<hookData> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@XZ ; std::vector<hookData,std::allocator<hookData> >::_Unchecked_end
PUBLIC	?max_size@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEBA_KXZ ; std::vector<hookData,std::allocator<hookData> >::max_size
PUBLIC	?capacity@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEBA_KXZ ; std::vector<hookData,std::allocator<hookData> >::capacity
PUBLIC	?_Umove@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAPEAUhookData@@PEAU3@00@Z ; std::vector<hookData,std::allocator<hookData> >::_Umove
PUBLIC	?_Umove_if_noexcept1@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@00U?$integral_constant@_N$00@2@@Z ; std::vector<hookData,std::allocator<hookData> >::_Umove_if_noexcept1
PUBLIC	?_Umove_if_noexcept@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@00@Z ; std::vector<hookData,std::allocator<hookData> >::_Umove_if_noexcept
PUBLIC	?_Destroy@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@0@Z ; std::vector<hookData,std::allocator<hookData> >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBA_K_K@Z ; std::vector<hookData,std::allocator<hookData> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXQEAUhookData@@_K1@Z ; std::vector<hookData,std::allocator<hookData> >::_Change_array
PUBLIC	?_Tidy@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXXZ ; std::vector<hookData,std::allocator<hookData> >::_Tidy
PUBLIC	?_Xlength@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@CAXXZ ; std::vector<hookData,std::allocator<hookData> >::_Xlength
PUBLIC	?_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z ; std::vector<hookData,std::allocator<hookData> >::_Orphan_range
PUBLIC	?_Getal@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAAEAV?$allocator@UhookData@@@2@XZ ; std::vector<hookData,std::allocator<hookData> >::_Getal
PUBLIC	?_Getal@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAAEBV?$allocator@UhookData@@@2@XZ ; std::vector<hookData,std::allocator<hookData> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<hookData> >::_Vector_val<std::_Simple_types<hookData> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UhookData@@@std@@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UhookData@@@2@XZ ; std::_Compressed_pair<std::allocator<hookData>,std::_Vector_val<std::_Simple_types<hookData> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UhookData@@@std@@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UhookData@@@2@XZ ; std::_Compressed_pair<std::allocator<hookData>,std::_Vector_val<std::_Simple_types<hookData> >,1>::_Get_first
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >
PUBLIC	??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEBUhookData@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator->
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator!=
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAXAEBV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Compat
PUBLIC	?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@1@0@Z ; std::_Verify_range
PUBLIC	?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAAXPEBUhookData@@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Seek_to
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@AEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >
PUBLIC	??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator->
PUBLIC	?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Unwrapped
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >
PUBLIC	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$_Const_cast@$$CBUhookData@@@std@@YAPEAUhookData@@PEBU1@@Z ; std::_Const_cast<hookData const >
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<hookData> > >
PUBLIC	??$_Move_unchecked@PEAUhookData@@PEAU1@@std@@YAPEAUhookData@@PEAU1@00@Z ; std::_Move_unchecked<hookData *,hookData *>
PUBLIC	??$_Unfancy@UhookData@@@std@@YAPEAUhookData@@PEAU1@@Z ; std::_Unfancy<hookData>
PUBLIC	??$destroy@UhookData@@@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SAXAEAV?$allocator@UhookData@@@1@QEAUhookData@@@Z ; std::_Default_allocator_traits<std::allocator<hookData> >::destroy<hookData>
PUBLIC	??$emplace_back@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXAEBUhookData@@@Z ; std::vector<hookData,std::allocator<hookData> >::emplace_back<hookData const &>
PUBLIC	??$forward@AEBUhookData@@@std@@YAAEBUhookData@@AEBU1@@Z ; std::forward<hookData const &>
PUBLIC	??$_Emplace_back_with_unused_capacity@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXAEBUhookData@@@Z ; std::vector<hookData,std::allocator<hookData> >::_Emplace_back_with_unused_capacity<hookData const &>
PUBLIC	??$construct@UhookData@@AEBU1@@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SAXAEAV?$allocator@UhookData@@@1@QEAUhookData@@AEBU3@@Z ; std::_Default_allocator_traits<std::allocator<hookData> >::construct<hookData,hookData const &>
PUBLIC	??$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z ; std::vector<hookData,std::allocator<hookData> >::_Emplace_reallocate<hookData const &>
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0UhookData@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UhookData@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><hookData>
PUBLIC	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@UhookData@@@std@@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<hookData>,std::_Vector_val<std::_Simple_types<hookData> >,1>::_Compressed_pair<std::allocator<hookData>,std::_Vector_val<std::_Simple_types<hookData> >,1><>
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>
PUBLIC	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??$_Destroy_range@V?$allocator@UhookData@@@std@@@std@@YAXPEAUhookData@@QEAU1@AEAV?$allocator@UhookData@@@0@@Z ; std::_Destroy_range<std::allocator<hookData> >
PUBLIC	??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()
PUBLIC	??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
PUBLIC	??$_Unfancy@D@std@@YAPEADPEAD@Z			; std::_Unfancy<char>
PUBLIC	??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Max_value<unsigned __int64>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
PUBLIC	??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > > >
PUBLIC	??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@$0A@@std@@YAPEAUhookData@@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,0>
PUBLIC	??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@PEAUhookData@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@AEBQEAUhookData@@@Z ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,hookData *>
PUBLIC	??$move@AEAUhookData@@@std@@YA$$QEAUhookData@@AEAU1@@Z ; std::move<hookData &>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> >
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z ; std::_Uninitialized_move<hookData *,std::allocator<hookData> >
PUBLIC	??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Min_value<unsigned __int64>
PUBLIC	??$_Get_size_of_n@$0GI@@std@@YA_K_K@Z		; std::_Get_size_of_n<104>
PUBLIC	??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z ; std::_Traits_equal<std::char_traits<char> >
PUBLIC	??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Get_size_of_n@$00@std@@YA_K_K@Z		; std::_Get_size_of_n<1>
PUBLIC	??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z	; std::addressof<char *>
PUBLIC	??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z	; std::forward<char * const &>
PUBLIC	??$_Get_unwrapped@UhookData@@@std@@YAPEAUhookData@@QEAU1@@Z ; std::_Get_unwrapped<hookData>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAA@PEAUhookData@@AEAV?$allocator@UhookData@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<hookData> >::_Uninitialized_backout_al<std::allocator<hookData> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<hookData> >::~_Uninitialized_backout_al<std::allocator<hookData> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@XZ ; std::_Uninitialized_backout_al<std::allocator<hookData> >::_Release
PUBLIC	??$_Emplace_back@UhookData@@@?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAAX$$QEAUhookData@@@Z ; std::_Uninitialized_backout_al<std::allocator<hookData> >::_Emplace_back<hookData>
PUBLIC	??$_Refancy@PEAUhookData@@$0A@@std@@YAPEAUhookData@@PEAU1@@Z ; std::_Refancy<hookData *,0>
PUBLIC	??$forward@UhookData@@@std@@YA$$QEAUhookData@@AEAU1@@Z ; std::forward<hookData>
PUBLIC	??$construct@UhookData@@U1@@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SAXAEAV?$allocator@UhookData@@@1@QEAUhookData@@$$QEAU3@@Z ; std::_Default_allocator_traits<std::allocator<hookData> >::construct<hookData,hookData>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ ; `string'
PUBLIC	??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@ ; `string'
PUBLIC	??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ ; `string'
PUBLIC	??_C@_0CE@EAMOGAIE@vector?5erase?5iterator?5outside?5r@ ; `string'
PUBLIC	??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1JG@GJLGOKOD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ ; `string'
PUBLIC	??_C@_1EM@BEMPOGMM@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi@ ; `string'
PUBLIC	??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@ ; `string'
PUBLIC	??_C@_1NO@GBEPGGBL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@ ; `string'
PUBLIC	??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ ; `string'
PUBLIC	??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@ ; `string'
PUBLIC	??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ ; `string'
PUBLIC	??_C@_0BO@CAOBBIOC@vector?5iterators?5incompatible@ ; `string'
PUBLIC	??_C@_1NG@KIOFJOHO@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@ ; `string'
PUBLIC	??_C@_1EA@DJDGNIII@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@ ; `string'
PUBLIC	??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@ ; `string'
PUBLIC	??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ ; `string'
PUBLIC	??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@ ; `string'
PUBLIC	??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp___acrt_iob_func:PROC
EXTRN	__imp___stdio_common_vfprintf:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	memcmp:PROC
EXTRN	memcpy:PROC
EXTRN	memmove:PROC
EXTRN	__imp__stricmp:PROC
EXTRN	strlen:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	__imp_GetCurrentProcess:PROC
EXTRN	__imp_VirtualProtect:PROC
EXTRN	__imp_WriteProcessMemory:PROC
EXTRN	__imp_GetModuleHandleA:PROC
EXTRN	__imp_ImageDirectoryEntryToData:PROC
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__security_cookie:QWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$__local_stdio_printf_options DD imagerel $LN3
	DD	imagerel $LN3+11
	DD	imagerel $unwind$__local_stdio_printf_options
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vfprintf_l DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$_vfprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$printf DD imagerel $LN3
	DD	imagerel $LN3+129
	DD	imagerel $unwind$printf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+14
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+83
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA DD imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+424
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Convert_size@_K@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Convert_size@_K@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN8
	DD	imagerel $LN8+175
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DD imagerel $LN6
	DD	imagerel $LN6+182
	DD	imagerel $unwind$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA DD imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Iterator_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0_Iterator_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Iterator_base12@std@@QEAA@AEBU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$??0_Iterator_base12@std@@QEAA@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DD imagerel $LN7
	DD	imagerel $LN7+161
	DD	imagerel $unwind$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA DD imagerel ?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA
	DD	imagerel ?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Iterator_base12@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+92
	DD	imagerel $unwind$??1_Iterator_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD imagerel $LN8
	DD	imagerel $LN8+251
	DD	imagerel $unwind$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA DD imagerel ?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA DD imagerel ?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
	DD	imagerel ?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA+36
	DD	imagerel $unwind$?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+76
	DD	imagerel $unwind$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DD imagerel $LN15
	DD	imagerel $LN15+270
	DD	imagerel $unwind$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@D@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@D@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+15
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+95
	DD	imagerel $unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+68
	DD	imagerel $unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+54
	DD	imagerel $unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+233
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+163
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+135
	DD	imagerel $unwind$?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD imagerel $LN5
	DD	imagerel $LN5+126
	DD	imagerel $unwind$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD imagerel $LN4
	DD	imagerel $LN4+381
	DD	imagerel $unwind$?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+153
	DD	imagerel $unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+198
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+153
	DD	imagerel $unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD imagerel $LN5
	DD	imagerel $LN5+189
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+214
	DD	imagerel $unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+50
	DD	imagerel $unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0hookData@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+73
	DD	imagerel $unwind$??0hookData@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0hookData@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0hookData@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0hookData@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0hookData@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0hookData@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0hookData@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0hookData@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???0hookData@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1hookData@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+68
	DD	imagerel $unwind$??1hookData@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1hookData@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1hookData@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1hookData@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1hookData@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???1hookData@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???1hookData@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???1hookData@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???1hookData@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0hookData@@QEAA@AEBU0@@Z DD imagerel $LN5
	DD	imagerel $LN5+146
	DD	imagerel $unwind$??0hookData@@QEAA@AEBU0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0hookData@@QEAA@AEBU0@@Z@4HA DD imagerel ?dtor$0@?0???0hookData@@QEAA@AEBU0@@Z@4HA
	DD	imagerel ?dtor$0@?0???0hookData@@QEAA@AEBU0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0hookData@@QEAA@AEBU0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0hookData@@QEAA@AEBU0@@Z@4HA DD imagerel ?dtor$1@?0???0hookData@@QEAA@AEBU0@@Z@4HA
	DD	imagerel ?dtor$1@?0???0hookData@@QEAA@AEBU0@@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???0hookData@@QEAA@AEBU0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0hookData@@QEAA@$$QEAU0@@Z DD imagerel $LN5
	DD	imagerel $LN5+146
	DD	imagerel $unwind$??0hookData@@QEAA@$$QEAU0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0hookData@@QEAA@$$QEAU0@@Z@4HA DD imagerel ?dtor$0@?0???0hookData@@QEAA@$$QEAU0@@Z@4HA
	DD	imagerel ?dtor$0@?0???0hookData@@QEAA@$$QEAU0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0hookData@@QEAA@$$QEAU0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0hookData@@QEAA@$$QEAU0@@Z@4HA DD imagerel ?dtor$1@?0???0hookData@@QEAA@$$QEAU0@@Z@4HA
	DD	imagerel ?dtor$1@?0???0hookData@@QEAA@$$QEAU0@@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???0hookData@@QEAA@$$QEAU0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4hookData@@QEAAAEAU0@$$QEAU0@@Z DD imagerel $LN3
	DD	imagerel $LN3+144
	DD	imagerel $unwind$??4hookData@@QEAAAEAU0@$$QEAU0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GhookData@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_GhookData@@QEAAPEAXI@Z
pdata	ENDS
pdata	SEGMENT
$pdata$??0apihook@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+55
	DD	imagerel $unwind$??0apihook@@QEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???0apihook@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0apihook@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0apihook@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0apihook@@QEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$??1apihook@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+61
	DD	imagerel $unwind$??1apihook@@QEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???1apihook@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1apihook@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1apihook@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1apihook@@QEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z DD imagerel $LN6
	DD	imagerel $LN6+377
	DD	imagerel $unwind$?hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z@4HA DD imagerel ?dtor$0@?0??hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z@4HA
	DD	imagerel ?dtor$0@?0??hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?print_all_func@apihook@@SAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?print_all_func@apihook@@SAXXZ
$pdata$?fin@apihook@@QEAAXXZ DD imagerel $LN8
	DD	imagerel $LN8+229
	DD	imagerel $unwind$?fin@apihook@@QEAAXXZ
$pdata$?fin@apihook@@QEAAXPEBD0@Z DD imagerel $LN12
	DD	imagerel $LN12+642
	DD	imagerel $unwind$?fin@apihook@@QEAAXPEBD0@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??fin@apihook@@QEAAXPEBD0@Z@4HA DD imagerel ?dtor$0@?0??fin@apihook@@QEAAXPEBD0@Z@4HA
	DD	imagerel ?dtor$0@?0??fin@apihook@@QEAAXPEBD0@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??fin@apihook@@QEAAXPEBD0@Z@4HA
$pdata$?dtor$1@?0??fin@apihook@@QEAAXPEBD0@Z@4HA DD imagerel ?dtor$1@?0??fin@apihook@@QEAAXPEBD0@Z@4HA
	DD	imagerel ?dtor$1@?0??fin@apihook@@QEAAXPEBD0@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??fin@apihook@@QEAAXPEBD0@Z@4HA
$pdata$?dtor$2@?0??fin@apihook@@QEAAXPEBD0@Z@4HA DD imagerel ?dtor$2@?0??fin@apihook@@QEAAXPEBD0@Z@4HA
	DD	imagerel ?dtor$2@?0??fin@apihook@@QEAAXPEBD0@Z@4HA+35
	DD	imagerel $unwind$?dtor$2@?0??fin@apihook@@QEAAXPEBD0@Z@4HA
$pdata$?dtor$3@?0??fin@apihook@@QEAAXPEBD0@Z@4HA DD imagerel ?dtor$3@?0??fin@apihook@@QEAAXPEBD0@Z@4HA
	DD	imagerel ?dtor$3@?0??fin@apihook@@QEAAXPEBD0@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??fin@apihook@@QEAAXPEBD0@Z@4HA
$pdata$?dtor$4@?0??fin@apihook@@QEAAXPEBD0@Z@4HA DD imagerel ?dtor$4@?0??fin@apihook@@QEAAXPEBD0@Z@4HA
	DD	imagerel ?dtor$4@?0??fin@apihook@@QEAAXPEBD0@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0??fin@apihook@@QEAAXPEBD0@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?fin@apihook@@QEAAXPEAX@Z DD imagerel $LN12
	DD	imagerel $LN12+608
	DD	imagerel $unwind$?fin@apihook@@QEAAXPEAX@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??fin@apihook@@QEAAXPEAX@Z@4HA DD imagerel ?dtor$0@?0??fin@apihook@@QEAAXPEAX@Z@4HA
	DD	imagerel ?dtor$0@?0??fin@apihook@@QEAAXPEAX@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??fin@apihook@@QEAAXPEAX@Z@4HA
$pdata$?dtor$1@?0??fin@apihook@@QEAAXPEAX@Z@4HA DD imagerel ?dtor$1@?0??fin@apihook@@QEAAXPEAX@Z@4HA
	DD	imagerel ?dtor$1@?0??fin@apihook@@QEAAXPEAX@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??fin@apihook@@QEAAXPEAX@Z@4HA
$pdata$?dtor$2@?0??fin@apihook@@QEAAXPEAX@Z@4HA DD imagerel ?dtor$2@?0??fin@apihook@@QEAAXPEAX@Z@4HA
	DD	imagerel ?dtor$2@?0??fin@apihook@@QEAAXPEAX@Z@4HA+35
	DD	imagerel $unwind$?dtor$2@?0??fin@apihook@@QEAAXPEAX@Z@4HA
$pdata$?dtor$3@?0??fin@apihook@@QEAAXPEAX@Z@4HA DD imagerel ?dtor$3@?0??fin@apihook@@QEAAXPEAX@Z@4HA
	DD	imagerel ?dtor$3@?0??fin@apihook@@QEAAXPEAX@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??fin@apihook@@QEAAXPEAX@Z@4HA
$pdata$?dtor$4@?0??fin@apihook@@QEAAXPEAX@Z@4HA DD imagerel ?dtor$4@?0??fin@apihook@@QEAAXPEAX@Z@4HA
	DD	imagerel ?dtor$4@?0??fin@apihook@@QEAAXPEAX@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0??fin@apihook@@QEAAXPEAX@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?get_orig@apihook@@QEAAPEAXPEBD0@Z DD imagerel $LN9
	DD	imagerel $LN9+433
	DD	imagerel $unwind$?get_orig@apihook@@QEAAPEAXPEBD0@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA DD imagerel ?dtor$0@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA
	DD	imagerel ?dtor$0@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA
$pdata$?dtor$1@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA DD imagerel ?dtor$1@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA
	DD	imagerel ?dtor$1@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA
$pdata$?dtor$2@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA DD imagerel ?dtor$2@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA
	DD	imagerel ?dtor$2@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA+35
	DD	imagerel $unwind$?dtor$2@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA
$pdata$?dtor$3@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA DD imagerel ?dtor$3@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA
	DD	imagerel ?dtor$3@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?hook_function@apihook@@CAPEAXPEBD0PEAX@Z DD imagerel $LN20
	DD	imagerel $LN20+714
	DD	imagerel $unwind$?hook_function@apihook@@CAPEAXPEBD0PEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@UhookData@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@UhookData@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UhookData@@@std@@QEAAXQEAUhookData@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$allocator@UhookData@@@std@@QEAAXQEAUhookData@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@UhookData@@@std@@QEAAPEAUhookData@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@UhookData@@@std@@QEAAPEAUhookData@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SA_KAEBV?$allocator@UhookData@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SA_KAEBV?$allocator@UhookData@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXAEBUhookData@@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?push_back@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXAEBUhookData@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z DD imagerel $LN15
	DD	imagerel $LN15+465
	DD	imagerel $unwind$?erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z@4HA DD imagerel ?dtor$0@?0??erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z@4HA
	DD	imagerel ?dtor$0@?0??erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z@4HA DD imagerel ?dtor$1@?0??erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z@4HA
	DD	imagerel ?dtor$1@?0??erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z@4HA+49
	DD	imagerel $unwind$?dtor$1@?0??erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+128
	DD	imagerel $unwind$?clear@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+110
	DD	imagerel $unwind$?begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ@4HA DD imagerel ?dtor$0@?0??begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ@4HA
	DD	imagerel ?dtor$0@?0??begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ@4HA+49
	DD	imagerel $unwind$?dtor$0@?0??begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+110
	DD	imagerel $unwind$?end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ@4HA DD imagerel ?dtor$0@?0??end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ@4HA
	DD	imagerel ?dtor$0@?0??end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ@4HA+49
	DD	imagerel $unwind$?dtor$0@?0??end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?_Unchecked_end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?max_size@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?capacity@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAPEAUhookData@@PEAU3@00@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Umove@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAPEAUhookData@@PEAU3@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept1@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@00U?$integral_constant@_N$00@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Umove_if_noexcept1@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@00U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@00@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?_Umove_if_noexcept@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+166
	DD	imagerel $unwind$?_Calculate_growth@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXQEAUhookData@@_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+281
	DD	imagerel $unwind$?_Change_array@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXQEAUhookData@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+247
	DD	imagerel $unwind$?_Tidy@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlength@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z DD imagerel $LN9
	DD	imagerel $LN9+214
	DD	imagerel $unwind$?_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAAEAV?$allocator@UhookData@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAAEAV?$allocator@UhookData@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAAEBV?$allocator@UhookData@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAAEBV?$allocator@UhookData@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@UhookData@@@std@@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UhookData@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UhookData@@@std@@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UhookData@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@UhookData@@@std@@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UhookData@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UhookData@@@std@@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UhookData@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+92
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEBUhookData@@XZ DD imagerel $LN21
	DD	imagerel $LN21+346
	DD	imagerel $unwind$??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEBUhookData@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBA_NAEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+99
	DD	imagerel $unwind$??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBA_NAEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+86
	DD	imagerel $unwind$??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAXAEBV12@@Z DD imagerel $LN12
	DD	imagerel $LN12+195
	DD	imagerel $unwind$?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@1@0@Z DD imagerel $LN21
	DD	imagerel $LN21+334
	DD	imagerel $unwind$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAAXPEBUhookData@@@Z DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAAXPEBUhookData@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+80
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+80
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_831aa28b571b4242b9e704a94bc96691>@@QEBA_NUhookData@@@Z DD imagerel ??R<lambda_831aa28b571b4242b9e704a94bc96691>@@QEBA_NUhookData@@@Z
	DD	imagerel ??R<lambda_831aa28b571b4242b9e704a94bc96691>@@QEBA_NUhookData@@@Z+144
	DD	imagerel $unwind$??R<lambda_831aa28b571b4242b9e704a94bc96691>@@QEBA_NUhookData@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???R<lambda_831aa28b571b4242b9e704a94bc96691>@@QEBA_NUhookData@@@Z@4HA DD imagerel ?dtor$0@?0???R<lambda_831aa28b571b4242b9e704a94bc96691>@@QEBA_NUhookData@@@Z@4HA
	DD	imagerel ?dtor$0@?0???R<lambda_831aa28b571b4242b9e704a94bc96691>@@QEBA_NUhookData@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???R<lambda_831aa28b571b4242b9e704a94bc96691>@@QEBA_NUhookData@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0<lambda_831aa28b571b4242b9e704a94bc96691>@@QEAA@AEBQEBD0@Z DD imagerel ??0<lambda_831aa28b571b4242b9e704a94bc96691>@@QEAA@AEBQEBD0@Z
	DD	imagerel ??0<lambda_831aa28b571b4242b9e704a94bc96691>@@QEAA@AEBQEBD0@Z+56
	DD	imagerel $unwind$??0<lambda_831aa28b571b4242b9e704a94bc96691>@@QEAA@AEBQEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z DD imagerel ??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z
	DD	imagerel ??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z+356
	DD	imagerel $unwind$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA DD imagerel ?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA DD imagerel ?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA
	DD	imagerel ?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA DD imagerel ?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA
	DD	imagerel ?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA DD imagerel ?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA
	DD	imagerel ?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA+58
	DD	imagerel $unwind$?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEBA_NUhookData@@@Z DD imagerel ??R<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEBA_NUhookData@@@Z
	DD	imagerel ??R<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEBA_NUhookData@@@Z+102
	DD	imagerel $unwind$??R<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEBA_NUhookData@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???R<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEBA_NUhookData@@@Z@4HA DD imagerel ?dtor$0@?0???R<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEBA_NUhookData@@@Z@4HA
	DD	imagerel ?dtor$0@?0???R<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEBA_NUhookData@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???R<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEBA_NUhookData@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEAA@AEBQEAX@Z DD imagerel ??0<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEAA@AEBQEAX@Z
	DD	imagerel ??0<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEAA@AEBQEAX@Z+34
	DD	imagerel $unwind$??0<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEAA@AEBQEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z DD imagerel ??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z
	DD	imagerel ??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z+356
	DD	imagerel $unwind$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA DD imagerel ?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA DD imagerel ?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA
	DD	imagerel ?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA DD imagerel ?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA
	DD	imagerel ?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA DD imagerel ?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA
	DD	imagerel ?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA+58
	DD	imagerel $unwind$?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEBA_NUhookData@@@Z DD imagerel ??R<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEBA_NUhookData@@@Z
	DD	imagerel ??R<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEBA_NUhookData@@@Z+144
	DD	imagerel $unwind$??R<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEBA_NUhookData@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???R<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEBA_NUhookData@@@Z@4HA DD imagerel ?dtor$0@?0???R<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEBA_NUhookData@@@Z@4HA
	DD	imagerel ?dtor$0@?0???R<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEBA_NUhookData@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???R<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEBA_NUhookData@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEAA@AEBQEBD0@Z DD imagerel ??0<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEAA@AEBQEBD0@Z
	DD	imagerel ??0<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEAA@AEBQEBD0@Z+56
	DD	imagerel $unwind$??0<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEAA@AEBQEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z DD imagerel ??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z
	DD	imagerel ??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z+356
	DD	imagerel $unwind$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA DD imagerel ?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA DD imagerel ?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA
	DD	imagerel ?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA DD imagerel ?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA
	DD	imagerel ?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA DD imagerel ?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA
	DD	imagerel ?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA+58
	DD	imagerel $unwind$?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Const_cast@$$CBUhookData@@@std@@YAPEAUhookData@@PEBU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Const_cast@$$CBUhookData@@@std@@YAPEAUhookData@@PEBU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Move_unchecked@PEAUhookData@@PEAU1@@std@@YAPEAUhookData@@PEAU1@00@Z DD imagerel $LN6
	DD	imagerel $LN6+118
	DD	imagerel $unwind$??$_Move_unchecked@PEAUhookData@@PEAU1@@std@@YAPEAUhookData@@PEAU1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@UhookData@@@std@@YAPEAUhookData@@PEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@UhookData@@@std@@YAPEAUhookData@@PEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@UhookData@@@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SAXAEAV?$allocator@UhookData@@@1@QEAUhookData@@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$destroy@UhookData@@@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SAXAEAV?$allocator@UhookData@@@1@QEAUhookData@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXAEBUhookData@@@Z DD imagerel $LN4
	DD	imagerel $LN4+145
	DD	imagerel $unwind$??$emplace_back@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXAEBUhookData@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBUhookData@@@std@@YAAEBUhookData@@AEBU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBUhookData@@@std@@YAAEBUhookData@@AEBU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXAEBUhookData@@@Z DD imagerel $LN3
	DD	imagerel $LN3+191
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXAEBUhookData@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@UhookData@@AEBU1@@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SAXAEAV?$allocator@UhookData@@@1@QEAUhookData@@AEBU3@@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??$construct@UhookData@@AEBU1@@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SAXAEAV?$allocator@UhookData@@@1@QEAUhookData@@AEBU3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z DD imagerel $LN13
	DD	imagerel $LN13+574
	DD	imagerel $unwind$??$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z@4HA+81
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0UhookData@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UhookData@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0UhookData@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UhookData@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@UhookData@@@std@@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@UhookData@@@std@@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+145
	DD	imagerel $unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@UhookData@@@std@@@std@@YAXPEAUhookData@@QEAU1@AEAV?$allocator@UhookData@@@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+101
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@UhookData@@@std@@@std@@YAXPEAUhookData@@QEAU1@AEAV?$allocator@UhookData@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+330
	DD	imagerel $unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@D@std@@YAPEADPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+81
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@$0A@@std@@YAPEAUhookData@@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@$0A@@std@@YAPEAUhookData@@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@PEAUhookData@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@AEBQEAUhookData@@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@PEAUhookData@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@AEBQEAUhookData@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAUhookData@@@std@@YA$$QEAUhookData@@AEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAUhookData@@@std@@YA$$QEAUhookData@@AEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+279
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+212
	DD	imagerel $unwind$??$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0GI@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Get_size_of_n@$0GI@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z DD imagerel $LN5
	DD	imagerel $LN5+110
	DD	imagerel $unwind$??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@UhookData@@@std@@YAPEAUhookData@@QEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Get_unwrapped@UhookData@@@std@@YAPEAUhookData@@QEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAA@PEAUhookData@@AEAV?$allocator@UhookData@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAA@PEAUhookData@@AEAV?$allocator@UhookData@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@UhookData@@@?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAAX$$QEAUhookData@@@Z DD imagerel $LN3
	DD	imagerel $LN3+117
	DD	imagerel $unwind$??$_Emplace_back@UhookData@@@?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAAX$$QEAUhookData@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Refancy@PEAUhookData@@$0A@@std@@YAPEAUhookData@@PEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Refancy@PEAUhookData@@$0A@@std@@YAPEAUhookData@@PEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@UhookData@@@std@@YA$$QEAUhookData@@AEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@UhookData@@@std@@YA$$QEAUhookData@@AEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@UhookData@@U1@@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SAXAEAV?$allocator@UhookData@@@1@QEAUhookData@@$$QEAU3@@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??$construct@UhookData@@U1@@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SAXAEAV?$allocator@UhookData@@@1@QEAUhookData@@$$QEAU3@@Z
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
CONST	SEGMENT
??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, ' ', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 's', 00H, 'p', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'd', 00H
	DB	'"', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@
CONST	SEGMENT
??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@ DB 'vector iterato'
	DB	'r range transposed', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
CONST	SEGMENT
??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, ' '
	DB	00H, 'a', 00H, 'r', 00H, 'e', 00H, ' ', 00H, 'f', 00H, 'r', 00H
	DB	'o', 00H, 'm', 00H, ' ', 00H, 'd', 00H, 'i', 00H, 'f', 00H, 'f'
	DB	00H, 'e', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n'
	DB	00H, 'e', 00H, 'r', 00H, 's', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
CONST	SEGMENT
??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'r', 00H, 'i', 00H, 'f', 00H, 'y', 00H, '_', 00H, 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@
CONST	SEGMENT
??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@ DB 'vector itera'
	DB	'tors in range are from different containers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@ DB 'vector<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@DJDGNIII@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
CONST	SEGMENT
??_C@_1EA@DJDGNIII@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i'
	DB	00H, 'b', 00H, 'l', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NG@KIOFJOHO@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
CONST	SEGMENT
??_C@_1NG@KIOFJOHO@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'h', 00H
	DB	'o', 00H, 'o', 00H, 'k', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, '_', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@CAOBBIOC@vector?5iterators?5incompatible@
CONST	SEGMENT
??_C@_0BO@CAOBBIOC@vector?5iterators?5incompatible@ DB 'vector iterators '
	DB	'incompatible', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
CONST	SEGMENT
??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'o', 00H
	DB	'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, ' ', 00H, 'v', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'i'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '"', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@
CONST	SEGMENT
??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@ DB 'can''t dere'
	DB	'ference out of range vector iterator', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
CONST	SEGMENT
??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'v', 00H
	DB	'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, '-', 00H, 'i', 00H, 'n'
	DB	00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NO@GBEPGGBL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
CONST	SEGMENT
??_C@_1NO@GBEPGGBL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'h', 00H
	DB	'o', 00H, 'o', 00H, 'k', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, '-', 00H, '>', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@
CONST	SEGMENT
??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@ DB 'can''t derefe'
	DB	'rence value-initialized vector iterator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EM@BEMPOGMM@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi@
CONST	SEGMENT
??_C@_1EM@BEMPOGMM@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 's', 00H, 'e', 00H, ' '
	DB	00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H, 's'
	DB	00H, 'i', 00H, 'd', 00H, 'e', 00H, ' ', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JG@GJLGOKOD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
CONST	SEGMENT
??_C@_1JG@GJLGOKOD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'h', 00H
	DB	'o', 00H, 'o', 00H, 'k', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a'
	DB	00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a'
	DB	00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u'
	DB	00H, 'c', 00H, 't', 00H, ' ', 00H, 'h', 00H, 'o', 00H, 'o', 00H
	DB	'k', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ':', 00H, ':', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	's', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Prog'
	DB	'ram Files (x86)\Microsoft Visual Studio\2019\Community\VC\Too'
	DB	'ls\MSVC\14.23.28105\include\vector', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@EAMOGAIE@vector?5erase?5iterator?5outside?5r@
CONST	SEGMENT
??_C@_0CE@EAMOGAIE@vector?5erase?5iterator?5outside?5r@ DB 'vector erase '
	DB	'iterator outside range', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
CONST	SEGMENT
??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ DB '"'
	DB	00H, 'I', 00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H
	DB	'O', 00H, 'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T'
	DB	00H, ' ', 00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H
	DB	'P', 00H, 'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@
CONST	SEGMENT
??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'I', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '_', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '1', 00H
	DB	'2', 00H, ':', 00H, ':', 00H, '_', 00H, 'O', 00H, 'r', 00H, 'p'
	DB	00H, 'h', 00H, 'a', 00H, 'n', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
CONST	SEGMENT
??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ DB 'ITERATOR LIST CORRU'
	DB	'PTED!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xmemory', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@UhookData@@U1@@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SAXAEAV?$allocator@UhookData@@@1@QEAUhookData@@$$QEAU3@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@UhookData@@@std@@YA$$QEAUhookData@@AEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Refancy@PEAUhookData@@$0A@@std@@YAPEAUhookData@@PEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@UhookData@@@?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAAX$$QEAUhookData@@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAA@PEAUhookData@@AEAV?$allocator@UhookData@@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@UhookData@@@std@@YAPEAUhookData@@QEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0GI@@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	0ccH
	DB	02H
	DB	088H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z DD 022d11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_move<hookData *,std::allocator<hookData> >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_move<hookData *,std::allocator<hookData> >
	DD	018H
	DQ	FLAT:??$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_move<hookData *,std::allocator<hookData> >
	DD	00H
	DQ	FLAT:??$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 021e01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAUhookData@@@std@@YA$$QEAUhookData@@AEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@PEAUhookData@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@AEBQEAUhookData@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@$0A@@std@@YAPEAUhookData@@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@0@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD 022d01H
	DD	07015b219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcVarDesc DD 048H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DD	08H
	DQ	FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcName$0
	ORG $+48
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DD	00H
	DQ	FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_range@V?$allocator@UhookData@@@std@@@std@@YAXPEAUhookData@@QEAU1@AEAV?$allocator@UhookData@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_range@V?$allocator@UhookData@@@std@@@std@@YAXPEAUhookData@@QEAU1@AEAV?$allocator@UhookData@@@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Destroy_range@V?$allocator@UhookData@@@std@@@std@@YAXPEAUhookData@@QEAU1@AEAV?$allocator@UhookData@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@UhookData@@@std@@@std@@YAXPEAUhookData@@QEAU1@AEAV?$allocator@UhookData@@@0@@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_range@V?$allocator@UhookData@@@std@@@std@@YAXPEAUhookData@@QEAU1@AEAV?$allocator@UhookData@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	imagerel $ip2state$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022211H
	DD	0700a320eH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
	DD	imagerel $ip2state$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DD 022711H
	DD	0700f3213H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@UhookData@@@std@@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0UhookData@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UhookData@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z DB 06H
	DB	00H
	DB	00H
	DB	081H, 04H
	DB	02H
	DB	099H, 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z DB 02H
	DB	00H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z DB 018H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z DD 022e19H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@UhookData@@AEBU1@@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SAXAEAV?$allocator@UhookData@@@1@QEAUhookData@@AEBU3@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXAEBUhookData@@@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBUhookData@@@std@@YAAEBUhookData@@AEBU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXAEBUhookData@@@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@UhookData@@@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SAXAEAV?$allocator@UhookData@@@1@QEAUhookData@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@UhookData@@@std@@YAPEAUhookData@@PEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Move_unchecked@PEAUhookData@@PEAU1@@std@@YAPEAUhookData@@PEAU1@00@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Const_cast@$$CBUhookData@@@std@@YAPEAUhookData@@PEBU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z DB 08H
	DB	00H
	DB	00H
	DB	'|'
	DB	06H
	DB	091H, 03H
	DB	04H
	DB	01cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z DB 08H
	DB	0eH
	DD	imagerel ?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z
	DD	imagerel $ip2state$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z DD 033311H
	DD	01a011cH
	DD	07015H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z$rtcName$0 DB 05fH ; std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_3b1a155f3d9af5183301fdeff6995007> >
	DB	055H
	DB	046H
	DB	069H
	DB	072H
	DB	073H
	DB	074H
	DB	00H
	ORG $+8
??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z$rtcVarDesc DD 028H ; std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_3b1a155f3d9af5183301fdeff6995007> >
	DD	08H
	DQ	FLAT:??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z$rtcName$0
	ORG $+48
??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z$rtcFrameData DD 01H ; std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_3b1a155f3d9af5183301fdeff6995007> >
	DD	00H
	DQ	FLAT:??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEAA@AEBQEBD0@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???R<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEBA_NUhookData@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??R<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEBA_NUhookData@@@Z DB 06H
	DB	00H
	DB	00H
	DB	'F'
	DB	02H
	DB	0b0H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??R<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEBA_NUhookData@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???R<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEBA_NUhookData@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??R<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEBA_NUhookData@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??R<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEBA_NUhookData@@@Z
	DD	imagerel $ip2state$??R<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEBA_NUhookData@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEBA_NUhookData@@@Z DD 022311H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??R<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEBA_NUhookData@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z DB 08H
	DB	00H
	DB	00H
	DB	'|'
	DB	06H
	DB	091H, 03H
	DB	04H
	DB	01cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z DB 08H
	DB	0eH
	DD	imagerel ?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z
	DD	imagerel $ip2state$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z DD 033311H
	DD	01a011cH
	DD	07015H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z$rtcName$0 DB 05fH ; std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_1735d4f996bca40e44ec48ee134389dd> >
	DB	055H
	DB	046H
	DB	069H
	DB	072H
	DB	073H
	DB	074H
	DB	00H
	ORG $+8
??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z$rtcVarDesc DD 028H ; std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_1735d4f996bca40e44ec48ee134389dd> >
	DD	08H
	DQ	FLAT:??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z$rtcName$0
	ORG $+48
??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z$rtcFrameData DD 01H ; std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_1735d4f996bca40e44ec48ee134389dd> >
	DD	00H
	DQ	FLAT:??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEAA@AEBQEAX@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???R<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEBA_NUhookData@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??R<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEBA_NUhookData@@@Z DB 06H
	DB	00H
	DB	00H
	DB	'F'
	DB	02H
	DB	'\'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??R<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEBA_NUhookData@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???R<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEBA_NUhookData@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??R<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEBA_NUhookData@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??R<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEBA_NUhookData@@@Z
	DD	imagerel $ip2state$??R<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEBA_NUhookData@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEBA_NUhookData@@@Z DD 022311H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??R<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEBA_NUhookData@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z DB 08H
	DB	00H
	DB	00H
	DB	'|'
	DB	06H
	DB	091H, 03H
	DB	04H
	DB	01cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z DB 08H
	DB	0eH
	DD	imagerel ?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z
	DD	imagerel $ip2state$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z DD 033311H
	DD	01a011cH
	DD	07015H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z$rtcName$0 DB 05fH ; std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_831aa28b571b4242b9e704a94bc96691> >
	DB	055H
	DB	046H
	DB	069H
	DB	072H
	DB	073H
	DB	074H
	DB	00H
	ORG $+8
??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z$rtcVarDesc DD 028H ; std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_831aa28b571b4242b9e704a94bc96691> >
	DD	08H
	DQ	FLAT:??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z$rtcName$0
	ORG $+48
??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z$rtcFrameData DD 01H ; std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_831aa28b571b4242b9e704a94bc96691> >
	DD	00H
	DQ	FLAT:??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0<lambda_831aa28b571b4242b9e704a94bc96691>@@QEAA@AEBQEBD0@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???R<lambda_831aa28b571b4242b9e704a94bc96691>@@QEBA_NUhookData@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??R<lambda_831aa28b571b4242b9e704a94bc96691>@@QEBA_NUhookData@@@Z DB 06H
	DB	00H
	DB	00H
	DB	'F'
	DB	02H
	DB	0b0H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??R<lambda_831aa28b571b4242b9e704a94bc96691>@@QEBA_NUhookData@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???R<lambda_831aa28b571b4242b9e704a94bc96691>@@QEBA_NUhookData@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??R<lambda_831aa28b571b4242b9e704a94bc96691>@@QEBA_NUhookData@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??R<lambda_831aa28b571b4242b9e704a94bc96691>@@QEBA_NUhookData@@@Z
	DD	imagerel $ip2state$??R<lambda_831aa28b571b4242b9e704a94bc96691>@@QEBA_NUhookData@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_831aa28b571b4242b9e704a94bc96691>@@QEBA_NUhookData@@@Z DD 022311H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??R<lambda_831aa28b571b4242b9e704a94bc96691>@@QEBA_NUhookData@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
	DD	imagerel $ip2state$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z
	DD	imagerel $ip2state$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z DD 022811H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
	DD	imagerel $ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAAXPEBUhookData@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@1@0@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAXAEBV12@@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBA_NAEBV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBA_NAEBV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEBUhookData@@XZ DD 021e01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	'<'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z
	DD	imagerel $ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z DD 022811H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UhookData@@@std@@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UhookData@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UhookData@@@std@@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UhookData@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAAEBV?$allocator@UhookData@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAAEAV?$allocator@UhookData@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	0faH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z DB 08H
	DD	imagerel $stateUnwindMap$?_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z
	DD	imagerel $ip2state$?_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z DD 022811H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z$rtcName$0 DB 05fH ; std::vector<hookData,std::allocator<hookData> >::_Orphan_range
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z$rtcVarDesc DD 024H ; std::vector<hookData,std::allocator<hookData> >::_Orphan_range
	DD	04H
	DQ	FLAT:?_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z$rtcName$0
	ORG $+48
?_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z$rtcFrameData DD 01H ; std::vector<hookData,std::allocator<hookData> >::_Orphan_range
	DD	00H
	DQ	FLAT:?_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXQEAUhookData@@_K1@Z DD 022d01H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBA_K_K@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@00@Z DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept1@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@00U?$integral_constant@_N$00@2@@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAPEAUhookData@@PEAU3@00@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ DB 04H
	DB	00H
	DB	00H
	DB	0aeH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ DB 048H
	DD	imagerel $stateUnwindMap$?end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ
	DD	imagerel $ip2state$?end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ DB 04H
	DB	00H
	DB	00H
	DB	0aeH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ DB 048H
	DD	imagerel $stateUnwindMap$?begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ
	DD	imagerel $ip2state$?begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?clear@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?clear@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXXZ DB 040H
	DD	imagerel $ip2state$?clear@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?clear@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z DB 06H
	DB	00H
	DB	00H
	DB	'`'
	DB	04H
	DB	'!', 06H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0??erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z DB 08H
	DD	imagerel $stateUnwindMap$?erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z
	DD	imagerel $ip2state$?erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z DD 022811H
	DD	07010b214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXAEBUhookData@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<hookData,std::allocator<hookData> >::~vector<hookData,std::allocator<hookData> >
	DB	053H
	DB	031H
	DB	00H
	ORG $+12
??1?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<hookData,std::allocator<hookData> >::~vector<hookData,std::allocator<hookData> >
	DD	01H
	DQ	FLAT:??1?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<hookData,std::allocator<hookData> >::~vector<hookData,std::allocator<hookData> >
	DD	00H
	DQ	FLAT:??1?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??0?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SA_KAEBV?$allocator@UhookData@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@UhookData@@@std@@QEAAPEAUhookData@@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UhookData@@@std@@QEAAXQEAUhookData@@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@UhookData@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
CONST	SEGMENT
	ORG $+2
?hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z$rtcName$0 DB 068H ; apihook::hook
	DB	06fH
	DB	06fH
	DB	06bH
	DB	00H
	ORG $+3
?hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z$rtcVarDesc DD 030H ; apihook::hook
	DD	068H
	DQ	FLAT:?hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z$rtcName$0
	ORG $+48
?hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z$rtcFrameData DD 01H ; apihook::hook
	DD	00H
	DQ	FLAT:?hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z$rtcVarDesc
?fin@apihook@@QEAAXPEBD0@Z$rtcName$0 DB 068H		; apihook::fin
	DB	06fH
	DB	06fH
	DB	06bH
	DB	00H
	ORG $+3
?fin@apihook@@QEAAXPEBD0@Z$rtcFrameData DD 01H		; apihook::fin
	DD	00H
	DQ	FLAT:?fin@apihook@@QEAAXPEBD0@Z$rtcVarDesc
?fin@apihook@@QEAAXPEAX@Z$rtcName$0 DB 068H		; apihook::fin
	DB	06fH
	DB	06fH
	DB	06bH
	DB	00H
	ORG $+3
?fin@apihook@@QEAAXPEBD0@Z$rtcVarDesc DD 028H		; apihook::fin
	DD	018H
	DQ	FLAT:?fin@apihook@@QEAAXPEBD0@Z$rtcName$0
	ORG $+48
?fin@apihook@@QEAAXPEAX@Z$rtcVarDesc DD 028H		; apihook::fin
	DD	018H
	DQ	FLAT:?fin@apihook@@QEAAXPEAX@Z$rtcName$0
	ORG $+48
?fin@apihook@@QEAAXPEAX@Z$rtcFrameData DD 01H		; apihook::fin
	DD	00H
	DQ	FLAT:?fin@apihook@@QEAAXPEAX@Z$rtcVarDesc
?get_orig@apihook@@QEAAPEAXPEBD0@Z$rtcName$0 DB 068H	; apihook::get_orig
	DB	06fH
	DB	06fH
	DB	06bH
	DB	00H
	ORG $+3
?get_orig@apihook@@QEAAPEAXPEBD0@Z$rtcFrameData DD 01H	; apihook::get_orig
	DD	00H
	DQ	FLAT:?get_orig@apihook@@QEAAPEAXPEBD0@Z$rtcVarDesc
?hook_function@apihook@@CAPEAXPEBD0PEAX@Z$rtcName$0 DB 06eH ; apihook::hook_function
	DB	053H
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+2
?get_orig@apihook@@QEAAPEAXPEBD0@Z$rtcVarDesc DD 028H	; apihook::get_orig
	DD	018H
	DQ	FLAT:?get_orig@apihook@@QEAAPEAXPEBD0@Z$rtcName$0
	ORG $+48
?hook_function@apihook@@CAPEAXPEBD0PEAX@Z$rtcName$1 DB 064H ; apihook::hook_function
	DB	077H
	DB	04fH
	DB	06cH
	DB	064H
	DB	050H
	DB	072H
	DB	06fH
	DB	074H
	DB	065H
	DB	063H
	DB	074H
	DB	00H
	ORG $+3
?hook_function@apihook@@CAPEAXPEBD0PEAX@Z$rtcVarDesc DD 084H ; apihook::hook_function
	DD	04H
	DQ	FLAT:?hook_function@apihook@@CAPEAXPEBD0PEAX@Z$rtcName$1
	DD	044H
	DD	04H
	DQ	FLAT:?hook_function@apihook@@CAPEAXPEBD0PEAX@Z$rtcName$0
	ORG $+96
?hook_function@apihook@@CAPEAXPEBD0PEAX@Z$rtcFrameData DD 02H ; apihook::hook_function
	DD	00H
	DQ	FLAT:?hook_function@apihook@@CAPEAXPEBD0PEAX@Z$rtcVarDesc
CONST	ENDS
xdata	SEGMENT
$unwind$??0apihook@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0apihook@@QEAA@XZ
$cppxdata$??0apihook@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0apihook@@QEAA@XZ
	DD	imagerel $ip2state$??0apihook@@QEAA@XZ
$stateUnwindMap$??0apihook@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0apihook@@QEAA@XZ@4HA
$ip2state$??0apihook@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
$cppxdata$??1apihook@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1apihook@@QEAA@XZ
	DD	imagerel $ip2state$??1apihook@@QEAA@XZ
$cppxdata$?hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z DB 08H
	DD	imagerel $stateUnwindMap$?hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z
	DD	imagerel $ip2state$?hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z
$unwind$?dtor$0@?0???0apihook@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$??1apihook@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1apihook@@QEAA@XZ
$stateUnwindMap$??1apihook@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1apihook@@QEAA@XZ@4HA
$ip2state$??1apihook@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'<'
	DB	02H
	DB	016H
	DB	00H
$stateUnwindMap$?hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z@4HA
$cppxdata$?fin@apihook@@QEAAXPEBD0@Z DB 08H
	DD	imagerel $stateUnwindMap$?fin@apihook@@QEAAXPEBD0@Z
	DD	imagerel $ip2state$?fin@apihook@@QEAAXPEBD0@Z
$unwind$?dtor$0@?0???1apihook@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z DD 034519H
	DD	01a011cH
	DD	07015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z
	DD	0c2H
$ip2state$?hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z DB 0aH
	DB	00H
	DB	00H
	DB	0a0H
	DB	02H
	DB	'%', 02H
	DB	00H
	DB	'&'
	DB	02H
	DB	09cH
	DB	00H
$unwind$?dtor$0@?0??hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?print_all_func@apihook@@SAXXZ DD 021501H
	DD	070023206H
$unwind$?fin@apihook@@QEAAXXZ DD 021e01H
	DD	07006920aH
$unwind$?fin@apihook@@QEAAXPEBD0@Z DD 042f11H
	DD	02b0118H
	DD	060107011H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?fin@apihook@@QEAAXPEBD0@Z
$stateUnwindMap$?fin@apihook@@QEAAXPEBD0@Z DB 0aH
	DB	0eH
	DD	imagerel ?dtor$0@?0??fin@apihook@@QEAAXPEBD0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??fin@apihook@@QEAAXPEBD0@Z@4HA
	DB	05eH
	DD	imagerel ?dtor$2@?0??fin@apihook@@QEAAXPEBD0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0??fin@apihook@@QEAAXPEBD0@Z@4HA
	DB	056H
	DD	imagerel ?dtor$4@?0??fin@apihook@@QEAAXPEBD0@Z@4HA
$ip2state$?fin@apihook@@QEAAXPEBD0@Z DB 012H
	DB	00H
	DB	00H
	DB	089H, 02H
	DB	02H
	DB	'`'
	DB	00H
	DB	'F'
	DB	06H
	DB	'`'
	DB	08H
	DB	'2'
	DB	06H
	DB	0cdH, 03H
	DB	0aH
	DB	010H
	DB	06H
	DB	'L'
	DB	00H
$cppxdata$?fin@apihook@@QEAAXPEAX@Z DB 08H
	DD	imagerel $stateUnwindMap$?fin@apihook@@QEAAXPEAX@Z
	DD	imagerel $ip2state$?fin@apihook@@QEAAXPEAX@Z
$unwind$?dtor$0@?0??fin@apihook@@QEAAXPEBD0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??fin@apihook@@QEAAXPEBD0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??fin@apihook@@QEAAXPEBD0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0??fin@apihook@@QEAAXPEBD0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0??fin@apihook@@QEAAXPEBD0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?fin@apihook@@QEAAXPEAX@Z DD 032911H
	DD	0280112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?fin@apihook@@QEAAXPEAX@Z
$stateUnwindMap$?fin@apihook@@QEAAXPEAX@Z DB 0aH
	DB	0eH
	DD	imagerel ?dtor$0@?0??fin@apihook@@QEAAXPEAX@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??fin@apihook@@QEAAXPEAX@Z@4HA
	DB	05eH
	DD	imagerel ?dtor$2@?0??fin@apihook@@QEAAXPEAX@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0??fin@apihook@@QEAAXPEAX@Z@4HA
	DB	056H
	DD	imagerel ?dtor$4@?0??fin@apihook@@QEAAXPEAX@Z@4HA
$ip2state$?fin@apihook@@QEAAXPEAX@Z DB 012H
	DB	00H
	DB	00H
	DB	'M', 02H
	DB	02H
	DB	'`'
	DB	00H
	DB	'L'
	DB	06H
	DB	'`'
	DB	08H
	DB	'2'
	DB	06H
	DB	'y', 03H
	DB	0aH
	DB	010H
	DB	06H
	DB	'L'
	DB	00H
$cppxdata$?get_orig@apihook@@QEAAPEAXPEBD0@Z DB 08H
	DD	imagerel $stateUnwindMap$?get_orig@apihook@@QEAAPEAXPEBD0@Z
	DD	imagerel $ip2state$?get_orig@apihook@@QEAAPEAXPEBD0@Z
$unwind$?dtor$0@?0??fin@apihook@@QEAAXPEAX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??fin@apihook@@QEAAXPEAX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??fin@apihook@@QEAAXPEAX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0??fin@apihook@@QEAAXPEAX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0??fin@apihook@@QEAAXPEAX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?get_orig@apihook@@QEAAPEAXPEBD0@Z DD 042f11H
	DD	0230118H
	DD	060107011H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?get_orig@apihook@@QEAAPEAXPEBD0@Z
$stateUnwindMap$?get_orig@apihook@@QEAAPEAXPEBD0@Z DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA
	DB	05eH
	DD	imagerel ?dtor$2@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA
$ip2state$?get_orig@apihook@@QEAAPEAXPEBD0@Z DB 0eH
	DB	00H
	DB	00H
	DB	089H, 02H
	DB	02H
	DB	'`'
	DB	00H
	DB	'F'
	DB	06H
	DB	'`'
	DB	08H
	DB	09aH
	DB	06H
	DB	01cH
	DB	00H
	ORG $+3
$unwind$?dtor$0@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?hook_function@apihook@@CAPEAXPEBD0PEAX@Z DD 032e01H
	DD	0160117H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GhookData@@QEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4hookData@@QEAAAEAU0@$$QEAU0@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0hookData@@QEAA@$$QEAU0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0hookData@@QEAA@$$QEAU0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0hookData@@QEAA@$$QEAU0@@Z DB 08H
	DB	00H
	DB	00H
	DB	'l'
	DB	02H
	DB	'6'
	DB	04H
	DB	'l'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0hookData@@QEAA@$$QEAU0@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0hookData@@QEAA@$$QEAU0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0hookData@@QEAA@$$QEAU0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0hookData@@QEAA@$$QEAU0@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0hookData@@QEAA@$$QEAU0@@Z
	DD	imagerel $ip2state$??0hookData@@QEAA@$$QEAU0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0hookData@@QEAA@$$QEAU0@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0hookData@@QEAA@$$QEAU0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0hookData@@QEAA@AEBU0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0hookData@@QEAA@AEBU0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0hookData@@QEAA@AEBU0@@Z DB 08H
	DB	00H
	DB	00H
	DB	'l'
	DB	02H
	DB	'6'
	DB	04H
	DB	'l'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0hookData@@QEAA@AEBU0@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0hookData@@QEAA@AEBU0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0hookData@@QEAA@AEBU0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0hookData@@QEAA@AEBU0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0hookData@@QEAA@AEBU0@@Z
	DD	imagerel $ip2state$??0hookData@@QEAA@AEBU0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0hookData@@QEAA@AEBU0@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0hookData@@QEAA@AEBU0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???1hookData@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1hookData@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1hookData@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'<'
	DB	02H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1hookData@@QEAA@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1hookData@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???1hookData@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1hookData@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1hookData@@QEAA@XZ
	DD	imagerel $ip2state$??1hookData@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1hookData@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1hookData@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0hookData@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0hookData@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0hookData@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'X'
	DB	02H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0hookData@@QEAA@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0hookData@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0hookData@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0hookData@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0hookData@@QEAA@XZ
	DD	imagerel $ip2state$??0hookData@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0hookData@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0hookData@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DB	04dH
	DB	061H
	DB	073H
	DB	06bH
	DB	065H
	DB	064H
	DB	00H
	ORG $+8
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcVarDesc DD 028H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DD	08H
	DQ	FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcName$0
	ORG $+48
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DD	00H
	DQ	FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NQEBD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NQEBD@Z DB 040H
	DD	imagerel $ip2state$?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NQEBD@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006b20aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DB	041H
	DB	06cH
	DB	06cH
	DB	06fH
	DB	063H
	DB	05fH
	DB	06dH
	DB	061H
	DB	078H
	DB	00H
	ORG $+5
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcVarDesc DD 028H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DD	08H
	DQ	FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcName$0
	ORG $+48
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DD	00H
	DQ	FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DB 040H
	DD	imagerel $ip2state$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'<'
	DB	02H
	DB	0aeH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 021e11H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	039H
	DB	00H
	ORG $+12
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	01H
	DQ	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD 022901H
	DD	0700bf212H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	061H
	DB	072H
	DB	072H
	DB	061H
	DB	079H
	DB	00H
	ORG $+5
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcVarDesc DD 058H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
	DD	08H
	DQ	FLAT:?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcName$0
	ORG $+48
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
	DD	00H
	DQ	FLAT:?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DB 040H
	DD	imagerel $ip2state$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DB 040H
	DD	imagerel $ip2state$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	094H
	DB	02H
	DB	09cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'b'
	DB	02H
	DB	'd'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DB 0aH
	DB	00H
	DB	00H
	DB	0b2H
	DB	02H
	DB	'~'
	DB	04H
	DB	'@'
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD 022911H
	DD	0700bf212H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	031H
	DB	032H
	DB	00H
	ORG $+3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcName$1 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcVarDesc DD 058H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	010H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcName$0
	ORG $+96
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcFrameData DD 02H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	't'
	DB	02H
	DB	'4'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@D@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 040H
	DD	imagerel $ip2state$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 040H
	DD	imagerel $ip2state$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DB 040H
	DD	imagerel $ip2state$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z DB 040H
	DD	imagerel $ip2state$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DB 0aH
	DB	00H
	DB	00H
	DB	0d0H
	DB	02H
	DB	088H
	DB	00H
	DB	'>'
	DB	04H
	DB	01cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
	DB	036H
	DD	imagerel ?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DB 048H
	DD	imagerel $stateUnwindMap$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
	DD	imagerel $ip2state$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD 022619H
	DD	0700bd20fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$0 DB 05fH ; std::_Iterator_base12::_Adopt
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+2
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$1 DB 05fH ; std::_Iterator_base12::_Adopt
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+2
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcVarDesc DD 054H ; std::_Iterator_base12::_Adopt
	DD	04H
	DQ	FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$1
	DD	034H
	DD	04H
	DQ	FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$0
	ORG $+96
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcFrameData DD 02H ; std::_Iterator_base12::_Adopt
	DD	00H
	DQ	FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Iterator_base12@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'^'
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1_Iterator_base12@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Iterator_base12@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1_Iterator_base12@std@@QEAA@XZ
	DD	imagerel $ip2state$??1_Iterator_base12@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Iterator_base12@std@@QEAA@XZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Iterator_base12@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1_Iterator_base12@std@@QEAA@XZ$rtcName$0 DB 05fH	; std::_Iterator_base12::~_Iterator_base12
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
??1_Iterator_base12@std@@QEAA@XZ$rtcVarDesc DD 024H	; std::_Iterator_base12::~_Iterator_base12
	DD	04H
	DQ	FLAT:??1_Iterator_base12@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1_Iterator_base12@std@@QEAA@XZ$rtcFrameData DD 01H	; std::_Iterator_base12::~_Iterator_base12
	DD	00H
	DQ	FLAT:??1_Iterator_base12@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DB 06H
	DB	00H
	DB	00H
	DB	0d2H
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
	DD	imagerel $ip2state$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DD 022319H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcName$0 DB 05fH ; std::_Iterator_base12::operator=
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcVarDesc DD 024H ; std::_Iterator_base12::operator=
	DD	04H
	DQ	FLAT:??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcName$0
	ORG $+48
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcFrameData DD 01H ; std::_Iterator_base12::operator=
	DD	00H
	DQ	FLAT:??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Iterator_base12@std@@QEAA@AEBU01@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Iterator_base12@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 06H
	DB	00H
	DB	00H
	DB	'h'
	DB	02H
	DB	0c0H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 048H
	DD	imagerel $stateUnwindMap$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
	DD	imagerel $ip2state$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DD 022319H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcName$0 DB 05fH ; std::_Container_base12::_Swap_proxy_and_iterators
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcVarDesc DD 024H ; std::_Container_base12::_Swap_proxy_and_iterators
	DD	04H
	DQ	FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcName$0
	ORG $+48
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcFrameData DD 01H ; std::_Container_base12::_Swap_proxy_and_iterators
	DD	00H
	DQ	FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	't'
	DB	02H
	DB	0a6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 048H
	DD	imagerel $stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	imagerel $ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all
	DD	04H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all
	DD	00H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Convert_size@_K@std@@YA_K_K@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 021501H
	DD	070027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_array_new_length@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'`'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_alloc@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_alloc@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@AEAA@QEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DB 040H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception@std@@QEAA@AEBV01@@Z DB 040H
	DD	imagerel $ip2state$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$printf DD 022d01H
	DD	070159219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
printf$rtcName$0 DB 05fH
	DB	041H
	DB	072H
	DB	067H
	DB	04cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+7
printf$rtcVarDesc DD 038H
	DD	08H
	DQ	FLAT:printf$rtcName$0
	ORG $+48
printf$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:printf$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vfprintf_l DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__local_stdio_printf_options DD 010201H
	DD	07002H
xdata	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@UhookData@@U1@@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SAXAEAV?$allocator@UhookData@@@1@QEAUhookData@@$$QEAU3@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@UhookData@@U1@@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SAXAEAV?$allocator@UhookData@@@1@QEAUhookData@@$$QEAU3@@Z PROC ; std::_Default_allocator_traits<std::allocator<hookData> >::construct<hookData,hookData>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00028	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	b9 68 00 00 00	 mov	 ecx, 104		; 00000068H
  00032	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00037	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00041	e8 00 00 00 00	 call	 ??$forward@UhookData@@@std@@YA$$QEAUhookData@@AEAU1@@Z ; std::forward<hookData>
  00046	48 8b d0	 mov	 rdx, rax
  00049	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004e	e8 00 00 00 00	 call	 ??0hookData@@QEAA@$$QEAU0@@Z

; 759  :     }

  00053	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
??$construct@UhookData@@U1@@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SAXAEAV?$allocator@UhookData@@@1@QEAUhookData@@$$QEAU3@@Z ENDP ; std::_Default_allocator_traits<std::allocator<hookData> >::construct<hookData,hookData>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@UhookData@@@std@@YA$$QEAUhookData@@AEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@UhookData@@@std@@YA$$QEAUhookData@@AEAU1@@Z PROC ; std::forward<hookData>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@UhookData@@@std@@YA$$QEAUhookData@@AEAU1@@Z ENDP ; std::forward<hookData>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Refancy@PEAUhookData@@$0A@@std@@YAPEAUhookData@@PEAU1@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Refancy@PEAUhookData@@$0A@@std@@YAPEAUhookData@@PEAU1@@Z PROC ; std::_Refancy<hookData *,0>, COMDAT

; 315  : _Pointer _Refancy(_Pointer _Ptr) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 316  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 317  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Refancy@PEAUhookData@@$0A@@std@@YAPEAUhookData@@PEAU1@@Z ENDP ; std::_Refancy<hookData *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Emplace_back@UhookData@@@?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAAX$$QEAUhookData@@@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@UhookData@@@?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAAX$$QEAUhookData@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<hookData> >::_Emplace_back<hookData>, COMDAT

; 1580 :     void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1581 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Vals_0>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@UhookData@@@std@@YA$$QEAUhookData@@AEAU1@@Z ; std::forward<hookData>
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv64[rsp], rax
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	e8 00 00 00 00	 call	 ??$_Unfancy@UhookData@@@std@@YAPEAUhookData@@PEAU1@@Z ; std::_Unfancy<hookData>
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv64[rsp]
  00045	4c 8b c1	 mov	 r8, rcx
  00048	48 8b d0	 mov	 rdx, rax
  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00054	e8 00 00 00 00	 call	 ??$construct@UhookData@@U1@@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SAXAEAV?$allocator@UhookData@@@1@QEAUhookData@@$$QEAU3@@Z ; std::_Default_allocator_traits<std::allocator<hookData> >::construct<hookData,hookData>

; 1582 :         ++_Last;

  00059	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00062	48 83 c0 68	 add	 rax, 104		; 00000068H
  00066	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006b	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1583 :     }

  0006f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00073	5f		 pop	 rdi
  00074	c3		 ret	 0
??$_Emplace_back@UhookData@@@?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAAX$$QEAUhookData@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<hookData> >::_Emplace_back<hookData>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<hookData> >::_Release, COMDAT

; 1585 :     pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1586 :         _First = _Last;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00010	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00014	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1587 :         return _Last;

  00017	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1588 :     }

  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
?_Release@?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<hookData> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<hookData> >::~_Uninitialized_backout_al<std::allocator<hookData> >, COMDAT

; 1575 :     ~_Uninitialized_backout_al() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1576 :         _Destroy_range(_First, _Last, _Al);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	4c 8b 40 10	 mov	 r8, QWORD PTR [rax+16]
  00027	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00038	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@UhookData@@@std@@@std@@YAXPEAUhookData@@QEAU1@AEAV?$allocator@UhookData@@@0@@Z ; std::_Destroy_range<std::allocator<hookData> >

; 1577 :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<hookData> >::~_Uninitialized_backout_al<std::allocator<hookData> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAA@PEAUhookData@@AEAV?$allocator@UhookData@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAA@PEAUhookData@@AEAV?$allocator@UhookData@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<hookData> >::_Uninitialized_backout_al<std::allocator<hookData> >, COMDAT

; 1570 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00027	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  0002b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00035	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00039	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
??0?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAA@PEAUhookData@@AEAV?$allocator@UhookData@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<hookData> >::_Uninitialized_backout_al<std::allocator<hookData> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@UhookData@@@std@@YAPEAUhookData@@QEAU1@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Get_unwrapped@UhookData@@@std@@YAPEAUhookData@@QEAU1@@Z PROC ; std::_Get_unwrapped<hookData>, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 276  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 277  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Get_unwrapped@UhookData@@@std@@YAPEAUhookData@@QEAU1@@Z ENDP ; std::_Get_unwrapped<hookData>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z PROC		; std::forward<char * const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ENDP		; std::forward<char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z PROC		; std::addressof<char *>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 751  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 752  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 753  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00028	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 754  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z
_TEXT	SEGMENT
_Left$ = 48
_Right$ = 56
??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z PROC ; std::_Pocma<std::allocator<char> >, COMDAT

; 968  : void _Pocma(_Alloc& _Left, _Alloc& _Right) noexcept { // (maybe) propagate on container move assignment

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 969  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_move_assignment::value) {
; 970  :         _Left = _STD move(_Right);

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>

; 971  :     } else {
; 972  :         (void) _Left; // TRANSITION, VSO#486357
; 973  :         (void) _Right; // TRANSITION, VSO#486357
; 974  :     }
; 975  : }

  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z ENDP ; std::_Pocma<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$00@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 0
_Count$ = 32
??$_Get_size_of_n@$00@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<1>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 04 24 00	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 0

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 30   :             if (_Count > _Max_possible) {
; 31   :                 _Throw_bad_array_new_length(); // multiply overflow
; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00022	48 8b 44 24 20	 mov	 rax, QWORD PTR _Count$[rsp]

; 36   : }

  00027	48 83 c4 10	 add	 rsp, 16
  0002b	5f		 pop	 rdi
  0002c	c3		 ret	 0
??$_Get_size_of_n@$00@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z PROC ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ENDP ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z
_TEXT	SEGMENT
tv70 = 32
_Left$ = 64
_Left_size$ = 72
_Right$ = 80
_Right_size$ = 88
??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z PROC ; std::_Traits_equal<std::char_traits<char> >, COMDAT

; 512  :     _In_reads_(_Right_size) const _Traits_ptr_t<_Traits> _Right, const size_t _Right_size) noexcept {

$LN5:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 513  :     // compare [_Left, _Left + _Left_size) to [_Right, _Right + _Right_size) for equality using _Traits
; 514  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

  0002d	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right_size$[rsp]
  00032	48 39 44 24 48	 cmp	 QWORD PTR _Left_size$[rsp], rax
  00037	75 22		 jne	 SHORT $LN3@Traits_equ
  00039	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Left_size$[rsp]
  0003e	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Right$[rsp]
  00043	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Left$[rsp]
  00048	e8 00 00 00 00	 call	 ?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z ; std::_Narrow_char_traits<char,int>::compare
  0004d	85 c0		 test	 eax, eax
  0004f	75 0a		 jne	 SHORT $LN3@Traits_equ
  00051	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv70[rsp], 1
  00059	eb 08		 jmp	 SHORT $LN4@Traits_equ
$LN3@Traits_equ:
  0005b	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv70[rsp], 0
$LN4@Traits_equ:
  00063	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv70[rsp]

; 515  : }

  00068	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006c	5f		 pop	 rdi
  0006d	c3		 ret	 0
??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z ENDP ; std::_Traits_equal<std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0GI@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0GI@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<104>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 76 62 27
	76 62 27 76 02	 mov	 rax, 177372539170284150	; 0276276276276276H
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 76 62 27
	76 62 27 76 02	 mov	 rax, 177372539170284150	; 0276276276276276H
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 6b 44 24 40
	68		 imul	 rax, QWORD PTR _Count$[rsp], 104 ; 00000068H
$LN3@Get_size_o:

; 36   : }

  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Get_size_of_n@$0GI@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<104>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Min_value<unsigned __int64>, COMDAT

; 25   :     _NOEXCEPT_COND(noexcept(_Right < _Left)) { // return smaller of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 26   :     return _Right < _Left ? _Right : _Left;

  00023	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Left$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	73 0c		 jae	 SHORT $LN3@Min_value
  00035	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
  0003f	eb 0a		 jmp	 SHORT $LN4@Min_value
$LN3@Min_value:
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00046	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
$LN4@Min_value:
  0004b	48 8b 44 24 08	 mov	 rax, QWORD PTR tv65[rsp]
  00050	48 89 04 24	 mov	 QWORD PTR $T1[rsp], rax
  00054	48 8b 04 24	 mov	 rax, QWORD PTR $T1[rsp]

; 27   : }

  00058	48 83 c4 10	 add	 rsp, 16
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Min_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z PROC ; std::_Uninitialized_move<hookData *,std::allocator<hookData> >, COMDAT

; 1729 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 1730 :     // move [_First, _Last) to raw _Dest, using _Al
; 1731 :     // note: only called internally from elsewhere in the STL
; 1732 :     using _Ptrval     = typename _Alloc::value_type*;
; 1733 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _First$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Get_unwrapped@UhookData@@@std@@YAPEAUhookData@@QEAU1@@Z ; std::_Get_unwrapped<hookData>
  00037	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax

; 1734 :     const auto _ULast = _Get_unwrapped(_Last);

  0003c	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Last$[rsp]
  00041	e8 00 00 00 00	 call	 ??$_Get_unwrapped@UhookData@@@std@@YAPEAUhookData@@QEAU1@@Z ; std::_Get_unwrapped<hookData>
  00046	48 89 44 24 28	 mov	 QWORD PTR _ULast$[rsp], rax

; 1735 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1736 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1737 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1738 :         return _Dest + (_ULast - _UFirst);
; 1739 :         (void) _Al;
; 1740 :     } else {
; 1741 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

  0004b	4c 8b 84 24 88
	00 00 00	 mov	 r8, QWORD PTR _Al$[rsp]
  00053	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Dest$[rsp]
  0005b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00060	e8 00 00 00 00	 call	 ??0?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAA@PEAUhookData@@AEAV?$allocator@UhookData@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<hookData> >::_Uninitialized_backout_al<std::allocator<hookData> >
  00065	90		 npad	 1

; 1742 :         for (; _UFirst != _ULast; ++_UFirst) {

  00066	eb 0e		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  00068	48 8b 44 24 20	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0006d	48 83 c0 68	 add	 rax, 104		; 00000068H
  00071	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
  00076	48 8b 44 24 28	 mov	 rax, QWORD PTR _ULast$[rsp]
  0007b	48 39 44 24 20	 cmp	 QWORD PTR _UFirst$[rsp], rax
  00080	74 19		 je	 SHORT $LN3@Uninitiali

; 1743 :             _Backout._Emplace_back(_STD move(*_UFirst));

  00082	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _UFirst$[rsp]
  00087	e8 00 00 00 00	 call	 ??$move@AEAUhookData@@@std@@YA$$QEAUhookData@@AEAU1@@Z ; std::move<hookData &>
  0008c	48 8b d0	 mov	 rdx, rax
  0008f	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00094	e8 00 00 00 00	 call	 ??$_Emplace_back@UhookData@@@?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAAX$$QEAUhookData@@@Z ; std::_Uninitialized_backout_al<std::allocator<hookData> >::_Emplace_back<hookData>

; 1744 :         }

  00099	eb cd		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1745 : 
; 1746 :         return _Backout._Release();

  0009b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  000a0	e8 00 00 00 00	 call	 ?_Release@?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@XZ ; std::_Uninitialized_backout_al<std::allocator<hookData> >::_Release
  000a5	48 89 44 24 58	 mov	 QWORD PTR $T5[rsp], rax
  000aa	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  000af	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<hookData> >::~_Uninitialized_backout_al<std::allocator<hookData> >
  000b4	48 8b 44 24 58	 mov	 rax, QWORD PTR $T5[rsp]

; 1747 :     }
; 1748 : }

  000b9	48 8b f8	 mov	 rdi, rax
  000bc	48 8b cc	 mov	 rcx, rsp
  000bf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z$rtcFrameData
  000c6	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000cb	48 8b c7	 mov	 rax, rdi
  000ce	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000d2	5f		 pop	 rdi
  000d3	c3		 ret	 0
??$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z ENDP ; std::_Uninitialized_move<hookData *,std::allocator<hookData> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<hookData *,std::allocator<hookData> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<hookData> >::~_Uninitialized_backout_al<std::allocator<hookData> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<hookData *,std::allocator<hookData> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<hookData *,std::allocator<hookData> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<hookData> >::~_Uninitialized_backout_al<std::allocator<hookData> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<hookData *,std::allocator<hookData> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 48
_Ptr_container$ = 56
_Ptr$ = 64
_Bytes$ = 96
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 83   : _DECLSPEC_ALLOCATOR void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 84   :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 85   :     const size_t _Block_size = _Non_user_size + _Bytes;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00023	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  00027	48 89 44 24 30	 mov	 QWORD PTR _Block_size$[rsp], rax

; 86   :     if (_Block_size <= _Bytes) {

  0002c	48 8b 44 24 60	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00031	48 39 44 24 30	 cmp	 QWORD PTR _Block_size$[rsp], rax
  00036	77 05		 ja	 SHORT $LN8@Allocate_m

; 87   :         _Throw_bad_array_new_length(); // add overflow

  00038	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 88   :     }
; 89   : 
; 90   :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Block_size$[rsp]
  00042	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00047	48 89 44 24 38	 mov	 QWORD PTR _Ptr_container$[rsp], rax
$LN4@Allocate_m:

; 91   :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0004c	48 83 7c 24 38
	00		 cmp	 QWORD PTR _Ptr_container$[rsp], 0
  00052	74 02		 je	 SHORT $LN9@Allocate_m
  00054	eb 6b		 jmp	 SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
  00056	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG119784
  0005d	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00062	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG119785
  00069	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0006e	45 33 c9	 xor	 r9d, r9d
  00071	41 b8 5b 00 00
	00		 mov	 r8d, 91			; 0000005bH
  00077	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG119786
  0007e	b9 02 00 00 00	 mov	 ecx, 2
  00083	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 03		 jne	 SHORT $LN12@Allocate_m
  0008e	cc		 int	 3
  0008f	33 c0		 xor	 eax, eax
$LN12@Allocate_m:
  00091	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0009a	41 b9 5b 00 00
	00		 mov	 r9d, 91			; 0000005bH
  000a0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG119787
  000a7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG119788
  000ae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG119789
  000b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000bb	33 c0		 xor	 eax, eax
  000bd	85 c0		 test	 eax, eax
  000bf	75 95		 jne	 SHORT $LN7@Allocate_m
$LN10@Allocate_m:
  000c1	33 c0		 xor	 eax, eax
  000c3	85 c0		 test	 eax, eax
  000c5	75 85		 jne	 SHORT $LN4@Allocate_m

; 92   :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  000c7	48 8b 44 24 38	 mov	 rax, QWORD PTR _Ptr_container$[rsp]
  000cc	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  000d0	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H
  000d4	48 89 44 24 40	 mov	 QWORD PTR _Ptr$[rsp], rax

; 93   :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  000d9	b8 08 00 00 00	 mov	 eax, 8
  000de	48 6b c0 ff	 imul	 rax, rax, -1
  000e2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000e7	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr_container$[rsp]
  000ec	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 94   : 
; 95   : #ifdef _DEBUG
; 96   :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

  000f0	b8 08 00 00 00	 mov	 eax, 8
  000f5	48 6b c0 fe	 imul	 rax, rax, -2
  000f9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000fe	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  00108	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 97   : #endif // _DEBUG
; 98   :     return _Ptr;

  0010c	48 8b 44 24 40	 mov	 rax, QWORD PTR _Ptr$[rsp]
$LN11@Allocate_m:

; 99   : }

  00111	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00115	5f		 pop	 rdi
  00116	c3		 ret	 0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ; std::addressof<char *>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	b9 08 00 00 00	 mov	 ecx, 8
  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0003a	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ; std::forward<char * const &>
  00049	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00051	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00054	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::forward<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 1081 : void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1082 :     // deallocate a plain pointer using an allocator
; 1083 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1084 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1085 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

  00023	41 b8 01 00 00
	00		 mov	 r8d, 1
  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
  00038	90		 npad	 1

; 1086 :     } else {
; 1087 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1088 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1089 :     }
; 1090 : }

  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5f		 pop	 rdi
  0003e	c3		 ret	 0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAUhookData@@@std@@YA$$QEAUhookData@@AEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAUhookData@@@std@@YA$$QEAUhookData@@AEAU1@@Z PROC ; std::move<hookData &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAUhookData@@@std@@YA$$QEAUhookData@@AEAU1@@Z ENDP ; std::move<hookData &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@PEAUhookData@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@AEBQEAUhookData@@@Z
_TEXT	SEGMENT
_It$ = 48
_UIt$ = 56
??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@PEAUhookData@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@AEBQEAUhookData@@@Z PROC ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,hookData *>, COMDAT

; 415  : constexpr void _Seek_wrapped(_Iter& _It, const _UIter& _UIt) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 416  :     if constexpr (_Wrapped_seekable_v<_Iter, _UIter>) {
; 417  :         _It._Seek_to(_UIt);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _UIt$[rsp]
  00028	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0002b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _It$[rsp]
  00030	e8 00 00 00 00	 call	 ?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAAXPEBUhookData@@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Seek_to

; 418  :     } else {
; 419  :         _It = _UIt;
; 420  :     }
; 421  : }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@PEAUhookData@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@AEBQEAUhookData@@@Z ENDP ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,hookData *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@$0A@@std@@YAPEAUhookData@@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
_It$ = 48
??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@$0A@@std@@YAPEAUhookData@@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@@Z PROC ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,0>, COMDAT

; 257  : _NODISCARD constexpr auto _Get_unwrapped(const _Iter& _It) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 258  :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 259  :     return _It._Unwrapped();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _It$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Unwrapped

; 260  : }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@$0A@@std@@YAPEAUhookData@@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@@Z ENDP ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@0@Z PROC ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > > >, COMDAT

; 217  :     const _Iter& _First, const _Sentinel& _Last) { // check that [_First, _Last) forms an iterator range

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 218  :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 219  :         _Verify_range(_First, _Last);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Last$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@1@0@Z ; std::_Verify_range

; 220  :     } else {
; 221  :         (void) _First; // TRANSITION, VSO#486357
; 222  :         (void) _Last; // TRANSITION, VSO#486357
; 223  :     }
; 224  : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@0@Z ENDP ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > const >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Bytes$ = 56
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 183  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 184  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 185  : #if defined(_M_IX86) || defined(_M_X64)
; 186  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00023	48 81 7c 24 38
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  0002c	72 10		 jb	 SHORT $LN2@Deallocate

; 187  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  0002e	48 8d 54 24 38	 lea	 rdx, QWORD PTR _Bytes$[rsp]
  00033	48 8d 4c 24 30	 lea	 rcx, QWORD PTR _Ptr$[rsp]
  00038	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
  0003d	90		 npad	 1
$LN2@Deallocate:

; 188  :     }
; 189  : #endif // defined(_M_IX86) || defined(_M_X64)
; 190  : 
; 191  :     ::operator delete(_Ptr, _Bytes);

  0003e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Bytes$[rsp]
  00043	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00048	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0004d	90		 npad	 1

; 192  : }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 167  : _DECLSPEC_ALLOCATOR void* _Allocate(const size_t _Bytes) {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 168  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 169  : #if defined(_M_IX86) || defined(_M_X64)
; 170  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001e	48 81 7c 24 30
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  00027	72 0c		 jb	 SHORT $LN2@Allocate

; 171  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00029	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  0002e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00033	eb 16		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 172  :     }
; 173  : #endif // defined(_M_IX86) || defined(_M_X64)
; 174  : 
; 175  :     if (_Bytes != 0) {

  00035	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Bytes$[rsp], 0
  0003b	74 0c		 je	 SHORT $LN3@Allocate

; 176  :         return _Traits::_Allocate(_Bytes);

  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00042	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00047	eb 02		 jmp	 SHORT $LN1@Allocate
$LN3@Allocate:

; 177  :     }
; 178  : 
; 179  :     return nullptr;

  00049	33 c0		 xor	 eax, eax
$LN1@Allocate:

; 180  : }

  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
$LN3@Get_size_o:

; 36   : }

  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Max_value<unsigned __int64>, COMDAT

; 32   :     _NOEXCEPT_COND(noexcept(_Left < _Right)) { // return larger of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 33   :     return _Left < _Right ? _Right : _Left;

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00028	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	73 0c		 jae	 SHORT $LN3@Max_value
  00035	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
  0003f	eb 0a		 jmp	 SHORT $LN4@Max_value
$LN3@Max_value:
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00046	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
$LN4@Max_value:
  0004b	48 8b 44 24 08	 mov	 rax, QWORD PTR tv65[rsp]
  00050	48 89 04 24	 mov	 QWORD PTR $T1[rsp], rax
  00054	48 8b 04 24	 mov	 rax, QWORD PTR $T1[rsp]

; 34   : }

  00058	48 83 c4 10	 add	 rsp, 16
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Max_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@D@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@D@std@@YAPEADPEAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@D@std@@YAPEADPEAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
_TEXT	SEGMENT
_Old_capacity$ = 32
_New_capacity$ = 40
_Al$ = 48
_New_ptr$ = 72
this$ = 112
_New_size$ = 120
_Fn$ = 128
<_Args_0>$ = 136
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>, COMDAT

; 4082 :     basic_string& _Reallocate_for(const size_type _New_size, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 4083 :         // reallocate to store exactly _New_size elements, new buffer prepared by
; 4084 :         // _Fn(_New_ptr, _New_size, _Args...)
; 4085 :         if (_New_size > max_size()) {

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00037	48 39 44 24 78	 cmp	 QWORD PTR _New_size$[rsp], rax
  0003c	76 05		 jbe	 SHORT $LN2@Reallocate

; 4086 :             _Xlen(); // result too long

  0003e	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4087 :         }
; 4088 : 
; 4089 :         const size_type _Old_capacity = _Mypair._Myval2._Myres;

  00043	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0004c	48 89 44 24 20	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4090 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00051	48 8b 54 24 78	 mov	 rdx, QWORD PTR _New_size$[rsp]
  00056	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  00060	48 89 44 24 28	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4091 :         auto& _Al                     = _Getal();

  00065	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0006a	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0006f	48 89 44 24 30	 mov	 QWORD PTR _Al$[rsp], rax

; 4092 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  00079	48 ff c0	 inc	 rax
  0007c	48 8b d0	 mov	 rdx, rax
  0007f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  00084	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  00089	48 89 44 24 48	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4093 :         _Mypair._Myval2._Orphan_all();

  0008e	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00093	48 8b c8	 mov	 rcx, rax
  00096	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4094 :         _Mypair._Myval2._Mysize = _New_size;

  0009b	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000a0	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000a5	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4095 :         _Mypair._Myval2._Myres  = _New_capacity;

  000a9	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000ae	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000b3	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4096 :         _Fn(_Unfancy(_New_ptr), _New_size, _Args...);

  000b7	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  000bc	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  000c1	4c 8b 8c 24 88
	00 00 00	 mov	 r9, QWORD PTR <_Args_0>$[rsp]
  000c9	4c 8b 44 24 78	 mov	 r8, QWORD PTR _New_size$[rsp]
  000ce	48 8b d0	 mov	 rdx, rax
  000d1	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  000d9	e8 00 00 00 00	 call	 ??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()

; 4097 :         if (_BUF_SIZE <= _Old_capacity) {

  000de	48 83 7c 24 20
	10		 cmp	 QWORD PTR _Old_capacity$[rsp], 16
  000e4	72 2e		 jb	 SHORT $LN3@Reallocate

; 4098 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000e6	48 8b 44 24 20	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  000eb	48 ff c0	 inc	 rax
  000ee	4c 8b c0	 mov	 r8, rax
  000f1	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000f6	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  000fa	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  000ff	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4099 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  00104	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00109	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0010e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4100 :         } else {

  00112	eb 16		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4101 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  00114	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00119	48 83 c0 08	 add	 rax, 8
  0011d	48 8d 54 24 48	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  00122	48 8b c8	 mov	 rcx, rax
  00125	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4102 :         }
; 4103 : 
; 4104 :         return *this;

  0012a	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4105 :     }

  0012f	48 8b f8	 mov	 rdi, rax
  00132	48 8b cc	 mov	 rcx, rsp
  00135	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcFrameData
  0013c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00141	48 8b c7	 mov	 rax, rdi
  00144	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00148	5f		 pop	 rdi
  00149	c3		 ret	 0
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_New_ptr$ = 72
_Count$ = 80
_Ptr$ = 88
??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z PROC ; <lambda_66f57f934f28d61049862f64df852ff0>::operator(), COMDAT

; 2853 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2854 :                 _Traits::copy(_New_ptr, _Ptr, _Count);

  0002d	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Count$[rsp]
  00032	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0003c	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2855 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00041	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  00046	48 8b 44 24 50	 mov	 rax, QWORD PTR _Count$[rsp]
  0004b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00050	48 03 c8	 add	 rcx, rax
  00053	48 8b c1	 mov	 rax, rcx
  00056	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  0005b	48 8b c8	 mov	 rcx, rax
  0005e	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2856 :             },

  00063	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00067	5f		 pop	 rdi
  00068	c3		 ret	 0
??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z ENDP ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
_TEXT	SEGMENT
_Obj$ = 16
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z PROC	; std::_Destroy_in_place<char *>, COMDAT

; 321  : void _Destroy_in_place(_Ty& _Obj) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 322  :     _Obj.~_Ty();
; 323  : }

  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ENDP	; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UhookData@@@std@@@std@@YAXPEAUhookData@@QEAU1@AEAV?$allocator@UhookData@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$ = 64
??$_Destroy_range@V?$allocator@UhookData@@@std@@@std@@YAXPEAUhookData@@QEAU1@AEAV?$allocator@UhookData@@@0@@Z PROC ; std::_Destroy_range<std::allocator<hookData> >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {

  00028	eb 0e		 jmp	 SHORT $LN4@Destroy_ra
$LN2@Destroy_ra:
  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR _First$[rsp]
  0002f	48 83 c0 68	 add	 rax, 104		; 00000068H
  00033	48 89 44 24 30	 mov	 QWORD PTR _First$[rsp], rax
$LN4@Destroy_ra:
  00038	48 8b 44 24 38	 mov	 rax, QWORD PTR _Last$[rsp]
  0003d	48 39 44 24 30	 cmp	 QWORD PTR _First$[rsp], rax
  00042	74 1b		 je	 SHORT $LN3@Destroy_ra

; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));

  00044	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Unfancy@UhookData@@@std@@YAPEAUhookData@@PEAU1@@Z ; std::_Unfancy<hookData>
  0004e	90		 npad	 1
  0004f	48 8b d0	 mov	 rdx, rax
  00052	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Al$[rsp]
  00057	e8 00 00 00 00	 call	 ??$destroy@UhookData@@@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SAXAEAV?$allocator@UhookData@@@1@QEAUhookData@@@Z ; std::_Default_allocator_traits<std::allocator<hookData> >::destroy<hookData>
  0005c	90		 npad	 1

; 1039 :         }

  0005d	eb cb		 jmp	 SHORT $LN2@Destroy_ra
$LN3@Destroy_ra:

; 1040 :     }
; 1041 : }

  0005f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??$_Destroy_range@V?$allocator@UhookData@@@std@@@std@@YAXPEAUhookData@@QEAU1@AEAV?$allocator@UhookData@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<hookData> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	b9 10 00 00 00	 mov	 ecx, 16
  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0003a	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
  00049	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0004c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00051	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00056	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@XZ ; std::allocator<char>::allocator<char>
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  00039	90		 npad	 1
  0003a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> >
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  0003e	90		 npad	 1
  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z PROC ; std::move<std::allocator<char> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::move<std::allocator<char> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1382 :     ~_Container_proxy_ptr12() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1383 :         if (_Ptr) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 16		 je	 SHORT $LN2@Container_

; 1384 :             _Delete_plain_internal(_Al, _Ptr);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0003a	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
$LN2@Container_:

; 1385 :         }
; 1386 :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Al_$ = 72
_Mycont$ = 80
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1368 :     _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1369 :         : _Al(_Al_) { // create a new _Container_proxy pointing at _Mycont

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00032	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1370 :         _Ptr = _Unfancy(_Al_.allocate(1));

  00036	ba 01 00 00 00	 mov	 edx, 1
  0003b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00040	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00045	48 8b c8	 mov	 rcx, rax
  00048	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0004d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00052	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1371 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

  00055	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Mycont$[rsp]
  0005a	e8 00 00 00 00	 call	 ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
  0005f	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00064	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00069	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0006e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00071	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1372 :         _Mycont._Myproxy = _Ptr;

  00076	48 8b 44 24 50	 mov	 rax, QWORD PTR _Mycont$[rsp]
  0007b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00080	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00083	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1373 :     }

  00086	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0008b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
_New_proxy$ = 32
$T1 = 40
this$ = 64
_Al$ = 72
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT

; 1184 :     void _Alloc_proxy(_Alloc&& _Al) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1185 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

  00023	ba 01 00 00 00	 mov	 edx, 1
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al$[rsp]
  0002d	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0003a	48 89 44 24 20	 mov	 QWORD PTR _New_proxy$[rsp], rax

; 1186 :         _Construct_in_place(*_New_proxy, this);

  0003f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 89 44 24 28	 mov	 QWORD PTR $T1[rsp], rax
  00049	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T1[rsp]
  0004e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _New_proxy$[rsp]
  00053	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1187 :         _Myproxy            = _New_proxy;

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _New_proxy$[rsp]
  00062	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1188 :         _New_proxy->_Mycont = this;

  00065	48 8b 44 24 20	 mov	 rax, QWORD PTR _New_proxy$[rsp]
  0006a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1189 :     }

  00072	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@UhookData@@@std@@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@UhookData@@@std@@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<hookData>,std::_Vector_val<std::_Simple_types<hookData> >,1>::_Compressed_pair<std::allocator<hookData>,std::_Vector_val<std::_Simple_types<hookData> >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@UhookData@@@std@@QEAA@XZ ; std::allocator<hookData>::allocator<hookData>
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<hookData> >::_Vector_val<std::_Simple_types<hookData> >
  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@UhookData@@@std@@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<hookData>,std::_Vector_val<std::_Simple_types<hookData> >,1>::_Compressed_pair<std::allocator<hookData>,std::_Vector_val<std::_Simple_types<hookData> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1109 : void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1110 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1111 :     using _Ty = typename _Alloc::value_type;
; 1112 :     _Ptr->~_Ty();
; 1113 :     _Deallocate_plain(_Al, _Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >

; 1114 : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0UhookData@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UhookData@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0UhookData@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UhookData@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><hookData>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0UhookData@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UhookData@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><hookData>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ; std::_Get_size_of_n<16>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
??$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z PROC ; std::vector<hookData,std::allocator<hookData> >::_Emplace_reallocate<hookData const &>, COMDAT

; 676  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 677  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 678  :         _Alty& _Al        = _Getal();

  0002e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAAEAV?$allocator@UhookData@@@2@XZ ; std::vector<hookData,std::allocator<hookData> >::_Getal
  0003b	48 89 44 24 20	 mov	 QWORD PTR _Al$[rsp], rax

; 679  :         auto& _My_data    = _Mypair._Myval2;

  00040	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 89 44 24 28	 mov	 QWORD PTR _My_data$[rsp], rax

; 680  :         pointer& _Myfirst = _My_data._Myfirst;

  0004d	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00052	48 83 c0 08	 add	 rax, 8
  00056	48 89 44 24 30	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 681  :         pointer& _Mylast  = _My_data._Mylast;

  0005b	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00060	48 83 c0 10	 add	 rax, 16
  00064	48 89 44 24 38	 mov	 QWORD PTR _Mylast$[rsp], rax

; 682  : 
; 683  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 684  : 
; 685  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00069	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Whereptr$[rsp]
  00079	48 2b c8	 sub	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx
  0007f	48 99		 cdq
  00081	b9 68 00 00 00	 mov	 ecx, 104		; 00000068H
  00086	48 f7 f9	 idiv	 rcx
  00089	48 89 44 24 40	 mov	 QWORD PTR _Whereoff$[rsp], rax

; 686  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  0008e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00093	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00098	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0009b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0009e	48 2b c1	 sub	 rax, rcx
  000a1	48 99		 cdq
  000a3	b9 68 00 00 00	 mov	 ecx, 104		; 00000068H
  000a8	48 f7 f9	 idiv	 rcx
  000ab	48 89 44 24 48	 mov	 QWORD PTR _Oldsize$[rsp], rax

; 687  : 
; 688  :         if (_Oldsize == max_size()) {

  000b0	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000b8	e8 00 00 00 00	 call	 ?max_size@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEBA_KXZ ; std::vector<hookData,std::allocator<hookData> >::max_size
  000bd	48 39 44 24 48	 cmp	 QWORD PTR _Oldsize$[rsp], rax
  000c2	75 05		 jne	 SHORT $LN2@Emplace_re

; 689  :             _Xlength();

  000c4	e8 00 00 00 00	 call	 ?_Xlength@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@CAXXZ ; std::vector<hookData,std::allocator<hookData> >::_Xlength
$LN2@Emplace_re:

; 690  :         }
; 691  : 
; 692  :         const size_type _Newsize     = _Oldsize + 1;

  000c9	48 8b 44 24 48	 mov	 rax, QWORD PTR _Oldsize$[rsp]
  000ce	48 ff c0	 inc	 rax
  000d1	48 89 44 24 50	 mov	 QWORD PTR _Newsize$[rsp], rax

; 693  :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

  000d6	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  000db	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000e3	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBA_K_K@Z ; std::vector<hookData,std::allocator<hookData> >::_Calculate_growth
  000e8	48 89 44 24 58	 mov	 QWORD PTR _Newcapacity$[rsp], rax

; 694  : 
; 695  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

  000ed	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  000f2	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  000f7	e8 00 00 00 00	 call	 ?allocate@?$allocator@UhookData@@@std@@QEAAPEAUhookData@@_K@Z ; std::allocator<hookData>::allocate
  000fc	48 89 44 24 60	 mov	 QWORD PTR _Newvec$[rsp], rax

; 696  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  00101	48 6b 44 24 40
	68		 imul	 rax, QWORD PTR _Whereoff$[rsp], 104 ; 00000068H
  00107	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0010c	48 8d 44 01 68	 lea	 rax, QWORD PTR [rcx+rax+104]
  00111	48 89 44 24 68	 mov	 QWORD PTR _Constructed_last$[rsp], rax

; 697  :         pointer _Constructed_first      = _Constructed_last;

  00116	48 8b 44 24 68	 mov	 rax, QWORD PTR _Constructed_last$[rsp]
  0011b	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 698  : 
; 699  :         _TRY_BEGIN
; 700  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00120	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00128	e8 00 00 00 00	 call	 ??$forward@AEBUhookData@@@std@@YAAEBUhookData@@AEBU1@@Z ; std::forward<hookData const &>
  0012d	48 89 44 24 78	 mov	 QWORD PTR tv90[rsp], rax
  00132	48 6b 4c 24 40
	68		 imul	 rcx, QWORD PTR _Whereoff$[rsp], 104 ; 00000068H
  00138	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  0013d	48 03 d1	 add	 rdx, rcx
  00140	48 8b ca	 mov	 rcx, rdx
  00143	e8 00 00 00 00	 call	 ??$_Unfancy@UhookData@@@std@@YAPEAUhookData@@PEAU1@@Z ; std::_Unfancy<hookData>
  00148	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv90[rsp]
  0014d	4c 8b c1	 mov	 r8, rcx
  00150	48 8b d0	 mov	 rdx, rax
  00153	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  00158	e8 00 00 00 00	 call	 ??$construct@UhookData@@AEBU1@@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SAXAEAV?$allocator@UhookData@@@1@QEAUhookData@@AEBU3@@Z ; std::_Default_allocator_traits<std::allocator<hookData> >::construct<hookData,hookData const &>

; 701  :         _Constructed_first = _Newvec + _Whereoff;

  0015d	48 6b 44 24 40
	68		 imul	 rax, QWORD PTR _Whereoff$[rsp], 104 ; 00000068H
  00163	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  00168	48 03 c8	 add	 rcx, rax
  0016b	48 8b c1	 mov	 rax, rcx
  0016e	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 702  : 
; 703  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00173	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00178	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0017b	48 39 84 24 98
	00 00 00	 cmp	 QWORD PTR _Whereptr$[rsp], rax
  00183	75 24		 jne	 SHORT $LN4@Emplace_re

; 704  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  00185	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  0018a	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0018f	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00192	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00197	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0019a	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001a2	e8 00 00 00 00	 call	 ?_Umove_if_noexcept@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@00@Z ; std::vector<hookData,std::allocator<hookData> >::_Umove_if_noexcept

; 705  :         } else { // provide basic guarantee

  001a7	eb 5d		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 706  :             _Umove(_Myfirst, _Whereptr, _Newvec);

  001a9	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  001ae	4c 8b 84 24 98
	00 00 00	 mov	 r8, QWORD PTR _Whereptr$[rsp]
  001b6	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  001bb	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001be	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001c6	e8 00 00 00 00	 call	 ?_Umove@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAPEAUhookData@@PEAU3@00@Z ; std::vector<hookData,std::allocator<hookData> >::_Umove

; 707  :             _Constructed_first = _Newvec;

  001cb	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  001d0	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 708  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  001d5	48 6b 44 24 40
	68		 imul	 rax, QWORD PTR _Whereoff$[rsp], 104 ; 00000068H
  001db	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  001e0	48 8d 44 01 68	 lea	 rax, QWORD PTR [rcx+rax+104]
  001e5	4c 8b c8	 mov	 r9, rax
  001e8	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  001ed	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  001f0	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Whereptr$[rsp]
  001f8	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00200	e8 00 00 00 00	 call	 ?_Umove@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAPEAUhookData@@PEAU3@00@Z ; std::vector<hookData,std::allocator<hookData> >::_Umove
  00205	90		 npad	 1
$LN5@Emplace_re:
  00206	eb 00		 jmp	 SHORT $LN9@Emplace_re
$LN10@Emplace_re:
$LN9@Emplace_re:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END
; 715  : 
; 716  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  00208	4c 8b 4c 24 58	 mov	 r9, QWORD PTR _Newcapacity$[rsp]
  0020d	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Newsize$[rsp]
  00212	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  00217	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0021f	e8 00 00 00 00	 call	 ?_Change_array@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXQEAUhookData@@_K1@Z ; std::vector<hookData,std::allocator<hookData> >::_Change_array

; 717  :         return _Newvec + _Whereoff;

  00224	48 6b 44 24 40
	68		 imul	 rax, QWORD PTR _Whereoff$[rsp], 104 ; 00000068H
  0022a	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0022f	48 03 c8	 add	 rcx, rax
  00232	48 8b c1	 mov	 rax, rcx

; 718  :     }

  00235	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0023c	5f		 pop	 rdi
  0023d	c3		 ret	 0
$LN11@Emplace_re:
??$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z ENDP ; std::vector<hookData,std::allocator<hookData> >::_Emplace_reallocate<hookData const &>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z@4HA PROC ; `std::vector<hookData,std::allocator<hookData> >::_Emplace_reallocate<hookData const &>'::`1'::catch$0

; 709  :         }
; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z$0:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@0@Z ; std::vector<hookData,std::allocator<hookData> >::_Destroy

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UhookData@@@std@@QEAAXQEAUhookData@@_K@Z ; std::allocator<hookData>::deallocate

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z@4HA ENDP ; `std::vector<hookData,std::allocator<hookData> >::_Emplace_reallocate<hookData const &>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z@4HA PROC ; `std::vector<hookData,std::allocator<hookData> >::_Emplace_reallocate<hookData const &>'::`1'::catch$0

; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z$0:

; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@0@Z ; std::vector<hookData,std::allocator<hookData> >::_Destroy

; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UhookData@@@std@@QEAAXQEAUhookData@@_K@Z ; std::allocator<hookData>::deallocate

; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z@4HA ENDP ; `std::vector<hookData,std::allocator<hookData> >::_Emplace_reallocate<hookData const &>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@UhookData@@AEBU1@@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SAXAEAV?$allocator@UhookData@@@1@QEAUhookData@@AEBU3@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@UhookData@@AEBU1@@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SAXAEAV?$allocator@UhookData@@@1@QEAUhookData@@AEBU3@@Z PROC ; std::_Default_allocator_traits<std::allocator<hookData> >::construct<hookData,hookData const &>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00028	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	b9 68 00 00 00	 mov	 ecx, 104		; 00000068H
  00032	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00037	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00041	e8 00 00 00 00	 call	 ??$forward@AEBUhookData@@@std@@YAAEBUhookData@@AEBU1@@Z ; std::forward<hookData const &>
  00046	48 8b d0	 mov	 rdx, rax
  00049	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004e	e8 00 00 00 00	 call	 ??0hookData@@QEAA@AEBU0@@Z

; 759  :     }

  00053	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
??$construct@UhookData@@AEBU1@@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SAXAEAV?$allocator@UhookData@@@1@QEAUhookData@@AEBU3@@Z ENDP ; std::_Default_allocator_traits<std::allocator<hookData> >::construct<hookData,hookData const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXAEBUhookData@@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
tv67 = 56
tv70 = 64
this$ = 96
<_Val_0>$ = 104
??$_Emplace_back_with_unused_capacity@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXAEBUhookData@@@Z PROC ; std::vector<hookData,std::allocator<hookData> >::_Emplace_back_with_unused_capacity<hookData const &>, COMDAT

; 633  :     decltype(auto) _Emplace_back_with_unused_capacity(_Valty&&... _Val) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 634  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 635  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 636  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 637  :         _STL_INTERNAL_CHECK(_Mylast != _My_data._Myend); // check that we have unused capacity
; 638  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0003b	48 8b 4c 24 68	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@AEBUhookData@@@std@@YAAEBUhookData@@AEBU1@@Z ; std::forward<hookData const &>
  00045	48 89 44 24 38	 mov	 QWORD PTR tv67[rsp], rax
  0004a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  0004f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00052	e8 00 00 00 00	 call	 ??$_Unfancy@UhookData@@@std@@YAPEAUhookData@@PEAU1@@Z ; std::_Unfancy<hookData>
  00057	48 89 44 24 40	 mov	 QWORD PTR tv70[rsp], rax
  0005c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00061	e8 00 00 00 00	 call	 ?_Getal@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAAEAV?$allocator@UhookData@@@2@XZ ; std::vector<hookData,std::allocator<hookData> >::_Getal
  00066	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv67[rsp]
  0006b	4c 8b c1	 mov	 r8, rcx
  0006e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv70[rsp]
  00073	48 8b d1	 mov	 rdx, rcx
  00076	48 8b c8	 mov	 rcx, rax
  00079	e8 00 00 00 00	 call	 ??$construct@UhookData@@AEBU1@@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SAXAEAV?$allocator@UhookData@@@1@QEAUhookData@@AEBU3@@Z ; std::_Default_allocator_traits<std::allocator<hookData> >::construct<hookData,hookData const &>

; 639  :         _Orphan_range(_Mylast, _Mylast);

  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00083	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00086	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0008e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00093	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z ; std::vector<hookData,std::allocator<hookData> >::_Orphan_range

; 640  :         _Ty& _Result = *_Mylast;

  00098	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax

; 641  :         ++_Mylast;

  000a5	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000aa	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ad	48 83 c0 68	 add	 rax, 104		; 00000068H
  000b1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000b6	48 89 01	 mov	 QWORD PTR [rcx], rax

; 642  : #if _HAS_CXX17
; 643  :         return _Result;
; 644  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 645  :         (void) _Result;
; 646  : #endif // _HAS_CXX17
; 647  :     }

  000b9	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000bd	5f		 pop	 rdi
  000be	c3		 ret	 0
??$_Emplace_back_with_unused_capacity@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXAEBUhookData@@@Z ENDP ; std::vector<hookData,std::allocator<hookData> >::_Emplace_back_with_unused_capacity<hookData const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBUhookData@@@std@@YAAEBUhookData@@AEBU1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBUhookData@@@std@@YAAEBUhookData@@AEBU1@@Z PROC ; std::forward<hookData const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBUhookData@@@std@@YAAEBUhookData@@AEBU1@@Z ENDP ; std::forward<hookData const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$emplace_back@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXAEBUhookData@@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
this$ = 80
<_Val_0>$ = 88
??$emplace_back@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXAEBUhookData@@@Z PROC ; std::vector<hookData,std::allocator<hookData> >::emplace_back<hookData const &>, COMDAT

; 651  :     decltype(auto) emplace_back(_Valty&&... _Val) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 652  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 653  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 654  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 655  :         if (_Mylast != _My_data._Myend) {

  0003b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00045	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00049	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0004c	74 19		 je	 SHORT $LN2@emplace_ba

; 656  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0004e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00053	e8 00 00 00 00	 call	 ??$forward@AEBUhookData@@@std@@YAAEBUhookData@@AEBU1@@Z ; std::forward<hookData const &>
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00060	e8 00 00 00 00	 call	 ??$_Emplace_back_with_unused_capacity@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXAEBUhookData@@@Z ; std::vector<hookData,std::allocator<hookData> >::_Emplace_back_with_unused_capacity<hookData const &>
  00065	eb 24		 jmp	 SHORT $LN1@emplace_ba
$LN2@emplace_ba:

; 657  :         }
; 658  : 
; 659  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00067	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0006c	e8 00 00 00 00	 call	 ??$forward@AEBUhookData@@@std@@YAAEBUhookData@@AEBU1@@Z ; std::forward<hookData const &>
  00071	4c 8b c0	 mov	 r8, rax
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@QEAU2@AEBU2@@Z ; std::vector<hookData,std::allocator<hookData> >::_Emplace_reallocate<hookData const &>
  00086	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax
$LN1@emplace_ba:

; 660  : #if _HAS_CXX17
; 661  :         return _Result;
; 662  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 663  :         (void) _Result;
; 664  : #endif // _HAS_CXX17
; 665  :     }

  0008b	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??$emplace_back@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXAEBUhookData@@@Z ENDP ; std::vector<hookData,std::allocator<hookData> >::emplace_back<hookData const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$destroy@UhookData@@@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SAXAEAV?$allocator@UhookData@@@1@QEAUhookData@@@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
??$destroy@UhookData@@@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SAXAEAV?$allocator@UhookData@@@1@QEAUhookData@@@Z PROC ; std::_Default_allocator_traits<std::allocator<hookData> >::destroy<hookData>, COMDAT

; 762  :     static void destroy(_Alloc&, _Uty* const _Ptr) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 763  :         _Ptr->~_Uty();

  00023	33 d2		 xor	 edx, edx
  00025	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0002a	e8 00 00 00 00	 call	 ??_GhookData@@QEAAPEAXI@Z

; 764  :     }

  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
??$destroy@UhookData@@@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SAXAEAV?$allocator@UhookData@@@1@QEAUhookData@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<hookData> >::destroy<hookData>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@UhookData@@@std@@YAPEAUhookData@@PEAU1@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@UhookData@@@std@@YAPEAUhookData@@PEAU1@@Z PROC ; std::_Unfancy<hookData>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@UhookData@@@std@@YAPEAUhookData@@PEAU1@@Z ENDP ; std::_Unfancy<hookData>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Move_unchecked@PEAUhookData@@PEAU1@@std@@YAPEAUhookData@@PEAU1@00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Move_unchecked@PEAUhookData@@PEAU1@@std@@YAPEAUhookData@@PEAU1@00@Z PROC ; std::_Move_unchecked<hookData *,hookData *>, COMDAT

; 2056 : _OutIt _Move_unchecked(_InIt _First, _InIt _Last, _OutIt _Dest) {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2057 :     // move [_First, _Last) to [_Dest, ...)
; 2058 :     // note: _Move_unchecked is called directly from elsewhere in the STL
; 2059 :     if constexpr (_Ptr_move_cat<_InIt, _OutIt>::_Trivially_copyable) {
; 2060 :         return _Copy_memmove(_First, _Last, _Dest);
; 2061 :     } else {
; 2062 :         for (; _First != _Last; ++_Dest, (void) ++_First) {

  00028	eb 1c		 jmp	 SHORT $LN4@Move_unche
$LN2@Move_unche:
  0002a	48 8b 44 24 40	 mov	 rax, QWORD PTR _Dest$[rsp]
  0002f	48 83 c0 68	 add	 rax, 104		; 00000068H
  00033	48 89 44 24 40	 mov	 QWORD PTR _Dest$[rsp], rax
  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR _First$[rsp]
  0003d	48 83 c0 68	 add	 rax, 104		; 00000068H
  00041	48 89 44 24 30	 mov	 QWORD PTR _First$[rsp], rax
$LN4@Move_unche:
  00046	48 8b 44 24 38	 mov	 rax, QWORD PTR _Last$[rsp]
  0004b	48 39 44 24 30	 cmp	 QWORD PTR _First$[rsp], rax
  00050	74 19		 je	 SHORT $LN3@Move_unche

; 2063 :             *_Dest = _STD move(*_First);

  00052	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00057	e8 00 00 00 00	 call	 ??$move@AEAUhookData@@@std@@YA$$QEAUhookData@@AEAU1@@Z ; std::move<hookData &>
  0005c	48 8b d0	 mov	 rdx, rax
  0005f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00064	e8 00 00 00 00	 call	 ??4hookData@@QEAAAEAU0@$$QEAU0@@Z

; 2064 :         }

  00069	eb bf		 jmp	 SHORT $LN2@Move_unche
$LN3@Move_unche:

; 2065 : 
; 2066 :         return _Dest;

  0006b	48 8b 44 24 40	 mov	 rax, QWORD PTR _Dest$[rsp]

; 2067 :     }
; 2068 : }

  00070	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00074	5f		 pop	 rdi
  00075	c3		 ret	 0
??$_Move_unchecked@PEAUhookData@@PEAU1@@std@@YAPEAUhookData@@PEAU1@00@Z ENDP ; std::_Move_unchecked<hookData *,hookData *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<hookData> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<hookData> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Const_cast@$$CBUhookData@@@std@@YAPEAUhookData@@PEBU1@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Const_cast@$$CBUhookData@@@std@@YAPEAUhookData@@PEBU1@@Z PROC ; std::_Const_cast<hookData const >, COMDAT

; 336  : auto _Const_cast(_Ty* _Ptr) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 337  :     return const_cast<remove_const_t<_Ty>*>(_Ptr);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 338  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Const_cast@$$CBUhookData@@@std@@YAPEAUhookData@@PEBU1@@Z ENDP ; std::_Const_cast<hookData const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z
_TEXT	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z PROC ; std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_3b1a155f3d9af5183301fdeff6995007> >, COMDAT

; 138  : _NODISCARD _InIt find_if(_InIt _First, const _InIt _Last, _Pr _Pred) { // find first satisfying _Pred

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec d0 00
	00 00		 sub	 rsp, 208		; 000000d0H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+224]
  00033	c7 84 24 b0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T6[rsp], 0

; 139  :     _Adl_verify_range(_First, _Last);

  0003e	48 8b 94 24 f0
	00 00 00	 mov	 rdx, QWORD PTR _Last$[rsp]
  00046	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  0004e	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > > >

; 140  :     auto _UFirst      = _Get_unwrapped(_First);

  00053	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  0005b	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@$0A@@std@@YAPEAUhookData@@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,0>
  00060	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax

; 141  :     const auto _ULast = _Get_unwrapped(_Last);

  00065	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR _Last$[rsp]
  0006d	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@$0A@@std@@YAPEAUhookData@@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,0>
  00072	48 89 44 24 38	 mov	 QWORD PTR _ULast$[rsp], rax

; 142  :     for (; _UFirst != _ULast; ++_UFirst) {

  00077	eb 0e		 jmp	 SHORT $LN4@find_if
$LN2@find_if:
  00079	48 8b 44 24 28	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0007e	48 83 c0 68	 add	 rax, 104		; 00000068H
  00082	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@find_if:
  00087	48 8b 44 24 38	 mov	 rax, QWORD PTR _ULast$[rsp]
  0008c	48 39 44 24 28	 cmp	 QWORD PTR _UFirst$[rsp], rax
  00091	74 57		 je	 SHORT $LN3@find_if

; 143  :         if (_Pred(*_UFirst)) {

  00093	48 8d 44 24 40	 lea	 rax, QWORD PTR $T4[rsp]
  00098	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR $T5[rsp], rax
  000a0	48 8b 54 24 28	 mov	 rdx, QWORD PTR _UFirst$[rsp]
  000a5	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR $T5[rsp]
  000ad	e8 00 00 00 00	 call	 ??0hookData@@QEAA@AEBU0@@Z
  000b2	48 89 84 24 b8
	00 00 00	 mov	 QWORD PTR tv136[rsp], rax
  000ba	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR tv136[rsp]
  000c2	48 89 84 24 c0
	00 00 00	 mov	 QWORD PTR tv129[rsp], rax
  000ca	48 8b 94 24 c0
	00 00 00	 mov	 rdx, QWORD PTR tv129[rsp]
  000d2	48 8b 8c 24 f8
	00 00 00	 mov	 rcx, QWORD PTR _Pred$[rsp]
  000da	e8 00 00 00 00	 call	 ??R<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEBA_NUhookData@@@Z ; <lambda_3b1a155f3d9af5183301fdeff6995007>::operator()
  000df	0f b6 c0	 movzx	 eax, al
  000e2	85 c0		 test	 eax, eax
  000e4	74 02		 je	 SHORT $LN5@find_if

; 144  :             break;

  000e6	eb 02		 jmp	 SHORT $LN3@find_if
$LN5@find_if:

; 145  :         }
; 146  :     }

  000e8	eb 8f		 jmp	 SHORT $LN2@find_if
$LN3@find_if:

; 147  : 
; 148  :     _Seek_wrapped(_First, _UFirst);

  000ea	48 8d 54 24 28	 lea	 rdx, QWORD PTR _UFirst$[rsp]
  000ef	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  000f7	e8 00 00 00 00	 call	 ??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@PEAUhookData@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@AEBQEAUhookData@@@Z ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,hookData *>

; 149  :     return _First;

  000fc	48 8b 94 24 e8
	00 00 00	 mov	 rdx, QWORD PTR _First$[rsp]
  00104	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0010c	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
  00111	8b 84 24 b0 00
	00 00		 mov	 eax, DWORD PTR $T6[rsp]
  00118	83 c8 01	 or	 eax, 1
  0011b	89 84 24 b0 00
	00 00		 mov	 DWORD PTR $T6[rsp], eax
  00122	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  0012a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0012f	90		 npad	 1
  00130	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR _Last$[rsp]
  00138	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0013d	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 150  : }

  00145	48 8b f8	 mov	 rdi, rax
  00148	48 8b cc	 mov	 rcx, rsp
  0014b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z$rtcFrameData
  00152	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00157	48 8b c7	 mov	 rax, rdi
  0015a	48 81 c4 d0 00
	00 00		 add	 rsp, 208		; 000000d0H
  00161	5f		 pop	 rdi
  00162	c3		 ret	 0
  00163	cc		 int	 3
??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z ENDP ; std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_3b1a155f3d9af5183301fdeff6995007> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_3b1a155f3d9af5183301fdeff6995007> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_3b1a155f3d9af5183301fdeff6995007> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_3b1a155f3d9af5183301fdeff6995007> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_3b1a155f3d9af5183301fdeff6995007> >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_3b1a155f3d9af5183301fdeff6995007> >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  0001a	e8 00 00 00 00	 call	 ??1hookData@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_3b1a155f3d9af5183301fdeff6995007> >'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_3b1a155f3d9af5183301fdeff6995007> >'::`1'::dtor$3
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 85 b0 00 00
	00		 mov	 eax, DWORD PTR $T6[rbp]
  00019	83 e0 01	 and	 eax, 1
  0001c	85 c0		 test	 eax, eax
  0001e	74 13		 je	 SHORT $LN11@dtor$3
  00020	83 a5 b0 00 00
	00 fe		 and	 DWORD PTR $T6[rbp], -2
  00027	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0002e	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
$LN11@dtor$3:
  00033	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00037	5f		 pop	 rdi
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_3b1a155f3d9af5183301fdeff6995007> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_3b1a155f3d9af5183301fdeff6995007> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_3b1a155f3d9af5183301fdeff6995007> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_3b1a155f3d9af5183301fdeff6995007> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_3b1a155f3d9af5183301fdeff6995007> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_3b1a155f3d9af5183301fdeff6995007> >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  0001a	e8 00 00 00 00	 call	 ??1hookData@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_3b1a155f3d9af5183301fdeff6995007> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_3b1a155f3d9af5183301fdeff6995007> >'::`1'::dtor$3
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 85 b0 00 00
	00		 mov	 eax, DWORD PTR $T6[rbp]
  00019	83 e0 01	 and	 eax, 1
  0001c	85 c0		 test	 eax, eax
  0001e	74 13		 je	 SHORT $LN11@dtor$3
  00020	83 a5 b0 00 00
	00 fe		 and	 DWORD PTR $T6[rbp], -2
  00027	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0002e	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
$LN11@dtor$3:
  00033	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00037	5f		 pop	 rdi
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_3b1a155f3d9af5183301fdeff6995007> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\api_hook.cpp
;	COMDAT ??0<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEAA@AEBQEBD0@Z
_TEXT	SEGMENT
this$ = 16
<pTargetModuleName>$ = 24
<pTargetFunctionName>$ = 32
??0<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEAA@AEBQEBD0@Z PROC ; <lambda_3b1a155f3d9af5183301fdeff6995007>::<lambda_3b1a155f3d9af5183301fdeff6995007>, COMDAT

; 140  :     });

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR <pTargetModuleName>$[rsp]
  0001a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0001d	48 89 08	 mov	 QWORD PTR [rax], rcx
  00020	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00025	48 8b 4c 24 20	 mov	 rcx, QWORD PTR <pTargetFunctionName>$[rsp]
  0002a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0002d	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  00031	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??0<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEAA@AEBQEBD0@Z ENDP ; <lambda_3b1a155f3d9af5183301fdeff6995007>::<lambda_3b1a155f3d9af5183301fdeff6995007>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\api_hook.cpp
;	COMDAT ??R<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEBA_NUhookData@@@Z
_TEXT	SEGMENT
$T1 = 32
tv79 = 36
this$ = 64
data$ = 72
??R<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEBA_NUhookData@@@Z PROC ; <lambda_3b1a155f3d9af5183301fdeff6995007>::operator(), COMDAT

; 138  :     auto hook = std::find_if(hookList.begin(), hookList.end(), [pTargetModuleName, pTargetFunctionName](hookData data) {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 139  :         return data.sTargetModuleName == pTargetModuleName && data.sTargetFunctionName == pTargetFunctionName;

  00023	48 8b 44 24 48	 mov	 rax, QWORD PTR data$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00030	48 8b c8	 mov	 rcx, rax
  00033	e8 00 00 00 00	 call	 ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
  00038	0f b6 c0	 movzx	 eax, al
  0003b	85 c0		 test	 eax, eax
  0003d	74 2b		 je	 SHORT $LN3@operator
  0003f	48 8b 44 24 48	 mov	 rax, QWORD PTR data$[rsp]
  00044	48 83 c0 28	 add	 rax, 40			; 00000028H
  00048	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004d	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00051	48 8b c8	 mov	 rcx, rax
  00054	e8 00 00 00 00	 call	 ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
  00059	0f b6 c0	 movzx	 eax, al
  0005c	85 c0		 test	 eax, eax
  0005e	74 0a		 je	 SHORT $LN3@operator
  00060	c7 44 24 24 01
	00 00 00	 mov	 DWORD PTR tv79[rsp], 1
  00068	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0006a	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR tv79[rsp], 0
$LN4@operator:
  00072	0f b6 44 24 24	 movzx	 eax, BYTE PTR tv79[rsp]
  00077	88 44 24 20	 mov	 BYTE PTR $T1[rsp], al
  0007b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR data$[rsp]
  00080	e8 00 00 00 00	 call	 ??1hookData@@QEAA@XZ
  00085	0f b6 44 24 20	 movzx	 eax, BYTE PTR $T1[rsp]

; 140  :     });

  0008a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0008e	5f		 pop	 rdi
  0008f	c3		 ret	 0
??R<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEBA_NUhookData@@@Z ENDP ; <lambda_3b1a155f3d9af5183301fdeff6995007>::operator()
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv79 = 36
this$ = 64
data$ = 72
?dtor$0@?0???R<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEBA_NUhookData@@@Z@4HA PROC ; `<lambda_3b1a155f3d9af5183301fdeff6995007>::operator()'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 48	 mov	 rcx, QWORD PTR data$[rbp]
  00017	e8 00 00 00 00	 call	 ??1hookData@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???R<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEBA_NUhookData@@@Z@4HA ENDP ; `<lambda_3b1a155f3d9af5183301fdeff6995007>::operator()'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv79 = 36
this$ = 64
data$ = 72
?dtor$0@?0???R<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEBA_NUhookData@@@Z@4HA PROC ; `<lambda_3b1a155f3d9af5183301fdeff6995007>::operator()'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 48	 mov	 rcx, QWORD PTR data$[rbp]
  00017	e8 00 00 00 00	 call	 ??1hookData@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???R<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEBA_NUhookData@@@Z@4HA ENDP ; `<lambda_3b1a155f3d9af5183301fdeff6995007>::operator()'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z
_TEXT	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z PROC ; std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_1735d4f996bca40e44ec48ee134389dd> >, COMDAT

; 138  : _NODISCARD _InIt find_if(_InIt _First, const _InIt _Last, _Pr _Pred) { // find first satisfying _Pred

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec d0 00
	00 00		 sub	 rsp, 208		; 000000d0H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+224]
  00033	c7 84 24 b0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T6[rsp], 0

; 139  :     _Adl_verify_range(_First, _Last);

  0003e	48 8b 94 24 f0
	00 00 00	 mov	 rdx, QWORD PTR _Last$[rsp]
  00046	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  0004e	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > > >

; 140  :     auto _UFirst      = _Get_unwrapped(_First);

  00053	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  0005b	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@$0A@@std@@YAPEAUhookData@@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,0>
  00060	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax

; 141  :     const auto _ULast = _Get_unwrapped(_Last);

  00065	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR _Last$[rsp]
  0006d	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@$0A@@std@@YAPEAUhookData@@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,0>
  00072	48 89 44 24 38	 mov	 QWORD PTR _ULast$[rsp], rax

; 142  :     for (; _UFirst != _ULast; ++_UFirst) {

  00077	eb 0e		 jmp	 SHORT $LN4@find_if
$LN2@find_if:
  00079	48 8b 44 24 28	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0007e	48 83 c0 68	 add	 rax, 104		; 00000068H
  00082	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@find_if:
  00087	48 8b 44 24 38	 mov	 rax, QWORD PTR _ULast$[rsp]
  0008c	48 39 44 24 28	 cmp	 QWORD PTR _UFirst$[rsp], rax
  00091	74 57		 je	 SHORT $LN3@find_if

; 143  :         if (_Pred(*_UFirst)) {

  00093	48 8d 44 24 40	 lea	 rax, QWORD PTR $T4[rsp]
  00098	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR $T5[rsp], rax
  000a0	48 8b 54 24 28	 mov	 rdx, QWORD PTR _UFirst$[rsp]
  000a5	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR $T5[rsp]
  000ad	e8 00 00 00 00	 call	 ??0hookData@@QEAA@AEBU0@@Z
  000b2	48 89 84 24 b8
	00 00 00	 mov	 QWORD PTR tv136[rsp], rax
  000ba	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR tv136[rsp]
  000c2	48 89 84 24 c0
	00 00 00	 mov	 QWORD PTR tv129[rsp], rax
  000ca	48 8b 94 24 c0
	00 00 00	 mov	 rdx, QWORD PTR tv129[rsp]
  000d2	48 8d 8c 24 f8
	00 00 00	 lea	 rcx, QWORD PTR _Pred$[rsp]
  000da	e8 00 00 00 00	 call	 ??R<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEBA_NUhookData@@@Z ; <lambda_1735d4f996bca40e44ec48ee134389dd>::operator()
  000df	0f b6 c0	 movzx	 eax, al
  000e2	85 c0		 test	 eax, eax
  000e4	74 02		 je	 SHORT $LN5@find_if

; 144  :             break;

  000e6	eb 02		 jmp	 SHORT $LN3@find_if
$LN5@find_if:

; 145  :         }
; 146  :     }

  000e8	eb 8f		 jmp	 SHORT $LN2@find_if
$LN3@find_if:

; 147  : 
; 148  :     _Seek_wrapped(_First, _UFirst);

  000ea	48 8d 54 24 28	 lea	 rdx, QWORD PTR _UFirst$[rsp]
  000ef	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  000f7	e8 00 00 00 00	 call	 ??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@PEAUhookData@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@AEBQEAUhookData@@@Z ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,hookData *>

; 149  :     return _First;

  000fc	48 8b 94 24 e8
	00 00 00	 mov	 rdx, QWORD PTR _First$[rsp]
  00104	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0010c	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
  00111	8b 84 24 b0 00
	00 00		 mov	 eax, DWORD PTR $T6[rsp]
  00118	83 c8 01	 or	 eax, 1
  0011b	89 84 24 b0 00
	00 00		 mov	 DWORD PTR $T6[rsp], eax
  00122	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  0012a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0012f	90		 npad	 1
  00130	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR _Last$[rsp]
  00138	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0013d	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 150  : }

  00145	48 8b f8	 mov	 rdi, rax
  00148	48 8b cc	 mov	 rcx, rsp
  0014b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z$rtcFrameData
  00152	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00157	48 8b c7	 mov	 rax, rdi
  0015a	48 81 c4 d0 00
	00 00		 add	 rsp, 208		; 000000d0H
  00161	5f		 pop	 rdi
  00162	c3		 ret	 0
  00163	cc		 int	 3
??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z ENDP ; std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_1735d4f996bca40e44ec48ee134389dd> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_1735d4f996bca40e44ec48ee134389dd> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_1735d4f996bca40e44ec48ee134389dd> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_1735d4f996bca40e44ec48ee134389dd> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_1735d4f996bca40e44ec48ee134389dd> >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_1735d4f996bca40e44ec48ee134389dd> >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  0001a	e8 00 00 00 00	 call	 ??1hookData@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_1735d4f996bca40e44ec48ee134389dd> >'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_1735d4f996bca40e44ec48ee134389dd> >'::`1'::dtor$3
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 85 b0 00 00
	00		 mov	 eax, DWORD PTR $T6[rbp]
  00019	83 e0 01	 and	 eax, 1
  0001c	85 c0		 test	 eax, eax
  0001e	74 13		 je	 SHORT $LN11@dtor$3
  00020	83 a5 b0 00 00
	00 fe		 and	 DWORD PTR $T6[rbp], -2
  00027	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0002e	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
$LN11@dtor$3:
  00033	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00037	5f		 pop	 rdi
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_1735d4f996bca40e44ec48ee134389dd> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_1735d4f996bca40e44ec48ee134389dd> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_1735d4f996bca40e44ec48ee134389dd> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_1735d4f996bca40e44ec48ee134389dd> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_1735d4f996bca40e44ec48ee134389dd> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_1735d4f996bca40e44ec48ee134389dd> >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  0001a	e8 00 00 00 00	 call	 ??1hookData@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_1735d4f996bca40e44ec48ee134389dd> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_1735d4f996bca40e44ec48ee134389dd> >'::`1'::dtor$3
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 85 b0 00 00
	00		 mov	 eax, DWORD PTR $T6[rbp]
  00019	83 e0 01	 and	 eax, 1
  0001c	85 c0		 test	 eax, eax
  0001e	74 13		 je	 SHORT $LN11@dtor$3
  00020	83 a5 b0 00 00
	00 fe		 and	 DWORD PTR $T6[rbp], -2
  00027	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0002e	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
$LN11@dtor$3:
  00033	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00037	5f		 pop	 rdi
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_1735d4f996bca40e44ec48ee134389dd> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\api_hook.cpp
;	COMDAT ??0<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEAA@AEBQEAX@Z
_TEXT	SEGMENT
this$ = 16
<pOrigFuc>$ = 24
??0<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEAA@AEBQEAX@Z PROC ; <lambda_1735d4f996bca40e44ec48ee134389dd>::<lambda_1735d4f996bca40e44ec48ee134389dd>, COMDAT

; 127  :         });

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR <pOrigFuc>$[rsp]
  00015	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00018	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
??0<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEAA@AEBQEAX@Z ENDP ; <lambda_1735d4f996bca40e44ec48ee134389dd>::<lambda_1735d4f996bca40e44ec48ee134389dd>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\api_hook.cpp
;	COMDAT ??R<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEBA_NUhookData@@@Z
_TEXT	SEGMENT
$T1 = 32
tv68 = 36
this$ = 64
data$ = 72
??R<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEBA_NUhookData@@@Z PROC ; <lambda_1735d4f996bca40e44ec48ee134389dd>::operator(), COMDAT

; 125  :         auto hook = std::find_if(hookList.begin(), hookList.end(), [pOrigFuc](hookData data) {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 126  :             return data.pOrigFunc == pOrigFuc;

  00023	48 8b 44 24 48	 mov	 rax, QWORD PTR data$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 48 58	 cmp	 QWORD PTR [rax+88], rcx
  00034	75 0a		 jne	 SHORT $LN3@operator
  00036	c7 44 24 24 01
	00 00 00	 mov	 DWORD PTR tv68[rsp], 1
  0003e	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00040	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR tv68[rsp], 0
$LN4@operator:
  00048	0f b6 44 24 24	 movzx	 eax, BYTE PTR tv68[rsp]
  0004d	88 44 24 20	 mov	 BYTE PTR $T1[rsp], al
  00051	48 8b 4c 24 48	 mov	 rcx, QWORD PTR data$[rsp]
  00056	e8 00 00 00 00	 call	 ??1hookData@@QEAA@XZ
  0005b	0f b6 44 24 20	 movzx	 eax, BYTE PTR $T1[rsp]

; 127  :         });

  00060	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
??R<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEBA_NUhookData@@@Z ENDP ; <lambda_1735d4f996bca40e44ec48ee134389dd>::operator()
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv68 = 36
this$ = 64
data$ = 72
?dtor$0@?0???R<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEBA_NUhookData@@@Z@4HA PROC ; `<lambda_1735d4f996bca40e44ec48ee134389dd>::operator()'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 48	 mov	 rcx, QWORD PTR data$[rbp]
  00017	e8 00 00 00 00	 call	 ??1hookData@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???R<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEBA_NUhookData@@@Z@4HA ENDP ; `<lambda_1735d4f996bca40e44ec48ee134389dd>::operator()'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv68 = 36
this$ = 64
data$ = 72
?dtor$0@?0???R<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEBA_NUhookData@@@Z@4HA PROC ; `<lambda_1735d4f996bca40e44ec48ee134389dd>::operator()'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 48	 mov	 rcx, QWORD PTR data$[rbp]
  00017	e8 00 00 00 00	 call	 ??1hookData@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???R<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEBA_NUhookData@@@Z@4HA ENDP ; `<lambda_1735d4f996bca40e44ec48ee134389dd>::operator()'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z
_TEXT	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z PROC ; std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_831aa28b571b4242b9e704a94bc96691> >, COMDAT

; 138  : _NODISCARD _InIt find_if(_InIt _First, const _InIt _Last, _Pr _Pred) { // find first satisfying _Pred

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec d0 00
	00 00		 sub	 rsp, 208		; 000000d0H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+224]
  00033	c7 84 24 b0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T6[rsp], 0

; 139  :     _Adl_verify_range(_First, _Last);

  0003e	48 8b 94 24 f0
	00 00 00	 mov	 rdx, QWORD PTR _Last$[rsp]
  00046	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  0004e	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > > >

; 140  :     auto _UFirst      = _Get_unwrapped(_First);

  00053	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  0005b	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@$0A@@std@@YAPEAUhookData@@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,0>
  00060	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax

; 141  :     const auto _ULast = _Get_unwrapped(_Last);

  00065	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR _Last$[rsp]
  0006d	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@$0A@@std@@YAPEAUhookData@@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,0>
  00072	48 89 44 24 38	 mov	 QWORD PTR _ULast$[rsp], rax

; 142  :     for (; _UFirst != _ULast; ++_UFirst) {

  00077	eb 0e		 jmp	 SHORT $LN4@find_if
$LN2@find_if:
  00079	48 8b 44 24 28	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0007e	48 83 c0 68	 add	 rax, 104		; 00000068H
  00082	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@find_if:
  00087	48 8b 44 24 38	 mov	 rax, QWORD PTR _ULast$[rsp]
  0008c	48 39 44 24 28	 cmp	 QWORD PTR _UFirst$[rsp], rax
  00091	74 57		 je	 SHORT $LN3@find_if

; 143  :         if (_Pred(*_UFirst)) {

  00093	48 8d 44 24 40	 lea	 rax, QWORD PTR $T4[rsp]
  00098	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR $T5[rsp], rax
  000a0	48 8b 54 24 28	 mov	 rdx, QWORD PTR _UFirst$[rsp]
  000a5	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR $T5[rsp]
  000ad	e8 00 00 00 00	 call	 ??0hookData@@QEAA@AEBU0@@Z
  000b2	48 89 84 24 b8
	00 00 00	 mov	 QWORD PTR tv136[rsp], rax
  000ba	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR tv136[rsp]
  000c2	48 89 84 24 c0
	00 00 00	 mov	 QWORD PTR tv129[rsp], rax
  000ca	48 8b 94 24 c0
	00 00 00	 mov	 rdx, QWORD PTR tv129[rsp]
  000d2	48 8b 8c 24 f8
	00 00 00	 mov	 rcx, QWORD PTR _Pred$[rsp]
  000da	e8 00 00 00 00	 call	 ??R<lambda_831aa28b571b4242b9e704a94bc96691>@@QEBA_NUhookData@@@Z ; <lambda_831aa28b571b4242b9e704a94bc96691>::operator()
  000df	0f b6 c0	 movzx	 eax, al
  000e2	85 c0		 test	 eax, eax
  000e4	74 02		 je	 SHORT $LN5@find_if

; 144  :             break;

  000e6	eb 02		 jmp	 SHORT $LN3@find_if
$LN5@find_if:

; 145  :         }
; 146  :     }

  000e8	eb 8f		 jmp	 SHORT $LN2@find_if
$LN3@find_if:

; 147  : 
; 148  :     _Seek_wrapped(_First, _UFirst);

  000ea	48 8d 54 24 28	 lea	 rdx, QWORD PTR _UFirst$[rsp]
  000ef	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  000f7	e8 00 00 00 00	 call	 ??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@PEAUhookData@@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@AEBQEAUhookData@@@Z ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,hookData *>

; 149  :     return _First;

  000fc	48 8b 94 24 e8
	00 00 00	 mov	 rdx, QWORD PTR _First$[rsp]
  00104	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0010c	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
  00111	8b 84 24 b0 00
	00 00		 mov	 eax, DWORD PTR $T6[rsp]
  00118	83 c8 01	 or	 eax, 1
  0011b	89 84 24 b0 00
	00 00		 mov	 DWORD PTR $T6[rsp], eax
  00122	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  0012a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0012f	90		 npad	 1
  00130	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR _Last$[rsp]
  00138	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0013d	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 150  : }

  00145	48 8b f8	 mov	 rdi, rax
  00148	48 8b cc	 mov	 rcx, rsp
  0014b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z$rtcFrameData
  00152	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00157	48 8b c7	 mov	 rax, rdi
  0015a	48 81 c4 d0 00
	00 00		 add	 rsp, 208		; 000000d0H
  00161	5f		 pop	 rdi
  00162	c3		 ret	 0
  00163	cc		 int	 3
??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z ENDP ; std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_831aa28b571b4242b9e704a94bc96691> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_831aa28b571b4242b9e704a94bc96691> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_831aa28b571b4242b9e704a94bc96691> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_831aa28b571b4242b9e704a94bc96691> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_831aa28b571b4242b9e704a94bc96691> >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_831aa28b571b4242b9e704a94bc96691> >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  0001a	e8 00 00 00 00	 call	 ??1hookData@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_831aa28b571b4242b9e704a94bc96691> >'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_831aa28b571b4242b9e704a94bc96691> >'::`1'::dtor$3
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 85 b0 00 00
	00		 mov	 eax, DWORD PTR $T6[rbp]
  00019	83 e0 01	 and	 eax, 1
  0001c	85 c0		 test	 eax, eax
  0001e	74 13		 je	 SHORT $LN11@dtor$3
  00020	83 a5 b0 00 00
	00 fe		 and	 DWORD PTR $T6[rbp], -2
  00027	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0002e	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
$LN11@dtor$3:
  00033	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00037	5f		 pop	 rdi
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_831aa28b571b4242b9e704a94bc96691> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_831aa28b571b4242b9e704a94bc96691> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_831aa28b571b4242b9e704a94bc96691> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_831aa28b571b4242b9e704a94bc96691> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_831aa28b571b4242b9e704a94bc96691> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_831aa28b571b4242b9e704a94bc96691> >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  0001a	e8 00 00 00 00	 call	 ??1hookData@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$2@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_831aa28b571b4242b9e704a94bc96691> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 56
$T4 = 64
$T5 = 168
$T6 = 176
tv136 = 184
tv129 = 192
__$ReturnUdt$ = 224
_First$ = 232
_Last$ = 240
_Pred$ = 248
?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA PROC ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_831aa28b571b4242b9e704a94bc96691> >'::`1'::dtor$3
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 85 b0 00 00
	00		 mov	 eax, DWORD PTR $T6[rbp]
  00019	83 e0 01	 and	 eax, 1
  0001c	85 c0		 test	 eax, eax
  0001e	74 13		 je	 SHORT $LN11@dtor$3
  00020	83 a5 b0 00 00
	00 fe		 and	 DWORD PTR $T6[rbp], -2
  00027	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0002e	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
$LN11@dtor$3:
  00033	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00037	5f		 pop	 rdi
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
?dtor$3@?0???$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z@4HA ENDP ; `std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_831aa28b571b4242b9e704a94bc96691> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD@Z
_TEXT	SEGMENT
_Left$ = 48
_Right$ = 56
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD@Z PROC ; std::operator==<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4346 :     _In_z_ const _Elem* const _Right) { // test for string vs. NTCTS equality

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4347 :     return _Left._Equal(_Right);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Left$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NQEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Equal

; 4348 : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD@Z ENDP ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\api_hook.cpp
;	COMDAT ??0<lambda_831aa28b571b4242b9e704a94bc96691>@@QEAA@AEBQEBD0@Z
_TEXT	SEGMENT
this$ = 16
<pTargetModuleName>$ = 24
<pTargetFunctionName>$ = 32
??0<lambda_831aa28b571b4242b9e704a94bc96691>@@QEAA@AEBQEBD0@Z PROC ; <lambda_831aa28b571b4242b9e704a94bc96691>::<lambda_831aa28b571b4242b9e704a94bc96691>, COMDAT

; 112  :     });

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR <pTargetModuleName>$[rsp]
  0001a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0001d	48 89 08	 mov	 QWORD PTR [rax], rcx
  00020	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00025	48 8b 4c 24 20	 mov	 rcx, QWORD PTR <pTargetFunctionName>$[rsp]
  0002a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0002d	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  00031	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??0<lambda_831aa28b571b4242b9e704a94bc96691>@@QEAA@AEBQEBD0@Z ENDP ; <lambda_831aa28b571b4242b9e704a94bc96691>::<lambda_831aa28b571b4242b9e704a94bc96691>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\api_hook.cpp
;	COMDAT ??R<lambda_831aa28b571b4242b9e704a94bc96691>@@QEBA_NUhookData@@@Z
_TEXT	SEGMENT
$T1 = 32
tv79 = 36
this$ = 64
data$ = 72
??R<lambda_831aa28b571b4242b9e704a94bc96691>@@QEBA_NUhookData@@@Z PROC ; <lambda_831aa28b571b4242b9e704a94bc96691>::operator(), COMDAT

; 110  :     auto hook = std::find_if(hookList.begin(), hookList.end(), [pTargetModuleName, pTargetFunctionName](hookData data) {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 111  :         return data.sTargetModuleName == pTargetModuleName && data.sTargetFunctionName == pTargetFunctionName;

  00023	48 8b 44 24 48	 mov	 rax, QWORD PTR data$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00030	48 8b c8	 mov	 rcx, rax
  00033	e8 00 00 00 00	 call	 ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
  00038	0f b6 c0	 movzx	 eax, al
  0003b	85 c0		 test	 eax, eax
  0003d	74 2b		 je	 SHORT $LN3@operator
  0003f	48 8b 44 24 48	 mov	 rax, QWORD PTR data$[rsp]
  00044	48 83 c0 28	 add	 rax, 40			; 00000028H
  00048	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004d	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00051	48 8b c8	 mov	 rcx, rax
  00054	e8 00 00 00 00	 call	 ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
  00059	0f b6 c0	 movzx	 eax, al
  0005c	85 c0		 test	 eax, eax
  0005e	74 0a		 je	 SHORT $LN3@operator
  00060	c7 44 24 24 01
	00 00 00	 mov	 DWORD PTR tv79[rsp], 1
  00068	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0006a	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR tv79[rsp], 0
$LN4@operator:
  00072	0f b6 44 24 24	 movzx	 eax, BYTE PTR tv79[rsp]
  00077	88 44 24 20	 mov	 BYTE PTR $T1[rsp], al
  0007b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR data$[rsp]
  00080	e8 00 00 00 00	 call	 ??1hookData@@QEAA@XZ
  00085	0f b6 44 24 20	 movzx	 eax, BYTE PTR $T1[rsp]

; 112  :     });

  0008a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0008e	5f		 pop	 rdi
  0008f	c3		 ret	 0
??R<lambda_831aa28b571b4242b9e704a94bc96691>@@QEBA_NUhookData@@@Z ENDP ; <lambda_831aa28b571b4242b9e704a94bc96691>::operator()
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv79 = 36
this$ = 64
data$ = 72
?dtor$0@?0???R<lambda_831aa28b571b4242b9e704a94bc96691>@@QEBA_NUhookData@@@Z@4HA PROC ; `<lambda_831aa28b571b4242b9e704a94bc96691>::operator()'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 48	 mov	 rcx, QWORD PTR data$[rbp]
  00017	e8 00 00 00 00	 call	 ??1hookData@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???R<lambda_831aa28b571b4242b9e704a94bc96691>@@QEBA_NUhookData@@@Z@4HA ENDP ; `<lambda_831aa28b571b4242b9e704a94bc96691>::operator()'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv79 = 36
this$ = 64
data$ = 72
?dtor$0@?0???R<lambda_831aa28b571b4242b9e704a94bc96691>@@QEBA_NUhookData@@@Z@4HA PROC ; `<lambda_831aa28b571b4242b9e704a94bc96691>::operator()'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 48	 mov	 rcx, QWORD PTR data$[rbp]
  00017	e8 00 00 00 00	 call	 ??1hookData@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???R<lambda_831aa28b571b4242b9e704a94bc96691>@@QEBA_NUhookData@@@Z@4HA ENDP ; `<lambda_831aa28b571b4242b9e704a94bc96691>::operator()'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ
_TEXT	SEGMENT
this$ = 48
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Unwrapped, COMDAT

; 276  :     _NODISCARD value_type* _Unwrapped() const {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 277  :         return _Unfancy(this->_Ptr);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00027	e8 00 00 00 00	 call	 ??$_Unfancy@UhookData@@@std@@YAPEAUhookData@@PEAU1@@Z ; std::_Unfancy<hookData>

; 278  :     }

  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Unwrapped
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ
_TEXT	SEGMENT
this$ = 48
??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator->, COMDAT

; 222  :     _NODISCARD pointer operator->() const {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 223  :         return _Const_cast(_Mybase::operator->());

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEBUhookData@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator->
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBUhookData@@@std@@YAPEAUhookData@@PEBU1@@Z ; std::_Const_cast<hookData const >

; 224  :     }

  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >, COMDAT

; 216  :     _Vector_iterator(pointer _Parg, const _Container_base* _Pvector) : _Mybase(_Parg, _Pvector) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Pvector$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Parg$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >
  0003c	90		 npad	 1
  0003d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00046	5f		 pop	 rdi
  00047	c3		 ret	 0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z@4HA PROC ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z@4HA ENDP ; `std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QEAA@AEBU01@@Z ; std::_Iterator_base12::_Iterator_base12
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __that$[rsp]
  0003d	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00041	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00045	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004e	5f		 pop	 rdi
  0004f	c3		 ret	 0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@AEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QEAA@AEBU01@@Z ; std::_Iterator_base12::_Iterator_base12
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __that$[rsp]
  0003d	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00041	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00045	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004e	5f		 pop	 rdi
  0004f	c3		 ret	 0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAAXPEBUhookData@@@Z
_TEXT	SEGMENT
this$ = 48
_It$ = 56
?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAAXPEBUhookData@@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Seek_to, COMDAT

; 188  :     void _Seek_to(const value_type* _It) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 189  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _It$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Refancy@PEAUhookData@@$0A@@std@@YAPEAUhookData@@PEAU1@@Z ; std::_Refancy<hookData *,0>
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 190  :     }

  00036	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAAXPEBUhookData@@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Seek_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
tv69 = 48
_First$ = 80
_Last$ = 88
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@1@0@Z PROC ; std::_Verify_range, COMDAT

; 176  :     friend void _Verify_range(const _Vector_const_iterator& _First, const _Vector_const_iterator& _Last) {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
$LN4@Verify_ran:

; 177  :         _STL_VERIFY(_First._Getcont() == _Last._Getcont(), "vector iterators in range are from different containers");

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _First$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002d	48 89 44 24 30	 mov	 QWORD PTR tv69[rsp], rax
  00032	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Last$[rsp]
  00037	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv69[rsp]
  00041	48 3b c8	 cmp	 rcx, rax
  00044	75 02		 jne	 SHORT $LN14@Verify_ran
  00046	eb 6b		 jmp	 SHORT $LN15@Verify_ran
$LN14@Verify_ran:
$LN7@Verify_ran:
  00048	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@
  0004f	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00054	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0005b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00060	45 33 c9	 xor	 r9d, r9d
  00063	41 b8 b1 00 00
	00		 mov	 r8d, 177		; 000000b1H
  00069	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00070	b9 02 00 00 00	 mov	 ecx, 2
  00075	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0007b	83 f8 01	 cmp	 eax, 1
  0007e	75 03		 jne	 SHORT $LN19@Verify_ran
  00080	cc		 int	 3
  00081	33 c0		 xor	 eax, eax
$LN19@Verify_ran:
  00083	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0008c	41 b9 b1 00 00
	00		 mov	 r9d, 177		; 000000b1H
  00092	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00099	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
  000a0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
  000a7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000ad	33 c0		 xor	 eax, eax
  000af	85 c0		 test	 eax, eax
  000b1	75 95		 jne	 SHORT $LN7@Verify_ran
$LN15@Verify_ran:
  000b3	33 c0		 xor	 eax, eax
  000b5	85 c0		 test	 eax, eax
  000b7	0f 85 66 ff ff
	ff		 jne	 $LN4@Verify_ran
$LN10@Verify_ran:

; 178  :         _STL_VERIFY(_First._Ptr <= _Last._Ptr, "vector iterator range transposed");

  000bd	48 8b 44 24 50	 mov	 rax, QWORD PTR _First$[rsp]
  000c2	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Last$[rsp]
  000c7	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000cb	48 39 48 10	 cmp	 QWORD PTR [rax+16], rcx
  000cf	77 02		 ja	 SHORT $LN16@Verify_ran
  000d1	eb 6b		 jmp	 SHORT $LN17@Verify_ran
$LN16@Verify_ran:
$LN13@Verify_ran:
  000d3	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@
  000da	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000df	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  000e6	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000eb	45 33 c9	 xor	 r9d, r9d
  000ee	41 b8 b2 00 00
	00		 mov	 r8d, 178		; 000000b2H
  000f4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000fb	b9 02 00 00 00	 mov	 ecx, 2
  00100	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00106	83 f8 01	 cmp	 eax, 1
  00109	75 03		 jne	 SHORT $LN20@Verify_ran
  0010b	cc		 int	 3
  0010c	33 c0		 xor	 eax, eax
$LN20@Verify_ran:
  0010e	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00117	41 b9 b2 00 00
	00		 mov	 r9d, 178		; 000000b2H
  0011d	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00124	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
  0012b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
  00132	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00138	33 c0		 xor	 eax, eax
  0013a	85 c0		 test	 eax, eax
  0013c	75 95		 jne	 SHORT $LN13@Verify_ran
$LN17@Verify_ran:
  0013e	33 c0		 xor	 eax, eax
  00140	85 c0		 test	 eax, eax
  00142	0f 85 75 ff ff
	ff		 jne	 $LN10@Verify_ran

; 179  :     }

  00148	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0014c	5f		 pop	 rdi
  0014d	c3		 ret	 0
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@1@0@Z ENDP ; std::_Verify_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAXAEBV12@@Z
_TEXT	SEGMENT
tv69 = 48
this$ = 80
_Right$ = 88
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAXAEBV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Compat, COMDAT

; 167  :     void _Compat(const _Vector_const_iterator& _Right) const { // test for compatible iterator pair

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
$LN4@Compat:

; 168  : #if _ITERATOR_DEBUG_LEVEL == 0
; 169  :         (void) _Right;
; 170  : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 0 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 0 vvv
; 171  :         _STL_VERIFY(this->_Getcont() == _Right._Getcont(), "vector iterators incompatible");

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002d	48 89 44 24 30	 mov	 QWORD PTR tv69[rsp], rax
  00032	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00037	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv69[rsp]
  00041	48 3b c8	 cmp	 rcx, rax
  00044	75 02		 jne	 SHORT $LN8@Compat
  00046	eb 6b		 jmp	 SHORT $LN9@Compat
$LN8@Compat:
$LN7@Compat:
  00048	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BO@CAOBBIOC@vector?5iterators?5incompatible@
  0004f	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00054	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0005b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00060	45 33 c9	 xor	 r9d, r9d
  00063	41 b8 ab 00 00
	00		 mov	 r8d, 171		; 000000abH
  00069	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00070	b9 02 00 00 00	 mov	 ecx, 2
  00075	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0007b	83 f8 01	 cmp	 eax, 1
  0007e	75 03		 jne	 SHORT $LN11@Compat
  00080	cc		 int	 3
  00081	33 c0		 xor	 eax, eax
$LN11@Compat:
  00083	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0008c	41 b9 ab 00 00
	00		 mov	 r9d, 171		; 000000abH
  00092	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00099	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1NG@KIOFJOHO@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
  000a0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EA@DJDGNIII@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
  000a7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000ad	33 c0		 xor	 eax, eax
  000af	85 c0		 test	 eax, eax
  000b1	75 95		 jne	 SHORT $LN7@Compat
$LN9@Compat:
  000b3	33 c0		 xor	 eax, eax
  000b5	85 c0		 test	 eax, eax
  000b7	0f 85 66 ff ff
	ff		 jne	 $LN4@Compat

; 172  : #endif // _ITERATOR_DEBUG_LEVEL == 0
; 173  :     }

  000bd	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000c1	5f		 pop	 rdi
  000c2	c3		 ret	 0
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAXAEBV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv69 = 32
this$ = 64
_Right$ = 72
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator!=, COMDAT

; 146  :     _NODISCARD bool operator!=(const _Vector_const_iterator& _Right) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 147  :         return !(*this == _Right);

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator==
  00032	0f b6 c0	 movzx	 eax, al
  00035	85 c0		 test	 eax, eax
  00037	75 0a		 jne	 SHORT $LN3@operator
  00039	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  00041	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00043	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN4@operator:
  0004b	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv69[rsp]

; 148  :     }

  00050	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv69 = 32
this$ = 64
_Right$ = 72
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator==, COMDAT

; 141  :     _NODISCARD bool operator==(const _Vector_const_iterator& _Right) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 142  :         _Compat(_Right);

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAXAEBV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Compat

; 143  :         return _Ptr == _Right._Ptr;

  00032	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003c	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00040	48 39 48 10	 cmp	 QWORD PTR [rax+16], rcx
  00044	75 0a		 jne	 SHORT $LN3@operator
  00046	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  0004e	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00050	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN4@operator:
  00058	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv69[rsp]

; 144  :     }

  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEBUhookData@@XZ
_TEXT	SEGMENT
_Mycont$ = 48
this$ = 80
??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEBUhookData@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator->, COMDAT

; 51   :     _NODISCARD pointer operator->() const {

$LN21:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 52   : #if _ITERATOR_DEBUG_LEVEL != 0
; 53   :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());

  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00028	48 89 44 24 30	 mov	 QWORD PTR _Mycont$[rsp], rax
$LN4@operator:

; 54   :         _STL_VERIFY(_Ptr, "can't dereference value-initialized vector iterator");

  0002d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 78 10 00	 cmp	 QWORD PTR [rax+16], 0
  00037	74 02		 je	 SHORT $LN14@operator
  00039	eb 6b		 jmp	 SHORT $LN15@operator
$LN14@operator:
$LN7@operator:
  0003b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@
  00042	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00047	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0004e	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00053	45 33 c9	 xor	 r9d, r9d
  00056	41 b8 36 00 00
	00		 mov	 r8d, 54			; 00000036H
  0005c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00063	b9 02 00 00 00	 mov	 ecx, 2
  00068	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0006e	83 f8 01	 cmp	 eax, 1
  00071	75 03		 jne	 SHORT $LN19@operator
  00073	cc		 int	 3
  00074	33 c0		 xor	 eax, eax
$LN19@operator:
  00076	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0007f	41 b9 36 00 00
	00		 mov	 r9d, 54			; 00000036H
  00085	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0008c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1NO@GBEPGGBL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
  00093	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
  0009a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000a0	33 c0		 xor	 eax, eax
  000a2	85 c0		 test	 eax, eax
  000a4	75 95		 jne	 SHORT $LN7@operator
$LN15@operator:
  000a6	33 c0		 xor	 eax, eax
  000a8	85 c0		 test	 eax, eax
  000aa	75 81		 jne	 SHORT $LN4@operator
$LN10@operator:

; 55   :         _STL_VERIFY(

  000ac	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mycont$[rsp]
  000b1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000b6	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000ba	48 39 48 08	 cmp	 QWORD PTR [rax+8], rcx
  000be	77 16		 ja	 SHORT $LN16@operator
  000c0	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000c5	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Mycont$[rsp]
  000ca	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000ce	48 39 48 10	 cmp	 QWORD PTR [rax+16], rcx
  000d2	73 02		 jae	 SHORT $LN16@operator
  000d4	eb 6b		 jmp	 SHORT $LN17@operator
$LN16@operator:
$LN13@operator:
  000d6	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@
  000dd	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000e2	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  000e9	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000ee	45 33 c9	 xor	 r9d, r9d
  000f1	41 b8 38 00 00
	00		 mov	 r8d, 56			; 00000038H
  000f7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000fe	b9 02 00 00 00	 mov	 ecx, 2
  00103	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00109	83 f8 01	 cmp	 eax, 1
  0010c	75 03		 jne	 SHORT $LN20@operator
  0010e	cc		 int	 3
  0010f	33 c0		 xor	 eax, eax
$LN20@operator:
  00111	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0011a	41 b9 38 00 00
	00		 mov	 r9d, 56			; 00000038H
  00120	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00127	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1NO@GBEPGGBL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
  0012e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
  00135	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter

; 56   :             _Mycont->_Myfirst <= _Ptr && _Ptr < _Mycont->_Mylast, "can't dereference out of range vector iterator");

  0013b	33 c0		 xor	 eax, eax
  0013d	85 c0		 test	 eax, eax
  0013f	75 95		 jne	 SHORT $LN13@operator
$LN17@operator:
  00141	33 c0		 xor	 eax, eax
  00143	85 c0		 test	 eax, eax
  00145	0f 85 61 ff ff
	ff		 jne	 $LN10@operator

; 57   : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 58   : 
; 59   :         return _Ptr;

  0014b	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00150	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 60   :     }

  00154	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00158	5f		 pop	 rdi
  00159	c3		 ret	 0
??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEBUhookData@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >, COMDAT

; 36   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) : _Ptr(_Parg) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::_Iterator_base12
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Parg$[rsp]
  0003d	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 37   :         this->_Adopt(_Pvector);

  00041	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Pvector$[rsp]
  00046	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
  00050	90		 npad	 1

; 38   :     }

  00051	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00056	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UhookData@@@std@@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UhookData@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@UhookData@@@std@@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UhookData@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<hookData>,std::_Vector_val<std::_Simple_types<hookData> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@UhookData@@@std@@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UhookData@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<hookData>,std::_Vector_val<std::_Simple_types<hookData> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UhookData@@@std@@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UhookData@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@UhookData@@@std@@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UhookData@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<hookData>,std::_Vector_val<std::_Simple_types<hookData> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@UhookData@@@std@@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UhookData@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<hookData>,std::_Vector_val<std::_Simple_types<hookData> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<hookData> >::_Vector_val<std::_Simple_types<hookData> >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<hookData> >::_Vector_val<std::_Simple_types<hookData> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAAEBV?$allocator@UhookData@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAAEBV?$allocator@UhookData@@@2@XZ PROC ; std::vector<hookData,std::allocator<hookData> >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1693 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@UhookData@@@std@@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UhookData@@@2@XZ ; std::_Compressed_pair<std::allocator<hookData>,std::_Vector_val<std::_Simple_types<hookData> >,1>::_Get_first

; 1694 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAAEBV?$allocator@UhookData@@@2@XZ ENDP ; std::vector<hookData,std::allocator<hookData> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAAEAV?$allocator@UhookData@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAAEAV?$allocator@UhookData@@@2@XZ PROC ; std::vector<hookData,std::allocator<hookData> >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@UhookData@@@std@@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UhookData@@@2@XZ ; std::_Compressed_pair<std::allocator<hookData>,std::_Vector_val<std::_Simple_types<hookData> >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAAEAV?$allocator@UhookData@@@2@XZ ENDP ; std::vector<hookData,std::allocator<hookData> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z
_TEXT	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z PROC ; std::vector<hookData,std::allocator<hookData> >::_Orphan_range, COMDAT

; 1668 :     void _Orphan_range(pointer _First, pointer _Last) const { // orphan iterators within specified (inclusive) range

$LN9:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1669 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1670 :         _Lockit _Lock(_LOCK_DEBUG);

  00028	ba 03 00 00 00	 mov	 edx, 3
  0002d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00038	90		 npad	 1

; 1671 : 
; 1672 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

  00039	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00041	48 83 c0 08	 add	 rax, 8
  00045	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax
$LN2@Orphan_ran:

; 1673 :         while (*_Pnext) {

  0004a	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0004f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00053	74 61		 je	 SHORT $LN3@Orphan_ran

; 1674 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

  00055	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00061	48 89 44 24 40	 mov	 QWORD PTR _Pnextptr$4[rsp], rax

; 1675 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

  00066	48 8b 44 24 68	 mov	 rax, QWORD PTR _First$[rsp]
  0006b	48 39 44 24 40	 cmp	 QWORD PTR _Pnextptr$4[rsp], rax
  00070	72 0c		 jb	 SHORT $LN6@Orphan_ran
  00072	48 8b 44 24 40	 mov	 rax, QWORD PTR _Pnextptr$4[rsp]
  00077	48 39 44 24 70	 cmp	 QWORD PTR _Last$[rsp], rax
  0007c	73 13		 jae	 SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1676 :                 _Pnext = &(*_Pnext)->_Mynextiter;

  0007e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00083	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00086	48 83 c0 08	 add	 rax, 8
  0008a	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax

; 1677 :             } else { // orphan the iterator

  0008f	eb 23		 jmp	 SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 1678 :                 (*_Pnext)->_Myproxy = nullptr;

  00091	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00096	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00099	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1679 :                 *_Pnext             = (*_Pnext)->_Mynextiter;

  000a0	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  000a5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a8	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$[rsp]
  000ad	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000b1	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN5@Orphan_ran:

; 1680 :             }
; 1681 :         }

  000b4	eb 94		 jmp	 SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 1682 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1683 :         (void) _First;
; 1684 :         (void) _Last;
; 1685 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1686 :     }

  000b6	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  000bb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000c1	48 8b cc	 mov	 rcx, rsp
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z$rtcFrameData
  000cb	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d0	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
?_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z ENDP ; std::vector<hookData,std::allocator<hookData> >::_Orphan_range
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z@4HA PROC ; `std::vector<hookData,std::allocator<hookData> >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z@4HA ENDP ; `std::vector<hookData,std::allocator<hookData> >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z@4HA PROC ; `std::vector<hookData,std::allocator<hookData> >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z@4HA ENDP ; `std::vector<hookData,std::allocator<hookData> >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@CAXXZ PROC ; std::vector<hookData,std::allocator<hookData> >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 1661 :         _Xlength_error("vector<T> too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlength@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@CAXXZ ENDP ; std::vector<hookData,std::allocator<hookData> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXXZ PROC ; std::vector<hookData,std::allocator<hookData> >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	0f 84 85 00 00
	00		 je	 $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  0006c	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00071	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@0@Z ; std::vector<hookData,std::allocator<hookData> >::_Destroy
  00086	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00087	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  0008c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00091	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00094	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00097	48 2b c1	 sub	 rax, rcx
  0009a	48 99		 cdq
  0009c	b9 68 00 00 00	 mov	 ecx, 104		; 00000068H
  000a1	48 f7 f9	 idiv	 rcx
  000a4	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000a9	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000ae	e8 00 00 00 00	 call	 ?_Getal@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAAEAV?$allocator@UhookData@@@2@XZ ; std::vector<hookData,std::allocator<hookData> >::_Getal
  000b3	90		 npad	 1
  000b4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000b9	4c 8b c1	 mov	 r8, rcx
  000bc	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c1	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000c4	48 8b c8	 mov	 rcx, rax
  000c7	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UhookData@@@std@@QEAAXQEAUhookData@@_K@Z ; std::allocator<hookData>::deallocate
  000cc	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000cd	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d2	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000d9	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000de	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000e5	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000ea	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000f1	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000f5	5f		 pop	 rdi
  000f6	c3		 ret	 0
?_Tidy@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXXZ ENDP ; std::vector<hookData,std::allocator<hookData> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Change_array@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXQEAUhookData@@_K1@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
_Newvec$ = 104
_Newsize$ = 112
_Newcapacity$ = 120
?_Change_array@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXQEAUhookData@@_K1@Z PROC ; std::vector<hookData,std::allocator<hookData> >::_Change_array, COMDAT

; 1623 :     void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1624 :         // orphan all iterators, discard old array, acquire new array
; 1625 :         auto& _My_data    = _Mypair._Myval2;

  0002d	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1626 :         pointer& _Myfirst = _My_data._Myfirst;

  00037	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003c	48 83 c0 08	 add	 rax, 8
  00040	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1627 :         pointer& _Mylast  = _My_data._Mylast;

  00045	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004a	48 83 c0 10	 add	 rax, 16
  0004e	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1628 :         pointer& _Myend   = _My_data._Myend;

  00053	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00058	48 83 c0 18	 add	 rax, 24
  0005c	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1629 : 
; 1630 :         _My_data._Orphan_all();

  00061	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00066	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1631 : 
; 1632 :         if (_Myfirst) { // destroy and deallocate old array

  0006b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00070	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00074	74 5e		 je	 SHORT $LN2@Change_arr

; 1633 :             _Destroy(_Myfirst, _Mylast);

  00076	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0007b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00083	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00086	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0008b	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@0@Z ; std::vector<hookData,std::allocator<hookData> >::_Destroy

; 1634 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00090	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00095	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0009a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 2b c1	 sub	 rax, rcx
  000a3	48 99		 cdq
  000a5	b9 68 00 00 00	 mov	 ecx, 104		; 00000068H
  000aa	48 f7 f9	 idiv	 rcx
  000ad	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000b2	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000b7	e8 00 00 00 00	 call	 ?_Getal@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAAEAV?$allocator@UhookData@@@2@XZ ; std::vector<hookData,std::allocator<hookData> >::_Getal
  000bc	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000c1	4c 8b c1	 mov	 r8, rcx
  000c4	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c9	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000cc	48 8b c8	 mov	 rcx, rax
  000cf	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UhookData@@@std@@QEAAXQEAUhookData@@_K@Z ; std::allocator<hookData>::deallocate
$LN2@Change_arr:

; 1635 :         }
; 1636 : 
; 1637 :         _Myfirst = _Newvec;

  000d4	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d9	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000de	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1638 :         _Mylast  = _Newvec + _Newsize;

  000e1	48 6b 44 24 70
	68		 imul	 rax, QWORD PTR _Newsize$[rsp], 104 ; 00000068H
  000e7	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000ec	48 03 c8	 add	 rcx, rax
  000ef	48 8b c1	 mov	 rax, rcx
  000f2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000f7	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1639 :         _Myend   = _Newvec + _Newcapacity;

  000fa	48 6b 44 24 78
	68		 imul	 rax, QWORD PTR _Newcapacity$[rsp], 104 ; 00000068H
  00100	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  00105	48 03 c8	 add	 rcx, rax
  00108	48 8b c1	 mov	 rax, rcx
  0010b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  00110	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1640 :     }

  00113	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00117	5f		 pop	 rdi
  00118	c3		 ret	 0
?_Change_array@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXQEAUhookData@@_K1@Z ENDP ; std::vector<hookData,std::allocator<hookData> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Calculate_growth@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 32
_Geometric$ = 40
tv67 = 48
this$ = 80
_Newsize$ = 88
?_Calculate_growth@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<hookData,std::allocator<hookData> >::_Calculate_growth, COMDAT

; 1571 :     size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1572 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1573 :         const size_type _Oldcapacity = capacity();

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?capacity@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEBA_KXZ ; std::vector<hookData,std::allocator<hookData> >::capacity
  0002d	48 89 44 24 20	 mov	 QWORD PTR _Oldcapacity$[rsp], rax

; 1574 : 
; 1575 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00032	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ?max_size@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEBA_KXZ ; std::vector<hookData,std::allocator<hookData> >::max_size
  0003c	48 89 44 24 30	 mov	 QWORD PTR tv67[rsp], rax
  00041	33 d2		 xor	 edx, edx
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00048	b9 02 00 00 00	 mov	 ecx, 2
  0004d	48 f7 f1	 div	 rcx
  00050	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv67[rsp]
  00055	48 2b c8	 sub	 rcx, rax
  00058	48 8b c1	 mov	 rax, rcx
  0005b	48 39 44 24 20	 cmp	 QWORD PTR _Oldcapacity$[rsp], rax
  00060	76 07		 jbe	 SHORT $LN2@Calculate_

; 1576 :             return _Newsize; // geometric growth would overflow

  00062	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00067	eb 37		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1577 :         }
; 1578 : 
; 1579 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00069	33 d2		 xor	 edx, edx
  0006b	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00070	b9 02 00 00 00	 mov	 ecx, 2
  00075	48 f7 f1	 div	 rcx
  00078	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Oldcapacity$[rsp]
  0007d	48 03 c8	 add	 rcx, rax
  00080	48 8b c1	 mov	 rax, rcx
  00083	48 89 44 24 28	 mov	 QWORD PTR _Geometric$[rsp], rax

; 1580 : 
; 1581 :         if (_Geometric < _Newsize) {

  00088	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  0008d	48 39 44 24 28	 cmp	 QWORD PTR _Geometric$[rsp], rax
  00092	73 07		 jae	 SHORT $LN3@Calculate_

; 1582 :             return _Newsize; // geometric growth would be insufficient

  00094	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00099	eb 05		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1583 :         }
; 1584 : 
; 1585 :         return _Geometric; // geometric growth is sufficient

  0009b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Geometric$[rsp]
$LN1@Calculate_:

; 1586 :     }

  000a0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000a4	5f		 pop	 rdi
  000a5	c3		 ret	 0
?_Calculate_growth@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<hookData,std::allocator<hookData> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@0@Z PROC ; std::vector<hookData,std::allocator<hookData> >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAAEAV?$allocator@UhookData@@@2@XZ ; std::vector<hookData,std::allocator<hookData> >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@UhookData@@@std@@@std@@YAXPEAUhookData@@QEAU1@AEAV?$allocator@UhookData@@@0@@Z ; std::_Destroy_range<std::allocator<hookData> >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@0@Z ENDP ; std::vector<hookData,std::allocator<hookData> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@00@Z
_TEXT	SEGMENT
$T1 = 48
this$ = 80
_First$ = 88
_Last$ = 96
_Dest$ = 104
?_Umove_if_noexcept@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@00@Z PROC ; std::vector<hookData,std::allocator<hookData> >::_Umove_if_noexcept, COMDAT

; 1561 :     void _Umove_if_noexcept(pointer _First, pointer _Last, pointer _Dest) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1562 :         // move_if_noexcept [_First, _Last) to raw _Dest, using allocator
; 1563 :         _Umove_if_noexcept1(_First, _Last, _Dest,

  0002d	48 8d 44 24 30	 lea	 rax, QWORD PTR $T1[rsp]
  00032	48 8b f8	 mov	 rdi, rax
  00035	33 c0		 xor	 eax, eax
  00037	b9 01 00 00 00	 mov	 ecx, 1
  0003c	f3 aa		 rep stosb
  0003e	0f b6 44 24 30	 movzx	 eax, BYTE PTR $T1[rsp]
  00043	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  00047	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Dest$[rsp]
  0004c	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Last$[rsp]
  00051	48 8b 54 24 58	 mov	 rdx, QWORD PTR _First$[rsp]
  00056	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Umove_if_noexcept1@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@00U?$integral_constant@_N$00@2@@Z ; std::vector<hookData,std::allocator<hookData> >::_Umove_if_noexcept1

; 1564 :             bool_constant<disjunction_v<is_nothrow_move_constructible<_Ty>, negation<is_copy_constructible<_Ty>>>>{});
; 1565 :     }

  00060	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
?_Umove_if_noexcept@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@00@Z ENDP ; std::vector<hookData,std::allocator<hookData> >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
__formal$ = 80
?_Umove_if_noexcept1@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<hookData,std::allocator<hookData> >::_Umove_if_noexcept1, COMDAT

; 1551 :     void _Umove_if_noexcept1(pointer _First, pointer _Last, pointer _Dest, true_type) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1552 :         // move [_First, _Last) to raw _Dest, using allocator
; 1553 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAAEAV?$allocator@UhookData@@@2@XZ ; std::vector<hookData,std::allocator<hookData> >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z ; std::_Uninitialized_move<hookData *,std::allocator<hookData> >

; 1554 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove_if_noexcept1@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<hookData,std::allocator<hookData> >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAPEAUhookData@@PEAU3@00@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
?_Umove@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAPEAUhookData@@PEAU3@00@Z PROC ; std::vector<hookData,std::allocator<hookData> >::_Umove, COMDAT

; 1547 :     pointer _Umove(pointer _First, pointer _Last, pointer _Dest) { // move [_First, _Last) to raw _Dest, using allocator

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1548 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAAEAV?$allocator@UhookData@@@2@XZ ; std::vector<hookData,std::allocator<hookData> >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAUhookData@@V?$allocator@UhookData@@@std@@@std@@YAPEAUhookData@@QEAU1@0PEAU1@AEAV?$allocator@UhookData@@@0@@Z ; std::_Uninitialized_move<hookData *,std::allocator<hookData> >

; 1549 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAPEAUhookData@@PEAU3@00@Z ENDP ; std::vector<hookData,std::allocator<hookData> >::_Umove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?capacity@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?capacity@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEBA_KXZ PROC ; std::vector<hookData,std::allocator<hookData> >::capacity, COMDAT

; 1446 :     _NODISCARD size_type capacity() const noexcept { // return current length of allocated storage

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1447 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1448 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 99		 cdq
  0003c	b9 68 00 00 00	 mov	 ecx, 104		; 00000068H
  00041	48 f7 f9	 idiv	 rcx

; 1449 :     }

  00044	48 83 c4 10	 add	 rsp, 16
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?capacity@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<hookData,std::allocator<hookData> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEBA_KXZ PROC ; std::vector<hookData,std::allocator<hookData> >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1442 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAAEBV?$allocator@UhookData@@@2@XZ ; std::vector<hookData,std::allocator<hookData> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SA_KAEBV?$allocator@UhookData@@@2@@Z ; std::_Default_allocator_traits<std::allocator<hookData> >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<hookData,std::allocator<hookData> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@XZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@XZ PROC ; std::vector<hookData,std::allocator<hookData> >::_Unchecked_end, COMDAT

; 1423 :     pointer _Unchecked_end() noexcept { // return pointer for end of mutable sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1424 :         return _Mypair._Myval2._Mylast;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 1425 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@XZ ENDP ; std::vector<hookData,std::allocator<hookData> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@XZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@XZ PROC ; std::vector<hookData,std::allocator<hookData> >::_Unchecked_begin, COMDAT

; 1415 :     pointer _Unchecked_begin() noexcept { // return pointer for beginning of mutable sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1416 :         return _Mypair._Myval2._Myfirst;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1417 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@XZ ENDP ; std::vector<hookData,std::allocator<hookData> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ PROC ; std::vector<hookData,std::allocator<hookData> >::end, COMDAT

; 1370 :     _NODISCARD iterator end() noexcept { // return iterator for end of mutable sequence

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 1371 :         auto& _My_data = _Mypair._Myval2;

  0002b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1372 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  00035	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$addressof@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<hookData> > >
  0003f	90		 npad	 1
  00040	4c 8b c0	 mov	 r8, rax
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00048	48 8b 50 10	 mov	 rdx, QWORD PTR [rax+16]
  0004c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00051	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >
  00056	90		 npad	 1
  00057	8b 44 24 28	 mov	 eax, DWORD PTR $T1[rsp]
  0005b	83 c8 01	 or	 eax, 1
  0005e	89 44 24 28	 mov	 DWORD PTR $T1[rsp], eax
  00062	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1373 :     }

  00067	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
  0006d	cc		 int	 3
?end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ ENDP ; std::vector<hookData,std::allocator<hookData> >::end
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ@4HA PROC ; `std::vector<hookData,std::allocator<hookData> >::end'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<hookData,std::allocator<hookData> >::end'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ@4HA PROC ; `std::vector<hookData,std::allocator<hookData> >::end'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<hookData,std::allocator<hookData> >::end'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ PROC ; std::vector<hookData,std::allocator<hookData> >::begin, COMDAT

; 1360 :     _NODISCARD iterator begin() noexcept { // return iterator for beginning of mutable sequence

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 1361 :         auto& _My_data = _Mypair._Myval2;

  0002b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1362 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00035	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$addressof@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<hookData> > >
  0003f	90		 npad	 1
  00040	4c 8b c0	 mov	 r8, rax
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00048	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  0004c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00051	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >
  00056	90		 npad	 1
  00057	8b 44 24 28	 mov	 eax, DWORD PTR $T1[rsp]
  0005b	83 c8 01	 or	 eax, 1
  0005e	89 44 24 28	 mov	 DWORD PTR $T1[rsp], eax
  00062	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1363 :     }

  00067	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
  0006d	cc		 int	 3
?begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ ENDP ; std::vector<hookData,std::allocator<hookData> >::begin
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ@4HA PROC ; `std::vector<hookData,std::allocator<hookData> >::begin'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<hookData,std::allocator<hookData> >::begin'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ@4HA PROC ; `std::vector<hookData,std::allocator<hookData> >::begin'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<hookData,std::allocator<hookData> >::begin'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?clear@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
this$ = 80
?clear@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXXZ PROC ; std::vector<hookData,std::allocator<hookData> >::clear, COMDAT

; 1333 :     void clear() noexcept { // erase all

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1334 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1335 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1336 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1337 : 
; 1338 :         _My_data._Orphan_all();

  00044	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00049	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0004e	90		 npad	 1

; 1339 :         _Destroy(_Myfirst, _Mylast);

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00054	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00057	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0005c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0005f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00064	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXPEAUhookData@@0@Z ; std::vector<hookData,std::allocator<hookData> >::_Destroy
  00069	90		 npad	 1

; 1340 :         _Mylast = _Myfirst;

  0006a	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006f	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00074	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00077	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1341 :     }

  0007a	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0007e	5f		 pop	 rdi
  0007f	c3		 ret	 0
?clear@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXXZ ENDP ; std::vector<hookData,std::allocator<hookData> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_Whereptr$ = 48
_My_data$ = 56
_Mylast$ = 64
$T1 = 72
tv74 = 80
tv136 = 88
this$ = 112
__$ReturnUdt$ = 120
_Where$ = 128
?erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z PROC ; std::vector<hookData,std::allocator<hookData> >::erase, COMDAT

; 1292 :     iterator erase(const_iterator _Where) { // erase element at _Where

$LN15:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 18 00 00 00	 mov	 ecx, 24
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]
  00028	c7 44 24 48 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 1293 :         const pointer _Whereptr = _Where._Ptr;

  00030	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR _Where$[rsp]
  00038	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0003c	48 89 44 24 30	 mov	 QWORD PTR _Whereptr$[rsp], rax

; 1294 :         auto& _My_data          = _Mypair._Myval2;

  00041	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00046	48 89 44 24 38	 mov	 QWORD PTR _My_data$[rsp], rax

; 1295 :         pointer& _Mylast        = _My_data._Mylast;

  0004b	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  00050	48 83 c0 10	 add	 rax, 16
  00054	48 89 44 24 40	 mov	 QWORD PTR _Mylast$[rsp], rax
$LN4@erase:

; 1296 : 
; 1297 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1298 :         _STL_VERIFY(

  00059	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _Where$[rsp]
  00061	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00066	48 89 44 24 50	 mov	 QWORD PTR tv74[rsp], rax
  0006b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00070	e8 00 00 00 00	 call	 ??$addressof@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<hookData> > >
  00075	48 8b 4c 24 50	 mov	 rcx, QWORD PTR tv74[rsp]
  0007a	48 3b c8	 cmp	 rcx, rax
  0007d	75 21		 jne	 SHORT $LN7@erase
  0007f	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  00084	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00088	48 39 44 24 30	 cmp	 QWORD PTR _Whereptr$[rsp], rax
  0008d	72 11		 jb	 SHORT $LN7@erase
  0008f	48 8b 44 24 40	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00094	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Whereptr$[rsp]
  00099	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0009c	76 02		 jbe	 SHORT $LN7@erase
  0009e	eb 6b		 jmp	 SHORT $LN9@erase
$LN7@erase:
  000a0	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CE@EAMOGAIE@vector?5erase?5iterator?5outside?5r@
  000a7	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000ac	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  000b3	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000b8	45 33 c9	 xor	 r9d, r9d
  000bb	41 b8 14 05 00
	00		 mov	 r8d, 1300		; 00000514H
  000c1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000c8	b9 02 00 00 00	 mov	 ecx, 2
  000cd	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000d3	83 f8 01	 cmp	 eax, 1
  000d6	75 03		 jne	 SHORT $LN11@erase
  000d8	cc		 int	 3
  000d9	33 c0		 xor	 eax, eax
$LN11@erase:
  000db	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000e4	41 b9 14 05 00
	00		 mov	 r9d, 1300		; 00000514H
  000ea	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000f1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1JG@GJLGOKOD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
  000f8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EM@BEMPOGMM@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi@
  000ff	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter

; 1299 :             _Where._Getcont() == _STD addressof(_My_data) && _Whereptr >= _My_data._Myfirst && _Mylast > _Whereptr,
; 1300 :             "vector erase iterator outside range");

  00105	33 c0		 xor	 eax, eax
  00107	85 c0		 test	 eax, eax
  00109	75 95		 jne	 SHORT $LN7@erase
$LN9@erase:
  0010b	33 c0		 xor	 eax, eax
  0010d	85 c0		 test	 eax, eax
  0010f	0f 85 44 ff ff
	ff		 jne	 $LN4@erase

; 1301 :         _Orphan_range(_Whereptr, _Mylast);

  00115	48 8b 44 24 40	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0011a	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0011d	48 8b 54 24 30	 mov	 rdx, QWORD PTR _Whereptr$[rsp]
  00122	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00127	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEBAXPEAUhookData@@0@Z ; std::vector<hookData,std::allocator<hookData> >::_Orphan_range

; 1302 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1303 : 
; 1304 :         _Move_unchecked(_Whereptr + 1, _Mylast, _Whereptr);

  0012c	48 8b 44 24 30	 mov	 rax, QWORD PTR _Whereptr$[rsp]
  00131	48 83 c0 68	 add	 rax, 104		; 00000068H
  00135	4c 8b 44 24 30	 mov	 r8, QWORD PTR _Whereptr$[rsp]
  0013a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  0013f	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00142	48 8b c8	 mov	 rcx, rax
  00145	e8 00 00 00 00	 call	 ??$_Move_unchecked@PEAUhookData@@PEAU1@@std@@YAPEAUhookData@@PEAU1@00@Z ; std::_Move_unchecked<hookData *,hookData *>

; 1305 :         _Alty_traits::destroy(_Getal(), _Unfancy(_Mylast - 1));

  0014a	48 8b 44 24 40	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0014f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00152	48 83 e8 68	 sub	 rax, 104		; 00000068H
  00156	48 8b c8	 mov	 rcx, rax
  00159	e8 00 00 00 00	 call	 ??$_Unfancy@UhookData@@@std@@YAPEAUhookData@@PEAU1@@Z ; std::_Unfancy<hookData>
  0015e	48 89 44 24 58	 mov	 QWORD PTR tv136[rsp], rax
  00163	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00168	e8 00 00 00 00	 call	 ?_Getal@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAAEAV?$allocator@UhookData@@@2@XZ ; std::vector<hookData,std::allocator<hookData> >::_Getal
  0016d	48 8b 4c 24 58	 mov	 rcx, QWORD PTR tv136[rsp]
  00172	48 8b d1	 mov	 rdx, rcx
  00175	48 8b c8	 mov	 rcx, rax
  00178	e8 00 00 00 00	 call	 ??$destroy@UhookData@@@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SAXAEAV?$allocator@UhookData@@@1@QEAUhookData@@@Z ; std::_Default_allocator_traits<std::allocator<hookData> >::destroy<hookData>

; 1306 :         --_Mylast;

  0017d	48 8b 44 24 40	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00182	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00185	48 83 e8 68	 sub	 rax, 104		; 00000068H
  00189	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  0018e	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1307 :         return iterator(_Whereptr, _STD addressof(_My_data));

  00191	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00196	e8 00 00 00 00	 call	 ??$addressof@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<hookData> > >
  0019b	4c 8b c0	 mov	 r8, rax
  0019e	48 8b 54 24 30	 mov	 rdx, QWORD PTR _Whereptr$[rsp]
  001a3	48 8b 4c 24 78	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  001a8	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@PEAUhookData@@PEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >
  001ad	8b 44 24 48	 mov	 eax, DWORD PTR $T1[rsp]
  001b1	83 c8 01	 or	 eax, 1
  001b4	89 44 24 48	 mov	 DWORD PTR $T1[rsp], eax
  001b8	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _Where$[rsp]
  001c0	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  001c5	48 8b 44 24 78	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1308 :     }

  001ca	48 83 c4 60	 add	 rsp, 96			; 00000060H
  001ce	5f		 pop	 rdi
  001cf	c3		 ret	 0
  001d0	cc		 int	 3
?erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z ENDP ; std::vector<hookData,std::allocator<hookData> >::erase
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 48
_My_data$ = 56
_Mylast$ = 64
$T1 = 72
tv74 = 80
tv136 = 88
this$ = 112
__$ReturnUdt$ = 120
_Where$ = 128
?dtor$0@?0??erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z@4HA PROC ; `std::vector<hookData,std::allocator<hookData> >::erase'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR _Where$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z@4HA ENDP ; `std::vector<hookData,std::allocator<hookData> >::erase'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 48
_My_data$ = 56
_Mylast$ = 64
$T1 = 72
tv74 = 80
tv136 = 88
this$ = 112
__$ReturnUdt$ = 120
_Where$ = 128
?dtor$1@?0??erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z@4HA PROC ; `std::vector<hookData,std::allocator<hookData> >::erase'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 48	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN14@dtor$1
  0001d	83 65 48 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 78	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
$LN14@dtor$1:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$1@?0??erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z@4HA ENDP ; `std::vector<hookData,std::allocator<hookData> >::erase'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 48
_My_data$ = 56
_Mylast$ = 64
$T1 = 72
tv74 = 80
tv136 = 88
this$ = 112
__$ReturnUdt$ = 120
_Where$ = 128
?dtor$0@?0??erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z@4HA PROC ; `std::vector<hookData,std::allocator<hookData> >::erase'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR _Where$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z@4HA ENDP ; `std::vector<hookData,std::allocator<hookData> >::erase'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 48
_My_data$ = 56
_Mylast$ = 64
$T1 = 72
tv74 = 80
tv136 = 88
this$ = 112
__$ReturnUdt$ = 120
_Where$ = 128
?dtor$1@?0??erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z@4HA PROC ; `std::vector<hookData,std::allocator<hookData> >::erase'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 48	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN14@dtor$1
  0001d	83 65 48 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 78	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
$LN14@dtor$1:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$1@?0??erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z@4HA ENDP ; `std::vector<hookData,std::allocator<hookData> >::erase'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?push_back@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXAEBUhookData@@@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXAEBUhookData@@@Z PROC ; std::vector<hookData,std::allocator<hookData> >::push_back, COMDAT

; 667  :     void push_back(const _Ty& _Val) { // insert element at end, provide strong guarantee

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 668  :         emplace_back(_Val);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Val$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$emplace_back@AEBUhookData@@@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXAEBUhookData@@@Z ; std::vector<hookData,std::allocator<hookData> >::emplace_back<hookData const &>

; 669  :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
?push_back@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXAEBUhookData@@@Z ENDP ; std::vector<hookData,std::allocator<hookData> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S1$ = 52
$T4 = 68
this$ = 96
??1?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ PROC ; std::vector<hookData,std::allocator<hookData> >::~vector<hookData,std::allocator<hookData> >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAXXZ ; std::vector<hookData,std::allocator<hookData> >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAAEAV?$allocator@UhookData@@@2@XZ ; std::vector<hookData,std::allocator<hookData> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S1$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0UhookData@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UhookData@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><hookData>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S1$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ ENDP ; std::vector<hookData,std::allocator<hookData> >::~vector<hookData,std::allocator<hookData> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ PROC ; std::vector<hookData,std::allocator<hookData> >::vector<hookData,std::allocator<hookData> >, COMDAT

; 385  :     vector() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>)

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 386  :         : _Mypair(_Zero_then_variadic_args_t()) { // construct empty vector

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@UhookData@@@std@@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<hookData>,std::_Vector_val<std::_Simple_types<hookData> >,1>::_Compressed_pair<std::allocator<hookData>,std::_Vector_val<std::_Simple_types<hookData> >,1><>
  00030	90		 npad	 1

; 387  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@AEAAAEAV?$allocator@UhookData@@@2@XZ ; std::vector<hookData,std::allocator<hookData> >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0UhookData@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UhookData@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><hookData>
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 388  :     }

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??0?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ ENDP ; std::vector<hookData,std::allocator<hookData> >::vector<hookData,std::allocator<hookData> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SA_KAEBV?$allocator@UhookData@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SA_KAEBV?$allocator@UhookData@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<hookData> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 b8 76 62 27
	76 62 27 76 02	 mov	 rax, 177372539170284150	; 0276276276276276H

; 768  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@UhookData@@@std@@@std@@SA_KAEBV?$allocator@UhookData@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<hookData> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@UhookData@@@std@@QEAAPEAUhookData@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@UhookData@@@std@@QEAAPEAUhookData@@_K@Z PROC ; std::allocator<hookData>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0GI@@std@@YA_K_K@Z ; std::_Get_size_of_n<104>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@UhookData@@@std@@QEAAPEAUhookData@@_K@Z ENDP ; std::allocator<hookData>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@UhookData@@@std@@QEAAXQEAUhookData@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@UhookData@@@std@@QEAAXQEAUhookData@@_K@Z PROC ; std::allocator<hookData>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 6b 44 24 40
	68		 imul	 rax, QWORD PTR _Count$[rsp], 104 ; 00000068H
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$allocator@UhookData@@@std@@QEAAXQEAUhookData@@_K@Z ENDP ; std::allocator<hookData>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@UhookData@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@UhookData@@@std@@QEAA@XZ PROC		; std::allocator<hookData>::allocator<hookData>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@UhookData@@@std@@QEAA@XZ ENDP		; std::allocator<hookData>::allocator<hookData>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\api_hook.cpp
_TEXT	SEGMENT
i$5 = 48
pModuleBase$6 = 56
nSize$7 = 68
pImageImportDescriptor$8 = 88
pModuleName$9 = 96
pFirstThunk$10 = 104
pOrgFirstThunk$11 = 112
pImportName$12 = 120
dwOldProtect$13 = 132
pOrigFunc$14 = 152
tv69 = 160
tv154 = 168
pTargetModuleName$ = 192
pTargetFunctionName$ = 200
pNewFunc$ = 208
?hook_function@apihook@@CAPEAXPEBD0PEAX@Z PROC		; apihook::hook_function

; 35   : void *apihook::hook_function(const TCHAR *pTargetModuleName, const char *pTargetFunctionName, void *pNewFunc) {

$LN20:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+192]

; 36   :     for (int i = 0; i < 2; i++) {

  0002e	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR i$5[rsp], 0
  00036	eb 0a		 jmp	 SHORT $LN4@hook_funct
$LN2@hook_funct:
  00038	8b 44 24 30	 mov	 eax, DWORD PTR i$5[rsp]
  0003c	ff c0		 inc	 eax
  0003e	89 44 24 30	 mov	 DWORD PTR i$5[rsp], eax
$LN4@hook_funct:
  00042	83 7c 24 30 02	 cmp	 DWORD PTR i$5[rsp], 2
  00047	0f 8d 5d 02 00
	00		 jge	 $LN3@hook_funct

; 37   :         if (void *pModuleBase = GetModuleHandle((i == 0 && pTargetModuleName) ? pTargetModuleName : NULL)) {

  0004d	83 7c 24 30 00	 cmp	 DWORD PTR i$5[rsp], 0
  00052	75 1d		 jne	 SHORT $LN18@hook_funct
  00054	48 83 bc 24 c0
	00 00 00 00	 cmp	 QWORD PTR pTargetModuleName$[rsp], 0
  0005d	74 12		 je	 SHORT $LN18@hook_funct
  0005f	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR pTargetModuleName$[rsp]
  00067	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR tv69[rsp], rax
  0006f	eb 0c		 jmp	 SHORT $LN19@hook_funct
$LN18@hook_funct:
  00071	48 c7 84 24 a0
	00 00 00 00 00
	00 00		 mov	 QWORD PTR tv69[rsp], 0
$LN19@hook_funct:
  0007d	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR tv69[rsp]
  00085	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetModuleHandleA
  0008b	48 89 44 24 38	 mov	 QWORD PTR pModuleBase$6[rsp], rax
  00090	48 83 7c 24 38
	00		 cmp	 QWORD PTR pModuleBase$6[rsp], 0
  00096	0f 84 09 02 00
	00		 je	 $LN11@hook_funct

; 38   :             ULONG nSize = 0;

  0009c	c7 44 24 44 00
	00 00 00	 mov	 DWORD PTR nSize$7[rsp], 0

; 39   :             for (auto pImageImportDescriptor = (PIMAGE_IMPORT_DESCRIPTOR)ImageDirectoryEntryToData((HMODULE)pModuleBase, TRUE, IMAGE_DIRECTORY_ENTRY_IMPORT, &nSize);

  000a4	4c 8d 4c 24 44	 lea	 r9, QWORD PTR nSize$7[rsp]
  000a9	66 41 b8 01 00	 mov	 r8w, 1
  000ae	b2 01		 mov	 dl, 1
  000b0	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pModuleBase$6[rsp]
  000b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_ImageDirectoryEntryToData
  000bb	48 89 44 24 58	 mov	 QWORD PTR pImageImportDescriptor$8[rsp], rax
  000c0	eb 0e		 jmp	 SHORT $LN7@hook_funct
$LN5@hook_funct:

; 40   :                 pImageImportDescriptor->Name; pImageImportDescriptor++) {

  000c2	48 8b 44 24 58	 mov	 rax, QWORD PTR pImageImportDescriptor$8[rsp]
  000c7	48 83 c0 14	 add	 rax, 20
  000cb	48 89 44 24 58	 mov	 QWORD PTR pImageImportDescriptor$8[rsp], rax
$LN7@hook_funct:
  000d0	48 8b 44 24 58	 mov	 rax, QWORD PTR pImageImportDescriptor$8[rsp]
  000d5	83 78 0c 00	 cmp	 DWORD PTR [rax+12], 0
  000d9	0f 84 c6 01 00
	00		 je	 $LN6@hook_funct

; 41   :                 const char *pModuleName = ((const char*)pModuleBase + pImageImportDescriptor->Name);

  000df	48 8b 44 24 58	 mov	 rax, QWORD PTR pImageImportDescriptor$8[rsp]
  000e4	8b 40 0c	 mov	 eax, DWORD PTR [rax+12]
  000e7	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pModuleBase$6[rsp]
  000ec	48 03 c8	 add	 rcx, rax
  000ef	48 8b c1	 mov	 rax, rcx
  000f2	48 89 44 24 60	 mov	 QWORD PTR pModuleName$9[rsp], rax

; 42   :                 for (PIMAGE_THUNK_DATA
; 43   :                     pFirstThunk    = (PIMAGE_THUNK_DATA)((char*)pModuleBase + pImageImportDescriptor->FirstThunk),

  000f7	48 8b 44 24 58	 mov	 rax, QWORD PTR pImageImportDescriptor$8[rsp]
  000fc	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  000ff	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pModuleBase$6[rsp]
  00104	48 03 c8	 add	 rcx, rax
  00107	48 8b c1	 mov	 rax, rcx
  0010a	48 89 44 24 68	 mov	 QWORD PTR pFirstThunk$10[rsp], rax

; 44   :                     pOrgFirstThunk = (PIMAGE_THUNK_DATA)((char*)pModuleBase + pImageImportDescriptor->OriginalFirstThunk);

  0010f	48 8b 44 24 58	 mov	 rax, QWORD PTR pImageImportDescriptor$8[rsp]
  00114	8b 00		 mov	 eax, DWORD PTR [rax]
  00116	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pModuleBase$6[rsp]
  0011b	48 03 c8	 add	 rcx, rax
  0011e	48 8b c1	 mov	 rax, rcx
  00121	48 89 44 24 70	 mov	 QWORD PTR pOrgFirstThunk$11[rsp], rax
  00126	eb 1c		 jmp	 SHORT $LN10@hook_funct
$LN8@hook_funct:

; 46   :                     pFirstThunk++, pOrgFirstThunk++) {

  00128	48 8b 44 24 68	 mov	 rax, QWORD PTR pFirstThunk$10[rsp]
  0012d	48 83 c0 08	 add	 rax, 8
  00131	48 89 44 24 68	 mov	 QWORD PTR pFirstThunk$10[rsp], rax
  00136	48 8b 44 24 70	 mov	 rax, QWORD PTR pOrgFirstThunk$11[rsp]
  0013b	48 83 c0 08	 add	 rax, 8
  0013f	48 89 44 24 70	 mov	 QWORD PTR pOrgFirstThunk$11[rsp], rax
$LN10@hook_funct:

; 45   :                     pFirstThunk->u1.Function;

  00144	48 8b 44 24 68	 mov	 rax, QWORD PTR pFirstThunk$10[rsp]
  00149	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0014d	0f 84 4d 01 00
	00		 je	 $LN9@hook_funct

; 47   :                     if (!IMAGE_SNAP_BY_ORDINAL(pOrgFirstThunk->u1.Ordinal)) {

  00153	48 8b 44 24 70	 mov	 rax, QWORD PTR pOrgFirstThunk$11[rsp]
  00158	48 b9 00 00 00
	00 00 00 00 80	 mov	 rcx, -9223372036854775808 ; 8000000000000000H
  00162	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00165	48 23 c1	 and	 rax, rcx
  00168	48 85 c0	 test	 rax, rax
  0016b	0f 85 2a 01 00
	00		 jne	 $LN12@hook_funct

; 48   :                         PIMAGE_IMPORT_BY_NAME pImportName = (PIMAGE_IMPORT_BY_NAME)((char*)pModuleBase + (size_t)pOrgFirstThunk->u1.AddressOfData);

  00171	48 8b 44 24 70	 mov	 rax, QWORD PTR pOrgFirstThunk$11[rsp]
  00176	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00179	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pModuleBase$6[rsp]
  0017e	48 03 c8	 add	 rcx, rax
  00181	48 8b c1	 mov	 rax, rcx
  00184	48 89 44 24 78	 mov	 QWORD PTR pImportName$12[rsp], rax

; 49   :                         if (pNewFunc) {

  00189	48 83 bc 24 d0
	00 00 00 00	 cmp	 QWORD PTR pNewFunc$[rsp], 0
  00192	0f 84 db 00 00
	00		 je	 $LN13@hook_funct

; 50   :                             if (_stricmp((const char*)pImportName->Name, pTargetFunctionName) == 0) {

  00198	48 8b 44 24 78	 mov	 rax, QWORD PTR pImportName$12[rsp]
  0019d	48 83 c0 02	 add	 rax, 2
  001a1	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR pTargetFunctionName$[rsp]
  001a9	48 8b c8	 mov	 rcx, rax
  001ac	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__stricmp
  001b2	85 c0		 test	 eax, eax
  001b4	0f 85 b7 00 00
	00		 jne	 $LN15@hook_funct

; 51   :                                 DWORD dwOldProtect;
; 52   :                                 if (!VirtualProtect(&pFirstThunk->u1.Function, sizeof(pFirstThunk->u1.Function), PAGE_READWRITE, &dwOldProtect))

  001ba	48 8b 44 24 68	 mov	 rax, QWORD PTR pFirstThunk$10[rsp]
  001bf	4c 8d 8c 24 84
	00 00 00	 lea	 r9, QWORD PTR dwOldProtect$13[rsp]
  001c7	41 b8 04 00 00
	00		 mov	 r8d, 4
  001cd	ba 08 00 00 00	 mov	 edx, 8
  001d2	48 8b c8	 mov	 rcx, rax
  001d5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_VirtualProtect
  001db	85 c0		 test	 eax, eax
  001dd	75 07		 jne	 SHORT $LN16@hook_funct

; 53   :                                     return nullptr;

  001df	33 c0		 xor	 eax, eax
  001e1	e9 c6 00 00 00	 jmp	 $LN1@hook_funct
$LN16@hook_funct:

; 54   : 
; 55   :                                 void *pOrigFunc = (void*)pFirstThunk->u1.Function;

  001e6	48 8b 44 24 68	 mov	 rax, QWORD PTR pFirstThunk$10[rsp]
  001eb	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001ee	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR pOrigFunc$14[rsp], rax

; 56   :                                 WriteProcessMemory(GetCurrentProcess(), &pFirstThunk->u1.Function, &pNewFunc, sizeof(pFirstThunk->u1.Function), NULL);

  001f6	48 8b 44 24 68	 mov	 rax, QWORD PTR pFirstThunk$10[rsp]
  001fb	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR tv154[rsp], rax
  00203	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetCurrentProcess
  00209	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00212	41 b9 08 00 00
	00		 mov	 r9d, 8
  00218	4c 8d 84 24 d0
	00 00 00	 lea	 r8, QWORD PTR pNewFunc$[rsp]
  00220	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR tv154[rsp]
  00228	48 8b d1	 mov	 rdx, rcx
  0022b	48 8b c8	 mov	 rcx, rax
  0022e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_WriteProcessMemory

; 57   :                                 pFirstThunk->u1.Function = (size_t)pNewFunc;

  00234	48 8b 44 24 68	 mov	 rax, QWORD PTR pFirstThunk$10[rsp]
  00239	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR pNewFunc$[rsp]
  00241	48 89 08	 mov	 QWORD PTR [rax], rcx

; 58   : 
; 59   :                                 VirtualProtect(&pFirstThunk->u1.Function, sizeof(pFirstThunk->u1.Function), dwOldProtect, &dwOldProtect);

  00244	48 8b 44 24 68	 mov	 rax, QWORD PTR pFirstThunk$10[rsp]
  00249	4c 8d 8c 24 84
	00 00 00	 lea	 r9, QWORD PTR dwOldProtect$13[rsp]
  00251	44 8b 84 24 84
	00 00 00	 mov	 r8d, DWORD PTR dwOldProtect$13[rsp]
  00259	ba 08 00 00 00	 mov	 edx, 8
  0025e	48 8b c8	 mov	 rcx, rax
  00261	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_VirtualProtect

; 60   :                                 return pOrigFunc;

  00267	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR pOrigFunc$14[rsp]
  0026f	eb 3b		 jmp	 SHORT $LN1@hook_funct
$LN15@hook_funct:

; 61   :                             }
; 62   :                         } else {

  00271	eb 28		 jmp	 SHORT $LN14@hook_funct
$LN13@hook_funct:

; 63   :                             printf("Module:%s Hint:%d, Name:%s\n", pModuleName, pImportName->Hint, pImportName->Name);

  00273	48 8b 44 24 78	 mov	 rax, QWORD PTR pImportName$12[rsp]
  00278	48 83 c0 02	 add	 rax, 2
  0027c	48 8b 4c 24 78	 mov	 rcx, QWORD PTR pImportName$12[rsp]
  00281	0f b7 09	 movzx	 ecx, WORD PTR [rcx]
  00284	4c 8b c8	 mov	 r9, rax
  00287	44 8b c1	 mov	 r8d, ecx
  0028a	48 8b 54 24 60	 mov	 rdx, QWORD PTR pModuleName$9[rsp]
  0028f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG116186
  00296	e8 00 00 00 00	 call	 printf
$LN14@hook_funct:
$LN12@hook_funct:

; 64   :                         }
; 65   :                     }
; 66   :                 }

  0029b	e9 88 fe ff ff	 jmp	 $LN8@hook_funct
$LN9@hook_funct:

; 67   :             }

  002a0	e9 1d fe ff ff	 jmp	 $LN5@hook_funct
$LN6@hook_funct:
$LN11@hook_funct:

; 68   :         }
; 69   :     }

  002a5	e9 8e fd ff ff	 jmp	 $LN2@hook_funct
$LN3@hook_funct:

; 70   :     return nullptr;

  002aa	33 c0		 xor	 eax, eax
$LN1@hook_funct:

; 71   : }

  002ac	48 8b f8	 mov	 rdi, rax
  002af	48 8b cc	 mov	 rcx, rsp
  002b2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?hook_function@apihook@@CAPEAXPEBD0PEAX@Z$rtcFrameData
  002b9	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  002be	48 8b c7	 mov	 rax, rdi
  002c1	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  002c8	5f		 pop	 rdi
  002c9	c3		 ret	 0
?hook_function@apihook@@CAPEAXPEBD0PEAX@Z ENDP		; apihook::hook_function
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\api_hook.cpp
_TEXT	SEGMENT
hook$ = 40
$T4 = 72
$T5 = 88
$T6 = 112
$T7 = 120
$T8 = 144
$T9 = 152
$T10 = 160
$T11 = 192
tv156 = 208
tv149 = 216
tv157 = 224
tv151 = 232
tv64 = 240
tv154 = 248
tv147 = 256
this$ = 304
pTargetModuleName$ = 312
pTargetFunctionName$ = 320
?get_orig@apihook@@QEAAPEAXPEBD0@Z PROC			; apihook::get_orig

; 137  : void *apihook::get_orig(const TCHAR *pTargetModuleName, const char *pTargetFunctionName) {

$LN9:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR [rsp+304]

; 138  :     auto hook = std::find_if(hookList.begin(), hookList.end(), [pTargetModuleName, pTargetFunctionName](hookData data) {

  0002f	48 8d 44 24 58	 lea	 rax, QWORD PTR $T5[rsp]
  00034	48 89 44 24 70	 mov	 QWORD PTR $T6[rsp], rax
  00039	48 8d 44 24 78	 lea	 rax, QWORD PTR $T7[rsp]
  0003e	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR $T8[rsp], rax
  00046	4c 8d 84 24 40
	01 00 00	 lea	 r8, QWORD PTR pTargetFunctionName$[rsp]
  0004e	48 8d 94 24 38
	01 00 00	 lea	 rdx, QWORD PTR pTargetModuleName$[rsp]
  00056	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T4[rsp]
  0005b	e8 00 00 00 00	 call	 ??0<lambda_3b1a155f3d9af5183301fdeff6995007>@@QEAA@AEBQEBD0@Z ; <lambda_3b1a155f3d9af5183301fdeff6995007>::<lambda_3b1a155f3d9af5183301fdeff6995007>
  00060	48 8d 8c 24 c0
	00 00 00	 lea	 rcx, QWORD PTR $T11[rsp]
  00068	48 8b f9	 mov	 rdi, rcx
  0006b	48 8b f0	 mov	 rsi, rax
  0006e	b9 10 00 00 00	 mov	 ecx, 16
  00073	f3 a4		 rep movsb
  00075	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0007d	48 8b 54 24 70	 mov	 rdx, QWORD PTR $T6[rsp]
  00082	48 8b c8	 mov	 rcx, rax
  00085	e8 00 00 00 00	 call	 ?end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ ; std::vector<hookData,std::allocator<hookData> >::end
  0008a	48 89 84 24 d0
	00 00 00	 mov	 QWORD PTR tv156[rsp], rax
  00092	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR tv156[rsp]
  0009a	48 89 84 24 d8
	00 00 00	 mov	 QWORD PTR tv149[rsp], rax
  000a2	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000aa	48 8b 94 24 90
	00 00 00	 mov	 rdx, QWORD PTR $T8[rsp]
  000b2	48 8b c8	 mov	 rcx, rax
  000b5	e8 00 00 00 00	 call	 ?begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ ; std::vector<hookData,std::allocator<hookData> >::begin
  000ba	48 89 84 24 e0
	00 00 00	 mov	 QWORD PTR tv157[rsp], rax
  000c2	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR tv157[rsp]
  000ca	48 89 84 24 e8
	00 00 00	 mov	 QWORD PTR tv151[rsp], rax
  000d2	4c 8d 8c 24 c0
	00 00 00	 lea	 r9, QWORD PTR $T11[rsp]
  000da	4c 8b 84 24 d8
	00 00 00	 mov	 r8, QWORD PTR tv149[rsp]
  000e2	48 8b 94 24 e8
	00 00 00	 mov	 rdx, QWORD PTR tv151[rsp]
  000ea	48 8d 4c 24 28	 lea	 rcx, QWORD PTR hook$[rsp]
  000ef	e8 00 00 00 00	 call	 ??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_3b1a155f3d9af5183301fdeff6995007>@@@Z ; std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_3b1a155f3d9af5183301fdeff6995007> >
  000f4	90		 npad	 1

; 139  :         return data.sTargetModuleName == pTargetModuleName && data.sTargetFunctionName == pTargetFunctionName;
; 140  :     });
; 141  :     return (hook != hookList.end()) ? hook->pOrigFunc : nullptr;

  000f5	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000fd	48 8d 94 24 a0
	00 00 00	 lea	 rdx, QWORD PTR $T10[rsp]
  00105	48 8b c8	 mov	 rcx, rax
  00108	e8 00 00 00 00	 call	 ?end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ ; std::vector<hookData,std::allocator<hookData> >::end
  0010d	48 89 84 24 f0
	00 00 00	 mov	 QWORD PTR tv64[rsp], rax
  00115	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR tv64[rsp]
  0011d	48 89 84 24 f8
	00 00 00	 mov	 QWORD PTR tv154[rsp], rax
  00125	48 8b 94 24 f8
	00 00 00	 mov	 rdx, QWORD PTR tv154[rsp]
  0012d	48 8d 4c 24 28	 lea	 rcx, QWORD PTR hook$[rsp]
  00132	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator!=
  00137	0f b6 c0	 movzx	 eax, al
  0013a	85 c0		 test	 eax, eax
  0013c	74 18		 je	 SHORT $LN3@get_orig
  0013e	48 8d 4c 24 28	 lea	 rcx, QWORD PTR hook$[rsp]
  00143	e8 00 00 00 00	 call	 ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator->
  00148	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0014c	48 89 84 24 00
	01 00 00	 mov	 QWORD PTR tv147[rsp], rax
  00154	eb 0c		 jmp	 SHORT $LN4@get_orig
$LN3@get_orig:
  00156	48 c7 84 24 00
	01 00 00 00 00
	00 00		 mov	 QWORD PTR tv147[rsp], 0
$LN4@get_orig:
  00162	48 8b 84 24 00
	01 00 00	 mov	 rax, QWORD PTR tv147[rsp]
  0016a	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR $T9[rsp], rax
  00172	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR $T10[rsp]
  0017a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0017f	90		 npad	 1
  00180	48 8d 4c 24 28	 lea	 rcx, QWORD PTR hook$[rsp]
  00185	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0018a	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR $T9[rsp]

; 142  : }

  00192	48 8b f8	 mov	 rdi, rax
  00195	48 8b cc	 mov	 rcx, rsp
  00198	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?get_orig@apihook@@QEAAPEAXPEBD0@Z$rtcFrameData
  0019f	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001a4	48 8b c7	 mov	 rax, rdi
  001a7	48 81 c4 18 01
	00 00		 add	 rsp, 280		; 00000118H
  001ae	5f		 pop	 rdi
  001af	5e		 pop	 rsi
  001b0	c3		 ret	 0
?get_orig@apihook@@QEAAPEAXPEBD0@Z ENDP			; apihook::get_orig
_TEXT	ENDS
text$x	SEGMENT
hook$ = 40
$T4 = 72
$T5 = 88
$T6 = 112
$T7 = 120
$T8 = 144
$T9 = 152
$T10 = 160
$T11 = 192
tv156 = 208
tv149 = 216
tv157 = 224
tv151 = 232
tv64 = 240
tv154 = 248
tv147 = 256
this$ = 304
pTargetModuleName$ = 312
pTargetFunctionName$ = 320
?dtor$0@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA PROC	; `apihook::get_orig'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 70	 mov	 rcx, QWORD PTR $T6[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA ENDP	; `apihook::get_orig'::`1'::dtor$0
hook$ = 40
$T4 = 72
$T5 = 88
$T6 = 112
$T7 = 120
$T8 = 144
$T9 = 152
$T10 = 160
$T11 = 192
tv156 = 208
tv149 = 216
tv157 = 224
tv151 = 232
tv64 = 240
tv154 = 248
tv147 = 256
this$ = 304
pTargetModuleName$ = 312
pTargetFunctionName$ = 320
?dtor$1@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA PROC	; `apihook::get_orig'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR $T8[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA ENDP	; `apihook::get_orig'::`1'::dtor$1
hook$ = 40
$T4 = 72
$T5 = 88
$T6 = 112
$T7 = 120
$T8 = 144
$T9 = 152
$T10 = 160
$T11 = 192
tv156 = 208
tv149 = 216
tv157 = 224
tv151 = 232
tv64 = 240
tv154 = 248
tv147 = 256
this$ = 304
pTargetModuleName$ = 312
pTargetFunctionName$ = 320
?dtor$2@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA PROC	; `apihook::get_orig'::`1'::dtor$2
  00049	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00053	55		 push	 rbp
  00054	57		 push	 rdi
  00055	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00059	48 8b ea	 mov	 rbp, rdx
  0005c	48 8d 4d 28	 lea	 rcx, QWORD PTR hook$[rbp]
  00060	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  00065	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?dtor$2@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA ENDP	; `apihook::get_orig'::`1'::dtor$2
hook$ = 40
$T4 = 72
$T5 = 88
$T6 = 112
$T7 = 120
$T8 = 144
$T9 = 152
$T10 = 160
$T11 = 192
tv156 = 208
tv149 = 216
tv157 = 224
tv151 = 232
tv64 = 240
tv154 = 248
tv147 = 256
this$ = 304
pTargetModuleName$ = 312
pTargetFunctionName$ = 320
?dtor$3@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA PROC	; `apihook::get_orig'::`1'::dtor$3
  0006c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00071	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00076	55		 push	 rbp
  00077	57		 push	 rdi
  00078	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007c	48 8b ea	 mov	 rbp, rdx
  0007f	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  00086	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0008b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0008f	5f		 pop	 rdi
  00090	5d		 pop	 rbp
  00091	c3		 ret	 0
?dtor$3@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA ENDP	; `apihook::get_orig'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
hook$ = 40
$T4 = 72
$T5 = 88
$T6 = 112
$T7 = 120
$T8 = 144
$T9 = 152
$T10 = 160
$T11 = 192
tv156 = 208
tv149 = 216
tv157 = 224
tv151 = 232
tv64 = 240
tv154 = 248
tv147 = 256
this$ = 304
pTargetModuleName$ = 312
pTargetFunctionName$ = 320
?dtor$0@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA PROC	; `apihook::get_orig'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 70	 mov	 rcx, QWORD PTR $T6[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA ENDP	; `apihook::get_orig'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
hook$ = 40
$T4 = 72
$T5 = 88
$T6 = 112
$T7 = 120
$T8 = 144
$T9 = 152
$T10 = 160
$T11 = 192
tv156 = 208
tv149 = 216
tv157 = 224
tv151 = 232
tv64 = 240
tv154 = 248
tv147 = 256
this$ = 304
pTargetModuleName$ = 312
pTargetFunctionName$ = 320
?dtor$1@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA PROC	; `apihook::get_orig'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR $T8[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA ENDP	; `apihook::get_orig'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
hook$ = 40
$T4 = 72
$T5 = 88
$T6 = 112
$T7 = 120
$T8 = 144
$T9 = 152
$T10 = 160
$T11 = 192
tv156 = 208
tv149 = 216
tv157 = 224
tv151 = 232
tv64 = 240
tv154 = 248
tv147 = 256
this$ = 304
pTargetModuleName$ = 312
pTargetFunctionName$ = 320
?dtor$2@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA PROC	; `apihook::get_orig'::`1'::dtor$2
  00049	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00053	55		 push	 rbp
  00054	57		 push	 rdi
  00055	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00059	48 8b ea	 mov	 rbp, rdx
  0005c	48 8d 4d 28	 lea	 rcx, QWORD PTR hook$[rbp]
  00060	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  00065	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?dtor$2@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA ENDP	; `apihook::get_orig'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
hook$ = 40
$T4 = 72
$T5 = 88
$T6 = 112
$T7 = 120
$T8 = 144
$T9 = 152
$T10 = 160
$T11 = 192
tv156 = 208
tv149 = 216
tv157 = 224
tv151 = 232
tv64 = 240
tv154 = 248
tv147 = 256
this$ = 304
pTargetModuleName$ = 312
pTargetFunctionName$ = 320
?dtor$3@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA PROC	; `apihook::get_orig'::`1'::dtor$3
  0006c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00071	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00076	55		 push	 rbp
  00077	57		 push	 rdi
  00078	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007c	48 8b ea	 mov	 rbp, rdx
  0007f	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  00086	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0008b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0008f	5f		 pop	 rdi
  00090	5d		 pop	 rbp
  00091	c3		 ret	 0
?dtor$3@?0??get_orig@apihook@@QEAAPEAXPEBD0@Z@4HA ENDP	; `apihook::get_orig'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\api_hook.cpp
_TEXT	SEGMENT
hook$4 = 40
$T5 = 72
$T6 = 80
$T7 = 104
$T8 = 112
$T9 = 136
$T10 = 144
$T11 = 152
$T12 = 176
$T13 = 200
$T14 = 208
tv67 = 232
tv170 = 240
tv188 = 248
tv197 = 256
tv190 = 264
tv65 = 272
tv193 = 280
tv146 = 288
tv153 = 296
tv198 = 304
tv195 = 312
this$ = 336
pOrigFuc$ = 344
?fin@apihook@@QEAAXPEAX@Z PROC				; apihook::fin

; 123  : void apihook::fin(void *pOrigFuc) {

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 40 01
	00 00		 sub	 rsp, 320		; 00000140H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 50 00 00 00	 mov	 ecx, 80			; 00000050H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 50
	01 00 00	 mov	 rcx, QWORD PTR [rsp+336]

; 124  :     if (pOrigFuc) {

  00029	48 83 bc 24 58
	01 00 00 00	 cmp	 QWORD PTR pOrigFuc$[rsp], 0
  00032	0f 84 10 02 00
	00		 je	 $LN2@fin

; 125  :         auto hook = std::find_if(hookList.begin(), hookList.end(), [pOrigFuc](hookData data) {

  00038	48 8d 44 24 50	 lea	 rax, QWORD PTR $T6[rsp]
  0003d	48 89 44 24 68	 mov	 QWORD PTR $T7[rsp], rax
  00042	48 8d 44 24 70	 lea	 rax, QWORD PTR $T8[rsp]
  00047	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR $T9[rsp], rax
  0004f	48 8d 94 24 58
	01 00 00	 lea	 rdx, QWORD PTR pOrigFuc$[rsp]
  00057	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T5[rsp]
  0005c	e8 00 00 00 00	 call	 ??0<lambda_1735d4f996bca40e44ec48ee134389dd>@@QEAA@AEBQEAX@Z ; <lambda_1735d4f996bca40e44ec48ee134389dd>::<lambda_1735d4f996bca40e44ec48ee134389dd>
  00061	48 89 84 24 e8
	00 00 00	 mov	 QWORD PTR tv67[rsp], rax
  00069	48 8b 8c 24 50
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00071	48 8b 54 24 68	 mov	 rdx, QWORD PTR $T7[rsp]
  00076	e8 00 00 00 00	 call	 ?end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ ; std::vector<hookData,std::allocator<hookData> >::end
  0007b	48 89 84 24 f0
	00 00 00	 mov	 QWORD PTR tv170[rsp], rax
  00083	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR tv170[rsp]
  0008b	48 89 84 24 f8
	00 00 00	 mov	 QWORD PTR tv188[rsp], rax
  00093	48 8b 84 24 50
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0009b	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR $T9[rsp]
  000a3	48 8b c8	 mov	 rcx, rax
  000a6	e8 00 00 00 00	 call	 ?begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ ; std::vector<hookData,std::allocator<hookData> >::begin
  000ab	48 89 84 24 00
	01 00 00	 mov	 QWORD PTR tv197[rsp], rax
  000b3	48 8b 84 24 00
	01 00 00	 mov	 rax, QWORD PTR tv197[rsp]
  000bb	48 89 84 24 08
	01 00 00	 mov	 QWORD PTR tv190[rsp], rax
  000c3	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR tv67[rsp]
  000cb	4c 8b 08	 mov	 r9, QWORD PTR [rax]
  000ce	4c 8b 84 24 f8
	00 00 00	 mov	 r8, QWORD PTR tv188[rsp]
  000d6	48 8b 94 24 08
	01 00 00	 mov	 rdx, QWORD PTR tv190[rsp]
  000de	48 8d 4c 24 28	 lea	 rcx, QWORD PTR hook$4[rsp]
  000e3	e8 00 00 00 00	 call	 ??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_1735d4f996bca40e44ec48ee134389dd>@@@Z ; std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_1735d4f996bca40e44ec48ee134389dd> >
  000e8	90		 npad	 1

; 126  :             return data.pOrigFunc == pOrigFuc;
; 127  :         });
; 128  :         if (hook != hookList.end()) {

  000e9	48 8b 84 24 50
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000f1	48 8d 94 24 98
	00 00 00	 lea	 rdx, QWORD PTR $T11[rsp]
  000f9	48 8b c8	 mov	 rcx, rax
  000fc	e8 00 00 00 00	 call	 ?end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ ; std::vector<hookData,std::allocator<hookData> >::end
  00101	48 89 84 24 10
	01 00 00	 mov	 QWORD PTR tv65[rsp], rax
  00109	48 8b 84 24 10
	01 00 00	 mov	 rax, QWORD PTR tv65[rsp]
  00111	48 89 84 24 18
	01 00 00	 mov	 QWORD PTR tv193[rsp], rax
  00119	48 8b 94 24 18
	01 00 00	 mov	 rdx, QWORD PTR tv193[rsp]
  00121	48 8d 4c 24 28	 lea	 rcx, QWORD PTR hook$4[rsp]
  00126	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator!=
  0012b	88 84 24 90 00
	00 00		 mov	 BYTE PTR $T10[rsp], al
  00132	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR $T11[rsp]
  0013a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0013f	0f b6 84 24 90
	00 00 00	 movzx	 eax, BYTE PTR $T10[rsp]
  00147	85 c0		 test	 eax, eax
  00149	0f 84 ef 00 00
	00		 je	 $LN3@fin

; 129  :             hook_function(hook->sTargetModuleName.c_str(), hook->sTargetFunctionName.c_str(), hook->pOrigFunc);

  0014f	48 8d 4c 24 28	 lea	 rcx, QWORD PTR hook$4[rsp]
  00154	e8 00 00 00 00	 call	 ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator->
  00159	48 89 84 24 20
	01 00 00	 mov	 QWORD PTR tv146[rsp], rax
  00161	48 8d 4c 24 28	 lea	 rcx, QWORD PTR hook$4[rsp]
  00166	e8 00 00 00 00	 call	 ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator->
  0016b	48 83 c0 28	 add	 rax, 40			; 00000028H
  0016f	48 8b c8	 mov	 rcx, rax
  00172	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00177	48 89 84 24 28
	01 00 00	 mov	 QWORD PTR tv153[rsp], rax
  0017f	48 8d 4c 24 28	 lea	 rcx, QWORD PTR hook$4[rsp]
  00184	e8 00 00 00 00	 call	 ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator->
  00189	48 8b c8	 mov	 rcx, rax
  0018c	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00191	48 8b 8c 24 20
	01 00 00	 mov	 rcx, QWORD PTR tv146[rsp]
  00199	4c 8b 41 58	 mov	 r8, QWORD PTR [rcx+88]
  0019d	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR tv153[rsp]
  001a5	48 8b d1	 mov	 rdx, rcx
  001a8	48 8b c8	 mov	 rcx, rax
  001ab	e8 00 00 00 00	 call	 ?hook_function@apihook@@CAPEAXPEBD0PEAX@Z ; apihook::hook_function

; 130  :             if (hook->pOrigFuncSetAdr) {

  001b0	48 8d 4c 24 28	 lea	 rcx, QWORD PTR hook$4[rsp]
  001b5	e8 00 00 00 00	 call	 ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator->
  001ba	48 83 78 60 00	 cmp	 QWORD PTR [rax+96], 0
  001bf	74 15		 je	 SHORT $LN4@fin

; 131  :                 *(hook->pOrigFuncSetAdr) = nullptr;

  001c1	48 8d 4c 24 28	 lea	 rcx, QWORD PTR hook$4[rsp]
  001c6	e8 00 00 00 00	 call	 ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator->
  001cb	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  001cf	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN4@fin:

; 132  :             }
; 133  :             hookList.erase(hook);

  001d6	48 8d 84 24 b0
	00 00 00	 lea	 rax, QWORD PTR $T12[rsp]
  001de	48 89 84 24 c8
	00 00 00	 mov	 QWORD PTR $T13[rsp], rax
  001e6	48 8d 54 24 28	 lea	 rdx, QWORD PTR hook$4[rsp]
  001eb	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR $T13[rsp]
  001f3	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@AEBV01@@Z
  001f8	48 89 84 24 30
	01 00 00	 mov	 QWORD PTR tv198[rsp], rax
  00200	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR tv198[rsp]
  00208	48 89 84 24 38
	01 00 00	 mov	 QWORD PTR tv195[rsp], rax
  00210	48 8b 84 24 50
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00218	4c 8b 84 24 38
	01 00 00	 mov	 r8, QWORD PTR tv195[rsp]
  00220	48 8d 94 24 d0
	00 00 00	 lea	 rdx, QWORD PTR $T14[rsp]
  00228	48 8b c8	 mov	 rcx, rax
  0022b	e8 00 00 00 00	 call	 ?erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z ; std::vector<hookData,std::allocator<hookData> >::erase
  00230	48 8d 8c 24 d0
	00 00 00	 lea	 rcx, QWORD PTR $T14[rsp]
  00238	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0023d	90		 npad	 1
$LN3@fin:

; 134  :         }
; 135  :     }

  0023e	48 8d 4c 24 28	 lea	 rcx, QWORD PTR hook$4[rsp]
  00243	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
$LN2@fin:

; 136  : }

  00248	48 8b cc	 mov	 rcx, rsp
  0024b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?fin@apihook@@QEAAXPEAX@Z$rtcFrameData
  00252	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00257	48 81 c4 40 01
	00 00		 add	 rsp, 320		; 00000140H
  0025e	5f		 pop	 rdi
  0025f	c3		 ret	 0
?fin@apihook@@QEAAXPEAX@Z ENDP				; apihook::fin
_TEXT	ENDS
text$x	SEGMENT
hook$4 = 40
$T5 = 72
$T6 = 80
$T7 = 104
$T8 = 112
$T9 = 136
$T10 = 144
$T11 = 152
$T12 = 176
$T13 = 200
$T14 = 208
tv67 = 232
tv170 = 240
tv188 = 248
tv197 = 256
tv190 = 264
tv65 = 272
tv193 = 280
tv146 = 288
tv153 = 296
tv198 = 304
tv195 = 312
this$ = 336
pOrigFuc$ = 344
?dtor$0@?0??fin@apihook@@QEAAXPEAX@Z@4HA PROC		; `apihook::fin'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 68	 mov	 rcx, QWORD PTR $T7[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??fin@apihook@@QEAAXPEAX@Z@4HA ENDP		; `apihook::fin'::`1'::dtor$0
hook$4 = 40
$T5 = 72
$T6 = 80
$T7 = 104
$T8 = 112
$T9 = 136
$T10 = 144
$T11 = 152
$T12 = 176
$T13 = 200
$T14 = 208
tv67 = 232
tv170 = 240
tv188 = 248
tv197 = 256
tv190 = 264
tv65 = 272
tv193 = 280
tv146 = 288
tv153 = 296
tv198 = 304
tv195 = 312
this$ = 336
pOrigFuc$ = 344
?dtor$1@?0??fin@apihook@@QEAAXPEAX@Z@4HA PROC		; `apihook::fin'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR $T9[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??fin@apihook@@QEAAXPEAX@Z@4HA ENDP		; `apihook::fin'::`1'::dtor$1
hook$4 = 40
$T5 = 72
$T6 = 80
$T7 = 104
$T8 = 112
$T9 = 136
$T10 = 144
$T11 = 152
$T12 = 176
$T13 = 200
$T14 = 208
tv67 = 232
tv170 = 240
tv188 = 248
tv197 = 256
tv190 = 264
tv65 = 272
tv193 = 280
tv146 = 288
tv153 = 296
tv198 = 304
tv195 = 312
this$ = 336
pOrigFuc$ = 344
?dtor$2@?0??fin@apihook@@QEAAXPEAX@Z@4HA PROC		; `apihook::fin'::`1'::dtor$2
  00049	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00053	55		 push	 rbp
  00054	57		 push	 rdi
  00055	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00059	48 8b ea	 mov	 rbp, rdx
  0005c	48 8d 4d 28	 lea	 rcx, QWORD PTR hook$4[rbp]
  00060	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  00065	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?dtor$2@?0??fin@apihook@@QEAAXPEAX@Z@4HA ENDP		; `apihook::fin'::`1'::dtor$2
hook$4 = 40
$T5 = 72
$T6 = 80
$T7 = 104
$T8 = 112
$T9 = 136
$T10 = 144
$T11 = 152
$T12 = 176
$T13 = 200
$T14 = 208
tv67 = 232
tv170 = 240
tv188 = 248
tv197 = 256
tv190 = 264
tv65 = 272
tv193 = 280
tv146 = 288
tv153 = 296
tv198 = 304
tv195 = 312
this$ = 336
pOrigFuc$ = 344
?dtor$3@?0??fin@apihook@@QEAAXPEAX@Z@4HA PROC		; `apihook::fin'::`1'::dtor$3
  0006c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00071	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00076	55		 push	 rbp
  00077	57		 push	 rdi
  00078	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007c	48 8b ea	 mov	 rbp, rdx
  0007f	48 8d 8d 98 00
	00 00		 lea	 rcx, QWORD PTR $T11[rbp]
  00086	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0008b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0008f	5f		 pop	 rdi
  00090	5d		 pop	 rbp
  00091	c3		 ret	 0
?dtor$3@?0??fin@apihook@@QEAAXPEAX@Z@4HA ENDP		; `apihook::fin'::`1'::dtor$3
hook$4 = 40
$T5 = 72
$T6 = 80
$T7 = 104
$T8 = 112
$T9 = 136
$T10 = 144
$T11 = 152
$T12 = 176
$T13 = 200
$T14 = 208
tv67 = 232
tv170 = 240
tv188 = 248
tv197 = 256
tv190 = 264
tv65 = 272
tv193 = 280
tv146 = 288
tv153 = 296
tv198 = 304
tv195 = 312
this$ = 336
pOrigFuc$ = 344
?dtor$4@?0??fin@apihook@@QEAAXPEAX@Z@4HA PROC		; `apihook::fin'::`1'::dtor$4
  00092	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00097	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009c	55		 push	 rbp
  0009d	57		 push	 rdi
  0009e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a2	48 8b ea	 mov	 rbp, rdx
  000a5	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR $T13[rbp]
  000ac	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  000b1	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b5	5f		 pop	 rdi
  000b6	5d		 pop	 rbp
  000b7	c3		 ret	 0
?dtor$4@?0??fin@apihook@@QEAAXPEAX@Z@4HA ENDP		; `apihook::fin'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
hook$4 = 40
$T5 = 72
$T6 = 80
$T7 = 104
$T8 = 112
$T9 = 136
$T10 = 144
$T11 = 152
$T12 = 176
$T13 = 200
$T14 = 208
tv67 = 232
tv170 = 240
tv188 = 248
tv197 = 256
tv190 = 264
tv65 = 272
tv193 = 280
tv146 = 288
tv153 = 296
tv198 = 304
tv195 = 312
this$ = 336
pOrigFuc$ = 344
?dtor$0@?0??fin@apihook@@QEAAXPEAX@Z@4HA PROC		; `apihook::fin'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 68	 mov	 rcx, QWORD PTR $T7[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??fin@apihook@@QEAAXPEAX@Z@4HA ENDP		; `apihook::fin'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
hook$4 = 40
$T5 = 72
$T6 = 80
$T7 = 104
$T8 = 112
$T9 = 136
$T10 = 144
$T11 = 152
$T12 = 176
$T13 = 200
$T14 = 208
tv67 = 232
tv170 = 240
tv188 = 248
tv197 = 256
tv190 = 264
tv65 = 272
tv193 = 280
tv146 = 288
tv153 = 296
tv198 = 304
tv195 = 312
this$ = 336
pOrigFuc$ = 344
?dtor$1@?0??fin@apihook@@QEAAXPEAX@Z@4HA PROC		; `apihook::fin'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR $T9[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??fin@apihook@@QEAAXPEAX@Z@4HA ENDP		; `apihook::fin'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
hook$4 = 40
$T5 = 72
$T6 = 80
$T7 = 104
$T8 = 112
$T9 = 136
$T10 = 144
$T11 = 152
$T12 = 176
$T13 = 200
$T14 = 208
tv67 = 232
tv170 = 240
tv188 = 248
tv197 = 256
tv190 = 264
tv65 = 272
tv193 = 280
tv146 = 288
tv153 = 296
tv198 = 304
tv195 = 312
this$ = 336
pOrigFuc$ = 344
?dtor$2@?0??fin@apihook@@QEAAXPEAX@Z@4HA PROC		; `apihook::fin'::`1'::dtor$2
  00049	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00053	55		 push	 rbp
  00054	57		 push	 rdi
  00055	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00059	48 8b ea	 mov	 rbp, rdx
  0005c	48 8d 4d 28	 lea	 rcx, QWORD PTR hook$4[rbp]
  00060	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  00065	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?dtor$2@?0??fin@apihook@@QEAAXPEAX@Z@4HA ENDP		; `apihook::fin'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
hook$4 = 40
$T5 = 72
$T6 = 80
$T7 = 104
$T8 = 112
$T9 = 136
$T10 = 144
$T11 = 152
$T12 = 176
$T13 = 200
$T14 = 208
tv67 = 232
tv170 = 240
tv188 = 248
tv197 = 256
tv190 = 264
tv65 = 272
tv193 = 280
tv146 = 288
tv153 = 296
tv198 = 304
tv195 = 312
this$ = 336
pOrigFuc$ = 344
?dtor$3@?0??fin@apihook@@QEAAXPEAX@Z@4HA PROC		; `apihook::fin'::`1'::dtor$3
  0006c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00071	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00076	55		 push	 rbp
  00077	57		 push	 rdi
  00078	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007c	48 8b ea	 mov	 rbp, rdx
  0007f	48 8d 8d 98 00
	00 00		 lea	 rcx, QWORD PTR $T11[rbp]
  00086	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0008b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0008f	5f		 pop	 rdi
  00090	5d		 pop	 rbp
  00091	c3		 ret	 0
?dtor$3@?0??fin@apihook@@QEAAXPEAX@Z@4HA ENDP		; `apihook::fin'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
hook$4 = 40
$T5 = 72
$T6 = 80
$T7 = 104
$T8 = 112
$T9 = 136
$T10 = 144
$T11 = 152
$T12 = 176
$T13 = 200
$T14 = 208
tv67 = 232
tv170 = 240
tv188 = 248
tv197 = 256
tv190 = 264
tv65 = 272
tv193 = 280
tv146 = 288
tv153 = 296
tv198 = 304
tv195 = 312
this$ = 336
pOrigFuc$ = 344
?dtor$4@?0??fin@apihook@@QEAAXPEAX@Z@4HA PROC		; `apihook::fin'::`1'::dtor$4
  00092	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00097	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009c	55		 push	 rbp
  0009d	57		 push	 rdi
  0009e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a2	48 8b ea	 mov	 rbp, rdx
  000a5	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR $T13[rbp]
  000ac	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  000b1	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b5	5f		 pop	 rdi
  000b6	5d		 pop	 rbp
  000b7	c3		 ret	 0
?dtor$4@?0??fin@apihook@@QEAAXPEAX@Z@4HA ENDP		; `apihook::fin'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\api_hook.cpp
_TEXT	SEGMENT
hook$ = 40
$T4 = 72
$T5 = 88
$T6 = 112
$T7 = 120
$T8 = 144
$T9 = 152
$T10 = 160
$T11 = 184
$T12 = 208
$T13 = 216
$T14 = 240
tv174 = 256
tv192 = 264
tv201 = 272
tv194 = 280
tv64 = 288
tv197 = 296
tv150 = 304
tv157 = 312
tv202 = 320
tv199 = 328
this$ = 368
pTargetModuleName$ = 376
pTargetFunctionName$ = 384
?fin@apihook@@QEAAXPEBD0@Z PROC				; apihook::fin

; 109  : void apihook::fin(const TCHAR *pTargetModuleName, const char *pTargetFunctionName) {

$LN12:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR [rsp+368]

; 110  :     auto hook = std::find_if(hookList.begin(), hookList.end(), [pTargetModuleName, pTargetFunctionName](hookData data) {

  0002f	48 8d 44 24 58	 lea	 rax, QWORD PTR $T5[rsp]
  00034	48 89 44 24 70	 mov	 QWORD PTR $T6[rsp], rax
  00039	48 8d 44 24 78	 lea	 rax, QWORD PTR $T7[rsp]
  0003e	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR $T8[rsp], rax
  00046	4c 8d 84 24 80
	01 00 00	 lea	 r8, QWORD PTR pTargetFunctionName$[rsp]
  0004e	48 8d 94 24 78
	01 00 00	 lea	 rdx, QWORD PTR pTargetModuleName$[rsp]
  00056	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T4[rsp]
  0005b	e8 00 00 00 00	 call	 ??0<lambda_831aa28b571b4242b9e704a94bc96691>@@QEAA@AEBQEBD0@Z ; <lambda_831aa28b571b4242b9e704a94bc96691>::<lambda_831aa28b571b4242b9e704a94bc96691>
  00060	48 8d 8c 24 f0
	00 00 00	 lea	 rcx, QWORD PTR $T14[rsp]
  00068	48 8b f9	 mov	 rdi, rcx
  0006b	48 8b f0	 mov	 rsi, rax
  0006e	b9 10 00 00 00	 mov	 ecx, 16
  00073	f3 a4		 rep movsb
  00075	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0007d	48 8b 54 24 70	 mov	 rdx, QWORD PTR $T6[rsp]
  00082	48 8b c8	 mov	 rcx, rax
  00085	e8 00 00 00 00	 call	 ?end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ ; std::vector<hookData,std::allocator<hookData> >::end
  0008a	48 89 84 24 00
	01 00 00	 mov	 QWORD PTR tv174[rsp], rax
  00092	48 8b 84 24 00
	01 00 00	 mov	 rax, QWORD PTR tv174[rsp]
  0009a	48 89 84 24 08
	01 00 00	 mov	 QWORD PTR tv192[rsp], rax
  000a2	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000aa	48 8b 94 24 90
	00 00 00	 mov	 rdx, QWORD PTR $T8[rsp]
  000b2	48 8b c8	 mov	 rcx, rax
  000b5	e8 00 00 00 00	 call	 ?begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ ; std::vector<hookData,std::allocator<hookData> >::begin
  000ba	48 89 84 24 10
	01 00 00	 mov	 QWORD PTR tv201[rsp], rax
  000c2	48 8b 84 24 10
	01 00 00	 mov	 rax, QWORD PTR tv201[rsp]
  000ca	48 89 84 24 18
	01 00 00	 mov	 QWORD PTR tv194[rsp], rax
  000d2	4c 8d 8c 24 f0
	00 00 00	 lea	 r9, QWORD PTR $T14[rsp]
  000da	4c 8b 84 24 08
	01 00 00	 mov	 r8, QWORD PTR tv192[rsp]
  000e2	48 8b 94 24 18
	01 00 00	 mov	 rdx, QWORD PTR tv194[rsp]
  000ea	48 8d 4c 24 28	 lea	 rcx, QWORD PTR hook$[rsp]
  000ef	e8 00 00 00 00	 call	 ??$find_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@0@V10@V10@V<lambda_831aa28b571b4242b9e704a94bc96691>@@@Z ; std::find_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >,<lambda_831aa28b571b4242b9e704a94bc96691> >
  000f4	90		 npad	 1

; 111  :         return data.sTargetModuleName == pTargetModuleName && data.sTargetFunctionName == pTargetFunctionName;
; 112  :     });
; 113  :     if (hook != hookList.end()) {

  000f5	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000fd	48 8d 94 24 a0
	00 00 00	 lea	 rdx, QWORD PTR $T10[rsp]
  00105	48 8b c8	 mov	 rcx, rax
  00108	e8 00 00 00 00	 call	 ?end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@XZ ; std::vector<hookData,std::allocator<hookData> >::end
  0010d	48 89 84 24 20
	01 00 00	 mov	 QWORD PTR tv64[rsp], rax
  00115	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR tv64[rsp]
  0011d	48 89 84 24 28
	01 00 00	 mov	 QWORD PTR tv197[rsp], rax
  00125	48 8b 94 24 28
	01 00 00	 mov	 rdx, QWORD PTR tv197[rsp]
  0012d	48 8d 4c 24 28	 lea	 rcx, QWORD PTR hook$[rsp]
  00132	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator!=
  00137	88 84 24 98 00
	00 00		 mov	 BYTE PTR $T9[rsp], al
  0013e	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR $T10[rsp]
  00146	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0014b	0f b6 84 24 98
	00 00 00	 movzx	 eax, BYTE PTR $T9[rsp]
  00153	85 c0		 test	 eax, eax
  00155	0f 84 04 01 00
	00		 je	 $LN2@fin

; 114  :         if (hook->pOrigFunc) {

  0015b	48 8d 4c 24 28	 lea	 rcx, QWORD PTR hook$[rsp]
  00160	e8 00 00 00 00	 call	 ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator->
  00165	48 83 78 58 00	 cmp	 QWORD PTR [rax+88], 0
  0016a	0f 84 ef 00 00
	00		 je	 $LN2@fin

; 115  :             hook_function(hook->sTargetModuleName.c_str(), hook->sTargetFunctionName.c_str(), hook->pOrigFunc);

  00170	48 8d 4c 24 28	 lea	 rcx, QWORD PTR hook$[rsp]
  00175	e8 00 00 00 00	 call	 ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator->
  0017a	48 89 84 24 30
	01 00 00	 mov	 QWORD PTR tv150[rsp], rax
  00182	48 8d 4c 24 28	 lea	 rcx, QWORD PTR hook$[rsp]
  00187	e8 00 00 00 00	 call	 ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator->
  0018c	48 83 c0 28	 add	 rax, 40			; 00000028H
  00190	48 8b c8	 mov	 rcx, rax
  00193	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00198	48 89 84 24 38
	01 00 00	 mov	 QWORD PTR tv157[rsp], rax
  001a0	48 8d 4c 24 28	 lea	 rcx, QWORD PTR hook$[rsp]
  001a5	e8 00 00 00 00	 call	 ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator->
  001aa	48 8b c8	 mov	 rcx, rax
  001ad	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  001b2	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR tv150[rsp]
  001ba	4c 8b 41 58	 mov	 r8, QWORD PTR [rcx+88]
  001be	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR tv157[rsp]
  001c6	48 8b d1	 mov	 rdx, rcx
  001c9	48 8b c8	 mov	 rcx, rax
  001cc	e8 00 00 00 00	 call	 ?hook_function@apihook@@CAPEAXPEBD0PEAX@Z ; apihook::hook_function

; 116  :             if (hook->pOrigFuncSetAdr) {

  001d1	48 8d 4c 24 28	 lea	 rcx, QWORD PTR hook$[rsp]
  001d6	e8 00 00 00 00	 call	 ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator->
  001db	48 83 78 60 00	 cmp	 QWORD PTR [rax+96], 0
  001e0	74 15		 je	 SHORT $LN4@fin

; 117  :                 *(hook->pOrigFuncSetAdr) = nullptr;

  001e2	48 8d 4c 24 28	 lea	 rcx, QWORD PTR hook$[rsp]
  001e7	e8 00 00 00 00	 call	 ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEBAPEAUhookData@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<hookData> > >::operator->
  001ec	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  001f0	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN4@fin:

; 118  :             }
; 119  :             hookList.erase(hook);

  001f7	48 8d 84 24 b8
	00 00 00	 lea	 rax, QWORD PTR $T11[rsp]
  001ff	48 89 84 24 d0
	00 00 00	 mov	 QWORD PTR $T12[rsp], rax
  00207	48 8d 54 24 28	 lea	 rdx, QWORD PTR hook$[rsp]
  0020c	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR $T12[rsp]
  00214	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@AEBV01@@Z
  00219	48 89 84 24 40
	01 00 00	 mov	 QWORD PTR tv202[rsp], rax
  00221	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR tv202[rsp]
  00229	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR tv199[rsp], rax
  00231	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00239	4c 8b 84 24 48
	01 00 00	 mov	 r8, QWORD PTR tv199[rsp]
  00241	48 8d 94 24 d8
	00 00 00	 lea	 rdx, QWORD PTR $T13[rsp]
  00249	48 8b c8	 mov	 rcx, rax
  0024c	e8 00 00 00 00	 call	 ?erase@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@2@@Z ; std::vector<hookData,std::allocator<hookData> >::erase
  00251	48 8d 8c 24 d8
	00 00 00	 lea	 rcx, QWORD PTR $T13[rsp]
  00259	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0025e	90		 npad	 1
$LN2@fin:

; 120  :         }
; 121  :     }
; 122  : }

  0025f	48 8d 4c 24 28	 lea	 rcx, QWORD PTR hook$[rsp]
  00264	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  00269	48 8b cc	 mov	 rcx, rsp
  0026c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?fin@apihook@@QEAAXPEBD0@Z$rtcFrameData
  00273	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00278	48 81 c4 58 01
	00 00		 add	 rsp, 344		; 00000158H
  0027f	5f		 pop	 rdi
  00280	5e		 pop	 rsi
  00281	c3		 ret	 0
?fin@apihook@@QEAAXPEBD0@Z ENDP				; apihook::fin
_TEXT	ENDS
text$x	SEGMENT
hook$ = 40
$T4 = 72
$T5 = 88
$T6 = 112
$T7 = 120
$T8 = 144
$T9 = 152
$T10 = 160
$T11 = 184
$T12 = 208
$T13 = 216
$T14 = 240
tv174 = 256
tv192 = 264
tv201 = 272
tv194 = 280
tv64 = 288
tv197 = 296
tv150 = 304
tv157 = 312
tv202 = 320
tv199 = 328
this$ = 368
pTargetModuleName$ = 376
pTargetFunctionName$ = 384
?dtor$0@?0??fin@apihook@@QEAAXPEBD0@Z@4HA PROC		; `apihook::fin'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 70	 mov	 rcx, QWORD PTR $T6[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??fin@apihook@@QEAAXPEBD0@Z@4HA ENDP		; `apihook::fin'::`1'::dtor$0
hook$ = 40
$T4 = 72
$T5 = 88
$T6 = 112
$T7 = 120
$T8 = 144
$T9 = 152
$T10 = 160
$T11 = 184
$T12 = 208
$T13 = 216
$T14 = 240
tv174 = 256
tv192 = 264
tv201 = 272
tv194 = 280
tv64 = 288
tv197 = 296
tv150 = 304
tv157 = 312
tv202 = 320
tv199 = 328
this$ = 368
pTargetModuleName$ = 376
pTargetFunctionName$ = 384
?dtor$1@?0??fin@apihook@@QEAAXPEBD0@Z@4HA PROC		; `apihook::fin'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR $T8[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??fin@apihook@@QEAAXPEBD0@Z@4HA ENDP		; `apihook::fin'::`1'::dtor$1
hook$ = 40
$T4 = 72
$T5 = 88
$T6 = 112
$T7 = 120
$T8 = 144
$T9 = 152
$T10 = 160
$T11 = 184
$T12 = 208
$T13 = 216
$T14 = 240
tv174 = 256
tv192 = 264
tv201 = 272
tv194 = 280
tv64 = 288
tv197 = 296
tv150 = 304
tv157 = 312
tv202 = 320
tv199 = 328
this$ = 368
pTargetModuleName$ = 376
pTargetFunctionName$ = 384
?dtor$2@?0??fin@apihook@@QEAAXPEBD0@Z@4HA PROC		; `apihook::fin'::`1'::dtor$2
  00049	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00053	55		 push	 rbp
  00054	57		 push	 rdi
  00055	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00059	48 8b ea	 mov	 rbp, rdx
  0005c	48 8d 4d 28	 lea	 rcx, QWORD PTR hook$[rbp]
  00060	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  00065	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?dtor$2@?0??fin@apihook@@QEAAXPEBD0@Z@4HA ENDP		; `apihook::fin'::`1'::dtor$2
hook$ = 40
$T4 = 72
$T5 = 88
$T6 = 112
$T7 = 120
$T8 = 144
$T9 = 152
$T10 = 160
$T11 = 184
$T12 = 208
$T13 = 216
$T14 = 240
tv174 = 256
tv192 = 264
tv201 = 272
tv194 = 280
tv64 = 288
tv197 = 296
tv150 = 304
tv157 = 312
tv202 = 320
tv199 = 328
this$ = 368
pTargetModuleName$ = 376
pTargetFunctionName$ = 384
?dtor$3@?0??fin@apihook@@QEAAXPEBD0@Z@4HA PROC		; `apihook::fin'::`1'::dtor$3
  0006c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00071	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00076	55		 push	 rbp
  00077	57		 push	 rdi
  00078	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007c	48 8b ea	 mov	 rbp, rdx
  0007f	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  00086	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0008b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0008f	5f		 pop	 rdi
  00090	5d		 pop	 rbp
  00091	c3		 ret	 0
?dtor$3@?0??fin@apihook@@QEAAXPEBD0@Z@4HA ENDP		; `apihook::fin'::`1'::dtor$3
hook$ = 40
$T4 = 72
$T5 = 88
$T6 = 112
$T7 = 120
$T8 = 144
$T9 = 152
$T10 = 160
$T11 = 184
$T12 = 208
$T13 = 216
$T14 = 240
tv174 = 256
tv192 = 264
tv201 = 272
tv194 = 280
tv64 = 288
tv197 = 296
tv150 = 304
tv157 = 312
tv202 = 320
tv199 = 328
this$ = 368
pTargetModuleName$ = 376
pTargetFunctionName$ = 384
?dtor$4@?0??fin@apihook@@QEAAXPEBD0@Z@4HA PROC		; `apihook::fin'::`1'::dtor$4
  00092	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00097	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009c	55		 push	 rbp
  0009d	57		 push	 rdi
  0009e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a2	48 8b ea	 mov	 rbp, rdx
  000a5	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR $T12[rbp]
  000ac	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  000b1	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b5	5f		 pop	 rdi
  000b6	5d		 pop	 rbp
  000b7	c3		 ret	 0
?dtor$4@?0??fin@apihook@@QEAAXPEBD0@Z@4HA ENDP		; `apihook::fin'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
hook$ = 40
$T4 = 72
$T5 = 88
$T6 = 112
$T7 = 120
$T8 = 144
$T9 = 152
$T10 = 160
$T11 = 184
$T12 = 208
$T13 = 216
$T14 = 240
tv174 = 256
tv192 = 264
tv201 = 272
tv194 = 280
tv64 = 288
tv197 = 296
tv150 = 304
tv157 = 312
tv202 = 320
tv199 = 328
this$ = 368
pTargetModuleName$ = 376
pTargetFunctionName$ = 384
?dtor$0@?0??fin@apihook@@QEAAXPEBD0@Z@4HA PROC		; `apihook::fin'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 70	 mov	 rcx, QWORD PTR $T6[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??fin@apihook@@QEAAXPEBD0@Z@4HA ENDP		; `apihook::fin'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
hook$ = 40
$T4 = 72
$T5 = 88
$T6 = 112
$T7 = 120
$T8 = 144
$T9 = 152
$T10 = 160
$T11 = 184
$T12 = 208
$T13 = 216
$T14 = 240
tv174 = 256
tv192 = 264
tv201 = 272
tv194 = 280
tv64 = 288
tv197 = 296
tv150 = 304
tv157 = 312
tv202 = 320
tv199 = 328
this$ = 368
pTargetModuleName$ = 376
pTargetFunctionName$ = 384
?dtor$1@?0??fin@apihook@@QEAAXPEBD0@Z@4HA PROC		; `apihook::fin'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR $T8[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??fin@apihook@@QEAAXPEBD0@Z@4HA ENDP		; `apihook::fin'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
hook$ = 40
$T4 = 72
$T5 = 88
$T6 = 112
$T7 = 120
$T8 = 144
$T9 = 152
$T10 = 160
$T11 = 184
$T12 = 208
$T13 = 216
$T14 = 240
tv174 = 256
tv192 = 264
tv201 = 272
tv194 = 280
tv64 = 288
tv197 = 296
tv150 = 304
tv157 = 312
tv202 = 320
tv199 = 328
this$ = 368
pTargetModuleName$ = 376
pTargetFunctionName$ = 384
?dtor$2@?0??fin@apihook@@QEAAXPEBD0@Z@4HA PROC		; `apihook::fin'::`1'::dtor$2
  00049	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00053	55		 push	 rbp
  00054	57		 push	 rdi
  00055	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00059	48 8b ea	 mov	 rbp, rdx
  0005c	48 8d 4d 28	 lea	 rcx, QWORD PTR hook$[rbp]
  00060	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  00065	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?dtor$2@?0??fin@apihook@@QEAAXPEBD0@Z@4HA ENDP		; `apihook::fin'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
hook$ = 40
$T4 = 72
$T5 = 88
$T6 = 112
$T7 = 120
$T8 = 144
$T9 = 152
$T10 = 160
$T11 = 184
$T12 = 208
$T13 = 216
$T14 = 240
tv174 = 256
tv192 = 264
tv201 = 272
tv194 = 280
tv64 = 288
tv197 = 296
tv150 = 304
tv157 = 312
tv202 = 320
tv199 = 328
this$ = 368
pTargetModuleName$ = 376
pTargetFunctionName$ = 384
?dtor$3@?0??fin@apihook@@QEAAXPEBD0@Z@4HA PROC		; `apihook::fin'::`1'::dtor$3
  0006c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00071	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00076	55		 push	 rbp
  00077	57		 push	 rdi
  00078	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007c	48 8b ea	 mov	 rbp, rdx
  0007f	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  00086	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  0008b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0008f	5f		 pop	 rdi
  00090	5d		 pop	 rbp
  00091	c3		 ret	 0
?dtor$3@?0??fin@apihook@@QEAAXPEBD0@Z@4HA ENDP		; `apihook::fin'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
hook$ = 40
$T4 = 72
$T5 = 88
$T6 = 112
$T7 = 120
$T8 = 144
$T9 = 152
$T10 = 160
$T11 = 184
$T12 = 208
$T13 = 216
$T14 = 240
tv174 = 256
tv192 = 264
tv201 = 272
tv194 = 280
tv64 = 288
tv197 = 296
tv150 = 304
tv157 = 312
tv202 = 320
tv199 = 328
this$ = 368
pTargetModuleName$ = 376
pTargetFunctionName$ = 384
?dtor$4@?0??fin@apihook@@QEAAXPEBD0@Z@4HA PROC		; `apihook::fin'::`1'::dtor$4
  00092	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00097	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009c	55		 push	 rbp
  0009d	57		 push	 rdi
  0009e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a2	48 8b ea	 mov	 rbp, rdx
  000a5	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR $T12[rbp]
  000ac	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UhookData@@@std@@@std@@@std@@QEAA@XZ
  000b1	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b5	5f		 pop	 rdi
  000b6	5d		 pop	 rbp
  000b7	c3		 ret	 0
?dtor$4@?0??fin@apihook@@QEAAXPEBD0@Z@4HA ENDP		; `apihook::fin'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\api_hook.cpp
_TEXT	SEGMENT
<range>$L0$1 = 32
<begin>$L0$2 = 40
<end>$L0$3 = 48
hook$4 = 56
tv78 = 64
this$ = 96
?fin@apihook@@QEAAXXZ PROC				; apihook::fin

; 98   : void apihook::fin() {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 99   :     for (const auto& hook : hookList) {

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR <range>$L0$1[rsp], rax
  00028	48 8b 4c 24 20	 mov	 rcx, QWORD PTR <range>$L0$1[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@XZ ; std::vector<hookData,std::allocator<hookData> >::_Unchecked_begin
  00032	48 89 44 24 28	 mov	 QWORD PTR <begin>$L0$2[rsp], rax
  00037	48 8b 4c 24 20	 mov	 rcx, QWORD PTR <range>$L0$1[rsp]
  0003c	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAPEAUhookData@@XZ ; std::vector<hookData,std::allocator<hookData> >::_Unchecked_end
  00041	48 89 44 24 30	 mov	 QWORD PTR <end>$L0$3[rsp], rax
  00046	eb 0e		 jmp	 SHORT $LN4@fin
$LN2@fin:
  00048	48 8b 44 24 28	 mov	 rax, QWORD PTR <begin>$L0$2[rsp]
  0004d	48 83 c0 68	 add	 rax, 104		; 00000068H
  00051	48 89 44 24 28	 mov	 QWORD PTR <begin>$L0$2[rsp], rax
$LN4@fin:
  00056	48 8b 44 24 30	 mov	 rax, QWORD PTR <end>$L0$3[rsp]
  0005b	48 39 44 24 28	 cmp	 QWORD PTR <begin>$L0$2[rsp], rax
  00060	74 70		 je	 SHORT $LN3@fin
  00062	48 8b 44 24 28	 mov	 rax, QWORD PTR <begin>$L0$2[rsp]
  00067	48 89 44 24 38	 mov	 QWORD PTR hook$4[rsp], rax

; 100  :         if (hook.pOrigFunc) {

  0006c	48 8b 44 24 38	 mov	 rax, QWORD PTR hook$4[rsp]
  00071	48 83 78 58 00	 cmp	 QWORD PTR [rax+88], 0
  00076	74 55		 je	 SHORT $LN5@fin

; 101  :             hook_function(hook.sTargetModuleName.c_str(), hook.sTargetFunctionName.c_str(), hook.pOrigFunc);

  00078	48 8b 44 24 38	 mov	 rax, QWORD PTR hook$4[rsp]
  0007d	48 83 c0 28	 add	 rax, 40			; 00000028H
  00081	48 8b c8	 mov	 rcx, rax
  00084	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00089	48 89 44 24 40	 mov	 QWORD PTR tv78[rsp], rax
  0008e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR hook$4[rsp]
  00093	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00098	48 8b 4c 24 38	 mov	 rcx, QWORD PTR hook$4[rsp]
  0009d	4c 8b 41 58	 mov	 r8, QWORD PTR [rcx+88]
  000a1	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv78[rsp]
  000a6	48 8b d1	 mov	 rdx, rcx
  000a9	48 8b c8	 mov	 rcx, rax
  000ac	e8 00 00 00 00	 call	 ?hook_function@apihook@@CAPEAXPEBD0PEAX@Z ; apihook::hook_function

; 102  :             if (hook.pOrigFuncSetAdr) {

  000b1	48 8b 44 24 38	 mov	 rax, QWORD PTR hook$4[rsp]
  000b6	48 83 78 60 00	 cmp	 QWORD PTR [rax+96], 0
  000bb	74 10		 je	 SHORT $LN6@fin

; 103  :                 *hook.pOrigFuncSetAdr = nullptr;

  000bd	48 8b 44 24 38	 mov	 rax, QWORD PTR hook$4[rsp]
  000c2	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  000c6	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN6@fin:
$LN5@fin:

; 104  :             }
; 105  :         }
; 106  :     }

  000cd	e9 76 ff ff ff	 jmp	 $LN2@fin
$LN3@fin:

; 107  :     hookList.clear();

  000d2	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  000d7	48 8b c8	 mov	 rcx, rax
  000da	e8 00 00 00 00	 call	 ?clear@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXXZ ; std::vector<hookData,std::allocator<hookData> >::clear

; 108  : }

  000df	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000e3	5f		 pop	 rdi
  000e4	c3		 ret	 0
?fin@apihook@@QEAAXXZ ENDP				; apihook::fin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\api_hook.cpp
_TEXT	SEGMENT
?print_all_func@apihook@@SAXXZ PROC			; apihook::print_all_func

; 31   : void apihook::print_all_func() {

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 32   :     hook_function(nullptr, nullptr, nullptr);

  00015	45 33 c0	 xor	 r8d, r8d
  00018	33 d2		 xor	 edx, edx
  0001a	33 c9		 xor	 ecx, ecx
  0001c	e8 00 00 00 00	 call	 ?hook_function@apihook@@CAPEAXPEBD0PEAX@Z ; apihook::hook_function

; 33   : }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?print_all_func@apihook@@SAXXZ ENDP			; apihook::print_all_func
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\api_hook.cpp
_TEXT	SEGMENT
hook$ = 48
$T4 = 176
$T5 = 180
tv74 = 184
__$ArrayPad$ = 192
this$ = 224
pTargetModuleName$ = 232
pTargetFunctionName$ = 240
pNewFunc$ = 248
pOrigFuncSetAdr$ = 256
?hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z PROC		; apihook::hook

; 81   : int apihook::hook(const TCHAR *pTargetModuleName, const char *pTargetFunctionName, void *pNewFunc, void **pOrigFuncSetAdr) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec d0 00
	00 00		 sub	 rsp, 208		; 000000d0H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+224]
  00033	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003a	48 33 c4	 xor	 rax, rsp
  0003d	48 89 84 24 c0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 82   :     hookData hook;

  00045	48 8d 4c 24 30	 lea	 rcx, QWORD PTR hook$[rsp]
  0004a	e8 00 00 00 00	 call	 ??0hookData@@QEAA@XZ
  0004f	90		 npad	 1

; 83   :     hook.sTargetModuleName = pTargetModuleName;

  00050	48 8b 94 24 e8
	00 00 00	 mov	 rdx, QWORD PTR pTargetModuleName$[rsp]
  00058	48 8d 4c 24 30	 lea	 rcx, QWORD PTR hook$[rsp]
  0005d	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

; 84   :     hook.sTargetFunctionName = pTargetFunctionName;

  00062	48 8b 94 24 f0
	00 00 00	 mov	 rdx, QWORD PTR pTargetFunctionName$[rsp]
  0006a	48 8d 4c 24 58	 lea	 rcx, QWORD PTR hook$[rsp+40]
  0006f	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

; 85   :     hook.pNewFunc = pNewFunc;

  00074	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR pNewFunc$[rsp]
  0007c	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR hook$[rsp+80], rax

; 86   :     hook.pOrigFunc = hook_function(hook.sTargetModuleName.c_str(), hook.sTargetFunctionName.c_str(), hook.pNewFunc);

  00084	48 8d 4c 24 58	 lea	 rcx, QWORD PTR hook$[rsp+40]
  00089	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0008e	48 89 84 24 b8
	00 00 00	 mov	 QWORD PTR tv74[rsp], rax
  00096	48 8d 4c 24 30	 lea	 rcx, QWORD PTR hook$[rsp]
  0009b	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  000a0	4c 8b 84 24 80
	00 00 00	 mov	 r8, QWORD PTR hook$[rsp+80]
  000a8	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR tv74[rsp]
  000b0	48 8b d1	 mov	 rdx, rcx
  000b3	48 8b c8	 mov	 rcx, rax
  000b6	e8 00 00 00 00	 call	 ?hook_function@apihook@@CAPEAXPEBD0PEAX@Z ; apihook::hook_function
  000bb	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR hook$[rsp+88], rax

; 87   :     if (!hook.pOrigFunc) {

  000c3	48 83 bc 24 88
	00 00 00 00	 cmp	 QWORD PTR hook$[rsp+88], 0
  000cc	75 1e		 jne	 SHORT $LN2@hook

; 88   :         return 1;

  000ce	c7 84 24 b0 00
	00 00 01 00 00
	00		 mov	 DWORD PTR $T4[rsp], 1
  000d9	48 8d 4c 24 30	 lea	 rcx, QWORD PTR hook$[rsp]
  000de	e8 00 00 00 00	 call	 ??1hookData@@QEAA@XZ
  000e3	8b 84 24 b0 00
	00 00		 mov	 eax, DWORD PTR $T4[rsp]
  000ea	eb 5f		 jmp	 SHORT $LN1@hook
$LN2@hook:

; 89   :     }
; 90   :     if (pOrigFuncSetAdr) {

  000ec	48 83 bc 24 00
	01 00 00 00	 cmp	 QWORD PTR pOrigFuncSetAdr$[rsp], 0
  000f5	74 23		 je	 SHORT $LN3@hook

; 91   :         hook.pOrigFuncSetAdr = pOrigFuncSetAdr;

  000f7	48 8b 84 24 00
	01 00 00	 mov	 rax, QWORD PTR pOrigFuncSetAdr$[rsp]
  000ff	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR hook$[rsp+96], rax

; 92   :         *hook.pOrigFuncSetAdr = hook.pOrigFunc;

  00107	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR hook$[rsp+96]
  0010f	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR hook$[rsp+88]
  00117	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN3@hook:

; 93   :     }
; 94   :     hookList.push_back(hook);

  0011a	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00122	48 8d 54 24 30	 lea	 rdx, QWORD PTR hook$[rsp]
  00127	48 8b c8	 mov	 rcx, rax
  0012a	e8 00 00 00 00	 call	 ?push_back@?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAAXAEBUhookData@@@Z ; std::vector<hookData,std::allocator<hookData> >::push_back

; 95   :     return 0;

  0012f	c7 84 24 b4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T5[rsp], 0
  0013a	48 8d 4c 24 30	 lea	 rcx, QWORD PTR hook$[rsp]
  0013f	e8 00 00 00 00	 call	 ??1hookData@@QEAA@XZ
  00144	8b 84 24 b4 00
	00 00		 mov	 eax, DWORD PTR $T5[rsp]
$LN1@hook:

; 96   : }

  0014b	48 8b f8	 mov	 rdi, rax
  0014e	48 8b cc	 mov	 rcx, rsp
  00151	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z$rtcFrameData
  00158	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0015d	48 8b c7	 mov	 rax, rdi
  00160	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00168	48 33 cc	 xor	 rcx, rsp
  0016b	e8 00 00 00 00	 call	 __security_check_cookie
  00170	48 81 c4 d0 00
	00 00		 add	 rsp, 208		; 000000d0H
  00177	5f		 pop	 rdi
  00178	c3		 ret	 0
?hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z ENDP		; apihook::hook
_TEXT	ENDS
text$x	SEGMENT
hook$ = 48
$T4 = 176
$T5 = 180
tv74 = 184
__$ArrayPad$ = 192
this$ = 224
pTargetModuleName$ = 232
pTargetFunctionName$ = 240
pNewFunc$ = 248
pOrigFuncSetAdr$ = 256
?dtor$0@?0??hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z@4HA PROC ; `apihook::hook'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 30	 lea	 rcx, QWORD PTR hook$[rbp]
  00017	e8 00 00 00 00	 call	 ??1hookData@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z@4HA ENDP ; `apihook::hook'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
hook$ = 48
$T4 = 176
$T5 = 180
tv74 = 184
__$ArrayPad$ = 192
this$ = 224
pTargetModuleName$ = 232
pTargetFunctionName$ = 240
pNewFunc$ = 248
pOrigFuncSetAdr$ = 256
?dtor$0@?0??hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z@4HA PROC ; `apihook::hook'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 30	 lea	 rcx, QWORD PTR hook$[rbp]
  00017	e8 00 00 00 00	 call	 ??1hookData@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??hook@apihook@@QEAAHPEBD0PEAXPEAPEAX@Z@4HA ENDP ; `apihook::hook'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\api_hook.cpp
_TEXT	SEGMENT
this$ = 48
??1apihook@@QEAA@XZ PROC				; apihook::~apihook

; 77   : apihook::~apihook() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 78   :     fin();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?fin@apihook@@QEAAXXZ	; apihook::fin
  00028	90		 npad	 1

; 79   : }

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ??1?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ ; std::vector<hookData,std::allocator<hookData> >::~vector<hookData,std::allocator<hookData> >
  00036	90		 npad	 1
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??1apihook@@QEAA@XZ ENDP				; apihook::~apihook
_TEXT	ENDS
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1apihook@@QEAA@XZ@4HA PROC			; `apihook::~apihook'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ ; std::vector<hookData,std::allocator<hookData> >::~vector<hookData,std::allocator<hookData> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1apihook@@QEAA@XZ@4HA ENDP			; `apihook::~apihook'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1apihook@@QEAA@XZ@4HA PROC			; `apihook::~apihook'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ ; std::vector<hookData,std::allocator<hookData> >::~vector<hookData,std::allocator<hookData> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1apihook@@QEAA@XZ@4HA ENDP			; `apihook::~apihook'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\api_hook.cpp
_TEXT	SEGMENT
this$ = 48
??0apihook@@QEAA@XZ PROC				; apihook::apihook

; 73   : apihook::apihook() : hookList() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ??0?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ ; std::vector<hookData,std::allocator<hookData> >::vector<hookData,std::allocator<hookData> >
  0002b	90		 npad	 1

; 74   : 
; 75   : }

  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00035	5f		 pop	 rdi
  00036	c3		 ret	 0
??0apihook@@QEAA@XZ ENDP				; apihook::apihook
_TEXT	ENDS
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0apihook@@QEAA@XZ@4HA PROC			; `apihook::apihook'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ ; std::vector<hookData,std::allocator<hookData> >::~vector<hookData,std::allocator<hookData> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0apihook@@QEAA@XZ@4HA ENDP			; `apihook::apihook'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0apihook@@QEAA@XZ@4HA PROC			; `apihook::apihook'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@UhookData@@V?$allocator@UhookData@@@std@@@std@@QEAA@XZ ; std::vector<hookData,std::allocator<hookData> >::~vector<hookData,std::allocator<hookData> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0apihook@@QEAA@XZ@4HA ENDP			; `apihook::apihook'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GhookData@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GhookData@@QEAAPEAXI@Z PROC				; hookData::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1hookData@@QEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 68 00 00 00	 mov	 edx, 104		; 00000068H
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_GhookData@@QEAAPEAXI@Z ENDP				; hookData::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4hookData@@QEAAAEAU0@$$QEAU0@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??4hookData@@QEAAAEAU0@$$QEAU0@@Z PROC			; hookData::operator=, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b d0	 mov	 rdx, rax
  00030	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
  00035	48 8b 44 24 38	 mov	 rax, QWORD PTR __that$[rsp]
  0003a	48 83 c0 28	 add	 rax, 40			; 00000028H
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00043	48 83 c1 28	 add	 rcx, 40			; 00000028H
  00047	48 8b d0	 mov	 rdx, rax
  0004a	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __that$[rsp]
  00059	48 8b 49 50	 mov	 rcx, QWORD PTR [rcx+80]
  0005d	48 89 48 50	 mov	 QWORD PTR [rax+80], rcx
  00061	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00066	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __that$[rsp]
  0006b	48 8b 49 58	 mov	 rcx, QWORD PTR [rcx+88]
  0006f	48 89 48 58	 mov	 QWORD PTR [rax+88], rcx
  00073	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00078	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __that$[rsp]
  0007d	48 8b 49 60	 mov	 rcx, QWORD PTR [rcx+96]
  00081	48 89 48 60	 mov	 QWORD PTR [rax+96], rcx
  00085	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0008a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0008e	5f		 pop	 rdi
  0008f	c3		 ret	 0
??4hookData@@QEAAAEAU0@$$QEAU0@@Z ENDP			; hookData::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0hookData@@QEAA@$$QEAU0@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0hookData@@QEAA@$$QEAU0@@Z PROC			; hookData::hookData, COMDAT
$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b d0	 mov	 rdx, rax
  00030	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00035	90		 npad	 1
  00036	48 8b 44 24 38	 mov	 rax, QWORD PTR __that$[rsp]
  0003b	48 83 c0 28	 add	 rax, 40			; 00000028H
  0003f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00044	48 83 c1 28	 add	 rcx, 40			; 00000028H
  00048	48 8b d0	 mov	 rdx, rax
  0004b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00050	90		 npad	 1
  00051	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00056	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __that$[rsp]
  0005b	48 8b 49 50	 mov	 rcx, QWORD PTR [rcx+80]
  0005f	48 89 48 50	 mov	 QWORD PTR [rax+80], rcx
  00063	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00068	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __that$[rsp]
  0006d	48 8b 49 58	 mov	 rcx, QWORD PTR [rcx+88]
  00071	48 89 48 58	 mov	 QWORD PTR [rax+88], rcx
  00075	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0007a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __that$[rsp]
  0007f	48 8b 49 60	 mov	 rcx, QWORD PTR [rcx+96]
  00083	48 89 48 60	 mov	 QWORD PTR [rax+96], rcx
  00087	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0008c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00090	5f		 pop	 rdi
  00091	c3		 ret	 0
??0hookData@@QEAA@$$QEAU0@@Z ENDP			; hookData::hookData
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0hookData@@QEAA@$$QEAU0@@Z@4HA PROC	; `hookData::hookData'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0hookData@@QEAA@$$QEAU0@@Z@4HA ENDP	; `hookData::hookData'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$1@?0???0hookData@@QEAA@$$QEAU0@@Z@4HA PROC	; `hookData::hookData'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 28	 add	 rcx, 40			; 00000028H
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???0hookData@@QEAA@$$QEAU0@@Z@4HA ENDP	; `hookData::hookData'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0hookData@@QEAA@$$QEAU0@@Z@4HA PROC	; `hookData::hookData'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0hookData@@QEAA@$$QEAU0@@Z@4HA ENDP	; `hookData::hookData'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$1@?0???0hookData@@QEAA@$$QEAU0@@Z@4HA PROC	; `hookData::hookData'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 28	 add	 rcx, 40			; 00000028H
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???0hookData@@QEAA@$$QEAU0@@Z@4HA ENDP	; `hookData::hookData'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0hookData@@QEAA@AEBU0@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0hookData@@QEAA@AEBU0@@Z PROC				; hookData::hookData, COMDAT
$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b d0	 mov	 rdx, rax
  00030	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00035	90		 npad	 1
  00036	48 8b 44 24 38	 mov	 rax, QWORD PTR __that$[rsp]
  0003b	48 83 c0 28	 add	 rax, 40			; 00000028H
  0003f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00044	48 83 c1 28	 add	 rcx, 40			; 00000028H
  00048	48 8b d0	 mov	 rdx, rax
  0004b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00050	90		 npad	 1
  00051	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00056	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __that$[rsp]
  0005b	48 8b 49 50	 mov	 rcx, QWORD PTR [rcx+80]
  0005f	48 89 48 50	 mov	 QWORD PTR [rax+80], rcx
  00063	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00068	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __that$[rsp]
  0006d	48 8b 49 58	 mov	 rcx, QWORD PTR [rcx+88]
  00071	48 89 48 58	 mov	 QWORD PTR [rax+88], rcx
  00075	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0007a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __that$[rsp]
  0007f	48 8b 49 60	 mov	 rcx, QWORD PTR [rcx+96]
  00083	48 89 48 60	 mov	 QWORD PTR [rax+96], rcx
  00087	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0008c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00090	5f		 pop	 rdi
  00091	c3		 ret	 0
??0hookData@@QEAA@AEBU0@@Z ENDP				; hookData::hookData
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0hookData@@QEAA@AEBU0@@Z@4HA PROC		; `hookData::hookData'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0hookData@@QEAA@AEBU0@@Z@4HA ENDP		; `hookData::hookData'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$1@?0???0hookData@@QEAA@AEBU0@@Z@4HA PROC		; `hookData::hookData'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 28	 add	 rcx, 40			; 00000028H
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???0hookData@@QEAA@AEBU0@@Z@4HA ENDP		; `hookData::hookData'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0hookData@@QEAA@AEBU0@@Z@4HA PROC		; `hookData::hookData'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0hookData@@QEAA@AEBU0@@Z@4HA ENDP		; `hookData::hookData'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$1@?0???0hookData@@QEAA@AEBU0@@Z@4HA PROC		; `hookData::hookData'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 28	 add	 rcx, 40			; 00000028H
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???0hookData@@QEAA@AEBU0@@Z@4HA ENDP		; `hookData::hookData'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1hookData@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1hookData@@QEAA@XZ PROC				; hookData::~hookData, COMDAT
$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 28	 add	 rax, 40			; 00000028H
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0002f	90		 npad	 1
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b c8	 mov	 rcx, rax
  00038	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0003d	90		 npad	 1
  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
??1hookData@@QEAA@XZ ENDP				; hookData::~hookData
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1hookData@@QEAA@XZ@4HA PROC		; `hookData::~hookData'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1hookData@@QEAA@XZ@4HA ENDP		; `hookData::~hookData'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1hookData@@QEAA@XZ@4HA PROC		; `hookData::~hookData'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 28	 add	 rcx, 40			; 00000028H
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???1hookData@@QEAA@XZ@4HA ENDP		; `hookData::~hookData'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1hookData@@QEAA@XZ@4HA PROC		; `hookData::~hookData'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1hookData@@QEAA@XZ@4HA ENDP		; `hookData::~hookData'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1hookData@@QEAA@XZ@4HA PROC		; `hookData::~hookData'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 28	 add	 rcx, 40			; 00000028H
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???1hookData@@QEAA@XZ@4HA ENDP		; `hookData::~hookData'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0hookData@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0hookData@@QEAA@XZ PROC				; hookData::hookData, COMDAT
$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0002b	90		 npad	 1
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 83 c0 28	 add	 rax, 40			; 00000028H
  00035	48 8b c8	 mov	 rcx, rax
  00038	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0003d	90		 npad	 1
  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0hookData@@QEAA@XZ ENDP				; hookData::hookData
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0hookData@@QEAA@XZ@4HA PROC		; `hookData::hookData'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0hookData@@QEAA@XZ@4HA ENDP		; `hookData::hookData'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???0hookData@@QEAA@XZ@4HA PROC		; `hookData::hookData'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 28	 add	 rcx, 40			; 00000028H
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???0hookData@@QEAA@XZ@4HA ENDP		; `hookData::hookData'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0hookData@@QEAA@XZ@4HA PROC		; `hookData::hookData'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0hookData@@QEAA@XZ@4HA ENDP		; `hookData::hookData'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???0hookData@@QEAA@XZ@4HA PROC		; `hookData::hookData'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 28	 add	 rcx, 40			; 00000028H
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???0hookData@@QEAA@XZ@4HA ENDP		; `hookData::hookData'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0002b	90		 npad	 1
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4198 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4199 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4200 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4194 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4195 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4196 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators, COMDAT

; 4190 :     void _Swap_proxy_and_iterators(basic_string& _Right) { // swap all iterators

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4191 :         _Mypair._Myval2._Swap_proxy_and_iterators(_Right._Mypair._Myval2);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b d0	 mov	 rdx, rax
  00030	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators

; 4192 :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT

; 4180 :     [[noreturn]] static void _Xlen() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 4181 :         _Xlength_error("string too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlen:

; 4182 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_Ptr$1 = 32
_Al$2 = 40
$T3 = 48
this$ = 80
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT

; 4164 :     void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 4165 :         _Mypair._Myval2._Orphan_all();

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0002b	90		 npad	 1

; 4166 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0002c	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00039	90		 npad	 1
  0003a	0f b6 c0	 movzx	 eax, al
  0003d	85 c0		 test	 eax, eax
  0003f	74 4f		 je	 SHORT $LN2@Tidy_deall

; 4167 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

  00041	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00046	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0004a	48 89 44 24 20	 mov	 QWORD PTR _Ptr$1[rsp], rax

; 4168 :             auto& _Al          = _Getal();

  0004f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00054	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00059	90		 npad	 1
  0005a	48 89 44 24 28	 mov	 QWORD PTR _Al$2[rsp], rax

; 4169 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);

  0005f	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00064	48 83 c0 08	 add	 rax, 8
  00068	48 8b c8	 mov	 rcx, rax
  0006b	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ; std::_Destroy_in_place<char *>
  00070	90		 npad	 1

; 4170 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00071	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00076	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0007a	48 ff c0	 inc	 rax
  0007d	4c 8b c0	 mov	 r8, rax
  00080	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Ptr$1[rsp]
  00085	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Al$2[rsp]
  0008a	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
  0008f	90		 npad	 1
$LN2@Tidy_deall:

; 4171 :         }
; 4172 : 
; 4173 :         _Mypair._Myval2._Mysize = 0;

  00090	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00095	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4174 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0009d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000a2	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4175 :         // the _Traits::assign is last so the codegen doesn't think the char
; 4176 :         // write can alias this
; 4177 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000aa	c6 44 24 30 00	 mov	 BYTE PTR $T3[rsp], 0
  000af	b8 01 00 00 00	 mov	 eax, 1
  000b4	48 6b c0 00	 imul	 rax, rax, 0
  000b8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000bd	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  000c2	48 8d 54 24 30	 lea	 rdx, QWORD PTR $T3[rsp]
  000c7	48 8b c8	 mov	 rcx, rax
  000ca	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
  000cf	90		 npad	 1

; 4178 :     }

  000d0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init, COMDAT

; 4156 :     void _Tidy_init() noexcept { // initialize basic_string data members

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4157 :         _Mypair._Myval2._Mysize = 0;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4158 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4159 :         // the _Traits::assign is last so the codegen doesn't think the char
; 4160 :         // write can alias this
; 4161 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00038	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  0003d	b8 01 00 00 00	 mov	 eax, 1
  00042	48 6b c0 00	 imul	 rax, rax, 0
  00046	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  00050	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00055	48 8b c8	 mov	 rcx, rax
  00058	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 4162 :     }

  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 48
_Requested$ = 56
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4077 :     _NODISCARD size_type _Calculate_growth(const size_type _Requested) const noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4078 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0002d	4c 8b c0	 mov	 r8, rax
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 50 20	 mov	 rdx, QWORD PTR [rax+32]
  00039	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Requested$[rsp]
  0003e	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth

; 4079 :     }

  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
_TEXT	SEGMENT
_Masked$ = 40
$T4 = 56
_Requested$ = 80
_Old$ = 88
_Max$ = 96
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4064 :         const size_type _Requested, const size_type _Old, const size_type _Max) noexcept {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 4065 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR _Requested$[rsp]
  0002d	48 83 c8 0f	 or	 rax, 15
  00031	48 89 44 24 28	 mov	 QWORD PTR _Masked$[rsp], rax

; 4066 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00036	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  0003b	48 39 44 24 28	 cmp	 QWORD PTR _Masked$[rsp], rax
  00040	76 07		 jbe	 SHORT $LN2@Calculate_

; 4067 :             return _Max;

  00042	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  00047	eb 59		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 4068 :         }
; 4069 : 
; 4070 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00049	33 d2		 xor	 edx, edx
  0004b	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old$[rsp]
  00050	b9 02 00 00 00	 mov	 ecx, 2
  00055	48 f7 f1	 div	 rcx
  00058	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Max$[rsp]
  0005d	48 2b c8	 sub	 rcx, rax
  00060	48 8b c1	 mov	 rax, rcx
  00063	48 39 44 24 58	 cmp	 QWORD PTR _Old$[rsp], rax
  00068	76 07		 jbe	 SHORT $LN3@Calculate_

; 4071 :             return _Max;

  0006a	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  0006f	eb 31		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 4072 :         }
; 4073 : 
; 4074 :         return _Max_value(_Masked, _Old + _Old / 2);

  00071	33 d2		 xor	 edx, edx
  00073	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old$[rsp]
  00078	b9 02 00 00 00	 mov	 ecx, 2
  0007d	48 f7 f1	 div	 rcx
  00080	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Old$[rsp]
  00085	48 03 c8	 add	 rcx, rax
  00088	48 8b c1	 mov	 rax, rcx
  0008b	48 89 44 24 38	 mov	 QWORD PTR $T4[rsp], rax
  00090	48 8d 54 24 38	 lea	 rdx, QWORD PTR $T4[rsp]
  00095	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Masked$[rsp]
  0009a	e8 00 00 00 00	 call	 ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Max_value<unsigned __int64>
  0009f	48 8b 00	 mov	 rax, QWORD PTR [rax]
$LN1@Calculate_:

; 4075 :     }

  000a2	48 8b f8	 mov	 rdi, rax
  000a5	48 8b cc	 mov	 rcx, rsp
  000a8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcFrameData
  000af	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000b4	48 8b c7	 mov	 rax, rdi
  000b7	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000bb	5f		 pop	 rdi
  000bc	c3		 ret	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NQEBD@Z
_TEXT	SEGMENT
tv65 = 32
this$ = 64
_Ptr$ = 72
?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NQEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Equal, COMDAT

; 3953 :     bool _Equal(_In_z_ const _Elem* const _Ptr) const noexcept { // compare [0, size()) with _Ptr for equality

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 3954 :         return _Traits_equal<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Ptr, _Traits::length(_Ptr));

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00028	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0002d	90		 npad	 1
  0002e	48 89 44 24 20	 mov	 QWORD PTR tv65[rsp], rax
  00033	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00038	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0003d	90		 npad	 1
  0003e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv65[rsp]
  00043	4c 8b c9	 mov	 r9, rcx
  00046	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Ptr$[rsp]
  0004b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00050	48 8b 51 18	 mov	 rdx, QWORD PTR [rcx+24]
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z ; std::_Traits_equal<std::char_traits<char> >
  0005c	90		 npad	 1

; 3955 :     }

  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NQEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Equal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_Alloc_max$ = 40
_Storage_max$ = 56
$T4 = 64
$T5 = 72
$T6 = 80
this$ = 112
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT

; 3570 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 18 00 00 00	 mov	 ecx, 24
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 3571 :         const size_type _Alloc_max   = _Alty_traits::max_size(_Getal());

  0001e	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
  00030	48 89 44 24 28	 mov	 QWORD PTR _Alloc_max$[rsp], rax

; 3572 :         const size_type _Storage_max = // can always store small string

  00035	48 c7 44 24 40
	10 00 00 00	 mov	 QWORD PTR $T4[rsp], 16
  0003e	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T4[rsp]
  00043	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Alloc_max$[rsp]
  00048	e8 00 00 00 00	 call	 ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Max_value<unsigned __int64>
  0004d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00050	48 89 44 24 38	 mov	 QWORD PTR _Storage_max$[rsp], rax

; 3573 :             _Max_value(_Alloc_max, static_cast<size_type>(_BUF_SIZE));
; 3574 :         return _Min_value(static_cast<size_type>((numeric_limits<difference_type>::max)()),

  00055	48 8b 44 24 38	 mov	 rax, QWORD PTR _Storage_max$[rsp]
  0005a	48 ff c8	 dec	 rax
  0005d	48 89 44 24 48	 mov	 QWORD PTR $T5[rsp], rax
  00062	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  00067	48 89 44 24 50	 mov	 QWORD PTR $T6[rsp], rax
  0006c	48 8d 54 24 48	 lea	 rdx, QWORD PTR $T5[rsp]
  00071	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T6[rsp]
  00076	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0007b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 3575 :             _Storage_max - 1 // -1 is for null terminator and/or npos
; 3576 :         );
; 3577 :     }

  0007e	48 8b f8	 mov	 rdi, rax
  00081	48 8b cc	 mov	 rcx, rsp
  00084	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcFrameData
  0008b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00090	48 8b c7	 mov	 rax, rdi
  00093	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00097	5f		 pop	 rdi
  00098	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 48
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT

; 3548 :     _NODISCARD _Ret_z_ const _Elem* c_str() const noexcept { // return pointer to null-terminated immutable array

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3549 :         return _Mypair._Myval2._Myptr();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0002b	90		 npad	 1

; 3550 :     }

  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 2860 :     basic_string& assign(_In_z_ const _Elem* const _Ptr) { // assign [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2861 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00028	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00035	4c 8b c0	 mov	 r8, rax
  00038	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2862 :     }

  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
_TEXT	SEGMENT
_Old_ptr$1 = 32
$T2 = 40
$T3 = 41
this$ = 64
_Ptr$ = 72
_Count$ = 80
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 2841 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2842 :         // assign [_Ptr, _Ptr + _Count)
; 2843 :         if (_Count <= _Mypair._Myval2._Myres) {

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00031	48 39 44 24 50	 cmp	 QWORD PTR _Count$[rsp], rax
  00036	77 5d		 ja	 SHORT $LN2@assign

; 2844 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  00038	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b c8	 mov	 rcx, rax
  00040	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00045	48 89 44 24 20	 mov	 QWORD PTR _Old_ptr$1[rsp], rax

; 2845 :             _Mypair._Myval2._Mysize = _Count;

  0004a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0004f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Count$[rsp]
  00054	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2846 :             _Traits::move(_Old_ptr, _Ptr, _Count);

  00058	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Count$[rsp]
  0005d	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00062	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  00067	e8 00 00 00 00	 call	 ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move

; 2847 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0006c	c6 44 24 28 00	 mov	 BYTE PTR $T2[rsp], 0
  00071	48 8b 44 24 50	 mov	 rax, QWORD PTR _Count$[rsp]
  00076	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  0007b	48 03 c8	 add	 rcx, rax
  0007e	48 8b c1	 mov	 rax, rcx
  00081	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T2[rsp]
  00086	48 8b c8	 mov	 rcx, rax
  00089	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2848 :             return *this;

  0008e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00093	eb 2b		 jmp	 SHORT $LN1@assign
$LN2@assign:

; 2849 :         }
; 2850 : 
; 2851 :         return _Reallocate_for(

  00095	48 8d 44 24 29	 lea	 rax, QWORD PTR $T3[rsp]
  0009a	48 8b f8	 mov	 rdi, rax
  0009d	33 c0		 xor	 eax, eax
  0009f	b9 01 00 00 00	 mov	 ecx, 1
  000a4	f3 aa		 rep stosb
  000a6	4c 8b 4c 24 48	 mov	 r9, QWORD PTR _Ptr$[rsp]
  000ab	44 0f b6 44 24
	29		 movzx	 r8d, BYTE PTR $T3[rsp]
  000b1	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Count$[rsp]
  000b6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000bb	e8 00 00 00 00	 call	 ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
$LN1@assign:

; 2852 :             _Count,
; 2853 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {
; 2854 :                 _Traits::copy(_New_ptr, _Ptr, _Count);
; 2855 :                 _Traits::assign(_New_ptr[_Count], _Elem());
; 2856 :             },
; 2857 :             _Ptr);
; 2858 :     }

  000c0	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000c4	5f		 pop	 rdi
  000c5	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT

; 2676 :     basic_string& operator=(_In_z_ const _Elem* const _Ptr) { // assign [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2677 :         return assign(_Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2678 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S9$ = 52
_To_delete$ = 72
this$ = 96
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2597 :     ~basic_string() noexcept { // destroy the string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 2598 :         _Tidy_deallocate();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
  00028	90		 npad	 1

; 2599 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2600 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S9$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S9$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 2601 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;

  0004c	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00051	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00054	48 89 44 24 48	 mov	 QWORD PTR _To_delete$[rsp], rax

; 2602 :         _Mypair._Myval2._Myproxy = nullptr;

  00059	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2603 :         _Delete_plain_internal(_Alproxy, _To_delete);

  00065	48 8b 54 24 48	 mov	 rdx, QWORD PTR _To_delete$[rsp]
  0006a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  0006f	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00074	90		 npad	 1

; 2604 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2605 :     }

  00075	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0007a	48 8b c8	 mov	 rcx, rax
  0007d	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  00082	90		 npad	 1
  00083	48 8b cc	 mov	 rcx, rsp
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcFrameData
  0008d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00092	90		 npad	 1
  00093	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00097	5f		 pop	 rdi
  00098	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S9$ = 52
_To_delete$ = 72
this$ = 96
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S9$ = 52
_To_delete$ = 72
this$ = 96
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
_TEXT	SEGMENT
_Right_data$ = 32
_Right_size$ = 40
_Right_ptr$ = 48
_My_data$ = 56
_Al$ = 64
_New_capacity$ = 72
_New_array$ = 88
$T4 = 104
$T5 = 112
tv131 = 120
this$ = 144
_Right$ = 152
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents, COMDAT

; 2525 :     void _Construct_lv_contents(const basic_string& _Right) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 2526 :         // assign by copying data stored in _Right
; 2527 :         // pre: this != &_Right
; 2528 :         // pre: *this owns no memory, iterators orphaned (note:
; 2529 :         // _Buf/_Ptr/_Mysize/_Myres may be garbage init)
; 2530 :         auto& _Right_data             = _Right._Mypair._Myval2;

  00029	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR _Right$[rsp]
  00031	48 89 44 24 20	 mov	 QWORD PTR _Right_data$[rsp], rax

; 2531 :         const size_type _Right_size   = _Right_data._Mysize;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _Right_data$[rsp]
  0003b	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0003f	48 89 44 24 28	 mov	 QWORD PTR _Right_size$[rsp], rax

; 2532 :         const _Elem* const _Right_ptr = _Right_data._Myptr();

  00044	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Right_data$[rsp]
  00049	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0004e	48 89 44 24 30	 mov	 QWORD PTR _Right_ptr$[rsp], rax

; 2533 :         auto& _My_data                = _Mypair._Myval2;

  00053	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0005b	48 89 44 24 38	 mov	 QWORD PTR _My_data$[rsp], rax

; 2534 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  00060	48 83 7c 24 28
	10		 cmp	 QWORD PTR _Right_size$[rsp], 16
  00066	73 3c		 jae	 SHORT $LN2@Construct_

; 2535 :             _Traits::copy(_My_data._Bx._Buf, _Right_ptr, _BUF_SIZE);

  00068	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  0006d	48 83 c0 08	 add	 rax, 8
  00071	41 b8 10 00 00
	00		 mov	 r8d, 16
  00077	48 8b 54 24 30	 mov	 rdx, QWORD PTR _Right_ptr$[rsp]
  0007c	48 8b c8	 mov	 rcx, rax
  0007f	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2536 :             _My_data._Mysize = _Right_size;

  00084	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  00089	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Right_size$[rsp]
  0008e	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2537 :             _My_data._Myres  = _BUF_SIZE - 1;

  00092	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  00097	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 2538 :             return;

  0009f	e9 c1 00 00 00	 jmp	 $LN1@Construct_
$LN2@Construct_:

; 2539 :         }
; 2540 : 
; 2541 :         auto& _Al                     = _Getal();

  000a4	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000ac	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000b1	48 89 44 24 40	 mov	 QWORD PTR _Al$[rsp], rax

; 2542 :         const size_type _New_capacity = _Min_value(_Right_size | _ALLOC_MASK, max_size());

  000b6	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000be	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  000c3	48 89 44 24 68	 mov	 QWORD PTR $T4[rsp], rax
  000c8	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right_size$[rsp]
  000cd	48 83 c8 0f	 or	 rax, 15
  000d1	48 89 44 24 70	 mov	 QWORD PTR $T5[rsp], rax
  000d6	48 8d 54 24 68	 lea	 rdx, QWORD PTR $T4[rsp]
  000db	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T5[rsp]
  000e0	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  000e5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000e8	48 89 44 24 48	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 2543 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  000ed	48 8b 44 24 48	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  000f2	48 ff c0	 inc	 rax
  000f5	48 8b d0	 mov	 rdx, rax
  000f8	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Al$[rsp]
  000fd	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  00102	48 89 44 24 58	 mov	 QWORD PTR _New_array$[rsp], rax

; 2544 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

  00107	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  0010c	48 83 c0 08	 add	 rax, 8
  00110	48 8d 54 24 58	 lea	 rdx, QWORD PTR _New_array$[rsp]
  00115	48 8b c8	 mov	 rcx, rax
  00118	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2545 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  0011d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right_size$[rsp]
  00122	48 ff c0	 inc	 rax
  00125	48 89 44 24 78	 mov	 QWORD PTR tv131[rsp], rax
  0012a	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _New_array$[rsp]
  0012f	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00134	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv131[rsp]
  00139	4c 8b c1	 mov	 r8, rcx
  0013c	48 8b 54 24 30	 mov	 rdx, QWORD PTR _Right_ptr$[rsp]
  00141	48 8b c8	 mov	 rcx, rax
  00144	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2546 :         _My_data._Mysize = _Right_size;

  00149	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  0014e	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Right_size$[rsp]
  00153	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2547 :         _My_data._Myres  = _New_capacity;

  00157	48 8b 44 24 38	 mov	 rax, QWORD PTR _My_data$[rsp]
  0015c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  00161	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx
$LN1@Construct_:

; 2548 :     }

  00165	48 8b cc	 mov	 rcx, rsp
  00168	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcFrameData
  0016f	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00174	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0017b	5f		 pop	 rdi
  0017c	c3		 ret	 0
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
__formal$ = 64
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents, COMDAT

; 2484 :     void _Take_contents(basic_string& _Right, true_type) noexcept {

$LN5:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2485 :         // assign by stealing _Right's buffer, memcpy optimization
; 2486 :         // pre: this != &_Right
; 2487 :         // pre: allocator propagation (POCMA) from _Right, if necessary, is complete
; 2488 :         // pre: *this owns no memory, iterators orphaned (note:
; 2489 :         // _Buf/_Ptr/_Mysize/_Myres may be garbage init)
; 2490 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2491 :         if (_Right._Mypair._Myval2._Large_string_engaged()) {

  00028	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00035	90		 npad	 1
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	74 12		 je	 SHORT $LN2@Take_conte

; 2492 :             // take ownership of _Right's iterators along with its buffer
; 2493 :             _Swap_proxy_and_iterators(_Right);

  0003d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00042	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00047	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
  0004c	90		 npad	 1

; 2494 :         } else {

  0004d	eb 0e		 jmp	 SHORT $LN3@Take_conte
$LN2@Take_conte:

; 2495 :             _Right._Mypair._Myval2._Orphan_all();

  0004f	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1
$LN3@Take_conte:

; 2496 :         }
; 2497 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2498 : 
; 2499 :         _Memcpy_val_from(_Right);

  0005d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00062	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00067	e8 00 00 00 00	 call	 ?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
  0006c	90		 npad	 1

; 2500 :         _Right._Tidy_init();

  0006d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00072	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
  00077	90		 npad	 1

; 2501 :     }

  00078	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007c	5f		 pop	 rdi
  0007d	c3		 ret	 0
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
_TEXT	SEGMENT
_My_data_mem$ = 32
_Right_data_mem$ = 40
this$ = 64
_Right$ = 72
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from, COMDAT

; 2475 :     void _Memcpy_val_from(const basic_string& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2476 :         _STL_INTERNAL_CHECK(_Can_memcpy_val); // TRANSITION, if constexpr
; 2477 :         const auto _My_data_mem =

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
  00030	90		 npad	 1
  00031	48 83 c0 08	 add	 rax, 8
  00035	48 89 44 24 20	 mov	 QWORD PTR _My_data_mem$[rsp], rax

; 2478 :             reinterpret_cast<unsigned char*>(_STD addressof(_Mypair._Myval2)) + _Memcpy_val_offset;
; 2479 :         const auto _Right_data_mem =

  0003a	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
  00047	90		 npad	 1
  00048	48 83 c0 08	 add	 rax, 8
  0004c	48 89 44 24 28	 mov	 QWORD PTR _Right_data_mem$[rsp], rax

; 2480 :             reinterpret_cast<const unsigned char*>(_STD addressof(_Right._Mypair._Myval2)) + _Memcpy_val_offset;
; 2481 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00051	41 b8 20 00 00
	00		 mov	 r8d, 32			; 00000020H
  00057	48 8b 54 24 28	 mov	 rdx, QWORD PTR _Right_data_mem$[rsp]
  0005c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data_mem$[rsp]
  00061	e8 00 00 00 00	 call	 memcpy
  00066	90		 npad	 1

; 2482 :     }

  00067	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Right$ = 72
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT

; 2460 :         _NOEXCEPT_COND(noexcept(_Move_assign(_Right, _Choose_pocma<_Alty>{}))) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2461 :         if (this != _STD addressof(_Right)) {

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0002d	48 39 44 24 40	 cmp	 QWORD PTR this$[rsp], rax
  00032	74 26		 je	 SHORT $LN2@operator

; 2462 :             _Move_assign(_Right, _Choose_pocma<_Alty>{});

  00034	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00039	48 8b f8	 mov	 rdi, rax
  0003c	33 c0		 xor	 eax, eax
  0003e	b9 01 00 00 00	 mov	 ecx, 1
  00043	f3 aa		 rep stosb
  00045	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR $T1[rsp]
  0004b	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00050	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00055	e8 00 00 00 00	 call	 ?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign
$LN2@operator:

; 2463 :         }
; 2464 : 
; 2465 :         return *this;

  0005a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]

; 2466 :     }

  0005f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z
_TEXT	SEGMENT
$T1 = 32
tv66 = 40
this$ = 64
_Right$ = 72
__formal$ = 80
?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign, COMDAT

; 2431 :     void _Move_assign(basic_string& _Right, _Equal_allocators) noexcept {

$LN3:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2432 :         _Tidy_deallocate();

  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate

; 2433 :         _Pocma(_Getal(), _Right._Getal());

  00032	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00037	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0003c	48 89 44 24 28	 mov	 QWORD PTR tv66[rsp], rax
  00041	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00046	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0004b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv66[rsp]
  00050	48 8b d1	 mov	 rdx, rcx
  00053	48 8b c8	 mov	 rcx, rax
  00056	e8 00 00 00 00	 call	 ??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >

; 2434 :         _Take_contents(_Right, bool_constant<_Can_memcpy_val>{});

  0005b	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00060	48 8b f8	 mov	 rdi, rax
  00063	33 c0		 xor	 eax, eax
  00065	b9 01 00 00 00	 mov	 ecx, 1
  0006a	f3 aa		 rep stosb
  0006c	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR $T1[rsp]
  00072	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00077	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0007c	e8 00 00 00 00	 call	 ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents

; 2435 :     }

  00081	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00085	5f		 pop	 rdi
  00086	c3		 ret	 0
?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2383 :     basic_string(basic_string&& _Right) noexcept : _Mypair(_One_then_variadic_args_t(), _STD move(_Right._Getal())) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0002d	90		 npad	 1
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>
  00036	90		 npad	 1
  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	4c 8b c0	 mov	 r8, rax
  0003f	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
  00049	90		 npad	 1

; 2384 :         // construct by moving _Right
; 2385 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00054	90		 npad	 1
  00055	48 8b d0	 mov	 rdx, rax
  00058	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  0005d	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00062	90		 npad	 1
  00063	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00068	48 8b d0	 mov	 rdx, rax
  0006b	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00070	90		 npad	 1

; 2386 :         _Take_contents(_Right, bool_constant<_Can_memcpy_val>{});

  00071	48 8d 44 24 22	 lea	 rax, QWORD PTR $T3[rsp]
  00076	48 8b f8	 mov	 rdi, rax
  00079	33 c0		 xor	 eax, eax
  0007b	b9 01 00 00 00	 mov	 ecx, 1
  00080	f3 aa		 rep stosb
  00082	44 0f b6 44 24
	22		 movzx	 r8d, BYTE PTR $T3[rsp]
  00088	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  0008d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00092	e8 00 00 00 00	 call	 ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
  00097	90		 npad	 1

; 2387 :     }

  00098	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0009d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a1	5f		 pop	 rdi
  000a2	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2247 :     basic_string() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t()) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
  00030	90		 npad	 1

; 2248 :         // construct empty string
; 2249 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 2250 :         _Tidy_init();

  00058	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0005d	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
  00062	90		 npad	 1

; 2251 :     }

  00063	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00068	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006c	5f		 pop	 rdi
  0006d	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S12$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 117
this$ = 144
_Right$ = 152
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2230 :     basic_string(const basic_string& _Right)

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 2231 :         : _Mypair(_One_then_variadic_args_t(), _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

  00029	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Right$[rsp]
  00031	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00036	48 8b d0	 mov	 rdx, rax
  00039	48 8d 4c 24 74	 lea	 rcx, QWORD PTR $T5[rsp]
  0003e	e8 00 00 00 00	 call	 ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
  00043	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	4c 8b c0	 mov	 r8, rax
  0004e	0f b6 54 24 75	 movzx	 edx, BYTE PTR $T6[rsp]
  00053	e8 00 00 00 00	 call	 ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
  00058	90		 npad	 1

; 2232 :         // construct by copying _Right
; 2233 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00059	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00061	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00066	48 8b d0	 mov	 rdx, rax
  00069	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S12$[rsp]
  0006e	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00073	48 8d 44 24 34	 lea	 rax, QWORD PTR $S12$[rsp]
  00078	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 2234 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  0007d	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00085	4c 8b c0	 mov	 r8, rax
  00088	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  0008d	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  00092	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00097	90		 npad	 1

; 2235 :         _Construct_lv_contents(_Right);

  00098	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Right$[rsp]
  000a0	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000a8	e8 00 00 00 00	 call	 ?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents

; 2236 :         _Proxy._Release();

  000ad	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000b2	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000b7	90		 npad	 1

; 2237 :     }

  000b8	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000bd	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000c2	90		 npad	 1
  000c3	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000cb	48 8b f8	 mov	 rdi, rax
  000ce	48 8b cc	 mov	 rcx, rsp
  000d1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcFrameData
  000d8	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000dd	48 8b c7	 mov	 rax, rdi
  000e0	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  000e7	5f		 pop	 rdi
  000e8	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S12$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 117
this$ = 144
_Right$ = 152
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S12$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 117
this$ = 144
_Right$ = 152
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S12$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 117
this$ = 144
_Right$ = 152
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S12$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 117
this$ = 144
_Right$ = 152
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  0002f	90		 npad	 1
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT

; 2148 :         ~_Bxty() noexcept {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT

; 2146 :         _Bxty() {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv66 = 0
this$ = 32
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT

; 2120 :     bool _Large_string_engaged() const { // returns whether the large string mode (allocated memory) is engaged

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 2121 :         return _BUF_SIZE <= _Myres;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 20 10	 cmp	 QWORD PTR [rax+32], 16
  00028	72 09		 jb	 SHORT $LN3@Large_stri
  0002a	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv66[rsp], 1
  00031	eb 07		 jmp	 SHORT $LN4@Large_stri
$LN3@Large_stri:
  00033	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv66[rsp], 0
$LN4@Large_stri:
  0003a	0f b6 04 24	 movzx	 eax, BYTE PTR tv66[rsp]

; 2122 :     }

  0003e	48 83 c4 10	 add	 rsp, 16
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
_Result$ = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2111 :     const value_type* _Myptr() const { // determine current pointer to buffer for immutable string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2112 :         const value_type* _Result = _Bx._Buf;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax

; 2113 :         if (_Large_string_engaged()) {

  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00031	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	74 13		 je	 SHORT $LN2@Myptr

; 2114 :             _Result = _Unfancy(_Bx._Ptr);

  0003d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00046	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  0004b	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax
$LN2@Myptr:

; 2115 :         }
; 2116 : 
; 2117 :         return _Result;

  00050	48 8b 44 24 20	 mov	 rax, QWORD PTR _Result$[rsp]

; 2118 :     }

  00055	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
_Result$ = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2102 :     value_type* _Myptr() { // determine current pointer to buffer for mutable string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2103 :         value_type* _Result = _Bx._Buf;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax

; 2104 :         if (_Large_string_engaged()) {

  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00031	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	74 13		 je	 SHORT $LN2@Myptr

; 2105 :             _Result = _Unfancy(_Bx._Ptr);

  0003d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00046	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  0004b	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax
$LN2@Myptr:

; 2106 :         }
; 2107 : 
; 2108 :         return _Result;

  00050	48 8b 44 24 20	 mov	 rax, QWORD PTR _Result$[rsp]

; 2109 :     }

  00055	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT

; 2092 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
  00039	90		 npad	 1
  0003a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 c7 40 20 00
	00 00 00	 mov	 QWORD PTR [rax+32], 0
  00054	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 16
_Al$ = 24
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction, COMDAT

; 770  :     _NODISCARD static _Alloc select_on_container_copy_construction(const _Alloc& _Al) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 771  :         return _Al;

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 772  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1

; 768  :     }

  0000d	5f		 pop	 rdi
  0000e	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z PROC		; std::allocator<char>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$00@std@@YA_K_K@Z ; std::_Get_size_of_n<1>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z PROC	; std::allocator<char>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Count$[rsp]
  0002d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ENDP	; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@D@std@@QEAA@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@D@std@@QEAA@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 16
_Right$ = 24
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z PROC ; std::_Narrow_char_traits<char,int>::assign, COMDAT

; 377  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept { // assign an element

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 378  :         _Left = _Right;

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR _Left$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Right$[rsp]
  00015	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  00018	88 08		 mov	 BYTE PTR [rax], cl

; 379  :     }

  0001a	5f		 pop	 rdi
  0001b	c3		 ret	 0
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ENDP ; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC ; std::_Narrow_char_traits<char,int>::move, COMDAT

; 366  :         const size_t _Count) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 367  :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 368  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Count$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _First2$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First1$[rsp]
  00037	e8 00 00 00 00	 call	 memmove
  0003c	90		 npad	 1

; 369  :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP ; std::_Narrow_char_traits<char,int>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC ; std::_Narrow_char_traits<char,int>::copy, COMDAT

; 331  :         const size_t _Count) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 332  :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 333  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Count$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _First2$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First1$[rsp]
  00037	e8 00 00 00 00	 call	 memcpy
  0003c	90		 npad	 1

; 334  :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP ; std::_Narrow_char_traits<char,int>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
_TEXT	SEGMENT
_First$ = 48
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT

; 310  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* const _First) noexcept { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 311  :         // find length of null-terminated string
; 312  : #if _HAS_CXX17
; 313  : #if _HAS_CHAR8_T
; 314  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 315  : #if _HAS_U8_INTRINSICS
; 316  :             return __builtin_u8strlen(_First);
; 317  : #else // ^^^ use u8 intrinsics / no u8 intrinsics vvv
; 318  :             return _Char_traits<_Elem, _Int_type>::length(_First);
; 319  : #endif // _HAS_U8_INTRINSICS
; 320  :         } else
; 321  : #endif // _HAS_CHAR8_T
; 322  :         {
; 323  :             return __builtin_strlen(_First);
; 324  :         }
; 325  : #else // _HAS_CXX17
; 326  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00023	e8 00 00 00 00	 call	 strlen
  00028	90		 npad	 1

; 327  : #endif // _HAS_CXX17
; 328  :     }

  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z PROC ; std::_Narrow_char_traits<char,int>::compare, COMDAT

; 294  :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 295  :         // compare [_First1, _First1 + _Count) with [_First2, ...)
; 296  : #if _HAS_CXX17
; 297  : #if _HAS_U8_INTRINSICS
; 298  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 299  :             return __builtin_u8memcmp(_First1, _First2, _Count);
; 300  :         } else
; 301  : #endif // _HAS_U8_INTRINSICS
; 302  :         {
; 303  :             return __builtin_memcmp(_First1, _First2, _Count);
; 304  :         }
; 305  : #else // _HAS_CXX17
; 306  :         return _CSTD memcmp(_First1, _First2, _Count);

  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Count$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _First2$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First1$[rsp]
  00037	e8 00 00 00 00	 call	 memcmp
  0003c	90		 npad	 1

; 307  : #endif // _HAS_CXX17
; 308  :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z ENDP ; std::_Narrow_char_traits<char,int>::compare
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ PROC ; std::_Basic_container_proxy_ptr12::_Release, COMDAT

; 1348 :     void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1349 :         _Ptr = nullptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1350 :     }

  00012	5f		 pop	 rdi
  00013	c3		 ret	 0
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ENDP ; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Pnext$1 = 48
this$ = 80
?_Orphan_me@_Iterator_base12@std@@QEAAXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT

; 1267 :     void _Orphan_me() noexcept {

$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1268 :         if (_Myproxy) { // adopted, remove self from list

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	0f 84 db 00 00
	00		 je	 $LN10@Orphan_me

; 1269 :             _Iterator_base12** _Pnext = &_Myproxy->_Myfirstiter;

  0002d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00035	48 83 c0 08	 add	 rax, 8
  00039	48 89 44 24 30	 mov	 QWORD PTR _Pnext$1[rsp], rax
$LN2@Orphan_me:

; 1270 :             while (*_Pnext && *_Pnext != this) {

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pnext$1[rsp]
  00043	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00047	74 22		 je	 SHORT $LN6@Orphan_me
  00049	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pnext$1[rsp]
  0004e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00053	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00056	74 13		 je	 SHORT $LN6@Orphan_me

; 1271 :                 _Pnext = &(*_Pnext)->_Mynextiter;

  00058	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pnext$1[rsp]
  0005d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00060	48 83 c0 08	 add	 rax, 8
  00064	48 89 44 24 30	 mov	 QWORD PTR _Pnext$1[rsp], rax

; 1272 :             }

  00069	eb d3		 jmp	 SHORT $LN2@Orphan_me
$LN6@Orphan_me:

; 1273 : 
; 1274 :             _STL_VERIFY(*_Pnext, "ITERATOR LIST CORRUPTED!");

  0006b	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pnext$1[rsp]
  00070	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00074	74 02		 je	 SHORT $LN9@Orphan_me
  00076	eb 6d		 jmp	 SHORT $LN12@Orphan_me
$LN9@Orphan_me:
  00078	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
  0007f	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00084	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0008b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00090	45 33 c9	 xor	 r9d, r9d
  00093	41 b8 fa 04 00
	00		 mov	 r8d, 1274		; 000004faH
  00099	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000a0	b9 02 00 00 00	 mov	 ecx, 2
  000a5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000ab	90		 npad	 1
  000ac	83 f8 01	 cmp	 eax, 1
  000af	75 03		 jne	 SHORT $LN14@Orphan_me
  000b1	cc		 int	 3
  000b2	33 c0		 xor	 eax, eax
$LN14@Orphan_me:
  000b4	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000bd	41 b9 fa 04 00
	00		 mov	 r9d, 1274		; 000004faH
  000c3	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000ca	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@
  000d1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
  000d8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000de	90		 npad	 1
  000df	33 c0		 xor	 eax, eax
  000e1	85 c0		 test	 eax, eax
  000e3	75 93		 jne	 SHORT $LN9@Orphan_me
$LN12@Orphan_me:
  000e5	33 c0		 xor	 eax, eax
  000e7	85 c0		 test	 eax, eax
  000e9	75 80		 jne	 SHORT $LN6@Orphan_me

; 1275 :             *_Pnext  = _Mynextiter;

  000eb	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pnext$1[rsp]
  000f0	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000f5	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000f9	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1276 :             _Myproxy = nullptr;

  000fc	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00101	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN10@Orphan_me:

; 1277 :         }
; 1278 :     }

  00108	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0010c	5f		 pop	 rdi
  0010d	c3		 ret	 0
?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = 0
this$ = 32
?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT

; 1262 :     const _Container_base12* _Getcont() const noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1263 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 11		 je	 SHORT $LN3@Getcont
  00029	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00031	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00034	48 89 04 24	 mov	 QWORD PTR tv68[rsp], rax
  00038	eb 08		 jmp	 SHORT $LN4@Getcont
$LN3@Getcont:
  0003a	48 c7 04 24 00
	00 00 00	 mov	 QWORD PTR tv68[rsp], 0
$LN4@Getcont:
  00042	48 8b 04 24	 mov	 rax, QWORD PTR tv68[rsp]

; 1264 :     }

  00046	48 83 c4 10	 add	 rsp, 16
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
_TEXT	SEGMENT
_Parent_proxy$5 = 32
_Lock$6 = 52
_Lock$7 = 84
this$ = 128
_Parent$ = 136
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT

; 1234 :     void _Adopt(const _Container_base12* _Parent) noexcept {

$LN8:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 1c 00 00 00	 mov	 ecx, 28
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]

; 1235 :         if (_Parent) {

  00026	48 83 bc 24 88
	00 00 00 00	 cmp	 QWORD PTR _Parent$[rsp], 0
  0002f	0f 84 85 00 00
	00		 je	 $LN2@Adopt

; 1236 :             // have a parent, do adoption
; 1237 :             _Container_proxy* _Parent_proxy = _Parent->_Myproxy;

  00035	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR _Parent$[rsp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 89 44 24 20	 mov	 QWORD PTR _Parent_proxy$5[rsp], rax

; 1238 : 
; 1239 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1240 :             if (_Myproxy != _Parent_proxy) { // change parentage

  00045	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0004d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Parent_proxy$5[rsp]
  00052	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00055	74 61		 je	 SHORT $LN4@Adopt

; 1241 :                 _Lockit _Lock(_LOCK_DEBUG);

  00057	ba 03 00 00 00	 mov	 edx, 3
  0005c	48 8d 4c 24 34	 lea	 rcx, QWORD PTR _Lock$6[rsp]
  00061	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00067	90		 npad	 1

; 1242 :                 _Orphan_me();

  00068	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00070	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
  00075	90		 npad	 1

; 1243 :                 _Mynextiter                 = _Parent_proxy->_Myfirstiter;

  00076	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0007e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Parent_proxy$5[rsp]
  00083	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00087	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1244 :                 _Parent_proxy->_Myfirstiter = this;

  0008b	48 8b 44 24 20	 mov	 rax, QWORD PTR _Parent_proxy$5[rsp]
  00090	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00098	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1245 :                 _Myproxy                    = _Parent_proxy;

  0009c	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000a4	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Parent_proxy$5[rsp]
  000a9	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1246 :             }

  000ac	48 8d 4c 24 34	 lea	 rcx, QWORD PTR _Lock$6[rsp]
  000b1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000b7	90		 npad	 1
$LN4@Adopt:

; 1247 : 
; 1248 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1249 :             _Myproxy = _Parent_proxy;
; 1250 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1251 :         } else {

  000b8	eb 2b		 jmp	 SHORT $LN3@Adopt
$LN2@Adopt:

; 1252 :             // no future parent, just disown current parent
; 1253 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1254 :             _Lockit _Lock(_LOCK_DEBUG);

  000ba	ba 03 00 00 00	 mov	 edx, 3
  000bf	48 8d 4c 24 54	 lea	 rcx, QWORD PTR _Lock$7[rsp]
  000c4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  000ca	90		 npad	 1

; 1255 :             _Orphan_me();

  000cb	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000d3	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
  000d8	90		 npad	 1

; 1256 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1257 :             _Myproxy = nullptr;
; 1258 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1259 :         }

  000d9	48 8d 4c 24 54	 lea	 rcx, QWORD PTR _Lock$7[rsp]
  000de	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000e4	90		 npad	 1
$LN3@Adopt:

; 1260 :     }

  000e5	48 8b cc	 mov	 rcx, rsp
  000e8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcFrameData
  000ef	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000f4	90		 npad	 1
  000f5	48 83 c4 70	 add	 rsp, 112		; 00000070H
  000f9	5f		 pop	 rdi
  000fa	c3		 ret	 0
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Parent_proxy$5 = 32
_Lock$6 = 52
_Lock$7 = 84
this$ = 128
_Parent$ = 136
?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA PROC ; `std::_Iterator_base12::_Adopt'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 34	 lea	 rcx, QWORD PTR _Lock$6[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA ENDP ; `std::_Iterator_base12::_Adopt'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Parent_proxy$5 = 32
_Lock$6 = 52
_Lock$7 = 84
this$ = 128
_Parent$ = 136
?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA PROC ; `std::_Iterator_base12::_Adopt'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 54	 lea	 rcx, QWORD PTR _Lock$7[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA ENDP ; `std::_Iterator_base12::_Adopt'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Parent_proxy$5 = 32
_Lock$6 = 52
_Lock$7 = 84
this$ = 128
_Parent$ = 136
?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA PROC ; `std::_Iterator_base12::_Adopt'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 34	 lea	 rcx, QWORD PTR _Lock$6[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA ENDP ; `std::_Iterator_base12::_Adopt'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Parent_proxy$5 = 32
_Lock$6 = 52
_Lock$7 = 84
this$ = 128
_Parent$ = 136
?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA PROC ; `std::_Iterator_base12::_Adopt'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 54	 lea	 rcx, QWORD PTR _Lock$7[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA ENDP ; `std::_Iterator_base12::_Adopt'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1_Iterator_base12@std@@QEAA@XZ
_TEXT	SEGMENT
_Lock$ = 36
this$ = 80
??1_Iterator_base12@std@@QEAA@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT

; 1227 :     ~_Iterator_base12() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1228 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1229 :         _Lockit _Lock(_LOCK_DEBUG);

  0001e	ba 03 00 00 00	 mov	 edx, 3
  00023	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00028	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  0002e	90		 npad	 1

; 1230 :         _Orphan_me();

  0002f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00034	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
  00039	90		 npad	 1

; 1231 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1232 :     }

  0003a	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  0003f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00045	90		 npad	 1
  00046	48 8b cc	 mov	 rcx, rsp
  00049	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1_Iterator_base12@std@@QEAA@XZ$rtcFrameData
  00050	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00055	90		 npad	 1
  00056	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??1_Iterator_base12@std@@QEAA@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
this$ = 80
?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA PROC	; `std::_Iterator_base12::~_Iterator_base12'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA ENDP	; `std::_Iterator_base12::~_Iterator_base12'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
this$ = 80
?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA PROC	; `std::_Iterator_base12::~_Iterator_base12'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA ENDP	; `std::_Iterator_base12::~_Iterator_base12'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
_TEXT	SEGMENT
_Lock$4 = 36
this$ = 80
_Right$ = 88
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z PROC	; std::_Iterator_base12::operator=, COMDAT

; 1210 :     _Iterator_base12& operator=(const _Iterator_base12& _Right) noexcept {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1211 :         if (_Myproxy != _Right._Myproxy) {

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	74 4b		 je	 SHORT $LN2@operator

; 1212 :             if (_Right._Myproxy) {

  00035	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0003e	74 18		 je	 SHORT $LN3@operator

; 1213 :                 _Adopt(_Right._Myproxy->_Mycont);

  00040	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  00045	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00048	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0004b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00050	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
  00055	90		 npad	 1

; 1214 :             } else { // becoming invalid, disown current parent

  00056	eb 28		 jmp	 SHORT $LN2@operator
$LN3@operator:

; 1215 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1216 :                 _Lockit _Lock(_LOCK_DEBUG);

  00058	ba 03 00 00 00	 mov	 edx, 3
  0005d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00068	90		 npad	 1

; 1217 :                 _Orphan_me();

  00069	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0006e	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
  00073	90		 npad	 1

; 1218 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1219 :                 _Myproxy = nullptr;
; 1220 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1221 :             }

  00074	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00079	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0007f	90		 npad	 1
$LN2@operator:

; 1222 :         }
; 1223 : 
; 1224 :         return *this;

  00080	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]

; 1225 :     }

  00085	48 8b f8	 mov	 rdi, rax
  00088	48 8b cc	 mov	 rcx, rsp
  0008b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcFrameData
  00092	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00097	90		 npad	 1
  00098	48 8b c7	 mov	 rax, rdi
  0009b	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0009f	5f		 pop	 rdi
  000a0	c3		 ret	 0
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z ENDP	; std::_Iterator_base12::operator=
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
this$ = 80
_Right$ = 88
?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA PROC ; `std::_Iterator_base12::operator='::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA ENDP ; `std::_Iterator_base12::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
this$ = 80
_Right$ = 88
?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA PROC ; `std::_Iterator_base12::operator='::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA ENDP ; `std::_Iterator_base12::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QEAA@AEBU01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0_Iterator_base12@std@@QEAA@AEBU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT

; 1206 :     _Iterator_base12(const _Iterator_base12& _Right) noexcept : _Myproxy(nullptr), _Mynextiter(nullptr) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1207 :         *this = _Right;

  0003c	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00046	e8 00 00 00 00	 call	 ??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z ; std::_Iterator_base12::operator=

; 1208 :     }

  0004b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
??0_Iterator_base12@std@@QEAA@AEBU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Iterator_base12@std@@QEAA@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT

; 1204 :     _Iterator_base12() noexcept : _Myproxy(nullptr), _Mynextiter(nullptr) {} // construct orphaned iterator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	5f		 pop	 rdi
  00025	c3		 ret	 0
??0_Iterator_base12@std@@QEAA@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
_TEXT	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators, COMDAT

; 1302 : inline void _Container_base12::_Swap_proxy_and_iterators(_Container_base12& _Right) noexcept {

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1303 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1304 :     _Lockit _Lock(_LOCK_DEBUG);

  00023	ba 03 00 00 00	 mov	 edx, 3
  00028	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  0002d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00033	90		 npad	 1

; 1305 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1306 : 
; 1307 :     _Container_proxy* _Temp = _Myproxy;

  00034	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	48 89 44 24 38	 mov	 QWORD PTR _Temp$[rsp], rax

; 1308 :     _Myproxy                = _Right._Myproxy;

  00041	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00046	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0004b	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004e	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1309 :     _Right._Myproxy         = _Temp;

  00051	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  00056	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Temp$[rsp]
  0005b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1310 : 
; 1311 :     if (_Myproxy) {

  0005e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00063	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00067	74 10		 je	 SHORT $LN2@Swap_proxy

; 1312 :         _Myproxy->_Mycont = this;

  00069	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00076	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN2@Swap_proxy:

; 1313 :     }
; 1314 : 
; 1315 :     if (_Right._Myproxy) {

  00079	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  0007e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00082	74 10		 je	 SHORT $LN3@Swap_proxy

; 1316 :         _Right._Myproxy->_Mycont = &_Right;

  00084	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  00089	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008c	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00091	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN3@Swap_proxy:

; 1317 :     }
; 1318 : }

  00094	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00099	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0009f	90		 npad	 1
  000a0	48 8b cc	 mov	 rcx, rsp
  000a3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcFrameData
  000aa	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000af	90		 npad	 1
  000b0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000b4	5f		 pop	 rdi
  000b5	c3		 ret	 0
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA PROC ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA ENDP ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA PROC ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA ENDP ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1288 : inline void _Container_base12::_Orphan_all() noexcept {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1289 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1290 :     if (_Myproxy) { // proxy allocated, drain it

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 70		 je	 SHORT $LN5@Orphan_all

; 1291 :         _Lockit _Lock(_LOCK_DEBUG);

  00029	ba 03 00 00 00	 mov	 edx, 3
  0002e	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00033	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00039	90		 npad	 1

; 1292 : 
; 1293 :         for (auto _Pnext = &_Myproxy->_Myfirstiter; *_Pnext; *_Pnext = (*_Pnext)->_Mynextiter) {

  0003a	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00042	48 83 c0 08	 add	 rax, 8
  00046	48 89 44 24 38	 mov	 QWORD PTR _Pnext$5[rsp], rax
  0004b	eb 14		 jmp	 SHORT $LN4@Orphan_all
$LN2@Orphan_all:
  0004d	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00052	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00055	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$5[rsp]
  0005a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0005e	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN4@Orphan_all:
  00061	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00066	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0006a	74 11		 je	 SHORT $LN3@Orphan_all

; 1294 :             (*_Pnext)->_Myproxy = nullptr;

  0006c	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00071	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00074	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1295 :         }

  0007b	eb d0		 jmp	 SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1296 : 
; 1297 :         _Myproxy->_Myfirstiter = nullptr;

  0007d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00082	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00085	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1298 :     }

  0008d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00092	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00098	90		 npad	 1
$LN5@Orphan_all:

; 1299 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1300 : }

  00099	48 8b cc	 mov	 rcx, rsp
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData
  000a3	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a8	90		 npad	 1
  000a9	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000ad	5f		 pop	 rdi
  000ae	c3		 ret	 0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1175 :     _Container_base12() : _Myproxy(nullptr) {} // construct childless container

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 16
_Mycont_$ = 24
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1167 :     _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_), _Myfirstiter(nullptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Mycont_$[rsp]
  00015	48 89 08	 mov	 QWORD PTR [rax], rcx
  00018	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00025	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002a	5f		 pop	 rdi
  0002b	c3		 ret	 0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Convert_size@_K@std@@YA_K_K@Z
_TEXT	SEGMENT
_Len$ = 16
??$_Convert_size@_K@std@@YA_K_K@Z PROC			; std::_Convert_size<unsigned __int64>, COMDAT

; 1073 : _NODISCARD constexpr size_t _Convert_size<size_t>(const size_t _Len) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1074 :     // convert size_t to size_t, unchanged
; 1075 :     return _Len;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Len$[rsp]

; 1076 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Convert_size@_K@std@@YA_K_K@Z ENDP			; std::_Convert_size<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 48
_Ptr_container$ = 56
_Min_back_shift$ = 64
_Back_shift$ = 72
_Ptr$ = 96
_Bytes$ = 104
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 102  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 103  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 104  :     _Bytes += _Non_user_size;

  00023	48 8b 44 24 68	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  0002f	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00034	48 89 01	 mov	 QWORD PTR [rcx], rax

; 105  : 
; 106  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

  00037	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0003c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Ptr_user$[rsp], rax

; 107  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00044	b8 08 00 00 00	 mov	 eax, 8
  00049	48 6b c0 ff	 imul	 rax, rax, -1
  0004d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr_user$[rsp]
  00052	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00056	48 89 44 24 38	 mov	 QWORD PTR _Ptr_container$[rsp], rax
$LN4@Adjust_man:

; 108  : 
; 109  :     // If the following asserts, it likely means that we are performing
; 110  :     // an aligned delete on memory coming from an unaligned allocation.
; 111  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

  0005b	b8 08 00 00 00	 mov	 eax, 8
  00060	48 6b c0 fe	 imul	 rax, rax, -2
  00064	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr_user$[rsp]
  00069	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  00073	48 39 14 01	 cmp	 QWORD PTR [rcx+rax], rdx
  00077	75 02		 jne	 SHORT $LN14@Adjust_man
  00079	eb 6b		 jmp	 SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
  0007b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00082	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00087	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0008e	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00093	45 33 c9	 xor	 r9d, r9d
  00096	41 b8 6f 00 00
	00		 mov	 r8d, 111		; 0000006fH
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000a3	b9 02 00 00 00	 mov	 ecx, 2
  000a8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000ae	83 f8 01	 cmp	 eax, 1
  000b1	75 03		 jne	 SHORT $LN19@Adjust_man
  000b3	cc		 int	 3
  000b4	33 c0		 xor	 eax, eax
$LN19@Adjust_man:
  000b6	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000bf	41 b9 6f 00 00
	00		 mov	 r9d, 111		; 0000006fH
  000c5	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000cc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  000d3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  000da	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000e0	33 c0		 xor	 eax, eax
  000e2	85 c0		 test	 eax, eax
  000e4	75 95		 jne	 SHORT $LN7@Adjust_man
$LN15@Adjust_man:
  000e6	33 c0		 xor	 eax, eax
  000e8	85 c0		 test	 eax, eax
  000ea	0f 85 6b ff ff
	ff		 jne	 $LN4@Adjust_man

; 112  : 
; 113  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 114  :     // in range [_Min_back_shift, _Non_user_size]
; 115  : #ifdef _DEBUG
; 116  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

  000f0	48 c7 44 24 40
	10 00 00 00	 mov	 QWORD PTR _Min_back_shift$[rsp], 16

; 117  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 118  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 119  : #endif // _DEBUG
; 120  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  000fe	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr_container$[rsp]
  00103	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00106	48 2b c1	 sub	 rax, rcx
  00109	48 89 44 24 48	 mov	 QWORD PTR _Back_shift$[rsp], rax
$LN10@Adjust_man:

; 121  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0010e	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Back_shift$[rsp], 16
  00114	72 0a		 jb	 SHORT $LN16@Adjust_man
  00116	48 83 7c 24 48
	2f		 cmp	 QWORD PTR _Back_shift$[rsp], 47 ; 0000002fH
  0011c	77 02		 ja	 SHORT $LN16@Adjust_man
  0011e	eb 6b		 jmp	 SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
  00120	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00127	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0012c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00133	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00138	45 33 c9	 xor	 r9d, r9d
  0013b	41 b8 79 00 00
	00		 mov	 r8d, 121		; 00000079H
  00141	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00148	b9 02 00 00 00	 mov	 ecx, 2
  0014d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00153	83 f8 01	 cmp	 eax, 1
  00156	75 03		 jne	 SHORT $LN20@Adjust_man
  00158	cc		 int	 3
  00159	33 c0		 xor	 eax, eax
$LN20@Adjust_man:
  0015b	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00164	41 b9 79 00 00
	00		 mov	 r9d, 121		; 00000079H
  0016a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00171	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  00178	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  0017f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00185	33 c0		 xor	 eax, eax
  00187	85 c0		 test	 eax, eax
  00189	75 95		 jne	 SHORT $LN13@Adjust_man
$LN17@Adjust_man:
  0018b	33 c0		 xor	 eax, eax
  0018d	85 c0		 test	 eax, eax
  0018f	0f 85 79 ff ff
	ff		 jne	 $LN10@Adjust_man

; 122  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00195	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0019a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr_container$[rsp]
  0019f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 123  : }

  001a2	48 83 c4 50	 add	 rsp, 80			; 00000050H
  001a6	5f		 pop	 rdi
  001a7	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 46   :     _DECLSPEC_ALLOCATOR static void* _Allocate(const size_t _Bytes) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 47   :         return ::operator new(_Bytes);

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00023	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 48   :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 10 00 00 00	 mov	 ecx, 16
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 324  :     _THROW(bad_array_new_length{});

  00015	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0001a	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QEAA@XZ ; std::bad_array_new_length::bad_array_new_length
  0001f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
  00026	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002b	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Throw_bad_:

; 325  : }

  00030	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_array_new_length@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QEAA@AEBV01@@Z
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 138  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 137  :         : bad_alloc("bad array new length")

  0001e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002a	e8 00 00 00 00	 call	 ??0bad_alloc@std@@AEAA@QEBD@Z ; std::bad_alloc::bad_alloc
  0002f	90		 npad	 1

; 138  :     {

  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 139  :     }

  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Message$ = 56
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 127  :     {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 126  :         : exception(_Message, 1)

  00023	41 b8 01 00 00
	00		 mov	 r8d, 1
  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Message$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00033	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBDH@Z ; std::exception::exception
  00038	90		 npad	 1

; 127  :     {

  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  00045	48 89 08	 mov	 QWORD PTR [rax], rcx

; 128  :     }

  00048	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00051	5f		 pop	 rdi
  00052	c3		 ret	 0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Message$ = 56
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Message$ = 56
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 0
this$ = 32
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 91   :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 92   :         return _Data._What ? _Data._What : "Unknown exception";

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 0f		 je	 SHORT $LN3@what
  0002a	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00033	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
  00037	eb 0b		 jmp	 SHORT $LN4@what
$LN3@what:
  00039	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  00040	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
$LN4@what:
  00044	48 8b 04 24	 mov	 rax, QWORD PTR tv69[rsp]

; 93   :     }

  00048	48 83 c4 10	 add	 rsp, 16
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 86   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 87   :         __std_exception_destroy(&_Data);

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 __std_exception_destroy
  0003e	90		 npad	 1

; 88   :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 69   :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 68   :         : _Data()

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c0 08	 add	 rax, 8
  0003b	48 8b f8	 mov	 rdi, rax
  0003e	33 c0		 xor	 eax, eax
  00040	b9 10 00 00 00	 mov	 ecx, 16
  00045	f3 aa		 rep stosb

; 70   :         __std_exception_copy(&_Other._Data, &_Data);

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 83 c0 08	 add	 rax, 8
  00050	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Other$[rsp]
  00055	48 83 c1 08	 add	 rcx, 8
  00059	48 8b d0	 mov	 rdx, rax
  0005c	e8 00 00 00 00	 call	 __std_exception_copy
  00061	90		 npad	 1

; 71   :     }

  00062	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00067	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 16
_Message$ = 24
__formal$ = 32
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 63   :     {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0001c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 62   :         : _Data()

  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	48 83 c0 08	 add	 rax, 8
  00028	48 8b f8	 mov	 rdi, rax
  0002b	33 c0		 xor	 eax, eax
  0002d	b9 10 00 00 00	 mov	 ecx, 16
  00032	f3 aa		 rep stosb

; 64   :         _Data._What = _Message;

  00034	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Message$[rsp]
  0003e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 65   :     }

  00042	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 644  :     _NODISCARD static constexpr long long(max)() noexcept { // return maximum value

$LN3:
  00000	40 57		 push	 rdi

; 645  :         return LLONG_MAX;

  00002	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 646  :     }

  0000c	5f		 pop	 rdi
  0000d	c3		 ret	 0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 16
_Where$ = 24
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 168  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 169  :         (void)_Size;
; 170  :         return _Where;

  0000b	48 8b 44 24 18	 mov	 rax, QWORD PTR _Where$[rsp]

; 171  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT printf
_TEXT	SEGMENT
_Result$ = 32
_ArgList$ = 56
_Format$ = 96
printf	PROC						; COMDAT

; 954  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000f	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 955  :         int _Result;
; 956  :         va_list _ArgList;
; 957  :         __crt_va_start(_ArgList, _Format);

  0002d	48 8d 44 24 68	 lea	 rax, QWORD PTR _Format$[rsp+8]
  00032	48 89 44 24 38	 mov	 QWORD PTR _ArgList$[rsp], rax

; 958  :         _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

  00037	b9 01 00 00 00	 mov	 ecx, 1
  0003c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  00042	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _ArgList$[rsp]
  00047	45 33 c0	 xor	 r8d, r8d
  0004a	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Format$[rsp]
  0004f	48 8b c8	 mov	 rcx, rax
  00052	e8 00 00 00 00	 call	 _vfprintf_l
  00057	89 44 24 20	 mov	 DWORD PTR _Result$[rsp], eax

; 959  :         __crt_va_end(_ArgList);

  0005b	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR _ArgList$[rsp], 0

; 960  :         return _Result;

  00064	8b 44 24 20	 mov	 eax, DWORD PTR _Result$[rsp]

; 961  :     }

  00068	8b f8		 mov	 edi, eax
  0006a	48 8b cc	 mov	 rcx, rsp
  0006d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:printf$rtcFrameData
  00074	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00079	8b c7		 mov	 eax, edi
  0007b	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0007f	5f		 pop	 rdi
  00080	c3		 ret	 0
printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vfprintf_l
_TEXT	SEGMENT
_Stream$ = 64
_Format$ = 72
_Locale$ = 80
_ArgList$ = 88
_vfprintf_l PROC					; COMDAT

; 642  :     {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 643  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  0002d	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00032	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  00037	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0003c	4c 8b 4c 24 50	 mov	 r9, QWORD PTR _Locale$[rsp]
  00041	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Format$[rsp]
  00046	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Stream$[rsp]
  0004b	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0004e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___stdio_common_vfprintf

; 644  :     }

  00054	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
_vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 86   :     {

$LN3:
  00000	40 57		 push	 rdi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00002	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00009	5f		 pop	 rdi
  0000a	c3		 ret	 0
__local_stdio_printf_options ENDP
_TEXT	ENDS
END
