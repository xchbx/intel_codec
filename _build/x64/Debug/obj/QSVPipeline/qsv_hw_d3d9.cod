; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG122880 DB	'simple', 00H
	ORG $+1
$SG122881 DB	'complex', 00H
$SG122883 DB	'0', 00H
	ORG $+2
$SG122884 DB	'90', 00H
	ORG $+1
$SG122885 DB	'180', 00H
$SG122886 DB	'270', 00H
$SG122888 DB	'n', 00H
	ORG $+2
$SG122889 DB	'h', 00H
	ORG $+2
$SG122890 DB	'v', 00H
	ORG $+2
$SG122892 DB	'auto', 00H
	ORG $+3
$SG122893 DB	'simple', 00H
	ORG $+1
$SG122894 DB	'fine', 00H
	ORG $+3
$SG122896 DB	'auto', 00H
	ORG $+3
$SG122897 DB	'none', 00H
	ORG $+3
$SG122898 DB	'sse2', 00H
	ORG $+3
$SG122899 DB	'sse3', 00H
	ORG $+3
$SG122900 DB	'ssse3', 00H
	ORG $+2
$SG122901 DB	'sse41', 00H
	ORG $+2
$SG122902 DB	'avx', 00H
$SG122903 DB	'avx2', 00H
	ORG $+3
$SG123295 DB	'%s', 00H
	ORG $+1
$SG132862 DB	'%s', 00H
	ORG $+1
$SG124189 DB	'D3D9Device: Init...', 0aH, 00H
	ORG $+3
$SG124191 DB	'D3D9Device: Failed Direct3DCreate9Ex: %d.', 0aH, 00H
	ORG $+1
$SG110661 DB	'rgb', 00H
$SG124193 DB	'D3D9Device: Direct3DCreate9Ex Success.', 0aH, 00H
$SG124195 DB	'D3D9Device: Set Init() m_D3DPresentPrm.BackBuffer.', 0aH
	DB	00H
$SG110663 DB	'gbr', 00H
$SG124197 DB	'D3D9Device: Failed CreateDeviceEx: %d.', 0aH, 00H
$SG124199 DB	'D3D9Device: CreateDeviceEx Success.', 0aH, 00H
	ORG $+3
$SG124205 DB	'D3D9Device: Failed DXVA2CreateDirect3DDeviceManager9: %d'
	DB	'.', 0aH, 00H
	ORG $+1
$SG110666 DB	'y8', 00H
	ORG $+1
$SG124207 DB	'D3D9Device: DXVA2CreateDirect3DDeviceManager9 Success.', 0aH
	DB	00H
$SG124209 DB	'D3D9Device: Failed ResetDevice: %d.', 0aH, 00H
	ORG $+3
$SG124211 DB	'D3D9Device: ResetDevice Success.', 0aH, 00H
	ORG $+2
$SG110633 DB	'yuv422', 00H
	ORG $+1
$SG111611 DB	'VP8', 00H
$SG124225 DB	'D3D9Device: Set Reset() m_D3DPresentPrm.BackBuffer.', 0aH
	DB	00H
	ORG $+3
$SG124228 DB	'D3D9Device: Failed ResetEx: %d.', 0aH, 00H
	ORG $+3
$SG110635 DB	'yuv444', 00H
	ORG $+1
$SG111613 DB	'VP9', 00H
$SG124230 DB	'D3D9Device: Failed ResetDevice: %d.', 0aH, 00H
	ORG $+3
$SG124231 DB	'D3D9Device: Reset Success.', 0aH, 00H
$SG112224 DB	'fcc', 00H
$SG124235 DB	'D3D9Device: Closed.', 0aH, 00H
	ORG $+3
$SG124255 DB	'D3D9Device: CreateVideoProcessors...', 0aH, 00H
	ORG $+2
$SG124258 DB	'D3D9Device: Failed GetBackBuffer: %d.', 0aH, 00H
	ORG $+1
$SG124259 DB	'D3D9Device: GetBackBuffer Success.', 0aH, 00H
$SG112225 DB	'GBR', 00H
$SG124262 DB	'D3D9Device: Failed DXVA2CreateVideoService: %d.', 0aH, 00H
	ORG $+3
$SG110655 DB	'rgb24r', 00H
	ORG $+1
$SG112538 DB	'pal', 00H
$SG124264 DB	'D3D9Device: Failed CreateVideoProcessor: %d.', 0aH, 00H
	ORG $+2
$SG124265 DB	'D3D9Device: CreateVideoProcessor Success.', 0aH, 00H
	ORG $+1
$SG112540 DB	'mac', 00H
$SG132861 DB	'invalid argument', 00H
	ORG $+7
$SG132866 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG132863 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xmemory', 00H
$SG110629 DB	'Invalid', 00H
$SG132864 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H
	DB	'1', 00H, '0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H
$SG132865 DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+2
$SG132911 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xlocale', 00H
$SG110630 DB	'nv12', 00H
	ORG $+3
$SG110631 DB	'yv12', 00H
	ORG $+3
$SG110632 DB	'yuy2', 00H
	ORG $+3
$SG110634 DB	'nv16', 00H
	ORG $+3
$SG110636 DB	'yv12(9bit)', 00H
	ORG $+1
$SG112542 DB	'0', 00H
	ORG $+2
$SG110637 DB	'yv12(10bit)', 00H
$SG112543 DB	'1', 00H
	ORG $+2
$SG110638 DB	'yv12(12bit)', 00H
$SG112544 DB	'2', 00H
	ORG $+2
$SG110639 DB	'yv12(14bit)', 00H
$SG112545 DB	'3', 00H
	ORG $+2
$SG110640 DB	'yv12(16bit)', 00H
$SG110641 DB	'p010', 00H
	ORG $+3
$SG110656 DB	'rgb32r', 00H
	ORG $+1
$SG112546 DB	'4', 00H
	ORG $+2
$SG110642 DB	'yuv422(9bit)', 00H
	ORG $+3
$SG110643 DB	'yuv422(10bit)', 00H
	ORG $+2
$SG110644 DB	'yuv422(12bit)', 00H
	ORG $+2
$SG110645 DB	'yuv422(14bit)', 00H
	ORG $+2
$SG110646 DB	'yuv422(16bit)', 00H
	ORG $+2
$SG110647 DB	'p210', 00H
	ORG $+3
$SG110648 DB	'yuv444(9bit)', 00H
	ORG $+3
$SG110649 DB	'yuv444(10bit)', 00H
	ORG $+2
$SG110650 DB	'yuv444(12bit)', 00H
	ORG $+2
$SG110651 DB	'yuv444(14bit)', 00H
	ORG $+2
$SG110652 DB	'yuv444(16bit)', 00H
	ORG $+2
$SG110653 DB	'yuva444', 00H
$SG110654 DB	'yuva444(16bit)', 00H
	ORG $+1
$SG110657 DB	'rgb24', 00H
	ORG $+2
$SG110658 DB	'rgb32', 00H
	ORG $+2
$SG110659 DB	'bgr24', 00H
	ORG $+2
$SG110660 DB	'bgr32', 00H
	ORG $+2
$SG110662 DB	'rgba', 00H
	ORG $+3
$SG110664 DB	'gbra', 00H
	ORG $+3
$SG110665 DB	'yc48', 00H
	ORG $+3
$SG110667 DB	'yc16', 00H
	ORG $+3
$SG111599 DB	'H.264/AVC', 00H
	ORG $+2
$SG112376 DB	'bt470m', 00H
	ORG $+1
$SG112547 DB	'5', 00H
	ORG $+2
$SG111601 DB	'H.265/HEVC', 00H
	ORG $+1
$SG111603 DB	'MPEG2', 00H
	ORG $+2
$SG111605 DB	'MPEG1', 00H
	ORG $+2
$SG111607 DB	'VC-1', 00H
	ORG $+3
$SG111609 DB	'MPEG4', 00H
	ORG $+2
$SG112379 DB	'linear', 00H
	ORG $+1
$SG112551 DB	'tv', 00H
	ORG $+1
$SG111615 DB	'unknown', 00H
$SG111722 DB	'unknown', 00H
$SG112217 DB	'undef', 00H
	ORG $+2
?list_colormatrix@@3QBUCX_DESC@@B DQ FLAT:$SG112217	; list_colormatrix
	DD	02H
	ORG $+4
	DQ	FLAT:$SG112218
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG112219
	DD	01H
	ORG $+4
	DQ	FLAT:$SG112220
	DD	06H
	ORG $+4
	DQ	FLAT:$SG112221
	DD	05H
	ORG $+4
	DQ	FLAT:$SG112222
	DD	07H
	ORG $+4
	DQ	FLAT:$SG112223
	DD	08H
	ORG $+4
	DQ	FLAT:$SG112224
	DD	04H
	ORG $+4
	DQ	FLAT:$SG112225
	DD	00H
	ORG $+4
	DQ	FLAT:$SG112226
	DD	09H
	ORG $+4
	DQ	FLAT:$SG112227
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG112228
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG112229
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG112230
	DD	0eH
	ORG $+4
	DQ	FLAT:$SG112231
	DD	0fH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG112218 DB	'auto', 00H
	ORG $+3
$SG112219 DB	'bt709', 00H
	ORG $+2
$SG112220 DB	'smpte170m', 00H
	ORG $+2
$SG112380 DB	'log100', 00H
	ORG $+1
$SG112552 DB	'pc', 00H
	ORG $+1
$SG112221 DB	'bt470bg', 00H
$SG112222 DB	'smpte240m', 00H
	ORG $+2
$SG112223 DB	'YCgCo', 00H
	ORG $+2
$SG112381 DB	'log316', 00H
	ORG $+1
$SG113641 DB	'cfr', 00H
$SG112226 DB	'bt2020nc', 00H
	ORG $+3
$SG112230 DB	'ictco', 00H
	ORG $+2
$SG112525 DB	'bt470m', 00H
	ORG $+1
$SG113642 DB	'vfr', 00H
$SG112227 DB	'bt2020c', 00H
$SG112228 DB	'derived-ncl', 00H
$SG113645 DB	'swr', 00H
$SG112229 DB	'derived-cl', 00H
	ORG $+1
$SG122626 DB	'vp8', 00H
$SG112231 DB	'2100-lms', 00H
	ORG $+3
$SG112372 DB	'undef', 00H
	ORG $+6
?list_transfer@@3QBUCX_DESC@@B DQ FLAT:$SG112372	; list_transfer
	DD	02H
	ORG $+4
	DQ	FLAT:$SG112373
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG112374
	DD	01H
	ORG $+4
	DQ	FLAT:$SG112375
	DD	06H
	ORG $+4
	DQ	FLAT:$SG112376
	DD	04H
	ORG $+4
	DQ	FLAT:$SG112377
	DD	05H
	ORG $+4
	DQ	FLAT:$SG112378
	DD	07H
	ORG $+4
	DQ	FLAT:$SG112379
	DD	08H
	ORG $+4
	DQ	FLAT:$SG112380
	DD	09H
	ORG $+4
	DQ	FLAT:$SG112381
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG112382
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG112383
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG112384
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG112385
	DD	0eH
	ORG $+4
	DQ	FLAT:$SG112386
	DD	0fH
	ORG $+4
	DQ	FLAT:$SG112387
	DD	010H
	ORG $+4
	DQ	FLAT:$SG112388
	DD	011H
	ORG $+4
	DQ	FLAT:$SG112389
	DD	012H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG112373 DB	'auto', 00H
	ORG $+3
$SG112374 DB	'bt709', 00H
	ORG $+2
$SG112375 DB	'smpte170m', 00H
	ORG $+2
$SG112529 DB	'bt2020', 00H
	ORG $+1
$SG122627 DB	'raw', 00H
$SG112377 DB	'bt470bg', 00H
$SG112378 DB	'smpte240m', 00H
	ORG $+2
$SG122629 DB	'CBR', 00H
$SG112382 DB	'iec61966-2-4', 00H
	ORG $+3
$SG112383 DB	'bt1361e', 00H
$SG112384 DB	'iec61966-2-1', 00H
	ORG $+3
$SG112385 DB	'bt2020-10', 00H
	ORG $+2
$SG122630 DB	'VBR', 00H
$SG112386 DB	'bt2020-12', 00H
	ORG $+2
$SG122631 DB	'CQP', 00H
$SG112387 DB	'smpte2084', 00H
	ORG $+2
$SG122633 DB	'LA', 00H
	ORG $+1
$SG112388 DB	'smpte428', 00H
	ORG $+3
$SG112521 DB	'undef', 00H
	ORG $+2
$SG122634 DB	'LA-EXT', 00H
	ORG $+1
$SG122637 DB	'ICQ', 00H
$SG112389 DB	'arib-srd-b67', 00H
	ORG $+3
$SG112522 DB	'auto', 00H
	ORG $+3
?list_colorprim@@3QBUCX_DESC@@B DQ FLAT:$SG112521	; list_colorprim
	DD	02H
	ORG $+4
	DQ	FLAT:$SG112522
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG112523
	DD	01H
	ORG $+4
	DQ	FLAT:$SG112524
	DD	06H
	ORG $+4
	DQ	FLAT:$SG112525
	DD	04H
	ORG $+4
	DQ	FLAT:$SG112526
	DD	05H
	ORG $+4
	DQ	FLAT:$SG112527
	DD	07H
	ORG $+4
	DQ	FLAT:$SG112528
	DD	08H
	ORG $+4
	DQ	FLAT:$SG112529
	DD	09H
	ORG $+4
	DQ	FLAT:$SG112530
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG112531
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG112532
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG112533
	DD	0dH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG112523 DB	'bt709', 00H
	ORG $+2
$SG112524 DB	'smpte170m', 00H
	ORG $+2
$SG122635 DB	'LA-HRD', 00H
	ORG $+1
$SG122639 DB	'VCM', 00H
$SG112526 DB	'bt470bg', 00H
$SG112527 DB	'smpte240m', 00H
	ORG $+2
$SG112528 DB	'film', 00H
	ORG $+3
$SG112530 DB	'st428', 00H
	ORG $+2
$SG122636 DB	'LA-ICQ', 00H
	ORG $+1
$SG122664 DB	'0', 00H
	ORG $+2
$SG112531 DB	'st431-2', 00H
$SG112532 DB	'st432-1', 00H
$SG112533 DB	'ebu3213-e', 00H
	ORG $+6
?list_videoformat@@3QBUCX_DESC@@B DQ FLAT:$SG112535	; list_videoformat
	DD	05H
	ORG $+4
	DQ	FLAT:$SG112536
	DD	02H
	ORG $+4
	DQ	FLAT:$SG112537
	DD	00H
	ORG $+4
	DQ	FLAT:$SG112538
	DD	01H
	ORG $+4
	DQ	FLAT:$SG112539
	DD	03H
	ORG $+4
	DQ	FLAT:$SG112540
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG112535 DB	'undef', 00H
	ORG $+2
$SG112536 DB	'ntsc', 00H
	ORG $+3
$SG112537 DB	'component', 00H
	ORG $+2
$SG112539 DB	'secam', 00H
	ORG $+2
$SG122648 DB	'main10', 00H
	ORG $+1
$SG122665 DB	'1', 00H
	ORG $+2
$SG112549 DB	'limited', 00H
$SG112550 DB	'full', 00H
	ORG $+3
?list_empty@@3QBUCX_DESC@@B DQ 0000000000000000H	; list_empty
	DD	00H
	ORG $+4
$SG113634 DB	'trace', 00H
	ORG $+2
$SG113635 DB	'debug', 00H
	ORG $+2
$SG113636 DB	'more', 00H
	ORG $+3
$SG113637 DB	'info', 00H
	ORG $+3
$SG113638 DB	'warn', 00H
	ORG $+3
$SG113639 DB	'error', 00H
	ORG $+2
$SG113643 DB	'forcecfr', 00H
	ORG $+3
$SG113646 DB	'soxr', 00H
	ORG $+3
$SG122622 DB	'h264', 00H
	ORG $+3
$SG122623 DB	'hevc', 00H
	ORG $+3
$SG122624 DB	'mpeg2', 00H
	ORG $+2
$SG122625 DB	'vc-1', 00H
	ORG $+3
$SG122632 DB	'AVBR', 00H
	ORG $+3
$SG122638 DB	'QVBR', 00H
	ORG $+3
$SG122641 DB	'auto', 00H
	ORG $+7
?list_avc_profile@@3QBUCX_DESC@@B DQ FLAT:$SG122641	; list_avc_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG122642
	DD	042H
	ORG $+4
	DQ	FLAT:$SG122643
	DD	04dH
	ORG $+4
	DQ	FLAT:$SG122644
	DD	064H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG122642 DB	'Baseline', 00H
	ORG $+3
$SG122643 DB	'Main', 00H
	ORG $+3
$SG122644 DB	'High', 00H
	ORG $+7
?list_hevc_profile@@3QBUCX_DESC@@B DQ FLAT:$SG122646	; list_hevc_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG122647
	DD	01H
	ORG $+4
	DQ	FLAT:$SG122648
	DD	02H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG122646 DB	'auto', 00H
	ORG $+3
$SG122647 DB	'main', 00H
	ORG $+3
$SG122650 DB	'main', 00H
	ORG $+3
$SG122651 DB	'high', 00H
	ORG $+3
?list_mpeg2_profile@@3QBUCX_DESC@@B DQ FLAT:$SG122653	; list_mpeg2_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG122654
	DD	050H
	ORG $+4
	DQ	FLAT:$SG122655
	DD	040H
	ORG $+4
	DQ	FLAT:$SG122656
	DD	010H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG122653 DB	'auto', 00H
	ORG $+3
$SG122654 DB	'Simple', 00H
	ORG $+1
$SG122655 DB	'Main', 00H
	ORG $+3
$SG122656 DB	'High', 00H
	ORG $+3
?list_vc1_profile@@3QBUCX_DESC@@B DQ FLAT:$SG122658	; list_vc1_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG122659
	DD	01H
	ORG $+4
	DQ	FLAT:$SG122660
	DD	05H
	ORG $+4
	DQ	FLAT:$SG122661
	DD	0dH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG122658 DB	'auto', 00H
	ORG $+3
$SG122659 DB	'Simple', 00H
	ORG $+1
$SG122660 DB	'Main', 00H
	ORG $+3
$SG122661 DB	'Advanced', 00H
	ORG $+3
$SG122663 DB	'auto', 00H
	ORG $+7
?list_vp8_profile@@3QBUCX_DESC@@B DQ FLAT:$SG122663	; list_vp8_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG122664
	DD	01H
	ORG $+4
	DQ	FLAT:$SG122665
	DD	02H
	ORG $+4
	DQ	FLAT:$SG122666
	DD	03H
	ORG $+4
	DQ	FLAT:$SG122667
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG122666 DB	'2', 00H
	ORG $+2
$SG122667 DB	'3', 00H
	ORG $+2
$SG122669 DB	'auto', 00H
	ORG $+3
?list_vp9_profile@@3QBUCX_DESC@@B DQ FLAT:$SG122669	; list_vp9_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG122670
	DD	01H
	ORG $+4
	DQ	FLAT:$SG122671
	DD	02H
	ORG $+4
	DQ	FLAT:$SG122672
	DD	03H
	ORG $+4
	DQ	FLAT:$SG122673
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG122670 DB	'0', 00H
	ORG $+2
$SG122671 DB	'1', 00H
	ORG $+2
$SG122672 DB	'2', 00H
	ORG $+2
$SG122673 DB	'3', 00H
	ORG $+2
$SG122675 DB	'8', 00H
	ORG $+2
$SG122676 DB	'10', 00H
	ORG $+1
$SG122678 DB	'progressive', 00H
$SG122684 DB	'it', 00H
	ORG $+1
$SG122679 DB	'interlaced(tff)', 00H
$SG122680 DB	'interlaced(bff)', 00H
$SG122682 DB	'none', 00H
	ORG $+3
$SG122683 DB	'normal', 00H
	ORG $+1
$SG122685 DB	'bob', 00H
$SG122687 DB	'32', 00H
	ORG $+1
$SG122688 DB	'2332', 00H
	ORG $+3
$SG122689 DB	'repeat', 00H
	ORG $+1
$SG122690 DB	'41', 00H
	ORG $+1
$SG122692 DB	'auto', 00H
	ORG $+7
?list_avc_level@@3QBUCX_DESC@@B DQ FLAT:$SG122692	; list_avc_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG122693
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG122694
	DD	09H
	ORG $+4
	DQ	FLAT:$SG122695
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG122696
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG122697
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG122698
	DD	014H
	ORG $+4
	DQ	FLAT:$SG122699
	DD	015H
	ORG $+4
	DQ	FLAT:$SG122700
	DD	016H
	ORG $+4
	DQ	FLAT:$SG122701
	DD	01eH
	ORG $+4
	DQ	FLAT:$SG122702
	DD	01fH
	ORG $+4
	DQ	FLAT:$SG122703
	DD	020H
	ORG $+4
	DQ	FLAT:$SG122704
	DD	028H
	ORG $+4
	DQ	FLAT:$SG122705
	DD	029H
	ORG $+4
	DQ	FLAT:$SG122706
	DD	02aH
	ORG $+4
	DQ	FLAT:$SG122707
	DD	032H
	ORG $+4
	DQ	FLAT:$SG122708
	DD	033H
	ORG $+4
	DQ	FLAT:$SG122709
	DD	034H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG122693 DB	'1', 00H
	ORG $+2
$SG122694 DB	'1b', 00H
	ORG $+1
$SG122695 DB	'1.1', 00H
$SG122696 DB	'1.2', 00H
$SG122697 DB	'1.3', 00H
$SG122698 DB	'2', 00H
	ORG $+2
$SG122699 DB	'2.1', 00H
$SG122700 DB	'2.2', 00H
$SG122701 DB	'3', 00H
	ORG $+2
$SG122702 DB	'3.1', 00H
$SG122703 DB	'3.2', 00H
$SG122704 DB	'4', 00H
	ORG $+2
$SG122705 DB	'4.1', 00H
$SG122706 DB	'4.2', 00H
$SG122707 DB	'5', 00H
	ORG $+2
$SG122708 DB	'5.1', 00H
$SG122709 DB	'5.2', 00H
$SG122711 DB	'auto', 00H
	ORG $+7
?list_hevc_level@@3QBUCX_DESC@@B DQ FLAT:$SG122711	; list_hevc_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG122712
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG122713
	DD	014H
	ORG $+4
	DQ	FLAT:$SG122714
	DD	015H
	ORG $+4
	DQ	FLAT:$SG122715
	DD	01eH
	ORG $+4
	DQ	FLAT:$SG122716
	DD	01fH
	ORG $+4
	DQ	FLAT:$SG122717
	DD	028H
	ORG $+4
	DQ	FLAT:$SG122718
	DD	029H
	ORG $+4
	DQ	FLAT:$SG122719
	DD	032H
	ORG $+4
	DQ	FLAT:$SG122720
	DD	033H
	ORG $+4
	DQ	FLAT:$SG122721
	DD	034H
	ORG $+4
	DQ	FLAT:$SG122722
	DD	03cH
	ORG $+4
	DQ	FLAT:$SG122723
	DD	03dH
	ORG $+4
	DQ	FLAT:$SG122724
	DD	03eH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG122712 DB	'1', 00H
	ORG $+2
$SG122713 DB	'2', 00H
	ORG $+2
$SG122714 DB	'2.1', 00H
$SG122715 DB	'3', 00H
	ORG $+2
$SG122716 DB	'3.1', 00H
$SG122717 DB	'4', 00H
	ORG $+2
$SG122718 DB	'4.1', 00H
$SG122719 DB	'5', 00H
	ORG $+2
$SG122720 DB	'5.1', 00H
$SG122721 DB	'5.2', 00H
$SG122722 DB	'6', 00H
	ORG $+2
$SG122723 DB	'6.1', 00H
$SG122724 DB	'6.2', 00H
$SG122726 DB	'auto', 00H
	ORG $+7
?list_mpeg2_level@@3QBUCX_DESC@@B DQ FLAT:$SG122726	; list_mpeg2_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG122727
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG122728
	DD	08H
	ORG $+4
	DQ	FLAT:$SG122729
	DD	04H
	ORG $+4
	DQ	FLAT:$SG122730
	DD	06H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG122727 DB	'low', 00H
$SG122728 DB	'main', 00H
	ORG $+3
$SG122729 DB	'high', 00H
	ORG $+3
$SG122733 DB	'low', 00H
$SG122730 DB	'high1440', 00H
	ORG $+3
$SG122732 DB	'auto', 00H
	ORG $+7
?list_vc1_level@@3QBUCX_DESC@@B DQ FLAT:$SG122732	; list_vc1_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG122733
	DD	01H
	ORG $+4
	DQ	FLAT:$SG122734
	DD	03H
	ORG $+4
	DQ	FLAT:$SG122735
	DD	05H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG122734 DB	'median', 00H
	ORG $+1
$SG122735 DB	'high', 00H
	ORG $+3
$SG122737 DB	'auto', 00H
	ORG $+3
$SG122738 DB	'0', 00H
	ORG $+2
$SG122739 DB	'1', 00H
	ORG $+2
$SG122740 DB	'2', 00H
	ORG $+2
$SG122741 DB	'3', 00H
	ORG $+2
$SG122742 DB	'4', 00H
	ORG $+2
$SG122749 DB	'off', 00H
?list_vp8_level@@3QBUCX_DESC@@B DQ FLAT:$SG122744	; list_vp8_level
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG122744 DB	'auto', 00H
	ORG $+3
?list_vp9_level@@3QBUCX_DESC@@B DQ FLAT:$SG122746	; list_vp9_level
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG122746 DB	'auto', 00H
	ORG $+3
$SG122748 DB	'Auto', 00H
	ORG $+3
$SG122750 DB	'for I frames', 00H
	ORG $+3
$SG122751 DB	'for I,P frames', 00H
	ORG $+1
$SG122752 DB	'for All frames', 00H
	ORG $+1
$SG122754 DB	'auto', 00H
	ORG $+3
$SG122755 DB	'off', 00H
$SG122756 DB	'i', 00H
	ORG $+2
$SG122757 DB	'ip', 00H
	ORG $+1
$SG122758 DB	'all', 00H
$SG122759 DB	'ipb', 00H
$SG122760 DB	'ib', 00H
	ORG $+1
$SG122761 DB	'p', 00H
	ORG $+2
$SG122762 DB	'pb', 00H
	ORG $+1
$SG122763 DB	'b', 00H
	ORG $+2
$SG122765 DB	'auto', 00H
	ORG $+3
$SG122766 DB	'slow', 00H
	ORG $+3
$SG122767 DB	'medium', 00H
	ORG $+1
$SG122768 DB	'fast', 00H
	ORG $+3
$SG122771 DB	'0', 00H
	ORG $+2
$SG122770 DB	'default', 00H
$SG122772 DB	'1', 00H
	ORG $+2
$SG122773 DB	'2', 00H
	ORG $+2
$SG122774 DB	'3', 00H
	ORG $+2
$SG122775 DB	'4', 00H
	ORG $+2
$SG122777 DB	'low', 00H
$SG122778 DB	'normal', 00H
	ORG $+1
$SG122779 DB	'high', 00H
	ORG $+3
$SG122791 DB	'none', 00H
	ORG $+3
$SG122792 DB	'copy', 00H
	ORG $+3
$SG122793 DB	'aac', 00H
$SG122794 DB	'libmp3lame', 00H
	ORG $+1
$SG122799 DB	'ac3', 00H
$SG122795 DB	'libtwolame', 00H
	ORG $+1
$SG122830 DB	'tff', 00H
$SG122796 DB	'libvorbis', 00H
	ORG $+2
$SG122831 DB	'bff', 00H
$SG122797 DB	'pcm_s16le', 00H
	ORG $+2
$SG122842 DB	'higher', 00H
	ORG $+1
$SG122856 DB	'8x8', 00H
$SG122798 DB	'libopus', 00H
$SG122829 DB	'none', 00H
	ORG $+3
$SG122833 DB	' 1 - best quality', 00H
	ORG $+2
$SG122846 DB	'faster', 00H
	ORG $+1
$SG122857 DB	'4x4', 00H
$SG122834 DB	' 2 - higher', 00H
$SG122860 DB	'16', 00H
	ORG $+1
$SG122835 DB	' 3 - high quality', 00H
	ORG $+2
$SG122861 DB	'32', 00H
	ORG $+1
$SG122836 DB	' 4 - balanced', 00H
	ORG $+2
$SG122837 DB	' 5 - fast', 00H
	ORG $+2
$SG122862 DB	'64', 00H
	ORG $+1
$SG122838 DB	' 6 - faster', 00H
$SG122870 DB	'all', 00H
$SG122839 DB	' 7 - fastest', 00H
	ORG $+3
$SG122841 DB	'best', 00H
	ORG $+3
$SG122843 DB	'high', 00H
	ORG $+3
$SG122844 DB	'balanced', 00H
	ORG $+3
$SG122845 DB	'fast', 00H
	ORG $+3
$SG122852 DB	'Q-pel', 00H
	ORG $+2
$SG122869 DB	'chroma', 00H
	ORG $+1
$SG122874 DB	'box', 00H
$SG122847 DB	'fastest', 00H
$SG122849 DB	'Auto', 00H
	ORG $+3
$SG122850 DB	'full-pel', 00H
	ORG $+3
$SG122855 DB	'16x16', 00H
	ORG $+2
$SG122876 DB	'off', 00H
$SG122851 DB	'half-pel', 00H
	ORG $+3
$SG122854 DB	'Auto', 00H
	ORG $+3
$SG122859 DB	'auto', 00H
	ORG $+3
$SG122866 DB	'auto', 00H
	ORG $+3
$SG122867 DB	'none', 00H
	ORG $+3
$SG122868 DB	'luma', 00H
	ORG $+3
$SG122872 DB	'none', 00H
	ORG $+3
$SG122877 DB	'x2', 00H
	ORG $+1
$SG122873 DB	'upscale', 00H
$SG122878 DB	'x2.5', 00H
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	?_Incref@_Ref_count_base@std@@QEAAXXZ		; std::_Ref_count_base::_Incref
PUBLIC	?_Decref@_Ref_count_base@std@@QEAAXXZ		; std::_Ref_count_base::_Decref
PUBLIC	?_Decwref@_Ref_count_base@std@@QEAAXXZ		; std::_Ref_count_base::_Decwref
PUBLIC	??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
PUBLIC	??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
PUBLIC	??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
PUBLIC	??0CQSVHWDevice@@QEAA@XZ			; CQSVHWDevice::CQSVHWDevice
PUBLIC	??1CQSVHWDevice@@UEAA@XZ			; CQSVHWDevice::~CQSVHWDevice
PUBLIC	?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ ; std::_Ptr_base<RGYLog>::get
PUBLIC	??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ		; std::_Ptr_base<RGYLog>::_Ptr_base<RGYLog>
PUBLIC	?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ	; std::_Ptr_base<RGYLog>::_Decref
PUBLIC	?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z ; std::_Ptr_base<RGYLog>::_Swap
PUBLIC	??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ		; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>
PUBLIC	??0?$shared_ptr@VRGYLog@@@std@@QEAA@AEBV01@@Z	; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>
PUBLIC	??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ		; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
PUBLIC	??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z ; std::shared_ptr<RGYLog>::operator=
PUBLIC	?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z ; std::shared_ptr<RGYLog>::swap
PUBLIC	?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ	; std::shared_ptr<RGYLog>::reset
PUBLIC	??_GCQSVHWDevice@@UEAAPEAXI@Z			; CQSVHWDevice::`scalar deleting destructor'
PUBLIC	??RIUnknown_release@@QEBAXPEAUIUnknown@@@Z	; IUnknown_release::operator()
PUBLIC	??0CQSVD3D9Device@@QEAA@XZ			; CQSVD3D9Device::CQSVD3D9Device
PUBLIC	??1CQSVD3D9Device@@UEAA@XZ			; CQSVD3D9Device::~CQSVD3D9Device
PUBLIC	?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z ; CQSVD3D9Device::Init
PUBLIC	?Reset@CQSVD3D9Device@@UEAA?AW4mfxStatus@@XZ	; CQSVD3D9Device::Reset
PUBLIC	?GetHandle@CQSVD3D9Device@@UEAA?AW4mfxStatus@@W4mfxHandleType@@PEAPEAX@Z ; CQSVD3D9Device::GetHandle
PUBLIC	?Close@CQSVD3D9Device@@UEAAXXZ			; CQSVD3D9Device::Close
PUBLIC	?CreateVideoProcessors@CQSVD3D9Device@@IEAA?AW4mfxStatus@@XZ ; CQSVD3D9Device::CreateVideoProcessors
PUBLIC	??1?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirect3D9Ex,IUnknown_release>::~unique_ptr<IDirect3D9Ex,IUnknown_release>
PUBLIC	??C?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3D9Ex@@XZ ; std::unique_ptr<IDirect3D9Ex,IUnknown_release>::operator->
PUBLIC	?reset@?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3D9Ex@@@Z ; std::unique_ptr<IDirect3D9Ex,IUnknown_release>::reset
PUBLIC	?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3D9Ex@@$00@std@@QEAAAEAUIUnknown_release@@XZ ; std::_Compressed_pair<IUnknown_release,IDirect3D9Ex *,1>::_Get_first
PUBLIC	??1?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::~unique_ptr<IDirect3DDevice9Ex,IUnknown_release>
PUBLIC	??C?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDevice9Ex@@XZ ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::operator->
PUBLIC	?get@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDevice9Ex@@XZ ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::get
PUBLIC	?reset@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3DDevice9Ex@@@Z ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::reset
PUBLIC	?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDevice9Ex@@$00@std@@QEAAAEAUIUnknown_release@@XZ ; std::_Compressed_pair<IUnknown_release,IDirect3DDevice9Ex *,1>::_Get_first
PUBLIC	??1?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirect3DDeviceManager9,IUnknown_release>::~unique_ptr<IDirect3DDeviceManager9,IUnknown_release>
PUBLIC	??C?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDeviceManager9@@XZ ; std::unique_ptr<IDirect3DDeviceManager9,IUnknown_release>::operator->
PUBLIC	?get@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDeviceManager9@@XZ ; std::unique_ptr<IDirect3DDeviceManager9,IUnknown_release>::get
PUBLIC	?reset@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3DDeviceManager9@@@Z ; std::unique_ptr<IDirect3DDeviceManager9,IUnknown_release>::reset
PUBLIC	?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDeviceManager9@@$00@std@@QEAAAEAUIUnknown_release@@XZ ; std::_Compressed_pair<IUnknown_release,IDirect3DDeviceManager9 *,1>::_Get_first
PUBLIC	??1?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirectXVideoProcessorService,IUnknown_release>::~unique_ptr<IDirectXVideoProcessorService,IUnknown_release>
PUBLIC	??C?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEBAPEAUIDirectXVideoProcessorService@@XZ ; std::unique_ptr<IDirectXVideoProcessorService,IUnknown_release>::operator->
PUBLIC	?reset@?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAAXPEAUIDirectXVideoProcessorService@@@Z ; std::unique_ptr<IDirectXVideoProcessorService,IUnknown_release>::reset
PUBLIC	?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessorService@@$00@std@@QEAAAEAUIUnknown_release@@XZ ; std::_Compressed_pair<IUnknown_release,IDirectXVideoProcessorService *,1>::_Get_first
PUBLIC	??1?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirectXVideoProcessor,IUnknown_release>::~unique_ptr<IDirectXVideoProcessor,IUnknown_release>
PUBLIC	?reset@?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAAXPEAUIDirectXVideoProcessor@@@Z ; std::unique_ptr<IDirectXVideoProcessor,IUnknown_release>::reset
PUBLIC	?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessor@@$00@std@@QEAAAEAUIUnknown_release@@XZ ; std::_Compressed_pair<IUnknown_release,IDirectXVideoProcessor *,1>::_Get_first
PUBLIC	??_GCQSVD3D9Device@@UEAAPEAXI@Z			; CQSVD3D9Device::`scalar deleting destructor'
PUBLIC	??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirect3D9Ex,IUnknown_release>::unique_ptr<IDirect3D9Ex,IUnknown_release><IUnknown_release,0>
PUBLIC	??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::unique_ptr<IDirect3DDevice9Ex,IUnknown_release><IUnknown_release,0>
PUBLIC	??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirect3DDeviceManager9,IUnknown_release>::unique_ptr<IDirect3DDeviceManager9,IUnknown_release><IUnknown_release,0>
PUBLIC	??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirectXVideoProcessorService,IUnknown_release>::unique_ptr<IDirectXVideoProcessorService,IUnknown_release><IUnknown_release,0>
PUBLIC	??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirectXVideoProcessor,IUnknown_release>::unique_ptr<IDirectXVideoProcessor,IUnknown_release><IUnknown_release,0>
PUBLIC	??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
PUBLIC	??$min@I@std@@YAAEBIAEBI0@Z			; std::min<unsigned int>
PUBLIC	??$exchange@PEAUIDirectXVideoProcessor@@AEAPEAU1@@std@@YAPEAUIDirectXVideoProcessor@@AEAPEAU1@0@Z ; std::exchange<IDirectXVideoProcessor *,IDirectXVideoProcessor * &>
PUBLIC	??$exchange@PEAUIDirectXVideoProcessorService@@AEAPEAU1@@std@@YAPEAUIDirectXVideoProcessorService@@AEAPEAU1@0@Z ; std::exchange<IDirectXVideoProcessorService *,IDirectXVideoProcessorService * &>
PUBLIC	??$exchange@PEAUIDirect3DDeviceManager9@@AEAPEAU1@@std@@YAPEAUIDirect3DDeviceManager9@@AEAPEAU1@0@Z ; std::exchange<IDirect3DDeviceManager9 *,IDirect3DDeviceManager9 * &>
PUBLIC	??$exchange@PEAUIDirect3DDevice9Ex@@AEAPEAU1@@std@@YAPEAUIDirect3DDevice9Ex@@AEAPEAU1@0@Z ; std::exchange<IDirect3DDevice9Ex *,IDirect3DDevice9Ex * &>
PUBLIC	??$exchange@PEAUIDirect3D9Ex@@AEAPEAU1@@std@@YAPEAUIDirect3D9Ex@@AEAPEAU1@0@Z ; std::exchange<IDirect3D9Ex *,IDirect3D9Ex * &>
PUBLIC	??$_Copy_construct_from@VRGYLog@@@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEBV?$shared_ptr@VRGYLog@@@1@@Z ; std::_Ptr_base<RGYLog>::_Copy_construct_from<RGYLog>
PUBLIC	??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z ; std::swap<RGYLog *,void>
PUBLIC	??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z ; std::swap<std::_Ref_count_base *,void>
PUBLIC	??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3D9Ex@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<IUnknown_release,IDirect3D9Ex *,1>::_Compressed_pair<IUnknown_release,IDirect3D9Ex *,1><>
PUBLIC	??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDevice9Ex@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<IUnknown_release,IDirect3DDevice9Ex *,1>::_Compressed_pair<IUnknown_release,IDirect3DDevice9Ex *,1><>
PUBLIC	??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDeviceManager9@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<IUnknown_release,IDirect3DDeviceManager9 *,1>::_Compressed_pair<IUnknown_release,IDirect3DDeviceManager9 *,1><>
PUBLIC	??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessorService@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<IUnknown_release,IDirectXVideoProcessorService *,1>::_Compressed_pair<IUnknown_release,IDirectXVideoProcessorService *,1><>
PUBLIC	??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessor@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<IUnknown_release,IDirectXVideoProcessor *,1>::_Compressed_pair<IUnknown_release,IDirectXVideoProcessor *,1><>
PUBLIC	??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z ; std::move<RGYLog * &>
PUBLIC	??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_7CQSVHWDevice@@6B@				; CQSVHWDevice::`vftable'
PUBLIC	??_7CQSVD3D9Device@@6B@				; CQSVD3D9Device::`vftable'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_R4CQSVHWDevice@@6B@				; CQSVHWDevice::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCQSVHWDevice@@@8			; CQSVHWDevice `RTTI Type Descriptor'
PUBLIC	??_R3CQSVHWDevice@@8				; CQSVHWDevice::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CQSVHWDevice@@8				; CQSVHWDevice::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CQSVHWDevice@@8			; CQSVHWDevice::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CQSVD3D9Device@@6B@			; CQSVD3D9Device::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCQSVD3D9Device@@@8			; CQSVD3D9Device `RTTI Type Descriptor'
PUBLIC	??_R3CQSVD3D9Device@@8				; CQSVD3D9Device::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CQSVD3D9Device@@8				; CQSVD3D9Device::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CQSVD3D9Device@@8			; CQSVD3D9Device::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3f800000
EXTRN	_purecall:PROC
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	memcpy:PROC
EXTRN	memset:PROC
EXTRN	__imp_GetSystemMetrics:PROC
EXTRN	__imp_GetClientRect:PROC
EXTRN	??_ECQSVHWDevice@@UEAAPEAXI@Z:PROC		; CQSVHWDevice::`vector deleting destructor'
EXTRN	Direct3DCreate9Ex:PROC
EXTRN	DXVA2CreateDirect3DDeviceManager9:PROC
EXTRN	DXVA2CreateVideoService:PROC
EXTRN	??_ECQSVD3D9Device@@UEAAPEAXI@Z:PROC		; CQSVD3D9Device::`vector deleting destructor'
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	DXVA2_VideoProcProgressiveDevice:BYTE
EXTRN	IID_IDirectXVideoProcessorService:BYTE
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
_BSS	SEGMENT
?CspMatrixList@@3V?$array@W4CspMatrix@@$0O@@std@@B DB 038H DUP (?) ; CspMatrixList
?CspTransferList@@3V?$array@W4CspTransfer@@$0P@@std@@B DB 03cH DUP (?) ; CspTransferList
?CspColorprimList@@3V?$array@W4CspColorprim@@$0M@@std@@B DB 030H DUP (?) ; CspColorprimList
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Incref@_Ref_count_base@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?_Incref@_Ref_count_base@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decref@_Ref_count_base@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+87
	DD	imagerel $unwind$?_Decref@_Ref_count_base@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decwref@_Ref_count_base@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$?_Decwref@_Ref_count_base@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+297
	DD	imagerel $unwind$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspMatrixList@@YAXXZ DD imagerel ??__ECspMatrixList@@YAXXZ
	DD	imagerel ??__ECspMatrixList@@YAXXZ+452
	DD	imagerel $unwind$??__ECspMatrixList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+311
	DD	imagerel $unwind$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspTransferList@@YAXXZ DD imagerel ??__ECspTransferList@@YAXXZ
	DD	imagerel ??__ECspTransferList@@YAXXZ+476
	DD	imagerel $unwind$??__ECspTransferList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+263
	DD	imagerel $unwind$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspColorprimList@@YAXXZ DD imagerel ??__ECspColorprimList@@YAXXZ
	DD	imagerel ??__ECspColorprimList@@YAXXZ+398
	DD	imagerel $unwind$??__ECspColorprimList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CQSVHWDevice@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??0CQSVHWDevice@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0CQSVHWDevice@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0CQSVHWDevice@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0CQSVHWDevice@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0CQSVHWDevice@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CQSVHWDevice@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??1CQSVHWDevice@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1CQSVHWDevice@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1CQSVHWDevice@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1CQSVHWDevice@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1CQSVHWDevice@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$shared_ptr@VRGYLog@@@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??0?$shared_ptr@VRGYLog@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+104
	DD	imagerel $unwind$??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GCQSVHWDevice@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_GCQSVHWDevice@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??RIUnknown_release@@QEBAXPEAUIUnknown@@@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$??RIUnknown_release@@QEBAXPEAUIUnknown@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$??0CQSVD3D9Device@@QEAA@XZ DD imagerel $LN9
	DD	imagerel $LN9+674
	DD	imagerel $unwind$??0CQSVD3D9Device@@QEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???0CQSVD3D9Device@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0CQSVD3D9Device@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0CQSVD3D9Device@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0CQSVD3D9Device@@QEAA@XZ@4HA
$pdata$?dtor$1@?0???0CQSVD3D9Device@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0CQSVD3D9Device@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0CQSVD3D9Device@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???0CQSVD3D9Device@@QEAA@XZ@4HA
$pdata$?dtor$2@?0???0CQSVD3D9Device@@QEAA@XZ@4HA DD imagerel ?dtor$2@?0???0CQSVD3D9Device@@QEAA@XZ@4HA
	DD	imagerel ?dtor$2@?0???0CQSVD3D9Device@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$2@?0???0CQSVD3D9Device@@QEAA@XZ@4HA
$pdata$?dtor$3@?0???0CQSVD3D9Device@@QEAA@XZ@4HA DD imagerel ?dtor$3@?0???0CQSVD3D9Device@@QEAA@XZ@4HA
	DD	imagerel ?dtor$3@?0???0CQSVD3D9Device@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$3@?0???0CQSVD3D9Device@@QEAA@XZ@4HA
$pdata$?dtor$4@?0???0CQSVD3D9Device@@QEAA@XZ@4HA DD imagerel ?dtor$4@?0???0CQSVD3D9Device@@QEAA@XZ@4HA
	DD	imagerel ?dtor$4@?0???0CQSVD3D9Device@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$4@?0???0CQSVD3D9Device@@QEAA@XZ@4HA
$pdata$?dtor$5@?0???0CQSVD3D9Device@@QEAA@XZ@4HA DD imagerel ?dtor$5@?0???0CQSVD3D9Device@@QEAA@XZ@4HA
	DD	imagerel ?dtor$5@?0???0CQSVD3D9Device@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$5@?0???0CQSVD3D9Device@@QEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$??1CQSVD3D9Device@@UEAA@XZ DD imagerel $LN9
	DD	imagerel $LN9+163
	DD	imagerel $unwind$??1CQSVD3D9Device@@UEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???1CQSVD3D9Device@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1CQSVD3D9Device@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1CQSVD3D9Device@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1CQSVD3D9Device@@UEAA@XZ@4HA
$pdata$?dtor$1@?0???1CQSVD3D9Device@@UEAA@XZ@4HA DD imagerel ?dtor$1@?0???1CQSVD3D9Device@@UEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???1CQSVD3D9Device@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???1CQSVD3D9Device@@UEAA@XZ@4HA
$pdata$?dtor$2@?0???1CQSVD3D9Device@@UEAA@XZ@4HA DD imagerel ?dtor$2@?0???1CQSVD3D9Device@@UEAA@XZ@4HA
	DD	imagerel ?dtor$2@?0???1CQSVD3D9Device@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$2@?0???1CQSVD3D9Device@@UEAA@XZ@4HA
$pdata$?dtor$3@?0???1CQSVD3D9Device@@UEAA@XZ@4HA DD imagerel ?dtor$3@?0???1CQSVD3D9Device@@UEAA@XZ@4HA
	DD	imagerel ?dtor$3@?0???1CQSVD3D9Device@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$3@?0???1CQSVD3D9Device@@UEAA@XZ@4HA
$pdata$?dtor$4@?0???1CQSVD3D9Device@@UEAA@XZ@4HA DD imagerel ?dtor$4@?0???1CQSVD3D9Device@@UEAA@XZ@4HA
	DD	imagerel ?dtor$4@?0???1CQSVD3D9Device@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$4@?0???1CQSVD3D9Device@@UEAA@XZ@4HA
$pdata$?dtor$5@?0???1CQSVD3D9Device@@UEAA@XZ@4HA DD imagerel ?dtor$5@?0???1CQSVD3D9Device@@UEAA@XZ@4HA
	DD	imagerel ?dtor$5@?0???1CQSVD3D9Device@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$5@?0???1CQSVD3D9Device@@UEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z DD imagerel $LN14
	DD	imagerel $LN14+2083
	DD	imagerel $unwind$?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z@4HA DD imagerel ?dtor$0@?0??Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0??Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?Reset@CQSVD3D9Device@@UEAA?AW4mfxStatus@@XZ DD imagerel $LN7
	DD	imagerel $LN7+794
	DD	imagerel $unwind$?Reset@CQSVD3D9Device@@UEAA?AW4mfxStatus@@XZ
$pdata$?GetHandle@CQSVD3D9Device@@UEAA?AW4mfxStatus@@W4mfxHandleType@@PEAPEAX@Z DD imagerel $LN4
	DD	imagerel $LN4+94
	DD	imagerel $unwind$?GetHandle@CQSVD3D9Device@@UEAA?AW4mfxStatus@@W4mfxHandleType@@PEAPEAX@Z
$pdata$?Close@CQSVD3D9Device@@UEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+198
	DD	imagerel $unwind$?Close@CQSVD3D9Device@@UEAAXXZ
$pdata$?CreateVideoProcessors@CQSVD3D9Device@@IEAA?AW4mfxStatus@@XZ DD imagerel $LN8
	DD	imagerel $LN8+918
	DD	imagerel $unwind$?CreateVideoProcessors@CQSVD3D9Device@@IEAA?AW4mfxStatus@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$??1?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3D9Ex@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??C?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3D9Ex@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3D9Ex@@@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$?reset@?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3D9Ex@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3D9Ex@@$00@std@@QEAAAEAUIUnknown_release@@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3D9Ex@@$00@std@@QEAAAEAUIUnknown_release@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$??1?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDevice9Ex@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??C?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDevice9Ex@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDevice9Ex@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?get@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDevice9Ex@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3DDevice9Ex@@@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$?reset@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3DDevice9Ex@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDevice9Ex@@$00@std@@QEAAAEAUIUnknown_release@@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDevice9Ex@@$00@std@@QEAAAEAUIUnknown_release@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$??1?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDeviceManager9@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??C?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDeviceManager9@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDeviceManager9@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?get@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDeviceManager9@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3DDeviceManager9@@@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$?reset@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3DDeviceManager9@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDeviceManager9@@$00@std@@QEAAAEAUIUnknown_release@@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDeviceManager9@@$00@std@@QEAAAEAUIUnknown_release@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$??1?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEBAPEAUIDirectXVideoProcessorService@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??C?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEBAPEAUIDirectXVideoProcessorService@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAAXPEAUIDirectXVideoProcessorService@@@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$?reset@?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAAXPEAUIDirectXVideoProcessorService@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessorService@@$00@std@@QEAAAEAUIUnknown_release@@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessorService@@$00@std@@QEAAAEAUIUnknown_release@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$??1?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAAXPEAUIDirectXVideoProcessor@@@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$?reset@?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAAXPEAUIDirectXVideoProcessor@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessor@@$00@std@@QEAAAEAUIUnknown_release@@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessor@@$00@std@@QEAAAEAUIUnknown_release@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GCQSVD3D9Device@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_GCQSVD3D9Device@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$min@I@std@@YAAEBIAEBI0@Z DD imagerel $LN13
	DD	imagerel $LN13+210
	DD	imagerel $unwind$??$min@I@std@@YAAEBIAEBI0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAUIDirectXVideoProcessor@@AEAPEAU1@@std@@YAPEAUIDirectXVideoProcessor@@AEAPEAU1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAUIDirectXVideoProcessor@@AEAPEAU1@@std@@YAPEAUIDirectXVideoProcessor@@AEAPEAU1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAUIDirectXVideoProcessorService@@AEAPEAU1@@std@@YAPEAUIDirectXVideoProcessorService@@AEAPEAU1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAUIDirectXVideoProcessorService@@AEAPEAU1@@std@@YAPEAUIDirectXVideoProcessorService@@AEAPEAU1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAUIDirect3DDeviceManager9@@AEAPEAU1@@std@@YAPEAUIDirect3DDeviceManager9@@AEAPEAU1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAUIDirect3DDeviceManager9@@AEAPEAU1@@std@@YAPEAUIDirect3DDeviceManager9@@AEAPEAU1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAUIDirect3DDevice9Ex@@AEAPEAU1@@std@@YAPEAUIDirect3DDevice9Ex@@AEAPEAU1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAUIDirect3DDevice9Ex@@AEAPEAU1@@std@@YAPEAUIDirect3DDevice9Ex@@AEAPEAU1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAUIDirect3D9Ex@@AEAPEAU1@@std@@YAPEAUIDirect3D9Ex@@AEAPEAU1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAUIDirect3D9Ex@@AEAPEAU1@@std@@YAPEAUIDirect3D9Ex@@AEAPEAU1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_construct_from@VRGYLog@@@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEBV?$shared_ptr@VRGYLog@@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$??$_Copy_construct_from@VRGYLog@@@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEBV?$shared_ptr@VRGYLog@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3D9Ex@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3D9Ex@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDevice9Ex@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDevice9Ex@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDeviceManager9@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDeviceManager9@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessorService@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessorService@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessor@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessor@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z
pdata	ENDS
CRT$XCU	SEGMENT
?CspMatrixList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspMatrixList@@YAXXZ ; CspMatrixList$initializer$
CRT$XCU	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@CQSVD3D9Device@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CQSVD3D9Device@@8 DD imagerel ??_R0?AVCQSVD3D9Device@@@8 ; CQSVD3D9Device::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CQSVD3D9Device@@8
rdata$r	ENDS
;	COMDAT ??_R2CQSVD3D9Device@@8
rdata$r	SEGMENT
??_R2CQSVD3D9Device@@8 DD imagerel ??_R1A@?0A@EA@CQSVD3D9Device@@8 ; CQSVD3D9Device::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@CQSVHWDevice@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CQSVD3D9Device@@8
rdata$r	SEGMENT
??_R3CQSVD3D9Device@@8 DD 00H				; CQSVD3D9Device::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2CQSVD3D9Device@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCQSVD3D9Device@@@8
data$r	SEGMENT
??_R0?AVCQSVD3D9Device@@@8 DQ FLAT:??_7type_info@@6B@	; CQSVD3D9Device `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCQSVD3D9Device@@', 00H
data$r	ENDS
;	COMDAT ??_R4CQSVD3D9Device@@6B@
rdata$r	SEGMENT
??_R4CQSVD3D9Device@@6B@ DD 01H				; CQSVD3D9Device::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVCQSVD3D9Device@@@8
	DD	imagerel ??_R3CQSVD3D9Device@@8
	DD	imagerel ??_R4CQSVD3D9Device@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CQSVHWDevice@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CQSVHWDevice@@8 DD imagerel ??_R0?AVCQSVHWDevice@@@8 ; CQSVHWDevice::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CQSVHWDevice@@8
rdata$r	ENDS
;	COMDAT ??_R2CQSVHWDevice@@8
rdata$r	SEGMENT
??_R2CQSVHWDevice@@8 DD imagerel ??_R1A@?0A@EA@CQSVHWDevice@@8 ; CQSVHWDevice::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CQSVHWDevice@@8
rdata$r	SEGMENT
??_R3CQSVHWDevice@@8 DD 00H				; CQSVHWDevice::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2CQSVHWDevice@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCQSVHWDevice@@@8
data$r	SEGMENT
??_R0?AVCQSVHWDevice@@@8 DQ FLAT:??_7type_info@@6B@	; CQSVHWDevice `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCQSVHWDevice@@', 00H
data$r	ENDS
;	COMDAT ??_R4CQSVHWDevice@@6B@
rdata$r	SEGMENT
??_R4CQSVHWDevice@@6B@ DD 01H				; CQSVHWDevice::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVCQSVHWDevice@@@8
	DD	imagerel ??_R3CQSVHWDevice@@8
	DD	imagerel ??_R4CQSVHWDevice@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CQSVD3D9Device@@6B@
CONST	SEGMENT
??_7CQSVD3D9Device@@6B@ DQ FLAT:??_R4CQSVD3D9Device@@6B@ ; CQSVD3D9Device::`vftable'
	DQ	FLAT:??_ECQSVD3D9Device@@UEAAPEAXI@Z
	DQ	FLAT:?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z
	DQ	FLAT:?Reset@CQSVD3D9Device@@UEAA?AW4mfxStatus@@XZ
	DQ	FLAT:?GetHandle@CQSVD3D9Device@@UEAA?AW4mfxStatus@@W4mfxHandleType@@PEAPEAX@Z
	DQ	FLAT:?Close@CQSVD3D9Device@@UEAAXXZ
CONST	ENDS
;	COMDAT ??_7CQSVHWDevice@@6B@
CONST	SEGMENT
??_7CQSVHWDevice@@6B@ DQ FLAT:??_R4CQSVHWDevice@@6B@	; CQSVHWDevice::`vftable'
	DQ	FLAT:??_ECQSVHWDevice@@UEAAPEAXI@Z
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessor@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessorService@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDeviceManager9@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDevice9Ex@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3D9Ex@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcName$0 DB 05fH ; std::swap<std::_Ref_count_base *,void>
	DB	054H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+11
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcVarDesc DD 028H ; std::swap<std::_Ref_count_base *,void>
	DD	08H
	DQ	FLAT:??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcName$0
	ORG $+48
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcFrameData DD 01H ; std::swap<std::_Ref_count_base *,void>
	DD	00H
	DQ	FLAT:??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z$rtcName$0 DB 05fH ; std::swap<RGYLog *,void>
	DB	054H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+11
??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z$rtcVarDesc DD 028H ; std::swap<RGYLog *,void>
	DD	08H
	DQ	FLAT:??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z$rtcName$0
	ORG $+48
??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z$rtcFrameData DD 01H ; std::swap<RGYLog *,void>
	DD	00H
	DQ	FLAT:??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_construct_from@VRGYLog@@@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEBV?$shared_ptr@VRGYLog@@@1@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAUIDirect3D9Ex@@AEAPEAU1@@std@@YAPEAUIDirect3D9Ex@@AEAPEAU1@0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAUIDirect3DDevice9Ex@@AEAPEAU1@@std@@YAPEAUIDirect3DDevice9Ex@@AEAPEAU1@0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAUIDirect3DDeviceManager9@@AEAPEAU1@@std@@YAPEAUIDirect3DDeviceManager9@@AEAPEAU1@0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAUIDirectXVideoProcessorService@@AEAPEAU1@@std@@YAPEAUIDirectXVideoProcessorService@@AEAPEAU1@0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAUIDirectXVideoProcessor@@AEAPEAU1@@std@@YAPEAUIDirectXVideoProcessor@@AEAPEAU1@0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$min@I@std@@YAAEBIAEBI0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$min@I@std@@YAAEBIAEBI0@Z DB 040H
	DD	imagerel $ip2state$??$min@I@std@@YAAEBIAEBI0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$min@I@std@@YAAEBIAEBI0@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$min@I@std@@YAAEBIAEBI0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GCQSVD3D9Device@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessor@@$00@std@@QEAAAEAUIUnknown_release@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reset@?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAAXPEAUIDirectXVideoProcessor@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?reset@?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAAXPEAUIDirectXVideoProcessor@@@Z DB 040H
	DD	imagerel $ip2state$?reset@?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAAXPEAUIDirectXVideoProcessor@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAAXPEAUIDirectXVideoProcessor@@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?reset@?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAAXPEAUIDirectXVideoProcessor@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessorService@@$00@std@@QEAAAEAUIUnknown_release@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reset@?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAAXPEAUIDirectXVideoProcessorService@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?reset@?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAAXPEAUIDirectXVideoProcessorService@@@Z DB 040H
	DD	imagerel $ip2state$?reset@?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAAXPEAUIDirectXVideoProcessorService@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAAXPEAUIDirectXVideoProcessorService@@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?reset@?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAAXPEAUIDirectXVideoProcessorService@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEBAPEAUIDirectXVideoProcessorService@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDeviceManager9@@$00@std@@QEAAAEAUIUnknown_release@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reset@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3DDeviceManager9@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?reset@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3DDeviceManager9@@@Z DB 040H
	DD	imagerel $ip2state$?reset@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3DDeviceManager9@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3DDeviceManager9@@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?reset@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3DDeviceManager9@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDeviceManager9@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDeviceManager9@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDevice9Ex@@$00@std@@QEAAAEAUIUnknown_release@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reset@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3DDevice9Ex@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?reset@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3DDevice9Ex@@@Z DB 040H
	DD	imagerel $ip2state$?reset@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3DDevice9Ex@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3DDevice9Ex@@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?reset@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3DDevice9Ex@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDevice9Ex@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDevice9Ex@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3D9Ex@@$00@std@@QEAAAEAUIUnknown_release@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reset@?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3D9Ex@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?reset@?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3D9Ex@@@Z DB 040H
	DD	imagerel $ip2state$?reset@?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3D9Ex@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3D9Ex@@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?reset@?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3D9Ex@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3D9Ex@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ
xdata	ENDS
xdata	SEGMENT
$unwind$??0CQSVD3D9Device@@QEAA@XZ DD 021e11H
	DD	07006b20aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0CQSVD3D9Device@@QEAA@XZ
$cppxdata$??0CQSVD3D9Device@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0CQSVD3D9Device@@QEAA@XZ
	DD	imagerel $ip2state$??0CQSVD3D9Device@@QEAA@XZ
$stateUnwindMap$??0CQSVD3D9Device@@QEAA@XZ DB 0cH
	DB	0eH
	DD	imagerel ?dtor$0@?0???0CQSVD3D9Device@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0CQSVD3D9Device@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0CQSVD3D9Device@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???0CQSVD3D9Device@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???0CQSVD3D9Device@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???0CQSVD3D9Device@@QEAA@XZ@4HA
$ip2state$??0CQSVD3D9Device@@QEAA@XZ DB 010H
	DB	00H
	DB	00H
	DB	'R'
	DB	02H
	DB	'B'
	DB	04H
	DB	'$'
	DB	06H
	DB	'$'
	DB	08H
	DB	'$'
	DB	0aH
	DB	'$'
	DB	0cH
	DB	0c1H, 07H
	DB	00H
$cppxdata$??1CQSVD3D9Device@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1CQSVD3D9Device@@UEAA@XZ
	DD	imagerel $ip2state$??1CQSVD3D9Device@@UEAA@XZ
$ip2state$??1CQSVD3D9Device@@UEAA@XZ DB 010H
	DB	00H
	DB	00H
	DB	'Z'
	DB	0cH
	DB	016H
	DB	0aH
	DB	'$'
	DB	08H
	DB	'$'
	DB	06H
	DB	'$'
	DB	04H
	DB	'$'
	DB	02H
	DB	'$'
	DB	00H
$unwind$?dtor$0@?0???0CQSVD3D9Device@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0???0CQSVD3D9Device@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0???0CQSVD3D9Device@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0???0CQSVD3D9Device@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0???0CQSVD3D9Device@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$5@?0???0CQSVD3D9Device@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$??1CQSVD3D9Device@@UEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1CQSVD3D9Device@@UEAA@XZ
$stateUnwindMap$??1CQSVD3D9Device@@UEAA@XZ DB 0cH
	DB	0eH
	DD	imagerel ?dtor$0@?0???1CQSVD3D9Device@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???1CQSVD3D9Device@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???1CQSVD3D9Device@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???1CQSVD3D9Device@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???1CQSVD3D9Device@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???1CQSVD3D9Device@@UEAA@XZ@4HA
$cppxdata$?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z DB 08H
	DD	imagerel $stateUnwindMap$?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z
	DD	imagerel $ip2state$?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z
$unwind$?dtor$0@?0???1CQSVD3D9Device@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0???1CQSVD3D9Device@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0???1CQSVD3D9Device@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0???1CQSVD3D9Device@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0???1CQSVD3D9Device@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$5@?0???1CQSVD3D9Device@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z DD 034519H
	DD	038011cH
	DD	07015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z
	DD	01b2H
$stateUnwindMap$?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z@4HA
$ip2state$?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z DB 01aH
	DB	00H
	DB	00H
	DB	08aH
	DB	02H
	DB	'Q', 03H
	DB	00H
	DB	'2'
	DB	02H
	DB	0b5H, 0cH
	DB	00H
	DB	'2'
	DB	02H
	DB	0c5H, 04H
	DB	00H
	DB	'2'
	DB	02H
	DB	0fcH
	DB	00H
	DB	'2'
	DB	02H
	DB	'Q', 04H
	DB	00H
	DB	','
	DB	02H
	DB	0bcH
	DB	00H
	ORG $+3
$unwind$?dtor$0@?0??Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?Reset@CQSVD3D9Device@@UEAA?AW4mfxStatus@@XZ DD 043719H
	DD	021010eH
	DD	060067007H
	DD	imagerel __GSHandlerCheck
	DD	0f0H
$unwind$?GetHandle@CQSVD3D9Device@@UEAA?AW4mfxStatus@@W4mfxHandleType@@PEAPEAX@Z DD 022701H
	DD	0700f3213H
$unwind$?Close@CQSVD3D9Device@@UEAAXXZ DD 021e01H
	DD	07006520aH
$unwind$?CreateVideoProcessors@CQSVD3D9Device@@IEAA?AW4mfxStatus@@XZ DD 032401H
	DD	018010dH
	DD	07006H
xdata	ENDS
CONST	SEGMENT
	ORG $+3
??0CQSVD3D9Device@@QEAA@XZ$rtcName$0 DB 063H		; CQSVD3D9Device::CQSVD3D9Device
	DB	06fH
	DB	06cH
	DB	06fH
	DB	072H
	DB	00H
	ORG $+2
??0CQSVD3D9Device@@QEAA@XZ$rtcName$1 DB 066H		; CQSVD3D9Device::CQSVD3D9Device
	DB	06fH
	DB	072H
	DB	06dH
	DB	061H
	DB	074H
	DB	00H
	ORG $+1
??0CQSVD3D9Device@@QEAA@XZ$rtcFrameData DD 02H		; CQSVD3D9Device::CQSVD3D9Device
	DD	00H
	DQ	FLAT:??0CQSVD3D9Device@@QEAA@XZ$rtcVarDesc
?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z$rtcName$0 DB 070H ; CQSVD3D9Device::Init
	DB	044H
	DB	033H
	DB	044H
	DB	039H
	DB	00H
	ORG $+2
??0CQSVD3D9Device@@QEAA@XZ$rtcVarDesc DD 044H		; CQSVD3D9Device::CQSVD3D9Device
	DD	04H
	DQ	FLAT:??0CQSVD3D9Device@@QEAA@XZ$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:??0CQSVD3D9Device@@QEAA@XZ$rtcName$0
	ORG $+96
?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z$rtcName$1 DB 072H ; CQSVD3D9Device::Init
	DB	00H
	ORG $+2
?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z$rtcName$2 DB 070H ; CQSVD3D9Device::Init
	DB	044H
	DB	033H
	DB	044H
	DB	044H
	DB	039H
	DB	00H
	ORG $+1
?Reset@CQSVD3D9Device@@UEAA?AW4mfxStatus@@XZ$rtcName$0 DB 072H ; CQSVD3D9Device::Reset
	DB	00H
	ORG $+2
?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z$rtcName$3 DB 072H ; CQSVD3D9Device::Init
	DB	065H
	DB	073H
	DB	065H
	DB	074H
	DB	054H
	DB	06fH
	DB	06bH
	DB	065H
	DB	06eH
	DB	00H
	ORG $+5
?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z$rtcName$4 DB 070H ; CQSVD3D9Device::Init
	DB	044H
	DB	065H
	DB	076H
	DB	069H
	DB	063H
	DB	065H
	DB	04dH
	DB	061H
	DB	06eH
	DB	061H
	DB	067H
	DB	065H
	DB	072H
	DB	039H
	DB	00H
?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z$rtcVarDesc DD 0e8H ; CQSVD3D9Device::Init
	DD	08H
	DQ	FLAT:?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z$rtcName$4
	DD	0c4H
	DD	04H
	DQ	FLAT:?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z$rtcName$3
	DD	0a8H
	DD	08H
	DQ	FLAT:?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z$rtcName$2
	DD	078H
	DD	010H
	DQ	FLAT:?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z$rtcName$1
	DD	058H
	DD	08H
	DQ	FLAT:?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z$rtcName$0
	ORG $+240
?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z$rtcFrameData DD 05H ; CQSVD3D9Device::Init
	DD	00H
	DQ	FLAT:?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z$rtcVarDesc
?Reset@CQSVD3D9Device@@UEAA?AW4mfxStatus@@XZ$rtcName$1 DB 064H ; CQSVD3D9Device::Reset
	DB	033H
	DB	064H
	DB	070H
	DB	070H
	DB	00H
	ORG $+2
?Reset@CQSVD3D9Device@@UEAA?AW4mfxStatus@@XZ$rtcFrameData DD 02H ; CQSVD3D9Device::Reset
	DD	00H
	DQ	FLAT:?Reset@CQSVD3D9Device@@UEAA?AW4mfxStatus@@XZ$rtcVarDesc
?CreateVideoProcessors@CQSVD3D9Device@@IEAA?AW4mfxStatus@@XZ$rtcName$1 DB 070H ; CQSVD3D9Device::CreateVideoProcessors
	DB	044H
	DB	058H
	DB	056H
	DB	041H
	DB	056H
	DB	050H
	DB	00H
?Reset@CQSVD3D9Device@@UEAA?AW4mfxStatus@@XZ$rtcVarDesc DD 060H ; CQSVD3D9Device::Reset
	DD	040H
	DQ	FLAT:?Reset@CQSVD3D9Device@@UEAA?AW4mfxStatus@@XZ$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:?Reset@CQSVD3D9Device@@UEAA?AW4mfxStatus@@XZ$rtcName$0
	ORG $+96
?CreateVideoProcessors@CQSVD3D9Device@@IEAA?AW4mfxStatus@@XZ$rtcName$0 DB 062H ; CQSVD3D9Device::CreateVideoProcessors
	DB	061H
	DB	063H
	DB	06bH
	DB	042H
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	054H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+2
?CreateVideoProcessors@CQSVD3D9Device@@IEAA?AW4mfxStatus@@XZ$rtcVarDesc DD 058H ; CQSVD3D9Device::CreateVideoProcessors
	DD	08H
	DQ	FLAT:?CreateVideoProcessors@CQSVD3D9Device@@IEAA?AW4mfxStatus@@XZ$rtcName$1
	DD	038H
	DD	08H
	DQ	FLAT:?CreateVideoProcessors@CQSVD3D9Device@@IEAA?AW4mfxStatus@@XZ$rtcName$0
	ORG $+96
?CreateVideoProcessors@CQSVD3D9Device@@IEAA?AW4mfxStatus@@XZ$rtcFrameData DD 02H ; CQSVD3D9Device::CreateVideoProcessors
	DD	00H
	DQ	FLAT:?CreateVideoProcessors@CQSVD3D9Device@@IEAA?AW4mfxStatus@@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??RIUnknown_release@@QEBAXPEAUIUnknown@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GCQSVHWDevice@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	'p'
	DB	02H
	DB	' '
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ DB 048H
	DD	imagerel $stateUnwindMap$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ
	DD	imagerel $ip2state$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ DD 021e11H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	084H
	DB	02H
	DB	' '
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z
	DD	imagerel $ip2state$??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z DD 022311H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$shared_ptr@VRGYLog@@@std@@QEAA@AEBV01@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1CQSVHWDevice@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1CQSVHWDevice@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1CQSVHWDevice@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1CQSVHWDevice@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1CQSVHWDevice@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1CQSVHWDevice@@UEAA@XZ
	DD	imagerel $ip2state$??1CQSVHWDevice@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CQSVHWDevice@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1CQSVHWDevice@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0CQSVHWDevice@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0CQSVHWDevice@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0CQSVHWDevice@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0CQSVHWDevice@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0CQSVHWDevice@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0CQSVHWDevice@@QEAA@XZ
	DD	imagerel $ip2state$??0CQSVHWDevice@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CQSVHWDevice@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0CQSVHWDevice@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspColorprimList@@YAXXZ DD 042b19H
	DD	023010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0108H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z DD 033d19H
	DD	07016821aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspTransferList@@YAXXZ DD 042b19H
	DD	02b010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0148H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z DD 033d19H
	DD	07016a21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspMatrixList@@YAXXZ DD 042b19H
	DD	029010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0130H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z DD 033d19H
	DD	07016a21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decwref@_Ref_count_base@std@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decref@_Ref_count_base@std@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Incref@_Ref_count_base@std@@QEAAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 010601H
	DD	07006H
xdata	ENDS
CRT$XCU	SEGMENT
?CspTransferList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspTransferList@@YAXXZ ; CspTransferList$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?CspColorprimList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspColorprimList@@YAXXZ ; CspColorprimList$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z PROC ; std::move<std::_Ref_count_base * &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ENDP ; std::move<std::_Ref_count_base * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z PROC ; std::move<RGYLog * &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z ENDP ; std::move<RGYLog * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessor@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessor@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<IUnknown_release,IDirectXVideoProcessor *,1>::_Compressed_pair<IUnknown_release,IDirectXVideoProcessor *,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00016	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001b	5f		 pop	 rdi
  0001c	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessor@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<IUnknown_release,IDirectXVideoProcessor *,1>::_Compressed_pair<IUnknown_release,IDirectXVideoProcessor *,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessorService@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessorService@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<IUnknown_release,IDirectXVideoProcessorService *,1>::_Compressed_pair<IUnknown_release,IDirectXVideoProcessorService *,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00016	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001b	5f		 pop	 rdi
  0001c	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessorService@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<IUnknown_release,IDirectXVideoProcessorService *,1>::_Compressed_pair<IUnknown_release,IDirectXVideoProcessorService *,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDeviceManager9@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDeviceManager9@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<IUnknown_release,IDirect3DDeviceManager9 *,1>::_Compressed_pair<IUnknown_release,IDirect3DDeviceManager9 *,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00016	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001b	5f		 pop	 rdi
  0001c	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDeviceManager9@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<IUnknown_release,IDirect3DDeviceManager9 *,1>::_Compressed_pair<IUnknown_release,IDirect3DDeviceManager9 *,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDevice9Ex@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDevice9Ex@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<IUnknown_release,IDirect3DDevice9Ex *,1>::_Compressed_pair<IUnknown_release,IDirect3DDevice9Ex *,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00016	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001b	5f		 pop	 rdi
  0001c	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDevice9Ex@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<IUnknown_release,IDirect3DDevice9Ex *,1>::_Compressed_pair<IUnknown_release,IDirect3DDevice9Ex *,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3D9Ex@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3D9Ex@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<IUnknown_release,IDirect3D9Ex *,1>::_Compressed_pair<IUnknown_release,IDirect3D9Ex *,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00016	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001b	5f		 pop	 rdi
  0001c	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3D9Ex@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<IUnknown_release,IDirect3D9Ex *,1>::_Compressed_pair<IUnknown_release,IDirect3D9Ex *,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z
_TEXT	SEGMENT
_Tmp$ = 40
_Left$ = 80
_Right$ = 88
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z PROC ; std::swap<std::_Ref_count_base *,void>, COMDAT

; 58   :         is_nothrow_move_assignable_v<_Ty>) { // exchange values stored at _Left and _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 59   :     _Ty _Tmp = _STD move(_Left);

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
  0002d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00030	48 89 44 24 28	 mov	 QWORD PTR _Tmp$[rsp], rax

; 60   :     _Left    = _STD move(_Right);

  00035	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
  0003f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00044	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00047	48 89 01	 mov	 QWORD PTR [rcx], rax

; 61   :     _Right   = _STD move(_Tmp);

  0004a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Tmp$[rsp]
  0004f	e8 00 00 00 00	 call	 ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
  00054	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00059	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 62   : }

  0005f	48 8b cc	 mov	 rcx, rsp
  00062	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcFrameData
  00069	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0006e	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00072	5f		 pop	 rdi
  00073	c3		 ret	 0
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z ENDP ; std::swap<std::_Ref_count_base *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z
_TEXT	SEGMENT
_Tmp$ = 40
_Left$ = 80
_Right$ = 88
??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z PROC	; std::swap<RGYLog *,void>, COMDAT

; 58   :         is_nothrow_move_assignable_v<_Ty>) { // exchange values stored at _Left and _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 59   :     _Ty _Tmp = _STD move(_Left);

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z ; std::move<RGYLog * &>
  0002d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00030	48 89 44 24 28	 mov	 QWORD PTR _Tmp$[rsp], rax

; 60   :     _Left    = _STD move(_Right);

  00035	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z ; std::move<RGYLog * &>
  0003f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00044	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00047	48 89 01	 mov	 QWORD PTR [rcx], rax

; 61   :     _Right   = _STD move(_Tmp);

  0004a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Tmp$[rsp]
  0004f	e8 00 00 00 00	 call	 ??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z ; std::move<RGYLog * &>
  00054	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00059	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 62   : }

  0005f	48 8b cc	 mov	 rcx, rsp
  00062	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z$rtcFrameData
  00069	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0006e	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00072	5f		 pop	 rdi
  00073	c3		 ret	 0
??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z ENDP	; std::swap<RGYLog *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$_Copy_construct_from@VRGYLog@@@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEBV?$shared_ptr@VRGYLog@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??$_Copy_construct_from@VRGYLog@@@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEBV?$shared_ptr@VRGYLog@@@1@@Z PROC ; std::_Ptr_base<RGYLog>::_Copy_construct_from<RGYLog>, COMDAT

; 835  :     void _Copy_construct_from(const shared_ptr<_Ty2>& _Other) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 836  :         // implement shared_ptr's (converting) copy ctor
; 837  :         if (_Other._Rep) {

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Other$[rsp]
  00028	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  0002d	74 0e		 je	 SHORT $LN2@Copy_const

; 838  :             _Other._Rep->_Incref();

  0002f	48 8b 44 24 38	 mov	 rax, QWORD PTR _Other$[rsp]
  00034	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00038	e8 00 00 00 00	 call	 ?_Incref@_Ref_count_base@std@@QEAAXXZ ; std::_Ref_count_base::_Incref
$LN2@Copy_const:

; 839  :         }
; 840  : 
; 841  :         _Ptr = _Other._Ptr;

  0003d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Other$[rsp]
  00047	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 842  :         _Rep = _Other._Rep;

  0004d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00052	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Other$[rsp]
  00057	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0005b	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 843  :     }

  0005f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??$_Copy_construct_from@VRGYLog@@@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEBV?$shared_ptr@VRGYLog@@@1@@Z ENDP ; std::_Ptr_base<RGYLog>::_Copy_construct_from<RGYLog>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAUIDirect3D9Ex@@AEAPEAU1@@std@@YAPEAUIDirect3D9Ex@@AEAPEAU1@0@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAUIDirect3D9Ex@@AEAPEAU1@@std@@YAPEAUIDirect3D9Ex@@AEAPEAU1@0@Z PROC ; std::exchange<IDirect3D9Ex *,IDirect3D9Ex * &>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAUIDirect3D9Ex@@AEAPEAU1@@std@@YAPEAUIDirect3D9Ex@@AEAPEAU1@0@Z ENDP ; std::exchange<IDirect3D9Ex *,IDirect3D9Ex * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAUIDirect3DDevice9Ex@@AEAPEAU1@@std@@YAPEAUIDirect3DDevice9Ex@@AEAPEAU1@0@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAUIDirect3DDevice9Ex@@AEAPEAU1@@std@@YAPEAUIDirect3DDevice9Ex@@AEAPEAU1@0@Z PROC ; std::exchange<IDirect3DDevice9Ex *,IDirect3DDevice9Ex * &>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAUIDirect3DDevice9Ex@@AEAPEAU1@@std@@YAPEAUIDirect3DDevice9Ex@@AEAPEAU1@0@Z ENDP ; std::exchange<IDirect3DDevice9Ex *,IDirect3DDevice9Ex * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAUIDirect3DDeviceManager9@@AEAPEAU1@@std@@YAPEAUIDirect3DDeviceManager9@@AEAPEAU1@0@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAUIDirect3DDeviceManager9@@AEAPEAU1@@std@@YAPEAUIDirect3DDeviceManager9@@AEAPEAU1@0@Z PROC ; std::exchange<IDirect3DDeviceManager9 *,IDirect3DDeviceManager9 * &>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAUIDirect3DDeviceManager9@@AEAPEAU1@@std@@YAPEAUIDirect3DDeviceManager9@@AEAPEAU1@0@Z ENDP ; std::exchange<IDirect3DDeviceManager9 *,IDirect3DDeviceManager9 * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAUIDirectXVideoProcessorService@@AEAPEAU1@@std@@YAPEAUIDirectXVideoProcessorService@@AEAPEAU1@0@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAUIDirectXVideoProcessorService@@AEAPEAU1@@std@@YAPEAUIDirectXVideoProcessorService@@AEAPEAU1@0@Z PROC ; std::exchange<IDirectXVideoProcessorService *,IDirectXVideoProcessorService * &>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAUIDirectXVideoProcessorService@@AEAPEAU1@@std@@YAPEAUIDirectXVideoProcessorService@@AEAPEAU1@0@Z ENDP ; std::exchange<IDirectXVideoProcessorService *,IDirectXVideoProcessorService * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAUIDirectXVideoProcessor@@AEAPEAU1@@std@@YAPEAUIDirectXVideoProcessor@@AEAPEAU1@0@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAUIDirectXVideoProcessor@@AEAPEAU1@@std@@YAPEAUIDirectXVideoProcessor@@AEAPEAU1@0@Z PROC ; std::exchange<IDirectXVideoProcessor *,IDirectXVideoProcessor * &>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAUIDirectXVideoProcessor@@AEAPEAU1@@std@@YAPEAUIDirectXVideoProcessor@@AEAPEAU1@0@Z ENDP ; std::exchange<IDirectXVideoProcessor *,IDirectXVideoProcessor * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$min@I@std@@YAAEBIAEBI0@Z
_TEXT	SEGMENT
_Left$ = 64
_Right$ = 72
??$min@I@std@@YAAEBIAEBI0@Z PROC			; std::min<unsigned int>, COMDAT

; 4490 :     const _Ty& _Left, const _Ty& _Right) _NOEXCEPT_COND(noexcept(_Right < _Left)) { // strengthened

$LN13:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4491 :     // return smaller of _Left and _Right
; 4492 :     if (_Right < _Left) {

  00023	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Left$[rsp]
  0002d	8b 09		 mov	 ecx, DWORD PTR [rcx]
  0002f	39 08		 cmp	 DWORD PTR [rax], ecx
  00031	0f 83 90 00 00
	00		 jae	 $LN8@min
$LN4@min:

; 4493 :         _STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00037	48 8b 44 24 40	 mov	 rax, QWORD PTR _Left$[rsp]
  0003c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00041	8b 09		 mov	 ecx, DWORD PTR [rcx]
  00043	39 08		 cmp	 DWORD PTR [rax], ecx
  00045	72 02		 jb	 SHORT $LN7@min
  00047	eb 6d		 jmp	 SHORT $LN10@min
$LN7@min:
  00049	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00050	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00055	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0005c	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00061	45 33 c9	 xor	 r9d, r9d
  00064	41 b8 8d 11 00
	00		 mov	 r8d, 4493		; 0000118dH
  0006a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00071	b9 02 00 00 00	 mov	 ecx, 2
  00076	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0007c	90		 npad	 1
  0007d	83 f8 01	 cmp	 eax, 1
  00080	75 03		 jne	 SHORT $LN12@min
  00082	cc		 int	 3
  00083	33 c0		 xor	 eax, eax
$LN12@min:
  00085	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0008e	41 b9 8d 11 00
	00		 mov	 r9d, 4493		; 0000118dH
  00094	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0009b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  000a2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  000a9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000af	90		 npad	 1
  000b0	33 c0		 xor	 eax, eax
  000b2	85 c0		 test	 eax, eax
  000b4	75 93		 jne	 SHORT $LN7@min
$LN10@min:
  000b6	33 c0		 xor	 eax, eax
  000b8	85 c0		 test	 eax, eax
  000ba	0f 85 77 ff ff
	ff		 jne	 $LN4@min

; 4494 :         return _Right;

  000c0	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  000c5	eb 05		 jmp	 SHORT $LN1@min
$LN8@min:

; 4495 :     }
; 4496 : 
; 4497 :     return _Left;

  000c7	48 8b 44 24 40	 mov	 rax, QWORD PTR _Left$[rsp]
$LN1@min:

; 4498 : }

  000cc	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000d0	5f		 pop	 rdi
  000d1	c3		 ret	 0
??$min@I@std@@YAAEBIAEBI0@Z ENDP			; std::min<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ
_TEXT	SEGMENT
this$ = 48
??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ PROC ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>, COMDAT

; 1204 :     _NODISCARD _Ty2* operator->() const noexcept { // return pointer to resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1205 :         return get();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ ; std::_Ptr_base<RGYLog>::get

; 1206 :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ENDP ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ PROC ; std::unique_ptr<IDirectXVideoProcessor,IUnknown_release>::unique_ptr<IDirectXVideoProcessor,IUnknown_release><IUnknown_release,0>, COMDAT

; 1809 :     constexpr unique_ptr() noexcept : _Mypair(_Zero_then_variadic_args_t()) {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessor@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<IUnknown_release,IDirectXVideoProcessor *,1>::_Compressed_pair<IUnknown_release,IDirectXVideoProcessor *,1><>
  00030	90		 npad	 1
  00031	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ ENDP ; std::unique_ptr<IDirectXVideoProcessor,IUnknown_release>::unique_ptr<IDirectXVideoProcessor,IUnknown_release><IUnknown_release,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ PROC ; std::unique_ptr<IDirectXVideoProcessorService,IUnknown_release>::unique_ptr<IDirectXVideoProcessorService,IUnknown_release><IUnknown_release,0>, COMDAT

; 1809 :     constexpr unique_ptr() noexcept : _Mypair(_Zero_then_variadic_args_t()) {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessorService@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<IUnknown_release,IDirectXVideoProcessorService *,1>::_Compressed_pair<IUnknown_release,IDirectXVideoProcessorService *,1><>
  00030	90		 npad	 1
  00031	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ ENDP ; std::unique_ptr<IDirectXVideoProcessorService,IUnknown_release>::unique_ptr<IDirectXVideoProcessorService,IUnknown_release><IUnknown_release,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ PROC ; std::unique_ptr<IDirect3DDeviceManager9,IUnknown_release>::unique_ptr<IDirect3DDeviceManager9,IUnknown_release><IUnknown_release,0>, COMDAT

; 1809 :     constexpr unique_ptr() noexcept : _Mypair(_Zero_then_variadic_args_t()) {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDeviceManager9@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<IUnknown_release,IDirect3DDeviceManager9 *,1>::_Compressed_pair<IUnknown_release,IDirect3DDeviceManager9 *,1><>
  00030	90		 npad	 1
  00031	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ ENDP ; std::unique_ptr<IDirect3DDeviceManager9,IUnknown_release>::unique_ptr<IDirect3DDeviceManager9,IUnknown_release><IUnknown_release,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ PROC ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::unique_ptr<IDirect3DDevice9Ex,IUnknown_release><IUnknown_release,0>, COMDAT

; 1809 :     constexpr unique_ptr() noexcept : _Mypair(_Zero_then_variadic_args_t()) {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDevice9Ex@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<IUnknown_release,IDirect3DDevice9Ex *,1>::_Compressed_pair<IUnknown_release,IDirect3DDevice9Ex *,1><>
  00030	90		 npad	 1
  00031	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ ENDP ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::unique_ptr<IDirect3DDevice9Ex,IUnknown_release><IUnknown_release,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ PROC ; std::unique_ptr<IDirect3D9Ex,IUnknown_release>::unique_ptr<IDirect3D9Ex,IUnknown_release><IUnknown_release,0>, COMDAT

; 1809 :     constexpr unique_ptr() noexcept : _Mypair(_Zero_then_variadic_args_t()) {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3D9Ex@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<IUnknown_release,IDirect3D9Ex *,1>::_Compressed_pair<IUnknown_release,IDirect3D9Ex *,1><>
  00030	90		 npad	 1
  00031	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ ENDP ; std::unique_ptr<IDirect3D9Ex,IUnknown_release>::unique_ptr<IDirect3D9Ex,IUnknown_release><IUnknown_release,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCQSVD3D9Device@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GCQSVD3D9Device@@UEAAPEAXI@Z PROC			; CQSVD3D9Device::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1CQSVD3D9Device@@UEAA@XZ ; CQSVD3D9Device::~CQSVD3D9Device
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba e8 01 00 00	 mov	 edx, 488		; 000001e8H
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_GCQSVD3D9Device@@UEAAPEAXI@Z ENDP			; CQSVD3D9Device::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessor@@$00@std@@QEAAAEAUIUnknown_release@@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessor@@$00@std@@QEAAAEAUIUnknown_release@@XZ PROC ; std::_Compressed_pair<IUnknown_release,IDirectXVideoProcessor *,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessor@@$00@std@@QEAAAEAUIUnknown_release@@XZ ENDP ; std::_Compressed_pair<IUnknown_release,IDirectXVideoProcessor *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?reset@?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAAXPEAUIDirectXVideoProcessor@@@Z
_TEXT	SEGMENT
_Old$ = 32
this$ = 64
_Ptr$ = 72
?reset@?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAAXPEAUIDirectXVideoProcessor@@@Z PROC ; std::unique_ptr<IDirectXVideoProcessor,IUnknown_release>::reset, COMDAT

; 1907 :     void reset(pointer _Ptr = pointer()) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1908 :         pointer _Old = _STD exchange(_Mypair._Myval2, _Ptr);

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 54 24 48	 lea	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$exchange@PEAUIDirectXVideoProcessor@@AEAPEAU1@@std@@YAPEAUIDirectXVideoProcessor@@AEAPEAU1@0@Z ; std::exchange<IDirectXVideoProcessor *,IDirectXVideoProcessor * &>
  00035	90		 npad	 1
  00036	48 89 44 24 20	 mov	 QWORD PTR _Old$[rsp], rax

; 1909 :         if (_Old) {

  0003b	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Old$[rsp], 0
  00041	74 1c		 je	 SHORT $LN2@reset

; 1910 :             _Mypair._Get_first()(_Old);

  00043	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessor@@$00@std@@QEAAAEAUIUnknown_release@@XZ ; std::_Compressed_pair<IUnknown_release,IDirectXVideoProcessor *,1>::_Get_first
  00050	90		 npad	 1
  00051	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Old$[rsp]
  00056	48 8b c8	 mov	 rcx, rax
  00059	e8 00 00 00 00	 call	 ??RIUnknown_release@@QEBAXPEAUIUnknown@@@Z ; IUnknown_release::operator()
  0005e	90		 npad	 1
$LN2@reset:

; 1911 :         }
; 1912 :     }

  0005f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
?reset@?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAAXPEAUIDirectXVideoProcessor@@@Z ENDP ; std::unique_ptr<IDirectXVideoProcessor,IUnknown_release>::reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ PROC ; std::unique_ptr<IDirectXVideoProcessor,IUnknown_release>::~unique_ptr<IDirectXVideoProcessor,IUnknown_release>, COMDAT

; 1873 :     ~unique_ptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1874 :         if (_Mypair._Myval2) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 1f		 je	 SHORT $LN2@unique_ptr

; 1875 :             _Mypair._Get_first()(_Mypair._Myval2);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessor@@$00@std@@QEAAAEAUIUnknown_release@@XZ ; std::_Compressed_pair<IUnknown_release,IDirectXVideoProcessor *,1>::_Get_first
  00036	90		 npad	 1
  00037	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??RIUnknown_release@@QEBAXPEAUIUnknown@@@Z ; IUnknown_release::operator()
  00047	90		 npad	 1
$LN2@unique_ptr:

; 1876 :         }
; 1877 :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
??1?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ ENDP ; std::unique_ptr<IDirectXVideoProcessor,IUnknown_release>::~unique_ptr<IDirectXVideoProcessor,IUnknown_release>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessorService@@$00@std@@QEAAAEAUIUnknown_release@@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessorService@@$00@std@@QEAAAEAUIUnknown_release@@XZ PROC ; std::_Compressed_pair<IUnknown_release,IDirectXVideoProcessorService *,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessorService@@$00@std@@QEAAAEAUIUnknown_release@@XZ ENDP ; std::_Compressed_pair<IUnknown_release,IDirectXVideoProcessorService *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?reset@?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAAXPEAUIDirectXVideoProcessorService@@@Z
_TEXT	SEGMENT
_Old$ = 32
this$ = 64
_Ptr$ = 72
?reset@?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAAXPEAUIDirectXVideoProcessorService@@@Z PROC ; std::unique_ptr<IDirectXVideoProcessorService,IUnknown_release>::reset, COMDAT

; 1907 :     void reset(pointer _Ptr = pointer()) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1908 :         pointer _Old = _STD exchange(_Mypair._Myval2, _Ptr);

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 54 24 48	 lea	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$exchange@PEAUIDirectXVideoProcessorService@@AEAPEAU1@@std@@YAPEAUIDirectXVideoProcessorService@@AEAPEAU1@0@Z ; std::exchange<IDirectXVideoProcessorService *,IDirectXVideoProcessorService * &>
  00035	90		 npad	 1
  00036	48 89 44 24 20	 mov	 QWORD PTR _Old$[rsp], rax

; 1909 :         if (_Old) {

  0003b	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Old$[rsp], 0
  00041	74 1c		 je	 SHORT $LN2@reset

; 1910 :             _Mypair._Get_first()(_Old);

  00043	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessorService@@$00@std@@QEAAAEAUIUnknown_release@@XZ ; std::_Compressed_pair<IUnknown_release,IDirectXVideoProcessorService *,1>::_Get_first
  00050	90		 npad	 1
  00051	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Old$[rsp]
  00056	48 8b c8	 mov	 rcx, rax
  00059	e8 00 00 00 00	 call	 ??RIUnknown_release@@QEBAXPEAUIUnknown@@@Z ; IUnknown_release::operator()
  0005e	90		 npad	 1
$LN2@reset:

; 1911 :         }
; 1912 :     }

  0005f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
?reset@?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAAXPEAUIDirectXVideoProcessorService@@@Z ENDP ; std::unique_ptr<IDirectXVideoProcessorService,IUnknown_release>::reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??C?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEBAPEAUIDirectXVideoProcessorService@@XZ
_TEXT	SEGMENT
this$ = 16
??C?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEBAPEAUIDirectXVideoProcessorService@@XZ PROC ; std::unique_ptr<IDirectXVideoProcessorService,IUnknown_release>::operator->, COMDAT

; 1891 :     _NODISCARD pointer operator->() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1892 :         return _Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1893 :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
??C?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEBAPEAUIDirectXVideoProcessorService@@XZ ENDP ; std::unique_ptr<IDirectXVideoProcessorService,IUnknown_release>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ PROC ; std::unique_ptr<IDirectXVideoProcessorService,IUnknown_release>::~unique_ptr<IDirectXVideoProcessorService,IUnknown_release>, COMDAT

; 1873 :     ~unique_ptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1874 :         if (_Mypair._Myval2) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 1f		 je	 SHORT $LN2@unique_ptr

; 1875 :             _Mypair._Get_first()(_Mypair._Myval2);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirectXVideoProcessorService@@$00@std@@QEAAAEAUIUnknown_release@@XZ ; std::_Compressed_pair<IUnknown_release,IDirectXVideoProcessorService *,1>::_Get_first
  00036	90		 npad	 1
  00037	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??RIUnknown_release@@QEBAXPEAUIUnknown@@@Z ; IUnknown_release::operator()
  00047	90		 npad	 1
$LN2@unique_ptr:

; 1876 :         }
; 1877 :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
??1?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ ENDP ; std::unique_ptr<IDirectXVideoProcessorService,IUnknown_release>::~unique_ptr<IDirectXVideoProcessorService,IUnknown_release>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDeviceManager9@@$00@std@@QEAAAEAUIUnknown_release@@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDeviceManager9@@$00@std@@QEAAAEAUIUnknown_release@@XZ PROC ; std::_Compressed_pair<IUnknown_release,IDirect3DDeviceManager9 *,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDeviceManager9@@$00@std@@QEAAAEAUIUnknown_release@@XZ ENDP ; std::_Compressed_pair<IUnknown_release,IDirect3DDeviceManager9 *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?reset@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3DDeviceManager9@@@Z
_TEXT	SEGMENT
_Old$ = 32
this$ = 64
_Ptr$ = 72
?reset@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3DDeviceManager9@@@Z PROC ; std::unique_ptr<IDirect3DDeviceManager9,IUnknown_release>::reset, COMDAT

; 1907 :     void reset(pointer _Ptr = pointer()) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1908 :         pointer _Old = _STD exchange(_Mypair._Myval2, _Ptr);

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 54 24 48	 lea	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$exchange@PEAUIDirect3DDeviceManager9@@AEAPEAU1@@std@@YAPEAUIDirect3DDeviceManager9@@AEAPEAU1@0@Z ; std::exchange<IDirect3DDeviceManager9 *,IDirect3DDeviceManager9 * &>
  00035	90		 npad	 1
  00036	48 89 44 24 20	 mov	 QWORD PTR _Old$[rsp], rax

; 1909 :         if (_Old) {

  0003b	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Old$[rsp], 0
  00041	74 1c		 je	 SHORT $LN2@reset

; 1910 :             _Mypair._Get_first()(_Old);

  00043	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDeviceManager9@@$00@std@@QEAAAEAUIUnknown_release@@XZ ; std::_Compressed_pair<IUnknown_release,IDirect3DDeviceManager9 *,1>::_Get_first
  00050	90		 npad	 1
  00051	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Old$[rsp]
  00056	48 8b c8	 mov	 rcx, rax
  00059	e8 00 00 00 00	 call	 ??RIUnknown_release@@QEBAXPEAUIUnknown@@@Z ; IUnknown_release::operator()
  0005e	90		 npad	 1
$LN2@reset:

; 1911 :         }
; 1912 :     }

  0005f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
?reset@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3DDeviceManager9@@@Z ENDP ; std::unique_ptr<IDirect3DDeviceManager9,IUnknown_release>::reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDeviceManager9@@XZ
_TEXT	SEGMENT
this$ = 16
?get@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDeviceManager9@@XZ PROC ; std::unique_ptr<IDirect3DDeviceManager9,IUnknown_release>::get, COMDAT

; 1895 :     _NODISCARD pointer get() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1896 :         return _Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1897 :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?get@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDeviceManager9@@XZ ENDP ; std::unique_ptr<IDirect3DDeviceManager9,IUnknown_release>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??C?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDeviceManager9@@XZ
_TEXT	SEGMENT
this$ = 16
??C?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDeviceManager9@@XZ PROC ; std::unique_ptr<IDirect3DDeviceManager9,IUnknown_release>::operator->, COMDAT

; 1891 :     _NODISCARD pointer operator->() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1892 :         return _Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1893 :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
??C?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDeviceManager9@@XZ ENDP ; std::unique_ptr<IDirect3DDeviceManager9,IUnknown_release>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ PROC ; std::unique_ptr<IDirect3DDeviceManager9,IUnknown_release>::~unique_ptr<IDirect3DDeviceManager9,IUnknown_release>, COMDAT

; 1873 :     ~unique_ptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1874 :         if (_Mypair._Myval2) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 1f		 je	 SHORT $LN2@unique_ptr

; 1875 :             _Mypair._Get_first()(_Mypair._Myval2);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDeviceManager9@@$00@std@@QEAAAEAUIUnknown_release@@XZ ; std::_Compressed_pair<IUnknown_release,IDirect3DDeviceManager9 *,1>::_Get_first
  00036	90		 npad	 1
  00037	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??RIUnknown_release@@QEBAXPEAUIUnknown@@@Z ; IUnknown_release::operator()
  00047	90		 npad	 1
$LN2@unique_ptr:

; 1876 :         }
; 1877 :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
??1?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ ENDP ; std::unique_ptr<IDirect3DDeviceManager9,IUnknown_release>::~unique_ptr<IDirect3DDeviceManager9,IUnknown_release>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDevice9Ex@@$00@std@@QEAAAEAUIUnknown_release@@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDevice9Ex@@$00@std@@QEAAAEAUIUnknown_release@@XZ PROC ; std::_Compressed_pair<IUnknown_release,IDirect3DDevice9Ex *,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDevice9Ex@@$00@std@@QEAAAEAUIUnknown_release@@XZ ENDP ; std::_Compressed_pair<IUnknown_release,IDirect3DDevice9Ex *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?reset@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3DDevice9Ex@@@Z
_TEXT	SEGMENT
_Old$ = 32
this$ = 64
_Ptr$ = 72
?reset@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3DDevice9Ex@@@Z PROC ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::reset, COMDAT

; 1907 :     void reset(pointer _Ptr = pointer()) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1908 :         pointer _Old = _STD exchange(_Mypair._Myval2, _Ptr);

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 54 24 48	 lea	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$exchange@PEAUIDirect3DDevice9Ex@@AEAPEAU1@@std@@YAPEAUIDirect3DDevice9Ex@@AEAPEAU1@0@Z ; std::exchange<IDirect3DDevice9Ex *,IDirect3DDevice9Ex * &>
  00035	90		 npad	 1
  00036	48 89 44 24 20	 mov	 QWORD PTR _Old$[rsp], rax

; 1909 :         if (_Old) {

  0003b	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Old$[rsp], 0
  00041	74 1c		 je	 SHORT $LN2@reset

; 1910 :             _Mypair._Get_first()(_Old);

  00043	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDevice9Ex@@$00@std@@QEAAAEAUIUnknown_release@@XZ ; std::_Compressed_pair<IUnknown_release,IDirect3DDevice9Ex *,1>::_Get_first
  00050	90		 npad	 1
  00051	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Old$[rsp]
  00056	48 8b c8	 mov	 rcx, rax
  00059	e8 00 00 00 00	 call	 ??RIUnknown_release@@QEBAXPEAUIUnknown@@@Z ; IUnknown_release::operator()
  0005e	90		 npad	 1
$LN2@reset:

; 1911 :         }
; 1912 :     }

  0005f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
?reset@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3DDevice9Ex@@@Z ENDP ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDevice9Ex@@XZ
_TEXT	SEGMENT
this$ = 16
?get@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDevice9Ex@@XZ PROC ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::get, COMDAT

; 1895 :     _NODISCARD pointer get() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1896 :         return _Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1897 :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?get@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDevice9Ex@@XZ ENDP ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??C?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDevice9Ex@@XZ
_TEXT	SEGMENT
this$ = 16
??C?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDevice9Ex@@XZ PROC ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::operator->, COMDAT

; 1891 :     _NODISCARD pointer operator->() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1892 :         return _Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1893 :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
??C?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDevice9Ex@@XZ ENDP ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ PROC ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::~unique_ptr<IDirect3DDevice9Ex,IUnknown_release>, COMDAT

; 1873 :     ~unique_ptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1874 :         if (_Mypair._Myval2) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 1f		 je	 SHORT $LN2@unique_ptr

; 1875 :             _Mypair._Get_first()(_Mypair._Myval2);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3DDevice9Ex@@$00@std@@QEAAAEAUIUnknown_release@@XZ ; std::_Compressed_pair<IUnknown_release,IDirect3DDevice9Ex *,1>::_Get_first
  00036	90		 npad	 1
  00037	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??RIUnknown_release@@QEBAXPEAUIUnknown@@@Z ; IUnknown_release::operator()
  00047	90		 npad	 1
$LN2@unique_ptr:

; 1876 :         }
; 1877 :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
??1?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ ENDP ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::~unique_ptr<IDirect3DDevice9Ex,IUnknown_release>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3D9Ex@@$00@std@@QEAAAEAUIUnknown_release@@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3D9Ex@@$00@std@@QEAAAEAUIUnknown_release@@XZ PROC ; std::_Compressed_pair<IUnknown_release,IDirect3D9Ex *,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3D9Ex@@$00@std@@QEAAAEAUIUnknown_release@@XZ ENDP ; std::_Compressed_pair<IUnknown_release,IDirect3D9Ex *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?reset@?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3D9Ex@@@Z
_TEXT	SEGMENT
_Old$ = 32
this$ = 64
_Ptr$ = 72
?reset@?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3D9Ex@@@Z PROC ; std::unique_ptr<IDirect3D9Ex,IUnknown_release>::reset, COMDAT

; 1907 :     void reset(pointer _Ptr = pointer()) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1908 :         pointer _Old = _STD exchange(_Mypair._Myval2, _Ptr);

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 54 24 48	 lea	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$exchange@PEAUIDirect3D9Ex@@AEAPEAU1@@std@@YAPEAUIDirect3D9Ex@@AEAPEAU1@0@Z ; std::exchange<IDirect3D9Ex *,IDirect3D9Ex * &>
  00035	90		 npad	 1
  00036	48 89 44 24 20	 mov	 QWORD PTR _Old$[rsp], rax

; 1909 :         if (_Old) {

  0003b	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Old$[rsp], 0
  00041	74 1c		 je	 SHORT $LN2@reset

; 1910 :             _Mypair._Get_first()(_Old);

  00043	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3D9Ex@@$00@std@@QEAAAEAUIUnknown_release@@XZ ; std::_Compressed_pair<IUnknown_release,IDirect3D9Ex *,1>::_Get_first
  00050	90		 npad	 1
  00051	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Old$[rsp]
  00056	48 8b c8	 mov	 rcx, rax
  00059	e8 00 00 00 00	 call	 ??RIUnknown_release@@QEBAXPEAUIUnknown@@@Z ; IUnknown_release::operator()
  0005e	90		 npad	 1
$LN2@reset:

; 1911 :         }
; 1912 :     }

  0005f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
?reset@?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3D9Ex@@@Z ENDP ; std::unique_ptr<IDirect3D9Ex,IUnknown_release>::reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??C?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3D9Ex@@XZ
_TEXT	SEGMENT
this$ = 16
??C?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3D9Ex@@XZ PROC ; std::unique_ptr<IDirect3D9Ex,IUnknown_release>::operator->, COMDAT

; 1891 :     _NODISCARD pointer operator->() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1892 :         return _Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1893 :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
??C?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3D9Ex@@XZ ENDP ; std::unique_ptr<IDirect3D9Ex,IUnknown_release>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ PROC ; std::unique_ptr<IDirect3D9Ex,IUnknown_release>::~unique_ptr<IDirect3D9Ex,IUnknown_release>, COMDAT

; 1873 :     ~unique_ptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1874 :         if (_Mypair._Myval2) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 1f		 je	 SHORT $LN2@unique_ptr

; 1875 :             _Mypair._Get_first()(_Mypair._Myval2);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@UIUnknown_release@@PEAUIDirect3D9Ex@@$00@std@@QEAAAEAUIUnknown_release@@XZ ; std::_Compressed_pair<IUnknown_release,IDirect3D9Ex *,1>::_Get_first
  00036	90		 npad	 1
  00037	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??RIUnknown_release@@QEBAXPEAUIUnknown@@@Z ; IUnknown_release::operator()
  00047	90		 npad	 1
$LN2@unique_ptr:

; 1876 :         }
; 1877 :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
??1?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ ENDP ; std::unique_ptr<IDirect3D9Ex,IUnknown_release>::~unique_ptr<IDirect3D9Ex,IUnknown_release>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_hw_d3d9.cpp
_TEXT	SEGMENT
backBufferTmp$ = 56
hr$ = 68
pDXVAVP$ = 88
tv75 = 104
tv92 = 112
tv254 = 120
tv154 = 128
tv168 = 136
tv174 = 144
tv194 = 152
tv204 = 160
tv249 = 168
tv225 = 176
tv242 = 184
this$ = 208
?CreateVideoProcessors@CQSVD3D9Device@@IEAA?AW4mfxStatus@@XZ PROC ; CQSVD3D9Device::CreateVideoProcessors

; 205  : mfxStatus CQSVD3D9Device::CreateVideoProcessors() {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 81 ec c0 00
	00 00		 sub	 rsp, 192		; 000000c0H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+208]

; 206  :     m_pDXVAVProcessor.reset();

  00024	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 83 c0 38	 add	 rax, 56			; 00000038H
  00030	33 d2		 xor	 edx, edx
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAAXPEAUIDirectXVideoProcessor@@@Z ; std::unique_ptr<IDirectXVideoProcessor,IUnknown_release>::reset

; 207  :     m_pQSVLog->write(RGY_LOG_DEBUG, _T("D3D9Device: CreateVideoProcessors...\n"));

  0003a	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 83 c0 08	 add	 rax, 8
  00046	48 8b c8	 mov	 rcx, rax
  00049	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  0004e	48 89 44 24 68	 mov	 QWORD PTR tv75[rsp], rax
  00053	48 8b 44 24 68	 mov	 rax, QWORD PTR tv75[rsp]
  00058	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005b	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG124255
  00062	ba fe ff ff ff	 mov	 edx, -2
  00067	48 8b 4c 24 68	 mov	 rcx, QWORD PTR tv75[rsp]
  0006c	ff 50 20	 call	 QWORD PTR [rax+32]

; 208  : 
; 209  :     ZeroMemory(&m_backBufferDesc, sizeof(m_backBufferDesc));

  0006f	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00077	48 05 84 00 00
	00		 add	 rax, 132		; 00000084H
  0007d	41 b8 20 00 00
	00		 mov	 r8d, 32			; 00000020H
  00083	33 d2		 xor	 edx, edx
  00085	48 8b c8	 mov	 rcx, rax
  00088	e8 00 00 00 00	 call	 memset

; 210  :     IDirect3DSurface9 *backBufferTmp = nullptr;

  0008d	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR backBufferTmp$[rsp], 0

; 211  :     auto hr = m_pD3DDevice9->GetBackBuffer(0, 0, D3DBACKBUFFER_TYPE_MONO, &backBufferTmp);

  00096	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0009e	48 83 c0 20	 add	 rax, 32			; 00000020H
  000a2	48 8b c8	 mov	 rcx, rax
  000a5	e8 00 00 00 00	 call	 ??C?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDevice9Ex@@XZ ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::operator->
  000aa	48 89 44 24 70	 mov	 QWORD PTR tv92[rsp], rax
  000af	48 8b 44 24 70	 mov	 rax, QWORD PTR tv92[rsp]
  000b4	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000b7	48 8d 4c 24 38	 lea	 rcx, QWORD PTR backBufferTmp$[rsp]
  000bc	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  000c1	45 33 c9	 xor	 r9d, r9d
  000c4	45 33 c0	 xor	 r8d, r8d
  000c7	33 d2		 xor	 edx, edx
  000c9	48 8b 4c 24 70	 mov	 rcx, QWORD PTR tv92[rsp]
  000ce	ff 90 90 00 00
	00		 call	 QWORD PTR [rax+144]
  000d4	89 44 24 44	 mov	 DWORD PTR hr$[rsp], eax

; 212  :     if (NULL != backBufferTmp) {

  000d8	48 83 7c 24 38
	00		 cmp	 QWORD PTR backBufferTmp$[rsp], 0
  000de	74 3b		 je	 SHORT $LN2@CreateVide

; 213  :         backBufferTmp->GetDesc(&m_backBufferDesc);

  000e0	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000e8	48 05 84 00 00
	00		 add	 rax, 132		; 00000084H
  000ee	48 8b 4c 24 38	 mov	 rcx, QWORD PTR backBufferTmp$[rsp]
  000f3	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000f6	48 89 4c 24 78	 mov	 QWORD PTR tv254[rsp], rcx
  000fb	48 8b d0	 mov	 rdx, rax
  000fe	48 8b 4c 24 38	 mov	 rcx, QWORD PTR backBufferTmp$[rsp]
  00103	48 8b 44 24 78	 mov	 rax, QWORD PTR tv254[rsp]
  00108	ff 50 60	 call	 QWORD PTR [rax+96]

; 214  :         backBufferTmp->Release();

  0010b	48 8b 44 24 38	 mov	 rax, QWORD PTR backBufferTmp$[rsp]
  00110	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00113	48 8b 4c 24 38	 mov	 rcx, QWORD PTR backBufferTmp$[rsp]
  00118	ff 50 10	 call	 QWORD PTR [rax+16]
$LN2@CreateVide:

; 215  :     }
; 216  :     if (FAILED(hr)) {

  0011b	83 7c 24 44 00	 cmp	 DWORD PTR hr$[rsp], 0
  00120	7d 4d		 jge	 SHORT $LN3@CreateVide

; 217  :         m_pQSVLog->write(RGY_LOG_ERROR, _T("D3D9Device: Failed GetBackBuffer: %d.\n"), hr);

  00122	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0012a	48 83 c0 08	 add	 rax, 8
  0012e	48 8b c8	 mov	 rcx, rax
  00131	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  00136	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR tv154[rsp], rax
  0013e	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR tv154[rsp]
  00146	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00149	44 8b 4c 24 44	 mov	 r9d, DWORD PTR hr$[rsp]
  0014e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG124258
  00155	ba 02 00 00 00	 mov	 edx, 2
  0015a	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR tv154[rsp]
  00162	ff 50 20	 call	 QWORD PTR [rax+32]

; 218  :         return MFX_ERR_UNDEFINED_BEHAVIOR;

  00165	b8 f0 ff ff ff	 mov	 eax, -16
  0016a	e9 09 02 00 00	 jmp	 $LN1@CreateVide
$LN3@CreateVide:

; 219  :     }
; 220  :     m_pQSVLog->write(RGY_LOG_DEBUG, _T("D3D9Device: GetBackBuffer Success.\n"));

  0016f	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00177	48 83 c0 08	 add	 rax, 8
  0017b	48 8b c8	 mov	 rcx, rax
  0017e	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  00183	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR tv168[rsp], rax
  0018b	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR tv168[rsp]
  00193	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00196	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG124259
  0019d	ba fe ff ff ff	 mov	 edx, -2
  001a2	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR tv168[rsp]
  001aa	ff 50 20	 call	 QWORD PTR [rax+32]

; 221  : 
; 222  :     IDirectXVideoProcessor *pDXVAVP = nullptr;

  001ad	48 c7 44 24 58
	00 00 00 00	 mov	 QWORD PTR pDXVAVP$[rsp], 0

; 223  :     if (FAILED(hr = DXVA2CreateVideoService(m_pD3DDevice9.get(), IID_IDirectXVideoProcessorService, (void**)&m_pDXVAVProcessorService))) {

  001b6	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001be	48 83 c0 30	 add	 rax, 48			; 00000030H
  001c2	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR tv174[rsp], rax
  001ca	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001d2	48 83 c1 20	 add	 rcx, 32			; 00000020H
  001d6	e8 00 00 00 00	 call	 ?get@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDevice9Ex@@XZ ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::get
  001db	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR tv174[rsp]
  001e3	4c 8b c1	 mov	 r8, rcx
  001e6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:IID_IDirectXVideoProcessorService
  001ed	48 8b c8	 mov	 rcx, rax
  001f0	e8 00 00 00 00	 call	 DXVA2CreateVideoService
  001f5	89 44 24 44	 mov	 DWORD PTR hr$[rsp], eax
  001f9	83 7c 24 44 00	 cmp	 DWORD PTR hr$[rsp], 0
  001fe	7d 52		 jge	 SHORT $LN4@CreateVide

; 224  :         m_pQSVLog->write(RGY_LOG_ERROR, _T("D3D9Device: Failed DXVA2CreateVideoService: %d.\n"), hr);

  00200	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00208	48 83 c0 08	 add	 rax, 8
  0020c	48 8b c8	 mov	 rcx, rax
  0020f	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  00214	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR tv194[rsp], rax
  0021c	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR tv194[rsp]
  00224	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00227	44 8b 4c 24 44	 mov	 r9d, DWORD PTR hr$[rsp]
  0022c	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG124262
  00233	ba 02 00 00 00	 mov	 edx, 2
  00238	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR tv194[rsp]
  00240	ff 50 20	 call	 QWORD PTR [rax+32]

; 225  :         return MFX_ERR_DEVICE_FAILED;

  00243	b8 ef ff ff ff	 mov	 eax, -17
  00248	e9 2b 01 00 00	 jmp	 $LN1@CreateVide
  0024d	e9 cd 00 00 00	 jmp	 $LN5@CreateVide
$LN4@CreateVide:

; 226  :     } else if (FAILED(hr = m_pDXVAVProcessorService->CreateVideoProcessor(DXVA2_VideoProcProgressiveDevice, &m_VideoDesc, m_D3DPresentPrm.BackBufferFormat, 1, &pDXVAVP))) {

  00252	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0025a	48 83 c0 30	 add	 rax, 48			; 00000030H
  0025e	48 8b c8	 mov	 rcx, rax
  00261	e8 00 00 00 00	 call	 ??C?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEBAPEAUIDirectXVideoProcessorService@@XZ ; std::unique_ptr<IDirectXVideoProcessorService,IUnknown_release>::operator->
  00266	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR tv204[rsp], rax
  0026e	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00276	48 05 b4 00 00
	00		 add	 rax, 180		; 000000b4H
  0027c	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR tv204[rsp]
  00284	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00287	48 89 8c 24 a8
	00 00 00	 mov	 QWORD PTR tv249[rsp], rcx
  0028f	48 8d 54 24 58	 lea	 rdx, QWORD PTR pDXVAVP$[rsp]
  00294	48 89 54 24 28	 mov	 QWORD PTR [rsp+40], rdx
  00299	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR [rsp+32], 1
  002a1	48 8b 94 24 d0
	00 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  002a9	44 8b 4a 48	 mov	 r9d, DWORD PTR [rdx+72]
  002ad	4c 8b c0	 mov	 r8, rax
  002b0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:DXVA2_VideoProcProgressiveDevice
  002b7	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR tv204[rsp]
  002bf	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR tv249[rsp]
  002c7	ff 50 58	 call	 QWORD PTR [rax+88]
  002ca	89 44 24 44	 mov	 DWORD PTR hr$[rsp], eax
  002ce	83 7c 24 44 00	 cmp	 DWORD PTR hr$[rsp], 0
  002d3	7d 4a		 jge	 SHORT $LN6@CreateVide

; 227  :         m_pQSVLog->write(RGY_LOG_ERROR, _T("D3D9Device: Failed CreateVideoProcessor: %d.\n"), hr);

  002d5	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  002dd	48 83 c0 08	 add	 rax, 8
  002e1	48 8b c8	 mov	 rcx, rax
  002e4	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  002e9	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR tv225[rsp], rax
  002f1	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR tv225[rsp]
  002f9	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002fc	44 8b 4c 24 44	 mov	 r9d, DWORD PTR hr$[rsp]
  00301	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG124264
  00308	ba 02 00 00 00	 mov	 edx, 2
  0030d	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR tv225[rsp]
  00315	ff 50 20	 call	 QWORD PTR [rax+32]

; 228  :         return MFX_ERR_DEVICE_FAILED;

  00318	b8 ef ff ff ff	 mov	 eax, -17
  0031d	eb 59		 jmp	 SHORT $LN1@CreateVide
$LN6@CreateVide:
$LN5@CreateVide:

; 229  :     }
; 230  :     m_pDXVAVProcessor.reset(pDXVAVP);

  0031f	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00327	48 83 c0 38	 add	 rax, 56			; 00000038H
  0032b	48 8b 54 24 58	 mov	 rdx, QWORD PTR pDXVAVP$[rsp]
  00330	48 8b c8	 mov	 rcx, rax
  00333	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAAXPEAUIDirectXVideoProcessor@@@Z ; std::unique_ptr<IDirectXVideoProcessor,IUnknown_release>::reset

; 231  :     m_pQSVLog->write(RGY_LOG_DEBUG, _T("D3D9Device: CreateVideoProcessor Success.\n"));

  00338	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00340	48 83 c0 08	 add	 rax, 8
  00344	48 8b c8	 mov	 rcx, rax
  00347	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  0034c	48 89 84 24 b8
	00 00 00	 mov	 QWORD PTR tv242[rsp], rax
  00354	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR tv242[rsp]
  0035c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0035f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG124265
  00366	ba fe ff ff ff	 mov	 edx, -2
  0036b	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR tv242[rsp]
  00373	ff 50 20	 call	 QWORD PTR [rax+32]

; 232  : 
; 233  :     return MFX_ERR_NONE;

  00376	33 c0		 xor	 eax, eax
$LN1@CreateVide:

; 234  : }

  00378	48 8b f8	 mov	 rdi, rax
  0037b	48 8b cc	 mov	 rcx, rsp
  0037e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?CreateVideoProcessors@CQSVD3D9Device@@IEAA?AW4mfxStatus@@XZ$rtcFrameData
  00385	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0038a	48 8b c7	 mov	 rax, rdi
  0038d	48 81 c4 c0 00
	00 00		 add	 rsp, 192		; 000000c0H
  00394	5f		 pop	 rdi
  00395	c3		 ret	 0
?CreateVideoProcessors@CQSVD3D9Device@@IEAA?AW4mfxStatus@@XZ ENDP ; CQSVD3D9Device::CreateVideoProcessors
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_hw_d3d9.cpp
_TEXT	SEGMENT
tv87 = 32
this$ = 64
?Close@CQSVD3D9Device@@UEAAXXZ PROC			; CQSVD3D9Device::Close

; 180  : void CQSVD3D9Device::Close() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 181  :     m_pDXVAVProcessor.reset();

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 38	 add	 rax, 56			; 00000038H
  00027	33 d2		 xor	 edx, edx
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAAXPEAUIDirectXVideoProcessor@@@Z ; std::unique_ptr<IDirectXVideoProcessor,IUnknown_release>::reset

; 182  :     m_pDXVAVProcessorService.reset();

  00031	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c0 30	 add	 rax, 48			; 00000030H
  0003a	33 d2		 xor	 edx, edx
  0003c	48 8b c8	 mov	 rcx, rax
  0003f	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAAXPEAUIDirectXVideoProcessorService@@@Z ; std::unique_ptr<IDirectXVideoProcessorService,IUnknown_release>::reset

; 183  : 
; 184  :     m_pD3DDeviceManager9.reset();

  00044	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00049	48 83 c0 28	 add	 rax, 40			; 00000028H
  0004d	33 d2		 xor	 edx, edx
  0004f	48 8b c8	 mov	 rcx, rax
  00052	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3DDeviceManager9@@@Z ; std::unique_ptr<IDirect3DDeviceManager9,IUnknown_release>::reset

; 185  :     m_pD3DDevice9.reset();

  00057	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005c	48 83 c0 20	 add	 rax, 32			; 00000020H
  00060	33 d2		 xor	 edx, edx
  00062	48 8b c8	 mov	 rcx, rax
  00065	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3DDevice9Ex@@@Z ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::reset

; 186  :     m_pD3D9.reset();

  0006a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0006f	48 83 c0 18	 add	 rax, 24
  00073	33 d2		 xor	 edx, edx
  00075	48 8b c8	 mov	 rcx, rax
  00078	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3D9Ex@@@Z ; std::unique_ptr<IDirect3D9Ex,IUnknown_release>::reset

; 187  : 
; 188  :     m_pQSVLog->write(RGY_LOG_DEBUG, _T("D3D9Device: Closed.\n"));

  0007d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00082	48 83 c0 08	 add	 rax, 8
  00086	48 8b c8	 mov	 rcx, rax
  00089	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  0008e	48 89 44 24 20	 mov	 QWORD PTR tv87[rsp], rax
  00093	48 8b 44 24 20	 mov	 rax, QWORD PTR tv87[rsp]
  00098	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0009b	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG124235
  000a2	ba fe ff ff ff	 mov	 edx, -2
  000a7	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv87[rsp]
  000ac	ff 50 20	 call	 QWORD PTR [rax+32]

; 189  :     m_pQSVLog.reset();

  000af	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000b4	48 83 c0 08	 add	 rax, 8
  000b8	48 8b c8	 mov	 rcx, rax
  000bb	e8 00 00 00 00	 call	 ?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ ; std::shared_ptr<RGYLog>::reset

; 190  : }

  000c0	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000c4	5f		 pop	 rdi
  000c5	c3		 ret	 0
?Close@CQSVD3D9Device@@UEAAXXZ ENDP			; CQSVD3D9Device::Close
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_hw_d3d9.cpp
_TEXT	SEGMENT
this$ = 48
type$ = 56
pHdl$ = 64
?GetHandle@CQSVD3D9Device@@UEAA?AW4mfxStatus@@W4mfxHandleType@@PEAPEAX@Z PROC ; CQSVD3D9Device::GetHandle

; 196  : mfxStatus CQSVD3D9Device::GetHandle(mfxHandleType type, mfxHDL *pHdl) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 197  :     if (MFX_HANDLE_DIRECT3D_DEVICE_MANAGER9 == type && pHdl != NULL) {

  00027	83 7c 24 38 01	 cmp	 DWORD PTR type$[rsp], 1
  0002c	75 25		 jne	 SHORT $LN2@GetHandle
  0002e	48 83 7c 24 40
	00		 cmp	 QWORD PTR pHdl$[rsp], 0
  00034	74 1d		 je	 SHORT $LN2@GetHandle

; 198  :         *pHdl = m_pD3DDeviceManager9.get();

  00036	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 83 c0 28	 add	 rax, 40			; 00000028H
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ?get@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDeviceManager9@@XZ ; std::unique_ptr<IDirect3DDeviceManager9,IUnknown_release>::get
  00047	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pHdl$[rsp]
  0004c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 199  : 
; 200  :         return MFX_ERR_NONE;

  0004f	33 c0		 xor	 eax, eax
  00051	eb 05		 jmp	 SHORT $LN1@GetHandle
$LN2@GetHandle:

; 201  :     }
; 202  :     return MFX_ERR_UNSUPPORTED;

  00053	b8 fd ff ff ff	 mov	 eax, -3
$LN1@GetHandle:

; 203  : }

  00058	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
?GetHandle@CQSVD3D9Device@@UEAA?AW4mfxStatus@@W4mfxHandleType@@PEAPEAX@Z ENDP ; CQSVD3D9Device::GetHandle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_hw_d3d9.cpp
_TEXT	SEGMENT
r$5 = 40
hr$ = 68
d3dpp$ = 96
$T6 = 176
$T7 = 180
tv135 = 184
tv146 = 192
tv161 = 200
tv171 = 208
tv215 = 216
tv194 = 224
tv208 = 232
__$ArrayPad$ = 240
this$ = 288
?Reset@CQSVD3D9Device@@UEAA?AW4mfxStatus@@XZ PROC	; CQSVD3D9Device::Reset

; 156  : mfxStatus CQSVD3D9Device::Reset() {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	56		 push	 rsi
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 8c 24 20
	01 00 00	 mov	 rcx, QWORD PTR [rsp+288]
  00025	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002c	48 33 c4	 xor	 rax, rsp
  0002f	48 89 84 24 f0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 157  :     m_D3DPresentPrm.BackBufferWidth  = GetSystemMetrics(SM_CXSCREEN);

  00037	33 c9		 xor	 ecx, ecx
  00039	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetSystemMetrics
  0003f	48 8b 8c 24 20
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00047	89 41 40	 mov	 DWORD PTR [rcx+64], eax

; 158  :     m_D3DPresentPrm.BackBufferHeight = GetSystemMetrics(SM_CYSCREEN);

  0004a	b9 01 00 00 00	 mov	 ecx, 1
  0004f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetSystemMetrics
  00055	48 8b 8c 24 20
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0005d	89 41 44	 mov	 DWORD PTR [rcx+68], eax

; 159  :     if (m_D3DPresentPrm.Windowed) {

  00060	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00068	83 78 68 00	 cmp	 DWORD PTR [rax+104], 0
  0006c	0f 84 cd 00 00
	00		 je	 $LN2@Reset

; 160  :         RECT r;
; 161  :         GetClientRect((HWND)m_D3DPresentPrm.hDeviceWindow, &r);

  00072	48 8d 54 24 28	 lea	 rdx, QWORD PTR r$5[rsp]
  00077	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0007f	48 8b 48 60	 mov	 rcx, QWORD PTR [rax+96]
  00083	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetClientRect

; 162  :         m_D3DPresentPrm.BackBufferWidth  = (std::min<uint32_t>)(m_D3DPresentPrm.BackBufferWidth,  r.right - r.left);

  00089	8b 44 24 28	 mov	 eax, DWORD PTR r$5[rsp]
  0008d	8b 4c 24 30	 mov	 ecx, DWORD PTR r$5[rsp+8]
  00091	2b c8		 sub	 ecx, eax
  00093	8b c1		 mov	 eax, ecx
  00095	89 84 24 b0 00
	00 00		 mov	 DWORD PTR $T6[rsp], eax
  0009c	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000a4	48 83 c0 40	 add	 rax, 64			; 00000040H
  000a8	48 8d 94 24 b0
	00 00 00	 lea	 rdx, QWORD PTR $T6[rsp]
  000b0	48 8b c8	 mov	 rcx, rax
  000b3	e8 00 00 00 00	 call	 ??$min@I@std@@YAAEBIAEBI0@Z ; std::min<unsigned int>
  000b8	48 8b 8c 24 20
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000c0	8b 00		 mov	 eax, DWORD PTR [rax]
  000c2	89 41 40	 mov	 DWORD PTR [rcx+64], eax

; 163  :         m_D3DPresentPrm.BackBufferHeight = (std::min<uint32_t>)(m_D3DPresentPrm.BackBufferHeight, r.bottom - r.top);

  000c5	8b 44 24 2c	 mov	 eax, DWORD PTR r$5[rsp+4]
  000c9	8b 4c 24 34	 mov	 ecx, DWORD PTR r$5[rsp+12]
  000cd	2b c8		 sub	 ecx, eax
  000cf	8b c1		 mov	 eax, ecx
  000d1	89 84 24 b4 00
	00 00		 mov	 DWORD PTR $T7[rsp], eax
  000d8	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000e0	48 83 c0 44	 add	 rax, 68			; 00000044H
  000e4	48 8d 94 24 b4
	00 00 00	 lea	 rdx, QWORD PTR $T7[rsp]
  000ec	48 8b c8	 mov	 rcx, rax
  000ef	e8 00 00 00 00	 call	 ??$min@I@std@@YAAEBIAEBI0@Z ; std::min<unsigned int>
  000f4	48 8b 8c 24 20
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000fc	8b 00		 mov	 eax, DWORD PTR [rax]
  000fe	89 41 44	 mov	 DWORD PTR [rcx+68], eax

; 164  :         m_pQSVLog->write(RGY_LOG_DEBUG, _T("D3D9Device: Set Reset() m_D3DPresentPrm.BackBuffer.\n"));

  00101	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00109	48 83 c0 08	 add	 rax, 8
  0010d	48 8b c8	 mov	 rcx, rax
  00110	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  00115	48 89 84 24 b8
	00 00 00	 mov	 QWORD PTR tv135[rsp], rax
  0011d	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR tv135[rsp]
  00125	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00128	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG124225
  0012f	ba fe ff ff ff	 mov	 edx, -2
  00134	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR tv135[rsp]
  0013c	ff 50 20	 call	 QWORD PTR [rax+32]
$LN2@Reset:

; 165  :     }
; 166  : 
; 167  :     HRESULT hr = 0;

  0013f	c7 44 24 44 00
	00 00 00	 mov	 DWORD PTR hr$[rsp], 0

; 168  :     D3DPRESENT_PARAMETERS d3dpp = m_D3DPresentPrm;

  00147	48 8d 44 24 60	 lea	 rax, QWORD PTR d3dpp$[rsp]
  0014c	48 8b 8c 24 20
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00154	48 8b f8	 mov	 rdi, rax
  00157	48 8d 71 40	 lea	 rsi, QWORD PTR [rcx+64]
  0015b	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00160	f3 a4		 rep movsb

; 169  :     if (FAILED(m_pD3DDevice9->ResetEx(&d3dpp, NULL))) {

  00162	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0016a	48 83 c0 20	 add	 rax, 32			; 00000020H
  0016e	48 8b c8	 mov	 rcx, rax
  00171	e8 00 00 00 00	 call	 ??C?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDevice9Ex@@XZ ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::operator->
  00176	48 89 84 24 c0
	00 00 00	 mov	 QWORD PTR tv146[rsp], rax
  0017e	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR tv146[rsp]
  00186	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00189	45 33 c0	 xor	 r8d, r8d
  0018c	48 8d 54 24 60	 lea	 rdx, QWORD PTR d3dpp$[rsp]
  00191	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR tv146[rsp]
  00199	ff 90 20 04 00
	00		 call	 QWORD PTR [rax+1056]
  0019f	85 c0		 test	 eax, eax
  001a1	7d 52		 jge	 SHORT $LN3@Reset

; 170  :         m_pQSVLog->write(RGY_LOG_ERROR, _T("D3D9Device: Failed ResetEx: %d.\n"), hr);

  001a3	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001ab	48 83 c0 08	 add	 rax, 8
  001af	48 8b c8	 mov	 rcx, rax
  001b2	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  001b7	48 89 84 24 c8
	00 00 00	 mov	 QWORD PTR tv161[rsp], rax
  001bf	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR tv161[rsp]
  001c7	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001ca	44 8b 4c 24 44	 mov	 r9d, DWORD PTR hr$[rsp]
  001cf	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG124228
  001d6	ba 02 00 00 00	 mov	 edx, 2
  001db	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR tv161[rsp]
  001e3	ff 50 20	 call	 QWORD PTR [rax+32]

; 171  :         return MFX_ERR_UNDEFINED_BEHAVIOR;

  001e6	b8 f0 ff ff ff	 mov	 eax, -16
  001eb	e9 fb 00 00 00	 jmp	 $LN1@Reset
  001f0	e9 b6 00 00 00	 jmp	 $LN4@Reset
$LN3@Reset:

; 172  :     } else if (FAILED(m_pD3DDeviceManager9->ResetDevice(m_pD3DDevice9.get(), m_resetToken))) {

  001f5	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001fd	48 83 c0 28	 add	 rax, 40			; 00000028H
  00201	48 8b c8	 mov	 rcx, rax
  00204	e8 00 00 00 00	 call	 ??C?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDeviceManager9@@XZ ; std::unique_ptr<IDirect3DDeviceManager9,IUnknown_release>::operator->
  00209	48 89 84 24 d0
	00 00 00	 mov	 QWORD PTR tv171[rsp], rax
  00211	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00219	48 83 c0 20	 add	 rax, 32			; 00000020H
  0021d	48 8b c8	 mov	 rcx, rax
  00220	e8 00 00 00 00	 call	 ?get@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDevice9Ex@@XZ ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::get
  00225	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR tv171[rsp]
  0022d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00230	48 89 8c 24 d8
	00 00 00	 mov	 QWORD PTR tv215[rsp], rcx
  00238	48 8b 94 24 20
	01 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  00240	44 8b 82 80 00
	00 00		 mov	 r8d, DWORD PTR [rdx+128]
  00247	48 8b d0	 mov	 rdx, rax
  0024a	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR tv171[rsp]
  00252	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR tv215[rsp]
  0025a	ff 50 18	 call	 QWORD PTR [rax+24]
  0025d	85 c0		 test	 eax, eax
  0025f	7d 4a		 jge	 SHORT $LN5@Reset

; 173  :         m_pQSVLog->write(RGY_LOG_ERROR, _T("D3D9Device: Failed ResetDevice: %d.\n"), hr);

  00261	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00269	48 83 c0 08	 add	 rax, 8
  0026d	48 8b c8	 mov	 rcx, rax
  00270	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  00275	48 89 84 24 e0
	00 00 00	 mov	 QWORD PTR tv194[rsp], rax
  0027d	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR tv194[rsp]
  00285	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00288	44 8b 4c 24 44	 mov	 r9d, DWORD PTR hr$[rsp]
  0028d	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG124230
  00294	ba 02 00 00 00	 mov	 edx, 2
  00299	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR tv194[rsp]
  002a1	ff 50 20	 call	 QWORD PTR [rax+32]

; 174  :         return MFX_ERR_UNDEFINED_BEHAVIOR;

  002a4	b8 f0 ff ff ff	 mov	 eax, -16
  002a9	eb 40		 jmp	 SHORT $LN1@Reset
$LN5@Reset:
$LN4@Reset:

; 175  :     }
; 176  :     m_pQSVLog->write(RGY_LOG_DEBUG, _T("D3D9Device: Reset Success.\n"));

  002ab	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  002b3	48 83 c0 08	 add	 rax, 8
  002b7	48 8b c8	 mov	 rcx, rax
  002ba	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  002bf	48 89 84 24 e8
	00 00 00	 mov	 QWORD PTR tv208[rsp], rax
  002c7	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR tv208[rsp]
  002cf	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002d2	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG124231
  002d9	ba fe ff ff ff	 mov	 edx, -2
  002de	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR tv208[rsp]
  002e6	ff 50 20	 call	 QWORD PTR [rax+32]

; 177  :     return MFX_ERR_NONE;

  002e9	33 c0		 xor	 eax, eax
$LN1@Reset:

; 178  : }

  002eb	48 8b f8	 mov	 rdi, rax
  002ee	48 8b cc	 mov	 rcx, rsp
  002f1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Reset@CQSVD3D9Device@@UEAA?AW4mfxStatus@@XZ$rtcFrameData
  002f8	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  002fd	48 8b c7	 mov	 rax, rdi
  00300	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00308	48 33 cc	 xor	 rcx, rsp
  0030b	e8 00 00 00 00	 call	 __security_check_cookie
  00310	48 81 c4 08 01
	00 00		 add	 rsp, 264		; 00000108H
  00317	5f		 pop	 rdi
  00318	5e		 pop	 rsi
  00319	c3		 ret	 0
?Reset@CQSVD3D9Device@@UEAA?AW4mfxStatus@@XZ ENDP	; CQSVD3D9Device::Reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_hw_d3d9.cpp
_TEXT	SEGMENT
sts$ = 64
hr$ = 68
pD3D9$ = 88
r$8 = 120
pD3DD9$ = 168
resetToken$ = 196
pDeviceManager9$ = 232
$T9 = 256
$T10 = 260
$T11 = 264
$T12 = 268
$T13 = 272
$T14 = 276
$T15 = 280
$T16 = 284
tv68 = 288
tv92 = 296
tv141 = 304
tv166 = 312
tv202 = 320
tv218 = 328
tv389 = 336
tv239 = 344
tv256 = 352
tv266 = 360
tv386 = 368
tv282 = 376
tv305 = 384
tv322 = 392
tv331 = 400
tv382 = 408
tv353 = 416
tv367 = 424
__$ArrayPad$ = 432
this$ = 464
hWindow$ = 472
nAdapterNum$ = 480
pQSVLog$ = 488
?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z PROC ; CQSVD3D9Device::Init

; 79   : mfxStatus CQSVD3D9Device::Init(mfxHDL hWindow, uint32_t nAdapterNum, shared_ptr<RGYLog> pQSVLog) {

$LN14:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec c0 01
	00 00		 sub	 rsp, 448		; 000001c0H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 70 00 00 00	 mov	 ecx, 112		; 00000070H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 d0
	01 00 00	 mov	 rcx, QWORD PTR [rsp+464]
  00033	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003a	48 33 c4	 xor	 rax, rsp
  0003d	48 89 84 24 b0
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 80   :     mfxStatus sts = MFX_ERR_NONE;

  00045	c7 44 24 40 00
	00 00 00	 mov	 DWORD PTR sts$[rsp], 0

; 81   :     pQSVLog->write(RGY_LOG_DEBUG, _T("D3D9Device: Init...\n"));

  0004d	48 8b 8c 24 e8
	01 00 00	 mov	 rcx, QWORD PTR pQSVLog$[rsp]
  00055	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  0005a	48 89 84 24 20
	01 00 00	 mov	 QWORD PTR tv68[rsp], rax
  00062	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR tv68[rsp]
  0006a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006d	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG124189
  00074	ba fe ff ff ff	 mov	 edx, -2
  00079	48 8b 8c 24 20
	01 00 00	 mov	 rcx, QWORD PTR tv68[rsp]
  00081	ff 50 20	 call	 QWORD PTR [rax+32]

; 82   : 
; 83   :     m_pQSVLog = pQSVLog;

  00084	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0008c	48 83 c0 08	 add	 rax, 8
  00090	48 8b 94 24 e8
	01 00 00	 mov	 rdx, QWORD PTR pQSVLog$[rsp]
  00098	48 8b c8	 mov	 rcx, rax
  0009b	e8 00 00 00 00	 call	 ??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z ; std::shared_ptr<RGYLog>::operator=

; 84   :     HRESULT hr = 0;

  000a0	c7 44 24 44 00
	00 00 00	 mov	 DWORD PTR hr$[rsp], 0

; 85   :     IDirect3D9Ex *pD3D9 = nullptr;

  000a8	48 c7 44 24 58
	00 00 00 00	 mov	 QWORD PTR pD3D9$[rsp], 0

; 86   :     if (FAILED(hr = Direct3DCreate9Ex(D3D_SDK_VERSION, &pD3D9))) {

  000b1	48 8d 54 24 58	 lea	 rdx, QWORD PTR pD3D9$[rsp]
  000b6	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  000bb	e8 00 00 00 00	 call	 Direct3DCreate9Ex
  000c0	89 44 24 44	 mov	 DWORD PTR hr$[rsp], eax
  000c4	83 7c 24 44 00	 cmp	 DWORD PTR hr$[rsp], 0
  000c9	7d 67		 jge	 SHORT $LN2@Init

; 87   :         m_pQSVLog->write(RGY_LOG_ERROR, _T("D3D9Device: Failed Direct3DCreate9Ex: %d.\n"), hr);

  000cb	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000d3	48 83 c0 08	 add	 rax, 8
  000d7	48 8b c8	 mov	 rcx, rax
  000da	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  000df	48 89 84 24 28
	01 00 00	 mov	 QWORD PTR tv92[rsp], rax
  000e7	48 8b 84 24 28
	01 00 00	 mov	 rax, QWORD PTR tv92[rsp]
  000ef	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000f2	44 8b 4c 24 44	 mov	 r9d, DWORD PTR hr$[rsp]
  000f7	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG124191
  000fe	ba 02 00 00 00	 mov	 edx, 2
  00103	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR tv92[rsp]
  0010b	ff 50 20	 call	 QWORD PTR [rax+32]

; 88   :         return MFX_ERR_DEVICE_FAILED;

  0010e	c7 84 24 00 01
	00 00 ef ff ff
	ff		 mov	 DWORD PTR $T9[rsp], -17
  00119	48 8b 8c 24 e8
	01 00 00	 mov	 rcx, QWORD PTR pQSVLog$[rsp]
  00121	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  00126	8b 84 24 00 01
	00 00		 mov	 eax, DWORD PTR $T9[rsp]
  0012d	e9 c3 06 00 00	 jmp	 $LN1@Init
$LN2@Init:

; 89   :     }
; 90   :     m_pD3D9.reset(pD3D9);

  00132	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0013a	48 83 c0 18	 add	 rax, 24
  0013e	48 8b 54 24 58	 mov	 rdx, QWORD PTR pD3D9$[rsp]
  00143	48 8b c8	 mov	 rcx, rax
  00146	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3D9Ex@@@Z ; std::unique_ptr<IDirect3D9Ex,IUnknown_release>::reset

; 91   :     m_pQSVLog->write(RGY_LOG_DEBUG, _T("D3D9Device: Direct3DCreate9Ex Success.\n"));

  0014b	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00153	48 83 c0 08	 add	 rax, 8
  00157	48 8b c8	 mov	 rcx, rax
  0015a	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  0015f	48 89 84 24 30
	01 00 00	 mov	 QWORD PTR tv141[rsp], rax
  00167	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR tv141[rsp]
  0016f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00172	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG124193
  00179	ba fe ff ff ff	 mov	 edx, -2
  0017e	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR tv141[rsp]
  00186	ff 50 20	 call	 QWORD PTR [rax+32]

; 92   : 
; 93   :     ZeroMemory(&m_D3DPresentPrm, sizeof(m_D3DPresentPrm));

  00189	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00191	48 83 c0 40	 add	 rax, 64			; 00000040H
  00195	41 b8 40 00 00
	00		 mov	 r8d, 64			; 00000040H
  0019b	33 d2		 xor	 edx, edx
  0019d	48 8b c8	 mov	 rcx, rax
  001a0	e8 00 00 00 00	 call	 memset

; 94   :     m_D3DPresentPrm.Windowed = true;

  001a5	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001ad	c7 40 68 01 00
	00 00		 mov	 DWORD PTR [rax+104], 1

; 95   :     m_D3DPresentPrm.hDeviceWindow = (HWND)hWindow;

  001b4	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001bc	48 8b 8c 24 d8
	01 00 00	 mov	 rcx, QWORD PTR hWindow$[rsp]
  001c4	48 89 48 60	 mov	 QWORD PTR [rax+96], rcx

; 96   :     m_D3DPresentPrm.Flags                      = D3DPRESENTFLAG_VIDEO;

  001c8	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001d0	c7 40 74 10 00
	00 00		 mov	 DWORD PTR [rax+116], 16

; 97   :     m_D3DPresentPrm.FullScreen_RefreshRateInHz = D3DPRESENT_RATE_DEFAULT;

  001d7	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001df	c7 40 78 00 00
	00 00		 mov	 DWORD PTR [rax+120], 0

; 98   :     m_D3DPresentPrm.PresentationInterval       = D3DPRESENT_INTERVAL_ONE;

  001e6	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001ee	c7 40 7c 01 00
	00 00		 mov	 DWORD PTR [rax+124], 1

; 99   :     m_D3DPresentPrm.BackBufferCount            = 1;

  001f5	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001fd	c7 40 4c 01 00
	00 00		 mov	 DWORD PTR [rax+76], 1

; 100  :     m_D3DPresentPrm.BackBufferFormat           = (m_bIsA2rgb10) ? D3DFMT_A2R10G10B10 : D3DFMT_X8R8G8B8;

  00204	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0020c	83 b8 e0 01 00
	00 00		 cmp	 DWORD PTR [rax+480], 0
  00213	74 0d		 je	 SHORT $LN11@Init
  00215	c7 84 24 38 01
	00 00 23 00 00
	00		 mov	 DWORD PTR tv166[rsp], 35 ; 00000023H
  00220	eb 0b		 jmp	 SHORT $LN12@Init
$LN11@Init:
  00222	c7 84 24 38 01
	00 00 16 00 00
	00		 mov	 DWORD PTR tv166[rsp], 22
$LN12@Init:
  0022d	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00235	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR tv166[rsp]
  0023c	89 48 48	 mov	 DWORD PTR [rax+72], ecx

; 101  :     m_D3DPresentPrm.BackBufferWidth  = GetSystemMetrics(SM_CYSCREEN);

  0023f	b9 01 00 00 00	 mov	 ecx, 1
  00244	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetSystemMetrics
  0024a	48 8b 8c 24 d0
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00252	89 41 40	 mov	 DWORD PTR [rcx+64], eax

; 102  :     m_D3DPresentPrm.BackBufferHeight = GetSystemMetrics(SM_CYSCREEN);

  00255	b9 01 00 00 00	 mov	 ecx, 1
  0025a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetSystemMetrics
  00260	48 8b 8c 24 d0
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00268	89 41 44	 mov	 DWORD PTR [rcx+68], eax

; 103  : 
; 104  :     if (hWindow) {

  0026b	48 83 bc 24 d8
	01 00 00 00	 cmp	 QWORD PTR hWindow$[rsp], 0
  00274	0f 84 cf 00 00
	00		 je	 $LN3@Init

; 105  :         RECT r;
; 106  :         GetClientRect((HWND)hWindow, &r);

  0027a	48 8d 54 24 78	 lea	 rdx, QWORD PTR r$8[rsp]
  0027f	48 8b 8c 24 d8
	01 00 00	 mov	 rcx, QWORD PTR hWindow$[rsp]
  00287	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetClientRect

; 107  :         m_D3DPresentPrm.BackBufferWidth  = (std::min<uint32_t>)(m_D3DPresentPrm.BackBufferWidth,  r.right - r.left);

  0028d	8b 44 24 78	 mov	 eax, DWORD PTR r$8[rsp]
  00291	8b 8c 24 80 00
	00 00		 mov	 ecx, DWORD PTR r$8[rsp+8]
  00298	2b c8		 sub	 ecx, eax
  0029a	8b c1		 mov	 eax, ecx
  0029c	89 84 24 04 01
	00 00		 mov	 DWORD PTR $T10[rsp], eax
  002a3	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  002ab	48 83 c0 40	 add	 rax, 64			; 00000040H
  002af	48 8d 94 24 04
	01 00 00	 lea	 rdx, QWORD PTR $T10[rsp]
  002b7	48 8b c8	 mov	 rcx, rax
  002ba	e8 00 00 00 00	 call	 ??$min@I@std@@YAAEBIAEBI0@Z ; std::min<unsigned int>
  002bf	48 8b 8c 24 d0
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  002c7	8b 00		 mov	 eax, DWORD PTR [rax]
  002c9	89 41 40	 mov	 DWORD PTR [rcx+64], eax

; 108  :         m_D3DPresentPrm.BackBufferHeight = (std::min<uint32_t>)(m_D3DPresentPrm.BackBufferHeight, r.bottom - r.top);

  002cc	8b 44 24 7c	 mov	 eax, DWORD PTR r$8[rsp+4]
  002d0	8b 8c 24 84 00
	00 00		 mov	 ecx, DWORD PTR r$8[rsp+12]
  002d7	2b c8		 sub	 ecx, eax
  002d9	8b c1		 mov	 eax, ecx
  002db	89 84 24 08 01
	00 00		 mov	 DWORD PTR $T11[rsp], eax
  002e2	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  002ea	48 83 c0 44	 add	 rax, 68			; 00000044H
  002ee	48 8d 94 24 08
	01 00 00	 lea	 rdx, QWORD PTR $T11[rsp]
  002f6	48 8b c8	 mov	 rcx, rax
  002f9	e8 00 00 00 00	 call	 ??$min@I@std@@YAAEBIAEBI0@Z ; std::min<unsigned int>
  002fe	48 8b 8c 24 d0
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00306	8b 00		 mov	 eax, DWORD PTR [rax]
  00308	89 41 44	 mov	 DWORD PTR [rcx+68], eax

; 109  :         m_pQSVLog->write(RGY_LOG_DEBUG, _T("D3D9Device: Set Init() m_D3DPresentPrm.BackBuffer.\n"));

  0030b	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00313	48 83 c0 08	 add	 rax, 8
  00317	48 8b c8	 mov	 rcx, rax
  0031a	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  0031f	48 89 84 24 40
	01 00 00	 mov	 QWORD PTR tv202[rsp], rax
  00327	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR tv202[rsp]
  0032f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00332	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG124195
  00339	ba fe ff ff ff	 mov	 edx, -2
  0033e	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR tv202[rsp]
  00346	ff 50 20	 call	 QWORD PTR [rax+32]
$LN3@Init:

; 110  :     }
; 111  :     //
; 112  :     // Mark the back buffer lockable if software DXVA2 could be used.
; 113  :     // This is because software DXVA2 device requires a lockable render target
; 114  :     // for the optimal performance.
; 115  :     //
; 116  :     m_D3DPresentPrm.Flags |= D3DPRESENTFLAG_LOCKABLE_BACKBUFFER;

  00349	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00351	8b 40 74	 mov	 eax, DWORD PTR [rax+116]
  00354	83 c8 01	 or	 eax, 1
  00357	48 8b 8c 24 d0
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0035f	89 41 74	 mov	 DWORD PTR [rcx+116], eax

; 117  :     m_D3DPresentPrm.SwapEffect = D3DSWAPEFFECT_DISCARD;

  00362	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0036a	c7 40 58 01 00
	00 00		 mov	 DWORD PTR [rax+88], 1

; 118  : 
; 119  :     IDirect3DDevice9Ex *pD3DD9 = nullptr;

  00371	48 c7 84 24 a8
	00 00 00 00 00
	00 00		 mov	 QWORD PTR pD3DD9$[rsp], 0

; 120  :     if (FAILED(hr = m_pD3D9->CreateDeviceEx(

  0037d	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00385	48 83 c0 18	 add	 rax, 24
  00389	48 8b c8	 mov	 rcx, rax
  0038c	e8 00 00 00 00	 call	 ??C?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3D9Ex@@XZ ; std::unique_ptr<IDirect3D9Ex,IUnknown_release>::operator->
  00391	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR tv218[rsp], rax
  00399	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  003a1	48 83 c0 40	 add	 rax, 64			; 00000040H
  003a5	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR tv218[rsp]
  003ad	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  003b0	48 89 8c 24 50
	01 00 00	 mov	 QWORD PTR tv389[rsp], rcx
  003b8	48 8d 94 24 a8
	00 00 00	 lea	 rdx, QWORD PTR pD3DD9$[rsp]
  003c0	48 89 54 24 38	 mov	 QWORD PTR [rsp+56], rdx
  003c5	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR [rsp+48], 0
  003ce	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  003d3	c7 44 24 20 26
	00 00 00	 mov	 DWORD PTR [rsp+32], 38	; 00000026H
  003db	4c 8b 8c 24 d8
	01 00 00	 mov	 r9, QWORD PTR hWindow$[rsp]
  003e3	41 b8 01 00 00
	00		 mov	 r8d, 1
  003e9	8b 94 24 e0 01
	00 00		 mov	 edx, DWORD PTR nAdapterNum$[rsp]
  003f0	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR tv218[rsp]
  003f8	48 8b 84 24 50
	01 00 00	 mov	 rax, QWORD PTR tv389[rsp]
  00400	ff 90 a0 00 00
	00		 call	 QWORD PTR [rax+160]
  00406	89 44 24 44	 mov	 DWORD PTR hr$[rsp], eax
  0040a	83 7c 24 44 00	 cmp	 DWORD PTR hr$[rsp], 0
  0040f	7d 67		 jge	 SHORT $LN4@Init

; 121  :         nAdapterNum, D3DDEVTYPE_HAL, (HWND)hWindow,
; 122  :         D3DCREATE_SOFTWARE_VERTEXPROCESSING | D3DCREATE_MULTITHREADED | D3DCREATE_FPU_PRESERVE,
; 123  :         &m_D3DPresentPrm, NULL, &pD3DD9))) {
; 124  :         m_pQSVLog->write(RGY_LOG_ERROR, _T("D3D9Device: Failed CreateDeviceEx: %d.\n"), hr);

  00411	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00419	48 83 c0 08	 add	 rax, 8
  0041d	48 8b c8	 mov	 rcx, rax
  00420	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  00425	48 89 84 24 58
	01 00 00	 mov	 QWORD PTR tv239[rsp], rax
  0042d	48 8b 84 24 58
	01 00 00	 mov	 rax, QWORD PTR tv239[rsp]
  00435	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00438	44 8b 4c 24 44	 mov	 r9d, DWORD PTR hr$[rsp]
  0043d	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG124197
  00444	ba 02 00 00 00	 mov	 edx, 2
  00449	48 8b 8c 24 58
	01 00 00	 mov	 rcx, QWORD PTR tv239[rsp]
  00451	ff 50 20	 call	 QWORD PTR [rax+32]

; 125  :         return MFX_ERR_NULL_PTR;

  00454	c7 84 24 0c 01
	00 00 fe ff ff
	ff		 mov	 DWORD PTR $T12[rsp], -2
  0045f	48 8b 8c 24 e8
	01 00 00	 mov	 rcx, QWORD PTR pQSVLog$[rsp]
  00467	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0046c	8b 84 24 0c 01
	00 00		 mov	 eax, DWORD PTR $T12[rsp]
  00473	e9 7d 03 00 00	 jmp	 $LN1@Init
$LN4@Init:

; 126  :     }
; 127  :     m_pD3DDevice9.reset(pD3DD9);

  00478	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00480	48 83 c0 20	 add	 rax, 32			; 00000020H
  00484	48 8b 94 24 a8
	00 00 00	 mov	 rdx, QWORD PTR pD3DD9$[rsp]
  0048c	48 8b c8	 mov	 rcx, rax
  0048f	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3DDevice9Ex@@@Z ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::reset

; 128  :     m_pQSVLog->write(RGY_LOG_DEBUG, _T("D3D9Device: CreateDeviceEx Success.\n"));

  00494	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0049c	48 83 c0 08	 add	 rax, 8
  004a0	48 8b c8	 mov	 rcx, rax
  004a3	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  004a8	48 89 84 24 60
	01 00 00	 mov	 QWORD PTR tv256[rsp], rax
  004b0	48 8b 84 24 60
	01 00 00	 mov	 rax, QWORD PTR tv256[rsp]
  004b8	48 8b 00	 mov	 rax, QWORD PTR [rax]
  004bb	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG124199
  004c2	ba fe ff ff ff	 mov	 edx, -2
  004c7	48 8b 8c 24 60
	01 00 00	 mov	 rcx, QWORD PTR tv256[rsp]
  004cf	ff 50 20	 call	 QWORD PTR [rax+32]

; 129  : 
; 130  :     if (hWindow) {

  004d2	48 83 bc 24 d8
	01 00 00 00	 cmp	 QWORD PTR hWindow$[rsp], 0
  004db	0f 84 e1 00 00
	00		 je	 $LN5@Init

; 131  :         if (   FAILED(m_pD3DDevice9->ResetEx(&m_D3DPresentPrm, NULL))
; 132  :             || FAILED(m_pD3DDevice9->Clear(0, NULL, D3DCLEAR_TARGET, D3DCOLOR_XRGB(0, 0, 0), 1.0f, 0))) {

  004e1	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  004e9	48 83 c0 20	 add	 rax, 32			; 00000020H
  004ed	48 8b c8	 mov	 rcx, rax
  004f0	e8 00 00 00 00	 call	 ??C?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDevice9Ex@@XZ ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::operator->
  004f5	48 89 84 24 68
	01 00 00	 mov	 QWORD PTR tv266[rsp], rax
  004fd	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00505	48 83 c0 40	 add	 rax, 64			; 00000040H
  00509	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR tv266[rsp]
  00511	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00514	48 89 8c 24 70
	01 00 00	 mov	 QWORD PTR tv386[rsp], rcx
  0051c	45 33 c0	 xor	 r8d, r8d
  0051f	48 8b d0	 mov	 rdx, rax
  00522	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR tv266[rsp]
  0052a	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR tv386[rsp]
  00532	ff 90 20 04 00
	00		 call	 QWORD PTR [rax+1056]
  00538	85 c0		 test	 eax, eax
  0053a	7c 62		 jl	 SHORT $LN7@Init
  0053c	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00544	48 83 c0 20	 add	 rax, 32			; 00000020H
  00548	48 8b c8	 mov	 rcx, rax
  0054b	e8 00 00 00 00	 call	 ??C?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDevice9Ex@@XZ ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::operator->
  00550	48 89 84 24 78
	01 00 00	 mov	 QWORD PTR tv282[rsp], rax
  00558	48 8b 84 24 78
	01 00 00	 mov	 rax, QWORD PTR tv282[rsp]
  00560	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00563	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR [rsp+48], 0
  0056b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00573	f3 0f 11 44 24
	28		 movss	 DWORD PTR [rsp+40], xmm0
  00579	c7 44 24 20 00
	00 00 ff	 mov	 DWORD PTR [rsp+32], -16777216 ; ff000000H
  00581	41 b9 01 00 00
	00		 mov	 r9d, 1
  00587	45 33 c0	 xor	 r8d, r8d
  0058a	33 d2		 xor	 edx, edx
  0058c	48 8b 8c 24 78
	01 00 00	 mov	 rcx, QWORD PTR tv282[rsp]
  00594	ff 90 58 01 00
	00		 call	 QWORD PTR [rax+344]
  0059a	85 c0		 test	 eax, eax
  0059c	7d 24		 jge	 SHORT $LN5@Init
$LN7@Init:

; 133  :             return MFX_ERR_UNDEFINED_BEHAVIOR;

  0059e	c7 84 24 10 01
	00 00 f0 ff ff
	ff		 mov	 DWORD PTR $T13[rsp], -16
  005a9	48 8b 8c 24 e8
	01 00 00	 mov	 rcx, QWORD PTR pQSVLog$[rsp]
  005b1	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  005b6	8b 84 24 10 01
	00 00		 mov	 eax, DWORD PTR $T13[rsp]
  005bd	e9 33 02 00 00	 jmp	 $LN1@Init
$LN5@Init:

; 134  :         }
; 135  :     }
; 136  :     UINT resetToken = 0;

  005c2	c7 84 24 c4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR resetToken$[rsp], 0

; 137  :     IDirect3DDeviceManager9 *pDeviceManager9 = nullptr;

  005cd	48 c7 84 24 e8
	00 00 00 00 00
	00 00		 mov	 QWORD PTR pDeviceManager9$[rsp], 0

; 138  :     if (FAILED(DXVA2CreateDirect3DDeviceManager9(&resetToken, &pDeviceManager9))) {

  005d9	48 8d 94 24 e8
	00 00 00	 lea	 rdx, QWORD PTR pDeviceManager9$[rsp]
  005e1	48 8d 8c 24 c4
	00 00 00	 lea	 rcx, QWORD PTR resetToken$[rsp]
  005e9	e8 00 00 00 00	 call	 DXVA2CreateDirect3DDeviceManager9
  005ee	85 c0		 test	 eax, eax
  005f0	7d 67		 jge	 SHORT $LN8@Init

; 139  :         m_pQSVLog->write(RGY_LOG_ERROR, _T("D3D9Device: Failed DXVA2CreateDirect3DDeviceManager9: %d.\n"), hr);

  005f2	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  005fa	48 83 c0 08	 add	 rax, 8
  005fe	48 8b c8	 mov	 rcx, rax
  00601	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  00606	48 89 84 24 80
	01 00 00	 mov	 QWORD PTR tv305[rsp], rax
  0060e	48 8b 84 24 80
	01 00 00	 mov	 rax, QWORD PTR tv305[rsp]
  00616	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00619	44 8b 4c 24 44	 mov	 r9d, DWORD PTR hr$[rsp]
  0061e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG124205
  00625	ba 02 00 00 00	 mov	 edx, 2
  0062a	48 8b 8c 24 80
	01 00 00	 mov	 rcx, QWORD PTR tv305[rsp]
  00632	ff 50 20	 call	 QWORD PTR [rax+32]

; 140  :         return MFX_ERR_NULL_PTR;

  00635	c7 84 24 14 01
	00 00 fe ff ff
	ff		 mov	 DWORD PTR $T14[rsp], -2
  00640	48 8b 8c 24 e8
	01 00 00	 mov	 rcx, QWORD PTR pQSVLog$[rsp]
  00648	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0064d	8b 84 24 14 01
	00 00		 mov	 eax, DWORD PTR $T14[rsp]
  00654	e9 9c 01 00 00	 jmp	 $LN1@Init
$LN8@Init:

; 141  :     }
; 142  :     m_pD3DDeviceManager9.reset(pDeviceManager9);

  00659	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00661	48 83 c0 28	 add	 rax, 40			; 00000028H
  00665	48 8b 94 24 e8
	00 00 00	 mov	 rdx, QWORD PTR pDeviceManager9$[rsp]
  0066d	48 8b c8	 mov	 rcx, rax
  00670	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAAXPEAUIDirect3DDeviceManager9@@@Z ; std::unique_ptr<IDirect3DDeviceManager9,IUnknown_release>::reset

; 143  :     m_pQSVLog->write(RGY_LOG_DEBUG, _T("D3D9Device: DXVA2CreateDirect3DDeviceManager9 Success.\n"));

  00675	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0067d	48 83 c0 08	 add	 rax, 8
  00681	48 8b c8	 mov	 rcx, rax
  00684	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  00689	48 89 84 24 88
	01 00 00	 mov	 QWORD PTR tv322[rsp], rax
  00691	48 8b 84 24 88
	01 00 00	 mov	 rax, QWORD PTR tv322[rsp]
  00699	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0069c	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG124207
  006a3	ba fe ff ff ff	 mov	 edx, -2
  006a8	48 8b 8c 24 88
	01 00 00	 mov	 rcx, QWORD PTR tv322[rsp]
  006b0	ff 50 20	 call	 QWORD PTR [rax+32]

; 144  : 
; 145  :     if (FAILED(hr = m_pD3DDeviceManager9->ResetDevice(m_pD3DDevice9.get(), resetToken))) {

  006b3	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  006bb	48 83 c0 28	 add	 rax, 40			; 00000028H
  006bf	48 8b c8	 mov	 rcx, rax
  006c2	e8 00 00 00 00	 call	 ??C?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDeviceManager9@@XZ ; std::unique_ptr<IDirect3DDeviceManager9,IUnknown_release>::operator->
  006c7	48 89 84 24 90
	01 00 00	 mov	 QWORD PTR tv331[rsp], rax
  006cf	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  006d7	48 83 c0 20	 add	 rax, 32			; 00000020H
  006db	48 8b c8	 mov	 rcx, rax
  006de	e8 00 00 00 00	 call	 ?get@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEBAPEAUIDirect3DDevice9Ex@@XZ ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::get
  006e3	48 8b 8c 24 90
	01 00 00	 mov	 rcx, QWORD PTR tv331[rsp]
  006eb	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  006ee	48 89 8c 24 98
	01 00 00	 mov	 QWORD PTR tv382[rsp], rcx
  006f6	44 8b 84 24 c4
	00 00 00	 mov	 r8d, DWORD PTR resetToken$[rsp]
  006fe	48 8b d0	 mov	 rdx, rax
  00701	48 8b 8c 24 90
	01 00 00	 mov	 rcx, QWORD PTR tv331[rsp]
  00709	48 8b 84 24 98
	01 00 00	 mov	 rax, QWORD PTR tv382[rsp]
  00711	ff 50 18	 call	 QWORD PTR [rax+24]
  00714	89 44 24 44	 mov	 DWORD PTR hr$[rsp], eax
  00718	83 7c 24 44 00	 cmp	 DWORD PTR hr$[rsp], 0
  0071d	7d 64		 jge	 SHORT $LN9@Init

; 146  :         m_pQSVLog->write(RGY_LOG_ERROR, _T("D3D9Device: Failed ResetDevice: %d.\n"), hr);

  0071f	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00727	48 83 c0 08	 add	 rax, 8
  0072b	48 8b c8	 mov	 rcx, rax
  0072e	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  00733	48 89 84 24 a0
	01 00 00	 mov	 QWORD PTR tv353[rsp], rax
  0073b	48 8b 84 24 a0
	01 00 00	 mov	 rax, QWORD PTR tv353[rsp]
  00743	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00746	44 8b 4c 24 44	 mov	 r9d, DWORD PTR hr$[rsp]
  0074b	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG124209
  00752	ba 02 00 00 00	 mov	 edx, 2
  00757	48 8b 8c 24 a0
	01 00 00	 mov	 rcx, QWORD PTR tv353[rsp]
  0075f	ff 50 20	 call	 QWORD PTR [rax+32]

; 147  :         return MFX_ERR_UNDEFINED_BEHAVIOR;

  00762	c7 84 24 18 01
	00 00 f0 ff ff
	ff		 mov	 DWORD PTR $T15[rsp], -16
  0076d	48 8b 8c 24 e8
	01 00 00	 mov	 rcx, QWORD PTR pQSVLog$[rsp]
  00775	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0077a	8b 84 24 18 01
	00 00		 mov	 eax, DWORD PTR $T15[rsp]
  00781	eb 72		 jmp	 SHORT $LN1@Init
$LN9@Init:

; 148  :     }
; 149  :     m_pQSVLog->write(RGY_LOG_DEBUG, _T("D3D9Device: ResetDevice Success.\n"));

  00783	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0078b	48 83 c0 08	 add	 rax, 8
  0078f	48 8b c8	 mov	 rcx, rax
  00792	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  00797	48 89 84 24 a8
	01 00 00	 mov	 QWORD PTR tv367[rsp], rax
  0079f	48 8b 84 24 a8
	01 00 00	 mov	 rax, QWORD PTR tv367[rsp]
  007a7	48 8b 00	 mov	 rax, QWORD PTR [rax]
  007aa	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG124211
  007b1	ba fe ff ff ff	 mov	 edx, -2
  007b6	48 8b 8c 24 a8
	01 00 00	 mov	 rcx, QWORD PTR tv367[rsp]
  007be	ff 50 20	 call	 QWORD PTR [rax+32]

; 150  : 
; 151  :     m_resetToken = resetToken;

  007c1	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  007c9	8b 8c 24 c4 00
	00 00		 mov	 ecx, DWORD PTR resetToken$[rsp]
  007d0	89 88 80 00 00
	00		 mov	 DWORD PTR [rax+128], ecx

; 152  : 
; 153  :     return sts;

  007d6	8b 44 24 40	 mov	 eax, DWORD PTR sts$[rsp]
  007da	89 84 24 1c 01
	00 00		 mov	 DWORD PTR $T16[rsp], eax
  007e1	48 8b 8c 24 e8
	01 00 00	 mov	 rcx, QWORD PTR pQSVLog$[rsp]
  007e9	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  007ee	8b 84 24 1c 01
	00 00		 mov	 eax, DWORD PTR $T16[rsp]
$LN1@Init:

; 154  : }

  007f5	48 8b f8	 mov	 rdi, rax
  007f8	48 8b cc	 mov	 rcx, rsp
  007fb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z$rtcFrameData
  00802	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00807	48 8b c7	 mov	 rax, rdi
  0080a	48 8b 8c 24 b0
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00812	48 33 cc	 xor	 rcx, rsp
  00815	e8 00 00 00 00	 call	 __security_check_cookie
  0081a	48 81 c4 c0 01
	00 00		 add	 rsp, 448		; 000001c0H
  00821	5f		 pop	 rdi
  00822	c3		 ret	 0
?Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z ENDP ; CQSVD3D9Device::Init
_TEXT	ENDS
text$x	SEGMENT
sts$ = 64
hr$ = 68
pD3D9$ = 88
r$8 = 120
pD3DD9$ = 168
resetToken$ = 196
pDeviceManager9$ = 232
$T9 = 256
$T10 = 260
$T11 = 264
$T12 = 268
$T13 = 272
$T14 = 276
$T15 = 280
$T16 = 284
tv68 = 288
tv92 = 296
tv141 = 304
tv166 = 312
tv202 = 320
tv218 = 328
tv389 = 336
tv239 = 344
tv256 = 352
tv266 = 360
tv386 = 368
tv282 = 376
tv305 = 384
tv322 = 392
tv331 = 400
tv382 = 408
tv353 = 416
tv367 = 424
__$ArrayPad$ = 432
this$ = 464
hWindow$ = 472
nAdapterNum$ = 480
pQSVLog$ = 488
?dtor$0@?0??Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z@4HA PROC ; `CQSVD3D9Device::Init'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d e8 01
	00 00		 mov	 rcx, QWORD PTR pQSVLog$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z@4HA ENDP ; `CQSVD3D9Device::Init'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
sts$ = 64
hr$ = 68
pD3D9$ = 88
r$8 = 120
pD3DD9$ = 168
resetToken$ = 196
pDeviceManager9$ = 232
$T9 = 256
$T10 = 260
$T11 = 264
$T12 = 268
$T13 = 272
$T14 = 276
$T15 = 280
$T16 = 284
tv68 = 288
tv92 = 296
tv141 = 304
tv166 = 312
tv202 = 320
tv218 = 328
tv389 = 336
tv239 = 344
tv256 = 352
tv266 = 360
tv386 = 368
tv282 = 376
tv305 = 384
tv322 = 392
tv331 = 400
tv382 = 408
tv353 = 416
tv367 = 424
__$ArrayPad$ = 432
this$ = 464
hWindow$ = 472
nAdapterNum$ = 480
pQSVLog$ = 488
?dtor$0@?0??Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z@4HA PROC ; `CQSVD3D9Device::Init'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d e8 01
	00 00		 mov	 rcx, QWORD PTR pQSVLog$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??Init@CQSVD3D9Device@@UEAA?AW4mfxStatus@@PEAXIV?$shared_ptr@VRGYLog@@@std@@@Z@4HA ENDP ; `CQSVD3D9Device::Init'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_hw_d3d9.cpp
_TEXT	SEGMENT
this$ = 48
??1CQSVD3D9Device@@UEAA@XZ PROC				; CQSVD3D9Device::~CQSVD3D9Device

; 192  : CQSVD3D9Device::~CQSVD3D9Device() {

$LN9:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7CQSVD3D9Device@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 193  :     Close();

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?Close@CQSVD3D9Device@@UEAAXXZ ; CQSVD3D9Device::Close
  00037	90		 npad	 1

; 194  : }

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 83 c0 38	 add	 rax, 56			; 00000038H
  00041	48 8b c8	 mov	 rcx, rax
  00044	e8 00 00 00 00	 call	 ??1?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirectXVideoProcessor,IUnknown_release>::~unique_ptr<IDirectXVideoProcessor,IUnknown_release>
  00049	90		 npad	 1
  0004a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004f	48 83 c0 30	 add	 rax, 48			; 00000030H
  00053	48 8b c8	 mov	 rcx, rax
  00056	e8 00 00 00 00	 call	 ??1?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirectXVideoProcessorService,IUnknown_release>::~unique_ptr<IDirectXVideoProcessorService,IUnknown_release>
  0005b	90		 npad	 1
  0005c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00061	48 83 c0 28	 add	 rax, 40			; 00000028H
  00065	48 8b c8	 mov	 rcx, rax
  00068	e8 00 00 00 00	 call	 ??1?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirect3DDeviceManager9,IUnknown_release>::~unique_ptr<IDirect3DDeviceManager9,IUnknown_release>
  0006d	90		 npad	 1
  0006e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00073	48 83 c0 20	 add	 rax, 32			; 00000020H
  00077	48 8b c8	 mov	 rcx, rax
  0007a	e8 00 00 00 00	 call	 ??1?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::~unique_ptr<IDirect3DDevice9Ex,IUnknown_release>
  0007f	90		 npad	 1
  00080	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00085	48 83 c0 18	 add	 rax, 24
  00089	48 8b c8	 mov	 rcx, rax
  0008c	e8 00 00 00 00	 call	 ??1?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirect3D9Ex,IUnknown_release>::~unique_ptr<IDirect3D9Ex,IUnknown_release>
  00091	90		 npad	 1
  00092	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00097	e8 00 00 00 00	 call	 ??1CQSVHWDevice@@UEAA@XZ ; CQSVHWDevice::~CQSVHWDevice
  0009c	90		 npad	 1
  0009d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000a1	5f		 pop	 rdi
  000a2	c3		 ret	 0
??1CQSVD3D9Device@@UEAA@XZ ENDP				; CQSVD3D9Device::~CQSVD3D9Device
_TEXT	ENDS
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1CQSVD3D9Device@@UEAA@XZ@4HA PROC		; `CQSVD3D9Device::~CQSVD3D9Device'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1CQSVHWDevice@@UEAA@XZ ; CQSVHWDevice::~CQSVHWDevice
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1CQSVD3D9Device@@UEAA@XZ@4HA ENDP		; `CQSVD3D9Device::~CQSVD3D9Device'::`1'::dtor$0
this$ = 48
?dtor$1@?0???1CQSVD3D9Device@@UEAA@XZ@4HA PROC		; `CQSVD3D9Device::~CQSVD3D9Device'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003a	48 83 c1 18	 add	 rcx, 24
  0003e	e8 00 00 00 00	 call	 ??1?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirect3D9Ex,IUnknown_release>::~unique_ptr<IDirect3D9Ex,IUnknown_release>
  00043	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00047	5f		 pop	 rdi
  00048	5d		 pop	 rbp
  00049	c3		 ret	 0
?dtor$1@?0???1CQSVD3D9Device@@UEAA@XZ@4HA ENDP		; `CQSVD3D9Device::~CQSVD3D9Device'::`1'::dtor$1
this$ = 48
?dtor$2@?0???1CQSVD3D9Device@@UEAA@XZ@4HA PROC		; `CQSVD3D9Device::~CQSVD3D9Device'::`1'::dtor$2
  0004a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00054	55		 push	 rbp
  00055	57		 push	 rdi
  00056	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005a	48 8b ea	 mov	 rbp, rdx
  0005d	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00061	48 83 c1 20	 add	 rcx, 32			; 00000020H
  00065	e8 00 00 00 00	 call	 ??1?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::~unique_ptr<IDirect3DDevice9Ex,IUnknown_release>
  0006a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006e	5f		 pop	 rdi
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
?dtor$2@?0???1CQSVD3D9Device@@UEAA@XZ@4HA ENDP		; `CQSVD3D9Device::~CQSVD3D9Device'::`1'::dtor$2
this$ = 48
?dtor$3@?0???1CQSVD3D9Device@@UEAA@XZ@4HA PROC		; `CQSVD3D9Device::~CQSVD3D9Device'::`1'::dtor$3
  00071	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00076	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0007b	55		 push	 rbp
  0007c	57		 push	 rdi
  0007d	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00081	48 8b ea	 mov	 rbp, rdx
  00084	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00088	48 83 c1 28	 add	 rcx, 40			; 00000028H
  0008c	e8 00 00 00 00	 call	 ??1?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirect3DDeviceManager9,IUnknown_release>::~unique_ptr<IDirect3DDeviceManager9,IUnknown_release>
  00091	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00095	5f		 pop	 rdi
  00096	5d		 pop	 rbp
  00097	c3		 ret	 0
?dtor$3@?0???1CQSVD3D9Device@@UEAA@XZ@4HA ENDP		; `CQSVD3D9Device::~CQSVD3D9Device'::`1'::dtor$3
this$ = 48
?dtor$4@?0???1CQSVD3D9Device@@UEAA@XZ@4HA PROC		; `CQSVD3D9Device::~CQSVD3D9Device'::`1'::dtor$4
  00098	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0009d	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000a2	55		 push	 rbp
  000a3	57		 push	 rdi
  000a4	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a8	48 8b ea	 mov	 rbp, rdx
  000ab	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000af	48 83 c1 30	 add	 rcx, 48			; 00000030H
  000b3	e8 00 00 00 00	 call	 ??1?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirectXVideoProcessorService,IUnknown_release>::~unique_ptr<IDirectXVideoProcessorService,IUnknown_release>
  000b8	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000bc	5f		 pop	 rdi
  000bd	5d		 pop	 rbp
  000be	c3		 ret	 0
?dtor$4@?0???1CQSVD3D9Device@@UEAA@XZ@4HA ENDP		; `CQSVD3D9Device::~CQSVD3D9Device'::`1'::dtor$4
this$ = 48
?dtor$5@?0???1CQSVD3D9Device@@UEAA@XZ@4HA PROC		; `CQSVD3D9Device::~CQSVD3D9Device'::`1'::dtor$5
  000bf	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000c4	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000c9	55		 push	 rbp
  000ca	57		 push	 rdi
  000cb	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000cf	48 8b ea	 mov	 rbp, rdx
  000d2	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000d6	48 83 c1 38	 add	 rcx, 56			; 00000038H
  000da	e8 00 00 00 00	 call	 ??1?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirectXVideoProcessor,IUnknown_release>::~unique_ptr<IDirectXVideoProcessor,IUnknown_release>
  000df	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000e3	5f		 pop	 rdi
  000e4	5d		 pop	 rbp
  000e5	c3		 ret	 0
?dtor$5@?0???1CQSVD3D9Device@@UEAA@XZ@4HA ENDP		; `CQSVD3D9Device::~CQSVD3D9Device'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1CQSVD3D9Device@@UEAA@XZ@4HA PROC		; `CQSVD3D9Device::~CQSVD3D9Device'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1CQSVHWDevice@@UEAA@XZ ; CQSVHWDevice::~CQSVHWDevice
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1CQSVD3D9Device@@UEAA@XZ@4HA ENDP		; `CQSVD3D9Device::~CQSVD3D9Device'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1CQSVD3D9Device@@UEAA@XZ@4HA PROC		; `CQSVD3D9Device::~CQSVD3D9Device'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003a	48 83 c1 18	 add	 rcx, 24
  0003e	e8 00 00 00 00	 call	 ??1?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirect3D9Ex,IUnknown_release>::~unique_ptr<IDirect3D9Ex,IUnknown_release>
  00043	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00047	5f		 pop	 rdi
  00048	5d		 pop	 rbp
  00049	c3		 ret	 0
?dtor$1@?0???1CQSVD3D9Device@@UEAA@XZ@4HA ENDP		; `CQSVD3D9Device::~CQSVD3D9Device'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$2@?0???1CQSVD3D9Device@@UEAA@XZ@4HA PROC		; `CQSVD3D9Device::~CQSVD3D9Device'::`1'::dtor$2
  0004a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00054	55		 push	 rbp
  00055	57		 push	 rdi
  00056	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005a	48 8b ea	 mov	 rbp, rdx
  0005d	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00061	48 83 c1 20	 add	 rcx, 32			; 00000020H
  00065	e8 00 00 00 00	 call	 ??1?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::~unique_ptr<IDirect3DDevice9Ex,IUnknown_release>
  0006a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006e	5f		 pop	 rdi
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
?dtor$2@?0???1CQSVD3D9Device@@UEAA@XZ@4HA ENDP		; `CQSVD3D9Device::~CQSVD3D9Device'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$3@?0???1CQSVD3D9Device@@UEAA@XZ@4HA PROC		; `CQSVD3D9Device::~CQSVD3D9Device'::`1'::dtor$3
  00071	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00076	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0007b	55		 push	 rbp
  0007c	57		 push	 rdi
  0007d	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00081	48 8b ea	 mov	 rbp, rdx
  00084	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00088	48 83 c1 28	 add	 rcx, 40			; 00000028H
  0008c	e8 00 00 00 00	 call	 ??1?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirect3DDeviceManager9,IUnknown_release>::~unique_ptr<IDirect3DDeviceManager9,IUnknown_release>
  00091	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00095	5f		 pop	 rdi
  00096	5d		 pop	 rbp
  00097	c3		 ret	 0
?dtor$3@?0???1CQSVD3D9Device@@UEAA@XZ@4HA ENDP		; `CQSVD3D9Device::~CQSVD3D9Device'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$4@?0???1CQSVD3D9Device@@UEAA@XZ@4HA PROC		; `CQSVD3D9Device::~CQSVD3D9Device'::`1'::dtor$4
  00098	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0009d	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000a2	55		 push	 rbp
  000a3	57		 push	 rdi
  000a4	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a8	48 8b ea	 mov	 rbp, rdx
  000ab	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000af	48 83 c1 30	 add	 rcx, 48			; 00000030H
  000b3	e8 00 00 00 00	 call	 ??1?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirectXVideoProcessorService,IUnknown_release>::~unique_ptr<IDirectXVideoProcessorService,IUnknown_release>
  000b8	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000bc	5f		 pop	 rdi
  000bd	5d		 pop	 rbp
  000be	c3		 ret	 0
?dtor$4@?0???1CQSVD3D9Device@@UEAA@XZ@4HA ENDP		; `CQSVD3D9Device::~CQSVD3D9Device'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$5@?0???1CQSVD3D9Device@@UEAA@XZ@4HA PROC		; `CQSVD3D9Device::~CQSVD3D9Device'::`1'::dtor$5
  000bf	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000c4	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000c9	55		 push	 rbp
  000ca	57		 push	 rdi
  000cb	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000cf	48 8b ea	 mov	 rbp, rdx
  000d2	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000d6	48 83 c1 38	 add	 rcx, 56			; 00000038H
  000da	e8 00 00 00 00	 call	 ??1?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirectXVideoProcessor,IUnknown_release>::~unique_ptr<IDirectXVideoProcessor,IUnknown_release>
  000df	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000e3	5f		 pop	 rdi
  000e4	5d		 pop	 rbp
  000e5	c3		 ret	 0
?dtor$5@?0???1CQSVD3D9Device@@UEAA@XZ@4HA ENDP		; `CQSVD3D9Device::~CQSVD3D9Device'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_hw_d3d9.cpp
_TEXT	SEGMENT
color$ = 40
format$ = 68
this$ = 112
??0CQSVD3D9Device@@QEAA@XZ PROC				; CQSVD3D9Device::CQSVD3D9Device

; 32   : CQSVD3D9Device::CQSVD3D9Device() {

$LN9:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 18 00 00 00	 mov	 ecx, 24
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]
  0001e	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0CQSVHWDevice@@QEAA@XZ ; CQSVHWDevice::CQSVHWDevice
  00028	90		 npad	 1
  00029	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7CQSVD3D9Device@@6B@
  00035	48 89 08	 mov	 QWORD PTR [rax], rcx
  00038	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 83 c0 18	 add	 rax, 24
  00041	48 8b c8	 mov	 rcx, rax
  00044	e8 00 00 00 00	 call	 ??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirect3D9Ex,IUnknown_release>::unique_ptr<IDirect3D9Ex,IUnknown_release><IUnknown_release,0>
  00049	90		 npad	 1
  0004a	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0004f	48 83 c0 20	 add	 rax, 32			; 00000020H
  00053	48 8b c8	 mov	 rcx, rax
  00056	e8 00 00 00 00	 call	 ??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::unique_ptr<IDirect3DDevice9Ex,IUnknown_release><IUnknown_release,0>
  0005b	90		 npad	 1
  0005c	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00061	48 83 c0 28	 add	 rax, 40			; 00000028H
  00065	48 8b c8	 mov	 rcx, rax
  00068	e8 00 00 00 00	 call	 ??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirect3DDeviceManager9,IUnknown_release>::unique_ptr<IDirect3DDeviceManager9,IUnknown_release><IUnknown_release,0>
  0006d	90		 npad	 1
  0006e	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00073	48 83 c0 30	 add	 rax, 48			; 00000030H
  00077	48 8b c8	 mov	 rcx, rax
  0007a	e8 00 00 00 00	 call	 ??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirectXVideoProcessorService,IUnknown_release>::unique_ptr<IDirectXVideoProcessorService,IUnknown_release><IUnknown_release,0>
  0007f	90		 npad	 1
  00080	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00085	48 83 c0 38	 add	 rax, 56			; 00000038H
  00089	48 8b c8	 mov	 rcx, rax
  0008c	e8 00 00 00 00	 call	 ??$?0UIUnknown_release@@$0A@@?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirectXVideoProcessor,IUnknown_release>::unique_ptr<IDirectXVideoProcessor,IUnknown_release><IUnknown_release,0>
  00091	90		 npad	 1

; 33   :     RGY_MEMSET_ZERO(m_D3DPresentPrm);

  00092	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00097	48 83 c0 40	 add	 rax, 64			; 00000040H
  0009b	41 b8 40 00 00
	00		 mov	 r8d, 64			; 00000040H
  000a1	33 d2		 xor	 edx, edx
  000a3	48 8b c8	 mov	 rcx, rax
  000a6	e8 00 00 00 00	 call	 memset

; 34   :     m_resetToken = 0;

  000ab	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000b0	c7 80 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+128], 0

; 35   : 
; 36   :     RGY_MEMSET_ZERO(m_backBufferDesc);

  000ba	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000bf	48 05 84 00 00
	00		 add	 rax, 132		; 00000084H
  000c5	41 b8 20 00 00
	00		 mov	 r8d, 32			; 00000020H
  000cb	33 d2		 xor	 edx, edx
  000cd	48 8b c8	 mov	 rcx, rax
  000d0	e8 00 00 00 00	 call	 memset

; 37   :     RGY_MEMSET_ZERO(m_targetRect);

  000d5	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000da	48 05 a4 00 00
	00		 add	 rax, 164		; 000000a4H
  000e0	41 b8 10 00 00
	00		 mov	 r8d, 16
  000e6	33 d2		 xor	 edx, edx
  000e8	48 8b c8	 mov	 rcx, rax
  000eb	e8 00 00 00 00	 call	 memset

; 38   :     RGY_MEMSET_ZERO(m_VideoDesc);

  000f0	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000f5	48 05 b4 00 00
	00		 add	 rax, 180		; 000000b4H
  000fb	41 b8 28 00 00
	00		 mov	 r8d, 40			; 00000028H
  00101	33 d2		 xor	 edx, edx
  00103	48 8b c8	 mov	 rcx, rax
  00106	e8 00 00 00 00	 call	 memset

; 39   :     RGY_MEMSET_ZERO(m_BltParams);

  0010b	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00110	48 05 e0 00 00
	00		 add	 rax, 224		; 000000e0H
  00116	41 b8 78 00 00
	00		 mov	 r8d, 120		; 00000078H
  0011c	33 d2		 xor	 edx, edx
  0011e	48 8b c8	 mov	 rcx, rax
  00121	e8 00 00 00 00	 call	 memset

; 40   :     RGY_MEMSET_ZERO(m_Sample);

  00126	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0012b	48 05 58 01 00
	00		 add	 rax, 344		; 00000158H
  00131	41 b8 88 00 00
	00		 mov	 r8d, 136		; 00000088H
  00137	33 d2		 xor	 edx, edx
  00139	48 8b c8	 mov	 rcx, rax
  0013c	e8 00 00 00 00	 call	 memset

; 41   : 
; 42   :     DXVA2_AYUVSample16 color = {
; 43   :         0x8000,          // Cr

  00141	b8 00 80 00 00	 mov	 eax, 32768		; 00008000H
  00146	66 89 44 24 28	 mov	 WORD PTR color$[rsp], ax

; 44   :         0x8000,          // Cb

  0014b	b8 00 80 00 00	 mov	 eax, 32768		; 00008000H
  00150	66 89 44 24 2a	 mov	 WORD PTR color$[rsp+2], ax

; 45   :         0x1000,          // Y

  00155	b8 00 10 00 00	 mov	 eax, 4096		; 00001000H
  0015a	66 89 44 24 2c	 mov	 WORD PTR color$[rsp+4], ax

; 46   :         0xffff           // Alpha

  0015f	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  00164	66 89 44 24 2e	 mov	 WORD PTR color$[rsp+6], ax

; 47   :     };
; 48   : 
; 49   :     DXVA2_ExtendedFormat format =   {           // DestFormat

  00169	c7 44 24 44 02
	95 84 28	 mov	 DWORD PTR format$[rsp], 679777538 ; 28849502H

; 50   :         DXVA2_SampleProgressiveFrame,           // SampleFormat
; 51   :         DXVA2_VideoChromaSubsampling_MPEG2,     // VideoChromaSubsampling
; 52   :         DXVA_NominalRange_0_255,                // NominalRange
; 53   :         DXVA2_VideoTransferMatrix_BT709,        // VideoTransferMatrix
; 54   :         DXVA2_VideoLighting_bright,             // VideoLighting
; 55   :         DXVA2_VideoPrimaries_BT709,             // VideoPrimaries
; 56   :         DXVA2_VideoTransFunc_709                // VideoTransferFunction
; 57   :     };
; 58   : 
; 59   :     memcpy(&m_VideoDesc.SampleFormat, &format, sizeof(DXVA2_ExtendedFormat));

  00171	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00176	48 05 bc 00 00
	00		 add	 rax, 188		; 000000bcH
  0017c	41 b8 04 00 00
	00		 mov	 r8d, 4
  00182	48 8d 54 24 44	 lea	 rdx, QWORD PTR format$[rsp]
  00187	48 8b c8	 mov	 rcx, rax
  0018a	e8 00 00 00 00	 call	 memcpy

; 60   :     m_VideoDesc.SampleWidth                         = 0;

  0018f	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00194	c7 80 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+180], 0

; 61   :     m_VideoDesc.SampleHeight                        = 0;

  0019e	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  001a3	c7 80 b8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+184], 0

; 62   :     m_VideoDesc.InputSampleFreq.Numerator           = 60;

  001ad	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  001b2	c7 80 c4 00 00
	00 3c 00 00 00	 mov	 DWORD PTR [rax+196], 60	; 0000003cH

; 63   :     m_VideoDesc.InputSampleFreq.Denominator         = 1;

  001bc	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  001c1	c7 80 c8 00 00
	00 01 00 00 00	 mov	 DWORD PTR [rax+200], 1

; 64   :     m_VideoDesc.OutputFrameFreq.Numerator           = 60;

  001cb	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  001d0	c7 80 cc 00 00
	00 3c 00 00 00	 mov	 DWORD PTR [rax+204], 60	; 0000003cH

; 65   :     m_VideoDesc.OutputFrameFreq.Denominator         = 1;

  001da	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  001df	c7 80 d0 00 00
	00 01 00 00 00	 mov	 DWORD PTR [rax+208], 1

; 66   : 
; 67   :     memcpy(&m_BltParams.DestFormat, &format, sizeof(DXVA2_ExtendedFormat));

  001e9	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  001ee	48 05 0c 01 00
	00		 add	 rax, 268		; 0000010cH
  001f4	41 b8 04 00 00
	00		 mov	 r8d, 4
  001fa	48 8d 54 24 44	 lea	 rdx, QWORD PTR format$[rsp]
  001ff	48 8b c8	 mov	 rcx, rax
  00202	e8 00 00 00 00	 call	 memcpy

; 68   :     memcpy(&m_BltParams.BackgroundColor, &color, sizeof(DXVA2_AYUVSample16));

  00207	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0020c	48 05 04 01 00
	00		 add	 rax, 260		; 00000104H
  00212	41 b8 08 00 00
	00		 mov	 r8d, 8
  00218	48 8d 54 24 28	 lea	 rdx, QWORD PTR color$[rsp]
  0021d	48 8b c8	 mov	 rcx, rax
  00220	e8 00 00 00 00	 call	 memcpy

; 69   : 
; 70   :     m_Sample.Start = 0;

  00225	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0022a	48 c7 80 58 01
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+344], 0

; 71   :     m_Sample.End = 1;

  00235	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0023a	48 c7 80 60 01
	00 00 01 00 00
	00		 mov	 QWORD PTR [rax+352], 1

; 72   :     m_Sample.SampleFormat = format;

  00245	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0024a	8b 4c 24 44	 mov	 ecx, DWORD PTR format$[rsp]
  0024e	89 88 68 01 00
	00		 mov	 DWORD PTR [rax+360], ecx

; 73   :     m_Sample.PlanarAlpha.Fraction = 0;

  00254	33 c0		 xor	 eax, eax
  00256	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0025b	66 89 81 d8 01
	00 00		 mov	 WORD PTR [rcx+472], ax

; 74   :     m_Sample.PlanarAlpha.Value = 1;

  00262	b8 01 00 00 00	 mov	 eax, 1
  00267	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0026c	66 89 81 da 01
	00 00		 mov	 WORD PTR [rcx+474], ax

; 75   : 
; 76   :     m_bIsA2rgb10 = FALSE;

  00273	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00278	c7 80 e0 01 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+480], 0

; 77   : }

  00282	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00287	48 8b f8	 mov	 rdi, rax
  0028a	48 8b cc	 mov	 rcx, rsp
  0028d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??0CQSVD3D9Device@@QEAA@XZ$rtcFrameData
  00294	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00299	48 8b c7	 mov	 rax, rdi
  0029c	48 83 c4 60	 add	 rsp, 96			; 00000060H
  002a0	5f		 pop	 rdi
  002a1	c3		 ret	 0
??0CQSVD3D9Device@@QEAA@XZ ENDP				; CQSVD3D9Device::CQSVD3D9Device
_TEXT	ENDS
text$x	SEGMENT
color$ = 40
format$ = 68
this$ = 112
?dtor$0@?0???0CQSVD3D9Device@@QEAA@XZ@4HA PROC		; `CQSVD3D9Device::CQSVD3D9Device'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1CQSVHWDevice@@UEAA@XZ ; CQSVHWDevice::~CQSVHWDevice
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0CQSVD3D9Device@@QEAA@XZ@4HA ENDP		; `CQSVD3D9Device::CQSVD3D9Device'::`1'::dtor$0
color$ = 40
format$ = 68
this$ = 112
?dtor$1@?0???0CQSVD3D9Device@@QEAA@XZ@4HA PROC		; `CQSVD3D9Device::CQSVD3D9Device'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0003a	48 83 c1 18	 add	 rcx, 24
  0003e	e8 00 00 00 00	 call	 ??1?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirect3D9Ex,IUnknown_release>::~unique_ptr<IDirect3D9Ex,IUnknown_release>
  00043	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00047	5f		 pop	 rdi
  00048	5d		 pop	 rbp
  00049	c3		 ret	 0
?dtor$1@?0???0CQSVD3D9Device@@QEAA@XZ@4HA ENDP		; `CQSVD3D9Device::CQSVD3D9Device'::`1'::dtor$1
color$ = 40
format$ = 68
this$ = 112
?dtor$2@?0???0CQSVD3D9Device@@QEAA@XZ@4HA PROC		; `CQSVD3D9Device::CQSVD3D9Device'::`1'::dtor$2
  0004a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00054	55		 push	 rbp
  00055	57		 push	 rdi
  00056	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005a	48 8b ea	 mov	 rbp, rdx
  0005d	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00061	48 83 c1 20	 add	 rcx, 32			; 00000020H
  00065	e8 00 00 00 00	 call	 ??1?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::~unique_ptr<IDirect3DDevice9Ex,IUnknown_release>
  0006a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006e	5f		 pop	 rdi
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
?dtor$2@?0???0CQSVD3D9Device@@QEAA@XZ@4HA ENDP		; `CQSVD3D9Device::CQSVD3D9Device'::`1'::dtor$2
color$ = 40
format$ = 68
this$ = 112
?dtor$3@?0???0CQSVD3D9Device@@QEAA@XZ@4HA PROC		; `CQSVD3D9Device::CQSVD3D9Device'::`1'::dtor$3
  00071	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00076	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0007b	55		 push	 rbp
  0007c	57		 push	 rdi
  0007d	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00081	48 8b ea	 mov	 rbp, rdx
  00084	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00088	48 83 c1 28	 add	 rcx, 40			; 00000028H
  0008c	e8 00 00 00 00	 call	 ??1?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirect3DDeviceManager9,IUnknown_release>::~unique_ptr<IDirect3DDeviceManager9,IUnknown_release>
  00091	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00095	5f		 pop	 rdi
  00096	5d		 pop	 rbp
  00097	c3		 ret	 0
?dtor$3@?0???0CQSVD3D9Device@@QEAA@XZ@4HA ENDP		; `CQSVD3D9Device::CQSVD3D9Device'::`1'::dtor$3
color$ = 40
format$ = 68
this$ = 112
?dtor$4@?0???0CQSVD3D9Device@@QEAA@XZ@4HA PROC		; `CQSVD3D9Device::CQSVD3D9Device'::`1'::dtor$4
  00098	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0009d	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000a2	55		 push	 rbp
  000a3	57		 push	 rdi
  000a4	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a8	48 8b ea	 mov	 rbp, rdx
  000ab	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  000af	48 83 c1 30	 add	 rcx, 48			; 00000030H
  000b3	e8 00 00 00 00	 call	 ??1?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirectXVideoProcessorService,IUnknown_release>::~unique_ptr<IDirectXVideoProcessorService,IUnknown_release>
  000b8	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000bc	5f		 pop	 rdi
  000bd	5d		 pop	 rbp
  000be	c3		 ret	 0
?dtor$4@?0???0CQSVD3D9Device@@QEAA@XZ@4HA ENDP		; `CQSVD3D9Device::CQSVD3D9Device'::`1'::dtor$4
color$ = 40
format$ = 68
this$ = 112
?dtor$5@?0???0CQSVD3D9Device@@QEAA@XZ@4HA PROC		; `CQSVD3D9Device::CQSVD3D9Device'::`1'::dtor$5
  000bf	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000c4	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000c9	55		 push	 rbp
  000ca	57		 push	 rdi
  000cb	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000cf	48 8b ea	 mov	 rbp, rdx
  000d2	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  000d6	48 83 c1 38	 add	 rcx, 56			; 00000038H
  000da	e8 00 00 00 00	 call	 ??1?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirectXVideoProcessor,IUnknown_release>::~unique_ptr<IDirectXVideoProcessor,IUnknown_release>
  000df	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000e3	5f		 pop	 rdi
  000e4	5d		 pop	 rbp
  000e5	c3		 ret	 0
?dtor$5@?0???0CQSVD3D9Device@@QEAA@XZ@4HA ENDP		; `CQSVD3D9Device::CQSVD3D9Device'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
color$ = 40
format$ = 68
this$ = 112
?dtor$0@?0???0CQSVD3D9Device@@QEAA@XZ@4HA PROC		; `CQSVD3D9Device::CQSVD3D9Device'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1CQSVHWDevice@@UEAA@XZ ; CQSVHWDevice::~CQSVHWDevice
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0CQSVD3D9Device@@QEAA@XZ@4HA ENDP		; `CQSVD3D9Device::CQSVD3D9Device'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
color$ = 40
format$ = 68
this$ = 112
?dtor$1@?0???0CQSVD3D9Device@@QEAA@XZ@4HA PROC		; `CQSVD3D9Device::CQSVD3D9Device'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0003a	48 83 c1 18	 add	 rcx, 24
  0003e	e8 00 00 00 00	 call	 ??1?$unique_ptr@UIDirect3D9Ex@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirect3D9Ex,IUnknown_release>::~unique_ptr<IDirect3D9Ex,IUnknown_release>
  00043	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00047	5f		 pop	 rdi
  00048	5d		 pop	 rbp
  00049	c3		 ret	 0
?dtor$1@?0???0CQSVD3D9Device@@QEAA@XZ@4HA ENDP		; `CQSVD3D9Device::CQSVD3D9Device'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
color$ = 40
format$ = 68
this$ = 112
?dtor$2@?0???0CQSVD3D9Device@@QEAA@XZ@4HA PROC		; `CQSVD3D9Device::CQSVD3D9Device'::`1'::dtor$2
  0004a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00054	55		 push	 rbp
  00055	57		 push	 rdi
  00056	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005a	48 8b ea	 mov	 rbp, rdx
  0005d	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00061	48 83 c1 20	 add	 rcx, 32			; 00000020H
  00065	e8 00 00 00 00	 call	 ??1?$unique_ptr@UIDirect3DDevice9Ex@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirect3DDevice9Ex,IUnknown_release>::~unique_ptr<IDirect3DDevice9Ex,IUnknown_release>
  0006a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006e	5f		 pop	 rdi
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
?dtor$2@?0???0CQSVD3D9Device@@QEAA@XZ@4HA ENDP		; `CQSVD3D9Device::CQSVD3D9Device'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
color$ = 40
format$ = 68
this$ = 112
?dtor$3@?0???0CQSVD3D9Device@@QEAA@XZ@4HA PROC		; `CQSVD3D9Device::CQSVD3D9Device'::`1'::dtor$3
  00071	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00076	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0007b	55		 push	 rbp
  0007c	57		 push	 rdi
  0007d	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00081	48 8b ea	 mov	 rbp, rdx
  00084	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00088	48 83 c1 28	 add	 rcx, 40			; 00000028H
  0008c	e8 00 00 00 00	 call	 ??1?$unique_ptr@UIDirect3DDeviceManager9@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirect3DDeviceManager9,IUnknown_release>::~unique_ptr<IDirect3DDeviceManager9,IUnknown_release>
  00091	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00095	5f		 pop	 rdi
  00096	5d		 pop	 rbp
  00097	c3		 ret	 0
?dtor$3@?0???0CQSVD3D9Device@@QEAA@XZ@4HA ENDP		; `CQSVD3D9Device::CQSVD3D9Device'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
color$ = 40
format$ = 68
this$ = 112
?dtor$4@?0???0CQSVD3D9Device@@QEAA@XZ@4HA PROC		; `CQSVD3D9Device::CQSVD3D9Device'::`1'::dtor$4
  00098	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0009d	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000a2	55		 push	 rbp
  000a3	57		 push	 rdi
  000a4	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a8	48 8b ea	 mov	 rbp, rdx
  000ab	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  000af	48 83 c1 30	 add	 rcx, 48			; 00000030H
  000b3	e8 00 00 00 00	 call	 ??1?$unique_ptr@UIDirectXVideoProcessorService@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirectXVideoProcessorService,IUnknown_release>::~unique_ptr<IDirectXVideoProcessorService,IUnknown_release>
  000b8	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000bc	5f		 pop	 rdi
  000bd	5d		 pop	 rbp
  000be	c3		 ret	 0
?dtor$4@?0???0CQSVD3D9Device@@QEAA@XZ@4HA ENDP		; `CQSVD3D9Device::CQSVD3D9Device'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
color$ = 40
format$ = 68
this$ = 112
?dtor$5@?0???0CQSVD3D9Device@@QEAA@XZ@4HA PROC		; `CQSVD3D9Device::CQSVD3D9Device'::`1'::dtor$5
  000bf	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000c4	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000c9	55		 push	 rbp
  000ca	57		 push	 rdi
  000cb	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000cf	48 8b ea	 mov	 rbp, rdx
  000d2	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  000d6	48 83 c1 38	 add	 rcx, 56			; 00000038H
  000da	e8 00 00 00 00	 call	 ??1?$unique_ptr@UIDirectXVideoProcessor@@UIUnknown_release@@@std@@QEAA@XZ ; std::unique_ptr<IDirectXVideoProcessor,IUnknown_release>::~unique_ptr<IDirectXVideoProcessor,IUnknown_release>
  000df	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000e3	5f		 pop	 rdi
  000e4	5d		 pop	 rbp
  000e5	c3		 ret	 0
?dtor$5@?0???0CQSVD3D9Device@@QEAA@XZ@4HA ENDP		; `CQSVD3D9Device::CQSVD3D9Device'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_hw_d3d9.h
;	COMDAT ??RIUnknown_release@@QEBAXPEAUIUnknown@@@Z
_TEXT	SEGMENT
this$ = 48
m_pHandle$ = 56
??RIUnknown_release@@QEBAXPEAUIUnknown@@@Z PROC		; IUnknown_release::operator(), COMDAT

; 44   :     void operator()(IUnknown *m_pHandle) const {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 45   :         m_pHandle->Release();

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR m_pHandle$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR m_pHandle$[rsp]
  00030	ff 50 10	 call	 QWORD PTR [rax+16]

; 46   :     }

  00033	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00037	5f		 pop	 rdi
  00038	c3		 ret	 0
??RIUnknown_release@@QEBAXPEAUIUnknown@@@Z ENDP		; IUnknown_release::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCQSVHWDevice@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GCQSVHWDevice@@UEAAPEAXI@Z PROC			; CQSVHWDevice::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1CQSVHWDevice@@UEAA@XZ ; CQSVHWDevice::~CQSVHWDevice
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_GCQSVHWDevice@@UEAAPEAXI@Z ENDP			; CQSVHWDevice::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ PROC		; std::shared_ptr<RGYLog>::reset, COMDAT

; 1177 :     void reset() noexcept { // release resource and convert to empty shared_ptr object

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1178 :         shared_ptr().swap(*this);

  0001e	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>
  00028	90		 npad	 1
  00029	48 89 44 24 30	 mov	 QWORD PTR tv72[rsp], rax
  0002e	48 8b 44 24 30	 mov	 rax, QWORD PTR tv72[rsp]
  00033	48 89 44 24 38	 mov	 QWORD PTR tv71[rsp], rax
  00038	48 8b 54 24 50	 mov	 rdx, QWORD PTR this$[rsp]
  0003d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv71[rsp]
  00042	e8 00 00 00 00	 call	 ?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z ; std::shared_ptr<RGYLog>::swap
  00047	90		 npad	 1
  00048	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0004d	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  00052	90		 npad	 1

; 1179 :     }

  00053	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ ENDP		; std::shared_ptr<RGYLog>::reset
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA PROC ; `std::shared_ptr<RGYLog>::reset'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA ENDP ; `std::shared_ptr<RGYLog>::reset'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA PROC ; `std::shared_ptr<RGYLog>::reset'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA ENDP ; `std::shared_ptr<RGYLog>::reset'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z PROC	; std::shared_ptr<RGYLog>::swap, COMDAT

; 1173 :     void swap(shared_ptr& _Other) noexcept { // swap pointers

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1174 :         this->_Swap(_Other);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Other$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z ; std::_Ptr_base<RGYLog>::_Swap

; 1175 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z ENDP	; std::shared_ptr<RGYLog>::swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
$T1 = 32
tv73 = 48
tv72 = 56
this$ = 80
_Right$ = 88
??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::shared_ptr<RGYLog>::operator=, COMDAT

; 1136 :     shared_ptr& operator=(const shared_ptr& _Right) noexcept { // assign shared ownership of resource owned by _Right

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1137 :         shared_ptr(_Right).swap(*this);

  00023	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002d	e8 00 00 00 00	 call	 ??0?$shared_ptr@VRGYLog@@@std@@QEAA@AEBV01@@Z ; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>
  00032	90		 npad	 1
  00033	48 89 44 24 30	 mov	 QWORD PTR tv73[rsp], rax
  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR tv73[rsp]
  0003d	48 89 44 24 38	 mov	 QWORD PTR tv72[rsp], rax
  00042	48 8b 54 24 50	 mov	 rdx, QWORD PTR this$[rsp]
  00047	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv72[rsp]
  0004c	e8 00 00 00 00	 call	 ?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z ; std::shared_ptr<RGYLog>::swap
  00051	90		 npad	 1
  00052	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00057	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0005c	90		 npad	 1

; 1138 :         return *this;

  0005d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]

; 1139 :     }

  00062	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00066	5f		 pop	 rdi
  00067	c3		 ret	 0
??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::shared_ptr<RGYLog>::operator=
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv73 = 48
tv72 = 56
this$ = 80
_Right$ = 88
?dtor$0@?0???4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z@4HA PROC ; `std::shared_ptr<RGYLog>::operator='::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z@4HA ENDP ; `std::shared_ptr<RGYLog>::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv73 = 48
tv72 = 56
this$ = 80
_Right$ = 88
?dtor$0@?0???4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z@4HA PROC ; `std::shared_ptr<RGYLog>::operator='::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z@4HA ENDP ; `std::shared_ptr<RGYLog>::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ PROC		; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>, COMDAT

; 1132 :     ~shared_ptr() noexcept { // release resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1133 :         this->_Decref();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ ; std::_Ptr_base<RGYLog>::_Decref

; 1134 :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ENDP		; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0?$shared_ptr@VRGYLog@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0?$shared_ptr@VRGYLog@@@std@@QEAA@AEBV01@@Z PROC	; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>, COMDAT

; 1078 :     shared_ptr(const shared_ptr& _Other) noexcept { // construct shared_ptr object that owns same resource as _Other

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ ; std::_Ptr_base<RGYLog>::_Ptr_base<RGYLog>

; 1079 :         this->_Copy_construct_from(_Other);

  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Other$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ??$_Copy_construct_from@VRGYLog@@@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEBV?$shared_ptr@VRGYLog@@@1@@Z ; std::_Ptr_base<RGYLog>::_Copy_construct_from<RGYLog>

; 1080 :     }

  0003c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
??0?$shared_ptr@VRGYLog@@@std@@QEAA@AEBV01@@Z ENDP	; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ PROC		; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>, COMDAT

; 1016 :     constexpr shared_ptr() noexcept {} // construct empty shared_ptr

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ ; std::_Ptr_base<RGYLog>::_Ptr_base<RGYLog>
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ENDP		; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z PROC	; std::_Ptr_base<RGYLog>::_Swap, COMDAT

; 887  :     void _Swap(_Ptr_base& _Right) noexcept { // swap pointers

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 888  :         _STD swap(_Ptr, _Right._Ptr);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b d0	 mov	 rdx, rax
  00030	e8 00 00 00 00	 call	 ??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z ; std::swap<RGYLog *,void>

; 889  :         _STD swap(_Rep, _Right._Rep);

  00035	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 83 c0 08	 add	 rax, 8
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00043	48 83 c1 08	 add	 rcx, 8
  00047	48 8b d0	 mov	 rdx, rax
  0004a	e8 00 00 00 00	 call	 ??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z ; std::swap<std::_Ref_count_base *,void>

; 890  :     }

  0004f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00053	5f		 pop	 rdi
  00054	c3		 ret	 0
?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z ENDP	; std::_Ptr_base<RGYLog>::_Swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ PROC	; std::_Ptr_base<RGYLog>::_Decref, COMDAT

; 881  :     void _Decref() noexcept { // decrement reference count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 882  :         if (_Rep) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 0e		 je	 SHORT $LN2@Decref

; 883  :             _Rep->_Decref();

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00033	e8 00 00 00 00	 call	 ?_Decref@_Ref_count_base@std@@QEAAXXZ ; std::_Ref_count_base::_Decref
$LN2@Decref:

; 884  :         }
; 885  :     }

  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ ENDP	; std::_Ptr_base<RGYLog>::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_hw_d3d9.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
; File D:\work\intel\intel_codec\QSVPipeline\qsv_hw_d3d9.cpp
;	COMDAT ??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ PROC		; std::_Ptr_base<RGYLog>::_Ptr_base<RGYLog>, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory

; 910  :     element_type* _Ptr{nullptr};

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 911  :     _Ref_count_base* _Rep{nullptr};

  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
; File D:\work\intel\intel_codec\QSVPipeline\qsv_hw_d3d9.cpp

  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	5f		 pop	 rdi
  00025	c3		 ret	 0
??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ ENDP		; std::_Ptr_base<RGYLog>::_Ptr_base<RGYLog>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ
_TEXT	SEGMENT
this$ = 16
?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ PROC	; std::_Ptr_base<RGYLog>::get, COMDAT

; 816  :     _NODISCARD element_type* get() const noexcept { // return pointer to resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 817  :         return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 818  :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ ENDP	; std::_Ptr_base<RGYLog>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_hw_device.h
;	COMDAT ??1CQSVHWDevice@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CQSVHWDevice@@UEAA@XZ PROC				; CQSVHWDevice::~CQSVHWDevice, COMDAT

; 46   :     virtual ~CQSVHWDevice() { }

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7CQSVHWDevice@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0003e	90		 npad	 1
  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1CQSVHWDevice@@UEAA@XZ ENDP				; CQSVHWDevice::~CQSVHWDevice
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1CQSVHWDevice@@UEAA@XZ@4HA PROC		; `CQSVHWDevice::~CQSVHWDevice'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1CQSVHWDevice@@UEAA@XZ@4HA ENDP		; `CQSVHWDevice::~CQSVHWDevice'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1CQSVHWDevice@@UEAA@XZ@4HA PROC		; `CQSVHWDevice::~CQSVHWDevice'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1CQSVHWDevice@@UEAA@XZ@4HA ENDP		; `CQSVHWDevice::~CQSVHWDevice'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_hw_device.h
;	COMDAT ??0CQSVHWDevice@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0CQSVHWDevice@@QEAA@XZ PROC				; CQSVHWDevice::CQSVHWDevice, COMDAT

; 45   :     CQSVHWDevice() {};

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7CQSVHWDevice@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>
  0003e	90		 npad	 1
  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??0CQSVHWDevice@@QEAA@XZ ENDP				; CQSVHWDevice::CQSVHWDevice
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0CQSVHWDevice@@QEAA@XZ@4HA PROC		; `CQSVHWDevice::CQSVHWDevice'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0CQSVHWDevice@@QEAA@XZ@4HA ENDP		; `CQSVHWDevice::CQSVHWDevice'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0CQSVHWDevice@@QEAA@XZ@4HA PROC		; `CQSVHWDevice::CQSVHWDevice'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0CQSVHWDevice@@QEAA@XZ@4HA ENDP		; `CQSVHWDevice::CQSVHWDevice'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspColorprimList@@YAXXZ
text$di	SEGMENT
$T1 = 112
$T2 = 168
$T3 = 172
$T4 = 176
$T5 = 180
$T6 = 184
$T7 = 188
$T8 = 192
$T9 = 196
$T10 = 200
$T11 = 204
$T12 = 208
$T13 = 212
$T14 = 216
__$ArrayPad$ = 264
??__ECspColorprimList@@YAXXZ PROC			; `dynamic initializer for 'CspColorprimList'', COMDAT

; 1187 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 08
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1174 : static const auto CspColorprimList = make_array<CspColorprim>(

  0002b	c7 84 24 a8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T2[rsp], 13
  00036	c7 84 24 ac 00
	00 00 0c 00 00
	00		 mov	 DWORD PTR $T3[rsp], 12
  00041	c7 84 24 b0 00
	00 00 0b 00 00
	00		 mov	 DWORD PTR $T4[rsp], 11
  0004c	c7 84 24 b4 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T5[rsp], 10
  00057	c7 84 24 b8 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T6[rsp], 9
  00062	c7 84 24 bc 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T7[rsp], 8
  0006d	c7 84 24 c0 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T8[rsp], 7
  00078	c7 84 24 c4 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T9[rsp], 6
  00083	c7 84 24 c8 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T10[rsp], 5
  0008e	c7 84 24 cc 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T11[rsp], 4
  00099	c7 84 24 d0 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T12[rsp], 2
  000a4	c7 84 24 d4 00
	00 00 01 00 00
	00		 mov	 DWORD PTR $T13[rsp], 1
  000af	48 8d 84 24 a8
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000b7	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  000bc	48 8d 84 24 ac
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000c4	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  000c9	48 8d 84 24 b0
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000d1	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  000d6	48 8d 84 24 b4
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000de	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  000e3	48 8d 84 24 b8
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  000eb	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  000f0	48 8d 84 24 bc
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  000f8	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  000fd	48 8d 84 24 c0
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  00105	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0010a	48 8d 84 24 c4
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00112	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00117	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  0011f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00124	4c 8d 8c 24 cc
	00 00 00	 lea	 r9, QWORD PTR $T11[rsp]
  0012c	4c 8d 84 24 d0
	00 00 00	 lea	 r8, QWORD PTR $T12[rsp]
  00134	48 8d 94 24 d4
	00 00 00	 lea	 rdx, QWORD PTR $T13[rsp]
  0013c	48 8d 8c 24 d8
	00 00 00	 lea	 rcx, QWORD PTR $T14[rsp]
  00144	e8 00 00 00 00	 call	 ??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
  00149	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T1[rsp]
  0014e	48 8b f9	 mov	 rdi, rcx
  00151	48 8b f0	 mov	 rsi, rax
  00154	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00159	f3 a4		 rep movsb
  0015b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspColorprimList@@3V?$array@W4CspColorprim@@$0M@@std@@B
  00162	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T1[rsp]
  00167	48 8b f8	 mov	 rdi, rax
  0016a	48 8b f1	 mov	 rsi, rcx
  0016d	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00172	f3 a4		 rep movsb
  00174	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0017c	48 33 cc	 xor	 rcx, rsp
  0017f	e8 00 00 00 00	 call	 __security_check_cookie
  00184	48 81 c4 18 01
	00 00		 add	 rsp, 280		; 00000118H
  0018b	5f		 pop	 rdi
  0018c	5e		 pop	 rsi
  0018d	c3		 ret	 0
??__ECspColorprimList@@YAXXZ ENDP			; `dynamic initializer for 'CspColorprimList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 56
$T2 = 96
<args_0>$ = 104
<args_1>$ = 112
<args_2>$ = 120
<args_3>$ = 128
<args_4>$ = 136
<args_5>$ = 144
<args_6>$ = 152
<args_7>$ = 160
<args_8>$ = 168
<args_9>$ = 176
<args_10>$ = 184
<args_11>$ = 192
??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z PROC ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 12 00 00 00	 mov	 ecx, 18
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 38	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 68	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 44 24 70	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004c	8b 00		 mov	 eax, DWORD PTR [rax]
  0004e	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00052	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_2>$[rsp]
  00057	8b 00		 mov	 eax, DWORD PTR [rax]
  00059	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  0005d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  00065	8b 00		 mov	 eax, DWORD PTR [rax]
  00067	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  0006b	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00073	8b 00		 mov	 eax, DWORD PTR [rax]
  00075	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  00079	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00081	8b 00		 mov	 eax, DWORD PTR [rax]
  00083	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  00087	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  0008f	8b 00		 mov	 eax, DWORD PTR [rax]
  00091	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  00095	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  0009d	8b 00		 mov	 eax, DWORD PTR [rax]
  0009f	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a3	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000ab	8b 00		 mov	 eax, DWORD PTR [rax]
  000ad	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b1	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000b9	8b 00		 mov	 eax, DWORD PTR [rax]
  000bb	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000bf	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000c7	8b 00		 mov	 eax, DWORD PTR [rax]
  000c9	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000cd	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000d5	8b 00		 mov	 eax, DWORD PTR [rax]
  000d7	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000db	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  000df	48 8b 7c 24 60	 mov	 rdi, QWORD PTR $T2[rsp]
  000e4	48 8b f0	 mov	 rsi, rax
  000e7	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  000ec	f3 a4		 rep movsb
  000ee	48 8b 44 24 60	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  000f3	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000f8	48 33 cc	 xor	 rcx, rsp
  000fb	e8 00 00 00 00	 call	 __security_check_cookie
  00100	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00104	5f		 pop	 rdi
  00105	5e		 pop	 rsi
  00106	c3		 ret	 0
??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ENDP ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspTransferList@@YAXXZ
text$di	SEGMENT
$T1 = 128
$T2 = 200
$T3 = 204
$T4 = 208
$T5 = 212
$T6 = 216
$T7 = 220
$T8 = 224
$T9 = 228
$T10 = 232
$T11 = 236
$T12 = 240
$T13 = 244
$T14 = 248
$T15 = 252
$T16 = 256
$T17 = 264
__$ArrayPad$ = 328
??__ECspTransferList@@YAXXZ PROC			; `dynamic initializer for 'CspTransferList'', COMDAT

; 1135 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1119 : static const auto CspTransferList = make_array<CspTransfer>(

  0002b	c7 84 24 c8 00
	00 00 12 00 00
	00		 mov	 DWORD PTR $T2[rsp], 18
  00036	c7 84 24 cc 00
	00 00 10 00 00
	00		 mov	 DWORD PTR $T3[rsp], 16
  00041	c7 84 24 d0 00
	00 00 0f 00 00
	00		 mov	 DWORD PTR $T4[rsp], 15
  0004c	c7 84 24 d4 00
	00 00 0e 00 00
	00		 mov	 DWORD PTR $T5[rsp], 14
  00057	c7 84 24 d8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T6[rsp], 13
  00062	c7 84 24 dc 00
	00 00 0b 00 00
	00		 mov	 DWORD PTR $T7[rsp], 11
  0006d	c7 84 24 e0 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T8[rsp], 10
  00078	c7 84 24 e4 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T9[rsp], 9
  00083	c7 84 24 e8 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T10[rsp], 8
  0008e	c7 84 24 ec 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T11[rsp], 7
  00099	c7 84 24 f0 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T12[rsp], 6
  000a4	c7 84 24 f4 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T13[rsp], 5
  000af	c7 84 24 f8 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T14[rsp], 4
  000ba	c7 84 24 fc 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T15[rsp], 2
  000c5	c7 84 24 00 01
	00 00 01 00 00
	00		 mov	 DWORD PTR $T16[rsp], 1
  000d0	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000d8	48 89 44 24 78	 mov	 QWORD PTR [rsp+120], rax
  000dd	48 8d 84 24 cc
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000e5	48 89 44 24 70	 mov	 QWORD PTR [rsp+112], rax
  000ea	48 8d 84 24 d0
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000f2	48 89 44 24 68	 mov	 QWORD PTR [rsp+104], rax
  000f7	48 8d 84 24 d4
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000ff	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  00104	48 8d 84 24 d8
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  0010c	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  00111	48 8d 84 24 dc
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  00119	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  0011e	48 8d 84 24 e0
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  00126	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  0012b	48 8d 84 24 e4
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00133	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  00138	48 8d 84 24 e8
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  00140	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  00145	48 8d 84 24 ec
	00 00 00	 lea	 rax, QWORD PTR $T11[rsp]
  0014d	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00152	48 8d 84 24 f0
	00 00 00	 lea	 rax, QWORD PTR $T12[rsp]
  0015a	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0015f	48 8d 84 24 f4
	00 00 00	 lea	 rax, QWORD PTR $T13[rsp]
  00167	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0016c	4c 8d 8c 24 f8
	00 00 00	 lea	 r9, QWORD PTR $T14[rsp]
  00174	4c 8d 84 24 fc
	00 00 00	 lea	 r8, QWORD PTR $T15[rsp]
  0017c	48 8d 94 24 00
	01 00 00	 lea	 rdx, QWORD PTR $T16[rsp]
  00184	48 8d 8c 24 08
	01 00 00	 lea	 rcx, QWORD PTR $T17[rsp]
  0018c	e8 00 00 00 00	 call	 ??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
  00191	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  00199	48 8b f9	 mov	 rdi, rcx
  0019c	48 8b f0	 mov	 rsi, rax
  0019f	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  001a4	f3 a4		 rep movsb
  001a6	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspTransferList@@3V?$array@W4CspTransfer@@$0P@@std@@B
  001ad	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  001b5	48 8b f8	 mov	 rdi, rax
  001b8	48 8b f1	 mov	 rsi, rcx
  001bb	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  001c0	f3 a4		 rep movsb
  001c2	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001ca	48 33 cc	 xor	 rcx, rsp
  001cd	e8 00 00 00 00	 call	 __security_check_cookie
  001d2	48 81 c4 58 01
	00 00		 add	 rsp, 344		; 00000158H
  001d9	5f		 pop	 rdi
  001da	5e		 pop	 rsi
  001db	c3		 ret	 0
??__ECspTransferList@@YAXXZ ENDP			; `dynamic initializer for 'CspTransferList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 72
$T2 = 112
<args_0>$ = 120
<args_1>$ = 128
<args_2>$ = 136
<args_3>$ = 144
<args_4>$ = 152
<args_5>$ = 160
<args_6>$ = 168
<args_7>$ = 176
<args_8>$ = 184
<args_9>$ = 192
<args_10>$ = 200
<args_11>$ = 208
<args_12>$ = 216
<args_13>$ = 224
<args_14>$ = 232
??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z PROC ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 16 00 00 00	 mov	 ecx, 22
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 48	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00055	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_2>$[rsp]
  0005d	8b 00		 mov	 eax, DWORD PTR [rax]
  0005f	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  0006b	8b 00		 mov	 eax, DWORD PTR [rax]
  0006d	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  00071	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00079	8b 00		 mov	 eax, DWORD PTR [rax]
  0007b	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  0007f	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00087	8b 00		 mov	 eax, DWORD PTR [rax]
  00089	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  0008d	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  00095	8b 00		 mov	 eax, DWORD PTR [rax]
  00097	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  0009b	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  000a3	8b 00		 mov	 eax, DWORD PTR [rax]
  000a5	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a9	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000b1	8b 00		 mov	 eax, DWORD PTR [rax]
  000b3	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b7	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000bf	8b 00		 mov	 eax, DWORD PTR [rax]
  000c1	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000c5	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000cd	8b 00		 mov	 eax, DWORD PTR [rax]
  000cf	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000d3	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000db	8b 00		 mov	 eax, DWORD PTR [rax]
  000dd	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000e1	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR <args_12>$[rsp]
  000e9	8b 00		 mov	 eax, DWORD PTR [rax]
  000eb	89 44 24 30	 mov	 DWORD PTR $T1[rsp+48], eax
  000ef	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR <args_13>$[rsp]
  000f7	8b 00		 mov	 eax, DWORD PTR [rax]
  000f9	89 44 24 34	 mov	 DWORD PTR $T1[rsp+52], eax
  000fd	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR <args_14>$[rsp]
  00105	8b 00		 mov	 eax, DWORD PTR [rax]
  00107	89 44 24 38	 mov	 DWORD PTR $T1[rsp+56], eax
  0010b	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  0010f	48 8b 7c 24 70	 mov	 rdi, QWORD PTR $T2[rsp]
  00114	48 8b f0	 mov	 rsi, rax
  00117	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  0011c	f3 a4		 rep movsb
  0011e	48 8b 44 24 70	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  00123	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00128	48 33 cc	 xor	 rcx, rsp
  0012b	e8 00 00 00 00	 call	 __security_check_cookie
  00130	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00134	5f		 pop	 rdi
  00135	5e		 pop	 rsi
  00136	c3		 ret	 0
??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ENDP ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspMatrixList@@YAXXZ
text$di	SEGMENT
$T1 = 128
$T2 = 192
$T3 = 196
$T4 = 200
$T5 = 204
$T6 = 208
$T7 = 212
$T8 = 216
$T9 = 220
$T10 = 224
$T11 = 228
$T12 = 232
$T13 = 236
$T14 = 240
$T15 = 244
$T16 = 248
__$ArrayPad$ = 304
??__ECspMatrixList@@YAXXZ PROC				; `dynamic initializer for 'CspMatrixList'', COMDAT

; 1080 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 30
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1065 : static const auto CspMatrixList = make_array<CspMatrix>(

  0002b	c7 84 24 c0 00
	00 00 0f 00 00
	00		 mov	 DWORD PTR $T2[rsp], 15
  00036	c7 84 24 c4 00
	00 00 0e 00 00
	00		 mov	 DWORD PTR $T3[rsp], 14
  00041	c7 84 24 c8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T4[rsp], 13
  0004c	c7 84 24 cc 00
	00 00 0c 00 00
	00		 mov	 DWORD PTR $T5[rsp], 12
  00057	c7 84 24 d0 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T6[rsp], 10
  00062	c7 84 24 d4 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T7[rsp], 9
  0006d	c7 84 24 d8 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T8[rsp], 8
  00078	c7 84 24 dc 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T9[rsp], 7
  00083	c7 84 24 e0 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T10[rsp], 6
  0008e	c7 84 24 e4 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T11[rsp], 5
  00099	c7 84 24 e8 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T12[rsp], 4
  000a4	c7 84 24 ec 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T13[rsp], 2
  000af	c7 84 24 f0 00
	00 00 01 00 00
	00		 mov	 DWORD PTR $T14[rsp], 1
  000ba	c7 84 24 f4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T15[rsp], 0
  000c5	48 8d 84 24 c0
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000cd	48 89 44 24 70	 mov	 QWORD PTR [rsp+112], rax
  000d2	48 8d 84 24 c4
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000da	48 89 44 24 68	 mov	 QWORD PTR [rsp+104], rax
  000df	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000e7	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  000ec	48 8d 84 24 cc
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000f4	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  000f9	48 8d 84 24 d0
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  00101	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  00106	48 8d 84 24 d4
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  0010e	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  00113	48 8d 84 24 d8
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  0011b	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  00120	48 8d 84 24 dc
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00128	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  0012d	48 8d 84 24 e0
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  00135	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0013a	48 8d 84 24 e4
	00 00 00	 lea	 rax, QWORD PTR $T11[rsp]
  00142	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00147	48 8d 84 24 e8
	00 00 00	 lea	 rax, QWORD PTR $T12[rsp]
  0014f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00154	4c 8d 8c 24 ec
	00 00 00	 lea	 r9, QWORD PTR $T13[rsp]
  0015c	4c 8d 84 24 f0
	00 00 00	 lea	 r8, QWORD PTR $T14[rsp]
  00164	48 8d 94 24 f4
	00 00 00	 lea	 rdx, QWORD PTR $T15[rsp]
  0016c	48 8d 8c 24 f8
	00 00 00	 lea	 rcx, QWORD PTR $T16[rsp]
  00174	e8 00 00 00 00	 call	 ??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
  00179	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  00181	48 8b f9	 mov	 rdi, rcx
  00184	48 8b f0	 mov	 rsi, rax
  00187	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  0018c	f3 a4		 rep movsb
  0018e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspMatrixList@@3V?$array@W4CspMatrix@@$0O@@std@@B
  00195	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  0019d	48 8b f8	 mov	 rdi, rax
  001a0	48 8b f1	 mov	 rsi, rcx
  001a3	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  001a8	f3 a4		 rep movsb
  001aa	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001b2	48 33 cc	 xor	 rcx, rsp
  001b5	e8 00 00 00 00	 call	 __security_check_cookie
  001ba	48 81 c4 48 01
	00 00		 add	 rsp, 328		; 00000148H
  001c1	5f		 pop	 rdi
  001c2	5e		 pop	 rsi
  001c3	c3		 ret	 0
??__ECspMatrixList@@YAXXZ ENDP				; `dynamic initializer for 'CspMatrixList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 64
$T2 = 112
<args_0>$ = 120
<args_1>$ = 128
<args_2>$ = 136
<args_3>$ = 144
<args_4>$ = 152
<args_5>$ = 160
<args_6>$ = 168
<args_7>$ = 176
<args_8>$ = 184
<args_9>$ = 192
<args_10>$ = 200
<args_11>$ = 208
<args_12>$ = 216
<args_13>$ = 224
??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z PROC ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 16 00 00 00	 mov	 ecx, 22
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 40	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00055	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_2>$[rsp]
  0005d	8b 00		 mov	 eax, DWORD PTR [rax]
  0005f	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  0006b	8b 00		 mov	 eax, DWORD PTR [rax]
  0006d	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  00071	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00079	8b 00		 mov	 eax, DWORD PTR [rax]
  0007b	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  0007f	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00087	8b 00		 mov	 eax, DWORD PTR [rax]
  00089	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  0008d	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  00095	8b 00		 mov	 eax, DWORD PTR [rax]
  00097	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  0009b	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  000a3	8b 00		 mov	 eax, DWORD PTR [rax]
  000a5	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a9	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000b1	8b 00		 mov	 eax, DWORD PTR [rax]
  000b3	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b7	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000bf	8b 00		 mov	 eax, DWORD PTR [rax]
  000c1	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000c5	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000cd	8b 00		 mov	 eax, DWORD PTR [rax]
  000cf	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000d3	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000db	8b 00		 mov	 eax, DWORD PTR [rax]
  000dd	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000e1	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR <args_12>$[rsp]
  000e9	8b 00		 mov	 eax, DWORD PTR [rax]
  000eb	89 44 24 30	 mov	 DWORD PTR $T1[rsp+48], eax
  000ef	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR <args_13>$[rsp]
  000f7	8b 00		 mov	 eax, DWORD PTR [rax]
  000f9	89 44 24 34	 mov	 DWORD PTR $T1[rsp+52], eax
  000fd	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  00101	48 8b 7c 24 70	 mov	 rdi, QWORD PTR $T2[rsp]
  00106	48 8b f0	 mov	 rsi, rax
  00109	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  0010e	f3 a4		 rep movsb
  00110	48 8b 44 24 70	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  00115	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0011a	48 33 cc	 xor	 rcx, rsp
  0011d	e8 00 00 00 00	 call	 __security_check_cookie
  00122	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00126	5f		 pop	 rdi
  00127	5e		 pop	 rsi
  00128	c3		 ret	 0
??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ENDP ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decwref@_Ref_count_base@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Decwref@_Ref_count_base@std@@QEAAXXZ PROC		; std::_Ref_count_base::_Decwref, COMDAT

; 657  :     void _Decwref() noexcept { // decrement weak reference count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 658  :         if (_MT_DECR(_Weaks) == 0) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 0c	 add	 rax, 12
  00027	b9 ff ff ff ff	 mov	 ecx, -1
  0002c	f0 0f c1 08	 lock xadd DWORD PTR [rax], ecx
  00030	ff c9		 dec	 ecx
  00032	8b c1		 mov	 eax, ecx
  00034	85 c0		 test	 eax, eax
  00036	75 10		 jne	 SHORT $LN2@Decwref

; 659  :             _Delete_this();

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00045	ff 50 08	 call	 QWORD PTR [rax+8]
$LN2@Decwref:

; 660  :         }
; 661  :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?_Decwref@_Ref_count_base@std@@QEAAXXZ ENDP		; std::_Ref_count_base::_Decwref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decref@_Ref_count_base@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Decref@_Ref_count_base@std@@QEAAXXZ PROC		; std::_Ref_count_base::_Decref, COMDAT

; 650  :     void _Decref() noexcept { // decrement use count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 651  :         if (_MT_DECR(_Uses) == 0) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	b9 ff ff ff ff	 mov	 ecx, -1
  0002c	f0 0f c1 08	 lock xadd DWORD PTR [rax], ecx
  00030	ff c9		 dec	 ecx
  00032	8b c1		 mov	 eax, ecx
  00034	85 c0		 test	 eax, eax
  00036	75 19		 jne	 SHORT $LN2@Decref

; 652  :             _Destroy();

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00045	ff 10		 call	 QWORD PTR [rax]

; 653  :             _Decwref();

  00047	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004c	e8 00 00 00 00	 call	 ?_Decwref@_Ref_count_base@std@@QEAAXXZ ; std::_Ref_count_base::_Decwref
$LN2@Decref:

; 654  :         }
; 655  :     }

  00051	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?_Decref@_Ref_count_base@std@@QEAAXXZ ENDP		; std::_Ref_count_base::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Incref@_Ref_count_base@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?_Incref@_Ref_count_base@std@@QEAAXXZ PROC		; std::_Ref_count_base::_Incref, COMDAT

; 642  :     void _Incref() noexcept { // increment use count

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 643  :         _MT_INCR(_Uses);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 83 c0 08	 add	 rax, 8
  0000f	f0 ff 00	 lock inc DWORD PTR [rax]

; 644  :     }

  00012	5f		 pop	 rdi
  00013	c3		 ret	 0
?_Incref@_Ref_count_base@std@@QEAAXXZ ENDP		; std::_Ref_count_base::_Incref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_hw_d3d9.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 16
__formal$ = 24
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_hw_d3d9.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 16
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
