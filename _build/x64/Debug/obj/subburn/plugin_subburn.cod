; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	CLSID_Registrar
PUBLIC	IID_IRegistrar
PUBLIC	IID_IDocHostUIHandlerDispatch
PUBLIC	IID_IAxWinHostWindow
PUBLIC	IID_IAxWinHostWindowLic
PUBLIC	IID_IAxWinAmbientDispatch
PUBLIC	IID_IAxWinAmbientDispatchEx
PUBLIC	IID_IInternalConnection
PUBLIC	LIBID_ATLLib
PUBLIC	__pobjMapEntryFirst
PUBLIC	__pobjMapEntryLast
PUBLIC	?_pPerfRegFunc@ATL@@3P6AJPEAUHINSTANCE__@@@ZEA	; ATL::_pPerfRegFunc
PUBLIC	?_pPerfUnRegFunc@ATL@@3P6AJXZEA			; ATL::_pPerfUnRegFunc
PUBLIC	?_AtlRegisterPerUser@ATL@@3_NA			; ATL::_AtlRegisterPerUser
PUBLIC	?_pAtlModule@ATL@@3PEAVCAtlModule@1@EA		; ATL::_pAtlModule
PUBLIC	?_pModule@ATL@@3PEAVCComModule@1@EA		; ATL::_pModule
PUBLIC	?_pAtlAutoThreadModule@ATL@@3PEAUIAtlAutoThreadModule@1@EA ; ATL::_pAtlAutoThreadModule
PUBLIC	?chDirSep@ATL@@3_WB				; ATL::chDirSep
PUBLIC	?chRightBracket@ATL@@3_WB			; ATL::chRightBracket
PUBLIC	?chLeftBracket@ATL@@3_WB			; ATL::chLeftBracket
PUBLIC	?chQuote@ATL@@3_WB				; ATL::chQuote
PUBLIC	?chEquals@ATL@@3_WB				; ATL::chEquals
PUBLIC	?szStringVal@ATL@@3QEB_WEB			; ATL::szStringVal
PUBLIC	?multiszStringVal@ATL@@3QEB_WEB			; ATL::multiszStringVal
PUBLIC	?szDwordVal@ATL@@3QEB_WEB			; ATL::szDwordVal
PUBLIC	?szBinaryVal@ATL@@3QEB_WEB			; ATL::szBinaryVal
PUBLIC	?szValToken@ATL@@3QEB_WEB			; ATL::szValToken
PUBLIC	?szForceRemove@ATL@@3QEB_WEB			; ATL::szForceRemove
PUBLIC	?szNoRemove@ATL@@3QEB_WEB			; ATL::szNoRemove
PUBLIC	?szDelete@ATL@@3QEB_WEB				; ATL::szDelete
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPEAUHINSTANCE__@@@ZEA
_BSS	SEGMENT
?_pPerfRegFunc@ATL@@3P6AJPEAUHINSTANCE__@@@ZEA DQ 01H DUP (?) ; ATL::_pPerfRegFunc
_BSS	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZEA
_BSS	SEGMENT
?_pPerfUnRegFunc@ATL@@3P6AJXZEA DQ 01H DUP (?)		; ATL::_pPerfUnRegFunc
_BSS	ENDS
;	COMDAT ?_AtlRegisterPerUser@ATL@@3_NA
_BSS	SEGMENT
?_AtlRegisterPerUser@ATL@@3_NA DB 01H DUP (?)		; ATL::_AtlRegisterPerUser
_BSS	ENDS
;	COMDAT ?_pAtlModule@ATL@@3PEAVCAtlModule@1@EA
_BSS	SEGMENT
?_pAtlModule@ATL@@3PEAVCAtlModule@1@EA DQ 01H DUP (?)	; ATL::_pAtlModule
_BSS	ENDS
;	COMDAT ?_pModule@ATL@@3PEAVCComModule@1@EA
_BSS	SEGMENT
?_pModule@ATL@@3PEAVCComModule@1@EA DQ 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?_pAtlAutoThreadModule@ATL@@3PEAUIAtlAutoThreadModule@1@EA
_BSS	SEGMENT
?_pAtlAutoThreadModule@ATL@@3PEAUIAtlAutoThreadModule@1@EA DQ 01H DUP (?) ; ATL::_pAtlAutoThreadModule
_BSS	ENDS
;	COMDAT ?szDelete@ATL@@3QEB_WEB
CONST	SEGMENT
?szDelete@ATL@@3QEB_WEB DQ FLAT:$SG143410		; ATL::szDelete
CONST	ENDS
;	COMDAT ?szNoRemove@ATL@@3QEB_WEB
CONST	SEGMENT
?szNoRemove@ATL@@3QEB_WEB DQ FLAT:$SG143408		; ATL::szNoRemove
CONST	ENDS
;	COMDAT ?szForceRemove@ATL@@3QEB_WEB
CONST	SEGMENT
?szForceRemove@ATL@@3QEB_WEB DQ FLAT:$SG143406		; ATL::szForceRemove
CONST	ENDS
;	COMDAT ?szValToken@ATL@@3QEB_WEB
CONST	SEGMENT
?szValToken@ATL@@3QEB_WEB DQ FLAT:$SG143404		; ATL::szValToken
CONST	ENDS
;	COMDAT ?szBinaryVal@ATL@@3QEB_WEB
CONST	SEGMENT
?szBinaryVal@ATL@@3QEB_WEB DQ FLAT:$SG143402		; ATL::szBinaryVal
CONST	ENDS
;	COMDAT ?szDwordVal@ATL@@3QEB_WEB
CONST	SEGMENT
?szDwordVal@ATL@@3QEB_WEB DQ FLAT:$SG143400		; ATL::szDwordVal
CONST	ENDS
;	COMDAT ?multiszStringVal@ATL@@3QEB_WEB
CONST	SEGMENT
?multiszStringVal@ATL@@3QEB_WEB DQ FLAT:$SG143398	; ATL::multiszStringVal
CONST	ENDS
;	COMDAT ?szStringVal@ATL@@3QEB_WEB
CONST	SEGMENT
?szStringVal@ATL@@3QEB_WEB DQ FLAT:$SG143396		; ATL::szStringVal
CONST	ENDS
;	COMDAT ?chEquals@ATL@@3_WB
CONST	SEGMENT
?chEquals@ATL@@3_WB DW 03dH				; ATL::chEquals
CONST	ENDS
;	COMDAT ?chQuote@ATL@@3_WB
CONST	SEGMENT
?chQuote@ATL@@3_WB DW 027H				; ATL::chQuote
CONST	ENDS
;	COMDAT ?chLeftBracket@ATL@@3_WB
CONST	SEGMENT
?chLeftBracket@ATL@@3_WB DW 07bH			; ATL::chLeftBracket
CONST	ENDS
;	COMDAT ?chRightBracket@ATL@@3_WB
CONST	SEGMENT
?chRightBracket@ATL@@3_WB DW 07dH			; ATL::chRightBracket
CONST	ENDS
;	COMDAT ?chDirSep@ATL@@3_WB
CONST	SEGMENT
?chDirSep@ATL@@3_WB DW 05cH				; ATL::chDirSep
CONST	ENDS
msvcjmc	SEGMENT
__0A074437_vcruntime_new@h DB 01H
__09340588_corecrt_math@h DB 01H
__24E9E95F_stdlib@h DB 01H
__86D65F0C_cstdlib DB 01H
__F66CEB67_corecrt_stdio_config@h DB 01H
__101834BA_corecrt_wstdio@h DB 01H
__AD6A91B7_stdio@h DB 01H
__367CC694_corecrt_memcpy_s@h DB 01H
__5467428D_corecrt_wconio@h DB 01H
__4442441F_corecrt_wio@h DB 01H
__DC9673E3_corecrt_wstring@h DB 01H
__45F4AF76_corecrt_wtime@h DB 01H
__186FF47F_stat@h DB 01H
__534C724A_wchar@h DB 01H
__843B0F21_limits DB 01H
__FFC6471F_type_traits DB 01H
__B0C4CEA9_malloc@h DB 01H
__69245D52_vcruntime_exception@h DB 01H
__536DB091_exception DB 01H
__35D7DDB3_corecrt_memory@h DB 01H
__A29A7DFB_string@h DB 01H
__86E03ACD_xutility DB 01H
__DB4EB944_xmemory DB 01H
__B9A1F245_algorithm DB 01H
__CC282F90_tuple DB 01H
__6322CAD3_xtree DB 01H
__6A0B36D1_cmath DB 01H
__AF9D3FD8_xstring DB 01H
__DA238ACC_stdexcept DB 01H
__65AE1ACD_xcall_once@h DB 01H
__DAF308ED_system_error DB 01H
__36900320_vcruntime_typeinfo@h DB 01H
__F63FC9D4_typeinfo DB 01H
__389503AF_memory DB 01H
__14D054A0_xfacet DB 01H
__7242C389_ctype@h DB 01H
__E9B62A1C_xlocinfo DB 01H
__70A34BE9_xlocale DB 01H
__D0535D0F_xiosbase DB 01H
__EE242DFE_xlocnum DB 01H
__D17CECDD_ios DB 01H
__F62BD4FE_fstream DB 01H
__62A468D7_tchar@h DB 01H
__4C468533_string DB 01H
__06B8AF7F_ratio DB 01H
__8AA3BE86_time@h DB 01H
__E0D609AB_chrono DB 01H
__90A1F774_basetsd@h DB 01H
__3C23D660_guiddef@h DB 01H
__AF541008_winnt@h DB 01H
__0D001789_processthreadsapi@h DB 01H
__F972325D_memoryapi@h DB 01H
__76CD430D_winerror@h DB 01H
__737D49DB_winbase@h DB 01H
__1B9502AC_winuser@h DB 01H
__0396F1A5_stralign@h DB 01H
__84FFAAFB_corecrt_io@h DB 01H
__AD360DAF_oleauto@h DB 01H
__2CCBBE23_propidl@h DB 01H
__3D10CCC2_shlwapi@h DB 01H
__FE513C81_mfxvideo++@h DB 01H
__8122A7AF_functional DB 01H
__E8C031A6_convert_csp@h DB 01H
__7C62A51E_rgy_util@h DB 01H
__1C2A7702_common@h DB 01H
__A90F171D_error@h DB 01H
__21F0ED42_mem@h DB 01H
__E752A591_rational@h DB 01H
__B82CC960_intfloat@h DB 01H
__08D357D5_avutil@h DB 01H
__7EA82F2E_avio@h DB 01H
__70B30C9F_rgy_avutil@h DB 01H
__03CC68E3_rgy_log@h DB 01H
__ED15210D_rgy_caption@h DB 01H
__3E0C6B09_qsv_prm@h DB 01H
__BF591FCC_qsv_util@h DB 01H
__54F1D443_qsv_query@h DB 01H
__5F8D0038_mfxplugin++@h DB 01H
__EF0E53E3_atomic DB 01H
__1A78011F_WinSock2@h DB 01H
__E6E0639A_mbstring@h DB 01H
__D242CB04_atlalloc@h DB 01H
__26B0A70C_atlconv@h DB 01H
__68B31C3D_atltrace@h DB 01H
__6D4FC87F_atlexcept@h DB 01H
__1D2D2275_atlchecked@h DB 01H
__24B99871_atlwinverapi@h DB 01H
__221F5202_atlcore@h DB 01H
__B2222F6C_atlcomcli@h DB 01H
__6954CD7C_atltransactionmanager@h DB 01H
__8917836D_statreg@h DB 01H
__EECF58A3_atlbase@h DB 01H
__9F84A975_dxva2api@h DB 01H
__B83E69F1_qsv_allocator@h DB 01H
__3D5FAAF1_qsv_allocator_d3d9@h DB 01H
__65979AEF_plugin_base@h DB 01H
__8CF94513_plugin_subburn@cpp DB 01H
__C9967FC1_vector DB 01H
__60774AB8_atlsimpcoll@h DB 01H
__0063A417_istream DB 01H
__63B3912D_ostream DB 01H
__D8833270_streambuf DB 01H
__48D2DAA7_iosfwd DB 01H
__B1DBDA87_utility DB 01H
__59613C47_xatomic@h DB 01H
__46C44D95_xstddef DB 01H
__57C4FE6D_atldef@h DB 01H
__5E5E57A5_unknwn@h DB 01H
msvcjmc	ENDS
;	COMDAT __pobjMapEntryLast
ATL$__z	SEGMENT
__pobjMapEntryLast DQ 0000000000000000H
ATL$__z	ENDS
;	COMDAT __pobjMapEntryFirst
ATL$__a	SEGMENT
__pobjMapEntryFirst DQ 0000000000000000H
ATL$__a	ENDS
;	COMDAT LIBID_ATLLib
CONST	SEGMENT
LIBID_ATLLib DD	044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT IID_IInternalConnection
CONST	SEGMENT
IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT IID_IAxWinAmbientDispatchEx
CONST	SEGMENT
IID_IAxWinAmbientDispatchEx DD 0b2d0778bH
	DW	0ac99H
	DW	04c58H
	DB	0a5H
	DB	0c8H
	DB	0e7H
	DB	072H
	DB	04eH
	DB	053H
	DB	016H
	DB	0b5H
CONST	ENDS
;	COMDAT IID_IAxWinAmbientDispatch
CONST	SEGMENT
IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT IID_IAxWinHostWindowLic
CONST	SEGMENT
IID_IAxWinHostWindowLic DD 03935bda8H
	DW	04ed9H
	DW	0495cH
	DB	086H
	DB	050H
	DB	0e0H
	DB	01fH
	DB	0c1H
	DB	0e3H
	DB	08aH
	DB	04bH
CONST	ENDS
;	COMDAT IID_IAxWinHostWindow
CONST	SEGMENT
IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
CONST	SEGMENT
$SG123251 DB	'h', 00H, '2', 00H, '6', 00H, '4', 00H, 00H, 00H
	ORG $+6
$SG123252 DB	'h', 00H, 'e', 00H, 'v', 00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG123293 DB	'0', 00H, 00H, 00H
$SG123253 DB	'm', 00H, 'p', 00H, 'e', 00H, 'g', 00H, '2', 00H, 00H, 00H
$SG123294 DB	'1', 00H, 00H, 00H
$SG123254 DB	'v', 00H, 'c', 00H, '-', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG123295 DB	'2', 00H, 00H, 00H
$SG123255 DB	'v', 00H, 'p', 00H, '8', 00H, 00H, 00H
$SG123256 DB	'r', 00H, 'a', 00H, 'w', 00H, 00H, 00H
$SG131450 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'G', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 'l', 00H, 00H, 00H
$SG123258 DB	'C', 00H, 'B', 00H, 'R', 00H, 00H, 00H
$SG123259 DB	'V', 00H, 'B', 00H, 'R', 00H, 00H, 00H
$SG123260 DB	'C', 00H, 'Q', 00H, 'P', 00H, 00H, 00H
$SG123261 DB	'A', 00H, 'V', 00H, 'B', 00H, 'R', 00H, 00H, 00H
	ORG $+2
$SG123262 DB	'L', 00H, 'A', 00H, 00H, 00H
	ORG $+2
$SG123296 DB	'3', 00H, 00H, 00H
$SG123263 DB	'L', 00H, 'A', 00H, '-', 00H, 'E', 00H, 'X', 00H, 'T', 00H
	DB	00H, 00H
	ORG $+2
$SG123264 DB	'L', 00H, 'A', 00H, '-', 00H, 'H', 00H, 'R', 00H, 'D', 00H
	DB	00H, 00H
	ORG $+2
$SG123265 DB	'L', 00H, 'A', 00H, '-', 00H, 'I', 00H, 'C', 00H, 'Q', 00H
	DB	00H, 00H
	ORG $+2
$SG123266 DB	'I', 00H, 'C', 00H, 'Q', 00H, 00H, 00H
$SG123267 DB	'Q', 00H, 'V', 00H, 'B', 00H, 'R', 00H, 00H, 00H
	ORG $+2
$SG123299 DB	'0', 00H, 00H, 00H
$SG123268 DB	'V', 00H, 'C', 00H, 'M', 00H, 00H, 00H
?list_avc_profile@@3QBUCX_DESC@@B DQ FLAT:$SG123270	; list_avc_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG123271
	DD	042H
	ORG $+4
	DQ	FLAT:$SG123272
	DD	04dH
	ORG $+4
	DQ	FLAT:$SG123273
	DD	064H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG123270 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG123300 DB	'1', 00H, 00H, 00H
$SG123271 DB	'B', 00H, 'a', 00H, 's', 00H, 'e', 00H, 'l', 00H, 'i', 00H
	DB	'n', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG123301 DB	'2', 00H, 00H, 00H
$SG123272 DB	'M', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG123302 DB	'3', 00H, 00H, 00H
$SG123273 DB	'H', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 00H, 00H
	ORG $+6
$SG123277 DB	'm', 00H, 'a', 00H, 'i', 00H, 'n', 00H, '1', 00H, '0', 00H
	DB	00H, 00H
	ORG $+2
$SG123290 DB	'A', 00H, 'd', 00H, 'v', 00H, 'a', 00H, 'n', 00H, 'c', 00H
	DB	'e', 00H, 'd', 00H, 00H, 00H
	ORG $+6
?list_hevc_profile@@3QBUCX_DESC@@B DQ FLAT:$SG123275	; list_hevc_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG123276
	DD	01H
	ORG $+4
	DQ	FLAT:$SG123277
	DD	02H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG123275 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG123304 DB	'8', 00H, 00H, 00H
$SG123276 DB	'm', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG123322 DB	'1', 00H, 00H, 00H
$SG123279 DB	'm', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG123327 DB	'2', 00H, 00H, 00H
$SG123280 DB	'h', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 00H, 00H
	ORG $+6
?list_mpeg2_profile@@3QBUCX_DESC@@B DQ FLAT:$SG123282	; list_mpeg2_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG123283
	DD	050H
	ORG $+4
	DQ	FLAT:$SG123284
	DD	040H
	ORG $+4
	DQ	FLAT:$SG123285
	DD	010H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG123282 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG123330 DB	'3', 00H, 00H, 00H
$SG123283 DB	'S', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
$SG123284 DB	'M', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG123333 DB	'4', 00H, 00H, 00H
$SG123285 DB	'H', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 00H, 00H
	ORG $+6
?list_vc1_profile@@3QBUCX_DESC@@B DQ FLAT:$SG123287	; list_vc1_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG123288
	DD	01H
	ORG $+4
	DQ	FLAT:$SG123289
	DD	05H
	ORG $+4
	DQ	FLAT:$SG123290
	DD	0dH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG123287 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG123336 DB	'5', 00H, 00H, 00H
$SG123288 DB	'S', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
$SG123289 DB	'M', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 00H, 00H
	ORG $+6
?list_vp8_profile@@3QBUCX_DESC@@B DQ FLAT:$SG123292	; list_vp8_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG123293
	DD	01H
	ORG $+4
	DQ	FLAT:$SG123294
	DD	02H
	ORG $+4
	DQ	FLAT:$SG123295
	DD	03H
	ORG $+4
	DQ	FLAT:$SG123296
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG123292 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+6
?list_vp9_profile@@3QBUCX_DESC@@B DQ FLAT:$SG123298	; list_vp9_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG123299
	DD	01H
	ORG $+4
	DQ	FLAT:$SG123300
	DD	02H
	ORG $+4
	DQ	FLAT:$SG123301
	DD	03H
	ORG $+4
	DQ	FLAT:$SG123302
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG123298 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG123305 DB	'1', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG123341 DB	'1', 00H, 00H, 00H
$SG131499 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'C', 00H, 'O', 00H, 'M', 00H, 00H, 00H
$SG123307 DB	'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H, 'r', 00H, 'e', 00H
	DB	's', 00H, 's', 00H, 'i', 00H, 'v', 00H, 'e', 00H, 00H, 00H
$SG123308 DB	'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'l', 00H
	DB	'a', 00H, 'c', 00H, 'e', 00H, 'd', 00H, '(', 00H, 't', 00H, 'f'
	DB	00H, 'f', 00H, ')', 00H, 00H, 00H
$SG123309 DB	'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'l', 00H
	DB	'a', 00H, 'c', 00H, 'e', 00H, 'd', 00H, '(', 00H, 'b', 00H, 'f'
	DB	00H, 'f', 00H, ')', 00H, 00H, 00H
$SG123311 DB	'n', 00H, 'o', 00H, 'n', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG123342 DB	'2', 00H, 00H, 00H
$SG123312 DB	'n', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 'l', 00H
	DB	00H, 00H
	ORG $+2
$SG123313 DB	'i', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG123314 DB	'b', 00H, 'o', 00H, 'b', 00H, 00H, 00H
$SG123316 DB	'3', 00H, '2', 00H, 00H, 00H
	ORG $+2
$SG123317 DB	'2', 00H, '3', 00H, '3', 00H, '2', 00H, 00H, 00H
	ORG $+2
$SG123344 DB	'3', 00H, 00H, 00H
$SG123318 DB	'r', 00H, 'e', 00H, 'p', 00H, 'e', 00H, 'a', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG123319 DB	'4', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG123323 DB	'1', 00H, 'b', 00H, 00H, 00H
	ORG $+2
?list_avc_level@@3QBUCX_DESC@@B DQ FLAT:$SG123321	; list_avc_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG123322
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG123323
	DD	09H
	ORG $+4
	DQ	FLAT:$SG123324
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG123325
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG123326
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG123327
	DD	014H
	ORG $+4
	DQ	FLAT:$SG123328
	DD	015H
	ORG $+4
	DQ	FLAT:$SG123329
	DD	016H
	ORG $+4
	DQ	FLAT:$SG123330
	DD	01eH
	ORG $+4
	DQ	FLAT:$SG123331
	DD	01fH
	ORG $+4
	DQ	FLAT:$SG123332
	DD	020H
	ORG $+4
	DQ	FLAT:$SG123333
	DD	028H
	ORG $+4
	DQ	FLAT:$SG123334
	DD	029H
	ORG $+4
	DQ	FLAT:$SG123335
	DD	02aH
	ORG $+4
	DQ	FLAT:$SG123336
	DD	032H
	ORG $+4
	DQ	FLAT:$SG123337
	DD	033H
	ORG $+4
	DQ	FLAT:$SG123338
	DD	034H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG123321 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG123346 DB	'4', 00H, 00H, 00H
$SG123324 DB	'1', 00H, '.', 00H, '1', 00H, 00H, 00H
$SG123325 DB	'1', 00H, '.', 00H, '2', 00H, 00H, 00H
$SG123326 DB	'1', 00H, '.', 00H, '3', 00H, 00H, 00H
$SG123328 DB	'2', 00H, '.', 00H, '1', 00H, 00H, 00H
$SG123329 DB	'2', 00H, '.', 00H, '2', 00H, 00H, 00H
$SG123331 DB	'3', 00H, '.', 00H, '1', 00H, 00H, 00H
$SG123332 DB	'3', 00H, '.', 00H, '2', 00H, 00H, 00H
$SG123334 DB	'4', 00H, '.', 00H, '1', 00H, 00H, 00H
$SG123335 DB	'4', 00H, '.', 00H, '2', 00H, 00H, 00H
$SG123337 DB	'5', 00H, '.', 00H, '1', 00H, 00H, 00H
$SG123338 DB	'5', 00H, '.', 00H, '2', 00H, 00H, 00H
$SG123343 DB	'2', 00H, '.', 00H, '1', 00H, 00H, 00H
?list_hevc_level@@3QBUCX_DESC@@B DQ FLAT:$SG123340	; list_hevc_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG123341
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG123342
	DD	014H
	ORG $+4
	DQ	FLAT:$SG123343
	DD	015H
	ORG $+4
	DQ	FLAT:$SG123344
	DD	01eH
	ORG $+4
	DQ	FLAT:$SG123345
	DD	01fH
	ORG $+4
	DQ	FLAT:$SG123346
	DD	028H
	ORG $+4
	DQ	FLAT:$SG123347
	DD	029H
	ORG $+4
	DQ	FLAT:$SG123348
	DD	032H
	ORG $+4
	DQ	FLAT:$SG123349
	DD	033H
	ORG $+4
	DQ	FLAT:$SG123350
	DD	034H
	ORG $+4
	DQ	FLAT:$SG123351
	DD	03cH
	ORG $+4
	DQ	FLAT:$SG123352
	DD	03dH
	ORG $+4
	DQ	FLAT:$SG123353
	DD	03eH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG123340 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG123348 DB	'5', 00H, 00H, 00H
$SG123345 DB	'3', 00H, '.', 00H, '1', 00H, 00H, 00H
$SG123347 DB	'4', 00H, '.', 00H, '1', 00H, 00H, 00H
$SG123349 DB	'5', 00H, '.', 00H, '1', 00H, 00H, 00H
$SG123350 DB	'5', 00H, '.', 00H, '2', 00H, 00H, 00H
$SG123351 DB	'6', 00H, 00H, 00H
$SG123367 DB	'0', 00H, 00H, 00H
$SG123352 DB	'6', 00H, '.', 00H, '1', 00H, 00H, 00H
$SG123353 DB	'6', 00H, '.', 00H, '2', 00H, 00H, 00H
$SG131548 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'Q', 00H, 'I', 00H, 00H, 00H
	ORG $+2
?list_mpeg2_level@@3QBUCX_DESC@@B DQ FLAT:$SG123355	; list_mpeg2_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG123356
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG123357
	DD	08H
	ORG $+4
	DQ	FLAT:$SG123358
	DD	04H
	ORG $+4
	DQ	FLAT:$SG123359
	DD	06H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG123355 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG123368 DB	'1', 00H, 00H, 00H
$SG123356 DB	'l', 00H, 'o', 00H, 'w', 00H, 00H, 00H
$SG123357 DB	'm', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG123369 DB	'2', 00H, 00H, 00H
$SG123358 DB	'h', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG123370 DB	'3', 00H, 00H, 00H
$SG123359 DB	'h', 00H, 'i', 00H, 'g', 00H, 'h', 00H, '1', 00H, '4', 00H
	DB	'4', 00H, '0', 00H, 00H, 00H
	ORG $+6
?list_vc1_level@@3QBUCX_DESC@@B DQ FLAT:$SG123361	; list_vc1_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG123362
	DD	01H
	ORG $+4
	DQ	FLAT:$SG123363
	DD	03H
	ORG $+4
	DQ	FLAT:$SG123364
	DD	05H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG123361 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG123371 DB	'4', 00H, 00H, 00H
$SG123362 DB	'l', 00H, 'o', 00H, 'w', 00H, 00H, 00H
$SG123363 DB	'm', 00H, 'e', 00H, 'd', 00H, 'i', 00H, 'a', 00H, 'n', 00H
	DB	00H, 00H
	ORG $+2
$SG123364 DB	'h', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG123385 DB	'i', 00H, 00H, 00H
$SG123366 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG123390 DB	'p', 00H, 00H, 00H
?list_vp8_level@@3QBUCX_DESC@@B DQ FLAT:$SG123373	; list_vp8_level
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG123373 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG123392 DB	'b', 00H, 00H, 00H
?list_vp9_level@@3QBUCX_DESC@@B DQ FLAT:$SG123375	; list_vp9_level
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG123375 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG123400 DB	'0', 00H, 00H, 00H
$SG123377 DB	'A', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG123401 DB	'1', 00H, 00H, 00H
$SG123378 DB	'o', 00H, 'f', 00H, 'f', 00H, 00H, 00H
$SG123379 DB	'f', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'I', 00H, ' ', 00H
	DB	'f', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 's', 00H, 00H
	DB	00H
	ORG $+2
$SG123402 DB	'2', 00H, 00H, 00H
$SG123380 DB	'f', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'I', 00H, ',', 00H
	DB	'P', 00H, ' ', 00H, 'f', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG123381 DB	'f', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'A', 00H, 'l', 00H
	DB	'l', 00H, ' ', 00H, 'f', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG123383 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG123403 DB	'3', 00H, 00H, 00H
$SG123384 DB	'o', 00H, 'f', 00H, 'f', 00H, 00H, 00H
$SG123386 DB	'i', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG123387 DB	'a', 00H, 'l', 00H, 'l', 00H, 00H, 00H
$SG123388 DB	'i', 00H, 'p', 00H, 'b', 00H, 00H, 00H
$SG123389 DB	'i', 00H, 'b', 00H, 00H, 00H
	ORG $+2
$SG123391 DB	'p', 00H, 'b', 00H, 00H, 00H
	ORG $+2
$SG123394 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG123404 DB	'4', 00H, 00H, 00H
$SG123395 DB	's', 00H, 'l', 00H, 'o', 00H, 'w', 00H, 00H, 00H
	ORG $+2
$SG123512 DB	'0', 00H, 00H, 00H
$SG123396 DB	'm', 00H, 'e', 00H, 'd', 00H, 'i', 00H, 'u', 00H, 'm', 00H
	DB	00H, 00H
	ORG $+2
$SG123397 DB	'f', 00H, 'a', 00H, 's', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG123517 DB	'n', 00H, 00H, 00H
$SG123399 DB	'd', 00H, 'e', 00H, 'f', 00H, 'a', 00H, 'u', 00H, 'l', 00H
	DB	't', 00H, 00H, 00H
$SG131597 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'R', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'a', 00H, 'r', 00H, 00H, 00H
$SG123518 DB	'h', 00H, 00H, 00H
$SG123406 DB	'l', 00H, 'o', 00H, 'w', 00H, 00H, 00H
$SG123407 DB	'n', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 'l', 00H
	DB	00H, 00H
	ORG $+2
$SG123408 DB	'h', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG123519 DB	'v', 00H, 00H, 00H
$SG123420 DB	'n', 00H, 'o', 00H, 'n', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG123986 DB	00H, 00H
	ORG $+2
$SG123421 DB	'c', 00H, 'o', 00H, 'p', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG165695 DB	'%s', 00H
	ORG $+1
$SG123422 DB	'a', 00H, 'a', 00H, 'c', 00H, 00H, 00H
$SG123423 DB	'l', 00H, 'i', 00H, 'b', 00H, 'm', 00H, 'p', 00H, '3', 00H
	DB	'l', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG123424 DB	'l', 00H, 'i', 00H, 'b', 00H, 't', 00H, 'w', 00H, 'o', 00H
	DB	'l', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG123425 DB	'l', 00H, 'i', 00H, 'b', 00H, 'v', 00H, 'o', 00H, 'r', 00H
	DB	'b', 00H, 'i', 00H, 's', 00H, 00H, 00H
$SG143396 DB	'S', 00H, 00H, 00H
$SG123426 DB	'p', 00H, 'c', 00H, 'm', 00H, '_', 00H, 's', 00H, '1', 00H
	DB	'6', 00H, 'l', 00H, 'e', 00H, 00H, 00H
$SG143398 DB	'M', 00H, 00H, 00H
$SG123427 DB	'l', 00H, 'i', 00H, 'b', 00H, 'o', 00H, 'p', 00H, 'u', 00H
	DB	's', 00H, 00H, 00H
$SG123428 DB	'a', 00H, 'c', 00H, '3', 00H, 00H, 00H
$SG131646 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'R', 00H, 'e', 00H, 'f', 00H, 'c', 00H, 'o'
	DB	00H, 'u', 00H, 'n', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG143400 DB	'D', 00H, 00H, 00H
$SG123458 DB	'n', 00H, 'o', 00H, 'n', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG143402 DB	'B', 00H, 00H, 00H
$SG123459 DB	't', 00H, 'f', 00H, 'f', 00H, 00H, 00H
$SG123460 DB	'b', 00H, 'f', 00H, 'f', 00H, 00H, 00H
$SG123462 DB	' ', 00H, '1', 00H, ' ', 00H, '-', 00H, ' ', 00H, 'b', 00H
	DB	'e', 00H, 's', 00H, 't', 00H, ' ', 00H, 'q', 00H, 'u', 00H, 'a'
	DB	00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H
$SG111601 DB	'0', 00H, 00H, 00H
$SG123463 DB	' ', 00H, '2', 00H, ' ', 00H, '-', 00H, ' ', 00H, 'h', 00H
	DB	'i', 00H, 'g', 00H, 'h', 00H, 'e', 00H, 'r', 00H, 00H, 00H
$SG123464 DB	' ', 00H, '3', 00H, ' ', 00H, '-', 00H, ' ', 00H, 'h', 00H
	DB	'i', 00H, 'g', 00H, 'h', 00H, ' ', 00H, 'q', 00H, 'u', 00H, 'a'
	DB	00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H
$SG111602 DB	'1', 00H, 00H, 00H
$SG123465 DB	' ', 00H, '4', 00H, ' ', 00H, '-', 00H, ' ', 00H, 'b', 00H
	DB	'a', 00H, 'l', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'd'
	DB	00H, 00H, 00H
$SG111603 DB	'2', 00H, 00H, 00H
$SG123466 DB	' ', 00H, '5', 00H, ' ', 00H, '-', 00H, ' ', 00H, 'f', 00H
	DB	'a', 00H, 's', 00H, 't', 00H, 00H, 00H
$SG111604 DB	'3', 00H, 00H, 00H
$SG123467 DB	' ', 00H, '6', 00H, ' ', 00H, '-', 00H, ' ', 00H, 'f', 00H
	DB	'a', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H, 00H, 00H
$SG123468 DB	' ', 00H, '7', 00H, ' ', 00H, '-', 00H, ' ', 00H, 'f', 00H
	DB	'a', 00H, 's', 00H, 't', 00H, 'e', 00H, 's', 00H, 't', 00H, 00H
	DB	00H
	ORG $+2
$SG111605 DB	'4', 00H, 00H, 00H
$SG123470 DB	'b', 00H, 'e', 00H, 's', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG111606 DB	'5', 00H, 00H, 00H
$SG123471 DB	'h', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H
	ORG $+2
$SG123472 DB	'h', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 00H, 00H
	ORG $+6
$SG123473 DB	'b', 00H, 'a', 00H, 'l', 00H, 'a', 00H, 'n', 00H, 'c', 00H
	DB	'e', 00H, 'd', 00H, 00H, 00H
	ORG $+6
$SG123474 DB	'f', 00H, 'a', 00H, 's', 00H, 't', 00H, 00H, 00H
	ORG $+6
$SG123475 DB	'f', 00H, 'a', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H
	ORG $+2
$SG123476 DB	'f', 00H, 'a', 00H, 's', 00H, 't', 00H, 'e', 00H, 's', 00H
	DB	't', 00H, 00H, 00H
$SG123478 DB	'A', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+6
$SG123479 DB	'f', 00H, 'u', 00H, 'l', 00H, 'l', 00H, '-', 00H, 'p', 00H
	DB	'e', 00H, 'l', 00H, 00H, 00H
	ORG $+6
$SG123480 DB	'h', 00H, 'a', 00H, 'l', 00H, 'f', 00H, '-', 00H, 'p', 00H
	DB	'e', 00H, 'l', 00H, 00H, 00H
	ORG $+6
$SG123481 DB	'Q', 00H, '-', 00H, 'p', 00H, 'e', 00H, 'l', 00H, 00H, 00H
	ORG $+4
$SG123483 DB	'A', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+6
$SG123484 DB	'1', 00H, '6', 00H, 'x', 00H, '1', 00H, '6', 00H, 00H, 00H
	ORG $+4
$SG123485 DB	'8', 00H, 'x', 00H, '8', 00H, 00H, 00H
$SG123486 DB	'4', 00H, 'x', 00H, '4', 00H, 00H, 00H
$SG123488 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG123489 DB	'1', 00H, '6', 00H, 00H, 00H
	ORG $+2
$SG123490 DB	'3', 00H, '2', 00H, 00H, 00H
	ORG $+2
$SG123491 DB	'6', 00H, '4', 00H, 00H, 00H
	ORG $+6
$SG123495 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+6
$SG123496 DB	'n', 00H, 'o', 00H, 'n', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG123497 DB	'l', 00H, 'u', 00H, 'm', 00H, 'a', 00H, 00H, 00H
	ORG $+6
$SG123498 DB	'c', 00H, 'h', 00H, 'r', 00H, 'o', 00H, 'm', 00H, 'a', 00H
	DB	00H, 00H
	ORG $+2
$SG123499 DB	'a', 00H, 'l', 00H, 'l', 00H, 00H, 00H
$SG123501 DB	'n', 00H, 'o', 00H, 'n', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG123502 DB	'u', 00H, 'p', 00H, 's', 00H, 'c', 00H, 'a', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H
$SG131695 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H
	ORG $+4
$SG123503 DB	'b', 00H, 'o', 00H, 'x', 00H, 00H, 00H
$SG123505 DB	'o', 00H, 'f', 00H, 'f', 00H, 00H, 00H
$SG123506 DB	'x', 00H, '2', 00H, 00H, 00H
	ORG $+2
$SG123507 DB	'x', 00H, '2', 00H, '.', 00H, '5', 00H, 00H, 00H
	ORG $+6
$SG123509 DB	's', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
$SG123510 DB	'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H
	DB	'x', 00H, 00H, 00H
$SG123513 DB	'9', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG123514 DB	'1', 00H, '8', 00H, '0', 00H, 00H, 00H
$SG123515 DB	'2', 00H, '7', 00H, '0', 00H, 00H, 00H
$SG123521 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+6
$SG123522 DB	's', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
$SG123523 DB	'f', 00H, 'i', 00H, 'n', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG123525 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+6
$SG123526 DB	'n', 00H, 'o', 00H, 'n', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG123527 DB	's', 00H, 's', 00H, 'e', 00H, '2', 00H, 00H, 00H
	ORG $+6
$SG123528 DB	's', 00H, 's', 00H, 'e', 00H, '3', 00H, 00H, 00H
	ORG $+6
$SG123529 DB	's', 00H, 's', 00H, 's', 00H, 'e', 00H, '3', 00H, 00H, 00H
	ORG $+4
$SG123530 DB	's', 00H, 's', 00H, 'e', 00H, '4', 00H, '1', 00H, 00H, 00H
	ORG $+4
$SG123531 DB	'a', 00H, 'v', 00H, 'x', 00H, 00H, 00H
$SG123532 DB	'a', 00H, 'v', 00H, 'x', 00H, '2', 00H, 00H, 00H
	ORG $+6
$SG131744 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r'
	DB	00H, 'o', 00H, 'l', 00H, 's', 00H, 00H, 00H
	ORG $+6
$SG131793 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'H', 00H, 'o', 00H, 's', 00H, 't', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, 00H, 00H
$SG131842 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'D', 00H, 'B', 00H, 'C', 00H, 'l', 00H, 'i'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 00H, 00H
	ORG $+6
$SG131891 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'D', 00H, 'B', 00H, 'P', 00H, 'r', 00H, 'o'
	DB	00H, 'v', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG131940 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'n', 00H, 'a', 00H, 'p', 00H, 'i'
	DB	00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG131989 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'N', 00H, 'o', 00H, 't', 00H, 'I', 00H, 'm'
	DB	00H, 'p', 00H, 'l', 00H, 00H, 00H
$SG132038 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG132087 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'E', 00H, 'x', 00H, 'c', 00H, 'e', 00H, 'p'
	DB	00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
$SG123924 DB	'%', 00H, 's', 00H, 00H, 00H
	ORG $+6
$SG132136 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+6
$SG123987 DB	'S', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'y', 00H, 'B', 00H
	DB	'r', 00H, 'i', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 00H, 00H
$SG123988 DB	'I', 00H, 'v', 00H, 'y', 00H, 'B', 00H, 'r', 00H, 'i', 00H
	DB	'd', 00H, 'g', 00H, 'e', 00H, 00H, 00H
	ORG $+4
$SG123989 DB	'S', 00H, 'i', 00H, 'l', 00H, 'v', 00H, 'e', 00H, 'r', 00H
	DB	'm', 00H, 'o', 00H, 'n', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG123990 DB	'H', 00H, 'a', 00H, 's', 00H, 'w', 00H, 'e', 00H, 'l', 00H
	DB	'l', 00H, 00H, 00H
$SG123991 DB	'A', 00H, 'i', 00H, 'r', 00H, 'm', 00H, 'o', 00H, 'n', 00H
	DB	't', 00H, 00H, 00H
$SG123992 DB	'B', 00H, 'r', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 'w', 00H
	DB	'e', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+4
$SG132185 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'C', 00H, 'a', 00H, 'c', 00H, 'h', 00H, 'e'
	DB	00H, 00H, 00H
	ORG $+4
$SG123993 DB	'S', 00H, 'k', 00H, 'y', 00H, 'l', 00H, 'a', 00H, 'k', 00H
	DB	'e', 00H, 00H, 00H
$SG123994 DB	'A', 00H, 'p', 00H, 'o', 00H, 'l', 00H, 'l', 00H, 'o', 00H
	DB	'l', 00H, 'a', 00H, 'k', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG123995 DB	'K', 00H, 'a', 00H, 'b', 00H, 'y', 00H, 'l', 00H, 'a', 00H
	DB	'k', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG123996 DB	'G', 00H, 'e', 00H, 'm', 00H, 'i', 00H, 'n', 00H, 'i', 00H
	DB	'l', 00H, 'a', 00H, 'k', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG123997 DB	'C', 00H, 'o', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'e', 00H
	DB	'l', 00H, 'a', 00H, 'k', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG123998 DB	'C', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 'n', 00H
	DB	'l', 00H, 'a', 00H, 'k', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG123999 DB	'I', 00H, 'c', 00H, 'e', 00H, 'l', 00H, 'a', 00H, 'k', 00H
	DB	'e', 00H, 00H, 00H
$SG132234 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 't', 00H, 'e', 00H, 'n', 00H, 'c'
	DB	00H, 'i', 00H, 'l', 00H, 00H, 00H
$SG124088 DB	'C', 00H, 'B', 00H, 'R', 00H, ' ', 00H, ' ', 00H, 00H, 00H
	ORG $+4
$SG124089 DB	'V', 00H, 'B', 00H, 'R', 00H, ' ', 00H, ' ', 00H, 00H, 00H
	ORG $+4
$SG124090 DB	'A', 00H, 'V', 00H, 'B', 00H, 'R', 00H, ' ', 00H, 00H, 00H
	ORG $+4
$SG132283 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG124091 DB	'Q', 00H, 'V', 00H, 'B', 00H, 'R', 00H, ' ', 00H, 00H, 00H
	ORG $+4
$SG124092 DB	'C', 00H, 'Q', 00H, 'P', 00H, ' ', 00H, ' ', 00H, 00H, 00H
	ORG $+4
$SG124093 DB	'L', 00H, 'A', 00H, ' ', 00H, ' ', 00H, ' ', 00H, 00H, 00H
	ORG $+4
$SG124094 DB	'L', 00H, 'A', 00H, 'H', 00H, 'R', 00H, 'D', 00H, 00H, 00H
	ORG $+4
$SG124095 DB	'I', 00H, 'C', 00H, 'Q', 00H, ' ', 00H, ' ', 00H, 00H, 00H
	ORG $+4
$SG124096 DB	'L', 00H, 'A', 00H, 'I', 00H, 'C', 00H, 'Q', 00H, 00H, 00H
	ORG $+4
$SG124097 DB	'V', 00H, 'C', 00H, 'M', 00H, ' ', 00H, ' ', 00H, 00H, 00H
	ORG $+4
$SG124099 DB	'R', 00H, 'C', 00H, ' ', 00H, 'm', 00H, 'o', 00H, 'd', 00H
	DB	'e', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+4
$SG124100 DB	'1', 00H, '0', 00H, 'b', 00H, 'i', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'p', 00H, 't', 00H, 'h', 00H, ' ', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+4
$SG124101 DB	'F', 00H, 'i', 00H, 'x', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+4
$SG124102 DB	'I', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'l', 00H
	DB	'a', 00H, 'c', 00H, 'e', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+4
$SG124103 DB	'V', 00H, 'U', 00H, 'I', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'f', 00H, 'o', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+4
$SG124104 DB	'T', 00H, 'r', 00H, 'e', 00H, 'l', 00H, 'l', 00H, 'i', 00H
	DB	's', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+4
$SG124105 DB	'A', 00H, 'd', 00H, 'a', 00H, 'p', 00H, 't', 00H, 'i', 00H
	DB	'v', 00H, 'e', 00H, '_', 00H, 'I', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+4
$SG124106 DB	'A', 00H, 'd', 00H, 'a', 00H, 'p', 00H, 't', 00H, 'i', 00H
	DB	'v', 00H, 'e', 00H, '_', 00H, 'B', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+4
$SG124107 DB	'W', 00H, 'e', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't', 00H
	DB	'P', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+4
$SG124108 DB	'W', 00H, 'e', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't', 00H
	DB	'B', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+4
$SG124109 DB	'F', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'D', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'c', 00H, 't', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+4
$SG124110 DB	'B', 00H, '_', 00H, 'P', 00H, 'y', 00H, 'r', 00H, 'a', 00H
	DB	'm', 00H, 'i', 00H, 'd', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+4
$SG124111 DB	' ', 00H, '+', 00H, 'M', 00H, 'a', 00H, 'n', 00H, 'y', 00H
	DB	'B', 00H, 'f', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 's'
	DB	00H, 00H, 00H
	ORG $+4
$SG124112 DB	'P', 00H, 'y', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'Q', 00H
	DB	'P', 00H, 'O', 00H, 'f', 00H, 'f', 00H, 's', 00H, 'e', 00H, 't'
	DB	00H, 00H, 00H
	ORG $+4
$SG124113 DB	'M', 00H, 'B', 00H, 'B', 00H, 'R', 00H, 'C', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+4
$SG124114 DB	'E', 00H, 'x', 00H, 't', 00H, 'B', 00H, 'R', 00H, 'C', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+4
$SG124115 DB	'A', 00H, 'd', 00H, 'a', 00H, 'p', 00H, 't', 00H, 'i', 00H
	DB	'v', 00H, 'e', 00H, '_', 00H, 'L', 00H, 'T', 00H, 'R', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+4
$SG124116 DB	'L', 00H, 'A', 00H, ' ', 00H, 'Q', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+4
$SG124117 DB	'Q', 00H, 'P', 00H, ' ', 00H, 'M', 00H, 'i', 00H, 'n', 00H
	DB	'/', 00H, 'M', 00H, 'a', 00H, 'x', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+4
$SG124118 DB	'I', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'R', 00H
	DB	'e', 00H, 'f', 00H, 'r', 00H, 'e', 00H, 's', 00H, 'h', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+4
$SG124119 DB	'N', 00H, 'o', 00H, ' ', 00H, 'D', 00H, 'e', 00H, 'b', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+4
$SG124120 DB	'N', 00H, 'o', 00H, ' ', 00H, 'G', 00H, 'P', 00H, 'B', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+4
$SG124121 DB	'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H, 'w', 00H
	DB	'e', 00H, 'd', 00H, ' ', 00H, 'B', 00H, 'R', 00H, 'C', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+4
$SG124122 DB	'P', 00H, 'e', 00H, 'r', 00H, 'M', 00H, 'B', 00H, 'Q', 00H
	DB	'P', 00H, '(', 00H, 'C', 00H, 'Q', 00H, 'P', 00H, ')', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+4
$SG124123 DB	'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'B', 00H, 'i', 00H, 'a', 00H, 's', 00H, 'A', 00H, 'd', 00H, 'j'
	DB	00H, 00H, 00H
	ORG $+4
$SG124124 DB	'M', 00H, 'V', 00H, 'C', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'S', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, 00H, 00H
	ORG $+4
$SG124125 DB	'S', 00H, 'A', 00H, 'O', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+4
$SG124126 DB	'M', 00H, 'a', 00H, 'x', 00H, ' ', 00H, 'C', 00H, 'T', 00H
	DB	'U', 00H, ' ', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+4
$SG124127 DB	'T', 00H, 'S', 00H, 'k', 00H, 'i', 00H, 'p', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, 00H, 00H
	ORG $+4
$SG124129 DB	'R', 00H, 'e', 00H, 's', 00H, 'i', 00H, 'z', 00H, 'e', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, 00H, 00H
	ORG $+4
$SG124130 DB	'D', 00H, 'e', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'l', 00H, 'a', 00H, 'c', 00H, 'e', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, 00H, 00H
	ORG $+4
$SG124131 DB	'S', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, ' ', 00H, 'Q', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'i'
	DB	00H, 't', 00H, 'y', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, 00H, 00H
	ORG $+4
$SG124132 DB	'D', 00H, 'e', 00H, 'n', 00H, 'o', 00H, 'i', 00H, 's', 00H
	DB	'e', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, 00H, 00H
	ORG $+4
$SG124133 DB	'M', 00H, 'c', 00H, 't', 00H, 'f', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, 00H, 00H
	ORG $+4
$SG124134 DB	'R', 00H, 'o', 00H, 't', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, 00H, 00H
	ORG $+4
$SG124135 DB	'M', 00H, 'i', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, 00H, 00H
	ORG $+4
$SG124136 DB	'D', 00H, 'e', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'l', 00H
	DB	' ', 00H, 'E', 00H, 'n', 00H, 'h', 00H, 'a', 00H, 'n', 00H, 'c'
	DB	00H, 'e', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, 00H, 00H
	ORG $+4
$SG124137 DB	'P', 00H, 'r', 00H, 'o', 00H, 'c', 00H, ' ', 00H, 'A', 00H
	DB	'm', 00H, 'p', 00H, '.', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, 00H, 00H
	ORG $+4
$SG124138 DB	'I', 00H, 'm', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ' ', 00H
	DB	'S', 00H, 't', 00H, 'a', 00H, 'b', 00H, 'i', 00H, 'l', 00H, 'i'
	DB	00H, 'z', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H
	DB	' ', 00H, ' ', 00H, 00H, 00H
	ORG $+4
$SG124139 DB	'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'S', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, 00H, 00H
	ORG $+4
$SG132332 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'M', 00H, 'a', 00H, 'p', 00H, 00H, 00H
$SG124140 DB	'F', 00H, 'P', 00H, 'S', 00H, ' ', 00H, 'C', 00H, 'o', 00H
	DB	'n', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 'o'
	DB	00H, 'n', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, 00H, 00H
	ORG $+4
$SG124141 DB	'F', 00H, 'P', 00H, 'S', 00H, ' ', 00H, 'C', 00H, 'o', 00H
	DB	'n', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 'o'
	DB	00H, 'n', 00H, ' ', 00H, '(', 00H, 'A', 00H, 'd', 00H, 'v', 00H
	DB	'.', 00H, ')', 00H, 00H, 00H
	ORG $+4
$SG132337 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'U', 00H, 't', 00H, 'i', 00H, 'l', 00H, 00H
	DB	00H
	ORG $+6
$SG132386 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'e', 00H, 'c', 00H, 'u', 00H, 'r'
	DB	00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H
	ORG $+6
$SG132435 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'S', 00H, 'y', 00H, 'n', 00H, 'c', 00H, 00H
	DB	00H
	ORG $+6
$SG132484 DB	'a', 00H, 't', 00H, 'l', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 'I', 00H, 'S', 00H, 'A', 00H, 'P', 00H, 'I'
	DB	00H, 00H, 00H
	ORG $+4
$SG165694 DB	'invalid argument', 00H
	ORG $+7
$SG165699 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG165696 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xmemory', 00H
$SG109692 DB	'y', 00H, 'v', 00H, '1', 00H, '2', 00H, '(', 00H, '9', 00H
	DB	'b', 00H, 'i', 00H, 't', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG165697 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H
	DB	'1', 00H, '0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H
$SG165698 DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+2
$SG165757 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xlocale', 00H
$SG109685 DB	'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, 00H, 00H
$SG109686 DB	'n', 00H, 'v', 00H, '1', 00H, '2', 00H, 00H, 00H
	ORG $+6
$SG109687 DB	'y', 00H, 'v', 00H, '1', 00H, '2', 00H, 00H, 00H
	ORG $+6
$SG109688 DB	'y', 00H, 'u', 00H, 'y', 00H, '2', 00H, 00H, 00H
	ORG $+6
$SG109689 DB	'y', 00H, 'u', 00H, 'v', 00H, '4', 00H, '2', 00H, '2', 00H
	DB	00H, 00H
	ORG $+2
$SG109690 DB	'n', 00H, 'v', 00H, '1', 00H, '6', 00H, 00H, 00H
	ORG $+6
$SG109691 DB	'y', 00H, 'u', 00H, 'v', 00H, '4', 00H, '4', 00H, '4', 00H
	DB	00H, 00H
	ORG $+2
$SG109693 DB	'y', 00H, 'v', 00H, '1', 00H, '2', 00H, '(', 00H, '1', 00H
	DB	'0', 00H, 'b', 00H, 'i', 00H, 't', 00H, ')', 00H, 00H, 00H
$SG109694 DB	'y', 00H, 'v', 00H, '1', 00H, '2', 00H, '(', 00H, '1', 00H
	DB	'2', 00H, 'b', 00H, 'i', 00H, 't', 00H, ')', 00H, 00H, 00H
$SG109695 DB	'y', 00H, 'v', 00H, '1', 00H, '2', 00H, '(', 00H, '1', 00H
	DB	'4', 00H, 'b', 00H, 'i', 00H, 't', 00H, ')', 00H, 00H, 00H
$SG109696 DB	'y', 00H, 'v', 00H, '1', 00H, '2', 00H, '(', 00H, '1', 00H
	DB	'6', 00H, 'b', 00H, 'i', 00H, 't', 00H, ')', 00H, 00H, 00H
$SG109697 DB	'p', 00H, '0', 00H, '1', 00H, '0', 00H, 00H, 00H
	ORG $+6
$SG109698 DB	'y', 00H, 'u', 00H, 'v', 00H, '4', 00H, '2', 00H, '2', 00H
	DB	'(', 00H, '9', 00H, 'b', 00H, 'i', 00H, 't', 00H, ')', 00H, 00H
	DB	00H
	ORG $+6
$SG109699 DB	'y', 00H, 'u', 00H, 'v', 00H, '4', 00H, '2', 00H, '2', 00H
	DB	'(', 00H, '1', 00H, '0', 00H, 'b', 00H, 'i', 00H, 't', 00H, ')'
	DB	00H, 00H, 00H
	ORG $+4
$SG109700 DB	'y', 00H, 'u', 00H, 'v', 00H, '4', 00H, '2', 00H, '2', 00H
	DB	'(', 00H, '1', 00H, '2', 00H, 'b', 00H, 'i', 00H, 't', 00H, ')'
	DB	00H, 00H, 00H
	ORG $+4
$SG109701 DB	'y', 00H, 'u', 00H, 'v', 00H, '4', 00H, '2', 00H, '2', 00H
	DB	'(', 00H, '1', 00H, '4', 00H, 'b', 00H, 'i', 00H, 't', 00H, ')'
	DB	00H, 00H, 00H
	ORG $+4
$SG109702 DB	'y', 00H, 'u', 00H, 'v', 00H, '4', 00H, '2', 00H, '2', 00H
	DB	'(', 00H, '1', 00H, '6', 00H, 'b', 00H, 'i', 00H, 't', 00H, ')'
	DB	00H, 00H, 00H
	ORG $+4
$SG109703 DB	'p', 00H, '2', 00H, '1', 00H, '0', 00H, 00H, 00H
	ORG $+6
$SG109704 DB	'y', 00H, 'u', 00H, 'v', 00H, '4', 00H, '4', 00H, '4', 00H
	DB	'(', 00H, '9', 00H, 'b', 00H, 'i', 00H, 't', 00H, ')', 00H, 00H
	DB	00H
	ORG $+6
$SG109705 DB	'y', 00H, 'u', 00H, 'v', 00H, '4', 00H, '4', 00H, '4', 00H
	DB	'(', 00H, '1', 00H, '0', 00H, 'b', 00H, 'i', 00H, 't', 00H, ')'
	DB	00H, 00H, 00H
	ORG $+4
$SG109706 DB	'y', 00H, 'u', 00H, 'v', 00H, '4', 00H, '4', 00H, '4', 00H
	DB	'(', 00H, '1', 00H, '2', 00H, 'b', 00H, 'i', 00H, 't', 00H, ')'
	DB	00H, 00H, 00H
	ORG $+4
$SG109707 DB	'y', 00H, 'u', 00H, 'v', 00H, '4', 00H, '4', 00H, '4', 00H
	DB	'(', 00H, '1', 00H, '4', 00H, 'b', 00H, 'i', 00H, 't', 00H, ')'
	DB	00H, 00H, 00H
	ORG $+4
$SG109708 DB	'y', 00H, 'u', 00H, 'v', 00H, '4', 00H, '4', 00H, '4', 00H
	DB	'(', 00H, '1', 00H, '6', 00H, 'b', 00H, 'i', 00H, 't', 00H, ')'
	DB	00H, 00H, 00H
	ORG $+4
$SG109709 DB	'y', 00H, 'u', 00H, 'v', 00H, 'a', 00H, '4', 00H, '4', 00H
	DB	'4', 00H, 00H, 00H
$SG109710 DB	'y', 00H, 'u', 00H, 'v', 00H, 'a', 00H, '4', 00H, '4', 00H
	DB	'4', 00H, '(', 00H, '1', 00H, '6', 00H, 'b', 00H, 'i', 00H, 't'
	DB	00H, ')', 00H, 00H, 00H
	ORG $+2
$SG109711 DB	'r', 00H, 'g', 00H, 'b', 00H, '2', 00H, '4', 00H, 'r', 00H
	DB	00H, 00H
	ORG $+2
$SG109712 DB	'r', 00H, 'g', 00H, 'b', 00H, '3', 00H, '2', 00H, 'r', 00H
	DB	00H, 00H
	ORG $+2
$SG109713 DB	'r', 00H, 'g', 00H, 'b', 00H, '2', 00H, '4', 00H, 00H, 00H
	ORG $+4
$SG109714 DB	'r', 00H, 'g', 00H, 'b', 00H, '3', 00H, '2', 00H, 00H, 00H
	ORG $+4
$SG109715 DB	'b', 00H, 'g', 00H, 'r', 00H, '2', 00H, '4', 00H, 00H, 00H
	ORG $+4
$SG109716 DB	'b', 00H, 'g', 00H, 'r', 00H, '3', 00H, '2', 00H, 00H, 00H
	ORG $+4
$SG109717 DB	'r', 00H, 'g', 00H, 'b', 00H, 00H, 00H
$SG109718 DB	'r', 00H, 'g', 00H, 'b', 00H, 'a', 00H, 00H, 00H
	ORG $+6
$SG109719 DB	'g', 00H, 'b', 00H, 'r', 00H, 00H, 00H
$SG109720 DB	'g', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 00H, 00H
	ORG $+6
$SG109721 DB	'y', 00H, 'c', 00H, '4', 00H, '8', 00H, 00H, 00H
	ORG $+2
$SG109722 DB	'y', 00H, '8', 00H, 00H, 00H
	ORG $+6
$SG109723 DB	'y', 00H, 'c', 00H, '1', 00H, '6', 00H, 00H, 00H
	ORG $+6
?HW_DECODE_LIST@@3QBUCodecMap@@B DD 01bH		; HW_DECODE_LIST
	DD	01H
	DD	0adH
	DD	02H
	DD	02H
	DD	04H
	DD	08bH
	DD	06H
	DD	0a7H
	DD	07H
	DD	046H
	DD	08H
$SG118472 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+6
$SG118474 DB	'c', 00H, 'o', 00H, 'p', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG118599 DB	'.', 00H, 0aH, 00H, 00H, 00H
	ORG $+6
$SG118600 DB	' ', 00H, 'f', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 00H, 00H
	ORG $+4
$SG118603 DB	'a', 00H, 'v', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H
	DB	'c', 00H, '-', 00H, '5', 00H, '8', 00H, '.', 00H, 'd', 00H, 'l'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG118604 DB	'a', 00H, 'v', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H
	DB	'a', 00H, 't', 00H, '-', 00H, '5', 00H, '8', 00H, '.', 00H, 'd'
	DB	00H, 'l', 00H, 'l', 00H, 00H, 00H
$SG118605 DB	'a', 00H, 'v', 00H, 'u', 00H, 't', 00H, 'i', 00H, 'l', 00H
	DB	'-', 00H, '5', 00H, '6', 00H, '.', 00H, 'd', 00H, 'l', 00H, 'l'
	DB	00H, 00H, 00H
	ORG $+4
$SG118606 DB	'a', 00H, 'v', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '-', 00H, '7', 00H, '.', 00H, 'd', 00H, 'l'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG118607 DB	's', 00H, 'w', 00H, 'r', 00H, 'e', 00H, 's', 00H, 'a', 00H
	DB	'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '-', 00H, '3', 00H, '.'
	DB	00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+6
$SG143404 DB	'V', 00H, 'a', 00H, 'l', 00H, 00H, 00H
$SG143406 DB	'F', 00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'R', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 00H, 00H
$SG143408 DB	'N', 00H, 'o', 00H, 'R', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'v', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG143410 DB	'D', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
$SG110658 DB	'H', 00H, '.', 00H, '2', 00H, '6', 00H, '4', 00H, '/', 00H
	DB	'A', 00H, 'V', 00H, 'C', 00H, 00H, 00H
	ORG $+4
$SG110660 DB	'H', 00H, '.', 00H, '2', 00H, '6', 00H, '5', 00H, '/', 00H
	DB	'H', 00H, 'E', 00H, 'V', 00H, 'C', 00H, 00H, 00H
	ORG $+2
$SG110662 DB	'M', 00H, 'P', 00H, 'E', 00H, 'G', 00H, '2', 00H, 00H, 00H
	ORG $+4
$SG110664 DB	'M', 00H, 'P', 00H, 'E', 00H, 'G', 00H, '1', 00H, 00H, 00H
	ORG $+4
$SG110666 DB	'V', 00H, 'C', 00H, '-', 00H, '1', 00H, 00H, 00H
	ORG $+6
$SG110668 DB	'M', 00H, 'P', 00H, 'E', 00H, 'G', 00H, '4', 00H, 00H, 00H
	ORG $+4
$SG110670 DB	'V', 00H, 'P', 00H, '8', 00H, 00H, 00H
$SG110672 DB	'V', 00H, 'P', 00H, '9', 00H, 00H, 00H
$SG110674 DB	'u', 00H, 'n', 00H, 'k', 00H, 'n', 00H, 'o', 00H, 'w', 00H
	DB	'n', 00H, 00H, 00H
$SG118901 DB	'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, 00H, 00H
$SG118902 DB	's', 00H, 'r', 00H, 't', 00H, 00H, 00H
$SG118903 DB	'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG118910 DB	'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, 00H, 00H
$SG118911 DB	'k', 00H, 'i', 00H, 'g', 00H, 'o', 00H, 'u', 00H, 00H, 00H
	ORG $+4
$SG118912 DB	'b', 00H, 'o', 00H, 'x', 00H, 00H, 00H
$SG118913 DB	'd', 00H, 'r', 00H, 'a', 00H, 'w', 00H, 00H, 00H
	ORG $+6
$SG110781 DB	'u', 00H, 'n', 00H, 'k', 00H, 'n', 00H, 'o', 00H, 'w', 00H
	DB	'n', 00H, 00H, 00H
?list_colormatrix@@3QBUCX_DESC@@B DQ FLAT:$SG111276	; list_colormatrix
	DD	02H
	ORG $+4
	DQ	FLAT:$SG111277
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG111278
	DD	01H
	ORG $+4
	DQ	FLAT:$SG111279
	DD	06H
	ORG $+4
	DQ	FLAT:$SG111280
	DD	05H
	ORG $+4
	DQ	FLAT:$SG111281
	DD	07H
	ORG $+4
	DQ	FLAT:$SG111282
	DD	08H
	ORG $+4
	DQ	FLAT:$SG111283
	DD	04H
	ORG $+4
	DQ	FLAT:$SG111284
	DD	00H
	ORG $+4
	DQ	FLAT:$SG111285
	DD	09H
	ORG $+4
	DQ	FLAT:$SG111286
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG111287
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG111288
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG111289
	DD	0eH
	ORG $+4
	DQ	FLAT:$SG111290
	DD	0fH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG111276 DB	'u', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'f', 00H, 00H, 00H
	ORG $+4
$SG111277 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+6
$SG111278 DB	'b', 00H, 't', 00H, '7', 00H, '0', 00H, '9', 00H, 00H, 00H
	ORG $+4
$SG111279 DB	's', 00H, 'm', 00H, 'p', 00H, 't', 00H, 'e', 00H, '1', 00H
	DB	'7', 00H, '0', 00H, 'm', 00H, 00H, 00H
	ORG $+4
$SG111280 DB	'b', 00H, 't', 00H, '4', 00H, '7', 00H, '0', 00H, 'b', 00H
	DB	'g', 00H, 00H, 00H
$SG111281 DB	's', 00H, 'm', 00H, 'p', 00H, 't', 00H, 'e', 00H, '2', 00H
	DB	'4', 00H, '0', 00H, 'm', 00H, 00H, 00H
	ORG $+4
$SG111282 DB	'Y', 00H, 'C', 00H, 'g', 00H, 'C', 00H, 'o', 00H, 00H, 00H
	ORG $+4
$SG111283 DB	'f', 00H, 'c', 00H, 'c', 00H, 00H, 00H
$SG111284 DB	'G', 00H, 'B', 00H, 'R', 00H, 00H, 00H
$SG111285 DB	'b', 00H, 't', 00H, '2', 00H, '0', 00H, '2', 00H, '0', 00H
	DB	'n', 00H, 'c', 00H, 00H, 00H
	ORG $+6
$SG111286 DB	'b', 00H, 't', 00H, '2', 00H, '0', 00H, '2', 00H, '0', 00H
	DB	'c', 00H, 00H, 00H
$SG111287 DB	'd', 00H, 'e', 00H, 'r', 00H, 'i', 00H, 'v', 00H, 'e', 00H
	DB	'd', 00H, '-', 00H, 'n', 00H, 'c', 00H, 'l', 00H, 00H, 00H
$SG111288 DB	'd', 00H, 'e', 00H, 'r', 00H, 'i', 00H, 'v', 00H, 'e', 00H
	DB	'd', 00H, '-', 00H, 'c', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG111289 DB	'i', 00H, 'c', 00H, 't', 00H, 'c', 00H, 'o', 00H, 00H, 00H
	ORG $+4
$SG111290 DB	'2', 00H, '1', 00H, '0', 00H, '0', 00H, '-', 00H, 'l', 00H
	DB	'm', 00H, 's', 00H, 00H, 00H
	ORG $+6
$SG144107 DB	'A', 00H, 'p', 00H, 'p', 00H, 'I', 00H, 'D', 00H, 00H, 00H
	ORG $+4
$SG144108 DB	'C', 00H, 'L', 00H, 'S', 00H, 'I', 00H, 'D', 00H, 00H, 00H
	ORG $+4
$SG144109 DB	'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'o', 00H, 'n', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, 'C', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
	ORG $+6
$SG144110 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'T', 00H, 'y', 00H
	DB	'p', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG144111 DB	'I', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'f', 00H
	DB	'a', 00H, 'c', 00H, 'e', 00H, 00H, 00H
	ORG $+4
$SG144112 DB	'H', 00H, 'a', 00H, 'r', 00H, 'd', 00H, 'w', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG144113 DB	'M', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG144114 DB	'S', 00H, 'A', 00H, 'M', 00H, 00H, 00H
$SG144115 DB	'S', 00H, 'E', 00H, 'C', 00H, 'U', 00H, 'R', 00H, 'I', 00H
	DB	'T', 00H, 'Y', 00H, 00H, 00H
	ORG $+6
$SG144116 DB	'S', 00H, 'Y', 00H, 'S', 00H, 'T', 00H, 'E', 00H, 'M', 00H
	DB	00H, 00H
	ORG $+2
$SG144117 DB	'S', 00H, 'o', 00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H
	DB	'r', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG144118 DB	'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 'L', 00H, 'i', 00H
	DB	'b', 00H, 00H, 00H
?list_transfer@@3QBUCX_DESC@@B DQ FLAT:$SG111431	; list_transfer
	DD	02H
	ORG $+4
	DQ	FLAT:$SG111432
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG111433
	DD	01H
	ORG $+4
	DQ	FLAT:$SG111434
	DD	06H
	ORG $+4
	DQ	FLAT:$SG111435
	DD	04H
	ORG $+4
	DQ	FLAT:$SG111436
	DD	05H
	ORG $+4
	DQ	FLAT:$SG111437
	DD	07H
	ORG $+4
	DQ	FLAT:$SG111438
	DD	08H
	ORG $+4
	DQ	FLAT:$SG111439
	DD	09H
	ORG $+4
	DQ	FLAT:$SG111440
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG111441
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG111442
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG111443
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG111444
	DD	0eH
	ORG $+4
	DQ	FLAT:$SG111445
	DD	0fH
	ORG $+4
	DQ	FLAT:$SG111446
	DD	010H
	ORG $+4
	DQ	FLAT:$SG111447
	DD	011H
	ORG $+4
	DQ	FLAT:$SG111448
	DD	012H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG111431 DB	'u', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'f', 00H, 00H, 00H
	ORG $+4
$SG111432 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+6
$SG111433 DB	'b', 00H, 't', 00H, '7', 00H, '0', 00H, '9', 00H, 00H, 00H
	ORG $+4
$SG111434 DB	's', 00H, 'm', 00H, 'p', 00H, 't', 00H, 'e', 00H, '1', 00H
	DB	'7', 00H, '0', 00H, 'm', 00H, 00H, 00H
	ORG $+4
$SG111435 DB	'b', 00H, 't', 00H, '4', 00H, '7', 00H, '0', 00H, 'm', 00H
	DB	00H, 00H
	ORG $+2
$SG111436 DB	'b', 00H, 't', 00H, '4', 00H, '7', 00H, '0', 00H, 'b', 00H
	DB	'g', 00H, 00H, 00H
$SG111437 DB	's', 00H, 'm', 00H, 'p', 00H, 't', 00H, 'e', 00H, '2', 00H
	DB	'4', 00H, '0', 00H, 'm', 00H, 00H, 00H
	ORG $+4
$SG111438 DB	'l', 00H, 'i', 00H, 'n', 00H, 'e', 00H, 'a', 00H, 'r', 00H
	DB	00H, 00H
	ORG $+2
$SG111439 DB	'l', 00H, 'o', 00H, 'g', 00H, '1', 00H, '0', 00H, '0', 00H
	DB	00H, 00H
	ORG $+2
$SG111440 DB	'l', 00H, 'o', 00H, 'g', 00H, '3', 00H, '1', 00H, '6', 00H
	DB	00H, 00H
	ORG $+2
$SG111441 DB	'i', 00H, 'e', 00H, 'c', 00H, '6', 00H, '1', 00H, '9', 00H
	DB	'6', 00H, '6', 00H, '-', 00H, '2', 00H, '-', 00H, '4', 00H, 00H
	DB	00H
	ORG $+6
$SG111442 DB	'b', 00H, 't', 00H, '1', 00H, '3', 00H, '6', 00H, '1', 00H
	DB	'e', 00H, 00H, 00H
$SG111443 DB	'i', 00H, 'e', 00H, 'c', 00H, '6', 00H, '1', 00H, '9', 00H
	DB	'6', 00H, '6', 00H, '-', 00H, '2', 00H, '-', 00H, '1', 00H, 00H
	DB	00H
	ORG $+6
$SG111444 DB	'b', 00H, 't', 00H, '2', 00H, '0', 00H, '2', 00H, '0', 00H
	DB	'-', 00H, '1', 00H, '0', 00H, 00H, 00H
	ORG $+4
$SG111445 DB	'b', 00H, 't', 00H, '2', 00H, '0', 00H, '2', 00H, '0', 00H
	DB	'-', 00H, '1', 00H, '2', 00H, 00H, 00H
	ORG $+4
$SG111446 DB	's', 00H, 'm', 00H, 'p', 00H, 't', 00H, 'e', 00H, '2', 00H
	DB	'0', 00H, '8', 00H, '4', 00H, 00H, 00H
	ORG $+4
$SG111447 DB	's', 00H, 'm', 00H, 'p', 00H, 't', 00H, 'e', 00H, '4', 00H
	DB	'2', 00H, '8', 00H, 00H, 00H
	ORG $+6
$SG111448 DB	'a', 00H, 'r', 00H, 'i', 00H, 'b', 00H, '-', 00H, 's', 00H
	DB	'r', 00H, 'd', 00H, '-', 00H, 'b', 00H, '6', 00H, '7', 00H, 00H
	DB	00H
	ORG $+6
?list_colorprim@@3QBUCX_DESC@@B DQ FLAT:$SG111580	; list_colorprim
	DD	02H
	ORG $+4
	DQ	FLAT:$SG111581
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG111582
	DD	01H
	ORG $+4
	DQ	FLAT:$SG111583
	DD	06H
	ORG $+4
	DQ	FLAT:$SG111584
	DD	04H
	ORG $+4
	DQ	FLAT:$SG111585
	DD	05H
	ORG $+4
	DQ	FLAT:$SG111586
	DD	07H
	ORG $+4
	DQ	FLAT:$SG111587
	DD	08H
	ORG $+4
	DQ	FLAT:$SG111588
	DD	09H
	ORG $+4
	DQ	FLAT:$SG111589
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG111590
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG111591
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG111592
	DD	0dH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG111580 DB	'u', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'f', 00H, 00H, 00H
	ORG $+4
$SG111581 DB	'a', 00H, 'u', 00H, 't', 00H, 'o', 00H, 00H, 00H
	ORG $+6
$SG111582 DB	'b', 00H, 't', 00H, '7', 00H, '0', 00H, '9', 00H, 00H, 00H
	ORG $+4
$SG111583 DB	's', 00H, 'm', 00H, 'p', 00H, 't', 00H, 'e', 00H, '1', 00H
	DB	'7', 00H, '0', 00H, 'm', 00H, 00H, 00H
	ORG $+4
$SG111584 DB	'b', 00H, 't', 00H, '4', 00H, '7', 00H, '0', 00H, 'm', 00H
	DB	00H, 00H
	ORG $+2
$SG111585 DB	'b', 00H, 't', 00H, '4', 00H, '7', 00H, '0', 00H, 'b', 00H
	DB	'g', 00H, 00H, 00H
$SG111586 DB	's', 00H, 'm', 00H, 'p', 00H, 't', 00H, 'e', 00H, '2', 00H
	DB	'4', 00H, '0', 00H, 'm', 00H, 00H, 00H
	ORG $+4
$SG111587 DB	'f', 00H, 'i', 00H, 'l', 00H, 'm', 00H, 00H, 00H
	ORG $+6
$SG111588 DB	'b', 00H, 't', 00H, '2', 00H, '0', 00H, '2', 00H, '0', 00H
	DB	00H, 00H
	ORG $+2
$SG111589 DB	's', 00H, 't', 00H, '4', 00H, '2', 00H, '8', 00H, 00H, 00H
	ORG $+4
$SG111590 DB	's', 00H, 't', 00H, '4', 00H, '3', 00H, '1', 00H, '-', 00H
	DB	'2', 00H, 00H, 00H
$SG111591 DB	's', 00H, 't', 00H, '4', 00H, '3', 00H, '2', 00H, '-', 00H
	DB	'1', 00H, 00H, 00H
$SG111592 DB	'e', 00H, 'b', 00H, 'u', 00H, '3', 00H, '2', 00H, '1', 00H
	DB	'3', 00H, '-', 00H, 'e', 00H, 00H, 00H
$SG111610 DB	't', 00H, 'v', 00H, 00H, 00H
	ORG $+6
?list_videoformat@@3QBUCX_DESC@@B DQ FLAT:$SG111594	; list_videoformat
	DD	05H
	ORG $+4
	DQ	FLAT:$SG111595
	DD	02H
	ORG $+4
	DQ	FLAT:$SG111596
	DD	00H
	ORG $+4
	DQ	FLAT:$SG111597
	DD	01H
	ORG $+4
	DQ	FLAT:$SG111598
	DD	03H
	ORG $+4
	DQ	FLAT:$SG111599
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG111594 DB	'u', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'f', 00H, 00H, 00H
	ORG $+4
$SG111595 DB	'n', 00H, 't', 00H, 's', 00H, 'c', 00H, 00H, 00H
	ORG $+6
$SG111596 DB	'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'o', 00H, 'n', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, 00H, 00H
	ORG $+4
$SG111597 DB	'p', 00H, 'a', 00H, 'l', 00H, 00H, 00H
$SG111598 DB	's', 00H, 'e', 00H, 'c', 00H, 'a', 00H, 'm', 00H, 00H, 00H
	ORG $+4
$SG111599 DB	'm', 00H, 'a', 00H, 'c', 00H, 00H, 00H
$SG111608 DB	'l', 00H, 'i', 00H, 'm', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'd', 00H, 00H, 00H
$SG111609 DB	'f', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG111611 DB	'p', 00H, 'c', 00H, 00H, 00H
	ORG $+6
$SG145250 DB	'l', 00H, 'p', 00H, 's', 00H, 'z', 00H, 'P', 00H, 'a', 00H
	DB	't', 00H, 'h', 00H, 'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, ' '
	DB	00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+4
$SG145251 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG145252 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H
	DB	'1', 00H, '0', 00H, '5', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l'
	DB	00H, 'm', 00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a'
	DB	00H, 't', 00H, 'l', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H
	ORG $+6
?list_empty@@3QBUCX_DESC@@B DQ 0000000000000000H	; list_empty
	DD	00H
	ORG $+4
$SG112693 DB	't', 00H, 'r', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 00H, 00H
	ORG $+4
$SG112694 DB	'd', 00H, 'e', 00H, 'b', 00H, 'u', 00H, 'g', 00H, 00H, 00H
	ORG $+4
$SG112695 DB	'm', 00H, 'o', 00H, 'r', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG112696 DB	'i', 00H, 'n', 00H, 'f', 00H, 'o', 00H, 00H, 00H
	ORG $+6
$SG112697 DB	'w', 00H, 'a', 00H, 'r', 00H, 'n', 00H, 00H, 00H
	ORG $+6
$SG112698 DB	'e', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, 00H, 00H
	ORG $+4
$SG112700 DB	'c', 00H, 'f', 00H, 'r', 00H, 00H, 00H
$SG112701 DB	'v', 00H, 'f', 00H, 'r', 00H, 00H, 00H
$SG112702 DB	'f', 00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'c', 00H
	DB	'f', 00H, 'r', 00H, 00H, 00H
	ORG $+6
$SG112704 DB	's', 00H, 'w', 00H, 'r', 00H, 00H, 00H
$SG112705 DB	's', 00H, 'o', 00H, 'x', 00H, 'r', 00H, 00H, 00H
CONST	ENDS
;	COMDAT IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT IID_IRegistrar
CONST	SEGMENT
IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT CLSID_Registrar
CONST	SEGMENT
CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	__local_stdio_printf_options
PUBLIC	_vswprintf_s_l
PUBLIC	swprintf_s
PUBLIC	HRESULT_FROM_WIN32
PUBLIC	??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
PUBLIC	??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
PUBLIC	??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
PUBLIC	?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z		; ATL::CCRTAllocator::Allocate
PUBLIC	?Free@CCRTAllocator@ATL@@SAXPEAX@Z		; ATL::CCRTAllocator::Free
PUBLIC	??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
PUBLIC	??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEB_W@Z	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
PUBLIC	??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEB_W@Z	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
PUBLIC	??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ	; ATL::CTraceCategoryEx<2,0>::operator unsigned int
PUBLIC	??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEB_W@Z	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
PUBLIC	??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEB_W@Z	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
PUBLIC	??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
PUBLIC	??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
PUBLIC	??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ	; ATL::CTraceCategoryEx<32,0>::operator unsigned int
PUBLIC	??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
PUBLIC	??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
PUBLIC	??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
PUBLIC	??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
PUBLIC	??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
PUBLIC	??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
PUBLIC	?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z		; ATL::CTrace::GetCategoryName
PUBLIC	?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z		; ATL::CTrace::TraceV
PUBLIC	?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z	; ATL::CTrace::TraceV
PUBLIC	?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z	; ATL::CTrace::RegisterCategory
PUBLIC	??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
PUBLIC	??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
PUBLIC	??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
PUBLIC	?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
PUBLIC	?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free
PUBLIC	??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>
PUBLIC	?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
PUBLIC	??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>
PUBLIC	??0CPreserveLastError@ATL@@QEAA@XZ		; ATL::CPreserveLastError::CPreserveLastError
PUBLIC	??1CPreserveLastError@ATL@@QEAA@XZ		; ATL::CPreserveLastError::~CPreserveLastError
PUBLIC	??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
PUBLIC	??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ	; ATL::CTraceFileAndLineInfo::operator()
PUBLIC	?_AtlRaiseException@ATL@@YAXKK@Z		; ATL::_AtlRaiseException
PUBLIC	?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z ; ATL::_AtlInitializeCriticalSectionEx
PUBLIC	??0CComCriticalSection@ATL@@QEAA@XZ		; ATL::CComCriticalSection::CComCriticalSection
PUBLIC	??1CComCriticalSection@ATL@@QEAA@XZ		; ATL::CComCriticalSection::~CComCriticalSection
PUBLIC	?Init@CComCriticalSection@ATL@@QEAAJXZ		; ATL::CComCriticalSection::Init
PUBLIC	?Term@CComCriticalSection@ATL@@QEAAJXZ		; ATL::CComCriticalSection::Term
PUBLIC	?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
PUBLIC	??0_ATL_COM_MODULE70@ATL@@QEAA@XZ		; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70
PUBLIC	??1_ATL_COM_MODULE70@ATL@@QEAA@XZ		; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70
PUBLIC	??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
PUBLIC	??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
PUBLIC	?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
PUBLIC	?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
PUBLIC	??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
PUBLIC	??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ		; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70
PUBLIC	??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ		; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70
PUBLIC	?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z ; ATL::AtlWinModuleInit
PUBLIC	?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm
PUBLIC	??0CAtlComModule@ATL@@QEAA@XZ			; ATL::CAtlComModule::CAtlComModule
PUBLIC	??1CAtlComModule@ATL@@QEAA@XZ			; ATL::CAtlComModule::~CAtlComModule
PUBLIC	?Term@CAtlComModule@ATL@@QEAAXXZ		; ATL::CAtlComModule::Term
PUBLIC	??0CAtlWinModule@ATL@@QEAA@XZ			; ATL::CAtlWinModule::CAtlWinModule
PUBLIC	??1CAtlWinModule@ATL@@QEAA@XZ			; ATL::CAtlWinModule::~CAtlWinModule
PUBLIC	?Term@CAtlWinModule@ATL@@QEAAXXZ		; ATL::CAtlWinModule::Term
PUBLIC	??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z		; ATL::AtlMultiply<unsigned __int64>
PUBLIC	__JustMyCode_Default
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@		; `string'
PUBLIC	??_C@_13COJANIEC@?$AA0@				; `string'
PUBLIC	??_C@_1OE@BPCMJDLP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A ; ATL::atlTraceGeneral
PUBLIC	?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
PUBLIC	?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A ; ATL::atlTraceQI
PUBLIC	?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
PUBLIC	?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A ; ATL::atlTraceRefcount
PUBLIC	?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
PUBLIC	?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
PUBLIC	?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A ; ATL::atlTraceHosting
PUBLIC	?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A ; ATL::atlTraceDBClient
PUBLIC	?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A ; ATL::atlTraceDBProvider
PUBLIC	?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A ; ATL::atlTraceSnapin
PUBLIC	?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
PUBLIC	?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A ; ATL::atlTraceAllocation
PUBLIC	?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
PUBLIC	?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A ; ATL::atlTraceTime
PUBLIC	?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A ; ATL::atlTraceCache
PUBLIC	?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A ; ATL::atlTraceStencil
PUBLIC	?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
PUBLIC	?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A ; ATL::atlTraceMap
PUBLIC	?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A ; ATL::atlTraceUtil
PUBLIC	?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A ; ATL::atlTraceSecurity
PUBLIC	?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A ; ATL::atlTraceSync
PUBLIC	?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A ; ATL::atlTraceISAPI
PUBLIC	?m_nLevel@CTrace@ATL@@1IA			; ATL::CTrace::m_nLevel
PUBLIC	?m_nCategory@CTrace@ATL@@1IA			; ATL::CTrace::m_nCategory
PUBLIC	?m_nLastCategory@CTrace@ATL@@1IA		; ATL::CTrace::m_nLastCategory
PUBLIC	?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A	; ATL::CTrace::m_nMap
PUBLIC	??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@ ; `string'
PUBLIC	??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@ ; `string'
PUBLIC	??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@ ; `string'
PUBLIC	??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@		; `string'
PUBLIC	??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ ; `string'
PUBLIC	??_C@_1OE@GMIHPBDM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	?m_bInitFailed@CAtlBaseModule@ATL@@2_NA		; ATL::CAtlBaseModule::m_bInitFailed
PUBLIC	??_C@_1OC@KMMBJFLB@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_0HB@NHAHFMOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1IA@KEEOONGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ ; `string'
PUBLIC	?_AtlComModule@ATL@@3VCAtlComModule@1@A		; ATL::_AtlComModule
PUBLIC	?_AtlWinModule@ATL@@3VCAtlWinModule@1@A		; ATL::_AtlWinModule
PUBLIC	??_C@_1IG@OPJAFKJH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ ; `string'
PUBLIC	??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ ; `string'
PUBLIC	??_C@_1OK@ENELOBIL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ ; `string'
EXTRN	atexit:PROC
EXTRN	__imp__CrtDbgReportW:PROC
EXTRN	__imp_free:PROC
EXTRN	__imp_malloc:PROC
EXTRN	__imp___stdio_common_vswprintf:PROC
EXTRN	__imp___stdio_common_vswprintf_s:PROC
EXTRN	__imp___stdio_common_vsnwprintf_s:PROC
EXTRN	memset:PROC
EXTRN	__imp_wcscpy_s:PROC
EXTRN	__imp_wcslen:PROC
EXTRN	__imp_DecodePointer:PROC
EXTRN	__imp_RaiseException:PROC
EXTRN	__imp_GetLastError:PROC
EXTRN	__imp_SetLastError:PROC
EXTRN	__imp_InitializeCriticalSectionEx:PROC
EXTRN	__imp_DeleteCriticalSection:PROC
EXTRN	__imp_UnregisterClassW:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A:BYTE	; ATL::_AtlBaseModule
EXTRN	__ImageBase:BYTE
EXTRN	__security_cookie:QWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?CspMatrixList@@3V?$array@W4CspMatrix@@$0O@@std@@B DB 038H DUP (?) ; CspMatrixList
?CspTransferList@@3V?$array@W4CspTransfer@@$0P@@std@@B DB 03cH DUP (?) ; CspTransferList
?CspColorprimList@@3V?$array@W4CspColorprim@@$0M@@std@@B DB 030H DUP (?) ; CspColorprimList
_BSS	ENDS
;	COMDAT ?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A
_BSS	SEGMENT
?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceGeneral
_BSS	ENDS
;	COMDAT ?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A
_BSS	SEGMENT
?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceCOM
_BSS	ENDS
;	COMDAT ?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A
_BSS	SEGMENT
?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceQI
_BSS	ENDS
;	COMDAT ?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A
_BSS	SEGMENT
?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceRegistrar
_BSS	ENDS
;	COMDAT ?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A
_BSS	SEGMENT
?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceRefcount
_BSS	ENDS
;	COMDAT ?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A
_BSS	SEGMENT
?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceWindowing
_BSS	ENDS
;	COMDAT ?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A
_BSS	SEGMENT
?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceControls
_BSS	ENDS
;	COMDAT ?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A
_BSS	SEGMENT
?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceHosting
_BSS	ENDS
;	COMDAT ?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceDBClient
_BSS	ENDS
;	COMDAT ?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceDBProvider
_BSS	ENDS
;	COMDAT ?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSnapin
_BSS	ENDS
;	COMDAT ?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceNotImpl
_BSS	ENDS
;	COMDAT ?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceAllocation
_BSS	ENDS
;	COMDAT ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceException
_BSS	ENDS
;	COMDAT ?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceTime
_BSS	ENDS
;	COMDAT ?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceCache
_BSS	ENDS
;	COMDAT ?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceStencil
_BSS	ENDS
;	COMDAT ?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceString
_BSS	ENDS
;	COMDAT ?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceMap
_BSS	ENDS
;	COMDAT ?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceUtil
_BSS	ENDS
;	COMDAT ?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSecurity
_BSS	ENDS
;	COMDAT ?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceSync
_BSS	ENDS
;	COMDAT ?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceISAPI
_BSS	ENDS
;	COMDAT ?m_nLevel@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLevel@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLevel
_BSS	ENDS
;	COMDAT ?m_nLastCategory@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLastCategory@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLastCategory
_BSS	ENDS
;	COMDAT ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A
_BSS	SEGMENT
?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A DB 02080H DUP (?) ; ATL::CTrace::m_nMap
_BSS	ENDS
;	COMDAT ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA
_BSS	SEGMENT
?m_bInitFailed@CAtlBaseModule@ATL@@2_NA DB 01H DUP (?)	; ATL::CAtlBaseModule::m_bInitFailed
_BSS	ENDS
;	COMDAT ?_AtlComModule@ATL@@3VCAtlComModule@1@A
_BSS	SEGMENT
?_AtlComModule@ATL@@3VCAtlComModule@1@A DB 048H DUP (?)	; ATL::_AtlComModule
_BSS	ENDS
;	COMDAT ?_AtlWinModule@ATL@@3VCAtlWinModule@1@A
_BSS	SEGMENT
?_AtlWinModule@ATL@@3VCAtlWinModule@1@A DB 048H DUP (?)	; ATL::_AtlWinModule
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$__local_stdio_printf_options DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$__local_stdio_printf_options
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vswprintf_s_l DD imagerel $LN5
	DD	imagerel $LN5+145
	DD	imagerel $unwind$_vswprintf_s_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$swprintf_s DD imagerel $LN3
	DD	imagerel $LN3+148
	DD	imagerel $unwind$swprintf_s
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$HRESULT_FROM_WIN32 DD imagerel $LN5
	DD	imagerel $LN5+89
	DD	imagerel $unwind$HRESULT_FROM_WIN32
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+323
	DD	imagerel $unwind$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspMatrixList@@YAXXZ DD imagerel ??__ECspMatrixList@@YAXXZ
	DD	imagerel ??__ECspMatrixList@@YAXXZ+464
	DD	imagerel $unwind$??__ECspMatrixList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+337
	DD	imagerel $unwind$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspTransferList@@YAXXZ DD imagerel ??__ECspTransferList@@YAXXZ
	DD	imagerel ??__ECspTransferList@@YAXXZ+488
	DD	imagerel $unwind$??__ECspTransferList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+295
	DD	imagerel $unwind$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspColorprimList@@YAXXZ DD imagerel ??__ECspColorprimList@@YAXXZ
	DD	imagerel ??__ECspColorprimList@@YAXXZ+410
	DD	imagerel $unwind$??__ECspColorprimList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Free@CCRTAllocator@ATL@@SAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?Free@CCRTAllocator@ATL@@SAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceGeneral@ATL@@YAXXZ DD imagerel ??__EatlTraceGeneral@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceGeneral@ATL@@YAXXZ+58
	DD	imagerel $unwind$??__EatlTraceGeneral@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceCOM@ATL@@YAXXZ DD imagerel ??__EatlTraceCOM@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceCOM@ATL@@YAXXZ+58
	DD	imagerel $unwind$??__EatlTraceCOM@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceQI@ATL@@YAXXZ DD imagerel ??__EatlTraceQI@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceQI@ATL@@YAXXZ+58
	DD	imagerel $unwind$??__EatlTraceQI@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceRegistrar@ATL@@YAXXZ DD imagerel ??__EatlTraceRegistrar@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceRegistrar@ATL@@YAXXZ+58
	DD	imagerel $unwind$??__EatlTraceRegistrar@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceRefcount@ATL@@YAXXZ DD imagerel ??__EatlTraceRefcount@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceRefcount@ATL@@YAXXZ+58
	DD	imagerel $unwind$??__EatlTraceRefcount@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceWindowing@ATL@@YAXXZ DD imagerel ??__EatlTraceWindowing@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceWindowing@ATL@@YAXXZ+58
	DD	imagerel $unwind$??__EatlTraceWindowing@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceControls@ATL@@YAXXZ DD imagerel ??__EatlTraceControls@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceControls@ATL@@YAXXZ+58
	DD	imagerel $unwind$??__EatlTraceControls@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceHosting@ATL@@YAXXZ DD imagerel ??__EatlTraceHosting@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceHosting@ATL@@YAXXZ+58
	DD	imagerel $unwind$??__EatlTraceHosting@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceDBClient@ATL@@YAXXZ DD imagerel ??__EatlTraceDBClient@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceDBClient@ATL@@YAXXZ+58
	DD	imagerel $unwind$??__EatlTraceDBClient@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceDBProvider@ATL@@YAXXZ DD imagerel ??__EatlTraceDBProvider@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceDBProvider@ATL@@YAXXZ+58
	DD	imagerel $unwind$??__EatlTraceDBProvider@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceSnapin@ATL@@YAXXZ DD imagerel ??__EatlTraceSnapin@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceSnapin@ATL@@YAXXZ+58
	DD	imagerel $unwind$??__EatlTraceSnapin@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceNotImpl@ATL@@YAXXZ DD imagerel ??__EatlTraceNotImpl@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceNotImpl@ATL@@YAXXZ+58
	DD	imagerel $unwind$??__EatlTraceNotImpl@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceAllocation@ATL@@YAXXZ DD imagerel ??__EatlTraceAllocation@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceAllocation@ATL@@YAXXZ+58
	DD	imagerel $unwind$??__EatlTraceAllocation@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceException@ATL@@YAXXZ DD imagerel ??__EatlTraceException@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceException@ATL@@YAXXZ+58
	DD	imagerel $unwind$??__EatlTraceException@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceTime@ATL@@YAXXZ DD imagerel ??__EatlTraceTime@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceTime@ATL@@YAXXZ+58
	DD	imagerel $unwind$??__EatlTraceTime@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceCache@ATL@@YAXXZ DD imagerel ??__EatlTraceCache@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceCache@ATL@@YAXXZ+58
	DD	imagerel $unwind$??__EatlTraceCache@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceStencil@ATL@@YAXXZ DD imagerel ??__EatlTraceStencil@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceStencil@ATL@@YAXXZ+58
	DD	imagerel $unwind$??__EatlTraceStencil@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceString@ATL@@YAXXZ DD imagerel ??__EatlTraceString@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceString@ATL@@YAXXZ+58
	DD	imagerel $unwind$??__EatlTraceString@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceMap@ATL@@YAXXZ DD imagerel ??__EatlTraceMap@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceMap@ATL@@YAXXZ+58
	DD	imagerel $unwind$??__EatlTraceMap@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceUtil@ATL@@YAXXZ DD imagerel ??__EatlTraceUtil@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceUtil@ATL@@YAXXZ+58
	DD	imagerel $unwind$??__EatlTraceUtil@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceSecurity@ATL@@YAXXZ DD imagerel ??__EatlTraceSecurity@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceSecurity@ATL@@YAXXZ+58
	DD	imagerel $unwind$??__EatlTraceSecurity@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceSync@ATL@@YAXXZ DD imagerel ??__EatlTraceSync@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceSync@ATL@@YAXXZ+58
	DD	imagerel $unwind$??__EatlTraceSync@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EatlTraceISAPI@ATL@@YAXXZ DD imagerel ??__EatlTraceISAPI@ATL@@YAXXZ
	DD	imagerel ??__EatlTraceISAPI@ATL@@YAXXZ+58
	DD	imagerel $unwind$??__EatlTraceISAPI@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z DD imagerel $LN7
	DD	imagerel $LN7+134
	DD	imagerel $unwind$?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z DD imagerel $LN13
	DD	imagerel $LN13+696
	DD	imagerel $unwind$?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z DD imagerel $LN7
	DD	imagerel $LN7+445
	DD	imagerel $unwind$?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z@4HA DD imagerel ?dtor$0@?0??TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z@4HA
	DD	imagerel ?dtor$0@?0??TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z DD imagerel $LN6
	DD	imagerel $LN6+226
	DD	imagerel $unwind$?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z DD imagerel $LN5
	DD	imagerel $LN5+158
	DD	imagerel $unwind$?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z DD imagerel $LN4
	DD	imagerel $LN4+127
	DD	imagerel $unwind$?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CPreserveLastError@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$??0CPreserveLastError@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CPreserveLastError@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$??1CPreserveLastError@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ DD imagerel $LN4
	DD	imagerel $LN4+189
	DD	imagerel $unwind$??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ@4HA DD imagerel ?dtor$0@?0???RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ@4HA
	DD	imagerel ?dtor$0@?0???RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_AtlRaiseException@ATL@@YAXKK@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$?_AtlRaiseException@ATL@@YAXKK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CComCriticalSection@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??0CComCriticalSection@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CComCriticalSection@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$??1CComCriticalSection@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Init@CComCriticalSection@ATL@@QEAAJXZ DD imagerel $LN4
	DD	imagerel $LN4+99
	DD	imagerel $unwind$?Init@CComCriticalSection@ATL@@QEAAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Term@CComCriticalSection@ATL@@QEAAJXZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?Term@CComCriticalSection@ATL@@QEAAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_ATL_COM_MODULE70@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??0_ATL_COM_MODULE70@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_ATL_COM_MODULE70@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??1_ATL_COM_MODULE70@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+145
	DD	imagerel $unwind$?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z DD imagerel $LN7
	DD	imagerel $LN7+185
	DD	imagerel $unwind$??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+77
	DD	imagerel $unwind$??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z DD imagerel $LN7
	DD	imagerel $LN7+266
	DD	imagerel $unwind$?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z DD imagerel $LN9
	DD	imagerel $LN9+240
	DD	imagerel $unwind$?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CAtlComModule@ATL@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+299
	DD	imagerel $unwind$??0CAtlComModule@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CAtlComModule@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??1CAtlComModule@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Term@CAtlComModule@ATL@@QEAAXXZ DD imagerel $LN9
	DD	imagerel $LN9+225
	DD	imagerel $unwind$?Term@CAtlComModule@ATL@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__E_AtlComModule@ATL@@YAXXZ DD imagerel ??__E_AtlComModule@ATL@@YAXXZ
	DD	imagerel ??__E_AtlComModule@ATL@@YAXXZ+63
	DD	imagerel $unwind$??__E_AtlComModule@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__F_AtlComModule@ATL@@YAXXZ DD imagerel ??__F_AtlComModule@ATL@@YAXXZ
	DD	imagerel ??__F_AtlComModule@ATL@@YAXXZ+39
	DD	imagerel $unwind$??__F_AtlComModule@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CAtlWinModule@ATL@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+178
	DD	imagerel $unwind$??0CAtlWinModule@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CAtlWinModule@ATL@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??1CAtlWinModule@ATL@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Term@CAtlWinModule@ATL@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?Term@CAtlWinModule@ATL@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__E_AtlWinModule@ATL@@YAXXZ DD imagerel ??__E_AtlWinModule@ATL@@YAXXZ
	DD	imagerel ??__E_AtlWinModule@ATL@@YAXXZ+63
	DD	imagerel $unwind$??__E_AtlWinModule@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__F_AtlWinModule@ATL@@YAXXZ DD imagerel ??__F_AtlWinModule@ATL@@YAXXZ
	DD	imagerel ??__F_AtlWinModule@ATL@@YAXXZ+39
	DD	imagerel $unwind$??__F_AtlWinModule@ATL@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z DD imagerel $LN5
	DD	imagerel $LN5+136
	DD	imagerel $unwind$??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z
pdata	ENDS
CRT$XCU	SEGMENT
?CspMatrixList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspMatrixList@@YAXXZ ; CspMatrixList$initializer$
CRT$XCU	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@ DB 'm'
	DB	00H, '_', 00H, 'p', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OK@ENELOBIL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OK@ENELOBIL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 's', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 'c', 00H
	DB	'o', 00H, 'l', 00H, 'l', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
CONST	SEGMENT
??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ DB 'n'
	DB	00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H, ' ', 00H
	DB	'>', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, 'n', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'm', 00H, '_', 00H, 'n'
	DB	00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IG@OPJAFKJH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1IG@OPJAFKJH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ DB 'E'
	DB	00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ' ', 00H, ':', 00H
	DB	' ', 00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 't', 00H
	DB	'i', 00H, 'c', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, ' ', 00H, 'A', 00H, 't', 00H, 'l', 00H, 'W'
	DB	00H, 'i', 00H, 'n', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'u', 00H
	DB	'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't', 00H, 0aH
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1IA@KEEOONGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1IA@KEEOONGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@ DB 'E'
	DB	00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, ' ', 00H, ':', 00H
	DB	' ', 00H, 'U', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, ' ', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 't', 00H
	DB	'i', 00H, 'c', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, ' ', 00H, 'C', 00H, 'A', 00H, 't', 00H, 'l'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'M', 00H, 'o', 00H, 'd', 00H
	DB	'u', 00H, 'l', 00H, 'e', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0HB@NHAHFMOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0HB@NHAHFMOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\atlmfc\include\atlbase.h', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OC@KMMBJFLB@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OC@KMMBJFLB@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1OE@GMIHPBDM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OE@GMIHPBDM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'c', 00H, 'e', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
CONST	SEGMENT
??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ DB 'f'
	DB	00H, 'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, '"', 00H, 'T', 00H, 'o', 00H, 'o', 00H, ' '
	DB	00H, 'm', 00H, 'a', 00H, 'n', 00H, 'y', 00H, ' ', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H
	DB	'i', 00H, 'n', 00H, 'e', 00H, 'd', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
CONST	SEGMENT
??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@ DB '%', 00H, 'h', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H
	DB	's', 00H, '%', 00H, 'l', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@
CONST	SEGMENT
??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@ DB '%', 00H, 'u', 00H, ' '
	DB	00H, '-', 00H, ' ', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@
CONST	SEGMENT
??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@ DB '%', 00H, 'l', 00H
	DB	's', 00H, ' ', 00H, '-', 00H, ' ', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?m_nCategory@CTrace@ATL@@1IA
_DATA	SEGMENT
?m_nCategory@CTrace@ATL@@1IA DD 0ffffffffH		; ATL::CTrace::m_nCategory
_DATA	ENDS
;	COMDAT ??_C@_1OE@BPCMJDLP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1OE@BPCMJDLP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'.', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_13COJANIEC@?$AA0@
CONST	SEGMENT
??_C@_13COJANIEC@?$AA0@ DB '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__F_AtlWinModule@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__E_AtlWinModule@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Term@CAtlWinModule@ATL@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1CAtlWinModule@ATL@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1CAtlWinModule@ATL@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1CAtlWinModule@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CAtlWinModule@ATL@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1CAtlWinModule@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CAtlWinModule@ATL@@QEAA@XZ DD 021e01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__F_AtlComModule@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__E_AtlComModule@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Term@CAtlComModule@ATL@@QEAAXXZ DD 021e01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1CAtlComModule@ATL@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1CAtlComModule@ATL@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1CAtlComModule@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CAtlComModule@ATL@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1CAtlComModule@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CAtlComModule@ATL@@QEAA@XZ DD 021e01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z DD 021e01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'`'
	DB	02H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ DB 028H
	DD	imagerel $stateUnwindMap$??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ
	DD	imagerel $ip2state$??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z DD 022201H
	DD	0700a520eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_ATL_COM_MODULE70@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_ATL_COM_MODULE70@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Term@CComCriticalSection@ATL@@QEAAJXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Init@CComCriticalSection@ATL@@QEAAJXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1CComCriticalSection@ATL@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1CComCriticalSection@ATL@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1CComCriticalSection@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CComCriticalSection@ATL@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1CComCriticalSection@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CComCriticalSection@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_AtlRaiseException@ATL@@YAXKK@Z DD 022001H
	DD	07009320dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ DB 06H
	DB	00H
	DB	00H
	DB	08cH
	DB	02H
	DB	0b0H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ DB 028H
	DD	imagerel $stateUnwindMap$??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ
	DD	imagerel $ip2state$??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ DD 022f11H
	DD	07014d218H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ$rtcName$0 DB 070H ; ATL::CTraceFileAndLineInfo::operator()
	DB	06cH
	DB	065H
	DB	00H
??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ$rtcName$1 DB 070H ; ATL::CTraceFileAndLineInfo::operator()
	DB	074H
	DB	072H
	DB	00H
	ORG $+8
??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ$rtcVarDesc DD 058H ; ATL::CTraceFileAndLineInfo::operator()
	DD	08H
	DQ	FLAT:??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ$rtcName$1
	DD	034H
	DD	04H
	DQ	FLAT:??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ$rtcName$0
	ORG $+96
??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ$rtcFrameData DD 02H ; ATL::CTraceFileAndLineInfo::operator()
	DD	00H
	DQ	FLAT:??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1CPreserveLastError@ATL@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1CPreserveLastError@ATL@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1CPreserveLastError@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CPreserveLastError@ATL@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1CPreserveLastError@ATL@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CPreserveLastError@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcName$0 DB 06eH ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
	DB	042H
	DB	079H
	DB	074H
	DB	065H
	DB	073H
	DB	00H
	ORG $+9
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcVarDesc DD 028H ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
	DD	08H
	DQ	FLAT:?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcName$0
	ORG $+48
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcFrameData DD 01H ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
	DD	00H
	DQ	FLAT:?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z DD 022201H
	DD	0700a520eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z DB 0eH
	DB	00H
	DB	00H
	DB	'U', 02H
	DB	02H
	DB	'8'
	DB	00H
	DB	01eH
	DB	02H
	DB	'm', 02H
	DB	00H
	DB	018H
	DB	02H
	DB	'h'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z DB 028H
	DD	imagerel $stateUnwindMap$?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z
	DD	imagerel $ip2state$?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z DD 023211H
	DD	07014f21bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z$rtcName$0 DB 077H ; ATL::CTrace::TraceV
	DB	073H
	DB	07aH
	DB	042H
	DB	075H
	DB	066H
	DB	00H
	ORG $+9
?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z$rtcVarDesc DD 058H ; ATL::CTrace::TraceV
	DD	08H
	DQ	FLAT:?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z$rtcName$0
	ORG $+48
?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z$rtcFrameData DD 01H ; ATL::CTrace::TraceV
	DD	00H
	DQ	FLAT:?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z DD 034419H
	DD	0158011bH
	DD	07014H
	DD	imagerel __GSHandlerCheck
	DD	0ab8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcName$0 DB 077H	; ATL::CTrace::TraceV
	DB	073H
	DB	07aH
	DB	043H
	DB	061H
	DB	074H
	DB	065H
	DB	067H
	DB	06fH
	DB	072H
	DB	079H
	DB	00H
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcName$1 DB 077H	; ATL::CTrace::TraceV
	DB	073H
	DB	07aH
	DB	042H
	DB	075H
	DB	066H
	DB	00H
	ORG $+5
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcName$2 DB 066H	; ATL::CTrace::TraceV
	DB	069H
	DB	06cH
	DB	065H
	DB	04eH
	DB	061H
	DB	06dH
	DB	065H
	DB	00H
	ORG $+15
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcVarDesc DD 0890H ; ATL::CTrace::TraceV
	DD	0208H
	DQ	FLAT:?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcName$2
	DD	0868H
	DD	08H
	DQ	FLAT:?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcName$1
	DD	040H
	DD	0800H
	DQ	FLAT:?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcName$0
	ORG $+144
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcFrameData DD 03H ; ATL::CTrace::TraceV
	DD	00H
	DQ	FLAT:?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z DD 021c01H
	DD	070055209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceISAPI@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceSync@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceSecurity@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceUtil@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceMap@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceString@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceStencil@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceCache@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceTime@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceException@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceAllocation@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceNotImpl@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceSnapin@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceDBProvider@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceDBClient@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceHosting@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceControls@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceWindowing@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceRefcount@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceRegistrar@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceQI@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceCOM@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EatlTraceGeneral@ATL@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEB_W@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Free@CCRTAllocator@ATL@@SAXPEAX@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspColorprimList@@YAXXZ DD 042b19H
	DD	023010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0108H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z DD 034019H
	DD	07016c21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	058H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspTransferList@@YAXXZ DD 042b19H
	DD	02b010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0148H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z DD 034019H
	DD	07016e21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	068H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspMatrixList@@YAXXZ DD 042b19H
	DD	029010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0130H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z DD 034019H
	DD	07016e21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$HRESULT_FROM_WIN32 DD 021c01H
	DD	070055209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$swprintf_s DD 022d01H
	DD	07015b219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
swprintf_s$rtcName$0 DB 05fH
	DB	041H
	DB	072H
	DB	067H
	DB	04cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+7
swprintf_s$rtcVarDesc DD 048H
	DD	08H
	DQ	FLAT:swprintf_s$rtcName$0
	ORG $+48
swprintf_s$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:swprintf_s$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vswprintf_s_l DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__local_stdio_printf_options DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
CRT$XCU	SEGMENT
?CspTransferList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspTransferList@@YAXXZ ; CspTransferList$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?CspColorprimList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspColorprimList@@YAXXZ ; CspColorprimList$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceGeneral$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceGeneral@ATL@@YAXXZ ; ATL::atlTraceGeneral$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceCOM$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceCOM@ATL@@YAXXZ ; ATL::atlTraceCOM$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceQI$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceQI@ATL@@YAXXZ ; ATL::atlTraceQI$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceRegistrar$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceRegistrar@ATL@@YAXXZ ; ATL::atlTraceRegistrar$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceRefcount$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceRefcount@ATL@@YAXXZ ; ATL::atlTraceRefcount$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceWindowing$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceWindowing@ATL@@YAXXZ ; ATL::atlTraceWindowing$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceControls$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceControls@ATL@@YAXXZ ; ATL::atlTraceControls$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceHosting$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceHosting@ATL@@YAXXZ ; ATL::atlTraceHosting$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceDBClient$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceDBClient@ATL@@YAXXZ ; ATL::atlTraceDBClient$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceDBProvider$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceDBProvider@ATL@@YAXXZ ; ATL::atlTraceDBProvider$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSnapin$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceSnapin@ATL@@YAXXZ ; ATL::atlTraceSnapin$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceNotImpl$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceNotImpl@ATL@@YAXXZ ; ATL::atlTraceNotImpl$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceAllocation$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceAllocation@ATL@@YAXXZ ; ATL::atlTraceAllocation$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceException$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceException@ATL@@YAXXZ ; ATL::atlTraceException$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceTime$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceTime@ATL@@YAXXZ ; ATL::atlTraceTime$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceCache$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceCache@ATL@@YAXXZ ; ATL::atlTraceCache$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceStencil$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceStencil@ATL@@YAXXZ ; ATL::atlTraceStencil$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceString$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceString@ATL@@YAXXZ ; ATL::atlTraceString$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceMap$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceMap@ATL@@YAXXZ ; ATL::atlTraceMap$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceUtil$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceUtil@ATL@@YAXXZ ; ATL::atlTraceUtil$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSecurity$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceSecurity@ATL@@YAXXZ ; ATL::atlTraceSecurity$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceSync$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceSync@ATL@@YAXXZ ; ATL::atlTraceSync$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceISAPI$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__EatlTraceISAPI@ATL@@YAXXZ ; ATL::atlTraceISAPI$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_AtlComModule$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__E_AtlComModule@ATL@@YAXXZ ; ATL::_AtlComModule$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_AtlWinModule$initializer$@ATL@@3P6AXXZEA DQ FLAT:??__E_AtlWinModule@ATL@@YAXXZ ; ATL::_AtlWinModule$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	c2 00 00	 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z
_TEXT	SEGMENT
ptResult$ = 48
tLeft$ = 56
tRight$ = 64
??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z PROC		; ATL::AtlMultiply<unsigned __int64>, COMDAT

; 99   : {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D242CB04_atlalloc@h
  0002f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 100  : 	/* avoid divide 0 */
; 101  : 	if(tLeft==0)

  00034	48 83 7c 24 38
	00		 cmp	 QWORD PTR tLeft$[rsp], 0
  0003a	75 10		 jne	 SHORT $LN2@AtlMultipl

; 102  : 	{
; 103  : 		*ptResult=0;

  0003c	48 8b 44 24 30	 mov	 rax, QWORD PTR ptResult$[rsp]
  00041	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 104  : 		return S_OK;

  00048	33 c0		 xor	 eax, eax
  0004a	eb 36		 jmp	 SHORT $LN1@AtlMultipl
$LN2@AtlMultipl:

; 105  : 	}
; 106  : 	if(::ATL::AtlLimits<T>::_Max/tLeft < tRight)

  0004c	33 d2		 xor	 edx, edx
  0004e	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1
  00055	48 f7 74 24 38	 div	 QWORD PTR tLeft$[rsp]
  0005a	48 3b 44 24 40	 cmp	 rax, QWORD PTR tRight$[rsp]
  0005f	73 0c		 jae	 SHORT $LN3@AtlMultipl

; 107  : 	{
; 108  : 		return HRESULT_FROM_WIN32(ERROR_ARITHMETIC_OVERFLOW);

  00061	b9 16 02 00 00	 mov	 ecx, 534		; 00000216H
  00066	e8 00 00 00 00	 call	 HRESULT_FROM_WIN32
  0006b	eb 15		 jmp	 SHORT $LN1@AtlMultipl
$LN3@AtlMultipl:

; 109  : 	}
; 110  : 	*ptResult= tLeft * tRight;

  0006d	48 8b 44 24 38	 mov	 rax, QWORD PTR tLeft$[rsp]
  00072	48 0f af 44 24
	40		 imul	 rax, QWORD PTR tRight$[rsp]
  00078	48 8b 4c 24 30	 mov	 rcx, QWORD PTR ptResult$[rsp]
  0007d	48 89 01	 mov	 QWORD PTR [rcx], rax

; 111  : 	return S_OK;

  00080	33 c0		 xor	 eax, eax
$LN1@AtlMultipl:

; 112  : }

  00082	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00086	5f		 pop	 rdi
  00087	c3		 ret	 0
??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z ENDP		; ATL::AtlMultiply<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F_AtlWinModule@ATL@@YAXXZ
text$yd	SEGMENT
??__F_AtlWinModule@ATL@@YAXXZ PROC			; ATL::`dynamic atexit destructor for '_AtlWinModule'', COMDAT
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_AtlWinModule@ATL@@3VCAtlWinModule@1@A ; ATL::_AtlWinModule
  0001c	e8 00 00 00 00	 call	 ??1CAtlWinModule@ATL@@QEAA@XZ ; ATL::CAtlWinModule::~CAtlWinModule
  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
??__F_AtlWinModule@ATL@@YAXXZ ENDP			; ATL::`dynamic atexit destructor for '_AtlWinModule''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlbase.h
;	COMDAT ??__E_AtlWinModule@ATL@@YAXXZ
text$di	SEGMENT
??__E_AtlWinModule@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for '_AtlWinModule'', COMDAT

; 2972 : __declspec(selectany) CAtlWinModule _AtlWinModule;

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EECF58A3_atlbase@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_AtlWinModule@ATL@@3VCAtlWinModule@1@A ; ATL::_AtlWinModule
  00028	e8 00 00 00 00	 call	 ??0CAtlWinModule@ATL@@QEAA@XZ ; ATL::CAtlWinModule::CAtlWinModule
  0002d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??__F_AtlWinModule@ATL@@YAXXZ ; ATL::`dynamic atexit destructor for '_AtlWinModule''
  00034	e8 00 00 00 00	 call	 atexit
  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5f		 pop	 rdi
  0003e	c3		 ret	 0
??__E_AtlWinModule@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for '_AtlWinModule''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlbase.h
;	COMDAT ?Term@CAtlWinModule@ATL@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?Term@CAtlWinModule@ATL@@QEAAXXZ PROC			; ATL::CAtlWinModule::Term, COMDAT

; 2956 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EECF58A3_atlbase@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2957 : 		AtlWinModuleTerm(this, _AtlBaseModule.GetModuleInstance());

  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A ; ATL::_AtlBaseModule
  00031	e8 00 00 00 00	 call	 ?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ ; ATL::CAtlBaseModule::GetModuleInstance
  00036	48 8b d0	 mov	 rdx, rax
  00039	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003e	e8 00 00 00 00	 call	 ?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z ; ATL::AtlWinModuleTerm

; 2958 : 	}

  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
?Term@CAtlWinModule@ATL@@QEAAXXZ ENDP			; ATL::CAtlWinModule::Term
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlbase.h
;	COMDAT ??1CAtlWinModule@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CAtlWinModule@ATL@@QEAA@XZ PROC			; ATL::CAtlWinModule::~CAtlWinModule, COMDAT

; 2951 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EECF58A3_atlbase@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0002a	90		 npad	 1

; 2952 : 		Term();

  0002b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00030	e8 00 00 00 00	 call	 ?Term@CAtlWinModule@ATL@@QEAAXXZ ; ATL::CAtlWinModule::Term
  00035	90		 npad	 1

; 2953 : 	}

  00036	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003b	e8 00 00 00 00	 call	 ??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ
  00040	90		 npad	 1
  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
??1CAtlWinModule@ATL@@QEAA@XZ ENDP			; ATL::CAtlWinModule::~CAtlWinModule
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlbase.h
;	COMDAT ??0CAtlWinModule@ATL@@QEAA@XZ
_TEXT	SEGMENT
hr$ = 48
this$ = 80
??0CAtlWinModule@ATL@@QEAA@XZ PROC			; ATL::CAtlWinModule::CAtlWinModule, COMDAT

; 2937 : 	CAtlWinModule()

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EECF58A3_atlbase@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0002a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0002f	e8 00 00 00 00	 call	 ??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ

; 2938 : 	{
; 2939 : 		cbSize = sizeof(_ATL_WIN_MODULE);

  00034	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00039	c7 00 48 00 00
	00		 mov	 DWORD PTR [rax], 72	; 00000048H

; 2940 : 		HRESULT hr = AtlWinModuleInit(this);

  0003f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00044	e8 00 00 00 00	 call	 ?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z ; ATL::AtlWinModuleInit
  00049	89 44 24 30	 mov	 DWORD PTR hr$[rsp], eax

; 2941 : 		if (FAILED(hr))

  0004d	83 7c 24 30 00	 cmp	 DWORD PTR hr$[rsp], 0
  00052	7d 53		 jge	 SHORT $LN2@CAtlWinMod

; 2942 : 		{
; 2943 : 			ATLASSERT(0);

  00054	33 c0		 xor	 eax, eax
  00056	85 c0		 test	 eax, eax
  00058	75 3b		 jne	 SHORT $LN4@CAtlWinMod
  0005a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
  00061	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00066	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0006d	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00072	45 33 c9	 xor	 r9d, r9d
  00075	41 b8 7f 0b 00
	00		 mov	 r8d, 2943		; 00000b7fH
  0007b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OC@KMMBJFLB@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00082	b9 02 00 00 00	 mov	 ecx, 2
  00087	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReportW
  0008d	83 f8 01	 cmp	 eax, 1
  00090	75 03		 jne	 SHORT $LN4@CAtlWinMod
  00092	cc		 int	 3
  00093	33 c0		 xor	 eax, eax
$LN4@CAtlWinMod:

; 2944 : 			CAtlBaseModule::m_bInitFailed = true;

  00095	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed

; 2945 : 			cbSize = 0;

  0009c	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000a1	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
$LN2@CAtlWinMod:

; 2946 : 			return;
; 2947 : 		}
; 2948 : 	}

  000a7	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000ac	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000b0	5f		 pop	 rdi
  000b1	c3		 ret	 0
??0CAtlWinModule@ATL@@QEAA@XZ ENDP			; ATL::CAtlWinModule::CAtlWinModule
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F_AtlComModule@ATL@@YAXXZ
text$yd	SEGMENT
??__F_AtlComModule@ATL@@YAXXZ PROC			; ATL::`dynamic atexit destructor for '_AtlComModule'', COMDAT
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
  0001c	e8 00 00 00 00	 call	 ??1CAtlComModule@ATL@@QEAA@XZ ; ATL::CAtlComModule::~CAtlComModule
  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
??__F_AtlComModule@ATL@@YAXXZ ENDP			; ATL::`dynamic atexit destructor for '_AtlComModule''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlbase.h
;	COMDAT ??__E_AtlComModule@ATL@@YAXXZ
text$di	SEGMENT
??__E_AtlComModule@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for '_AtlComModule'', COMDAT

; 2716 : __declspec(selectany) CAtlComModule _AtlComModule;

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EECF58A3_atlbase@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_AtlComModule@ATL@@3VCAtlComModule@1@A ; ATL::_AtlComModule
  00028	e8 00 00 00 00	 call	 ??0CAtlComModule@ATL@@QEAA@XZ ; ATL::CAtlComModule::CAtlComModule
  0002d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??__F_AtlComModule@ATL@@YAXXZ ; ATL::`dynamic atexit destructor for '_AtlComModule''
  00034	e8 00 00 00 00	 call	 atexit
  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5f		 pop	 rdi
  0003e	c3		 ret	 0
??__E_AtlComModule@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for '_AtlComModule''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlbase.h
;	COMDAT ?Term@CAtlComModule@ATL@@QEAAXXZ
_TEXT	SEGMENT
ppEntry$1 = 32
pCache$2 = 40
factory$3 = 48
this$ = 80
?Term@CAtlComModule@ATL@@QEAAXXZ PROC			; ATL::CAtlComModule::Term, COMDAT

; 2613 : 	{

$LN9:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EECF58A3_atlbase@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2614 : 		if (cbSize == 0)

  0002a	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0002f	83 38 00	 cmp	 DWORD PTR [rax], 0
  00032	75 05		 jne	 SHORT $LN5@Term

; 2615 : 			return;

  00034	e9 a2 00 00 00	 jmp	 $LN1@Term
$LN5@Term:

; 2616 : 
; 2617 : 		for (_ATL_OBJMAP_ENTRY_EX** ppEntry = m_ppAutoObjMapFirst; ppEntry < m_ppAutoObjMapLast; ppEntry++)

  00039	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00042	48 89 44 24 20	 mov	 QWORD PTR ppEntry$1[rsp], rax
  00047	eb 0e		 jmp	 SHORT $LN4@Term
$LN2@Term:
  00049	48 8b 44 24 20	 mov	 rax, QWORD PTR ppEntry$1[rsp]
  0004e	48 83 c0 08	 add	 rax, 8
  00052	48 89 44 24 20	 mov	 QWORD PTR ppEntry$1[rsp], rax
$LN4@Term:
  00057	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0005c	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00060	48 39 44 24 20	 cmp	 QWORD PTR ppEntry$1[rsp], rax
  00065	73 58		 jae	 SHORT $LN3@Term

; 2618 : 		{
; 2619 : 			if (*ppEntry != NULL)

  00067	48 8b 44 24 20	 mov	 rax, QWORD PTR ppEntry$1[rsp]
  0006c	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00070	74 4b		 je	 SHORT $LN6@Term

; 2620 : 			{
; 2621 : 				_ATL_OBJMAP_CACHE* pCache = (**ppEntry).pCache;

  00072	48 8b 44 24 20	 mov	 rax, QWORD PTR ppEntry$1[rsp]
  00077	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007a	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0007e	48 89 44 24 28	 mov	 QWORD PTR pCache$2[rsp], rax

; 2622 : 
; 2623 : 				if (pCache->pCF != NULL)

  00083	48 8b 44 24 28	 mov	 rax, QWORD PTR pCache$2[rsp]
  00088	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0008c	74 2f		 je	 SHORT $LN7@Term

; 2624 : 				{
; 2625 : 					// Decode factory pointer if it's not null
; 2626 : 					IUnknown *factory = reinterpret_cast<IUnknown*>(::DecodePointer(pCache->pCF));

  0008e	48 8b 44 24 28	 mov	 rax, QWORD PTR pCache$2[rsp]
  00093	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00096	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DecodePointer
  0009c	48 89 44 24 30	 mov	 QWORD PTR factory$3[rsp], rax

; 2627 : 					_Analysis_assume_(factory != nullptr);
; 2628 : 					factory->Release();

  000a1	48 8b 44 24 30	 mov	 rax, QWORD PTR factory$3[rsp]
  000a6	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a9	48 8b 4c 24 30	 mov	 rcx, QWORD PTR factory$3[rsp]
  000ae	ff 50 10	 call	 QWORD PTR [rax+16]

; 2629 : 					pCache->pCF = NULL;

  000b1	48 8b 44 24 28	 mov	 rax, QWORD PTR pCache$2[rsp]
  000b6	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN7@Term:
$LN6@Term:

; 2630 : 				}
; 2631 : 			}
; 2632 : 		}

  000bd	eb 8a		 jmp	 SHORT $LN2@Term
$LN3@Term:

; 2633 : 		m_csObjMap.Term();

  000bf	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000c4	48 83 c0 20	 add	 rax, 32			; 00000020H
  000c8	48 8b c8	 mov	 rcx, rax
  000cb	e8 00 00 00 00	 call	 ?Term@CComCriticalSection@ATL@@QEAAJXZ ; ATL::CComCriticalSection::Term

; 2634 : 		// Set to 0 to indicate that this function has been called
; 2635 : 		// At this point no one should be concerned about cbsize
; 2636 : 		// having the correct value
; 2637 : 		cbSize = 0;

  000d0	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000d5	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
$LN1@Term:

; 2638 : 	}

  000db	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000df	5f		 pop	 rdi
  000e0	c3		 ret	 0
?Term@CAtlComModule@ATL@@QEAAXXZ ENDP			; ATL::CAtlComModule::Term
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlbase.h
;	COMDAT ??1CAtlComModule@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CAtlComModule@ATL@@QEAA@XZ PROC			; ATL::CAtlComModule::~CAtlComModule, COMDAT

; 2607 : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EECF58A3_atlbase@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0002a	90		 npad	 1

; 2608 : 		Term();

  0002b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00030	e8 00 00 00 00	 call	 ?Term@CAtlComModule@ATL@@QEAAXXZ ; ATL::CAtlComModule::Term
  00035	90		 npad	 1

; 2609 : 	}

  00036	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003b	e8 00 00 00 00	 call	 ??1_ATL_COM_MODULE70@ATL@@QEAA@XZ
  00040	90		 npad	 1
  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
??1CAtlComModule@ATL@@QEAA@XZ ENDP			; ATL::CAtlComModule::~CAtlComModule
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlbase.h
;	COMDAT ??0CAtlComModule@ATL@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 48
tv144 = 64
this$ = 96
??0CAtlComModule@ATL@@QEAA@XZ PROC			; ATL::CAtlComModule::CAtlComModule, COMDAT

; 2586 : 	CAtlComModule() throw()

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EECF58A3_atlbase@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0002a	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002f	e8 00 00 00 00	 call	 ??0_ATL_COM_MODULE70@ATL@@QEAA@XZ

; 2587 : 	{
; 2588 : 		cbSize = 0;

  00034	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00039	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 2589 : 
; 2590 : 		m_hInstTypeLib = reinterpret_cast<HINSTANCE>(&__ImageBase);

  0003f	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__ImageBase
  0004b	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 2591 : 
; 2592 : 		m_ppAutoObjMapFirst = &__pobjMapEntryFirst + 1;

  0004f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:__pobjMapEntryFirst
  00056	48 83 c0 08	 add	 rax, 8
  0005a	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0005f	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 2593 : 		m_ppAutoObjMapLast = &__pobjMapEntryLast;

  00063	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00068	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__pobjMapEntryLast
  0006f	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2594 : 
; 2595 : 		if (FAILED(m_csObjMap.Init()))

  00073	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00078	48 83 c0 20	 add	 rax, 32			; 00000020H
  0007c	48 8b c8	 mov	 rcx, rax
  0007f	e8 00 00 00 00	 call	 ?Init@CComCriticalSection@ATL@@QEAAJXZ ; ATL::CComCriticalSection::Init
  00084	85 c0		 test	 eax, eax
  00086	0f 8d 89 00 00
	00		 jge	 $LN2@CAtlComMod

; 2596 : 		{
; 2597 : 			ATLTRACE(atlTraceCOM, 0, _T("ERROR : Unable to initialize critical section in CAtlComModule\n"));

  0008c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  00093	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ ; ATL::CTraceCategoryEx<2,0>::operator unsigned int
  00098	89 44 24 40	 mov	 DWORD PTR tv144[rsp], eax
  0009c	41 b8 25 0a 00
	00		 mov	 r8d, 2597		; 00000a25H
  000a2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0HB@NHAHFMOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000a9	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T1[rsp]
  000ae	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  000b3	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_1IA@KEEOONGN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
  000ba	45 33 c0	 xor	 r8d, r8d
  000bd	8b 4c 24 40	 mov	 ecx, DWORD PTR tv144[rsp]
  000c1	8b d1		 mov	 edx, ecx
  000c3	48 8b c8	 mov	 rcx, rax
  000c6	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ ; ATL::CTraceFileAndLineInfo::operator()

; 2598 : 			ATLASSERT(0);

  000cb	33 c0		 xor	 eax, eax
  000cd	85 c0		 test	 eax, eax
  000cf	75 3b		 jne	 SHORT $LN4@CAtlComMod
  000d1	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
  000d8	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000dd	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000e4	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000e9	45 33 c9	 xor	 r9d, r9d
  000ec	41 b8 26 0a 00
	00		 mov	 r8d, 2598		; 00000a26H
  000f2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OC@KMMBJFLB@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000f9	b9 02 00 00 00	 mov	 ecx, 2
  000fe	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReportW
  00104	83 f8 01	 cmp	 eax, 1
  00107	75 03		 jne	 SHORT $LN4@CAtlComMod
  00109	cc		 int	 3
  0010a	33 c0		 xor	 eax, eax
$LN4@CAtlComMod:

; 2599 : 			CAtlBaseModule::m_bInitFailed = true;

  0010c	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA, 1 ; ATL::CAtlBaseModule::m_bInitFailed

; 2600 : 			return;

  00113	eb 0b		 jmp	 SHORT $LN1@CAtlComMod
$LN2@CAtlComMod:

; 2601 : 		}
; 2602 : 		// Set cbSize on success.
; 2603 : 		cbSize = sizeof(_ATL_COM_MODULE);

  00115	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0011a	c7 00 48 00 00
	00		 mov	 DWORD PTR [rax], 72	; 00000048H
$LN1@CAtlComMod:

; 2604 : 	}

  00120	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00125	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00129	5f		 pop	 rdi
  0012a	c3		 ret	 0
??0CAtlComModule@ATL@@QEAA@XZ ENDP			; ATL::CAtlComModule::CAtlComModule
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlbase.h
;	COMDAT ?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z
_TEXT	SEGMENT
i$1 = 32
pWinModule$ = 64
hInst$ = 72
?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z PROC ; ATL::AtlWinModuleTerm, COMDAT

; 7652 : {

$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EECF58A3_atlbase@h
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 7653 : 	if (pWinModule == NULL)

  0002f	48 83 7c 24 40
	00		 cmp	 QWORD PTR pWinModule$[rsp], 0
  00035	75 0a		 jne	 SHORT $LN5@AtlWinModu

; 7654 : 		return E_INVALIDARG;

  00037	b8 57 00 07 80	 mov	 eax, -2147024809	; ffffffff80070057H
  0003c	e9 a9 00 00 00	 jmp	 $LN1@AtlWinModu
$LN5@AtlWinModu:

; 7655 : 	if (pWinModule->cbSize == 0)

  00041	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  00046	83 38 00	 cmp	 DWORD PTR [rax], 0
  00049	75 07		 jne	 SHORT $LN6@AtlWinModu

; 7656 : 		return S_OK;

  0004b	33 c0		 xor	 eax, eax
  0004d	e9 98 00 00 00	 jmp	 $LN1@AtlWinModu
$LN6@AtlWinModu:

; 7657 : 	if (pWinModule->cbSize != sizeof(_ATL_WIN_MODULE))

  00052	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  00057	8b 00		 mov	 eax, DWORD PTR [rax]
  00059	48 83 f8 48	 cmp	 rax, 72			; 00000048H
  0005d	74 0a		 je	 SHORT $LN7@AtlWinModu

; 7658 : 		return E_INVALIDARG;

  0005f	b8 57 00 07 80	 mov	 eax, -2147024809	; ffffffff80070057H
  00064	e9 81 00 00 00	 jmp	 $LN1@AtlWinModu
$LN7@AtlWinModu:

; 7659 : 
; 7660 : 	for (int i = 0; i < pWinModule->m_rgWindowClassAtoms.GetSize(); i++)

  00069	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR i$1[rsp], 0
  00071	eb 0a		 jmp	 SHORT $LN4@AtlWinModu
$LN2@AtlWinModu:
  00073	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  00077	ff c0		 inc	 eax
  00079	89 44 24 20	 mov	 DWORD PTR i$1[rsp], eax
$LN4@AtlWinModu:
  0007d	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  00082	48 83 c0 38	 add	 rax, 56			; 00000038H
  00086	48 8b c8	 mov	 rcx, rax
  00089	e8 00 00 00 00	 call	 ?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
  0008e	39 44 24 20	 cmp	 DWORD PTR i$1[rsp], eax
  00092	7d 27		 jge	 SHORT $LN3@AtlWinModu

; 7661 : 		UnregisterClass((LPCTSTR)pWinModule->m_rgWindowClassAtoms[i], hInst);

  00094	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  00099	48 83 c0 38	 add	 rax, 56			; 00000038H
  0009d	8b 54 24 20	 mov	 edx, DWORD PTR i$1[rsp]
  000a1	48 8b c8	 mov	 rcx, rax
  000a4	e8 00 00 00 00	 call	 ??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
  000a9	0f b7 00	 movzx	 eax, WORD PTR [rax]
  000ac	48 8b 54 24 48	 mov	 rdx, QWORD PTR hInst$[rsp]
  000b1	8b c8		 mov	 ecx, eax
  000b3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_UnregisterClassW
  000b9	eb b8		 jmp	 SHORT $LN2@AtlWinModu
$LN3@AtlWinModu:

; 7662 : 	pWinModule->m_rgWindowClassAtoms.RemoveAll();

  000bb	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  000c0	48 83 c0 38	 add	 rax, 56			; 00000038H
  000c4	48 8b c8	 mov	 rcx, rax
  000c7	e8 00 00 00 00	 call	 ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll

; 7663 : 	pWinModule->m_csWindowCreate.Term();

  000cc	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  000d1	48 83 c0 08	 add	 rax, 8
  000d5	48 8b c8	 mov	 rcx, rax
  000d8	e8 00 00 00 00	 call	 ?Term@CComCriticalSection@ATL@@QEAAJXZ ; ATL::CComCriticalSection::Term

; 7664 : 	pWinModule->cbSize = 0;

  000dd	48 8b 44 24 40	 mov	 rax, QWORD PTR pWinModule$[rsp]
  000e2	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 7665 : 	return S_OK;

  000e8	33 c0		 xor	 eax, eax
$LN1@AtlWinModu:

; 7666 : }

  000ea	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000ee	5f		 pop	 rdi
  000ef	c3		 ret	 0
?AtlWinModuleTerm@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@PEAUHINSTANCE__@@@Z ENDP ; ATL::AtlWinModuleTerm
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlbase.h
;	COMDAT ?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z
_TEXT	SEGMENT
hr$ = 48
$T1 = 56
tv81 = 72
pWinModule$ = 96
?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z PROC ; ATL::AtlWinModuleInit, COMDAT

; 8396 : {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EECF58A3_atlbase@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 8397 : 	if (pWinModule == NULL)

  0002a	48 83 7c 24 60
	00		 cmp	 QWORD PTR pWinModule$[rsp], 0
  00030	75 0a		 jne	 SHORT $LN2@AtlWinModu

; 8398 : 		return E_INVALIDARG;

  00032	b8 57 00 07 80	 mov	 eax, -2147024809	; ffffffff80070057H
  00037	e9 c8 00 00 00	 jmp	 $LN1@AtlWinModu
$LN2@AtlWinModu:

; 8399 : 
; 8400 : 	// check only in the DLL
; 8401 : 	if (pWinModule->cbSize != sizeof(_ATL_WIN_MODULE))

  0003c	48 8b 44 24 60	 mov	 rax, QWORD PTR pWinModule$[rsp]
  00041	8b 00		 mov	 eax, DWORD PTR [rax]
  00043	48 83 f8 48	 cmp	 rax, 72			; 00000048H
  00047	74 0a		 je	 SHORT $LN3@AtlWinModu

; 8402 : 		return E_INVALIDARG;

  00049	b8 57 00 07 80	 mov	 eax, -2147024809	; ffffffff80070057H
  0004e	e9 b1 00 00 00	 jmp	 $LN1@AtlWinModu
$LN3@AtlWinModu:

; 8403 : 
; 8404 : 	pWinModule->m_pCreateWndList = NULL;

  00053	48 8b 44 24 60	 mov	 rax, QWORD PTR pWinModule$[rsp]
  00058	48 c7 40 30 00
	00 00 00	 mov	 QWORD PTR [rax+48], 0

; 8405 : 
; 8406 : 	HRESULT hr = pWinModule->m_csWindowCreate.Init();

  00060	48 8b 44 24 60	 mov	 rax, QWORD PTR pWinModule$[rsp]
  00065	48 83 c0 08	 add	 rax, 8
  00069	48 8b c8	 mov	 rcx, rax
  0006c	e8 00 00 00 00	 call	 ?Init@CComCriticalSection@ATL@@QEAAJXZ ; ATL::CComCriticalSection::Init
  00071	89 44 24 30	 mov	 DWORD PTR hr$[rsp], eax

; 8407 : 	if (FAILED(hr))

  00075	83 7c 24 30 00	 cmp	 DWORD PTR hr$[rsp], 0
  0007a	0f 8d 80 00 00
	00		 jge	 $LN4@AtlWinModu

; 8408 : 	{
; 8409 : 		ATLTRACE(atlTraceWindowing, 0, _T("ERROR : Unable to initialize critical section in AtlWinModuleInit\n"));

  00080	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
  00087	e8 00 00 00 00	 call	 ??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ ; ATL::CTraceCategoryEx<32,0>::operator unsigned int
  0008c	89 44 24 48	 mov	 DWORD PTR tv81[rsp], eax
  00090	41 b8 d9 20 00
	00		 mov	 r8d, 8409		; 000020d9H
  00096	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0HB@NHAHFMOE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0009d	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T1[rsp]
  000a2	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  000a7	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_1IG@OPJAFKJH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5@
  000ae	45 33 c0	 xor	 r8d, r8d
  000b1	8b 4c 24 48	 mov	 ecx, DWORD PTR tv81[rsp]
  000b5	8b d1		 mov	 edx, ecx
  000b7	48 8b c8	 mov	 rcx, rax
  000ba	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ ; ATL::CTraceFileAndLineInfo::operator()

; 8410 : 		ATLASSERT(0);

  000bf	33 c0		 xor	 eax, eax
  000c1	85 c0		 test	 eax, eax
  000c3	75 3b		 jne	 SHORT $LN6@AtlWinModu
  000c5	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
  000cc	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000d1	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  000d8	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000dd	45 33 c9	 xor	 r9d, r9d
  000e0	41 b8 da 20 00
	00		 mov	 r8d, 8410		; 000020daH
  000e6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OC@KMMBJFLB@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000ed	b9 02 00 00 00	 mov	 ecx, 2
  000f2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReportW
  000f8	83 f8 01	 cmp	 eax, 1
  000fb	75 03		 jne	 SHORT $LN6@AtlWinModu
  000fd	cc		 int	 3
  000fe	33 c0		 xor	 eax, eax
$LN6@AtlWinModu:
$LN4@AtlWinModu:

; 8411 : 	}
; 8412 : 	return hr;

  00100	8b 44 24 30	 mov	 eax, DWORD PTR hr$[rsp]
$LN1@AtlWinModu:

; 8413 : }

  00104	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00108	5f		 pop	 rdi
  00109	c3		 ret	 0
?AtlWinModuleInit@ATL@@YAJPEAU_ATL_WIN_MODULE70@1@@Z ENDP ; ATL::AtlWinModuleInit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ PROC			; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 38	 add	 rax, 56			; 00000038H
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 83 c0 08	 add	 rax, 8
  00038	48 8b c8	 mov	 rcx, rax
  0003b	e8 00 00 00 00	 call	 ??1CComCriticalSection@ATL@@QEAA@XZ ; ATL::CComCriticalSection::~CComCriticalSection
  00040	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00044	5f		 pop	 rdi
  00045	c3		 ret	 0
??1_ATL_WIN_MODULE70@ATL@@QEAA@XZ ENDP			; ATL::_ATL_WIN_MODULE70::~_ATL_WIN_MODULE70
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ PROC			; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70, COMDAT
$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??0CComCriticalSection@ATL@@QEAA@XZ ; ATL::CComCriticalSection::CComCriticalSection
  0002f	90		 npad	 1
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 83 c0 38	 add	 rax, 56			; 00000038H
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
  00041	90		 npad	 1
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0_ATL_WIN_MODULE70@ATL@@QEAA@XZ ENDP			; ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA PROC	; `ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1CComCriticalSection@ATL@@QEAA@XZ ; ATL::CComCriticalSection::~CComCriticalSection
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA ENDP	; `ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA PROC	; `ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1CComCriticalSection@ATL@@QEAA@XZ ; ATL::CComCriticalSection::~CComCriticalSection
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0_ATL_WIN_MODULE70@ATL@@QEAA@XZ@4HA ENDP	; `ATL::_ATL_WIN_MODULE70::_ATL_WIN_MODULE70'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpcoll.h
;	COMDAT ??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z
_TEXT	SEGMENT
this$ = 64
nIndex$ = 72
??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[], COMDAT

; 236  : 	{

$LN7:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00022	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__60774AB8_atlsimpcoll@h
  00029	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 237  : 		ATLASSERT(nIndex >= 0 && nIndex < m_nSize);

  0002e	83 7c 24 48 00	 cmp	 DWORD PTR nIndex$[rsp], 0
  00033	7c 0e		 jl	 SHORT $LN5@operator
  00035	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003a	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  0003d	39 44 24 48	 cmp	 DWORD PTR nIndex$[rsp], eax
  00041	7c 3b		 jl	 SHORT $LN6@operator
$LN5@operator:
  00043	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1EA@JHMKKLFC@?$AAn?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
  0004a	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0004f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00056	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0005b	45 33 c9	 xor	 r9d, r9d
  0005e	41 b8 ed 00 00
	00		 mov	 r8d, 237		; 000000edH
  00064	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OK@ENELOBIL@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0006b	b9 02 00 00 00	 mov	 ecx, 2
  00070	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReportW
  00076	83 f8 01	 cmp	 eax, 1
  00079	75 03		 jne	 SHORT $LN6@operator
  0007b	cc		 int	 3
  0007c	33 c0		 xor	 eax, eax
$LN6@operator:

; 238  : 		if(nIndex < 0 || nIndex >= m_nSize)

  0007e	83 7c 24 48 00	 cmp	 DWORD PTR nIndex$[rsp], 0
  00083	7c 0e		 jl	 SHORT $LN3@operator
  00085	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0008a	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  0008d	39 44 24 48	 cmp	 DWORD PTR nIndex$[rsp], eax
  00091	7c 0f		 jl	 SHORT $LN2@operator
$LN3@operator:

; 239  : 		{
; 240  : 			_AtlRaiseException((DWORD)EXCEPTION_ARRAY_BOUNDS_EXCEEDED);

  00093	ba 01 00 00 00	 mov	 edx, 1
  00098	b9 8c 00 00 c0	 mov	 ecx, -1073741684	; c000008cH
  0009d	e8 00 00 00 00	 call	 ?_AtlRaiseException@ATL@@YAXKK@Z ; ATL::_AtlRaiseException
$LN2@operator:

; 241  : 		}
; 242  : 		return m_aT[nIndex];

  000a2	48 63 44 24 48	 movsxd	 rax, DWORD PTR nIndex$[rsp]
  000a7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000ac	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000af	48 8d 04 41	 lea	 rax, QWORD PTR [rcx+rax*2]
$LN4@operator:

; 243  : 	}

  000b3	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000b7	5f		 pop	 rdi
  000b8	c3		 ret	 0
??A?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAAEAGH@Z ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpcoll.h
;	COMDAT ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ
_TEXT	SEGMENT
i$1 = 32
this$ = 64
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll, COMDAT

; 215  : 	{

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__60774AB8_atlsimpcoll@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 216  : 		if(m_aT != NULL)

  0002a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00033	74 3e		 je	 SHORT $LN5@RemoveAll

; 217  : 		{
; 218  : 			for(int i = 0; i < m_nSize; i++)

  00035	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR i$1[rsp], 0
  0003d	eb 0a		 jmp	 SHORT $LN4@RemoveAll
$LN2@RemoveAll:
  0003f	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  00043	ff c0		 inc	 eax
  00045	89 44 24 20	 mov	 DWORD PTR i$1[rsp], eax
$LN4@RemoveAll:
  00049	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0004e	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00051	39 44 24 20	 cmp	 DWORD PTR i$1[rsp], eax
  00055	7d 02		 jge	 SHORT $LN3@RemoveAll

; 219  : 				m_aT[i].~T();

  00057	eb e6		 jmp	 SHORT $LN2@RemoveAll
$LN3@RemoveAll:

; 220  : 			free(m_aT);

  00059	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00061	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_free

; 221  : 			m_aT = NULL;

  00067	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0006c	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN5@RemoveAll:

; 222  : 		}
; 223  : 		m_nSize = 0;

  00073	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00078	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [rax+8], 0

; 224  : 		m_nAllocSize = 0;

  0007f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00084	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [rax+12], 0

; 225  :     }

  0008b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpcoll.h
;	COMDAT ?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ
_TEXT	SEGMENT
this$ = 48
?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize, COMDAT

; 160  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__60774AB8_atlsimpcoll@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 161  : 		return m_nSize;

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002f	8b 40 08	 mov	 eax, DWORD PTR [rax+8]

; 162  : 	}

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
?GetSize@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEBAHXZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::GetSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpcoll.h
;	COMDAT ??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT

; 310  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__60774AB8_atlsimpcoll@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0002a	90		 npad	 1

; 311  : 	RemoveAll();

  0002b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00030	e8 00 00 00 00	 call	 ?RemoveAll@?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAAXXZ ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::RemoveAll
  00035	90		 npad	 1

; 312  : }

  00036	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??1?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::~CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlsimpcoll.h
;	COMDAT ??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ PROC ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >, COMDAT

; 120  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__60774AB8_atlsimpcoll@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 119  : 		m_aT(NULL), m_nSize(0), m_nAllocSize(0)

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00036	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003b	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [rax+8], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [rax+12], 0

; 121  : 	}

  0004e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00053	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
??0?$CSimpleArray@GV?$CSimpleArrayEqualHelper@G@ATL@@@ATL@@QEAA@XZ ENDP ; ATL::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >::CSimpleArray<unsigned short,ATL::CSimpleArrayEqualHelper<unsigned short> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_ATL_COM_MODULE70@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1_ATL_COM_MODULE70@ATL@@QEAA@XZ PROC			; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 20	 add	 rax, 32			; 00000020H
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1CComCriticalSection@ATL@@QEAA@XZ ; ATL::CComCriticalSection::~CComCriticalSection
  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
??1_ATL_COM_MODULE70@ATL@@QEAA@XZ ENDP			; ATL::_ATL_COM_MODULE70::~_ATL_COM_MODULE70
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_ATL_COM_MODULE70@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0_ATL_COM_MODULE70@ATL@@QEAA@XZ PROC			; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 20	 add	 rax, 32			; 00000020H
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??0CComCriticalSection@ATL@@QEAA@XZ ; ATL::CComCriticalSection::CComCriticalSection
  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??0_ATL_COM_MODULE70@ATL@@QEAA@XZ ENDP			; ATL::_ATL_COM_MODULE70::_ATL_COM_MODULE70
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlcore.h
;	COMDAT ?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ
_TEXT	SEGMENT
this$ = 48
?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ PROC ; ATL::CAtlBaseModule::GetModuleInstance, COMDAT

; 289  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__221F5202_atlcore@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 290  : 		return m_hInst;

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 291  : 	}

  00033	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00037	5f		 pop	 rdi
  00038	c3		 ret	 0
?GetModuleInstance@CAtlBaseModule@ATL@@QEAAPEAUHINSTANCE__@@XZ ENDP ; ATL::CAtlBaseModule::GetModuleInstance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlcore.h
;	COMDAT ?Term@CComCriticalSection@ATL@@QEAAJXZ
_TEXT	SEGMENT
this$ = 48
?Term@CComCriticalSection@ATL@@QEAAJXZ PROC		; ATL::CComCriticalSection::Term, COMDAT

; 154  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__221F5202_atlcore@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 155  : 		DeleteCriticalSection(&m_sec);

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b c8	 mov	 rcx, rax
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DeleteCriticalSection

; 156  : 		return S_OK;

  00038	33 c0		 xor	 eax, eax

; 157  : 	}

  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?Term@CComCriticalSection@ATL@@QEAAJXZ ENDP		; ATL::CComCriticalSection::Term
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlcore.h
;	COMDAT ?Init@CComCriticalSection@ATL@@QEAAJXZ
_TEXT	SEGMENT
hRes$ = 32
this$ = 64
?Init@CComCriticalSection@ATL@@QEAAJXZ PROC		; ATL::CComCriticalSection::Init, COMDAT

; 143  : 	{

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__221F5202_atlcore@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 144  : 		HRESULT hRes = S_OK;

  0002a	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR hRes$[rsp], 0

; 145  : 		if (!_AtlInitializeCriticalSectionEx(&m_sec, 0, 0))

  00032	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00037	45 33 c0	 xor	 r8d, r8d
  0003a	33 d2		 xor	 edx, edx
  0003c	48 8b c8	 mov	 rcx, rax
  0003f	e8 00 00 00 00	 call	 ?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z ; ATL::_AtlInitializeCriticalSectionEx
  00044	85 c0		 test	 eax, eax
  00046	75 11		 jne	 SHORT $LN2@Init

; 146  : 		{
; 147  : 			hRes = HRESULT_FROM_WIN32(GetLastError());

  00048	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetLastError
  0004e	8b c8		 mov	 ecx, eax
  00050	e8 00 00 00 00	 call	 HRESULT_FROM_WIN32
  00055	89 44 24 20	 mov	 DWORD PTR hRes$[rsp], eax
$LN2@Init:

; 148  : 		}
; 149  : 
; 150  : 		return hRes;

  00059	8b 44 24 20	 mov	 eax, DWORD PTR hRes$[rsp]

; 151  : 	}

  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
?Init@CComCriticalSection@ATL@@QEAAJXZ ENDP		; ATL::CComCriticalSection::Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlcore.h
;	COMDAT ??1CComCriticalSection@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CComCriticalSection@ATL@@QEAA@XZ PROC		; ATL::CComCriticalSection::~CComCriticalSection, COMDAT

; 129  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__221F5202_atlcore@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0002a	90		 npad	 1

; 130  : 	}

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
??1CComCriticalSection@ATL@@QEAA@XZ ENDP		; ATL::CComCriticalSection::~CComCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlcore.h
;	COMDAT ??0CComCriticalSection@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0CComCriticalSection@ATL@@QEAA@XZ PROC		; ATL::CComCriticalSection::CComCriticalSection, COMDAT

; 123  : 	CComCriticalSection() throw()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__221F5202_atlcore@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 124  : 	{
; 125  : 		memset(&m_sec, 0, sizeof(CRITICAL_SECTION));

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002f	41 b8 28 00 00
	00		 mov	 r8d, 40			; 00000028H
  00035	33 d2		 xor	 edx, edx
  00037	48 8b c8	 mov	 rcx, rax
  0003a	e8 00 00 00 00	 call	 memset

; 126  : 	}

  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??0CComCriticalSection@ATL@@QEAA@XZ ENDP		; ATL::CComCriticalSection::CComCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlwinverapi.h
;	COMDAT ?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z
_TEXT	SEGMENT
lpCriticalSection$ = 48
dwSpinCount$ = 56
Flags$ = 64
?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z PROC ; ATL::_AtlInitializeCriticalSectionEx, COMDAT

; 727  : {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__24B99871_atlwinverapi@h
  0002e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 728  : #if (NTDDI_VERSION >= NTDDI_VISTA) && !defined(_USING_V110_SDK71_) && !defined(_ATL_XP_TARGETING)
; 729  : 	// InitializeCriticalSectionEx is available in Vista or later, desktop or store apps
; 730  : 	return ::InitializeCriticalSectionEx(lpCriticalSection, dwSpinCount, Flags);

  00033	44 8b 44 24 40	 mov	 r8d, DWORD PTR Flags$[rsp]
  00038	8b 54 24 38	 mov	 edx, DWORD PTR dwSpinCount$[rsp]
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR lpCriticalSection$[rsp]
  00041	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_InitializeCriticalSectionEx

; 731  : #else
; 732  : 	UNREFERENCED_PARAMETER(Flags);
; 733  : 
; 734  : 	// ...otherwise fall back to using InitializeCriticalSectionAndSpinCount.
; 735  : 	return ::InitializeCriticalSectionAndSpinCount(lpCriticalSection, dwSpinCount);
; 736  : #endif
; 737  : }

  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?_AtlInitializeCriticalSectionEx@ATL@@YAHPEAU_RTL_CRITICAL_SECTION@@KK@Z ENDP ; ATL::_AtlInitializeCriticalSectionEx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlexcept.h
;	COMDAT ?_AtlRaiseException@ATL@@YAXKK@Z
_TEXT	SEGMENT
dwExceptionCode$ = 48
dwExceptionFlags$ = 56
?_AtlRaiseException@ATL@@YAXKK@Z PROC			; ATL::_AtlRaiseException, COMDAT

; 30   : {

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00008	57		 push	 rdi
  00009	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 08 00 00 00	 mov	 ecx, 8
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	8b 4c 24 30	 mov	 ecx, DWORD PTR [rsp+48]
  00020	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6D4FC87F_atlexcept@h
  00027	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 31   : 	RaiseException( dwExceptionCode, dwExceptionFlags, 0, NULL );

  0002c	45 33 c9	 xor	 r9d, r9d
  0002f	45 33 c0	 xor	 r8d, r8d
  00032	8b 54 24 38	 mov	 edx, DWORD PTR dwExceptionFlags$[rsp]
  00036	8b 4c 24 30	 mov	 ecx, DWORD PTR dwExceptionCode$[rsp]
  0003a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_RaiseException

; 32   : }

  00040	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00044	5f		 pop	 rdi
  00045	c3		 ret	 0
?_AtlRaiseException@ATL@@YAXKK@Z ENDP			; ATL::_AtlRaiseException
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ
_TEXT	SEGMENT
ple$ = 52
ptr$ = 88
this$ = 128
dwCategory$ = 136
nLevel$ = 144
pszFmt$ = 152
??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ PROC	; ATL::CTraceFileAndLineInfo::operator(), COMDAT

; 436  : 	{

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 1c 00 00 00	 mov	 ecx, 28
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 437  : 		CPreserveLastError ple;

  0003b	48 8d 4c 24 34	 lea	 rcx, QWORD PTR ple$[rsp]
  00040	e8 00 00 00 00	 call	 ??0CPreserveLastError@ATL@@QEAA@XZ ; ATL::CPreserveLastError::CPreserveLastError
  00045	90		 npad	 1

; 438  : 		va_list ptr; va_start(ptr, pszFmt);

  00046	48 8d 84 24 a0
	00 00 00	 lea	 rax, QWORD PTR pszFmt$[rsp+8]
  0004e	48 89 44 24 58	 mov	 QWORD PTR ptr$[rsp], rax

; 439  : 		ATL::CTrace::TraceV(m_pszFileName, m_nLineNo, dwCategory, nLevel, pszFmt, ptr);

  00053	48 8b 44 24 58	 mov	 rax, QWORD PTR ptr$[rsp]
  00058	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0005d	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR pszFmt$[rsp]
  00065	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0006a	44 8b 8c 24 90
	00 00 00	 mov	 r9d, DWORD PTR nLevel$[rsp]
  00072	44 8b 84 24 88
	00 00 00	 mov	 r8d, DWORD PTR dwCategory$[rsp]
  0007a	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00082	8b 50 08	 mov	 edx, DWORD PTR [rax+8]
  00085	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0008d	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00090	e8 00 00 00 00	 call	 ?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z ; ATL::CTrace::TraceV

; 440  : 		va_end(ptr);

  00095	48 c7 44 24 58
	00 00 00 00	 mov	 QWORD PTR ptr$[rsp], 0

; 441  : 	}

  0009e	48 8d 4c 24 34	 lea	 rcx, QWORD PTR ple$[rsp]
  000a3	e8 00 00 00 00	 call	 ??1CPreserveLastError@ATL@@QEAA@XZ ; ATL::CPreserveLastError::~CPreserveLastError
  000a8	48 8b cc	 mov	 rcx, rsp
  000ab	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ$rtcFrameData
  000b2	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000b7	48 83 c4 70	 add	 rsp, 112		; 00000070H
  000bb	5f		 pop	 rdi
  000bc	c3		 ret	 0
??RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ ENDP	; ATL::CTraceFileAndLineInfo::operator()
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ple$ = 52
ptr$ = 88
this$ = 128
dwCategory$ = 136
nLevel$ = 144
pszFmt$ = 152
?dtor$0@?0???RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ@4HA PROC ; `ATL::CTraceFileAndLineInfo::operator()'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 34	 lea	 rcx, QWORD PTR ple$[rbp]
  00017	e8 00 00 00 00	 call	 ??1CPreserveLastError@ATL@@QEAA@XZ ; ATL::CPreserveLastError::~CPreserveLastError
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ@4HA ENDP ; `ATL::CTraceFileAndLineInfo::operator()'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
ple$ = 52
ptr$ = 88
this$ = 128
dwCategory$ = 136
nLevel$ = 144
pszFmt$ = 152
?dtor$0@?0???RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ@4HA PROC ; `ATL::CTraceFileAndLineInfo::operator()'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 34	 lea	 rcx, QWORD PTR ple$[rbp]
  00017	e8 00 00 00 00	 call	 ??1CPreserveLastError@ATL@@QEAA@XZ ; ATL::CPreserveLastError::~CPreserveLastError
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???RCTraceFileAndLineInfo@ATL@@QEBAXHIPEB_WZZ@4HA ENDP ; `ATL::CTraceFileAndLineInfo::operator()'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z
_TEXT	SEGMENT
this$ = 48
pszFileName$ = 56
nLineNo$ = 64
??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z PROC		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo, COMDAT

; 411  : 	{

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0002f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 410  : 		: m_pszFileName(pszFileName), m_nLineNo(nLineNo)

  00034	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszFileName$[rsp]
  0003e	48 89 08	 mov	 QWORD PTR [rax], rcx
  00041	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00046	8b 4c 24 40	 mov	 ecx, DWORD PTR nLineNo$[rsp]
  0004a	89 48 08	 mov	 DWORD PTR [rax+8], ecx

; 412  : 	}

  0004d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00052	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00056	5f		 pop	 rdi
  00057	c3		 ret	 0
??0CTraceFileAndLineInfo@ATL@@QEAA@PEBDH@Z ENDP		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??1CPreserveLastError@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CPreserveLastError@ATL@@QEAA@XZ PROC			; ATL::CPreserveLastError::~CPreserveLastError, COMDAT

; 396  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0002a	90		 npad	 1

; 397  : 		SetLastError(m_dwLastError);

  0002b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00030	8b 08		 mov	 ecx, DWORD PTR [rax]
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetLastError
  00038	90		 npad	 1

; 398  : 	}

  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5f		 pop	 rdi
  0003e	c3		 ret	 0
??1CPreserveLastError@ATL@@QEAA@XZ ENDP			; ATL::CPreserveLastError::~CPreserveLastError
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0CPreserveLastError@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0CPreserveLastError@ATL@@QEAA@XZ PROC			; ATL::CPreserveLastError::CPreserveLastError, COMDAT

; 390  : 	CPreserveLastError()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 391  : 	{
; 392  : 		m_dwLastError = GetLastError();

  0002a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetLastError
  00030	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00035	89 01		 mov	 DWORD PTR [rcx], eax

; 393  : 	}

  00037	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
??0CPreserveLastError@ATL@@QEAA@XZ ENDP			; ATL::CPreserveLastError::CPreserveLastError
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ PROC	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ENDP	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::~CHeapPtr<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z
_TEXT	SEGMENT
nBytes$ = 40
this$ = 80
nElements$ = 88
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z PROC ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate, COMDAT

; 455  : 	{

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D242CB04_atlalloc@h
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 456  : 		size_t nBytes=0;

  0002f	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR nBytes$[rsp], 0

; 457  : 		if(FAILED(::ATL::AtlMultiply(&nBytes, nElements, sizeof(T))))

  00038	41 b8 02 00 00
	00		 mov	 r8d, 2
  0003e	48 8b 54 24 58	 mov	 rdx, QWORD PTR nElements$[rsp]
  00043	48 8d 4c 24 28	 lea	 rcx, QWORD PTR nBytes$[rsp]
  00048	e8 00 00 00 00	 call	 ??$AtlMultiply@_K@ATL@@YAJPEA_K_K1@Z ; ATL::AtlMultiply<unsigned __int64>
  0004d	85 c0		 test	 eax, eax
  0004f	7d 04		 jge	 SHORT $LN2@Allocate

; 458  : 		{
; 459  : 			return false;

  00051	32 c0		 xor	 al, al
  00053	eb 0f		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 460  : 		}
; 461  : 		return this->AllocateBytes(nBytes);

  00055	48 8b 54 24 28	 mov	 rdx, QWORD PTR nBytes$[rsp]
  0005a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0005f	e8 00 00 00 00	 call	 ?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
$LN1@Allocate:

; 462  : 	}

  00064	48 8b f8	 mov	 rdi, rax
  00067	48 8b cc	 mov	 rcx, rsp
  0006a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z$rtcFrameData
  00071	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00076	48 8b c7	 mov	 rax, rdi
  00079	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0007d	5f		 pop	 rdi
  0007e	c3		 ret	 0
?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ENDP ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ PROC	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>, COMDAT

; 434  : 	CHeapPtr() throw()

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D242CB04_atlalloc@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 435  : 	{

  0002a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002f	e8 00 00 00 00	 call	 ??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>

; 436  : 	}

  00034	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5f		 pop	 rdi
  0003e	c3		 ret	 0
??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ENDP	; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free, COMDAT

; 407  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D242CB04_atlalloc@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 408  : 		Allocator::Free(m_pData);

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00032	e8 00 00 00 00	 call	 ?Free@CCRTAllocator@ATL@@SAXPEAX@Z ; ATL::CCRTAllocator::Free

; 409  : 		m_pData = NULL;

  00037	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003c	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 410  : 	}

  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z
_TEXT	SEGMENT
this$ = 64
nBytes$ = 72
?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes, COMDAT

; 381  : 	{

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D242CB04_atlalloc@h
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 382  : 		ATLASSERT(m_pData == NULL);

  0002f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00038	74 3b		 je	 SHORT $LN4@AllocateBy
  0003a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1BK@NHECDDNK@?$AAm?$AA_?$AAp?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0@
  00041	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00046	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0004d	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00052	45 33 c9	 xor	 r9d, r9d
  00055	41 b8 7e 01 00
	00		 mov	 r8d, 382		; 0000017eH
  0005b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OE@BPCMJDLP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00062	b9 02 00 00 00	 mov	 ecx, 2
  00067	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReportW
  0006d	83 f8 01	 cmp	 eax, 1
  00070	75 03		 jne	 SHORT $LN4@AllocateBy
  00072	cc		 int	 3
  00073	33 c0		 xor	 eax, eax
$LN4@AllocateBy:

; 383  : 		m_pData = static_cast<T*>(Allocator::Allocate(nBytes));

  00075	48 8b 4c 24 48	 mov	 rcx, QWORD PTR nBytes$[rsp]
  0007a	e8 00 00 00 00	 call	 ?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z ; ATL::CCRTAllocator::Allocate
  0007f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00084	48 89 01	 mov	 QWORD PTR [rcx], rax

; 384  : 		if (m_pData == NULL)

  00087	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0008c	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00090	75 04		 jne	 SHORT $LN2@AllocateBy

; 385  : 			return false;

  00092	32 c0		 xor	 al, al
  00094	eb 02		 jmp	 SHORT $LN1@AllocateBy
$LN2@AllocateBy:

; 386  : 
; 387  : 		return true;

  00096	b0 01		 mov	 al, 1
$LN1@AllocateBy:

; 388  : 	}

  00098	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0009c	5f		 pop	 rdi
  0009d	c3		 ret	 0
?AllocateBytes@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::AllocateBytes
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ
_TEXT	SEGMENT
this$ = 48
??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *, COMDAT

; 363  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D242CB04_atlalloc@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 364  : 		return m_pData;

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 365  : 	}

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>, COMDAT

; 349  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D242CB04_atlalloc@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 350  : 		Free();

  0002a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002f	e8 00 00 00 00	 call	 ?Free@?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAAXXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::Free

; 351  : 	}

  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??1?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::~CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ PROC ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>, COMDAT

; 336  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D242CB04_atlalloc@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 335  : 		m_pData(NULL)

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 337  : 	}

  00036	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
??0?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@IEAA@XZ ENDP ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z
_TEXT	SEGMENT
pszCategory$ = 64
nCategory$ = 72
?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z PROC		; ATL::CTrace::RegisterCategory, COMDAT

; 329  : 	{

$LN6:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00022	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  00029	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 330  : 		if (pszCategory == nullptr)

  0002e	48 83 7c 24 40
	00		 cmp	 QWORD PTR pszCategory$[rsp], 0
  00034	75 05		 jne	 SHORT $LN2@RegisterCa

; 331  : 		{
; 332  : 			return;

  00036	e9 a1 00 00 00	 jmp	 $LN1@RegisterCa
$LN2@RegisterCa:

; 333  : 		}
; 334  : 
; 335  : 		if (m_nLastCategory >= MaxCategoryArray) 

  0003b	83 3d 00 00 00
	00 20		 cmp	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 32 ; ATL::CTrace::m_nLastCategory, 00000020H
  00042	72 43		 jb	 SHORT $LN3@RegisterCa

; 336  : 		{
; 337  : 			ATLASSERT(false && "Too many categories defined");

  00044	33 c0		 xor	 eax, eax
  00046	85 c0		 test	 eax, eax
  00048	75 3b		 jne	 SHORT $LN5@RegisterCa
  0004a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
  00051	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00056	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0005d	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00062	45 33 c9	 xor	 r9d, r9d
  00065	41 b8 51 01 00
	00		 mov	 r8d, 337		; 00000151H
  0006b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1OE@GMIHPBDM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00072	b9 02 00 00 00	 mov	 ecx, 2
  00077	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReportW
  0007d	83 f8 01	 cmp	 eax, 1
  00080	75 03		 jne	 SHORT $LN5@RegisterCa
  00082	cc		 int	 3
  00083	33 c0		 xor	 eax, eax
$LN5@RegisterCa:

; 338  : 			return;

  00085	eb 55		 jmp	 SHORT $LN1@RegisterCa
$LN3@RegisterCa:

; 339  : 		}
; 340  : 
; 341  : 		m_nMap[m_nLastCategory].nCategory = nCategory;

  00087	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  0008d	48 69 c0 04 01
	00 00		 imul	 rax, rax, 260		; 00000104H
  00094	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A ; ATL::CTrace::m_nMap
  0009b	8b 54 24 48	 mov	 edx, DWORD PTR nCategory$[rsp]
  0009f	89 14 01	 mov	 DWORD PTR [rcx+rax], edx

; 342  : #ifdef _UNICODE
; 343  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, pszCategory);

  000a2	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  000a8	48 69 c0 04 01
	00 00		 imul	 rax, rax, 260		; 00000104H
  000af	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A ; ATL::CTrace::m_nMap
  000b6	48 8d 44 01 04	 lea	 rax, QWORD PTR [rcx+rax+4]
  000bb	4c 8b 44 24 40	 mov	 r8, QWORD PTR pszCategory$[rsp]
  000c0	ba 7f 00 00 00	 mov	 edx, 127		; 0000007fH
  000c5	48 8b c8	 mov	 rcx, rax
  000c8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_wcscpy_s

; 344  : #else
; 345  : 		wchar_t buffer[MaxLengthOfCategoryName] = { 0 };	
; 346  : #if _MSC_VER < 1900
; 347  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%S", pszCategory);
; 348  : #else
; 349  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%hs", pszCategory);
; 350  : #endif
; 351  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, buffer);
; 352  : #endif
; 353  : 	
; 354  : 		m_nLastCategory++;

  000ce	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  000d4	ff c0		 inc	 eax
  000d6	89 05 00 00 00
	00		 mov	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, eax ; ATL::CTrace::m_nLastCategory
$LN1@RegisterCa:

; 355  : 	}

  000dc	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000e0	5f		 pop	 rdi
  000e1	c3		 ret	 0
?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ENDP		; ATL::CTrace::RegisterCategory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z
_TEXT	SEGMENT
cchNeeded$ = 64
wszBuf$ = 88
vsnwprintf_result$ = 100
tv129 = 104
tv132 = 112
tv139 = 120
pszFileName$ = 144
nLine$ = 152
dwCategory$ = 160
nLevel$ = 168
pwszFmt$ = 176
args$ = 184
?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z PROC		; ATL::CTrace::TraceV, COMDAT

; 281  : 	{

$LN7:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0001b	48 8b fc	 mov	 rdi, rsp
  0001e	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00023	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00028	f3 ab		 rep stosd
  0002a	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  00032	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  00039	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 282  : #if _MSC_VER < 1900
; 283  : 		int cchNeeded = _vscwprintf(pwszFmt, args);
; 284  : #else
; 285  : 		// Explicitly request the legacy wide format specifiers mode from the CRT,
; 286  : 		// for compatibility with previous versions.  While the CRT supports two
; 287  : 		// modes, the ATL and MFC functions that accept format strings only support
; 288  : 		// legacy mode format strings.
; 289  : 		int cchNeeded = __stdio_common_vswprintf(

  0003e	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00043	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00046	48 83 c8 02	 or	 rax, 2
  0004a	48 83 c8 04	 or	 rax, 4
  0004e	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR args$[rsp]
  00056	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  0005b	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00064	4c 8b 8c 24 b0
	00 00 00	 mov	 r9, QWORD PTR pwszFmt$[rsp]
  0006c	45 33 c0	 xor	 r8d, r8d
  0006f	33 d2		 xor	 edx, edx
  00071	48 8b c8	 mov	 rcx, rax
  00074	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___stdio_common_vswprintf
  0007a	89 44 24 40	 mov	 DWORD PTR cchNeeded$[rsp], eax

; 290  : 			_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS |
; 291  : 			_CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR |
; 292  : 			_CRT_INTERNAL_PRINTF_LEGACY_WIDE_SPECIFIERS,
; 293  : 			NULL, 0, pwszFmt, NULL, args);
; 294  : #endif
; 295  : 		if (cchNeeded < 0)

  0007e	83 7c 24 40 00	 cmp	 DWORD PTR cchNeeded$[rsp], 0
  00083	7d 05		 jge	 SHORT $LN2@TraceV

; 296  : 		{
; 297  : 			return;

  00085	e9 1b 01 00 00	 jmp	 $LN1@TraceV
$LN2@TraceV:

; 298  : 		}
; 299  : 
; 300  : 		CHeapPtr<wchar_t> wszBuf;

  0008a	48 8d 4c 24 58	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  0008f	e8 00 00 00 00	 call	 ??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>
  00094	90		 npad	 1

; 301  : 		if (!wszBuf.Allocate(cchNeeded + 1))

  00095	8b 44 24 40	 mov	 eax, DWORD PTR cchNeeded$[rsp]
  00099	ff c0		 inc	 eax
  0009b	48 98		 cdqe
  0009d	48 8b d0	 mov	 rdx, rax
  000a0	48 8d 4c 24 58	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  000a5	e8 00 00 00 00	 call	 ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
  000aa	0f b6 c0	 movzx	 eax, al
  000ad	85 c0		 test	 eax, eax
  000af	75 0f		 jne	 SHORT $LN3@TraceV

; 302  : 		{
; 303  : 			return;

  000b1	48 8d 4c 24 58	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  000b6	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  000bb	e9 e5 00 00 00	 jmp	 $LN1@TraceV
$LN3@TraceV:

; 304  : 		}
; 305  : 
; 306  : 		wszBuf[0] = '\0';

  000c0	48 8d 4c 24 58	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  000c5	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  000ca	b9 02 00 00 00	 mov	 ecx, 2
  000cf	48 6b c9 00	 imul	 rcx, rcx, 0
  000d3	33 d2		 xor	 edx, edx
  000d5	66 89 14 08	 mov	 WORD PTR [rax+rcx], dx

; 307  : 
; 308  : #if _MSC_VER < 1900
; 309  : 		if (_vsnwprintf_s(wszBuf, cchNeeded + 1, cchNeeded, pwszFmt, args) == -1)
; 310  : #else
; 311  : 		// Explicitly request the legacy wide format specifiers mode from the CRT,
; 312  : 		// for compatibility with previous versions.  While the CRT supports two
; 313  : 		// modes, the ATL and MFC functions that accept format strings only support
; 314  : 		// legacy mode format strings.
; 315  : 		int const vsnwprintf_result = __stdio_common_vsnwprintf_s(

  000d9	48 63 44 24 40	 movsxd	 rax, DWORD PTR cchNeeded$[rsp]
  000de	48 89 44 24 68	 mov	 QWORD PTR tv129[rsp], rax
  000e3	8b 4c 24 40	 mov	 ecx, DWORD PTR cchNeeded$[rsp]
  000e7	ff c1		 inc	 ecx
  000e9	48 63 c9	 movsxd	 rcx, ecx
  000ec	48 89 4c 24 70	 mov	 QWORD PTR tv132[rsp], rcx
  000f1	48 8d 4c 24 58	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  000f6	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  000fb	48 89 44 24 78	 mov	 QWORD PTR tv139[rsp], rax
  00100	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00105	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00108	48 83 c8 04	 or	 rax, 4
  0010c	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR args$[rsp]
  00114	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  00119	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR [rsp+40], 0
  00122	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR pwszFmt$[rsp]
  0012a	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0012f	48 8b 4c 24 68	 mov	 rcx, QWORD PTR tv129[rsp]
  00134	4c 8b c9	 mov	 r9, rcx
  00137	48 8b 4c 24 70	 mov	 rcx, QWORD PTR tv132[rsp]
  0013c	4c 8b c1	 mov	 r8, rcx
  0013f	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv139[rsp]
  00144	48 8b d1	 mov	 rdx, rcx
  00147	48 8b c8	 mov	 rcx, rax
  0014a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___stdio_common_vsnwprintf_s
  00150	89 44 24 64	 mov	 DWORD PTR vsnwprintf_result$[rsp], eax

; 316  : 			_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS |
; 317  : 			_CRT_INTERNAL_PRINTF_LEGACY_WIDE_SPECIFIERS,
; 318  : 			wszBuf, cchNeeded + 1, cchNeeded, pwszFmt, NULL, args);
; 319  : 		if (vsnwprintf_result < 0)

  00154	83 7c 24 64 00	 cmp	 DWORD PTR vsnwprintf_result$[rsp], 0
  00159	7d 0c		 jge	 SHORT $LN4@TraceV

; 320  : #endif
; 321  : 		{
; 322  : 			return;

  0015b	48 8d 4c 24 58	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00160	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  00165	eb 3e		 jmp	 SHORT $LN1@TraceV
$LN4@TraceV:

; 323  : 		}
; 324  : 
; 325  : 		TraceV(pszFileName, nLine, dwCategory, nLevel, wszBuf);

  00167	48 8d 4c 24 58	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  0016c	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  00171	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00176	44 8b 8c 24 a8
	00 00 00	 mov	 r9d, DWORD PTR nLevel$[rsp]
  0017e	44 8b 84 24 a0
	00 00 00	 mov	 r8d, DWORD PTR dwCategory$[rsp]
  00186	8b 94 24 98 00
	00 00		 mov	 edx, DWORD PTR nLine$[rsp]
  0018d	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR pszFileName$[rsp]
  00195	e8 00 00 00 00	 call	 ?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z ; ATL::CTrace::TraceV
  0019a	90		 npad	 1

; 326  : 	}

  0019b	48 8d 4c 24 58	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  001a0	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
$LN1@TraceV:
  001a5	48 8b cc	 mov	 rcx, rsp
  001a8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z$rtcFrameData
  001af	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001b4	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  001bb	5f		 pop	 rdi
  001bc	c3		 ret	 0
?TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z ENDP		; ATL::CTrace::TraceV
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
cchNeeded$ = 64
wszBuf$ = 88
vsnwprintf_result$ = 100
tv129 = 104
tv132 = 112
tv139 = 120
pszFileName$ = 144
nLine$ = 152
dwCategory$ = 160
nLevel$ = 168
pwszFmt$ = 176
args$ = 184
?dtor$0@?0??TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z@4HA PROC ; `ATL::CTrace::TraceV'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR wszBuf$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z@4HA ENDP ; `ATL::CTrace::TraceV'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
cchNeeded$ = 64
wszBuf$ = 88
vsnwprintf_result$ = 100
tv129 = 104
tv132 = 112
tv139 = 120
pszFileName$ = 144
nLine$ = 152
dwCategory$ = 160
nLevel$ = 168
pwszFmt$ = 176
args$ = 184
?dtor$0@?0??TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z@4HA PROC ; `ATL::CTrace::TraceV'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR wszBuf$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??TraceV@CTrace@ATL@@SAXPEBDHIIPEB_WPEAD@Z@4HA ENDP ; `ATL::CTrace::TraceV'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z
_TEXT	SEGMENT
wszCategory$ = 64
categoryLength$ = 2116
pwszCategoryName$ = 2120
chCount$ = 2128
wszBuf$ = 2152
fileName$ = 2192
tv145 = 2736
__$ArrayPad$ = 2744
pszFileName$ = 2768
nLine$ = 2776
dwCategory$ = 2784
nLevel$ = 2792
pwszMessage$ = 2800
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z PROC		; ATL::CTrace::TraceV, COMDAT

; 150  : 	{

$LN13:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 81 ec c0 0a
	00 00		 sub	 rsp, 2752		; 00000ac0H
  0001b	48 8b fc	 mov	 rdi, rsp
  0001e	b9 b0 02 00 00	 mov	 ecx, 688		; 000002b0H
  00023	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00028	f3 ab		 rep stosd
  0002a	48 8b 8c 24 d0
	0a 00 00	 mov	 rcx, QWORD PTR [rsp+2768]
  00032	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00039	48 33 c4	 xor	 rax, rsp
  0003c	48 89 84 24 b8
	0a 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00044	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0004b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 151  : 		if (CTrace::m_nLevel == CTrace::DisableTracing || CTrace::m_nLevel < nLevel || (CTrace::m_nCategory & dwCategory) == 0)

  00050	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?m_nLevel@CTrace@ATL@@1IA, -1 ; ATL::CTrace::m_nLevel, ffffffffH
  00057	74 24		 je	 SHORT $LN3@TraceV
  00059	8b 84 24 e8 0a
	00 00		 mov	 eax, DWORD PTR nLevel$[rsp]
  00060	39 05 00 00 00
	00		 cmp	 DWORD PTR ?m_nLevel@CTrace@ATL@@1IA, eax ; ATL::CTrace::m_nLevel
  00066	72 15		 jb	 SHORT $LN3@TraceV
  00068	8b 84 24 e0 0a
	00 00		 mov	 eax, DWORD PTR dwCategory$[rsp]
  0006f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_nCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nCategory
  00075	23 c8		 and	 ecx, eax
  00077	8b c1		 mov	 eax, ecx
  00079	85 c0		 test	 eax, eax
  0007b	75 05		 jne	 SHORT $LN2@TraceV
$LN3@TraceV:

; 152  : 		{
; 153  : 			return;

  0007d	e9 0e 02 00 00	 jmp	 $LN1@TraceV
$LN2@TraceV:

; 154  : 		}
; 155  : 
; 156  : 		wchar_t wszCategory[TraceBufferSize] = {'\0'};

  00082	48 8d 44 24 40	 lea	 rax, QWORD PTR wszCategory$[rsp]
  00087	48 8b f8	 mov	 rdi, rax
  0008a	33 c0		 xor	 eax, eax
  0008c	b9 00 08 00 00	 mov	 ecx, 2048		; 00000800H
  00091	f3 aa		 rep stosb

; 157  : 		int categoryLength = 0;

  00093	c7 84 24 44 08
	00 00 00 00 00
	00		 mov	 DWORD PTR categoryLength$[rsp], 0

; 158  : 		const wchar_t *const pwszCategoryName = GetCategoryName(dwCategory);

  0009e	8b 8c 24 e0 0a
	00 00		 mov	 ecx, DWORD PTR dwCategory$[rsp]
  000a5	e8 00 00 00 00	 call	 ?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z ; ATL::CTrace::GetCategoryName
  000aa	48 89 84 24 48
	08 00 00	 mov	 QWORD PTR pwszCategoryName$[rsp], rax

; 159  : 		if (pwszCategoryName != nullptr)

  000b2	48 83 bc 24 48
	08 00 00 00	 cmp	 QWORD PTR pwszCategoryName$[rsp], 0
  000bb	74 36		 je	 SHORT $LN4@TraceV

; 160  : 		{
; 161  : 			if ((categoryLength = swprintf_s(wszCategory, TraceBufferSize, L"%ls - ", pwszCategoryName)) == -1)

  000bd	4c 8b 8c 24 48
	08 00 00	 mov	 r9, QWORD PTR pwszCategoryName$[rsp]
  000c5	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1O@LFNDFEBP@?$AA?$CF?$AAl?$AAs?$AA?5?$AA?9?$AA?5@
  000cc	ba 00 04 00 00	 mov	 edx, 1024		; 00000400H
  000d1	48 8d 4c 24 40	 lea	 rcx, QWORD PTR wszCategory$[rsp]
  000d6	e8 00 00 00 00	 call	 swprintf_s
  000db	89 84 24 44 08
	00 00		 mov	 DWORD PTR categoryLength$[rsp], eax
  000e2	83 bc 24 44 08
	00 00 ff	 cmp	 DWORD PTR categoryLength$[rsp], -1
  000ea	75 05		 jne	 SHORT $LN6@TraceV

; 162  : 			{
; 163  : 				return;

  000ec	e9 9f 01 00 00	 jmp	 $LN1@TraceV
$LN6@TraceV:

; 164  : 			}
; 165  : 		}

  000f1	eb 34		 jmp	 SHORT $LN5@TraceV
$LN4@TraceV:

; 166  : 		else
; 167  : 		{
; 168  : 			if ((categoryLength = swprintf_s(wszCategory, TraceBufferSize, L"%u - ", dwCategory)) == -1)

  000f3	44 8b 8c 24 e0
	0a 00 00	 mov	 r9d, DWORD PTR dwCategory$[rsp]
  000fb	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1M@PGKOAACE@?$AA?$CF?$AAu?$AA?5?$AA?9?$AA?5@
  00102	ba 00 04 00 00	 mov	 edx, 1024		; 00000400H
  00107	48 8d 4c 24 40	 lea	 rcx, QWORD PTR wszCategory$[rsp]
  0010c	e8 00 00 00 00	 call	 swprintf_s
  00111	89 84 24 44 08
	00 00		 mov	 DWORD PTR categoryLength$[rsp], eax
  00118	83 bc 24 44 08
	00 00 ff	 cmp	 DWORD PTR categoryLength$[rsp], -1
  00120	75 05		 jne	 SHORT $LN5@TraceV

; 169  : 			{
; 170  : 				return;

  00122	e9 69 01 00 00	 jmp	 $LN1@TraceV
$LN5@TraceV:

; 171  : 			}
; 172  : 		}
; 173  : 
; 174  : 		int chCount = (int)wcslen(pwszMessage) + categoryLength + 1;

  00127	48 8b 8c 24 f0
	0a 00 00	 mov	 rcx, QWORD PTR pwszMessage$[rsp]
  0012f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_wcslen
  00135	8b 8c 24 44 08
	00 00		 mov	 ecx, DWORD PTR categoryLength$[rsp]
  0013c	8d 44 08 01	 lea	 eax, DWORD PTR [rax+rcx+1]
  00140	89 84 24 50 08
	00 00		 mov	 DWORD PTR chCount$[rsp], eax

; 175  : 		CHeapPtr<wchar_t> wszBuf;

  00147	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  0014f	e8 00 00 00 00	 call	 ??0?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::CHeapPtr<wchar_t,ATL::CCRTAllocator>

; 176  : 		if (!wszBuf.Allocate(chCount))

  00154	48 63 84 24 50
	08 00 00	 movsxd	 rax, DWORD PTR chCount$[rsp]
  0015c	48 8b d0	 mov	 rdx, rax
  0015f	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00167	e8 00 00 00 00	 call	 ?Allocate@?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA_N_K@Z ; ATL::CHeapPtr<wchar_t,ATL::CCRTAllocator>::Allocate
  0016c	0f b6 c0	 movzx	 eax, al
  0016f	85 c0		 test	 eax, eax
  00171	75 12		 jne	 SHORT $LN8@TraceV

; 177  : 		{
; 178  : 			return;

  00173	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  0017b	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  00180	e9 0b 01 00 00	 jmp	 $LN1@TraceV
$LN8@TraceV:

; 179  : 		}
; 180  : 
; 181  : 		wszBuf[0] = '\0';

  00185	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  0018d	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  00192	b9 02 00 00 00	 mov	 ecx, 2
  00197	48 6b c9 00	 imul	 rcx, rcx, 0
  0019b	33 d2		 xor	 edx, edx
  0019d	66 89 14 08	 mov	 WORD PTR [rax+rcx], dx

; 182  : 
; 183  : 		if (swprintf_s(wszBuf, chCount, L"%ls%ls", wszCategory, pwszMessage) == -1)

  001a1	48 63 84 24 50
	08 00 00	 movsxd	 rax, DWORD PTR chCount$[rsp]
  001a9	48 89 84 24 b0
	0a 00 00	 mov	 QWORD PTR tv145[rsp], rax
  001b1	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  001b9	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  001be	48 8b 8c 24 f0
	0a 00 00	 mov	 rcx, QWORD PTR pwszMessage$[rsp]
  001c6	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  001cb	4c 8d 4c 24 40	 lea	 r9, QWORD PTR wszCategory$[rsp]
  001d0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1O@OAIPCDPO@?$AA?$CF?$AAl?$AAs?$AA?$CF?$AAl?$AAs@
  001d7	48 8b 8c 24 b0
	0a 00 00	 mov	 rcx, QWORD PTR tv145[rsp]
  001df	48 8b d1	 mov	 rdx, rcx
  001e2	48 8b c8	 mov	 rcx, rax
  001e5	e8 00 00 00 00	 call	 swprintf_s
  001ea	83 f8 ff	 cmp	 eax, -1
  001ed	75 12		 jne	 SHORT $LN9@TraceV

; 184  : 		{
; 185  : 			return;

  001ef	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  001f7	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  001fc	e9 8f 00 00 00	 jmp	 $LN1@TraceV
$LN9@TraceV:

; 186  : 		}
; 187  : 
; 188  : 		wchar_t fileName[_MAX_PATH] = {'\0'};	

  00201	48 8d 84 24 90
	08 00 00	 lea	 rax, QWORD PTR fileName$[rsp]
  00209	48 8b f8	 mov	 rdi, rax
  0020c	33 c0		 xor	 eax, eax
  0020e	b9 08 02 00 00	 mov	 ecx, 520		; 00000208H
  00213	f3 aa		 rep stosb

; 189  : #if _MSC_VER < 1900
; 190  : 		if (swprintf_s(fileName, _MAX_PATH, L"%S", pszFileName) == -1)
; 191  : #else
; 192  : 		if (swprintf_s(fileName, _MAX_PATH, L"%hs", pszFileName) == -1)

  00215	4c 8b 8c 24 d0
	0a 00 00	 mov	 r9, QWORD PTR pszFileName$[rsp]
  0021d	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
  00224	ba 04 01 00 00	 mov	 edx, 260		; 00000104H
  00229	48 8d 8c 24 90
	08 00 00	 lea	 rcx, QWORD PTR fileName$[rsp]
  00231	e8 00 00 00 00	 call	 swprintf_s
  00236	83 f8 ff	 cmp	 eax, -1
  00239	75 0f		 jne	 SHORT $LN10@TraceV

; 193  : #endif
; 194  : 		{
; 195  : 			return;

  0023b	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00243	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
  00248	eb 46		 jmp	 SHORT $LN1@TraceV
$LN10@TraceV:

; 196  : 		}
; 197  : 
; 198  : 		_CrtDbgReportW(_CRT_WARN, fileName, nLine, nullptr, L"%ls", static_cast<const wchar_t*>(wszBuf));

  0024a	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  00252	e8 00 00 00 00	 call	 ??B?$CHeapPtrBase@_WVCCRTAllocator@ATL@@@ATL@@QEBAPEA_WXZ ; ATL::CHeapPtrBase<wchar_t,ATL::CCRTAllocator>::operator wchar_t *
  00257	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0025c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  00263	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00268	45 33 c9	 xor	 r9d, r9d
  0026b	44 8b 84 24 d8
	0a 00 00	 mov	 r8d, DWORD PTR nLine$[rsp]
  00273	48 8d 94 24 90
	08 00 00	 lea	 rdx, QWORD PTR fileName$[rsp]
  0027b	33 c9		 xor	 ecx, ecx
  0027d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReportW

; 199  : 	}

  00283	48 8d 8c 24 68
	08 00 00	 lea	 rcx, QWORD PTR wszBuf$[rsp]
  0028b	e8 00 00 00 00	 call	 ??1?$CHeapPtr@_WVCCRTAllocator@ATL@@@ATL@@QEAA@XZ
$LN1@TraceV:
  00290	48 8b cc	 mov	 rcx, rsp
  00293	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z$rtcFrameData
  0029a	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0029f	48 8b 8c 24 b8
	0a 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  002a7	48 33 cc	 xor	 rcx, rsp
  002aa	e8 00 00 00 00	 call	 __security_check_cookie
  002af	48 81 c4 c0 0a
	00 00		 add	 rsp, 2752		; 00000ac0H
  002b6	5f		 pop	 rdi
  002b7	c3		 ret	 0
?TraceV@CTrace@ATL@@CAXPEBDHIIPEB_W@Z ENDP		; ATL::CTrace::TraceV
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z
_TEXT	SEGMENT
i$1 = 32
nCategory$ = 64
?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z PROC		; ATL::CTrace::GetCategoryName, COMDAT

; 132  : 	{

$LN7:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	57		 push	 rdi
  00005	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00009	48 8b fc	 mov	 rdi, rsp
  0000c	b9 0c 00 00 00	 mov	 ecx, 12
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	8b 4c 24 40	 mov	 ecx, DWORD PTR [rsp+64]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 133  : 		for(unsigned int i = 0; i < m_nLastCategory; i++) 

  00028	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR i$1[rsp], 0
  00030	eb 0a		 jmp	 SHORT $LN4@GetCategor
$LN2@GetCategor:
  00032	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  00036	ff c0		 inc	 eax
  00038	89 44 24 20	 mov	 DWORD PTR i$1[rsp], eax
$LN4@GetCategor:
  0003c	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  00042	39 44 24 20	 cmp	 DWORD PTR i$1[rsp], eax
  00046	73 36		 jae	 SHORT $LN3@GetCategor

; 134  : 		{
; 135  : 			if (m_nMap[i].nCategory == nCategory)

  00048	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  0004c	48 69 c0 04 01
	00 00		 imul	 rax, rax, 260		; 00000104H
  00053	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A ; ATL::CTrace::m_nMap
  0005a	8b 54 24 40	 mov	 edx, DWORD PTR nCategory$[rsp]
  0005e	39 14 01	 cmp	 DWORD PTR [rcx+rax], edx
  00061	75 19		 jne	 SHORT $LN5@GetCategor

; 136  : 			{
; 137  : 				return m_nMap[i].categryName;

  00063	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  00067	48 69 c0 04 01
	00 00		 imul	 rax, rax, 260		; 00000104H
  0006e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A ; ATL::CTrace::m_nMap
  00075	48 8d 44 01 04	 lea	 rax, QWORD PTR [rcx+rax+4]
  0007a	eb 04		 jmp	 SHORT $LN1@GetCategor
$LN5@GetCategor:

; 138  : 			}
; 139  : 		}

  0007c	eb b4		 jmp	 SHORT $LN2@GetCategor
$LN3@GetCategor:

; 140  : 
; 141  : 		return nullptr;

  0007e	33 c0		 xor	 eax, eax
$LN1@GetCategor:

; 142  : 	}

  00080	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00084	5f		 pop	 rdi
  00085	c3		 ret	 0
?GetCategoryName@CTrace@ATL@@CAPEA_WI@Z ENDP		; ATL::CTrace::GetCategoryName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceISAPI@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceISAPI@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceISAPI'', COMDAT

; 119  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceISAPI> atlTraceISAPI(_T("atlTraceISAPI"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG132484
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceISAPI@ATL@@3V?$CTraceCategoryEx@$0EAAAAA@$0A@@1@A ; ATL::atlTraceISAPI
  0002f	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??__EatlTraceISAPI@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceISAPI''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0002f	ba 00 00 40 00	 mov	 edx, 4194304		; 00400000H
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  00039	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0?$CTraceCategoryEx@$0EAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<4194304,0>::CTraceCategoryEx<4194304,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceSync@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSync@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSync'', COMDAT

; 118  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSync> atlTraceSync(_T("atlTraceSync"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG132435
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceSync@ATL@@3V?$CTraceCategoryEx@$0CAAAAA@$0A@@1@A ; ATL::atlTraceSync
  0002f	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??__EatlTraceSync@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSync''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0002f	ba 00 00 20 00	 mov	 edx, 2097152		; 00200000H
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  00039	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0?$CTraceCategoryEx@$0CAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<2097152,0>::CTraceCategoryEx<2097152,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceSecurity@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSecurity@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSecurity'', COMDAT

; 117  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSecurity> atlTraceSecurity(_T("atlTraceSecurity"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG132386
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceSecurity@ATL@@3V?$CTraceCategoryEx@$0BAAAAA@$0A@@1@A ; ATL::atlTraceSecurity
  0002f	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??__EatlTraceSecurity@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSecurity''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0002f	ba 00 00 10 00	 mov	 edx, 1048576		; 00100000H
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  00039	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0?$CTraceCategoryEx@$0BAAAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<1048576,0>::CTraceCategoryEx<1048576,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceUtil@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceUtil@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceUtil'', COMDAT

; 116  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceUtil> atlTraceUtil(_T("atlTraceUtil"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG132337
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceUtil@ATL@@3V?$CTraceCategoryEx@$0IAAAA@$0A@@1@A ; ATL::atlTraceUtil
  0002f	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??__EatlTraceUtil@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceUtil''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceMap@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceMap@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceMap'', COMDAT

; 115  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceMap> atlTraceMap(_T("atlTraceMap"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG132332
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceMap@ATL@@3V?$CTraceCategoryEx@$0EAAAA@$0A@@1@A ; ATL::atlTraceMap
  0002f	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??__EatlTraceMap@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceMap''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0002f	ba 00 00 04 00	 mov	 edx, 262144		; 00040000H
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  00039	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0?$CTraceCategoryEx@$0EAAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<262144,0>::CTraceCategoryEx<262144,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceString@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceString@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceString'', COMDAT

; 114  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceString> atlTraceString(_T("atlTraceString"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG132283
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
  0002f	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??__EatlTraceString@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceString''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0002f	ba 00 00 02 00	 mov	 edx, 131072		; 00020000H
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  00039	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceStencil@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceStencil@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceStencil'', COMDAT

; 113  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceStencil> atlTraceStencil(_T("atlTraceStencil"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG132234
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceStencil@ATL@@3V?$CTraceCategoryEx@$0BAAAA@$0A@@1@A ; ATL::atlTraceStencil
  0002f	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??__EatlTraceStencil@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceStencil''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0002f	ba 00 00 01 00	 mov	 edx, 65536		; 00010000H
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  00039	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0?$CTraceCategoryEx@$0BAAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<65536,0>::CTraceCategoryEx<65536,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceCache@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceCache@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceCache'', COMDAT

; 112  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceCache> atlTraceCache(_T("atlTraceCache"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG132185
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceCache@ATL@@3V?$CTraceCategoryEx@$0IAAA@$0A@@1@A ; ATL::atlTraceCache
  0002f	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??__EatlTraceCache@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceCache''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0002f	ba 00 80 00 00	 mov	 edx, 32768		; 00008000H
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  00039	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0?$CTraceCategoryEx@$0IAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<32768,0>::CTraceCategoryEx<32768,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceTime@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceTime@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceTime'', COMDAT

; 111  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceTime> atlTraceTime(_T("atlTraceTime"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG132136
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceTime@ATL@@3V?$CTraceCategoryEx@$0EAAA@$0A@@1@A ; ATL::atlTraceTime
  0002f	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??__EatlTraceTime@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceTime''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0002f	ba 00 40 00 00	 mov	 edx, 16384		; 00004000H
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  00039	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0?$CTraceCategoryEx@$0EAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<16384,0>::CTraceCategoryEx<16384,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceException@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceException@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceException'', COMDAT

; 110  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceException> atlTraceException(_T("atlTraceException"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG132087
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
  0002f	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??__EatlTraceException@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceException''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0002f	ba 00 20 00 00	 mov	 edx, 8192		; 00002000H
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  00039	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceAllocation@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceAllocation@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceAllocation'', COMDAT

; 109  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceAllocation> atlTraceAllocation(_T("atlTraceAllocation"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG132038
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceAllocation@ATL@@3V?$CTraceCategoryEx@$0BAAA@$0A@@1@A ; ATL::atlTraceAllocation
  0002f	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??__EatlTraceAllocation@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceAllocation''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0002f	ba 00 10 00 00	 mov	 edx, 4096		; 00001000H
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  00039	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0?$CTraceCategoryEx@$0BAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<4096,0>::CTraceCategoryEx<4096,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceNotImpl@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceNotImpl@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceNotImpl'', COMDAT

; 108  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceNotImpl> atlTraceNotImpl(_T("atlTraceNotImpl"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG131989
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceNotImpl@ATL@@3V?$CTraceCategoryEx@$0IAA@$0A@@1@A ; ATL::atlTraceNotImpl
  0002f	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??__EatlTraceNotImpl@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceNotImpl''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0002f	ba 00 08 00 00	 mov	 edx, 2048		; 00000800H
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  00039	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0?$CTraceCategoryEx@$0IAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<2048,0>::CTraceCategoryEx<2048,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceSnapin@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceSnapin@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceSnapin'', COMDAT

; 107  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceSnapin> atlTraceSnapin(_T("atlTraceSnapin"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG131940
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceSnapin@ATL@@3V?$CTraceCategoryEx@$0EAA@$0A@@1@A ; ATL::atlTraceSnapin
  0002f	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??__EatlTraceSnapin@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceSnapin''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0002f	ba 00 04 00 00	 mov	 edx, 1024		; 00000400H
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  00039	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0?$CTraceCategoryEx@$0EAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<1024,0>::CTraceCategoryEx<1024,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceDBProvider@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceDBProvider@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceDBProvider'', COMDAT

; 106  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceDBProvider> atlTraceDBProvider(_T("atlTraceDBProvider"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG131891
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceDBProvider@ATL@@3V?$CTraceCategoryEx@$0CAA@$0A@@1@A ; ATL::atlTraceDBProvider
  0002f	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??__EatlTraceDBProvider@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceDBProvider''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0002f	ba 00 02 00 00	 mov	 edx, 512		; 00000200H
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  00039	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0?$CTraceCategoryEx@$0CAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<512,0>::CTraceCategoryEx<512,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceDBClient@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceDBClient@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceDBClient'', COMDAT

; 105  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceDBClient> atlTraceDBClient(_T("atlTraceDBClient"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG131842
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceDBClient@ATL@@3V?$CTraceCategoryEx@$0BAA@$0A@@1@A ; ATL::atlTraceDBClient
  0002f	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??__EatlTraceDBClient@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceDBClient''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0002f	ba 00 01 00 00	 mov	 edx, 256		; 00000100H
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  00039	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0?$CTraceCategoryEx@$0BAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<256,0>::CTraceCategoryEx<256,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceHosting@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceHosting@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceHosting'', COMDAT

; 104  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceHosting> atlTraceHosting(_T("atlTraceHosting"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG131793
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceHosting@ATL@@3V?$CTraceCategoryEx@$0IA@$0A@@1@A ; ATL::atlTraceHosting
  0002f	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??__EatlTraceHosting@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceHosting''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0002f	ba 80 00 00 00	 mov	 edx, 128		; 00000080H
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  00039	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0?$CTraceCategoryEx@$0IA@$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<128,0>::CTraceCategoryEx<128,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceControls@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceControls@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceControls'', COMDAT

; 103  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceControls> atlTraceControls(_T("atlTraceControls"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG131744
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceControls@ATL@@3V?$CTraceCategoryEx@$0EA@$0A@@1@A ; ATL::atlTraceControls
  0002f	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??__EatlTraceControls@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceControls''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0002f	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  00039	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0?$CTraceCategoryEx@$0EA@$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<64,0>::CTraceCategoryEx<64,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceWindowing@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceWindowing@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceWindowing'', COMDAT

; 102  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceWindowing> atlTraceWindowing(_T("atlTraceWindowing"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG131695
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceWindowing@ATL@@3V?$CTraceCategoryEx@$0CA@$0A@@1@A ; ATL::atlTraceWindowing
  0002f	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??__EatlTraceWindowing@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceWindowing''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ
_TEXT	SEGMENT
this$ = 48
??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ PROC	; ATL::CTraceCategoryEx<32,0>::operator unsigned int, COMDAT

; 79   : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 80   : #ifdef _DEBUG
; 81   : 		return traceCategory;

  0002a	b8 20 00 00 00	 mov	 eax, 32			; 00000020H

; 82   : #else
; 83   : 		return 0;
; 84   : #endif
; 85   : 	}

  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
??B?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAAIXZ ENDP	; ATL::CTraceCategoryEx<32,0>::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0002f	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  00039	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0?$CTraceCategoryEx@$0CA@$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<32,0>::CTraceCategoryEx<32,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceRefcount@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceRefcount@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceRefcount'', COMDAT

; 101  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceRefcount> atlTraceRefcount(_T("atlTraceRefcount"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG131646
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceRefcount@ATL@@3V?$CTraceCategoryEx@$0BA@$0A@@1@A ; ATL::atlTraceRefcount
  0002f	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??__EatlTraceRefcount@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceRefcount''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0002f	ba 10 00 00 00	 mov	 edx, 16
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  00039	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0?$CTraceCategoryEx@$0BA@$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<16,0>::CTraceCategoryEx<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceRegistrar@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceRegistrar@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceRegistrar'', COMDAT

; 100  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceRegistrar> atlTraceRegistrar(_T("atlTraceRegistrar"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG131597
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceRegistrar@ATL@@3V?$CTraceCategoryEx@$07$0A@@1@A ; ATL::atlTraceRegistrar
  0002f	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??__EatlTraceRegistrar@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceRegistrar''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0002f	ba 08 00 00 00	 mov	 edx, 8
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  00039	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0?$CTraceCategoryEx@$07$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<8,0>::CTraceCategoryEx<8,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceQI@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceQI@ATL@@YAXXZ PROC				; ATL::`dynamic initializer for 'atlTraceQI'', COMDAT

; 99   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceQI> atlTraceQI(_T("atlTraceQI"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG131548
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceQI@ATL@@3V?$CTraceCategoryEx@$03$0A@@1@A ; ATL::atlTraceQI
  0002f	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??__EatlTraceQI@ATL@@YAXXZ ENDP				; ATL::`dynamic initializer for 'atlTraceQI''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0002f	ba 04 00 00 00	 mov	 edx, 4
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  00039	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0?$CTraceCategoryEx@$03$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<4,0>::CTraceCategoryEx<4,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceCOM@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceCOM@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceCOM'', COMDAT

; 98   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceCom> atlTraceCOM(_T("atlTraceCOM"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG131499
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceCOM@ATL@@3V?$CTraceCategoryEx@$01$0A@@1@A ; ATL::atlTraceCOM
  0002f	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??__EatlTraceCOM@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceCOM''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ
_TEXT	SEGMENT
this$ = 48
??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ PROC		; ATL::CTraceCategoryEx<2,0>::operator unsigned int, COMDAT

; 79   : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 80   : #ifdef _DEBUG
; 81   : 		return traceCategory;

  0002a	b8 02 00 00 00	 mov	 eax, 2

; 82   : #else
; 83   : 		return 0;
; 84   : #endif
; 85   : 	}

  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
??B?$CTraceCategoryEx@$01$0A@@ATL@@QEAAIXZ ENDP		; ATL::CTraceCategoryEx<2,0>::operator unsigned int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0002f	ba 02 00 00 00	 mov	 edx, 2
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  00039	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0?$CTraceCategoryEx@$01$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<2,0>::CTraceCategoryEx<2,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceGeneral@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceGeneral@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceGeneral'', COMDAT

; 97   : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceGeneral> atlTraceGeneral(_T("atlTraceGeneral"));

  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG131450
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?atlTraceGeneral@ATL@@3V?$CTraceCategoryEx@$00$0A@@1@A ; ATL::atlTraceGeneral
  0002f	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEB_W@Z ; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??__EatlTraceGeneral@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceGeneral''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEB_W@Z PROC	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0002f	ba 01 00 00 00	 mov	 edx, 1
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  00039	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0?$CTraceCategoryEx@$00$0A@@ATL@@QEAA@PEB_W@Z ENDP	; ATL::CTraceCategoryEx<1,0>::CTraceCategoryEx<1,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
pszCategoryName$ = 56
??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEB_W@Z PROC ; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>, COMDAT

; 480  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__68B31C3D_atltrace@h
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0002f	ba 00 00 08 00	 mov	 edx, 524288		; 00080000H
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pszCategoryName$[rsp]
  00039	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPEB_WI@Z ; ATL::CTrace::RegisterCategory

; 482  : }

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0?$CTraceCategoryEx@$0IAAAA@$0A@@ATL@@QEAA@PEB_W@Z ENDP ; ATL::CTraceCategoryEx<524288,0>::CTraceCategoryEx<524288,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPEAX@Z
_TEXT	SEGMENT
p$ = 48
?Free@CCRTAllocator@ATL@@SAXPEAX@Z PROC			; ATL::CCRTAllocator::Free, COMDAT

; 266  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D242CB04_atlalloc@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 267  : 		free(p);

  0002a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR p$[rsp]
  0002f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_free

; 268  : 	}

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?Free@CCRTAllocator@ATL@@SAXPEAX@Z ENDP			; ATL::CCRTAllocator::Free
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\atlmfc\include\atlalloc.h
;	COMDAT ?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z
_TEXT	SEGMENT
nBytes$ = 48
?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z PROC		; ATL::CCRTAllocator::Allocate, COMDAT

; 261  : 	{

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D242CB04_atlalloc@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 262  : 		return malloc(nBytes);

  0002a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR nBytes$[rsp]
  0002f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_malloc

; 263  : 	}

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?Allocate@CCRTAllocator@ATL@@SAPEAX_K@Z ENDP		; ATL::CCRTAllocator::Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspColorprimList@@YAXXZ
text$di	SEGMENT
$T1 = 112
$T2 = 168
$T3 = 172
$T4 = 176
$T5 = 180
$T6 = 184
$T7 = 188
$T8 = 192
$T9 = 196
$T10 = 200
$T11 = 204
$T12 = 208
$T13 = 212
$T14 = 216
__$ArrayPad$ = 264
??__ECspColorprimList@@YAXXZ PROC			; `dynamic initializer for 'CspColorprimList'', COMDAT

; 1187 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 08
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0002b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7C62A51E_rgy_util@h
  00032	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1174 : static const auto CspColorprimList = make_array<CspColorprim>(

  00037	c7 84 24 a8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T2[rsp], 13
  00042	c7 84 24 ac 00
	00 00 0c 00 00
	00		 mov	 DWORD PTR $T3[rsp], 12
  0004d	c7 84 24 b0 00
	00 00 0b 00 00
	00		 mov	 DWORD PTR $T4[rsp], 11
  00058	c7 84 24 b4 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T5[rsp], 10
  00063	c7 84 24 b8 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T6[rsp], 9
  0006e	c7 84 24 bc 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T7[rsp], 8
  00079	c7 84 24 c0 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T8[rsp], 7
  00084	c7 84 24 c4 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T9[rsp], 6
  0008f	c7 84 24 c8 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T10[rsp], 5
  0009a	c7 84 24 cc 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T11[rsp], 4
  000a5	c7 84 24 d0 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T12[rsp], 2
  000b0	c7 84 24 d4 00
	00 00 01 00 00
	00		 mov	 DWORD PTR $T13[rsp], 1
  000bb	48 8d 84 24 a8
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000c3	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  000c8	48 8d 84 24 ac
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000d0	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  000d5	48 8d 84 24 b0
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000dd	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  000e2	48 8d 84 24 b4
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000ea	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  000ef	48 8d 84 24 b8
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  000f7	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  000fc	48 8d 84 24 bc
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  00104	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  00109	48 8d 84 24 c0
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  00111	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00116	48 8d 84 24 c4
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  0011e	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00123	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  0012b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00130	4c 8d 8c 24 cc
	00 00 00	 lea	 r9, QWORD PTR $T11[rsp]
  00138	4c 8d 84 24 d0
	00 00 00	 lea	 r8, QWORD PTR $T12[rsp]
  00140	48 8d 94 24 d4
	00 00 00	 lea	 rdx, QWORD PTR $T13[rsp]
  00148	48 8d 8c 24 d8
	00 00 00	 lea	 rcx, QWORD PTR $T14[rsp]
  00150	e8 00 00 00 00	 call	 ??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
  00155	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T1[rsp]
  0015a	48 8b f9	 mov	 rdi, rcx
  0015d	48 8b f0	 mov	 rsi, rax
  00160	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00165	f3 a4		 rep movsb
  00167	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspColorprimList@@3V?$array@W4CspColorprim@@$0M@@std@@B
  0016e	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T1[rsp]
  00173	48 8b f8	 mov	 rdi, rax
  00176	48 8b f1	 mov	 rsi, rcx
  00179	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  0017e	f3 a4		 rep movsb
  00180	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00188	48 33 cc	 xor	 rcx, rsp
  0018b	e8 00 00 00 00	 call	 __security_check_cookie
  00190	48 81 c4 18 01
	00 00		 add	 rsp, 280		; 00000118H
  00197	5f		 pop	 rdi
  00198	5e		 pop	 rsi
  00199	c3		 ret	 0
??__ECspColorprimList@@YAXXZ ENDP			; `dynamic initializer for 'CspColorprimList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z
_TEXT	SEGMENT
$T1 = 32
__$ArrayPad$ = 88
$T2 = 128
<args_0>$ = 136
<args_1>$ = 144
<args_2>$ = 152
<args_3>$ = 160
<args_4>$ = 168
<args_5>$ = 176
<args_6>$ = 184
<args_7>$ = 192
<args_8>$ = 200
<args_9>$ = 208
<args_10>$ = 216
<args_11>$ = 224
??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z PROC ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 68	 sub	 rsp, 104		; 00000068H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 1a 00 00 00	 mov	 ecx, 26
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]
  00031	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00038	48 33 c4	 xor	 rax, rsp
  0003b	48 89 44 24 58	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7C62A51E_rgy_util@h
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0004c	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00054	8b 00		 mov	 eax, DWORD PTR [rax]
  00056	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  0005a	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_1>$[rsp]
  00062	8b 00		 mov	 eax, DWORD PTR [rax]
  00064	89 44 24 24	 mov	 DWORD PTR $T1[rsp+4], eax
  00068	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_2>$[rsp]
  00070	8b 00		 mov	 eax, DWORD PTR [rax]
  00072	89 44 24 28	 mov	 DWORD PTR $T1[rsp+8], eax
  00076	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  0007e	8b 00		 mov	 eax, DWORD PTR [rax]
  00080	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+12], eax
  00084	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  0008c	8b 00		 mov	 eax, DWORD PTR [rax]
  0008e	89 44 24 30	 mov	 DWORD PTR $T1[rsp+16], eax
  00092	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  0009a	8b 00		 mov	 eax, DWORD PTR [rax]
  0009c	89 44 24 34	 mov	 DWORD PTR $T1[rsp+20], eax
  000a0	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  000a8	8b 00		 mov	 eax, DWORD PTR [rax]
  000aa	89 44 24 38	 mov	 DWORD PTR $T1[rsp+24], eax
  000ae	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  000b6	8b 00		 mov	 eax, DWORD PTR [rax]
  000b8	89 44 24 3c	 mov	 DWORD PTR $T1[rsp+28], eax
  000bc	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000c4	8b 00		 mov	 eax, DWORD PTR [rax]
  000c6	89 44 24 40	 mov	 DWORD PTR $T1[rsp+32], eax
  000ca	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000d2	8b 00		 mov	 eax, DWORD PTR [rax]
  000d4	89 44 24 44	 mov	 DWORD PTR $T1[rsp+36], eax
  000d8	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000e0	8b 00		 mov	 eax, DWORD PTR [rax]
  000e2	89 44 24 48	 mov	 DWORD PTR $T1[rsp+40], eax
  000e6	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000ee	8b 00		 mov	 eax, DWORD PTR [rax]
  000f0	89 44 24 4c	 mov	 DWORD PTR $T1[rsp+44], eax
  000f4	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  000f9	48 8b bc 24 80
	00 00 00	 mov	 rdi, QWORD PTR $T2[rsp]
  00101	48 8b f0	 mov	 rsi, rax
  00104	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00109	f3 a4		 rep movsb
  0010b	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  00113	48 8b 4c 24 58	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00118	48 33 cc	 xor	 rcx, rsp
  0011b	e8 00 00 00 00	 call	 __security_check_cookie
  00120	48 83 c4 68	 add	 rsp, 104		; 00000068H
  00124	5f		 pop	 rdi
  00125	5e		 pop	 rsi
  00126	c3		 ret	 0
??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ENDP ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspTransferList@@YAXXZ
text$di	SEGMENT
$T1 = 128
$T2 = 200
$T3 = 204
$T4 = 208
$T5 = 212
$T6 = 216
$T7 = 220
$T8 = 224
$T9 = 228
$T10 = 232
$T11 = 236
$T12 = 240
$T13 = 244
$T14 = 248
$T15 = 252
$T16 = 256
$T17 = 264
__$ArrayPad$ = 328
??__ECspTransferList@@YAXXZ PROC			; `dynamic initializer for 'CspTransferList'', COMDAT

; 1135 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0002b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7C62A51E_rgy_util@h
  00032	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1119 : static const auto CspTransferList = make_array<CspTransfer>(

  00037	c7 84 24 c8 00
	00 00 12 00 00
	00		 mov	 DWORD PTR $T2[rsp], 18
  00042	c7 84 24 cc 00
	00 00 10 00 00
	00		 mov	 DWORD PTR $T3[rsp], 16
  0004d	c7 84 24 d0 00
	00 00 0f 00 00
	00		 mov	 DWORD PTR $T4[rsp], 15
  00058	c7 84 24 d4 00
	00 00 0e 00 00
	00		 mov	 DWORD PTR $T5[rsp], 14
  00063	c7 84 24 d8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T6[rsp], 13
  0006e	c7 84 24 dc 00
	00 00 0b 00 00
	00		 mov	 DWORD PTR $T7[rsp], 11
  00079	c7 84 24 e0 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T8[rsp], 10
  00084	c7 84 24 e4 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T9[rsp], 9
  0008f	c7 84 24 e8 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T10[rsp], 8
  0009a	c7 84 24 ec 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T11[rsp], 7
  000a5	c7 84 24 f0 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T12[rsp], 6
  000b0	c7 84 24 f4 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T13[rsp], 5
  000bb	c7 84 24 f8 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T14[rsp], 4
  000c6	c7 84 24 fc 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T15[rsp], 2
  000d1	c7 84 24 00 01
	00 00 01 00 00
	00		 mov	 DWORD PTR $T16[rsp], 1
  000dc	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000e4	48 89 44 24 78	 mov	 QWORD PTR [rsp+120], rax
  000e9	48 8d 84 24 cc
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000f1	48 89 44 24 70	 mov	 QWORD PTR [rsp+112], rax
  000f6	48 8d 84 24 d0
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000fe	48 89 44 24 68	 mov	 QWORD PTR [rsp+104], rax
  00103	48 8d 84 24 d4
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  0010b	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  00110	48 8d 84 24 d8
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  00118	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  0011d	48 8d 84 24 dc
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  00125	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  0012a	48 8d 84 24 e0
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  00132	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  00137	48 8d 84 24 e4
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  0013f	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  00144	48 8d 84 24 e8
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  0014c	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  00151	48 8d 84 24 ec
	00 00 00	 lea	 rax, QWORD PTR $T11[rsp]
  00159	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0015e	48 8d 84 24 f0
	00 00 00	 lea	 rax, QWORD PTR $T12[rsp]
  00166	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0016b	48 8d 84 24 f4
	00 00 00	 lea	 rax, QWORD PTR $T13[rsp]
  00173	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00178	4c 8d 8c 24 f8
	00 00 00	 lea	 r9, QWORD PTR $T14[rsp]
  00180	4c 8d 84 24 fc
	00 00 00	 lea	 r8, QWORD PTR $T15[rsp]
  00188	48 8d 94 24 00
	01 00 00	 lea	 rdx, QWORD PTR $T16[rsp]
  00190	48 8d 8c 24 08
	01 00 00	 lea	 rcx, QWORD PTR $T17[rsp]
  00198	e8 00 00 00 00	 call	 ??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
  0019d	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  001a5	48 8b f9	 mov	 rdi, rcx
  001a8	48 8b f0	 mov	 rsi, rax
  001ab	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  001b0	f3 a4		 rep movsb
  001b2	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspTransferList@@3V?$array@W4CspTransfer@@$0P@@std@@B
  001b9	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  001c1	48 8b f8	 mov	 rdi, rax
  001c4	48 8b f1	 mov	 rsi, rcx
  001c7	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  001cc	f3 a4		 rep movsb
  001ce	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001d6	48 33 cc	 xor	 rcx, rsp
  001d9	e8 00 00 00 00	 call	 __security_check_cookie
  001de	48 81 c4 58 01
	00 00		 add	 rsp, 344		; 00000158H
  001e5	5f		 pop	 rdi
  001e6	5e		 pop	 rsi
  001e7	c3		 ret	 0
??__ECspTransferList@@YAXXZ ENDP			; `dynamic initializer for 'CspTransferList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z
_TEXT	SEGMENT
$T1 = 32
__$ArrayPad$ = 104
$T2 = 144
<args_0>$ = 152
<args_1>$ = 160
<args_2>$ = 168
<args_3>$ = 176
<args_4>$ = 184
<args_5>$ = 192
<args_6>$ = 200
<args_7>$ = 208
<args_8>$ = 216
<args_9>$ = 224
<args_10>$ = 232
<args_11>$ = 240
<args_12>$ = 248
<args_13>$ = 256
<args_14>$ = 264
??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z PROC ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 78	 sub	 rsp, 120		; 00000078H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 1e 00 00 00	 mov	 ecx, 30
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  00031	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00038	48 33 c4	 xor	 rax, rsp
  0003b	48 89 44 24 68	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7C62A51E_rgy_util@h
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0004c	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00054	8b 00		 mov	 eax, DWORD PTR [rax]
  00056	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  0005a	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_1>$[rsp]
  00062	8b 00		 mov	 eax, DWORD PTR [rax]
  00064	89 44 24 24	 mov	 DWORD PTR $T1[rsp+4], eax
  00068	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_2>$[rsp]
  00070	8b 00		 mov	 eax, DWORD PTR [rax]
  00072	89 44 24 28	 mov	 DWORD PTR $T1[rsp+8], eax
  00076	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  0007e	8b 00		 mov	 eax, DWORD PTR [rax]
  00080	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+12], eax
  00084	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  0008c	8b 00		 mov	 eax, DWORD PTR [rax]
  0008e	89 44 24 30	 mov	 DWORD PTR $T1[rsp+16], eax
  00092	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  0009a	8b 00		 mov	 eax, DWORD PTR [rax]
  0009c	89 44 24 34	 mov	 DWORD PTR $T1[rsp+20], eax
  000a0	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  000a8	8b 00		 mov	 eax, DWORD PTR [rax]
  000aa	89 44 24 38	 mov	 DWORD PTR $T1[rsp+24], eax
  000ae	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  000b6	8b 00		 mov	 eax, DWORD PTR [rax]
  000b8	89 44 24 3c	 mov	 DWORD PTR $T1[rsp+28], eax
  000bc	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000c4	8b 00		 mov	 eax, DWORD PTR [rax]
  000c6	89 44 24 40	 mov	 DWORD PTR $T1[rsp+32], eax
  000ca	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000d2	8b 00		 mov	 eax, DWORD PTR [rax]
  000d4	89 44 24 44	 mov	 DWORD PTR $T1[rsp+36], eax
  000d8	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000e0	8b 00		 mov	 eax, DWORD PTR [rax]
  000e2	89 44 24 48	 mov	 DWORD PTR $T1[rsp+40], eax
  000e6	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000ee	8b 00		 mov	 eax, DWORD PTR [rax]
  000f0	89 44 24 4c	 mov	 DWORD PTR $T1[rsp+44], eax
  000f4	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR <args_12>$[rsp]
  000fc	8b 00		 mov	 eax, DWORD PTR [rax]
  000fe	89 44 24 50	 mov	 DWORD PTR $T1[rsp+48], eax
  00102	48 8b 84 24 00
	01 00 00	 mov	 rax, QWORD PTR <args_13>$[rsp]
  0010a	8b 00		 mov	 eax, DWORD PTR [rax]
  0010c	89 44 24 54	 mov	 DWORD PTR $T1[rsp+52], eax
  00110	48 8b 84 24 08
	01 00 00	 mov	 rax, QWORD PTR <args_14>$[rsp]
  00118	8b 00		 mov	 eax, DWORD PTR [rax]
  0011a	89 44 24 58	 mov	 DWORD PTR $T1[rsp+56], eax
  0011e	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00123	48 8b bc 24 90
	00 00 00	 mov	 rdi, QWORD PTR $T2[rsp]
  0012b	48 8b f0	 mov	 rsi, rax
  0012e	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00133	f3 a4		 rep movsb
  00135	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  0013d	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00142	48 33 cc	 xor	 rcx, rsp
  00145	e8 00 00 00 00	 call	 __security_check_cookie
  0014a	48 83 c4 78	 add	 rsp, 120		; 00000078H
  0014e	5f		 pop	 rdi
  0014f	5e		 pop	 rsi
  00150	c3		 ret	 0
??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ENDP ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspMatrixList@@YAXXZ
text$di	SEGMENT
$T1 = 128
$T2 = 192
$T3 = 196
$T4 = 200
$T5 = 204
$T6 = 208
$T7 = 212
$T8 = 216
$T9 = 220
$T10 = 224
$T11 = 228
$T12 = 232
$T13 = 236
$T14 = 240
$T15 = 244
$T16 = 248
__$ArrayPad$ = 304
??__ECspMatrixList@@YAXXZ PROC				; `dynamic initializer for 'CspMatrixList'', COMDAT

; 1080 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 30
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0002b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7C62A51E_rgy_util@h
  00032	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1065 : static const auto CspMatrixList = make_array<CspMatrix>(

  00037	c7 84 24 c0 00
	00 00 0f 00 00
	00		 mov	 DWORD PTR $T2[rsp], 15
  00042	c7 84 24 c4 00
	00 00 0e 00 00
	00		 mov	 DWORD PTR $T3[rsp], 14
  0004d	c7 84 24 c8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T4[rsp], 13
  00058	c7 84 24 cc 00
	00 00 0c 00 00
	00		 mov	 DWORD PTR $T5[rsp], 12
  00063	c7 84 24 d0 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T6[rsp], 10
  0006e	c7 84 24 d4 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T7[rsp], 9
  00079	c7 84 24 d8 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T8[rsp], 8
  00084	c7 84 24 dc 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T9[rsp], 7
  0008f	c7 84 24 e0 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T10[rsp], 6
  0009a	c7 84 24 e4 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T11[rsp], 5
  000a5	c7 84 24 e8 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T12[rsp], 4
  000b0	c7 84 24 ec 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T13[rsp], 2
  000bb	c7 84 24 f0 00
	00 00 01 00 00
	00		 mov	 DWORD PTR $T14[rsp], 1
  000c6	c7 84 24 f4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T15[rsp], 0
  000d1	48 8d 84 24 c0
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000d9	48 89 44 24 70	 mov	 QWORD PTR [rsp+112], rax
  000de	48 8d 84 24 c4
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000e6	48 89 44 24 68	 mov	 QWORD PTR [rsp+104], rax
  000eb	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000f3	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  000f8	48 8d 84 24 cc
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  00100	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  00105	48 8d 84 24 d0
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  0010d	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  00112	48 8d 84 24 d4
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  0011a	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  0011f	48 8d 84 24 d8
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  00127	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  0012c	48 8d 84 24 dc
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00134	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  00139	48 8d 84 24 e0
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  00141	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00146	48 8d 84 24 e4
	00 00 00	 lea	 rax, QWORD PTR $T11[rsp]
  0014e	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00153	48 8d 84 24 e8
	00 00 00	 lea	 rax, QWORD PTR $T12[rsp]
  0015b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00160	4c 8d 8c 24 ec
	00 00 00	 lea	 r9, QWORD PTR $T13[rsp]
  00168	4c 8d 84 24 f0
	00 00 00	 lea	 r8, QWORD PTR $T14[rsp]
  00170	48 8d 94 24 f4
	00 00 00	 lea	 rdx, QWORD PTR $T15[rsp]
  00178	48 8d 8c 24 f8
	00 00 00	 lea	 rcx, QWORD PTR $T16[rsp]
  00180	e8 00 00 00 00	 call	 ??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
  00185	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  0018d	48 8b f9	 mov	 rdi, rcx
  00190	48 8b f0	 mov	 rsi, rax
  00193	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  00198	f3 a4		 rep movsb
  0019a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspMatrixList@@3V?$array@W4CspMatrix@@$0O@@std@@B
  001a1	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  001a9	48 8b f8	 mov	 rdi, rax
  001ac	48 8b f1	 mov	 rsi, rcx
  001af	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  001b4	f3 a4		 rep movsb
  001b6	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001be	48 33 cc	 xor	 rcx, rsp
  001c1	e8 00 00 00 00	 call	 __security_check_cookie
  001c6	48 81 c4 48 01
	00 00		 add	 rsp, 328		; 00000148H
  001cd	5f		 pop	 rdi
  001ce	5e		 pop	 rsi
  001cf	c3		 ret	 0
??__ECspMatrixList@@YAXXZ ENDP				; `dynamic initializer for 'CspMatrixList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z
_TEXT	SEGMENT
$T1 = 32
__$ArrayPad$ = 96
$T2 = 144
<args_0>$ = 152
<args_1>$ = 160
<args_2>$ = 168
<args_3>$ = 176
<args_4>$ = 184
<args_5>$ = 192
<args_6>$ = 200
<args_7>$ = 208
<args_8>$ = 216
<args_9>$ = 224
<args_10>$ = 232
<args_11>$ = 240
<args_12>$ = 248
<args_13>$ = 256
??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z PROC ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 78	 sub	 rsp, 120		; 00000078H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 1e 00 00 00	 mov	 ecx, 30
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  00031	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00038	48 33 c4	 xor	 rax, rsp
  0003b	48 89 44 24 60	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7C62A51E_rgy_util@h
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0004c	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00054	8b 00		 mov	 eax, DWORD PTR [rax]
  00056	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  0005a	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_1>$[rsp]
  00062	8b 00		 mov	 eax, DWORD PTR [rax]
  00064	89 44 24 24	 mov	 DWORD PTR $T1[rsp+4], eax
  00068	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_2>$[rsp]
  00070	8b 00		 mov	 eax, DWORD PTR [rax]
  00072	89 44 24 28	 mov	 DWORD PTR $T1[rsp+8], eax
  00076	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  0007e	8b 00		 mov	 eax, DWORD PTR [rax]
  00080	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+12], eax
  00084	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  0008c	8b 00		 mov	 eax, DWORD PTR [rax]
  0008e	89 44 24 30	 mov	 DWORD PTR $T1[rsp+16], eax
  00092	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  0009a	8b 00		 mov	 eax, DWORD PTR [rax]
  0009c	89 44 24 34	 mov	 DWORD PTR $T1[rsp+20], eax
  000a0	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  000a8	8b 00		 mov	 eax, DWORD PTR [rax]
  000aa	89 44 24 38	 mov	 DWORD PTR $T1[rsp+24], eax
  000ae	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  000b6	8b 00		 mov	 eax, DWORD PTR [rax]
  000b8	89 44 24 3c	 mov	 DWORD PTR $T1[rsp+28], eax
  000bc	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000c4	8b 00		 mov	 eax, DWORD PTR [rax]
  000c6	89 44 24 40	 mov	 DWORD PTR $T1[rsp+32], eax
  000ca	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000d2	8b 00		 mov	 eax, DWORD PTR [rax]
  000d4	89 44 24 44	 mov	 DWORD PTR $T1[rsp+36], eax
  000d8	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000e0	8b 00		 mov	 eax, DWORD PTR [rax]
  000e2	89 44 24 48	 mov	 DWORD PTR $T1[rsp+40], eax
  000e6	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000ee	8b 00		 mov	 eax, DWORD PTR [rax]
  000f0	89 44 24 4c	 mov	 DWORD PTR $T1[rsp+44], eax
  000f4	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR <args_12>$[rsp]
  000fc	8b 00		 mov	 eax, DWORD PTR [rax]
  000fe	89 44 24 50	 mov	 DWORD PTR $T1[rsp+48], eax
  00102	48 8b 84 24 00
	01 00 00	 mov	 rax, QWORD PTR <args_13>$[rsp]
  0010a	8b 00		 mov	 eax, DWORD PTR [rax]
  0010c	89 44 24 54	 mov	 DWORD PTR $T1[rsp+52], eax
  00110	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00115	48 8b bc 24 90
	00 00 00	 mov	 rdi, QWORD PTR $T2[rsp]
  0011d	48 8b f0	 mov	 rsi, rax
  00120	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  00125	f3 a4		 rep movsb
  00127	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  0012f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00134	48 33 cc	 xor	 rcx, rsp
  00137	e8 00 00 00 00	 call	 __security_check_cookie
  0013c	48 83 c4 78	 add	 rsp, 120		; 00000078H
  00140	5f		 pop	 rdi
  00141	5e		 pop	 rsi
  00142	c3		 ret	 0
??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ENDP ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\shared\winerror.h
;	COMDAT HRESULT_FROM_WIN32
_TEXT	SEGMENT
tv68 = 32
x$ = 64
HRESULT_FROM_WIN32 PROC					; COMDAT

; 28857: FORCEINLINE _Translates_Win32_to_HRESULT_(x) HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

$LN5:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	57		 push	 rdi
  00005	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00009	48 8b fc	 mov	 rdi, rsp
  0000c	b9 0c 00 00 00	 mov	 ecx, 12
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	8b 4c 24 40	 mov	 ecx, DWORD PTR [rsp+64]
  0001c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__76CD430D_winerror@h
  00023	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00028	83 7c 24 40 00	 cmp	 DWORD PTR x$[rsp], 0
  0002d	7f 0a		 jg	 SHORT $LN3@HRESULT_FR
  0002f	8b 44 24 40	 mov	 eax, DWORD PTR x$[rsp]
  00033	89 44 24 20	 mov	 DWORD PTR tv68[rsp], eax
  00037	eb 16		 jmp	 SHORT $LN4@HRESULT_FR
$LN3@HRESULT_FR:
  00039	8b 44 24 40	 mov	 eax, DWORD PTR x$[rsp]
  0003d	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00042	0d 00 00 07 00	 or	 eax, 458752		; 00070000H
  00047	0f ba e8 1f	 bts	 eax, 31
  0004b	89 44 24 20	 mov	 DWORD PTR tv68[rsp], eax
$LN4@HRESULT_FR:
  0004f	8b 44 24 20	 mov	 eax, DWORD PTR tv68[rsp]
  00053	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
HRESULT_FROM_WIN32 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_wstdio.h
;	COMDAT swprintf_s
_TEXT	SEGMENT
_Result$ = 48
_ArgList$ = 72
_Buffer$ = 112
_BufferCount$ = 120
_Format$ = 128
swprintf_s PROC						; COMDAT

; 1538 :         {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]
  0002d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__101834BA_corecrt_wstdio@h
  00034	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1539 :             int _Result;
; 1540 :             va_list _ArgList;
; 1541 :             __crt_va_start(_ArgList, _Format);

  00039	48 8d 84 24 88
	00 00 00	 lea	 rax, QWORD PTR _Format$[rsp+8]
  00041	48 89 44 24 48	 mov	 QWORD PTR _ArgList$[rsp], rax

; 1542 :             _Result = _vswprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  00046	48 8b 44 24 48	 mov	 rax, QWORD PTR _ArgList$[rsp]
  0004b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00050	45 33 c9	 xor	 r9d, r9d
  00053	4c 8b 84 24 80
	00 00 00	 mov	 r8, QWORD PTR _Format$[rsp]
  0005b	48 8b 54 24 78	 mov	 rdx, QWORD PTR _BufferCount$[rsp]
  00060	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Buffer$[rsp]
  00065	e8 00 00 00 00	 call	 _vswprintf_s_l
  0006a	89 44 24 30	 mov	 DWORD PTR _Result$[rsp], eax

; 1543 :             __crt_va_end(_ArgList);

  0006e	48 c7 44 24 48
	00 00 00 00	 mov	 QWORD PTR _ArgList$[rsp], 0

; 1544 :             return _Result;

  00077	8b 44 24 30	 mov	 eax, DWORD PTR _Result$[rsp]

; 1545 :         }

  0007b	8b f8		 mov	 edi, eax
  0007d	48 8b cc	 mov	 rcx, rsp
  00080	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:swprintf_s$rtcFrameData
  00087	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0008c	8b c7		 mov	 eax, edi
  0008e	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00092	5f		 pop	 rdi
  00093	c3		 ret	 0
swprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_wstdio.h
;	COMDAT _vswprintf_s_l
_TEXT	SEGMENT
_Result$ = 48
tv73 = 52
_Buffer$ = 80
_BufferCount$ = 88
_Format$ = 96
_Locale$ = 104
_ArgList$ = 112
_vswprintf_s_l PROC					; COMDAT

; 1264 :     {

$LN5:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
  0002d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__101834BA_corecrt_wstdio@h
  00034	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1265 :         int const _Result = __stdio_common_vswprintf_s(

  00039	e8 00 00 00 00	 call	 __local_stdio_printf_options
  0003e	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  00043	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00048	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Locale$[rsp]
  0004d	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00052	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Format$[rsp]
  00057	4c 8b 44 24 58	 mov	 r8, QWORD PTR _BufferCount$[rsp]
  0005c	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Buffer$[rsp]
  00061	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00064	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___stdio_common_vswprintf_s
  0006a	89 44 24 30	 mov	 DWORD PTR _Result$[rsp], eax

; 1266 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1267 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1268 : 
; 1269 :         return _Result < 0 ? -1 : _Result;

  0006e	83 7c 24 30 00	 cmp	 DWORD PTR _Result$[rsp], 0
  00073	7d 0a		 jge	 SHORT $LN3@vswprintf_
  00075	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR tv73[rsp], -1
  0007d	eb 08		 jmp	 SHORT $LN4@vswprintf_
$LN3@vswprintf_:
  0007f	8b 44 24 30	 mov	 eax, DWORD PTR _Result$[rsp]
  00083	89 44 24 34	 mov	 DWORD PTR tv73[rsp], eax
$LN4@vswprintf_:
  00087	8b 44 24 34	 mov	 eax, DWORD PTR tv73[rsp]

; 1270 :     }

  0008b	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
_vswprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 86   :     {

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F66CEB67_corecrt_stdio_config@h
  0001c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00021	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
__local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPlugins\subburn\plugin_subburn.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 48
__formal$ = 56
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__8CF94513_plugin_subburn@cpp
  0002a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPlugins\subburn\plugin_subburn.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 48
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__8CF94513_plugin_subburn@cpp
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0002a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002e	5f		 pop	 rdi
  0002f	c3		 ret	 0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
